{attribute,{1,1},file,{"beam_ssa_type.erl",1}}.
{attribute,{29,2},module,beam_ssa_type}.
{attribute,{31,2},
           export,
           [{opt_start,2},{opt_continue,4},{opt_finish,3},{opt_ranges,1}]}.
{attribute,{1,1},file,{"beam_ssa_opt.hrl",1}}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{22,1},file,{"beam_ssa_opt.hrl",22}}.
{attribute,
    {23,2},
    record,
    {func_info,
        [{typed_record_field,
             {record_field,
                 {25,10},
                 {atom,{25,10},in},
                 {call,
                     {25,15},
                     {remote,
                         {25,22},
                         {atom,{25,15},ordsets},
                         {atom,{25,23},new}},
                     []}},
             {remote_type,
                 {25,32},
                 [{atom,{25,32},ordsets},
                  {atom,{25,40},ordset},
                  [{user_type,{25,47},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {26,10},
                 {atom,{26,10},out},
                 {call,
                     {26,16},
                     {remote,
                         {26,23},
                         {atom,{26,16},ordsets},
                         {atom,{26,24},new}},
                     []}},
             {remote_type,
                 {26,33},
                 [{atom,{26,33},ordsets},
                  {atom,{26,41},ordset},
                  [{user_type,{26,48},func_id,[]}]]}},
         {typed_record_field,
             {record_field,
                 {30,10},
                 {atom,{30,10},exported},
                 {atom,{30,21},true}},
             {type,{30,29},boolean,[]}},
         {typed_record_field,
             {record_field,{39,10},{atom,{39,10},arg_types},{nil,{39,22}}},
             {type,{39,28},list,[{user_type,{39,33},arg_type_map,[]}]}},
         {typed_record_field,
             {record_field,{50,10},{atom,{50,10},succ_types},{nil,{50,23}}},
             {user_type,{50,29},success_type_set,[]}}]}}.
{attribute,
    {52,2},
    type,
    {arg_key,
        {type,
            {52,20},
            tuple,
            [{ann_type,
                 {52,21},
                 [{var,{52,21},'CallerId'},{user_type,{52,33},func_id,[]}]},
             {ann_type,
                 {53,21},
                 [{var,{53,21},'CallDst'},
                  {remote_type,
                      {53,32},
                      [{atom,{53,32},beam_ssa},{atom,{53,41},b_var},[]]}]}]},
        []}}.
{attribute,{54,2},
           type,
           {arg_type_map,{type,{54,25},
                               map,
                               [{type,{54,38},
                                      map_field_assoc,
                                      [{user_type,{54,28},arg_key,[]},
                                       {type,{54,41},term,[]}]}]},
                         []}}.
{attribute,
    {56,2},
    type,
    {call_self,
        {type,
            {56,22},
            tuple,
            [{atom,{56,23},call_self},
             {ann_type,
                 {56,34},
                 [{var,{56,34},'ArgTypes'},
                  {type,{56,46},list,[{type,{56,47},term,[]}]}]}]},
        []}}.
{attribute,
    {57,2},
    type,
    {success_type_set,
        {type,
            {57,29},
            list,
            [{type,
                 {57,30},
                 tuple,
                 [{ann_type,
                      {57,31},
                      [{var,{57,31},'ArgTypes'},
                       {type,{57,43},list,[{type,{57,44},term,[]}]}]},
                  {ann_type,
                      {58,31},
                      [{var,{58,31},'RetType'},
                       {type,
                           {58,42},
                           union,
                           [{user_type,{58,42},call_self,[]},
                            {type,{58,56},term,[]}]}]}]}]},
        []}}.
{attribute,{63,2},
           type,
           {func_id,{remote_type,{63,20},
                                 [{atom,{63,20},beam_ssa},
                                  {atom,{63,29},b_local},
                                  []]},
                    []}}.
{attribute,
    {64,2},
    type,
    {func_info_db,
        {type,
            {64,25},
            map,
            [{type,
                 {64,38},
                 map_field_assoc,
                 [{user_type,{64,28},func_id,[]},
                  {type,{64,41},record,[{atom,{64,42},func_info}]}]}]},
        []}}.
{attribute,
    {66,2},
    record,
    {opt_st,
        [{typed_record_field,
             {record_field,{66,18},{atom,{66,18},ssa}},
             {type,
                 {66,25},
                 union,
                 [{type,
                      {66,25},
                      list,
                      [{type,
                           {66,26},
                           tuple,
                           [{remote_type,
                                {66,27},
                                [{atom,{66,27},beam_ssa},
                                 {atom,{66,36},label},
                                 []]},
                            {remote_type,
                                {66,44},
                                [{atom,{66,44},beam_ssa},
                                 {atom,{66,53},b_blk},
                                 []]}]}]},
                  {remote_type,
                      {67,25},
                      [{atom,{67,25},beam_ssa},
                       {atom,{67,34},block_map},
                       []]}]}},
         {typed_record_field,
             {record_field,{68,18},{atom,{68,18},args}},
             {type,
                 {68,26},
                 list,
                 [{remote_type,
                      {68,27},
                      [{atom,{68,27},beam_ssa},{atom,{68,36},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{69,18},{atom,{69,18},cnt}},
             {remote_type,
                 {69,25},
                 [{atom,{69,25},beam_ssa},{atom,{69,34},label},[]]}},
         {typed_record_field,
             {record_field,{70,18},{atom,{70,18},anno}},
             {remote_type,
                 {70,26},
                 [{atom,{70,26},beam_ssa},{atom,{70,35},anno},[]]}}]}}.
{attribute,
    {71,2},
    type,
    {st_map,
        {type,
            {71,19},
            map,
            [{type,
                 {71,32},
                 map_field_assoc,
                 [{user_type,{71,22},func_id,[]},
                  {type,{71,35},record,[{atom,{71,36},opt_st}]}]}]},
        []}}.
{attribute,{34,1},file,{"beam_ssa_type.erl",34}}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{35,1},file,{"beam_ssa_type.erl",35}}.
{attribute,{36,2},
           import,
           {lists,[{duplicate,2},
                   {foldl,3},
                   {member,2},
                   {keyfind,3},
                   {reverse,1},
                   {split,2},
                   {zip,2}]}}.
{attribute,
    {60,2},
    record,
    {metadata,
        [{typed_record_field,
             {record_field,{61,11},{atom,{61,11},func_id}},
             {user_type,{61,22},func_id,[]}},
         {typed_record_field,
             {record_field,{62,11},{atom,{62,11},limit_return}},
             {type,{62,27},boolean,[]}},
         {typed_record_field,
             {record_field,{63,11},{atom,{63,11},params}},
             {type,
                 {63,21},
                 list,
                 [{remote_type,
                      {63,22},
                      [{atom,{63,22},beam_ssa},{atom,{63,31},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{64,11},{atom,{64,11},used_once}},
             {type,
                 {64,24},
                 map,
                 [{type,
                      {64,44},
                      map_field_assoc,
                      [{remote_type,
                           {64,27},
                           [{atom,{64,27},beam_ssa},{atom,{64,36},b_var},[]]},
                       {var,{64,47},'_'}]}]}}]}}.
{attribute,{66,2},
           type,
           {metadata,{type,{66,21},record,[{atom,{66,22},metadata}]},[]}}.
{attribute,{67,2},
           type,
           {meta_cache,{type,{67,23},
                             map,
                             [{type,{67,36},
                                    map_field_assoc,
                                    [{user_type,{67,26},func_id,[]},
                                     {user_type,{67,39},metadata,[]}]}]},
                       []}}.
{attribute,
    {68,2},
    type,
    {type_db,
        {type,
            {68,20},
            map,
            [{type,
                 {68,40},
                 map_field_exact,
                 [{remote_type,
                      {68,23},
                      [{atom,{68,23},beam_ssa},{atom,{68,32},b_var},[]]},
                  {user_type,{68,43},ssa_type,[]}]}]},
        []}}.
{attribute,
    {75,2},
    type,
    {ssa_type,
        {type,
            {75,25},
            union,
            [{type,
                 {75,25},
                 'fun',
                 [{type,{75,25},product,[{user_type,{75,26},type_db,[]}]},
                  {user_type,{75,40},type,[]}]},
             {user_type,{75,50},type,[]}]},
        []}}.
{attribute,{79,2},
           spec,
           {{opt_start,2},
            [{type,{79,16},
                   'fun',
                   [{type,{79,16},
                          product,
                          [{type,{79,17},term,[]},{type,{79,25},term,[]}]},
                    {type,{79,36},term,[]}]}]}}.
{function,
    {80,1},
    opt_start,2,
    [{clause,
         {80,1},
         [{var,{80,1},'_'},{var,{80,1},'_'}],
         [[{call,
               {80,1},
               {remote,
                   {80,1},
                   {atom,{80,1},fake},
                   {atom,{80,1},is_beam_bif_info}},
               []}]],
         [{debug_line,80,1},{atom,{80,1},ignore}]},
     {clause,
         {80,1},
         [{var,{80,11},'StMap'},{var,{80,18},'FuncDb0'}],
         [[{op,{80,40},'=/=',{var,{80,32},'FuncDb0'},{map,{80,44},[]}}]],
         [{debug_line,81,2},
          {match,
              {81,5},
              {tuple,
                  {81,5},
                  [{var,{81,6},'ArgDb'},
                   {var,{81,13},'MetaCache'},
                   {var,{81,24},'FuncDb'}]},
              {call,
                  {81,34},
                  {atom,{81,34},signatures},
                  [{var,{81,45},'StMap'},{var,{81,52},'FuncDb0'}]}},
          {debug_line,83,3},
          {call,
              {83,5},
              {atom,{83,5},opt_start_1},
              [{block,0,
                   [{call,
                        {83,17},
                        {remote,
                            {83,21},
                            {atom,{83,17},maps},
                            {atom,{83,22},keys}},
                        [{var,{83,27},'StMap'}]}]},
               {var,{83,35},'ArgDb'},
               {var,{83,42},'StMap'},
               {var,{83,49},'FuncDb'},
               {var,{83,57},'MetaCache'}]}]},
     {clause,
         {84,1},
         [{var,{84,11},'StMap'},{var,{84,18},'FuncDb'}],
         [],
         [{debug_line,88,4},
          {tuple,{88,5},[{var,{88,6},'StMap'},{var,{88,13},'FuncDb'}]}]}]}.
{function,
 {90,1},
 opt_start_1,5,
 [{clause,
   {90,1},
   [{var,{90,1},'_'},
    {var,{90,1},'_'},
    {var,{90,1},'_'},
    {var,{90,1},'_'},
    {var,{90,1},'_'}],
   [[{call,
      {90,1},
      {remote,{90,1},{atom,{90,1},fake},{atom,{90,1},is_beam_bif_info}},
      []}]],
   [{debug_line,90,5},{atom,{90,1},ignore}]},
  {clause,
   {90,1},
   [{cons,{90,13},{var,{90,14},'Id'},{var,{90,19},'Ids'}},
    {var,{90,25},'ArgDb'},
    {var,{90,32},'StMap0'},
    {var,{90,40},'FuncDb0'},
    {var,{90,49},'MetaCache'}],
   [],
   [{debug_line,91,6},
    {'case',
     {91,5},
     {var,{91,10},'ArgDb'},
     [{clause,
       {92,9},
       [{map,
         {92,9},
         [{map_field_exact,
           {92,15},
           {var,{92,12},'Id'},
           {var,{92,18},'ArgTypes'}}]}],
       [],
       [{debug_line,93,7},
        {match,
         {93,13},
         {tuple,
          {93,13},
          [{atom,{93,13},opt_st},
           {var,{93,25},'Linear0'},
           {var,{93,38},'Args'},
           {var,{93,13},'_'},
           {var,{93,13},'_'}]},
         {match,
          {93,46},
          {var,{93,46},'St0'},
          {call,
           {93,52},
           {remote,{93,52},{atom,{93,52},erlang},{atom,{93,52},map_get}},
           [{var,{93,60},'Id'},{var,{93,64},'StMap0'}]}}},
        {debug_line,95,8},
        {match,
         {95,13},
         {var,{95,13},'Ts'},
         {mc,
          {95,18},
          {map_field_assoc,
           {95,24},
           {block,0,[{var,{95,20},'Arg'}]},
           {block,0,[{var,{95,27},'Type'}]}},
          [{block,0,[{atom,{95,39},true}]},
           {block,0,[{atom,{95,39},true}]},
           {zip,
            {95,39},
            [{generate,{95,39},{var,{95,35},'Arg'},{var,{95,42},'Args'}},
             {generate,
              {95,55},
              {var,{95,50},'Type'},
              {var,{95,58},'ArgTypes'}}]}]}},
        {debug_line,96,9},
        {match,
         {96,13},
         {tuple,{96,13},[{var,{96,14},'Linear'},{var,{96,22},'FuncDb'}]},
         {call,
          {96,32},
          {atom,{96,32},opt_function},
          [{var,{96,45},'Linear0'},
           {var,{96,54},'Args'},
           {var,{96,60},'Id'},
           {var,{96,64},'Ts'},
           {var,{96,68},'FuncDb0'},
           {var,{96,77},'MetaCache'}]}},
        {debug_line,98,10},
        {match,
         {98,13},
         {var,{98,13},'St'},
         {block,
          {98,18},
          [{match,{98,18},{var,{98,18},rec0},{var,{98,18},'St0'}},
           {'case',
            {98,29},
            {var,{98,18},rec0},
            [{clause,
              {98,29},
              [{tuple,
                {98,29},
                [{atom,{98,29},opt_st},
                 {var,{98,29},'_'},
                 {var,{98,29},'_'},
                 {var,{98,29},'_'},
                 {var,{98,29},'_'}]}],
              [],
              [{call,
                {98,29},
                {remote,
                 {98,29},
                 {atom,{98,29},erlang},
                 {atom,{98,29},setelement}},
                [{integer,{98,29},2},
                 {var,{98,18},rec0},
                 {var,{98,33},'Linear'}]}]},
             {clause,
              [{generated,true},{location,{98,29}}],
              [{var,[{generated,true},{location,{98,29}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{98,29}}],
                {remote,
                 [{generated,true},{location,{98,29}}],
                 {atom,[{generated,true},{location,{98,29}}],erlang},
                 {atom,[{generated,true},{location,{98,29}}],error}},
                [{tuple,
                  [{generated,true},{location,{98,29}}],
                  [{atom,[{generated,true},{location,{98,29}}],badrecord},
                   {var,{98,18},rec0}]}]}]}]}]}},
        {debug_line,99,11},
        {match,
         {99,13},
         {var,{99,13},'StMap'},
         {map,
          {99,27},
          {var,{99,21},'StMap0'},
          [{map_field_exact,{99,33},{var,{99,30},'Id'},{var,{99,36},'St'}}]}},
        {debug_line,101,12},
        {call,
         {101,13},
         {atom,{101,13},opt_start_1},
         [{var,{101,25},'Ids'},
          {var,{101,30},'ArgDb'},
          {var,{101,37},'StMap'},
          {var,{101,44},'FuncDb'},
          {var,{101,52},'MetaCache'}]}]},
      {clause,
       {102,9},
       [{map,{102,9},[]}],
       [],
       [{debug_line,106,13},
        {match,
         {106,13},
         {var,{106,13},'StMap'},
         {call,
          {106,21},
          {remote,{106,25},{atom,{106,21},maps},{atom,{106,26},remove}},
          [{var,{106,33},'Id'},{var,{106,37},'StMap0'}]}},
        {debug_line,107,14},
        {match,
         {107,13},
         {var,{107,13},'FuncDb'},
         {call,
          {107,22},
          {remote,{107,26},{atom,{107,22},maps},{atom,{107,27},remove}},
          [{var,{107,34},'Id'},{var,{107,38},'FuncDb0'}]}},
        {debug_line,109,15},
        {call,
         {109,13},
         {atom,{109,13},opt_start_1},
         [{var,{109,25},'Ids'},
          {var,{109,30},'ArgDb'},
          {var,{109,37},'StMap'},
          {var,{109,44},'FuncDb'},
          {var,{109,52},'MetaCache'}]}]}]}]},
  {clause,
   {111,1},
   [{nil,{111,13}},
    {var,{111,17},'_CommittedArgs'},
    {var,{111,33},'StMap'},
    {var,{111,40},'FuncDb'},
    {var,{111,48},'_MetaCache'}],
   [],
   [{debug_line,112,16},
    {tuple,{112,5},[{var,{112,6},'StMap'},{var,{112,13},'FuncDb'}]}]}]}.
{attribute,
    {134,2},
    record,
    {sig_st,
        [{typed_record_field,
             {record_field,
                 {135,11},
                 {atom,{135,11},wl},
                 {call,{135,16},{atom,{135,16},wl_new},[]}},
             {user_type,{135,28},worklist,[]}},
         {typed_record_field,
             {record_field,
                 {136,11},
                 {atom,{136,11},committed},
                 {map,{136,23},[]}},
             {type,
                 {136,30},
                 map,
                 [{type,
                      {136,43},
                      map_field_assoc,
                      [{user_type,{136,33},func_id,[]},
                       {type,
                           {136,46},
                           list,
                           [{user_type,{136,47},type,[]}]}]}]}},
         {typed_record_field,
             {record_field,{137,11},{atom,{137,11},updates},{map,{137,21},[]}},
             {type,
                 {137,28},
                 map,
                 [{type,
                      {137,41},
                      map_field_assoc,
                      [{user_type,{137,31},func_id,[]},
                       {type,
                           {137,44},
                           list,
                           [{user_type,{137,45},type,[]}]}]}]}},
         {typed_record_field,
             {record_field,
                 {138,11},
                 {atom,{138,11},meta_cache},
                 {map,{138,24},[]}},
             {user_type,{138,31},meta_cache,[]}}]}}.
{function,
    {140,1},
    signatures,2,
    [{clause,
         {140,1},
         [{var,{140,1},'_'},{var,{140,1},'_'}],
         [[{call,
               {140,1},
               {remote,
                   {140,1},
                   {atom,{140,1},fake},
                   {atom,{140,1},is_beam_bif_info}},
               []}]],
         [{debug_line,140,17},{atom,{140,1},ignore}]},
     {clause,
         {140,1},
         [{var,{140,12},'StMap'},{var,{140,19},'FuncDb0'}],
         [],
         [{debug_line,141,18},
          {match,
              {141,5},
              {var,{141,5},'State0'},
              {call,
                  {141,14},
                  {atom,{141,14},init_sig_st},
                  [{var,{141,26},'StMap'},{var,{141,33},'FuncDb0'}]}},
          {debug_line,142,19},
          {match,
              {142,5},
              {tuple,{142,5},[{var,{142,6},'State'},{var,{142,13},'FuncDb'}]},
              {call,
                  {142,23},
                  {atom,{142,23},signatures_1},
                  [{var,{142,36},'StMap'},
                   {var,{142,43},'FuncDb0'},
                   {var,{142,52},'State0'}]}},
          {debug_line,143,20},
          {tuple,
              {143,5},
              [{'case',
                   {143,6},
                   {var,{143,6},'State'},
                   [{clause,
                        [{generated,true},{location,{143,6}}],
                        [{tuple,
                             [{generated,true},{location,{143,6}}],
                             [{atom,{143,6},sig_st},
                              {var,{143,6},'_'},
                              {var,{143,6},rec1},
                              {var,{143,6},'_'},
                              {var,{143,6},'_'}]}],
                        [],
                        [{var,{143,6},rec1}]},
                    {clause,
                        [{generated,true},{location,{143,6}}],
                        [{var,{143,6},rec1}],
                        [],
                        [{call,
                             [{generated,true},{location,{143,6}}],
                             {remote,
                                 [{generated,true},{location,{143,6}}],
                                 {atom,
                                     [{generated,true},{location,{143,6}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{143,6}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{143,6}}],
                                  [{atom,
                                       [{generated,true},{location,{143,6}}],
                                       badrecord},
                                   {var,{143,6},rec1}]}]}]}]},
               {'case',
                   {143,30},
                   {var,{143,30},'State'},
                   [{clause,
                        [{generated,true},{location,{143,30}}],
                        [{tuple,
                             [{generated,true},{location,{143,30}}],
                             [{atom,{143,30},sig_st},
                              {var,{143,30},'_'},
                              {var,{143,30},'_'},
                              {var,{143,30},'_'},
                              {var,{143,30},rec2}]}],
                        [],
                        [{var,{143,30},rec2}]},
                    {clause,
                        [{generated,true},{location,{143,30}}],
                        [{var,{143,30},rec2}],
                        [],
                        [{call,
                             [{generated,true},{location,{143,30}}],
                             {remote,
                                 [{generated,true},{location,{143,30}}],
                                 {atom,
                                     [{generated,true},{location,{143,30}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{143,30}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{143,30}}],
                                  [{atom,
                                       [{generated,true},{location,{143,30}}],
                                       badrecord},
                                   {var,{143,30},rec2}]}]}]}]},
               {var,{143,55},'FuncDb'}]}]}]}.
{function,
 {145,1},
 signatures_1,3,
 [{clause,
   {145,1},
   [{var,{145,1},'_'},{var,{145,1},'_'},{var,{145,1},'_'}],
   [[{call,
      {145,1},
      {remote,{145,1},{atom,{145,1},fake},{atom,{145,1},is_beam_bif_info}},
      []}]],
   [{debug_line,145,21},{atom,{145,1},ignore}]},
  {clause,
   {145,1},
   [{var,{145,14},'StMap'},{var,{145,21},'FuncDb0'},{var,{145,30},'State0'}],
   [],
   [{debug_line,146,22},
    {'case',
     {146,5},
     {call,
      {146,10},
      {atom,{146,10},wl_next},
      [{block,0,
        [{'case',
          {146,18},
          {var,{146,18},'State0'},
          [{clause,
            [{generated,true},{location,{146,18}}],
            [{tuple,
              [{generated,true},{location,{146,18}}],
              [{atom,{146,18},sig_st},
               {var,{146,18},rec3},
               {var,{146,18},'_'},
               {var,{146,18},'_'},
               {var,{146,18},'_'}]}],
            [],
            [{var,{146,18},rec3}]},
           {clause,
            [{generated,true},{location,{146,18}}],
            [{var,{146,18},rec3}],
            [],
            [{call,
              [{generated,true},{location,{146,18}}],
              {remote,
               [{generated,true},{location,{146,18}}],
               {atom,[{generated,true},{location,{146,18}}],erlang},
               {atom,[{generated,true},{location,{146,18}}],error}},
              [{tuple,
                [{generated,true},{location,{146,18}}],
                [{atom,[{generated,true},{location,{146,18}}],badrecord},
                 {var,{146,18},rec3}]}]}]}]}]}]},
     [{clause,
       {147,9},
       [{tuple,{147,9},[{atom,{147,10},ok},{var,{147,14},'FuncId'}]}],
       [],
       [{debug_line,148,23},
        {match,
         {148,13},
         {tuple,{148,13},[{var,{148,14},'State'},{var,{148,21},'FuncDb'}]},
         {call,
          {148,31},
          {atom,{148,31},sig_function},
          [{var,{148,44},'FuncId'},
           {var,{148,52},'StMap'},
           {var,{148,59},'State0'},
           {var,{148,67},'FuncDb0'}]}},
        {debug_line,149,24},
        {call,
         {149,13},
         {atom,{149,13},signatures_1},
         [{var,{149,26},'StMap'},
          {var,{149,33},'FuncDb'},
          {var,{149,41},'State'}]}]},
      {clause,
       {150,9},
       [{atom,{150,9},empty}],
       [],
       [{debug_line,153,25},
        {match,
         {153,13},
         {tuple,
          {153,13},
          [{atom,{153,13},sig_st},
           {var,{153,13},'_'},
           {var,{153,44},'Same'},
           {var,{153,29},'Same'},
           {var,{153,13},'_'}]},
         {var,{153,52},'State0'}},
        {debug_line,155,26},
        {tuple,
         {155,13},
         [{var,{155,14},'State0'},{var,{155,22},'FuncDb0'}]}]}]}]}]}.
{function,
    {158,1},
    sig_function,4,
    [{clause,
         {158,1},
         [{var,{158,1},'_'},
          {var,{158,1},'_'},
          {var,{158,1},'_'},
          {var,{158,1},'_'}],
         [[{call,
               {158,1},
               {remote,
                   {158,1},
                   {atom,{158,1},fake},
                   {atom,{158,1},is_beam_bif_info}},
               []}]],
         [{debug_line,158,27},{atom,{158,1},ignore}]},
     {clause,
         {158,1},
         [{var,{158,14},'Id'},
          {var,{158,18},'StMap'},
          {var,{158,25},'State'},
          {var,{158,32},'FuncDb'}],
         [],
         [{debug_line,159,28},
          {'try',
              {159,5},
              [{debug_line,160,29},
               {call,
                   {160,9},
                   {atom,{160,9},do_sig_function},
                   [{var,{160,25},'Id'},
                    {var,{160,29},'StMap'},
                    {var,{160,36},'State'},
                    {var,{160,43},'FuncDb'}]}],
              [],
              [{clause,
                   {162,9},
                   [{tuple,
                        {162,9},
                        [{var,{162,9},'Class'},
                         {var,{162,15},'Error'},
                         {var,{162,21},'Stack'}]}],
                   [],
                   [{debug_line,163,30},
                    {match,
                        {163,13},
                        {tuple,
                            {163,13},
                            [{atom,{163,13},b_local},
                             {tuple,
                                 {163,27},
                                 [{atom,{163,27},b_literal},
                                  {var,{163,42},'Name'}]},
                             {var,{163,54},'Arity'}]},
                        {var,{163,63},'Id'}},
                    {debug_line,164,31},
                    {call,
                        {164,13},
                        {remote,
                            {164,15},
                            {atom,{164,13},io},
                            {atom,{164,16},fwrite}},
                        [{block,0,[{string,{164,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {164,44},
                                  {var,{164,45},'Name'},
                                  {cons,
                                      {164,50},
                                      {var,{164,50},'Arity'},
                                      {nil,{164,55}}}}]}]},
                    {debug_line,165,32},
                    {call,
                        {165,13},
                        {remote,
                            {165,19},
                            {atom,{165,13},erlang},
                            {atom,{165,20},raise}},
                        [{var,{165,26},'Class'},
                         {var,{165,33},'Error'},
                         {var,{165,40},'Stack'}]}]}],
              []}]}]}.
{function,
 {168,1},
 do_sig_function,4,
 [{clause,
   {168,1},
   [{var,{168,1},'_'},{var,{168,1},'_'},{var,{168,1},'_'},{var,{168,1},'_'}],
   [[{call,
      {168,1},
      {remote,{168,1},{atom,{168,1},fake},{atom,{168,1},is_beam_bif_info}},
      []}]],
   [{debug_line,168,33},{atom,{168,1},ignore}]},
  {clause,
   {168,1},
   [{var,{168,17},'Id'},
    {var,{168,21},'StMap'},
    {var,{168,28},'State0'},
    {var,{168,36},'FuncDb0'}],
   [],
   [{debug_line,169,34},
    {'case',
     {169,5},
     {call,
      {169,10},
      {atom,{169,10},sig_function_1},
      [{var,{169,25},'Id'},
       {var,{169,29},'StMap'},
       {var,{169,36},'State0'},
       {var,{169,44},'FuncDb0'}]},
     [{clause,
       {170,9},
       [{tuple,
         {170,9},
         [{atom,{170,10},false},
          {atom,{170,17},false},
          {var,{170,24},'State'},
          {var,{170,31},'FuncDb'}]}],
       [],
       [{debug_line,173,35},
        {match,
         {173,13},
         {var,{173,13},'Wl'},
         {call,
          {173,18},
          {atom,{173,18},wl_pop},
          [{var,{173,25},'Id'},
           {block,0,
            [{'case',
              {173,29},
              {var,{173,29},'State'},
              [{clause,
                [{generated,true},{location,{173,29}}],
                [{tuple,
                  [{generated,true},{location,{173,29}}],
                  [{atom,{173,29},sig_st},
                   {var,{173,29},rec4},
                   {var,{173,29},'_'},
                   {var,{173,29},'_'},
                   {var,{173,29},'_'}]}],
                [],
                [{var,{173,29},rec4}]},
               {clause,
                [{generated,true},{location,{173,29}}],
                [{var,{173,29},rec4}],
                [],
                [{call,
                  [{generated,true},{location,{173,29}}],
                  {remote,
                   [{generated,true},{location,{173,29}}],
                   {atom,[{generated,true},{location,{173,29}}],erlang},
                   {atom,[{generated,true},{location,{173,29}}],error}},
                  [{tuple,
                    [{generated,true},{location,{173,29}}],
                    [{atom,[{generated,true},{location,{173,29}}],badrecord},
                     {var,{173,29},rec4}]}]}]}]}]}]}},
        {debug_line,174,36},
        {tuple,
         {174,13},
         [{block,
           {174,14},
           [{match,{174,14},{var,{174,14},rec5},{var,{174,14},'State'}},
            {'case',
             {174,27},
             {var,{174,14},rec5},
             [{clause,
               {174,27},
               [{tuple,
                 {174,27},
                 [{atom,{174,27},sig_st},
                  {var,{174,27},'_'},
                  {var,{174,27},'_'},
                  {var,{174,27},'_'},
                  {var,{174,27},'_'}]}],
               [],
               [{call,
                 {174,27},
                 {remote,
                  {174,27},
                  {atom,{174,27},erlang},
                  {atom,{174,27},setelement}},
                 [{integer,{174,27},2},
                  {var,{174,14},rec5},
                  {var,{174,30},'Wl'}]}]},
              {clause,
               [{generated,true},{location,{174,27}}],
               [{var,[{generated,true},{location,{174,27}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{174,27}}],
                 {remote,
                  [{generated,true},{location,{174,27}}],
                  {atom,[{generated,true},{location,{174,27}}],erlang},
                  {atom,[{generated,true},{location,{174,27}}],error}},
                 [{tuple,
                   [{generated,true},{location,{174,27}}],
                   [{atom,[{generated,true},{location,{174,27}}],badrecord},
                    {var,{174,14},rec5}]}]}]}]}]},
          {var,{174,35},'FuncDb'}]}]},
      {clause,
       {175,9},
       [{tuple,
         {175,9},
         [{atom,{175,10},false},
          {atom,{175,17},true},
          {var,{175,23},'State'},
          {var,{175,30},'FuncDb'}]}],
       [],
       [{debug_line,180,37},
        {tuple,{180,13},[{var,{180,14},'State'},{var,{180,21},'FuncDb'}]}]},
      {clause,
       {181,9},
       [{tuple,
         {181,9},
         [{atom,{181,10},true},
          {var,{181,16},'WlChanged'},
          {var,{181,27},'State'},
          {var,{181,34},'FuncDb'}]}],
       [],
       [{debug_line,188,38},
        {match,
         {188,13},
         {var,{188,13},'Wl0'},
         {'case',
          {188,19},
          {var,{188,24},'WlChanged'},
          [{clause,
            {189,23},
            [{atom,{189,23},true}],
            [],
            [{debug_line,189,39},
             {'case',
              {189,31},
              {var,{189,31},'State'},
              [{clause,
                [{generated,true},{location,{189,31}}],
                [{tuple,
                  [{generated,true},{location,{189,31}}],
                  [{atom,{189,31},sig_st},
                   {var,{189,31},rec6},
                   {var,{189,31},'_'},
                   {var,{189,31},'_'},
                   {var,{189,31},'_'}]}],
                [],
                [{var,{189,31},rec6}]},
               {clause,
                [{generated,true},{location,{189,31}}],
                [{var,{189,31},rec6}],
                [],
                [{call,
                  [{generated,true},{location,{189,31}}],
                  {remote,
                   [{generated,true},{location,{189,31}}],
                   {atom,[{generated,true},{location,{189,31}}],erlang},
                   {atom,[{generated,true},{location,{189,31}}],error}},
                  [{tuple,
                    [{generated,true},{location,{189,31}}],
                    [{atom,[{generated,true},{location,{189,31}}],badrecord},
                     {var,{189,31},rec6}]}]}]}]}]},
           {clause,
            {190,23},
            [{atom,{190,23},false}],
            [],
            [{debug_line,190,40},
             {call,
              {190,32},
              {atom,{190,32},wl_pop},
              [{var,{190,39},'Id'},
               {block,0,
                [{'case',
                  {190,43},
                  {var,{190,43},'State'},
                  [{clause,
                    [{generated,true},{location,{190,43}}],
                    [{tuple,
                      [{generated,true},{location,{190,43}}],
                      [{atom,{190,43},sig_st},
                       {var,{190,43},rec7},
                       {var,{190,43},'_'},
                       {var,{190,43},'_'},
                       {var,{190,43},'_'}]}],
                    [],
                    [{var,{190,43},rec7}]},
                   {clause,
                    [{generated,true},{location,{190,43}}],
                    [{var,{190,43},rec7}],
                    [],
                    [{call,
                      [{generated,true},{location,{190,43}}],
                      {remote,
                       [{generated,true},{location,{190,43}}],
                       {atom,[{generated,true},{location,{190,43}}],erlang},
                       {atom,[{generated,true},{location,{190,43}}],error}},
                      [{tuple,
                        [{generated,true},{location,{190,43}}],
                        [{atom,
                          [{generated,true},{location,{190,43}}],
                          badrecord},
                         {var,{190,43},rec7}]}]}]}]}]}]}]}]}},
        {debug_line,193,41},
        {match,
         {193,13},
         {tuple,
          {193,13},
          [{atom,{193,13},func_info},
           {var,{193,27},'Cs0'},
           {var,{193,13},'_'},
           {var,{193,13},'_'},
           {var,{193,13},'_'},
           {var,{193,13},'_'}]},
         {call,
          {193,34},
          {remote,{193,34},{atom,{193,34},erlang},{atom,{193,34},map_get}},
          [{var,{193,42},'Id'},{var,{193,46},'FuncDb0'}]}},
        {debug_line,194,42},
        {match,
         {194,13},
         {var,{194,13},'Updates'},
         {'case',
          {194,23},
          {var,{194,23},'State'},
          [{clause,
            [{generated,true},{location,{194,23}}],
            [{tuple,
              [{generated,true},{location,{194,23}}],
              [{atom,{194,23},sig_st},
               {var,{194,23},'_'},
               {var,{194,23},'_'},
               {var,{194,23},rec8},
               {var,{194,23},'_'}]}],
            [],
            [{var,{194,23},rec8}]},
           {clause,
            [{generated,true},{location,{194,23}}],
            [{var,{194,23},rec8}],
            [],
            [{call,
              [{generated,true},{location,{194,23}}],
              {remote,
               [{generated,true},{location,{194,23}}],
               {atom,[{generated,true},{location,{194,23}}],erlang},
               {atom,[{generated,true},{location,{194,23}}],error}},
              [{tuple,
                [{generated,true},{location,{194,23}}],
                [{atom,[{generated,true},{location,{194,23}}],badrecord},
                 {var,{194,23},rec8}]}]}]}]}},
        {debug_line,195,43},
        {match,
         {195,13},
         {var,{195,13},'Callers'},
         {lc,
          {195,23},
          {block,0,[{var,{195,24},'C'}]},
          [{block,0,[{atom,{195,34},true}]},
           {generate,{195,31},{var,{195,29},'C'},{var,{195,34},'Cs0'}},
           {block,0,[{atom,{195,39},true}]},
           {call,
            {195,39},
            {remote,
             {195,39},
             {atom,{195,39},erlang},
             {atom,{195,39},is_map_key}},
            [{var,{195,50},'C'},{var,{195,53},'Updates'}]}]}},
        {debug_line,196,44},
        {match,
         {196,13},
         {var,{196,13},'Wl'},
         {call,
          {196,18},
          {atom,{196,18},wl_defer_list},
          [{var,{196,32},'Callers'},{var,{196,41},'Wl0'}]}},
        {debug_line,198,45},
        {tuple,
         {198,13},
         [{block,
           {198,14},
           [{match,{198,14},{var,{198,14},rec9},{var,{198,14},'State'}},
            {'case',
             {198,27},
             {var,{198,14},rec9},
             [{clause,
               {198,27},
               [{tuple,
                 {198,27},
                 [{atom,{198,27},sig_st},
                  {var,{198,27},'_'},
                  {var,{198,27},'_'},
                  {var,{198,27},'_'},
                  {var,{198,27},'_'}]}],
               [],
               [{call,
                 {198,27},
                 {remote,
                  {198,27},
                  {atom,{198,27},erlang},
                  {atom,{198,27},setelement}},
                 [{integer,{198,27},2},
                  {var,{198,14},rec9},
                  {var,{198,30},'Wl'}]}]},
              {clause,
               [{generated,true},{location,{198,27}}],
               [{var,[{generated,true},{location,{198,27}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{198,27}}],
                 {remote,
                  [{generated,true},{location,{198,27}}],
                  {atom,[{generated,true},{location,{198,27}}],erlang},
                  {atom,[{generated,true},{location,{198,27}}],error}},
                 [{tuple,
                   [{generated,true},{location,{198,27}}],
                   [{atom,[{generated,true},{location,{198,27}}],badrecord},
                    {var,{198,14},rec9}]}]}]}]}]},
          {var,{198,35},'FuncDb'}]}]}]}]}]}.
{function,
 {201,1},
 sig_function_1,4,
 [{clause,
   {201,1},
   [{var,{201,1},'_'},{var,{201,1},'_'},{var,{201,1},'_'},{var,{201,1},'_'}],
   [[{call,
      {201,1},
      {remote,{201,1},{atom,{201,1},fake},{atom,{201,1},is_beam_bif_info}},
      []}]],
   [{debug_line,201,46},{atom,{201,1},ignore}]},
  {clause,
   {201,1},
   [{var,{201,16},'Id'},
    {var,{201,20},'StMap'},
    {var,{201,27},'State0'},
    {var,{201,35},'FuncDb'}],
   [],
   [{debug_line,202,47},
    {match,
     {202,5},
     {tuple,
      {202,5},
      [{atom,{202,5},opt_st},
       {var,{202,17},'Linear'},
       {var,{202,29},'Args'},
       {var,{202,5},'_'},
       {var,{202,5},'_'}]},
     {call,
      {202,37},
      {remote,{202,37},{atom,{202,37},erlang},{atom,{202,37},map_get}},
      [{var,{202,45},'Id'},{var,{202,49},'StMap'}]}},
    {debug_line,204,48},
    {match,
     {204,5},
     {tuple,{204,5},[{var,{204,6},'ArgTypes'},{var,{204,16},'State1'}]},
     {call,
      {204,26},
      {atom,{204,26},sig_commit_args},
      [{var,{204,42},'Id'},{var,{204,46},'State0'}]}},
    {debug_line,205,49},
    {match,
     {205,5},
     {var,{205,5},'Ts'},
     {mc,
      {205,10},
      {map_field_assoc,
       {205,16},
       {block,0,[{var,{205,12},'Arg'}]},
       {block,0,[{var,{205,19},'Type'}]}},
      [{block,0,[{atom,{205,31},true}]},
       {block,0,[{atom,{205,31},true}]},
       {zip,
        {205,31},
        [{generate,{205,31},{var,{205,27},'Arg'},{var,{205,34},'Args'}},
         {generate,
          {205,47},
          {var,{205,42},'Type'},
          {var,{205,50},'ArgTypes'}}]}]}},
    {debug_line,207,50},
    {match,
     {207,5},
     {var,{207,5},'FakeCall'},
     {tuple,
      {207,16},
      [{atom,{207,16},b_set},
       {map,{207,16},[]},
       {atom,{207,16},none},
       {atom,{207,26},call},
       {cons,
        {207,36},
        {tuple,
         {207,37},
         [{atom,{207,37},b_remote},
          {tuple,{207,51},[{atom,{207,51},b_literal},{atom,{207,66},unknown}]},
          {tuple,{208,52},[{atom,{208,52},b_literal},{atom,{208,67},unknown}]},
          {integer,{209,53},0}]},
        {nil,{209,55}}}]}},
    {debug_line,211,51},
    {match,
     {211,5},
     {var,{211,5},'Ds'},
     {mc,
      {211,10},
      {map_field_assoc,
       {211,16},
       {block,0,[{var,{211,12},'Var'}]},
       {block,0,
        [{block,
          {211,19},
          [{match,{211,19},{var,{211,19},rec10},{var,{211,19},'FakeCall'}},
           {'case',
            {211,34},
            {var,{211,19},rec10},
            [{clause,
              {211,34},
              [{tuple,
                {211,34},
                [{atom,{211,34},b_set},
                 {var,{211,34},'_'},
                 {var,{211,34},'_'},
                 {var,{211,34},'_'},
                 {var,{211,34},'_'}]}],
              [],
              [{call,
                {211,34},
                {remote,
                 {211,34},
                 {atom,{211,34},erlang},
                 {atom,{211,34},setelement}},
                [{integer,{211,34},3},
                 {var,{211,19},rec10},
                 {var,{211,38},'Var'}]}]},
             {clause,
              [{generated,true},{location,{211,34}}],
              [{var,[{generated,true},{location,{211,34}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{211,34}}],
                {remote,
                 [{generated,true},{location,{211,34}}],
                 {atom,[{generated,true},{location,{211,34}}],erlang},
                 {atom,[{generated,true},{location,{211,34}}],error}},
                [{tuple,
                  [{generated,true},{location,{211,34}}],
                  [{atom,[{generated,true},{location,{211,34}}],badrecord},
                   {var,{211,19},rec10}]}]}]}]}]}]}},
      [{block,0,[{debug_line,212,52},{atom,{212,30},true}]},
       {generate,
        {212,27},
        {match,
         {212,14},
         {tuple,{212,14},[{atom,{212,14},b_var},{var,{212,14},'_'}]},
         {var,{212,23},'Var'}},
        {var,{212,30},'Args'}}]}},
    {debug_line,214,53},
    {match,
     {214,5},
     {var,{214,5},'Ls'},
     {map,
      {214,10},
      [{map_field_assoc,
        {214,30},
        {integer,{214,14},1},
        {tuple,{214,33},[{atom,{214,34},incoming},{var,{214,44},'Ts'}]}},
       {map_field_assoc,
        {215,15},
        {integer,{215,13},0},
        {tuple,{215,18},[{atom,{215,19},incoming},{var,{215,29},'Ts'}]}}]}},
    {debug_line,217,54},
    {match,
     {217,5},
     {tuple,{217,5},[{var,{217,6},'Meta'},{var,{217,12},'State2'}]},
     {call,
      {217,22},
      {atom,{217,22},sig_init_metadata},
      [{var,{217,40},'Id'},
       {var,{217,44},'Linear'},
       {var,{217,52},'Args'},
       {var,{217,58},'State1'}]}},
    {debug_line,219,55},
    {match,
     {219,5},
     {var,{219,5},'Wl0'},
     {'case',
      {219,11},
      {var,{219,11},'State1'},
      [{clause,
        [{generated,true},{location,{219,11}}],
        [{tuple,
          [{generated,true},{location,{219,11}}],
          [{atom,{219,11},sig_st},
           {var,{219,11},rec11},
           {var,{219,11},'_'},
           {var,{219,11},'_'},
           {var,{219,11},'_'}]}],
        [],
        [{var,{219,11},rec11}]},
       {clause,
        [{generated,true},{location,{219,11}}],
        [{var,{219,11},rec11}],
        [],
        [{call,
          [{generated,true},{location,{219,11}}],
          {remote,
           [{generated,true},{location,{219,11}}],
           {atom,[{generated,true},{location,{219,11}}],erlang},
           {atom,[{generated,true},{location,{219,11}}],error}},
          [{tuple,
            [{generated,true},{location,{219,11}}],
            [{atom,[{generated,true},{location,{219,11}}],badrecord},
             {var,{219,11},rec11}]}]}]}]}},
    {debug_line,221,56},
    {match,
     {221,5},
     {tuple,{221,5},[{var,{221,6},'State'},{var,{221,13},'SuccTypes'}]},
     {call,
      {221,26},
      {atom,{221,26},sig_bs},
      [{var,{221,33},'Linear'},
       {var,{221,41},'Ds'},
       {var,{221,45},'Ls'},
       {var,{221,49},'FuncDb'},
       {block,0,[{map,{221,57},[]}]},
       {nil,{221,62}},
       {var,{221,66},'Meta'},
       {var,{221,72},'State2'}]}},
    {debug_line,223,57},
    {match,
     {223,5},
     {var,{223,5},'WlChanged'},
     {call,
      {223,17},
      {atom,{223,17},wl_changed},
      [{var,{223,28},'Wl0'},
       {block,0,
        [{'case',
          {223,33},
          {var,{223,33},'State'},
          [{clause,
            [{generated,true},{location,{223,33}}],
            [{tuple,
              [{generated,true},{location,{223,33}}],
              [{atom,{223,33},sig_st},
               {var,{223,33},rec12},
               {var,{223,33},'_'},
               {var,{223,33},'_'},
               {var,{223,33},'_'}]}],
            [],
            [{var,{223,33},rec12}]},
           {clause,
            [{generated,true},{location,{223,33}}],
            [{var,{223,33},rec12}],
            [],
            [{call,
              [{generated,true},{location,{223,33}}],
              {remote,
               [{generated,true},{location,{223,33}}],
               {atom,[{generated,true},{location,{223,33}}],erlang},
               {atom,[{generated,true},{location,{223,33}}],error}},
              [{tuple,
                [{generated,true},{location,{223,33}}],
                [{atom,[{generated,true},{location,{223,33}}],badrecord},
                 {var,{223,33},rec12}]}]}]}]}]}]}},
    {debug_line,224,58},
    {match,
     {224,5},
     {map,
      {224,5},
      [{map_field_exact,
        {224,11},
        {var,{224,8},'Id'},
        {match,
         {224,14},
         {tuple,
          {224,14},
          [{atom,{224,14},func_info},
           {var,{224,14},'_'},
           {var,{224,14},'_'},
           {var,{224,14},'_'},
           {var,{224,14},'_'},
           {var,{224,36},'SuccTypes0'}]},
         {var,{224,48},'Entry0'}}}]},
     {var,{224,59},'FuncDb'}},
    {debug_line,226,59},
    {'if',
     {226,5},
     [{clause,
       {227,9},
       [],
       [[{op,
          {227,20},
          '=:=',
          {var,{227,9},'SuccTypes0'},
          {var,{227,24},'SuccTypes'}}]],
       [{debug_line,228,60},
        {tuple,
         {228,13},
         [{atom,{228,14},false},
          {var,{228,21},'WlChanged'},
          {var,{228,32},'State'},
          {var,{228,39},'FuncDb'}]}]},
      {clause,
       {229,9},
       [],
       [[{op,
          {229,20},
          '=/=',
          {var,{229,9},'SuccTypes0'},
          {var,{229,24},'SuccTypes'}}]],
       [{debug_line,230,61},
        {match,
         {230,13},
         {var,{230,13},'Entry'},
         {block,
          {230,21},
          [{match,{230,21},{var,{230,21},rec13},{var,{230,21},'Entry0'}},
           {'case',
            {230,38},
            {var,{230,21},rec13},
            [{clause,
              {230,38},
              [{tuple,
                {230,38},
                [{atom,{230,38},func_info},
                 {var,{230,38},'_'},
                 {var,{230,38},'_'},
                 {var,{230,38},'_'},
                 {var,{230,38},'_'},
                 {var,{230,38},'_'}]}],
              [],
              [{call,
                {230,38},
                {remote,
                 {230,38},
                 {atom,{230,38},erlang},
                 {atom,{230,38},setelement}},
                [{integer,{230,38},6},
                 {var,{230,21},rec13},
                 {var,{230,49},'SuccTypes'}]}]},
             {clause,
              [{generated,true},{location,{230,38}}],
              [{var,[{generated,true},{location,{230,38}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{230,38}}],
                {remote,
                 [{generated,true},{location,{230,38}}],
                 {atom,[{generated,true},{location,{230,38}}],erlang},
                 {atom,[{generated,true},{location,{230,38}}],error}},
                [{tuple,
                  [{generated,true},{location,{230,38}}],
                  [{atom,[{generated,true},{location,{230,38}}],badrecord},
                   {var,{230,21},rec13}]}]}]}]}]}},
        {debug_line,231,62},
        {tuple,
         {231,13},
         [{atom,{231,14},true},
          {var,{231,20},'WlChanged'},
          {var,{231,31},'State'},
          {map,
           {231,44},
           {var,{231,38},'FuncDb'},
           [{map_field_exact,
             {231,50},
             {var,{231,47},'Id'},
             {var,{231,53},'Entry'}}]}]}]}]}]}]}.
{function,
 {236,1},
 sig_init_metadata,4,
 [{clause,
   {236,1},
   [{var,{236,1},'_'},{var,{236,1},'_'},{var,{236,1},'_'},{var,{236,1},'_'}],
   [[{call,
      {236,1},
      {remote,{236,1},{atom,{236,1},fake},{atom,{236,1},is_beam_bif_info}},
      []}]],
   [{debug_line,236,63},{atom,{236,1},ignore}]},
  {clause,
   {236,1},
   [{var,{236,19},'Id'},
    {var,{236,23},'Linear'},
    {var,{236,31},'Args'},
    {match,
     {236,37},
     {tuple,
      {236,37},
      [{atom,{236,37},sig_st},
       {var,{236,37},'_'},
       {var,{236,37},'_'},
       {var,{236,37},'_'},
       {var,{236,56},'MetaCache'}]},
     {var,{236,69},'State'}}],
   [],
   [{debug_line,237,64},
    {'case',
     {237,5},
     {var,{237,10},'MetaCache'},
     [{clause,
       {238,9},
       [{map,
         {238,9},
         [{map_field_exact,
           {238,14},
           {var,{238,11},'Id'},
           {var,{238,17},'Meta'}}]}],
       [],
       [{debug_line,239,65},
        {tuple,{239,13},[{var,{239,14},'Meta'},{var,{239,20},'State'}]}]},
      {clause,
       {240,9},
       [{map,{240,9},[]}],
       [],
       [{debug_line,241,66},
        {match,
         {241,13},
         {var,{241,13},'Meta'},
         {call,
          {241,20},
          {atom,{241,20},init_metadata},
          [{var,{241,34},'Id'},
           {var,{241,38},'Linear'},
           {var,{241,46},'Args'}]}},
        {debug_line,242,67},
        {tuple,
         {242,13},
         [{var,{242,14},'Meta'},
          {block,
           {242,20},
           [{match,
             {242,33},
             {var,{242,33},rec14},
             {map,
              {242,53},
              {var,{242,44},'MetaCache'},
              [{map_field_assoc,
                {242,58},
                {var,{242,55},'Id'},
                {var,{242,61},'Meta'}}]}},
            {match,{242,20},{var,{242,20},rec15},{var,{242,20},'State'}},
            {'case',
             {242,33},
             {var,{242,20},rec15},
             [{clause,
               {242,33},
               [{tuple,
                 {242,33},
                 [{atom,{242,33},sig_st},
                  {var,{242,33},'_'},
                  {var,{242,33},'_'},
                  {var,{242,33},'_'},
                  {var,{242,33},'_'}]}],
               [],
               [{call,
                 {242,33},
                 {remote,
                  {242,33},
                  {atom,{242,33},erlang},
                  {atom,{242,33},setelement}},
                 [{integer,{242,33},5},
                  {var,{242,20},rec15},
                  {var,{242,33},rec14}]}]},
              {clause,
               [{generated,true},{location,{242,33}}],
               [{var,[{generated,true},{location,{242,33}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{242,33}}],
                 {remote,
                  [{generated,true},{location,{242,33}}],
                  {atom,[{generated,true},{location,{242,33}}],erlang},
                  {atom,[{generated,true},{location,{242,33}}],error}},
                 [{tuple,
                   [{generated,true},{location,{242,33}}],
                   [{atom,[{generated,true},{location,{242,33}}],badrecord},
                    {var,{242,20},rec15}]}]}]}]}]}]}]}]}]}]}.
{function,
 {245,1},
 sig_bs,8,
 [{clause,
   {245,1},
   [{var,{245,1},'_'},
    {var,{245,1},'_'},
    {var,{245,1},'_'},
    {var,{245,1},'_'},
    {var,{245,1},'_'},
    {var,{245,1},'_'},
    {var,{245,1},'_'},
    {var,{245,1},'_'}],
   [[{call,
      {245,1},
      {remote,{245,1},{atom,{245,1},fake},{atom,{245,1},is_beam_bif_info}},
      []}]],
   [{debug_line,245,68},{atom,{245,1},ignore}]},
  {clause,
   {245,1},
   [{cons,
     {245,8},
     {tuple,
      {245,9},
      [{var,{245,10},'L'},
       {tuple,
        {245,13},
        [{atom,{245,13},b_blk},
         {var,{245,13},'_'},
         {var,{245,23},'Is'},
         {var,{245,31},'Last0'}]}]},
     {var,{245,41},'Bs'}},
    {var,{246,8},'Ds0'},
    {var,{246,13},'Ls0'},
    {var,{246,18},'Fdb'},
    {var,{246,23},'Sub0'},
    {var,{246,29},'SuccTypes0'},
    {var,{246,41},'Meta'},
    {var,{246,47},'State0'}],
   [],
   [{debug_line,247,69},
    {'case',
     {247,5},
     {var,{247,10},'Ls0'},
     [{clause,
       {248,9},
       [{map,
         {248,9},
         [{map_field_exact,
           {248,14},
           {var,{248,12},'L'},
           {var,{248,17},'Incoming'}}]}],
       [],
       [{debug_line,249,70},
        {match,
         {249,13},
         {tuple,{249,13},[{atom,{249,14},incoming},{var,{249,24},'Ts0'}]},
         {var,{249,31},'Incoming'}},
        {debug_line,251,71},
        {match,
         {251,13},
         {tuple,
          {251,13},
          [{var,{251,14},'Ts'},
           {var,{251,18},'Ds'},
           {var,{251,22},'Sub'},
           {var,{251,27},'State'}]},
         {call,
          {252,17},
          {atom,{252,17},sig_is},
          [{var,{252,24},'Is'},
           {var,{252,28},'Ts0'},
           {var,{252,33},'Ds0'},
           {var,{252,38},'Ls0'},
           {var,{252,43},'Fdb'},
           {var,{252,48},'Sub0'},
           {var,{252,54},'State0'}]}},
        {debug_line,254,72},
        {match,
         {254,13},
         {var,{254,13},'Last'},
         {call,
          {254,20},
          {atom,{254,20},simplify_terminator},
          [{var,{254,40},'Last0'},
           {var,{254,47},'Ts'},
           {var,{254,51},'Ds'},
           {var,{254,55},'Sub'}]}},
        {debug_line,255,73},
        {match,
         {255,13},
         {var,{255,13},'SuccTypes'},
         {call,
          {255,25},
          {atom,{255,25},update_success_types},
          [{var,{255,46},'Last'},
           {var,{255,52},'Ts'},
           {var,{255,56},'Ds'},
           {var,{255,60},'Meta'},
           {var,{255,66},'SuccTypes0'}]}},
        {debug_line,257,74},
        {match,
         {257,13},
         {var,{257,13},'UsedOnce'},
         {'case',
          {257,24},
          {var,{257,24},'Meta'},
          [{clause,
            [{generated,true},{location,{257,24}}],
            [{tuple,
              [{generated,true},{location,{257,24}}],
              [{atom,{257,24},metadata},
               {var,{257,24},'_'},
               {var,{257,24},'_'},
               {var,{257,24},'_'},
               {var,{257,24},rec16}]}],
            [],
            [{var,{257,24},rec16}]},
           {clause,
            [{generated,true},{location,{257,24}}],
            [{var,{257,24},rec16}],
            [],
            [{call,
              [{generated,true},{location,{257,24}}],
              {remote,
               [{generated,true},{location,{257,24}}],
               {atom,[{generated,true},{location,{257,24}}],erlang},
               {atom,[{generated,true},{location,{257,24}}],error}},
              [{tuple,
                [{generated,true},{location,{257,24}}],
                [{atom,[{generated,true},{location,{257,24}}],badrecord},
                 {var,{257,24},rec16}]}]}]}]}},
        {debug_line,258,75},
        {match,
         {258,13},
         {tuple,{258,13},[{var,{258,14},'_'},{var,{258,17},'Ls1'}]},
         {call,
          {258,24},
          {atom,{258,24},update_successors},
          [{var,{258,42},'Last'},
           {var,{258,48},'Ts'},
           {var,{258,52},'Ds'},
           {var,{258,56},'Ls0'},
           {var,{258,61},'UsedOnce'}]}},
        {debug_line,264,76},
        {match,
         {264,13},
         {var,{264,13},'Ls'},
         {map,
          {264,21},
          {var,{264,18},'Ls1'},
          [{map_field_exact,
            {264,26},
            {var,{264,24},'L'},
            {tuple,
             {264,29},
             [{atom,{264,30},outgoing},{var,{264,40},'Ts'}]}}]}},
        {debug_line,265,77},
        {call,
         {265,13},
         {atom,{265,13},sig_bs},
         [{var,{265,20},'Bs'},
          {var,{265,24},'Ds'},
          {var,{265,28},'Ls'},
          {var,{265,32},'Fdb'},
          {var,{265,37},'Sub'},
          {var,{265,42},'SuccTypes'},
          {var,{265,53},'Meta'},
          {var,{265,59},'State'}]}]},
      {clause,
       {266,9},
       [{map,{266,9},[]}],
       [],
       [{debug_line,268,78},
        {call,
         {268,13},
         {atom,{268,13},sig_bs},
         [{var,{268,20},'Bs'},
          {var,{268,24},'Ds0'},
          {var,{268,29},'Ls0'},
          {var,{268,34},'Fdb'},
          {var,{268,39},'Sub0'},
          {var,{268,45},'SuccTypes0'},
          {var,{268,57},'Meta'},
          {var,{268,63},'State0'}]}]}]}]},
  {clause,
   {270,1},
   [{nil,{270,8}},
    {var,{270,12},'_Ds'},
    {var,{270,17},'_Ls'},
    {var,{270,22},'_Fdb'},
    {var,{270,28},'_Sub'},
    {var,{270,34},'SuccTypes'},
    {var,{270,45},'_Meta'},
    {var,{270,52},'State'}],
   [],
   [{debug_line,271,79},
    {tuple,{271,5},[{var,{271,6},'State'},{var,{271,13},'SuccTypes'}]}]}]}.
{function,
 {273,1},
 sig_is,7,
 [{clause,
   {273,1},
   [{var,{273,1},'_'},
    {var,{273,1},'_'},
    {var,{273,1},'_'},
    {var,{273,1},'_'},
    {var,{273,1},'_'},
    {var,{273,1},'_'},
    {var,{273,1},'_'}],
   [[{call,
      {273,1},
      {remote,{273,1},{atom,{273,1},fake},{atom,{273,1},is_beam_bif_info}},
      []}]],
   [{debug_line,273,80},{atom,{273,1},ignore}]},
  {clause,
   {273,1},
   [{cons,
     {273,8},
     {match,
      {273,9},
      {tuple,
       {273,9},
       [{atom,{273,9},b_set},
        {var,{273,9},'_'},
        {var,{275,20},'Dst'},
        {atom,{273,19},call},
        {match,
         {274,21},
         {cons,
          {274,21},
          {match,
           {274,22},
           {tuple,
            {274,22},
            [{atom,{274,22},b_local},{var,{274,22},'_'},{var,{274,22},'_'}]},
           {var,{274,33},'Callee'}},
          {var,{274,42},'_'}},
         {var,{274,45},'Args0'}}]},
      {var,{275,25},'I0'}},
     {var,{275,30},'Is'}},
    {var,{276,8},'Ts0'},
    {var,{276,13},'Ds0'},
    {var,{276,18},'Ls'},
    {var,{276,22},'Fdb'},
    {var,{276,27},'Sub'},
    {var,{276,32},'State0'}],
   [],
   [{debug_line,277,81},
    {match,
     {277,5},
     {var,{277,5},'Args'},
     {call,
      {277,12},
      {atom,{277,12},simplify_args},
      [{var,{277,26},'Args0'},{var,{277,33},'Ts0'},{var,{277,38},'Sub'}]}},
    {debug_line,278,82},
    {match,
     {278,5},
     {var,{278,5},'I1'},
     {block,
      {278,10},
      [{match,{278,10},{var,{278,10},rec17},{var,{278,10},'I0'}},
       {'case',
        {278,19},
        {var,{278,10},rec17},
        [{clause,
          {278,19},
          [{tuple,
            {278,19},
            [{atom,{278,19},b_set},
             {var,{278,19},'_'},
             {var,{278,19},'_'},
             {var,{278,19},'_'},
             {var,{278,19},'_'}]}],
          [],
          [{call,
            {278,19},
            {remote,
             {278,19},
             {atom,{278,19},erlang},
             {atom,{278,19},setelement}},
            [{integer,{278,19},5},
             {var,{278,10},rec17},
             {var,{278,24},'Args'}]}]},
         {clause,
          [{generated,true},{location,{278,19}}],
          [{var,[{generated,true},{location,{278,19}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{278,19}}],
            {remote,
             [{generated,true},{location,{278,19}}],
             {atom,[{generated,true},{location,{278,19}}],erlang},
             {atom,[{generated,true},{location,{278,19}}],error}},
            [{tuple,
              [{generated,true},{location,{278,19}}],
              [{atom,[{generated,true},{location,{278,19}}],badrecord},
               {var,{278,10},rec17}]}]}]}]}]}},
    {debug_line,280,83},
    {match,
     {280,5},
     {cons,{280,5},{var,{280,6},'_'},{var,{280,10},'CallArgs'}},
     {var,{280,22},'Args'}},
    {debug_line,281,84},
    {match,
     {281,5},
     {tuple,{281,5},[{var,{281,6},'I'},{var,{281,9},'State'}]},
     {call,
      {281,18},
      {atom,{281,18},sig_local_call},
      [{var,{281,33},'I1'},
       {var,{281,37},'Callee'},
       {var,{281,45},'CallArgs'},
       {var,{281,55},'Ts0'},
       {var,{281,60},'Fdb'},
       {var,{281,65},'State0'}]}},
    {debug_line,283,85},
    {match,
     {283,5},
     {var,{283,5},'Ts'},
     {call,
      {283,10},
      {atom,{283,10},update_types},
      [{var,{283,23},'I'},{var,{283,26},'Ts0'},{var,{283,31},'Ds0'}]}},
    {debug_line,284,86},
    {match,
     {284,5},
     {var,{284,5},'Ds'},
     {map,
      {284,13},
      {var,{284,10},'Ds0'},
      [{map_field_assoc,{284,20},{var,{284,16},'Dst'},{var,{284,23},'I'}}]}},
    {debug_line,285,87},
    {call,
     {285,5},
     {atom,{285,5},sig_is},
     [{var,{285,12},'Is'},
      {var,{285,16},'Ts'},
      {var,{285,20},'Ds'},
      {var,{285,24},'Ls'},
      {var,{285,28},'Fdb'},
      {var,{285,33},'Sub'},
      {var,{285,38},'State'}]}]},
  {clause,
   {286,1},
   [{cons,
     {286,8},
     {match,
      {286,9},
      {tuple,
       {286,9},
       [{atom,{286,9},b_set},
        {var,{286,9},'_'},
        {var,{288,20},'Dst'},
        {atom,{286,19},call},
        {match,
         {287,21},
         {cons,
          {287,21},
          {tuple,{287,22},[{atom,{287,22},b_var},{var,{287,22},'_'}]},
          {var,{287,33},'_'}},
         {var,{287,36},'Args0'}}]},
      {var,{288,25},'I0'}},
     {var,{288,30},'Is'}},
    {var,{289,8},'Ts0'},
    {var,{289,13},'Ds0'},
    {var,{289,18},'Ls'},
    {var,{289,22},'Fdb'},
    {var,{289,27},'Sub'},
    {var,{289,32},'State0'}],
   [],
   [{debug_line,290,88},
    {match,
     {290,5},
     {var,{290,5},'Args'},
     {call,
      {290,12},
      {atom,{290,12},simplify_args},
      [{var,{290,26},'Args0'},{var,{290,33},'Ts0'},{var,{290,38},'Sub'}]}},
    {debug_line,291,89},
    {match,
     {291,5},
     {var,{291,5},'I1'},
     {block,
      {291,10},
      [{match,{291,10},{var,{291,10},rec18},{var,{291,10},'I0'}},
       {'case',
        {291,19},
        {var,{291,10},rec18},
        [{clause,
          {291,19},
          [{tuple,
            {291,19},
            [{atom,{291,19},b_set},
             {var,{291,19},'_'},
             {var,{291,19},'_'},
             {var,{291,19},'_'},
             {var,{291,19},'_'}]}],
          [],
          [{call,
            {291,19},
            {remote,
             {291,19},
             {atom,{291,19},erlang},
             {atom,{291,19},setelement}},
            [{integer,{291,19},5},
             {var,{291,10},rec18},
             {var,{291,24},'Args'}]}]},
         {clause,
          [{generated,true},{location,{291,19}}],
          [{var,[{generated,true},{location,{291,19}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{291,19}}],
            {remote,
             [{generated,true},{location,{291,19}}],
             {atom,[{generated,true},{location,{291,19}}],erlang},
             {atom,[{generated,true},{location,{291,19}}],error}},
            [{tuple,
              [{generated,true},{location,{291,19}}],
              [{atom,[{generated,true},{location,{291,19}}],badrecord},
               {var,{291,10},rec18}]}]}]}]}]}},
    {debug_line,293,90},
    {match,
     {293,5},
     {tuple,{293,5},[{var,{293,6},'I'},{var,{293,9},'State'}]},
     {call,
      {293,18},
      {atom,{293,18},sig_fun_call},
      [{var,{293,31},'I1'},
       {var,{293,35},'Args'},
       {var,{293,41},'Ts0'},
       {var,{293,46},'Ds0'},
       {var,{293,51},'Fdb'},
       {var,{293,56},'Sub'},
       {var,{293,61},'State0'}]}},
    {debug_line,295,91},
    {match,
     {295,5},
     {var,{295,5},'Ts'},
     {call,
      {295,10},
      {atom,{295,10},update_types},
      [{var,{295,23},'I'},{var,{295,26},'Ts0'},{var,{295,31},'Ds0'}]}},
    {debug_line,296,92},
    {match,
     {296,5},
     {var,{296,5},'Ds'},
     {map,
      {296,13},
      {var,{296,10},'Ds0'},
      [{map_field_assoc,{296,20},{var,{296,16},'Dst'},{var,{296,23},'I'}}]}},
    {debug_line,297,93},
    {call,
     {297,5},
     {atom,{297,5},sig_is},
     [{var,{297,12},'Is'},
      {var,{297,16},'Ts'},
      {var,{297,20},'Ds'},
      {var,{297,24},'Ls'},
      {var,{297,28},'Fdb'},
      {var,{297,33},'Sub'},
      {var,{297,38},'State'}]}]},
  {clause,
   {298,1},
   [{cons,
     {298,8},
     {match,
      {298,9},
      {tuple,
       {298,9},
       [{atom,{298,9},b_set},
        {var,{298,9},'_'},
        {var,{298,43},'Dst'},
        {atom,{298,19},make_fun},
        {var,{298,33},'Args0'}]},
      {var,{298,48},'I0'}},
     {var,{298,51},'Is'}},
    {var,{299,8},'Ts0'},
    {var,{299,13},'Ds0'},
    {var,{299,18},'Ls'},
    {var,{299,22},'Fdb'},
    {var,{299,27},'Sub0'},
    {var,{299,33},'State0'}],
   [],
   [{debug_line,300,94},
    {match,
     {300,5},
     {var,{300,5},'Args'},
     {call,
      {300,12},
      {atom,{300,12},simplify_args},
      [{var,{300,26},'Args0'},{var,{300,33},'Ts0'},{var,{300,38},'Sub0'}]}},
    {debug_line,301,95},
    {match,
     {301,5},
     {var,{301,5},'I1'},
     {block,
      {301,10},
      [{match,{301,10},{var,{301,10},rec19},{var,{301,10},'I0'}},
       {'case',
        {301,19},
        {var,{301,10},rec19},
        [{clause,
          {301,19},
          [{tuple,
            {301,19},
            [{atom,{301,19},b_set},
             {var,{301,19},'_'},
             {var,{301,19},'_'},
             {var,{301,19},'_'},
             {var,{301,19},'_'}]}],
          [],
          [{call,
            {301,19},
            {remote,
             {301,19},
             {atom,{301,19},erlang},
             {atom,{301,19},setelement}},
            [{integer,{301,19},5},
             {var,{301,10},rec19},
             {var,{301,24},'Args'}]}]},
         {clause,
          [{generated,true},{location,{301,19}}],
          [{var,[{generated,true},{location,{301,19}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{301,19}}],
            {remote,
             [{generated,true},{location,{301,19}}],
             {atom,[{generated,true},{location,{301,19}}],erlang},
             {atom,[{generated,true},{location,{301,19}}],error}},
            [{tuple,
              [{generated,true},{location,{301,19}}],
              [{atom,[{generated,true},{location,{301,19}}],badrecord},
               {var,{301,10},rec19}]}]}]}]}]}},
    {debug_line,303,96},
    {match,
     {303,5},
     {tuple,{303,5},[{var,{303,6},'I'},{var,{303,9},'State'}]},
     {call,
      {303,18},
      {atom,{303,18},sig_make_fun},
      [{var,{303,31},'I1'},
       {var,{303,35},'Ts0'},
       {var,{303,40},'Fdb'},
       {var,{303,45},'State0'}]}},
    {debug_line,305,97},
    {match,
     {305,5},
     {var,{305,5},'Ts'},
     {call,
      {305,10},
      {atom,{305,10},update_types},
      [{var,{305,23},'I'},{var,{305,26},'Ts0'},{var,{305,31},'Ds0'}]}},
    {debug_line,306,98},
    {match,
     {306,5},
     {var,{306,5},'Ds'},
     {map,
      {306,13},
      {var,{306,10},'Ds0'},
      [{map_field_assoc,{306,20},{var,{306,16},'Dst'},{var,{306,23},'I'}}]}},
    {debug_line,307,99},
    {call,
     {307,5},
     {atom,{307,5},sig_is},
     [{var,{307,12},'Is'},
      {var,{307,16},'Ts'},
      {var,{307,20},'Ds'},
      {var,{307,24},'Ls'},
      {var,{307,28},'Fdb'},
      {var,{307,33},'Sub0'},
      {var,{307,39},'State'}]}]},
  {clause,
   {308,1},
   [{cons,{308,8},{var,{308,9},'I0'},{var,{308,14},'Is'}},
    {var,{308,19},'Ts0'},
    {var,{308,24},'Ds0'},
    {var,{308,29},'Ls'},
    {var,{308,33},'Fdb'},
    {var,{308,38},'Sub0'},
    {var,{308,44},'State'}],
   [],
   [{debug_line,309,100},
    {'case',
     {309,5},
     {call,
      {309,10},
      {atom,{309,10},simplify},
      [{var,{309,19},'I0'},
       {var,{309,23},'Ts0'},
       {var,{309,28},'Ds0'},
       {var,{309,33},'Ls'},
       {var,{309,37},'Sub0'}]},
     [{clause,
       {310,9},
       [{tuple,
         {310,9},
         [{tuple,
           {310,10},
           [{atom,{310,10},b_set},
            {var,{310,10},'_'},
            {var,{310,10},'_'},
            {var,{310,10},'_'},
            {var,{310,10},'_'}]},
          {var,{310,20},'Ts'},
          {var,{310,24},'Ds'}]}],
       [],
       [{debug_line,311,101},
        {call,
         {311,13},
         {atom,{311,13},sig_is},
         [{var,{311,20},'Is'},
          {var,{311,24},'Ts'},
          {var,{311,28},'Ds'},
          {var,{311,32},'Ls'},
          {var,{311,36},'Fdb'},
          {var,{311,41},'Sub0'},
          {var,{311,47},'State'}]}]},
      {clause,
       {312,9},
       [{var,{312,9},'Sub'}],
       [[{call,
          {312,18},
          {remote,{312,18},{atom,{312,18},erlang},{atom,{312,18},is_map}},
          [{var,{312,25},'Sub'}]}]],
       [{debug_line,313,102},
        {call,
         {313,13},
         {atom,{313,13},sig_is},
         [{var,{313,20},'Is'},
          {var,{313,24},'Ts0'},
          {var,{313,29},'Ds0'},
          {var,{313,34},'Ls'},
          {var,{313,38},'Fdb'},
          {var,{313,43},'Sub'},
          {var,{313,48},'State'}]}]}]}]},
  {clause,
   {315,1},
   [{nil,{315,8}},
    {var,{315,12},'Ts'},
    {var,{315,16},'Ds'},
    {var,{315,20},'_Ls'},
    {var,{315,25},'_Fdb'},
    {var,{315,31},'Sub'},
    {var,{315,36},'State'}],
   [],
   [{debug_line,316,103},
    {tuple,
     {316,5},
     [{var,{316,6},'Ts'},
      {var,{316,10},'Ds'},
      {var,{316,14},'Sub'},
      {var,{316,19},'State'}]}]}]}.
{function,
 {318,1},
 sig_fun_call,7,
 [{clause,
   {318,1},
   [{var,{318,1},'_'},
    {var,{318,1},'_'},
    {var,{318,1},'_'},
    {var,{318,1},'_'},
    {var,{318,1},'_'},
    {var,{318,1},'_'},
    {var,{318,1},'_'}],
   [[{call,
      {318,1},
      {remote,{318,1},{atom,{318,1},fake},{atom,{318,1},is_beam_bif_info}},
      []}]],
   [{debug_line,318,104},{atom,{318,1},ignore}]},
  {clause,
   {318,1},
   [{var,{318,14},'I0'},
    {var,{318,18},'Args'},
    {var,{318,24},'Ts'},
    {var,{318,28},'Ds'},
    {var,{318,32},'Fdb'},
    {var,{318,37},'Sub'},
    {var,{318,42},'State0'}],
   [],
   [{debug_line,319,105},
    {match,
     {319,5},
     {cons,{319,5},{var,{319,6},'Fun'},{var,{319,12},'CallArgs0'}},
     {var,{319,25},'Args'}},
    {debug_line,320,106},
    {match,
     {320,5},
     {var,{320,5},'FunType'},
     {call,
      {320,15},
      {atom,{320,15},normalized_type},
      [{var,{320,31},'Fun'},{var,{320,36},'Ts'}]}},
    {debug_line,321,107},
    {match,
     {321,5},
     {var,{321,5},'Arity'},
     {call,
      {321,13},
      {remote,{321,13},{atom,{321,13},erlang},{atom,{321,13},length}},
      [{var,{321,20},'CallArgs0'}]}},
    {debug_line,323,108},
    {'case',
     {323,5},
     {tuple,{323,10},[{var,{323,11},'FunType'},{var,{323,20},'Ds'}]},
     [{clause,
       {324,9},
       [{tuple,
         {324,9},
         [{var,{324,10},'_'},
          {map,
           {324,13},
           [{map_field_exact,
             {324,20},
             {var,{324,16},'Fun'},
             {tuple,
              {324,23},
              [{atom,{324,23},b_set},
               {var,{324,23},'_'},
               {var,{324,23},'_'},
               {atom,{324,33},make_fun},
               {cons,
                {325,35},
                {match,
                 {325,36},
                 {tuple,
                  {325,36},
                  [{atom,{325,36},b_local},
                   {var,{325,36},'_'},
                   {var,{325,51},'TotalArity'}]},
                 {var,{325,63},'Callee'}},
                {var,{325,72},'Env'}}]}}]}]}],
       [[{op,
          {326,27},
          '=:=',
          {var,{326,16},'TotalArity'},
          {op,
           {326,37},
           '+',
           {var,{326,31},'Arity'},
           {call,
            {326,39},
            {remote,{326,39},{atom,{326,39},erlang},{atom,{326,39},length}},
            [{var,{326,46},'Env'}]}}}]],
       [{debug_line,329,109},
        {match,
         {329,13},
         {var,{329,13},'CallArgs'},
         {op,
          {329,34},
          '++',
          {var,{329,24},'CallArgs0'},
          {call,
           {329,37},
           {atom,{329,37},simplify_args},
           [{var,{329,51},'Env'},{var,{329,56},'Ts'},{var,{329,60},'Sub'}]}}},
        {debug_line,330,110},
        {match,
         {330,13},
         {var,{330,13},'I'},
         {block,
          {330,17},
          [{match,
            {330,26},
            {var,{330,26},rec20},
            {cons,{330,31},{var,{330,32},'Callee'},{var,{330,41},'CallArgs'}}},
           {match,{330,17},{var,{330,17},rec21},{var,{330,17},'I0'}},
           {'case',
            {330,26},
            {var,{330,17},rec21},
            [{clause,
              {330,26},
              [{tuple,
                {330,26},
                [{atom,{330,26},b_set},
                 {var,{330,26},'_'},
                 {var,{330,26},'_'},
                 {var,{330,26},'_'},
                 {var,{330,26},'_'}]}],
              [],
              [{call,
                {330,26},
                {remote,
                 {330,26},
                 {atom,{330,26},erlang},
                 {atom,{330,26},setelement}},
                [{integer,{330,26},5},
                 {var,{330,17},rec21},
                 {var,{330,26},rec20}]}]},
             {clause,
              [{generated,true},{location,{330,26}}],
              [{var,[{generated,true},{location,{330,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{330,26}}],
                {remote,
                 [{generated,true},{location,{330,26}}],
                 {atom,[{generated,true},{location,{330,26}}],erlang},
                 {atom,[{generated,true},{location,{330,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{330,26}}],
                  [{atom,[{generated,true},{location,{330,26}}],badrecord},
                   {var,{330,17},rec21}]}]}]}]}]}},
        {debug_line,331,111},
        {call,
         {331,13},
         {atom,{331,13},sig_local_call},
         [{var,{331,28},'I'},
          {var,{331,31},'Callee'},
          {var,{331,39},'CallArgs'},
          {var,{331,49},'Ts'},
          {var,{331,53},'Fdb'},
          {var,{331,58},'State0'}]}]},
      {clause,
       {332,9},
       [{tuple,
         {332,9},
         [{tuple,
           {332,10},
           [{atom,{332,10},t_fun},
            {var,{332,23},'Arity'},
            {tuple,{332,36},[{var,{332,37},'Name'},{var,{332,42},'Arity'}]},
            {var,{332,10},'_'}]},
          {var,{332,51},'_'}]}],
       [],
       [{debug_line,335,112},
        {match,
         {335,13},
         {var,{335,13},'Callee'},
         {tuple,
          {335,22},
          [{atom,{335,22},b_local},
           {tuple,{335,36},[{atom,{335,36},b_literal},{var,{335,51},'Name'}]},
           {var,{336,37},'Arity'}]}},
        {debug_line,337,113},
        {match,
         {337,13},
         {var,{337,13},'I'},
         {block,
          {337,17},
          [{match,
            {337,26},
            {var,{337,26},rec22},
            {cons,
             {337,31},
             {var,{337,32},'Callee'},
             {var,{337,41},'CallArgs0'}}},
           {match,{337,17},{var,{337,17},rec23},{var,{337,17},'I0'}},
           {'case',
            {337,26},
            {var,{337,17},rec23},
            [{clause,
              {337,26},
              [{tuple,
                {337,26},
                [{atom,{337,26},b_set},
                 {var,{337,26},'_'},
                 {var,{337,26},'_'},
                 {var,{337,26},'_'},
                 {var,{337,26},'_'}]}],
              [],
              [{call,
                {337,26},
                {remote,
                 {337,26},
                 {atom,{337,26},erlang},
                 {atom,{337,26},setelement}},
                [{integer,{337,26},5},
                 {var,{337,17},rec23},
                 {var,{337,26},rec22}]}]},
             {clause,
              [{generated,true},{location,{337,26}}],
              [{var,[{generated,true},{location,{337,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{337,26}}],
                {remote,
                 [{generated,true},{location,{337,26}}],
                 {atom,[{generated,true},{location,{337,26}}],erlang},
                 {atom,[{generated,true},{location,{337,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{337,26}}],
                  [{atom,[{generated,true},{location,{337,26}}],badrecord},
                   {var,{337,17},rec23}]}]}]}]}]}},
        {debug_line,338,114},
        {call,
         {338,13},
         {atom,{338,13},sig_local_call},
         [{var,{338,28},'I'},
          {var,{338,31},'Callee'},
          {var,{338,39},'CallArgs0'},
          {var,{338,50},'Ts'},
          {var,{338,54},'Fdb'},
          {var,{338,59},'State0'}]}]},
      {clause,
       {339,9},
       [{tuple,
         {339,9},
         [{tuple,
           {339,10},
           [{atom,{339,10},t_fun},
            {var,{339,10},'_'},
            {var,{339,10},'_'},
            {var,{339,22},'Type'}]},
          {var,{339,29},'_'}]}],
       [[{op,{339,42},'=/=',{var,{339,37},'Type'},{atom,{339,46},any}}]],
       [{debug_line,340,115},
        {tuple,
         {340,13},
         [{call,
           {340,14},
           {remote,{340,22},{atom,{340,14},beam_ssa},{atom,{340,23},add_anno}},
           [{atom,{340,32},result_type},
            {var,{340,45},'Type'},
            {var,{340,51},'I0'}]},
          {var,{340,56},'State0'}]}]},
      {clause,
       {341,9},
       [{var,{341,9},'_'}],
       [],
       [{debug_line,342,116},
        {tuple,{342,13},[{var,{342,14},'I0'},{var,{342,18},'State0'}]}]}]}]}]}.
{function,{345,1},
          sig_local_call,6,
          [{clause,{345,1},
                   [{var,{345,1},'_'},
                    {var,{345,1},'_'},
                    {var,{345,1},'_'},
                    {var,{345,1},'_'},
                    {var,{345,1},'_'},
                    {var,{345,1},'_'}],
                   [[{call,{345,1},
                           {remote,{345,1},
                                   {atom,{345,1},fake},
                                   {atom,{345,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,345,117},{atom,{345,1},ignore}]},
           {clause,{345,1},
                   [{var,{345,16},'I0'},
                    {var,{345,20},'Callee'},
                    {var,{345,28},'Args'},
                    {var,{345,34},'Ts'},
                    {var,{345,38},'Fdb'},
                    {var,{345,43},'State'}],
                   [],
                   [{debug_line,346,118},
                    {match,{346,5},
                           {var,{346,5},'ArgTypes'},
                           {call,{346,16},
                                 {atom,{346,16},argument_types},
                                 [{var,{346,31},'Args'},{var,{346,37},'Ts'}]}},
                    {debug_line,347,119},
                    {match,{347,5},
                           {var,{347,5},'I'},
                           {call,{347,9},
                                 {atom,{347,9},sig_local_return},
                                 [{var,{347,26},'I0'},
                                  {var,{347,30},'Callee'},
                                  {var,{347,38},'ArgTypes'},
                                  {var,{347,48},'Fdb'}]}},
                    {debug_line,348,120},
                    {tuple,{348,5},
                           [{var,{348,6},'I'},
                            {call,{348,9},
                                  {atom,{348,9},sig_update_args},
                                  [{var,{348,25},'Callee'},
                                   {var,{348,33},'ArgTypes'},
                                   {var,{348,43},'State'}]}]}]}]}.
{function,
 {353,1},
 sig_make_fun,4,
 [{clause,
   {353,1},
   [{var,{353,1},'_'},{var,{353,1},'_'},{var,{353,1},'_'},{var,{353,1},'_'}],
   [[{call,
      {353,1},
      {remote,{353,1},{atom,{353,1},fake},{atom,{353,1},is_beam_bif_info}},
      []}]],
   [{debug_line,353,121},{atom,{353,1},ignore}]},
  {clause,
   {353,1},
   [{match,
     {353,14},
     {tuple,
      {353,14},
      [{atom,{353,14},b_set},
       {var,{353,14},'_'},
       {var,{353,14},'_'},
       {atom,{353,24},make_fun},
       {cons,
        {353,38},
        {match,
         {353,39},
         {tuple,
          {353,39},
          [{atom,{353,39},b_local},{var,{353,39},'_'},{var,{353,39},'_'}]},
         {var,{353,50},'Callee'}},
        {var,{353,59},'FreeVars'}}]},
     {var,{353,70},'I0'}},
    {var,{354,14},'Ts'},
    {var,{354,18},'Fdb'},
    {var,{354,23},'State'}],
   [],
   [{debug_line,355,122},
    {match,
     {355,5},
     {var,{355,5},'ArgCount'},
     {op,
      {355,37},
      '-',
      {'case',
       {355,16},
       {var,{355,16},'Callee'},
       [{clause,
         [{generated,true},{location,{355,16}}],
         [{tuple,
           [{generated,true},{location,{355,16}}],
           [{atom,{355,16},b_local},{var,{355,16},'_'},{var,{355,16},rec24}]}],
         [],
         [{var,{355,16},rec24}]},
        {clause,
         [{generated,true},{location,{355,16}}],
         [{var,{355,16},rec24}],
         [],
         [{call,
           [{generated,true},{location,{355,16}}],
           {remote,
            [{generated,true},{location,{355,16}}],
            {atom,[{generated,true},{location,{355,16}}],erlang},
            {atom,[{generated,true},{location,{355,16}}],error}},
           [{tuple,
             [{generated,true},{location,{355,16}}],
             [{atom,[{generated,true},{location,{355,16}}],badrecord},
              {var,{355,16},rec24}]}]}]}]},
      {call,
       {355,39},
       {remote,{355,39},{atom,{355,39},erlang},{atom,{355,39},length}},
       [{var,{355,46},'FreeVars'}]}}},
    {debug_line,357,123},
    {match,
     {357,5},
     {var,{357,5},'FVTypes'},
     {lc,
      {357,15},
      {block,0,
       [{call,
         {357,16},
         {atom,{357,16},concrete_type},
         [{var,{357,30},'FreeVar'},{var,{357,39},'Ts'}]}]},
      [{block,0,[{atom,{357,57},true}]},
       {generate,
        {357,54},
        {var,{357,46},'FreeVar'},
        {var,{357,57},'FreeVars'}}]}},
    {debug_line,358,124},
    {match,
     {358,5},
     {var,{358,5},'ArgTypes'},
     {op,
      {358,41},
      '++',
      {call,
       {358,16},
       {remote,{358,16},{atom,{358,16},lists},{atom,{358,16},duplicate}},
       [{var,{358,26},'ArgCount'},{atom,{358,36},any}]},
      {var,{358,44},'FVTypes'}}},
    {debug_line,360,125},
    {match,
     {360,5},
     {var,{360,5},'I'},
     {call,
      {360,9},
      {atom,{360,9},sig_local_return},
      [{var,{360,26},'I0'},
       {var,{360,30},'Callee'},
       {var,{360,38},'ArgTypes'},
       {var,{360,48},'Fdb'}]}},
    {debug_line,361,126},
    {tuple,
     {361,5},
     [{var,{361,6},'I'},
      {call,
       {361,9},
       {atom,{361,9},sig_update_args},
       [{var,{361,25},'Callee'},
        {var,{361,33},'ArgTypes'},
        {var,{361,43},'State'}]}]}]}]}.
{function,
    {363,1},
    sig_local_return,4,
    [{clause,
         {363,1},
         [{var,{363,1},'_'},
          {var,{363,1},'_'},
          {var,{363,1},'_'},
          {var,{363,1},'_'}],
         [[{call,
               {363,1},
               {remote,
                   {363,1},
                   {atom,{363,1},fake},
                   {atom,{363,1},is_beam_bif_info}},
               []}]],
         [{debug_line,363,127},{atom,{363,1},ignore}]},
     {clause,
         {363,1},
         [{var,{363,18},'I'},
          {var,{363,21},'Callee'},
          {var,{363,29},'ArgTypes'},
          {var,{363,39},'Fdb'}],
         [],
         [{debug_line,364,128},
          {match,
              {364,5},
              {tuple,
                  {364,5},
                  [{atom,{364,5},func_info},
                   {var,{364,5},'_'},
                   {var,{364,5},'_'},
                   {var,{364,5},'_'},
                   {var,{364,5},'_'},
                   {var,{364,27},'SuccTypes'}]},
              {call,
                  {364,40},
                  {remote,
                      {364,40},
                      {atom,{364,40},erlang},
                      {atom,{364,40},map_get}},
                  [{var,{364,48},'Callee'},{var,{364,56},'Fdb'}]}},
          {debug_line,365,129},
          {'case',
              {365,5},
              {call,
                  {365,10},
                  {atom,{365,10},return_type},
                  [{var,{365,22},'SuccTypes'},{var,{365,33},'ArgTypes'}]},
              [{clause,
                   {366,9},
                   [{atom,{366,9},any}],
                   [],
                   [{debug_line,366,130},{var,{366,16},'I'}]},
               {clause,
                   {367,9},
                   [{var,{367,9},'Type'}],
                   [],
                   [{debug_line,367,131},
                    {call,
                        {367,17},
                        {remote,
                            {367,25},
                            {atom,{367,17},beam_ssa},
                            {atom,{367,26},add_anno}},
                        [{atom,{367,35},result_type},
                         {var,{367,48},'Type'},
                         {var,{367,54},'I'}]}]}]}]}]}.
{function,
    {370,1},
    init_sig_st,2,
    [{clause,
         {370,1},
         [{var,{370,1},'_'},{var,{370,1},'_'}],
         [[{call,
               {370,1},
               {remote,
                   {370,1},
                   {atom,{370,1},fake},
                   {atom,{370,1},is_beam_bif_info}},
               []}]],
         [{debug_line,370,132},{atom,{370,1},ignore}]},
     {clause,
         {370,1},
         [{var,{370,13},'StMap'},{var,{370,20},'FuncDb'}],
         [],
         [{debug_line,373,133},
          {match,
              {373,5},
              {var,{373,5},'Roots'},
              {call,
                  {373,13},
                  {atom,{373,13},init_sig_roots},
                  [{var,{373,28},'FuncDb'}]}},
          {debug_line,374,134},
          {tuple,
              {374,5},
              [{atom,{374,5},sig_st},
               {call,
                   {376,17},
                   {atom,{376,17},wl_defer_list},
                   [{var,{376,31},'Roots'},
                    {block,0,
                        [{debug_line,376,136},
                         {call,{376,38},{atom,{376,38},wl_new},[]}]}]},
               {map,{374,24},[]},
               {call,
                   {375,22},
                   {atom,{375,22},init_sig_args},
                   [{var,{375,36},'Roots'},
                    {var,{375,43},'StMap'},
                    {block,0,[{debug_line,375,135},{map,{375,50},[]}]}]},
               {map,{374,5},[]}]}]}]}.
{function,
    {378,1},
    init_sig_roots,1,
    [{clause,
         {378,1},
         [{var,{378,1},'_'}],
         [[{call,
               {378,1},
               {remote,
                   {378,1},
                   {atom,{378,1},fake},
                   {atom,{378,1},is_beam_bif_info}},
               []}]],
         [{debug_line,378,137},{atom,{378,1},ignore}]},
     {clause,
         {378,1},
         [{var,{378,16},'FuncDb'}],
         [],
         [{debug_line,379,138},
          {lc,{379,5},
              {block,0,[{var,{379,6},'Id'}]},
              [{block,0,[{atom,{379,47},true}]},
               {m_generate,
                   {379,44},
                   {map_field_exact,
                       {379,15},
                       {var,{379,12},'Id'},
                       {tuple,
                           {379,18},
                           [{atom,{379,18},func_info},
                            {var,{379,18},'_'},
                            {var,{379,18},'_'},
                            {atom,{379,38},true},
                            {var,{379,18},'_'},
                            {var,{379,18},'_'}]}},
                   {var,{379,47},'FuncDb'}}]}]}]}.
{function,
    {381,1},
    init_sig_args,3,
    [{clause,
         {381,1},
         [{var,{381,1},'_'},{var,{381,1},'_'},{var,{381,1},'_'}],
         [[{call,
               {381,1},
               {remote,
                   {381,1},
                   {atom,{381,1},fake},
                   {atom,{381,1},is_beam_bif_info}},
               []}]],
         [{debug_line,381,139},{atom,{381,1},ignore}]},
     {clause,
         {381,1},
         [{cons,{381,15},{var,{381,16},'Root'},{var,{381,23},'Roots'}},
          {var,{381,31},'StMap'},
          {var,{381,38},'Acc'}],
         [],
         [{debug_line,382,140},
          {match,
              {382,5},
              {tuple,
                  {382,5},
                  [{atom,{382,5},opt_st},
                   {var,{382,5},'_'},
                   {var,{382,18},'Args0'},
                   {var,{382,5},'_'},
                   {var,{382,5},'_'}]},
              {call,
                  {382,27},
                  {remote,
                      {382,27},
                      {atom,{382,27},erlang},
                      {atom,{382,27},map_get}},
                  [{var,{382,35},'Root'},{var,{382,41},'StMap'}]}},
          {debug_line,383,141},
          {match,
              {383,5},
              {var,{383,5},'ArgTypes'},
              {call,
                  {383,16},
                  {remote,
                      {383,21},
                      {atom,{383,16},lists},
                      {atom,{383,22},duplicate}},
                  [{block,0,
                       [{call,
                            {383,32},
                            {remote,
                                {383,32},
                                {atom,{383,32},erlang},
                                {atom,{383,32},length}},
                            [{var,{383,39},'Args0'}]}]},
                   {atom,{383,47},any}]}},
          {debug_line,384,142},
          {call,
              {384,5},
              {atom,{384,5},init_sig_args},
              [{var,{384,19},'Roots'},
               {var,{384,26},'StMap'},
               {block,0,
                   [{map,
                        {384,36},
                        {var,{384,33},'Acc'},
                        [{map_field_assoc,
                             {384,44},
                             {var,{384,39},'Root'},
                             {var,{384,47},'ArgTypes'}}]}]}]}]},
     {clause,
         {385,1},
         [{nil,{385,15}},{var,{385,19},'_StMap'},{var,{385,27},'Acc'}],
         [],
         [{debug_line,386,143},{var,{386,5},'Acc'}]}]}.
{function,
 {388,1},
 sig_commit_args,2,
 [{clause,
   {388,1},
   [{var,{388,1},'_'},{var,{388,1},'_'}],
   [[{call,
      {388,1},
      {remote,{388,1},{atom,{388,1},fake},{atom,{388,1},is_beam_bif_info}},
      []}]],
   [{debug_line,388,144},{atom,{388,1},ignore}]},
  {clause,
   {388,1},
   [{var,{388,17},'Id'},
    {match,
     {388,21},
     {tuple,
      {388,21},
      [{atom,{388,21},sig_st},
       {var,{388,21},'_'},
       {var,{388,50},'Committed0'},
       {var,{388,37},'Us'},
       {var,{388,21},'_'}]},
     {var,{388,62},'State0'}}],
   [],
   [{debug_line,389,145},
    {match,
     {389,5},
     {var,{389,5},'Types'},
     {call,
      {389,13},
      {remote,{389,13},{atom,{389,13},erlang},{atom,{389,13},map_get}},
      [{var,{389,21},'Id'},{var,{389,25},'Us'}]}},
    {debug_line,390,146},
    {match,
     {390,5},
     {var,{390,5},'Committed'},
     {map,
      {390,27},
      {var,{390,17},'Committed0'},
      [{map_field_assoc,
        {390,33},
        {var,{390,30},'Id'},
        {var,{390,36},'Types'}}]}},
    {debug_line,391,147},
    {match,
     {391,5},
     {var,{391,5},'State'},
     {block,
      {391,13},
      [{match,{391,13},{var,{391,13},rec25},{var,{391,13},'State0'}},
       {'case',
        {391,27},
        {var,{391,13},rec25},
        [{clause,
          {391,27},
          [{tuple,
            {391,27},
            [{atom,{391,27},sig_st},
             {var,{391,27},'_'},
             {var,{391,27},'_'},
             {var,{391,27},'_'},
             {var,{391,27},'_'}]}],
          [],
          [{call,
            {391,27},
            {remote,
             {391,27},
             {atom,{391,27},erlang},
             {atom,{391,27},setelement}},
            [{integer,{391,27},3},
             {var,{391,13},rec25},
             {var,{391,37},'Committed'}]}]},
         {clause,
          [{generated,true},{location,{391,27}}],
          [{var,[{generated,true},{location,{391,27}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{391,27}}],
            {remote,
             [{generated,true},{location,{391,27}}],
             {atom,[{generated,true},{location,{391,27}}],erlang},
             {atom,[{generated,true},{location,{391,27}}],error}},
            [{tuple,
              [{generated,true},{location,{391,27}}],
              [{atom,[{generated,true},{location,{391,27}}],badrecord},
               {var,{391,13},rec25}]}]}]}]}]}},
    {debug_line,392,148},
    {tuple,{392,5},[{var,{392,6},'Types'},{var,{392,13},'State'}]}]}]}.
{function,
    {394,1},
    sig_update_args,3,
    [{clause,
         {394,1},
         [{var,{394,1},'_'},{var,{394,1},'_'},{var,{394,1},'_'}],
         [[{call,
               {394,1},
               {remote,
                   {394,1},
                   {atom,{394,1},fake},
                   {atom,{394,1},is_beam_bif_info}},
               []}]],
         [{debug_line,394,149},{atom,{394,1},ignore}]},
     {clause,
         {394,1},
         [{var,{394,17},'Callee'},
          {var,{394,25},'Types'},
          {match,
              {394,32},
              {tuple,
                  {394,32},
                  [{atom,{394,32},sig_st},
                   {var,{394,32},'_'},
                   {var,{394,50},'Committed'},
                   {var,{394,32},'_'},
                   {var,{394,32},'_'}]},
              {var,{394,61},'State'}}],
         [],
         [{debug_line,395,150},
          {'case',
              {395,5},
              {var,{395,10},'Committed'},
              [{clause,
                   {396,9},
                   [{map,
                        {396,9},
                        [{map_field_exact,
                             {396,19},
                             {var,{396,12},'Callee'},
                             {var,{396,22},'Current'}}]}],
                   [],
                   [{debug_line,397,151},
                    {'case',
                        {397,13},
                        {call,
                            {397,18},
                            {atom,{397,18},parallel_join},
                            [{var,{397,32},'Current'},{var,{397,41},'Types'}]},
                        [{clause,
                             {398,17},
                             [{var,{398,17},'Current'}],
                             [],
                             [{debug_line,401,152},{var,{401,21},'State'}]},
                         {clause,
                             {402,17},
                             [{var,{402,17},'Widened'}],
                             [],
                             [{debug_line,403,153},
                              {call,
                                  {403,21},
                                  {atom,{403,21},sig_update_args_1},
                                  [{var,{403,39},'Callee'},
                                   {var,{403,47},'Widened'},
                                   {var,{403,56},'State'}]}]}]}]},
               {clause,
                   {405,9},
                   [{map,{405,9},[]}],
                   [],
                   [{debug_line,406,154},
                    {call,
                        {406,13},
                        {atom,{406,13},sig_update_args_1},
                        [{var,{406,31},'Callee'},
                         {var,{406,39},'Types'},
                         {var,{406,46},'State'}]}]}]}]}]}.
{function,
    {409,1},
    sig_update_args_1,3,
    [{clause,
         {409,1},
         [{var,{409,1},'_'},{var,{409,1},'_'},{var,{409,1},'_'}],
         [[{call,
               {409,1},
               {remote,
                   {409,1},
                   {atom,{409,1},fake},
                   {atom,{409,1},is_beam_bif_info}},
               []}]],
         [{debug_line,409,155},{atom,{409,1},ignore}]},
     {clause,
         {409,1},
         [{var,{409,19},'Callee'},
          {var,{409,27},'Types'},
          {match,
              {409,34},
              {tuple,
                  {409,34},
                  [{atom,{409,34},sig_st},
                   {var,{409,57},'Wl0'},
                   {var,{409,34},'_'},
                   {var,{409,50},'Us0'},
                   {var,{409,34},'_'}]},
              {var,{409,62},'State'}}],
         [],
         [{debug_line,410,156},
          {match,
              {410,5},
              {var,{410,5},'Us'},
              {'case',
                  {410,10},
                  {var,{410,15},'Us0'},
                  [{clause,
                       {411,14},
                       [{map,
                            {411,14},
                            [{map_field_exact,
                                 {411,24},
                                 {var,{411,17},'Callee'},
                                 {var,{411,27},'Current'}}]}],
                       [],
                       [{debug_line,412,157},
                        {map,
                            {412,21},
                            {var,{412,18},'Us0'},
                            [{map_field_assoc,
                                 {412,31},
                                 {var,{412,24},'Callee'},
                                 {call,
                                     {412,34},
                                     {atom,{412,34},parallel_join},
                                     [{var,{412,48},'Current'},
                                      {var,{412,57},'Types'}]}}]}]},
                   {clause,
                       {413,14},
                       [{map,{413,14},[]}],
                       [],
                       [{debug_line,414,158},
                        {map,
                            {414,21},
                            {var,{414,18},'Us0'},
                            [{map_field_assoc,
                                 {414,31},
                                 {var,{414,24},'Callee'},
                                 {var,{414,34},'Types'}}]}]}]}},
          {debug_line,416,159},
          {block,
              {416,5},
              [{match,
                   {416,29},
                   {var,{416,29},rec26},
                   {call,
                       {416,32},
                       {atom,{416,32},wl_add},
                       [{var,{416,39},'Callee'},{var,{416,47},'Wl0'}]}},
               {match,{416,5},{var,{416,5},rec27},{var,{416,5},'State'}},
               {'case',
                   {416,29},
                   {var,{416,5},rec27},
                   [{clause,
                        {416,29},
                        [{tuple,
                             {416,29},
                             [{atom,{416,29},sig_st},
                              {var,{416,29},'_'},
                              {var,{416,29},'_'},
                              {var,{416,29},'_'},
                              {var,{416,29},'_'}]}],
                        [],
                        [{call,
                             {416,29},
                             {remote,
                                 {416,29},
                                 {atom,{416,29},erlang},
                                 {atom,{416,29},setelement}},
                             [{integer,{416,29},2},
                              {call,
                                  {416,18},
                                  {remote,
                                      {416,18},
                                      {atom,{416,18},erlang},
                                      {atom,{416,18},setelement}},
                                  [{integer,{416,18},4},
                                   {var,{416,5},rec27},
                                   {var,{416,26},'Us'}]},
                              {var,{416,29},rec26}]}]},
                    {clause,
                        [{generated,true},{location,{416,29}}],
                        [{var,[{generated,true},{location,{416,29}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{416,29}}],
                             {remote,
                                 [{generated,true},{location,{416,29}}],
                                 {atom,
                                     [{generated,true},{location,{416,29}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{416,29}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{416,29}}],
                                  [{atom,
                                       [{generated,true},{location,{416,29}}],
                                       badrecord},
                                   {var,{416,5},rec27}]}]}]}]}]}]}]}.
{attribute,
    {418,2},
    spec,
    {{opt_continue,4},
     [{type,
          {418,19},
          bounded_fun,
          [{type,
               {418,19},
               'fun',
               [{type,
                    {418,19},
                    product,
                    [{var,{418,20},'Linear'},
                     {var,{418,28},'Args'},
                     {var,{418,34},'Anno'},
                     {var,{418,40},'FuncDb'}]},
                {type,
                    {418,51},
                    tuple,
                    [{var,{418,52},'Linear'},{var,{418,60},'FuncDb'}]}]},
           [{type,
                {419,7},
                constraint,
                [{atom,{419,7},is_subtype},
                 [{var,{419,7},'Linear'},
                  {type,
                      {419,17},
                      list,
                      [{type,
                           {419,18},
                           tuple,
                           [{type,{419,19},non_neg_integer,[]},
                            {remote_type,
                                {419,38},
                                [{atom,{419,38},beam_ssa},
                                 {atom,{419,47},b_blk},
                                 []]}]}]}]]},
            {type,
                {420,7},
                constraint,
                [{atom,{420,7},is_subtype},
                 [{var,{420,7},'Args'},
                  {type,
                      {420,15},
                      list,
                      [{remote_type,
                           {420,16},
                           [{atom,{420,16},beam_ssa},
                            {atom,{420,25},b_var},
                            []]}]}]]},
            {type,
                {421,7},
                constraint,
                [{atom,{421,7},is_subtype},
                 [{var,{421,7},'Anno'},
                  {remote_type,
                      {421,15},
                      [{atom,{421,15},beam_ssa},{atom,{421,24},anno},[]]}]]},
            {type,
                {422,7},
                constraint,
                [{atom,{422,7},is_subtype},
                 [{var,{422,7},'FuncDb'},
                  {user_type,{422,17},func_info_db,[]}]]}]]}]}}.
{function,
 {423,1},
 opt_continue,4,
 [{clause,
   {423,1},
   [{var,{423,1},'_'},{var,{423,1},'_'},{var,{423,1},'_'},{var,{423,1},'_'}],
   [[{call,
      {423,1},
      {remote,{423,1},{atom,{423,1},fake},{atom,{423,1},is_beam_bif_info}},
      []}]],
   [{debug_line,423,160},{atom,{423,1},ignore}]},
  {clause,
   {423,1},
   [{var,{423,14},'Linear0'},
    {var,{423,23},'Args'},
    {var,{423,29},'Anno'},
    {var,{423,35},'FuncDb'}],
   [[{op,{423,55},'=/=',{var,{423,48},'FuncDb'},{map,{423,59},[]}}]],
   [{debug_line,424,161},
    {match,
     {424,5},
     {var,{424,5},'Id'},
     {call,{424,10},{atom,{424,10},get_func_id},[{var,{424,22},'Anno'}]}},
    {debug_line,425,162},
    {'case',
     {425,5},
     {var,{425,10},'FuncDb'},
     [{clause,
       {426,9},
       [{map,
         {426,9},
         [{map_field_exact,
           {426,15},
           {var,{426,12},'Id'},
           {tuple,
            {426,18},
            [{atom,{426,18},func_info},
             {var,{426,18},'_'},
             {var,{426,18},'_'},
             {atom,{426,38},false},
             {var,{426,54},'ArgTypes'},
             {var,{426,18},'_'}]}}]}],
       [],
       [{debug_line,430,163},
        {match,
         {430,13},
         {var,{430,13},'Ts'},
         {call,
          {430,18},
          {atom,{430,18},join_arg_types},
          [{var,{430,33},'Args'},{var,{430,39},'ArgTypes'}]}},
        {debug_line,431,164},
        {call,
         {431,13},
         {atom,{431,13},opt_function},
         [{var,{431,26},'Linear0'},
          {var,{431,35},'Args'},
          {var,{431,41},'Id'},
          {var,{431,45},'Ts'},
          {var,{431,49},'FuncDb'}]}]},
      {clause,
       {432,9},
       [{map,
         {432,9},
         [{map_field_exact,
           {432,15},
           {var,{432,12},'Id'},
           {tuple,
            {432,18},
            [{atom,{432,18},func_info},
             {var,{432,18},'_'},
             {var,{432,18},'_'},
             {atom,{432,38},true},
             {var,{432,18},'_'},
             {var,{432,18},'_'}]}}]}],
       [],
       [{debug_line,435,165},
        {match,
         {435,13},
         {var,{435,13},'Ts'},
         {mc,
          {435,18},
          {map_field_assoc,
           {435,22},
           {block,0,[{var,{435,20},'V'}]},
           {block,0,[{atom,{435,25},any}]}},
          [{block,0,[{atom,{435,46},true}]},
           {generate,
            {435,43},
            {match,
             {435,32},
             {tuple,{435,32},[{atom,{435,32},b_var},{var,{435,32},'_'}]},
             {var,{435,41},'V'}},
            {var,{435,46},'Args'}}]}},
        {debug_line,436,166},
        {call,
         {436,13},
         {atom,{436,13},opt_function},
         [{var,{436,26},'Linear0'},
          {var,{436,35},'Args'},
          {var,{436,41},'Id'},
          {var,{436,45},'Ts'},
          {var,{436,49},'FuncDb'}]}]}]}]},
  {clause,
   {438,1},
   [{var,{438,14},'Linear0'},
    {var,{438,23},'Args'},
    {var,{438,29},'Anno'},
    {var,{438,35},'_FuncDb'}],
   [],
   [{debug_line,441,167},
    {match,
     {441,5},
     {var,{441,5},'Id'},
     {call,{441,10},{atom,{441,10},get_func_id},[{var,{441,22},'Anno'}]}},
    {debug_line,442,168},
    {match,
     {442,5},
     {var,{442,5},'Ts'},
     {mc,
      {442,10},
      {map_field_assoc,
       {442,14},
       {block,0,[{var,{442,12},'V'}]},
       {block,0,[{atom,{442,17},any}]}},
      [{block,0,[{atom,{442,38},true}]},
       {generate,
        {442,35},
        {match,
         {442,24},
         {tuple,{442,24},[{atom,{442,24},b_var},{var,{442,24},'_'}]},
         {var,{442,33},'V'}},
        {var,{442,38},'Args'}}]}},
    {debug_line,443,169},
    {match,
     {443,5},
     {tuple,{443,5},[{var,{443,6},'Linear'},{var,{443,14},'_'}]},
     {call,
      {443,19},
      {atom,{443,19},opt_function},
      [{var,{443,32},'Linear0'},
       {var,{443,41},'Args'},
       {var,{443,47},'Id'},
       {var,{443,51},'Ts'},
       {block,0,[{map,{443,55},[]}]}]}},
    {debug_line,444,170},
    {tuple,{444,5},[{var,{444,6},'Linear'},{map,{444,14},[]}]}]}]}.
{function,
 {446,1},
 join_arg_types,2,
 [{clause,
   {446,1},
   [{var,{446,1},'_'},{var,{446,1},'_'}],
   [[{call,
      {446,1},
      {remote,{446,1},{atom,{446,1},fake},{atom,{446,1},is_beam_bif_info}},
      []}]],
   [{debug_line,446,171},{atom,{446,1},ignore}]},
  {clause,
   {446,1},
   [{var,{446,16},'Args'},{var,{446,22},'TypeMaps'}],
   [],
   [{debug_line,447,172},
    {mc,
     {447,5},
     {map_field_assoc,
      {447,11},
      {block,0,[{var,{447,7},'Arg'}]},
      {block,0,
       [{call,
         {447,14},
         {remote,{447,24},{atom,{447,14},beam_types},{atom,{447,25},join}},
         [{block,0,
           [{call,
             {447,30},
             {remote,{447,34},{atom,{447,30},maps},{atom,{447,35},values}},
             [{var,{447,42},'TypeMap'}]}]}]}]}},
     [{block,0,[{debug_line,448,173},{atom,{448,13},true}]},
      {zip,
       {448,13},
       [{generate,{448,13},{var,{448,9},'Arg'},{var,{448,16},'Args'}},
        {generate,
         {448,32},
         {var,{448,24},'TypeMap'},
         {var,{448,35},'TypeMaps'}}]}]}]}]}.
{function,{459,1},
          opt_function,5,
          [{clause,{459,1},
                   [{var,{459,1},'_'},
                    {var,{459,1},'_'},
                    {var,{459,1},'_'},
                    {var,{459,1},'_'},
                    {var,{459,1},'_'}],
                   [[{call,{459,1},
                           {remote,{459,1},
                                   {atom,{459,1},fake},
                                   {atom,{459,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,459,174},{atom,{459,1},ignore}]},
           {clause,{459,1},
                   [{var,{459,14},'Linear'},
                    {var,{459,22},'Args'},
                    {var,{459,28},'Id'},
                    {var,{459,32},'Ts'},
                    {var,{459,36},'FuncDb'}],
                   [],
                   [{debug_line,460,175},
                    {match,{460,5},
                           {var,{460,5},'MetaCache'},
                           {map,{460,17},[]}},
                    {debug_line,461,176},
                    {call,{461,5},
                          {atom,{461,5},opt_function},
                          [{var,{461,18},'Linear'},
                           {var,{461,26},'Args'},
                           {var,{461,32},'Id'},
                           {var,{461,36},'Ts'},
                           {var,{461,40},'FuncDb'},
                           {var,{461,48},'MetaCache'}]}]}]}.
{attribute,
    {463,2},
    spec,
    {{opt_function,6},
     [{type,
          {463,19},
          bounded_fun,
          [{type,
               {463,19},
               'fun',
               [{type,
                    {463,19},
                    product,
                    [{var,{463,20},'Linear'},
                     {var,{463,28},'Args'},
                     {var,{463,34},'Id'},
                     {var,{463,38},'Ts'},
                     {var,{463,42},'FuncDb'},
                     {var,{463,50},'MetaCache'}]},
                {var,{463,64},'Result'}]},
           [{type,
                {464,7},
                constraint,
                [{atom,{464,7},is_subtype},
                 [{var,{464,7},'Linear'},
                  {type,
                      {464,17},
                      list,
                      [{type,
                           {464,18},
                           tuple,
                           [{type,{464,19},non_neg_integer,[]},
                            {remote_type,
                                {464,38},
                                [{atom,{464,38},beam_ssa},
                                 {atom,{464,47},b_blk},
                                 []]}]}]}]]},
            {type,
                {465,7},
                constraint,
                [{atom,{465,7},is_subtype},
                 [{var,{465,7},'Args'},
                  {type,
                      {465,15},
                      list,
                      [{remote_type,
                           {465,16},
                           [{atom,{465,16},beam_ssa},
                            {atom,{465,25},b_var},
                            []]}]}]]},
            {type,
                {466,7},
                constraint,
                [{atom,{466,7},is_subtype},
                 [{var,{466,7},'Id'},{user_type,{466,13},func_id,[]}]]},
            {type,
                {467,7},
                constraint,
                [{atom,{467,7},is_subtype},
                 [{var,{467,7},'Ts'},{user_type,{467,13},type_db,[]}]]},
            {type,
                {468,7},
                constraint,
                [{atom,{468,7},is_subtype},
                 [{var,{468,7},'FuncDb'},
                  {user_type,{468,17},func_info_db,[]}]]},
            {type,
                {469,7},
                constraint,
                [{atom,{469,7},is_subtype},
                 [{var,{469,7},'Result'},
                  {type,
                      {469,17},
                      tuple,
                      [{var,{469,18},'Linear'},{var,{469,26},'FuncDb'}]}]]},
            {type,
                {470,7},
                constraint,
                [{atom,{470,7},is_subtype},
                 [{var,{470,7},'MetaCache'},
                  {user_type,{470,20},meta_cache,[]}]]}]]}]}}.
{function,
    {471,1},
    opt_function,6,
    [{clause,
         {471,1},
         [{var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'},
          {var,{471,1},'_'}],
         [[{call,
               {471,1},
               {remote,
                   {471,1},
                   {atom,{471,1},fake},
                   {atom,{471,1},is_beam_bif_info}},
               []}]],
         [{debug_line,471,177},{atom,{471,1},ignore}]},
     {clause,
         {471,1},
         [{var,{471,14},'Linear'},
          {var,{471,22},'Args'},
          {var,{471,28},'Id'},
          {var,{471,32},'Ts'},
          {var,{471,36},'FuncDb'},
          {var,{471,44},'MetaCache'}],
         [],
         [{debug_line,472,178},
          {'try',
              {472,5},
              [{debug_line,473,179},
               {call,
                   {473,9},
                   {atom,{473,9},do_opt_function},
                   [{var,{473,25},'Linear'},
                    {var,{473,33},'Args'},
                    {var,{473,39},'Id'},
                    {var,{473,43},'Ts'},
                    {var,{473,47},'FuncDb'},
                    {var,{473,55},'MetaCache'}]}],
              [],
              [{clause,
                   {475,9},
                   [{tuple,
                        {475,9},
                        [{var,{475,9},'Class'},
                         {var,{475,15},'Error'},
                         {var,{475,21},'Stack'}]}],
                   [],
                   [{debug_line,476,180},
                    {match,
                        {476,13},
                        {tuple,
                            {476,13},
                            [{atom,{476,13},b_local},
                             {tuple,
                                 {476,27},
                                 [{atom,{476,27},b_literal},
                                  {var,{476,42},'Name'}]},
                             {var,{476,54},'Arity'}]},
                        {var,{476,63},'Id'}},
                    {debug_line,477,181},
                    {call,
                        {477,13},
                        {remote,
                            {477,15},
                            {atom,{477,13},io},
                            {atom,{477,16},fwrite}},
                        [{block,0,[{string,{477,23},"Function: ~w/~w\n"}]},
                         {block,0,
                             [{cons,
                                  {477,44},
                                  {var,{477,45},'Name'},
                                  {cons,
                                      {477,50},
                                      {var,{477,50},'Arity'},
                                      {nil,{477,55}}}}]}]},
                    {debug_line,478,182},
                    {call,
                        {478,13},
                        {remote,
                            {478,19},
                            {atom,{478,13},erlang},
                            {atom,{478,20},raise}},
                        [{var,{478,26},'Class'},
                         {var,{478,33},'Error'},
                         {var,{478,40},'Stack'}]}]}],
              []}]}]}.
{function,
 {481,1},
 do_opt_function,6,
 [{clause,
   {481,1},
   [{var,{481,1},'_'},
    {var,{481,1},'_'},
    {var,{481,1},'_'},
    {var,{481,1},'_'},
    {var,{481,1},'_'},
    {var,{481,1},'_'}],
   [[{call,
      {481,1},
      {remote,{481,1},{atom,{481,1},fake},{atom,{481,1},is_beam_bif_info}},
      []}]],
   [{debug_line,481,183},{atom,{481,1},ignore}]},
  {clause,
   {481,1},
   [{var,{481,17},'Linear0'},
    {var,{481,26},'Args'},
    {var,{481,32},'Id'},
    {var,{481,36},'Ts'},
    {var,{481,40},'FuncDb0'},
    {var,{481,49},'MetaCache'}],
   [],
   [{debug_line,482,184},
    {match,
     {482,5},
     {var,{482,5},'FakeCall'},
     {tuple,
      {482,16},
      [{atom,{482,16},b_set},
       {map,{482,16},[]},
       {atom,{482,16},none},
       {atom,{482,26},call},
       {cons,
        {482,36},
        {tuple,
         {482,37},
         [{atom,{482,37},b_remote},
          {tuple,{482,51},[{atom,{482,51},b_literal},{atom,{482,66},unknown}]},
          {tuple,{483,52},[{atom,{483,52},b_literal},{atom,{483,67},unknown}]},
          {integer,{484,53},0}]},
        {nil,{484,55}}}]}},
    {debug_line,486,185},
    {match,
     {486,5},
     {var,{486,5},'Ds'},
     {mc,
      {486,10},
      {map_field_assoc,
       {486,16},
       {block,0,[{var,{486,12},'Var'}]},
       {block,0,
        [{block,
          {486,19},
          [{match,{486,19},{var,{486,19},rec28},{var,{486,19},'FakeCall'}},
           {'case',
            {486,34},
            {var,{486,19},rec28},
            [{clause,
              {486,34},
              [{tuple,
                {486,34},
                [{atom,{486,34},b_set},
                 {var,{486,34},'_'},
                 {var,{486,34},'_'},
                 {var,{486,34},'_'},
                 {var,{486,34},'_'}]}],
              [],
              [{call,
                {486,34},
                {remote,
                 {486,34},
                 {atom,{486,34},erlang},
                 {atom,{486,34},setelement}},
                [{integer,{486,34},3},
                 {var,{486,19},rec28},
                 {var,{486,38},'Var'}]}]},
             {clause,
              [{generated,true},{location,{486,34}}],
              [{var,[{generated,true},{location,{486,34}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{486,34}}],
                {remote,
                 [{generated,true},{location,{486,34}}],
                 {atom,[{generated,true},{location,{486,34}}],erlang},
                 {atom,[{generated,true},{location,{486,34}}],error}},
                [{tuple,
                  [{generated,true},{location,{486,34}}],
                  [{atom,[{generated,true},{location,{486,34}}],badrecord},
                   {var,{486,19},rec28}]}]}]}]}]}]}},
      [{block,0,[{debug_line,487,186},{atom,{487,30},true}]},
       {generate,
        {487,27},
        {match,
         {487,14},
         {tuple,{487,14},[{atom,{487,14},b_var},{var,{487,14},'_'}]},
         {var,{487,23},'Var'}},
        {var,{487,30},'Args'}}]}},
    {debug_line,489,187},
    {match,
     {489,5},
     {var,{489,5},'Ls'},
     {map,
      {489,10},
      [{map_field_assoc,
        {489,30},
        {integer,{489,14},1},
        {tuple,{489,33},[{atom,{489,34},incoming},{var,{489,44},'Ts'}]}},
       {map_field_assoc,
        {490,15},
        {integer,{490,13},0},
        {tuple,{490,18},[{atom,{490,19},incoming},{var,{490,29},'Ts'}]}}]}},
    {debug_line,492,188},
    {match,
     {492,5},
     {var,{492,5},'Meta'},
     {'case',
      {492,12},
      {var,{492,17},'MetaCache'},
      [{clause,
        {493,16},
        [{map,
          {493,16},
          [{map_field_exact,
            {493,21},
            {var,{493,18},'Id'},
            {var,{493,24},'Meta0'}}]}],
        [],
        [{debug_line,494,189},{var,{494,20},'Meta0'}]},
       {clause,
        {495,16},
        [{map,{495,16},[]}],
        [],
        [{debug_line,496,190},
         {call,
          {496,20},
          {atom,{496,20},init_metadata},
          [{var,{496,34},'Id'},
           {var,{496,38},'Linear0'},
           {var,{496,47},'Args'}]}]}]}},
    {debug_line,499,191},
    {match,
     {499,5},
     {tuple,
      {499,5},
      [{var,{499,6},'Linear'},
       {var,{499,14},'FuncDb'},
       {var,{499,22},'SuccTypes'}]},
     {call,
      {500,9},
      {atom,{500,9},opt_bs},
      [{var,{500,16},'Linear0'},
       {var,{500,25},'Ds'},
       {var,{500,29},'Ls'},
       {var,{500,33},'FuncDb0'},
       {block,0,[{debug_line,500,192},{map,{500,42},[]}]},
       {nil,{500,47}},
       {var,{500,51},'Meta'},
       {nil,{500,57}}]}},
    {debug_line,502,193},
    {'case',
     {502,5},
     {var,{502,10},'FuncDb'},
     [{clause,
       {503,9},
       [{map,
         {503,9},
         [{map_field_exact,
           {503,15},
           {var,{503,12},'Id'},
           {var,{503,18},'Entry0'}}]}],
       [],
       [{debug_line,504,194},
        {match,
         {504,13},
         {var,{504,13},'Entry'},
         {block,
          {504,21},
          [{match,{504,21},{var,{504,21},rec29},{var,{504,21},'Entry0'}},
           {'case',
            {504,38},
            {var,{504,21},rec29},
            [{clause,
              {504,38},
              [{tuple,
                {504,38},
                [{atom,{504,38},func_info},
                 {var,{504,38},'_'},
                 {var,{504,38},'_'},
                 {var,{504,38},'_'},
                 {var,{504,38},'_'},
                 {var,{504,38},'_'}]}],
              [],
              [{call,
                {504,38},
                {remote,
                 {504,38},
                 {atom,{504,38},erlang},
                 {atom,{504,38},setelement}},
                [{integer,{504,38},6},
                 {var,{504,21},rec29},
                 {var,{504,49},'SuccTypes'}]}]},
             {clause,
              [{generated,true},{location,{504,38}}],
              [{var,[{generated,true},{location,{504,38}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{504,38}}],
                {remote,
                 [{generated,true},{location,{504,38}}],
                 {atom,[{generated,true},{location,{504,38}}],erlang},
                 {atom,[{generated,true},{location,{504,38}}],error}},
                [{tuple,
                  [{generated,true},{location,{504,38}}],
                  [{atom,[{generated,true},{location,{504,38}}],badrecord},
                   {var,{504,21},rec29}]}]}]}]}]}},
        {debug_line,505,195},
        {tuple,
         {505,13},
         [{var,{505,14},'Linear'},
          {map,
           {505,28},
           {var,{505,22},'FuncDb'},
           [{map_field_exact,
             {505,34},
             {var,{505,31},'Id'},
             {var,{505,37},'Entry'}}]}]}]},
      {clause,
       {506,9},
       [{map,{506,9},[]}],
       [],
       [{debug_line,508,196},
        {tuple,
         {508,13},
         [{var,{508,14},'Linear'},{var,{508,22},'FuncDb'}]}]}]}]}]}.
{function,
    {511,1},
    get_func_id,1,
    [{clause,
         {511,1},
         [{var,{511,1},'_'}],
         [[{call,
               {511,1},
               {remote,
                   {511,1},
                   {atom,{511,1},fake},
                   {atom,{511,1},is_beam_bif_info}},
               []}]],
         [{debug_line,511,197},{atom,{511,1},ignore}]},
     {clause,
         {511,1},
         [{var,{511,13},'Anno'}],
         [],
         [{debug_line,512,198},
          {match,
              {512,5},
              {map,
                  {512,5},
                  [{map_field_exact,
                       {512,16},
                       {atom,{512,7},func_info},
                       {tuple,
                           {512,18},
                           [{var,{512,19},'_Mod'},
                            {var,{512,25},'Name'},
                            {var,{512,31},'Arity'}]}}]},
              {var,{512,41},'Anno'}},
          {debug_line,513,199},
          {tuple,
              {513,5},
              [{atom,{513,5},b_local},
               {tuple,
                   {513,19},
                   [{atom,{513,19},b_literal},{var,{513,34},'Name'}]},
               {var,{513,47},'Arity'}]}]}]}.
{function,
 {515,1},
 opt_bs,8,
 [{clause,
   {515,1},
   [{var,{515,1},'_'},
    {var,{515,1},'_'},
    {var,{515,1},'_'},
    {var,{515,1},'_'},
    {var,{515,1},'_'},
    {var,{515,1},'_'},
    {var,{515,1},'_'},
    {var,{515,1},'_'}],
   [[{call,
      {515,1},
      {remote,{515,1},{atom,{515,1},fake},{atom,{515,1},is_beam_bif_info}},
      []}]],
   [{debug_line,515,200},{atom,{515,1},ignore}]},
  {clause,
   {515,1},
   [{cons,
     {515,8},
     {tuple,
      {515,9},
      [{var,{515,10},'L'},
       {match,
        {515,13},
        {tuple,
         {515,13},
         [{atom,{515,13},b_blk},
          {var,{515,13},'_'},
          {var,{515,23},'Is0'},
          {var,{515,32},'Last0'}]},
        {var,{515,39},'Blk0'}}]},
     {var,{515,47},'Bs'}},
    {var,{516,8},'Ds0'},
    {var,{516,13},'Ls0'},
    {var,{516,18},'Fdb0'},
    {var,{516,24},'Sub0'},
    {var,{516,30},'SuccTypes0'},
    {var,{516,42},'Meta'},
    {var,{516,48},'Acc'}],
   [],
   [{debug_line,517,201},
    {'case',
     {517,5},
     {var,{517,10},'Ls0'},
     [{clause,
       {518,9},
       [{map,
         {518,9},
         [{map_field_exact,
           {518,14},
           {var,{518,12},'L'},
           {var,{518,17},'Incoming'}}]}],
       [],
       [{debug_line,519,202},
        {match,
         {519,13},
         {tuple,{519,13},[{atom,{519,14},incoming},{var,{519,24},'Ts0'}]},
         {var,{519,31},'Incoming'}},
        {debug_line,521,203},
        {match,
         {521,13},
         {tuple,
          {521,13},
          [{var,{521,14},'Is'},
           {var,{521,18},'Ts'},
           {var,{521,22},'Ds'},
           {var,{521,26},'Fdb'},
           {var,{521,31},'Sub'}]},
         {call,
          {522,17},
          {atom,{522,17},opt_is},
          [{var,{522,24},'Is0'},
           {var,{522,29},'Ts0'},
           {var,{522,34},'Ds0'},
           {var,{522,39},'Ls0'},
           {var,{522,44},'Fdb0'},
           {var,{522,50},'Sub0'},
           {var,{522,56},'Meta'},
           {nil,{522,62}}]}},
        {debug_line,524,204},
        {match,
         {524,13},
         {var,{524,13},'Last1'},
         {call,
          {524,21},
          {atom,{524,21},simplify_terminator},
          [{var,{524,41},'Last0'},
           {var,{524,48},'Ts'},
           {var,{524,52},'Ds'},
           {var,{524,56},'Sub'}]}},
        {debug_line,525,205},
        {match,
         {525,13},
         {var,{525,13},'SuccTypes'},
         {call,
          {525,25},
          {atom,{525,25},update_success_types},
          [{var,{525,46},'Last1'},
           {var,{525,53},'Ts'},
           {var,{525,57},'Ds'},
           {var,{525,61},'Meta'},
           {var,{525,67},'SuccTypes0'}]}},
        {debug_line,527,206},
        {match,
         {527,13},
         {var,{527,13},'UsedOnce'},
         {'case',
          {527,24},
          {var,{527,24},'Meta'},
          [{clause,
            [{generated,true},{location,{527,24}}],
            [{tuple,
              [{generated,true},{location,{527,24}}],
              [{atom,{527,24},metadata},
               {var,{527,24},'_'},
               {var,{527,24},'_'},
               {var,{527,24},'_'},
               {var,{527,24},rec30}]}],
            [],
            [{var,{527,24},rec30}]},
           {clause,
            [{generated,true},{location,{527,24}}],
            [{var,{527,24},rec30}],
            [],
            [{call,
              [{generated,true},{location,{527,24}}],
              {remote,
               [{generated,true},{location,{527,24}}],
               {atom,[{generated,true},{location,{527,24}}],erlang},
               {atom,[{generated,true},{location,{527,24}}],error}},
              [{tuple,
                [{generated,true},{location,{527,24}}],
                [{atom,[{generated,true},{location,{527,24}}],badrecord},
                 {var,{527,24},rec30}]}]}]}]}},
        {debug_line,528,207},
        {match,
         {528,13},
         {tuple,{528,13},[{var,{528,14},'Last2'},{var,{528,21},'Ls1'}]},
         {call,
          {528,28},
          {atom,{528,28},update_successors},
          [{var,{528,46},'Last1'},
           {var,{528,53},'Ts'},
           {var,{528,57},'Ds'},
           {var,{528,61},'Ls0'},
           {var,{528,66},'UsedOnce'}]}},
        {debug_line,530,208},
        {match,
         {530,13},
         {var,{530,13},'Last'},
         {call,
          {530,20},
          {atom,{530,20},opt_anno_types},
          [{var,{530,35},'Last2'},{var,{530,42},'Ts'}]}},
        {debug_line,532,209},
        {match,
         {532,13},
         {var,{532,13},'Ls'},
         {map,
          {532,21},
          {var,{532,18},'Ls1'},
          [{map_field_exact,
            {532,26},
            {var,{532,24},'L'},
            {tuple,
             {532,29},
             [{atom,{532,30},outgoing},{var,{532,40},'Ts'}]}}]}},
        {debug_line,534,210},
        {match,
         {534,13},
         {var,{534,13},'Blk'},
         {block,
          {534,19},
          [{match,{534,19},{var,{534,19},rec31},{var,{534,19},'Blk0'}},
           {'case',
            {534,30},
            {var,{534,19},rec31},
            [{clause,
              {534,30},
              [{tuple,
                {534,30},
                [{atom,{534,30},b_blk},
                 {var,{534,30},'_'},
                 {var,{534,30},'_'},
                 {var,{534,30},'_'}]}],
              [],
              [{call,
                {534,30},
                {remote,
                 {534,30},
                 {atom,{534,30},erlang},
                 {atom,{534,30},setelement}},
                [{integer,{534,30},3},
                 {call,
                  {534,36},
                  {remote,
                   {534,36},
                   {atom,{534,36},erlang},
                   {atom,{534,36},setelement}},
                  [{integer,{534,36},4},
                   {var,{534,19},rec31},
                   {var,{534,41},'Last'}]},
                 {var,{534,33},'Is'}]}]},
             {clause,
              [{generated,true},{location,{534,30}}],
              [{var,[{generated,true},{location,{534,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{534,30}}],
                {remote,
                 [{generated,true},{location,{534,30}}],
                 {atom,[{generated,true},{location,{534,30}}],erlang},
                 {atom,[{generated,true},{location,{534,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{534,30}}],
                  [{atom,[{generated,true},{location,{534,30}}],badrecord},
                   {var,{534,19},rec31}]}]}]}]}]}},
        {debug_line,535,211},
        {call,
         {535,13},
         {atom,{535,13},opt_bs},
         [{var,{535,20},'Bs'},
          {var,{535,24},'Ds'},
          {var,{535,28},'Ls'},
          {var,{535,32},'Fdb'},
          {var,{535,37},'Sub'},
          {var,{535,42},'SuccTypes'},
          {var,{535,53},'Meta'},
          {block,0,
           [{cons,
             {535,59},
             {tuple,{535,60},[{var,{535,61},'L'},{var,{535,63},'Blk'}]},
             {var,{535,70},'Acc'}}]}]}]},
      {clause,
       {536,9},
       [{map,{536,9},[]}],
       [],
       [{debug_line,538,212},
        {call,
         {538,13},
         {atom,{538,13},opt_bs},
         [{var,{538,20},'Bs'},
          {var,{538,24},'Ds0'},
          {var,{538,29},'Ls0'},
          {var,{538,34},'Fdb0'},
          {var,{538,40},'Sub0'},
          {var,{538,46},'SuccTypes0'},
          {var,{538,58},'Meta'},
          {var,{538,64},'Acc'}]}]}]}]},
  {clause,
   {540,1},
   [{nil,{540,8}},
    {var,{540,12},'_Ds'},
    {var,{540,17},'_Ls'},
    {var,{540,22},'Fdb'},
    {var,{540,27},'_Sub'},
    {var,{540,33},'SuccTypes'},
    {var,{540,44},'_Meta'},
    {var,{540,51},'Acc'}],
   [],
   [{debug_line,541,213},
    {tuple,
     {541,5},
     [{call,
       {541,6},
       {remote,{541,6},{atom,{541,6},lists},{atom,{541,6},reverse}},
       [{var,{541,14},'Acc'}]},
      {var,{541,20},'Fdb'},
      {var,{541,25},'SuccTypes'}]}]}]}.
{function,
 {543,1},
 opt_is,8,
 [{clause,
   {543,1},
   [{var,{543,1},'_'},
    {var,{543,1},'_'},
    {var,{543,1},'_'},
    {var,{543,1},'_'},
    {var,{543,1},'_'},
    {var,{543,1},'_'},
    {var,{543,1},'_'},
    {var,{543,1},'_'}],
   [[{call,
      {543,1},
      {remote,{543,1},{atom,{543,1},fake},{atom,{543,1},is_beam_bif_info}},
      []}]],
   [{debug_line,543,214},{atom,{543,1},ignore}]},
  {clause,
   {543,1},
   [{cons,
     {543,8},
     {match,
      {543,9},
      {tuple,
       {543,9},
       [{atom,{543,9},b_set},
        {var,{543,9},'_'},
        {var,{545,20},'Dst'},
        {atom,{543,19},call},
        {match,
         {544,21},
         {cons,
          {544,21},
          {match,
           {544,22},
           {tuple,
            {544,22},
            [{atom,{544,22},b_local},{var,{544,22},'_'},{var,{544,22},'_'}]},
           {var,{544,33},'Callee'}},
          {var,{544,42},'_'}},
         {var,{544,45},'Args0'}}]},
      {var,{545,25},'I0'}},
     {var,{545,30},'Is'}},
    {var,{546,8},'Ts0'},
    {var,{546,13},'Ds0'},
    {var,{546,18},'Ls'},
    {var,{546,22},'Fdb0'},
    {var,{546,28},'Sub'},
    {var,{546,33},'Meta'},
    {var,{546,39},'Acc'}],
   [],
   [{debug_line,547,215},
    {match,
     {547,5},
     {var,{547,5},'Args'},
     {call,
      {547,12},
      {atom,{547,12},simplify_args},
      [{var,{547,26},'Args0'},{var,{547,33},'Ts0'},{var,{547,38},'Sub'}]}},
    {debug_line,548,216},
    {match,
     {548,5},
     {var,{548,5},'I1'},
     {block,
      {548,10},
      [{match,{548,10},{var,{548,10},rec32},{var,{548,10},'I0'}},
       {'case',
        {548,19},
        {var,{548,10},rec32},
        [{clause,
          {548,19},
          [{tuple,
            {548,19},
            [{atom,{548,19},b_set},
             {var,{548,19},'_'},
             {var,{548,19},'_'},
             {var,{548,19},'_'},
             {var,{548,19},'_'}]}],
          [],
          [{call,
            {548,19},
            {remote,
             {548,19},
             {atom,{548,19},erlang},
             {atom,{548,19},setelement}},
            [{integer,{548,19},5},
             {var,{548,10},rec32},
             {var,{548,24},'Args'}]}]},
         {clause,
          [{generated,true},{location,{548,19}}],
          [{var,[{generated,true},{location,{548,19}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{548,19}}],
            {remote,
             [{generated,true},{location,{548,19}}],
             {atom,[{generated,true},{location,{548,19}}],erlang},
             {atom,[{generated,true},{location,{548,19}}],error}},
            [{tuple,
              [{generated,true},{location,{548,19}}],
              [{atom,[{generated,true},{location,{548,19}}],badrecord},
               {var,{548,10},rec32}]}]}]}]}]}},
    {debug_line,550,217},
    {match,
     {550,5},
     {cons,{550,5},{var,{550,6},'_'},{var,{550,10},'CallArgs'}},
     {var,{550,22},'Args'}},
    {debug_line,551,218},
    {match,
     {551,5},
     {tuple,{551,5},[{var,{551,6},'I'},{var,{551,9},'Fdb'}]},
     {call,
      {551,16},
      {atom,{551,16},opt_local_call},
      [{var,{551,31},'I1'},
       {var,{551,35},'Callee'},
       {var,{551,43},'CallArgs'},
       {var,{551,53},'Dst'},
       {var,{551,58},'Ts0'},
       {var,{551,63},'Fdb0'},
       {var,{551,69},'Meta'}]}},
    {debug_line,553,219},
    {match,
     {553,5},
     {var,{553,5},'Ts'},
     {call,
      {553,10},
      {atom,{553,10},update_types},
      [{var,{553,23},'I'},{var,{553,26},'Ts0'},{var,{553,31},'Ds0'}]}},
    {debug_line,554,220},
    {match,
     {554,5},
     {var,{554,5},'Ds'},
     {map,
      {554,13},
      {var,{554,10},'Ds0'},
      [{map_field_assoc,{554,20},{var,{554,16},'Dst'},{var,{554,23},'I'}}]}},
    {debug_line,555,221},
    {call,
     {555,5},
     {atom,{555,5},opt_is},
     [{var,{555,12},'Is'},
      {var,{555,16},'Ts'},
      {var,{555,20},'Ds'},
      {var,{555,24},'Ls'},
      {var,{555,28},'Fdb'},
      {var,{555,33},'Sub'},
      {var,{555,38},'Meta'},
      {block,0,[{cons,{555,44},{var,{555,45},'I'},{var,{555,49},'Acc'}}]}]}]},
  {clause,
   {556,1},
   [{cons,
     {556,8},
     {match,
      {556,9},
      {tuple,
       {556,9},
       [{atom,{556,9},b_set},
        {var,{556,9},'_'},
        {var,{558,20},'Dst'},
        {atom,{556,19},call},
        {match,
         {557,21},
         {cons,
          {557,21},
          {tuple,{557,22},[{atom,{557,22},b_var},{var,{557,22},'_'}]},
          {var,{557,33},'_'}},
         {var,{557,36},'Args0'}}]},
      {var,{558,25},'I0'}},
     {var,{558,30},'Is'}},
    {var,{559,8},'Ts0'},
    {var,{559,13},'Ds0'},
    {var,{559,18},'Ls'},
    {var,{559,22},'Fdb0'},
    {var,{559,28},'Sub'},
    {var,{559,33},'Meta'},
    {var,{559,39},'Acc'}],
   [],
   [{debug_line,560,222},
    {match,
     {560,5},
     {var,{560,5},'Args'},
     {call,
      {560,12},
      {atom,{560,12},simplify_args},
      [{var,{560,26},'Args0'},{var,{560,33},'Ts0'},{var,{560,38},'Sub'}]}},
    {debug_line,562,223},
    {match,
     {562,5},
     {var,{562,5},'I1'},
     {call,
      {562,10},
      {atom,{562,10},opt_anno_types},
      [{block,0,
        [{block,
          {562,25},
          [{match,{562,25},{var,{562,25},rec33},{var,{562,25},'I0'}},
           {'case',
            {562,34},
            {var,{562,25},rec33},
            [{clause,
              {562,34},
              [{tuple,
                {562,34},
                [{atom,{562,34},b_set},
                 {var,{562,34},'_'},
                 {var,{562,34},'_'},
                 {var,{562,34},'_'},
                 {var,{562,34},'_'}]}],
              [],
              [{call,
                {562,34},
                {remote,
                 {562,34},
                 {atom,{562,34},erlang},
                 {atom,{562,34},setelement}},
                [{integer,{562,34},5},
                 {var,{562,25},rec33},
                 {var,{562,39},'Args'}]}]},
             {clause,
              [{generated,true},{location,{562,34}}],
              [{var,[{generated,true},{location,{562,34}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{562,34}}],
                {remote,
                 [{generated,true},{location,{562,34}}],
                 {atom,[{generated,true},{location,{562,34}}],erlang},
                 {atom,[{generated,true},{location,{562,34}}],error}},
                [{tuple,
                  [{generated,true},{location,{562,34}}],
                  [{atom,[{generated,true},{location,{562,34}}],badrecord},
                   {var,{562,25},rec33}]}]}]}]}]}]},
       {var,{562,46},'Ts0'}]}},
    {debug_line,564,224},
    {match,
     {564,5},
     {tuple,{564,5},[{var,{564,6},'I'},{var,{564,9},'Fdb'}]},
     {call,
      {564,16},
      {atom,{564,16},opt_fun_call},
      [{var,{564,29},'I1'},
       {var,{564,33},'Args'},
       {var,{564,39},'Ts0'},
       {var,{564,44},'Ds0'},
       {var,{564,49},'Fdb0'},
       {var,{564,55},'Sub'},
       {var,{564,60},'Meta'}]}},
    {debug_line,566,225},
    {match,
     {566,5},
     {var,{566,5},'Ts'},
     {call,
      {566,10},
      {atom,{566,10},update_types},
      [{var,{566,23},'I'},{var,{566,26},'Ts0'},{var,{566,31},'Ds0'}]}},
    {debug_line,567,226},
    {match,
     {567,5},
     {var,{567,5},'Ds'},
     {map,
      {567,13},
      {var,{567,10},'Ds0'},
      [{map_field_assoc,{567,20},{var,{567,16},'Dst'},{var,{567,23},'I'}}]}},
    {debug_line,568,227},
    {call,
     {568,5},
     {atom,{568,5},opt_is},
     [{var,{568,12},'Is'},
      {var,{568,16},'Ts'},
      {var,{568,20},'Ds'},
      {var,{568,24},'Ls'},
      {var,{568,28},'Fdb'},
      {var,{568,33},'Sub'},
      {var,{568,38},'Meta'},
      {block,0,[{cons,{568,44},{var,{568,45},'I'},{var,{568,49},'Acc'}}]}]}]},
  {clause,
   {569,1},
   [{cons,
     {569,8},
     {match,
      {569,9},
      {tuple,
       {569,9},
       [{atom,{569,9},b_set},
        {var,{569,9},'_'},
        {var,{569,43},'Dst'},
        {atom,{569,19},make_fun},
        {var,{569,33},'Args0'}]},
      {var,{569,48},'I0'}},
     {var,{569,51},'Is'}},
    {var,{570,8},'Ts0'},
    {var,{570,13},'Ds0'},
    {var,{570,18},'Ls'},
    {var,{570,22},'Fdb0'},
    {var,{570,28},'Sub0'},
    {var,{570,34},'Meta'},
    {var,{570,40},'Acc'}],
   [],
   [{debug_line,571,228},
    {match,
     {571,5},
     {var,{571,5},'Args'},
     {call,
      {571,12},
      {atom,{571,12},simplify_args},
      [{var,{571,26},'Args0'},{var,{571,33},'Ts0'},{var,{571,38},'Sub0'}]}},
    {debug_line,572,229},
    {match,
     {572,5},
     {var,{572,5},'I1'},
     {block,
      {572,10},
      [{match,{572,10},{var,{572,10},rec34},{var,{572,10},'I0'}},
       {'case',
        {572,19},
        {var,{572,10},rec34},
        [{clause,
          {572,19},
          [{tuple,
            {572,19},
            [{atom,{572,19},b_set},
             {var,{572,19},'_'},
             {var,{572,19},'_'},
             {var,{572,19},'_'},
             {var,{572,19},'_'}]}],
          [],
          [{call,
            {572,19},
            {remote,
             {572,19},
             {atom,{572,19},erlang},
             {atom,{572,19},setelement}},
            [{integer,{572,19},5},
             {var,{572,10},rec34},
             {var,{572,24},'Args'}]}]},
         {clause,
          [{generated,true},{location,{572,19}}],
          [{var,[{generated,true},{location,{572,19}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{572,19}}],
            {remote,
             [{generated,true},{location,{572,19}}],
             {atom,[{generated,true},{location,{572,19}}],erlang},
             {atom,[{generated,true},{location,{572,19}}],error}},
            [{tuple,
              [{generated,true},{location,{572,19}}],
              [{atom,[{generated,true},{location,{572,19}}],badrecord},
               {var,{572,10},rec34}]}]}]}]}]}},
    {debug_line,574,230},
    {match,
     {574,5},
     {tuple,{574,5},[{var,{574,6},'I'},{var,{574,9},'Fdb'}]},
     {call,
      {574,16},
      {atom,{574,16},opt_make_fun},
      [{var,{574,29},'I1'},
       {var,{574,33},'Ts0'},
       {var,{574,38},'Fdb0'},
       {var,{574,44},'Meta'}]}},
    {debug_line,576,231},
    {match,
     {576,5},
     {var,{576,5},'Ts'},
     {call,
      {576,10},
      {atom,{576,10},update_types},
      [{var,{576,23},'I'},{var,{576,26},'Ts0'},{var,{576,31},'Ds0'}]}},
    {debug_line,577,232},
    {match,
     {577,5},
     {var,{577,5},'Ds'},
     {map,
      {577,13},
      {var,{577,10},'Ds0'},
      [{map_field_assoc,{577,20},{var,{577,16},'Dst'},{var,{577,23},'I'}}]}},
    {debug_line,578,233},
    {call,
     {578,5},
     {atom,{578,5},opt_is},
     [{var,{578,12},'Is'},
      {var,{578,16},'Ts'},
      {var,{578,20},'Ds'},
      {var,{578,24},'Ls'},
      {var,{578,28},'Fdb'},
      {var,{578,33},'Sub0'},
      {var,{578,39},'Meta'},
      {block,0,[{cons,{578,45},{var,{578,46},'I'},{var,{578,48},'Acc'}}]}]}]},
  {clause,
   {579,1},
   [{cons,{579,8},{var,{579,9},'I0'},{var,{579,14},'Is'}},
    {var,{579,19},'Ts0'},
    {var,{579,24},'Ds0'},
    {var,{579,29},'Ls'},
    {var,{579,33},'Fdb'},
    {var,{579,38},'Sub0'},
    {var,{579,44},'Meta'},
    {var,{579,50},'Acc'}],
   [],
   [{debug_line,580,234},
    {'case',
     {580,5},
     {call,
      {580,10},
      {atom,{580,10},simplify},
      [{var,{580,19},'I0'},
       {var,{580,23},'Ts0'},
       {var,{580,28},'Ds0'},
       {var,{580,33},'Ls'},
       {var,{580,37},'Sub0'}]},
     [{clause,
       {581,9},
       [{tuple,
         {581,9},
         [{match,
           {581,10},
           {tuple,
            {581,10},
            [{atom,{581,10},b_set},
             {var,{581,10},'_'},
             {var,{581,10},'_'},
             {var,{581,10},'_'},
             {var,{581,10},'_'}]},
           {var,{581,19},'I1'}},
          {var,{581,23},'Ts'},
          {var,{581,27},'Ds'}]}],
       [],
       [{debug_line,582,235},
        {match,
         {582,13},
         {var,{582,13},'I'},
         {call,
          {582,17},
          {atom,{582,17},opt_anno_types},
          [{var,{582,32},'I1'},{var,{582,36},'Ts'}]}},
        {debug_line,583,236},
        {call,
         {583,13},
         {atom,{583,13},opt_is},
         [{var,{583,20},'Is'},
          {var,{583,24},'Ts'},
          {var,{583,28},'Ds'},
          {var,{583,32},'Ls'},
          {var,{583,36},'Fdb'},
          {var,{583,41},'Sub0'},
          {var,{583,47},'Meta'},
          {block,0,
           [{cons,{583,53},{var,{583,54},'I'},{var,{583,58},'Acc'}}]}]}]},
      {clause,
       {584,9},
       [{var,{584,9},'Sub'}],
       [[{call,
          {584,18},
          {remote,{584,18},{atom,{584,18},erlang},{atom,{584,18},is_map}},
          [{var,{584,25},'Sub'}]}]],
       [{debug_line,585,237},
        {call,
         {585,13},
         {atom,{585,13},opt_is},
         [{var,{585,20},'Is'},
          {var,{585,24},'Ts0'},
          {var,{585,29},'Ds0'},
          {var,{585,34},'Ls'},
          {var,{585,38},'Fdb'},
          {var,{585,43},'Sub'},
          {var,{585,48},'Meta'},
          {var,{585,54},'Acc'}]}]}]}]},
  {clause,
   {587,1},
   [{nil,{587,8}},
    {var,{587,12},'Ts'},
    {var,{587,16},'Ds'},
    {var,{587,20},'_Ls'},
    {var,{587,25},'Fdb'},
    {var,{587,30},'Sub'},
    {var,{587,35},'_Meta'},
    {var,{587,42},'Acc'}],
   [],
   [{debug_line,588,238},
    {tuple,
     {588,5},
     [{call,
       {588,6},
       {remote,{588,6},{atom,{588,6},lists},{atom,{588,6},reverse}},
       [{var,{588,14},'Acc'}]},
      {var,{588,20},'Ts'},
      {var,{588,24},'Ds'},
      {var,{588,28},'Fdb'},
      {var,{588,33},'Sub'}]}]}]}.
{function,
 {598,1},
 opt_anno_types,2,
 [{clause,
   {598,1},
   [{var,{598,1},'_'},{var,{598,1},'_'}],
   [[{call,
      {598,1},
      {remote,{598,1},{atom,{598,1},fake},{atom,{598,1},is_beam_bif_info}},
      []}]],
   [{debug_line,598,239},{atom,{598,1},ignore}]},
  {clause,
   {598,1},
   [{match,
     {598,16},
     {tuple,
      {598,16},
      [{atom,{598,16},b_set},
       {var,{598,28},'Anno0'},
       {var,{598,16},'_'},
       {var,{598,37},'Op'},
       {var,{598,45},'Args'}]},
     {var,{598,51},'I'}},
    {var,{598,54},'Ts'}],
   [],
   [{debug_line,599,240},
    {'case',
     {599,5},
     {call,
      {599,10},
      {atom,{599,10},benefits_from_type_anno},
      [{var,{599,34},'Op'},{var,{599,38},'Args'}]},
     [{clause,
       {600,9},
       [{atom,{600,9},true}],
       [],
       [{debug_line,601,241},
        {call,
         {601,13},
         {atom,{601,13},opt_anno_types_1},
         [{var,{601,30},'I'},
          {var,{601,33},'Args'},
          {var,{601,39},'Ts'},
          {integer,{601,43},0},
          {block,0,[{map,{601,46},[]}]}]}]},
      {clause,
       {602,9},
       [{atom,{602,9},false}],
       [],
       [{debug_line,603,242},
        {'case',
         {603,13},
         {var,{603,18},'Anno0'},
         [{clause,
           {604,17},
           [{map,
             {604,17},
             [{map_field_exact,
               {604,29},
               {atom,{604,19},arg_types},
               {var,{604,32},'_'}}]}],
           [],
           [{debug_line,609,243},
            {match,
             {609,21},
             {var,{609,21},'Anno'},
             {call,
              {609,28},
              {remote,{609,32},{atom,{609,28},maps},{atom,{609,33},remove}},
              [{atom,{609,40},arg_types},{var,{609,51},'Anno0'}]}},
            {debug_line,610,244},
            {block,
             {610,21},
             [{match,{610,21},{var,{610,21},rec35},{var,{610,21},'I'}},
              {'case',
               {610,29},
               {var,{610,21},rec35},
               [{clause,
                 {610,29},
                 [{tuple,
                   {610,29},
                   [{atom,{610,29},b_set},
                    {var,{610,29},'_'},
                    {var,{610,29},'_'},
                    {var,{610,29},'_'},
                    {var,{610,29},'_'}]}],
                 [],
                 [{call,
                   {610,29},
                   {remote,
                    {610,29},
                    {atom,{610,29},erlang},
                    {atom,{610,29},setelement}},
                   [{integer,{610,29},2},
                    {var,{610,21},rec35},
                    {var,{610,34},'Anno'}]}]},
                {clause,
                 [{generated,true},{location,{610,29}}],
                 [{var,[{generated,true},{location,{610,29}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{610,29}}],
                   {remote,
                    [{generated,true},{location,{610,29}}],
                    {atom,[{generated,true},{location,{610,29}}],erlang},
                    {atom,[{generated,true},{location,{610,29}}],error}},
                   [{tuple,
                     [{generated,true},{location,{610,29}}],
                     [{atom,[{generated,true},{location,{610,29}}],badrecord},
                      {var,{610,21},rec35}]}]}]}]}]}]},
          {clause,
           {611,17},
           [{var,{611,17},'_'}],
           [],
           [{debug_line,612,245},{var,{612,21},'I'}]}]}]}]}]},
  {clause,
   {615,1},
   [{match,
     {615,16},
     {tuple,
      {615,16},
      [{atom,{615,16},b_switch},
       {var,{615,31},'Anno0'},
       {var,{615,41},'Arg'},
       {var,{615,16},'_'},
       {var,{615,16},'_'}]},
     {var,{615,46},'I'}},
    {var,{615,49},'Ts'}],
   [],
   [{debug_line,616,246},
    {'case',
     {616,5},
     {call,
      {616,10},
      {atom,{616,10},concrete_type},
      [{var,{616,24},'Arg'},{var,{616,29},'Ts'}]},
     [{clause,
       {617,9},
       [{atom,{617,9},any}],
       [],
       [{debug_line,618,247},{var,{618,13},'I'}]},
      {clause,
       {619,9},
       [{var,{619,9},'Type'}],
       [],
       [{debug_line,620,248},
        {match,
         {620,13},
         {var,{620,13},'Anno'},
         {map,
          {620,25},
          {var,{620,20},'Anno0'},
          [{map_field_assoc,
            {620,37},
            {atom,{620,27},arg_types},
            {map,
             {620,40},
             [{map_field_assoc,
               {620,44},
               {integer,{620,42},0},
               {var,{620,47},'Type'}}]}}]}},
        {debug_line,621,249},
        {block,
         {621,13},
         [{match,{621,13},{var,{621,13},rec36},{var,{621,13},'I'}},
          {'case',
           {621,24},
           {var,{621,13},rec36},
           [{clause,
             {621,24},
             [{tuple,
               {621,24},
               [{atom,{621,24},b_switch},
                {var,{621,24},'_'},
                {var,{621,24},'_'},
                {var,{621,24},'_'},
                {var,{621,24},'_'}]}],
             [],
             [{call,
               {621,24},
               {remote,
                {621,24},
                {atom,{621,24},erlang},
                {atom,{621,24},setelement}},
               [{integer,{621,24},2},
                {var,{621,13},rec36},
                {var,{621,29},'Anno'}]}]},
            {clause,
             [{generated,true},{location,{621,24}}],
             [{var,[{generated,true},{location,{621,24}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{621,24}}],
               {remote,
                [{generated,true},{location,{621,24}}],
                {atom,[{generated,true},{location,{621,24}}],erlang},
                {atom,[{generated,true},{location,{621,24}}],error}},
               [{tuple,
                 [{generated,true},{location,{621,24}}],
                 [{atom,[{generated,true},{location,{621,24}}],badrecord},
                  {var,{621,13},rec36}]}]}]}]}]}]}]}]},
  {clause,
   {623,1},
   [{var,{623,16},'I'},{var,{623,19},'_Ts'}],
   [],
   [{debug_line,624,250},{var,{624,5},'I'}]}]}.
{function,
 {626,1},
 opt_anno_types_1,5,
 [{clause,
   {626,1},
   [{var,{626,1},'_'},
    {var,{626,1},'_'},
    {var,{626,1},'_'},
    {var,{626,1},'_'},
    {var,{626,1},'_'}],
   [[{call,
      {626,1},
      {remote,{626,1},{atom,{626,1},fake},{atom,{626,1},is_beam_bif_info}},
      []}]],
   [{debug_line,626,251},{atom,{626,1},ignore}]},
  {clause,
   {626,1},
   [{var,{626,18},'I'},
    {cons,
     {626,21},
     {match,
      {626,22},
      {tuple,{626,22},[{atom,{626,22},b_var},{var,{626,22},'_'}]},
      {var,{626,31},'Var'}},
     {var,{626,37},'Args'}},
    {var,{626,44},'Ts'},
    {var,{626,48},'Index'},
    {var,{626,55},'Acc0'}],
   [],
   [{debug_line,627,252},
    {'case',
     {627,5},
     {call,
      {627,10},
      {atom,{627,10},concrete_type},
      [{var,{627,24},'Var'},{var,{627,29},'Ts'}]},
     [{clause,
       {628,9},
       [{atom,{628,9},any}],
       [],
       [{debug_line,629,253},
        {call,
         {629,13},
         {atom,{629,13},opt_anno_types_1},
         [{var,{629,30},'I'},
          {var,{629,33},'Args'},
          {var,{629,39},'Ts'},
          {block,0,
           [{op,{629,49},'+',{var,{629,43},'Index'},{integer,{629,51},1}}]},
          {var,{629,54},'Acc0'}]}]},
      {clause,
       {630,9},
       [{var,{630,9},'Type'}],
       [],
       [{debug_line,633,254},
        {match,
         {633,13},
         {var,{633,13},'Acc'},
         {map,
          {633,23},
          {var,{633,19},'Acc0'},
          [{map_field_assoc,
            {633,32},
            {var,{633,26},'Index'},
            {var,{633,35},'Type'}}]}},
        {debug_line,634,255},
        {call,
         {634,13},
         {atom,{634,13},opt_anno_types_1},
         [{var,{634,30},'I'},
          {var,{634,33},'Args'},
          {var,{634,39},'Ts'},
          {block,0,
           [{op,{634,49},'+',{var,{634,43},'Index'},{integer,{634,51},1}}]},
          {var,{634,54},'Acc'}]}]}]}]},
  {clause,
   {636,1},
   [{var,{636,18},'I'},
    {cons,{636,21},{var,{636,22},'_Arg'},{var,{636,29},'Args'}},
    {var,{636,36},'Ts'},
    {var,{636,40},'Index'},
    {var,{636,47},'Acc'}],
   [],
   [{debug_line,637,256},
    {call,
     {637,5},
     {atom,{637,5},opt_anno_types_1},
     [{var,{637,22},'I'},
      {var,{637,25},'Args'},
      {var,{637,31},'Ts'},
      {block,0,
       [{op,{637,41},'+',{var,{637,35},'Index'},{integer,{637,43},1}}]},
      {var,{637,46},'Acc'}]}]},
  {clause,
   {638,1},
   [{match,
     {638,18},
     {tuple,
      {638,18},
      [{atom,{638,18},b_set},
       {var,{638,30},'Anno0'},
       {var,{638,18},'_'},
       {var,{638,18},'_'},
       {var,{638,18},'_'}]},
     {var,{638,37},'I'}},
    {nil,{638,40}},
    {var,{638,44},'_Ts'},
    {var,{638,49},'_Index'},
    {var,{638,57},'Acc'}],
   [],
   [{debug_line,639,257},
    {'case',
     {639,5},
     {var,{639,10},'Anno0'},
     [{clause,
       {640,9},
       [{map,
         {640,9},
         [{map_field_exact,
           {640,22},
           {atom,{640,12},arg_types},
           {var,{640,25},'Acc'}}]}],
       [],
       [{debug_line,641,258},{var,{641,13},'I'}]},
      {clause,
       {642,9},
       [{map,{642,9},[]}],
       [],
       [{debug_line,643,259},
        {match,
         {643,13},
         {var,{643,13},'Anno'},
         {map,
          {643,25},
          {var,{643,20},'Anno0'},
          [{map_field_assoc,
            {643,38},
            {atom,{643,28},arg_types},
            {var,{643,41},'Acc'}}]}},
        {debug_line,644,260},
        {block,
         {644,13},
         [{match,{644,13},{var,{644,13},rec37},{var,{644,13},'I'}},
          {'case',
           {644,21},
           {var,{644,13},rec37},
           [{clause,
             {644,21},
             [{tuple,
               {644,21},
               [{atom,{644,21},b_set},
                {var,{644,21},'_'},
                {var,{644,21},'_'},
                {var,{644,21},'_'},
                {var,{644,21},'_'}]}],
             [],
             [{call,
               {644,21},
               {remote,
                {644,21},
                {atom,{644,21},erlang},
                {atom,{644,21},setelement}},
               [{integer,{644,21},2},
                {var,{644,13},rec37},
                {var,{644,26},'Anno'}]}]},
            {clause,
             [{generated,true},{location,{644,21}}],
             [{var,[{generated,true},{location,{644,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{644,21}}],
               {remote,
                [{generated,true},{location,{644,21}}],
                {atom,[{generated,true},{location,{644,21}}],erlang},
                {atom,[{generated,true},{location,{644,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{644,21}}],
                 [{atom,[{generated,true},{location,{644,21}}],badrecord},
                  {var,{644,13},rec37}]}]}]}]}]}]}]}]}]}.
{function,{648,1},
          benefits_from_type_anno,2,
          [{clause,{648,1},
                   [{var,{648,1},'_'},{var,{648,1},'_'}],
                   [[{call,{648,1},
                           {remote,{648,1},
                                   {atom,{648,1},fake},
                                   {atom,{648,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,648,261},{atom,{648,1},ignore}]},
           {clause,{648,1},
                   [{tuple,{648,25},
                           [{atom,{648,26},bif},{var,{648,30},'_Op'}]},
                    {var,{648,36},'_Args'}],
                   [],
                   [{debug_line,649,262},{atom,{649,5},true}]},
           {clause,{650,1},
                   [{atom,{650,25},bs_create_bin},{var,{650,40},'_Args'}],
                   [],
                   [{debug_line,651,263},{atom,{651,5},true}]},
           {clause,{652,1},
                   [{atom,{652,25},bs_match},{var,{652,35},'_Args'}],
                   [],
                   [{debug_line,653,264},{atom,{653,5},true}]},
           {clause,{654,1},
                   [{atom,{654,25},bs_start_match},{var,{654,41},'_Args'}],
                   [],
                   [{debug_line,655,265},{atom,{655,5},true}]},
           {clause,{656,1},
                   [{atom,{656,25},is_tagged_tuple},{var,{656,42},'_Args'}],
                   [],
                   [{debug_line,657,266},{atom,{657,5},true}]},
           {clause,{658,1},
                   [{atom,{658,25},call},
                    {cons,{658,31},
                          {tuple,{658,32},
                                 [{atom,{658,32},b_var},{var,{658,32},'_'}]},
                          {var,{658,43},'_'}}],
                   [],
                   [{debug_line,659,267},{atom,{659,5},true}]},
           {clause,{660,1},
                   [{tuple,{660,25},
                           [{atom,{660,26},float},{atom,{660,32},convert}]},
                    {var,{660,42},'_Args'}],
                   [],
                   [{debug_line,665,268},{atom,{665,5},true}]},
           {clause,{666,1},
                   [{atom,{666,25},get_map_element},{var,{666,42},'_Args'}],
                   [],
                   [{debug_line,667,269},{atom,{667,5},true}]},
           {clause,{668,1},
                   [{atom,{668,25},has_map_field},{var,{668,40},'_Args'}],
                   [],
                   [{debug_line,669,270},{atom,{669,5},true}]},
           {clause,{673,1},
                   [{atom,{673,25},put_list},{var,{673,35},'_Args'}],
                   [],
                   [{debug_line,674,271},{atom,{674,5},true}]},
           {clause,{675,1},
                   [{atom,{675,25},put_tuple},{var,{675,36},'_Args'}],
                   [],
                   [{debug_line,676,272},{atom,{676,5},true}]},
           {clause,{677,1},
                   [{atom,{677,25},get_tuple_element},{var,{677,44},'_Args'}],
                   [],
                   [{debug_line,678,273},{atom,{678,5},true}]},
           {clause,{679,1},
                   [{atom,{679,25},get_hd},{var,{679,33},'_Args'}],
                   [],
                   [{debug_line,680,274},{atom,{680,5},true}]},
           {clause,{681,1},
                   [{atom,{681,25},get_tl},{var,{681,33},'_Args'}],
                   [],
                   [{debug_line,682,275},{atom,{682,5},true}]},
           {clause,{683,1},
                   [{atom,{683,25},update_record},{var,{683,40},'_Args'}],
                   [],
                   [{debug_line,684,276},{atom,{684,5},true}]},
           {clause,{685,1},
                   [{var,{685,25},'_Op'},{var,{685,30},'_Args'}],
                   [],
                   [{debug_line,686,277},{atom,{686,5},false}]}]}.
{function,
 {688,1},
 opt_fun_call,7,
 [{clause,
   {688,1},
   [{var,{688,1},'_'},
    {var,{688,1},'_'},
    {var,{688,1},'_'},
    {var,{688,1},'_'},
    {var,{688,1},'_'},
    {var,{688,1},'_'},
    {var,{688,1},'_'}],
   [[{call,
      {688,1},
      {remote,{688,1},{atom,{688,1},fake},{atom,{688,1},is_beam_bif_info}},
      []}]],
   [{debug_line,688,278},{atom,{688,1},ignore}]},
  {clause,
   {688,1},
   [{match,
     {688,14},
     {tuple,
      {688,14},
      [{atom,{688,14},b_set},
       {var,{688,14},'_'},
       {var,{688,25},'Dst'},
       {var,{688,14},'_'},
       {var,{688,14},'_'}]},
     {var,{688,30},'I0'}},
    {cons,{688,34},{var,{688,35},'Fun'},{var,{688,41},'CallArgs0'}},
    {var,{688,53},'Ts'},
    {var,{688,57},'Ds'},
    {var,{688,61},'Fdb'},
    {var,{688,66},'Sub'},
    {var,{688,71},'Meta'}],
   [],
   [{debug_line,689,279},
    {match,
     {689,5},
     {var,{689,5},'FunType'},
     {call,
      {689,15},
      {atom,{689,15},normalized_type},
      [{var,{689,31},'Fun'},{var,{689,36},'Ts'}]}},
    {debug_line,690,280},
    {match,
     {690,5},
     {var,{690,5},'Arity'},
     {call,
      {690,13},
      {remote,{690,13},{atom,{690,13},erlang},{atom,{690,13},length}},
      [{var,{690,20},'CallArgs0'}]}},
    {debug_line,691,281},
    {'case',
     {691,5},
     {tuple,{691,10},[{var,{691,11},'FunType'},{var,{691,20},'Ds'}]},
     [{clause,
       {692,9},
       [{tuple,
         {692,9},
         [{var,{692,10},'_'},
          {map,
           {692,13},
           [{map_field_exact,
             {692,20},
             {var,{692,16},'Fun'},
             {tuple,
              {692,23},
              [{atom,{692,23},b_set},
               {var,{692,23},'_'},
               {var,{692,23},'_'},
               {atom,{692,33},make_fun},
               {cons,
                {693,35},
                {match,
                 {693,36},
                 {tuple,
                  {693,36},
                  [{atom,{693,36},b_local},
                   {var,{693,36},'_'},
                   {var,{693,51},'TotalArity'}]},
                 {var,{693,63},'Callee'}},
                {var,{693,72},'Env'}}]}}]}]}],
       [[{op,
          {694,27},
          '=:=',
          {var,{694,16},'TotalArity'},
          {op,
           {694,37},
           '+',
           {var,{694,31},'Arity'},
           {call,
            {694,39},
            {remote,{694,39},{atom,{694,39},erlang},{atom,{694,39},length}},
            [{var,{694,46},'Env'}]}}}]],
       [{debug_line,697,282},
        {match,
         {697,13},
         {var,{697,13},'CallArgs'},
         {op,
          {697,34},
          '++',
          {var,{697,24},'CallArgs0'},
          {call,
           {697,37},
           {atom,{697,37},simplify_args},
           [{var,{697,51},'Env'},{var,{697,56},'Ts'},{var,{697,60},'Sub'}]}}},
        {debug_line,698,283},
        {match,
         {698,13},
         {var,{698,13},'I'},
         {block,
          {698,17},
          [{match,
            {698,26},
            {var,{698,26},rec38},
            {cons,{698,31},{var,{698,32},'Callee'},{var,{698,41},'CallArgs'}}},
           {match,{698,17},{var,{698,17},rec39},{var,{698,17},'I0'}},
           {'case',
            {698,26},
            {var,{698,17},rec39},
            [{clause,
              {698,26},
              [{tuple,
                {698,26},
                [{atom,{698,26},b_set},
                 {var,{698,26},'_'},
                 {var,{698,26},'_'},
                 {var,{698,26},'_'},
                 {var,{698,26},'_'}]}],
              [],
              [{call,
                {698,26},
                {remote,
                 {698,26},
                 {atom,{698,26},erlang},
                 {atom,{698,26},setelement}},
                [{integer,{698,26},5},
                 {var,{698,17},rec39},
                 {var,{698,26},rec38}]}]},
             {clause,
              [{generated,true},{location,{698,26}}],
              [{var,[{generated,true},{location,{698,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{698,26}}],
                {remote,
                 [{generated,true},{location,{698,26}}],
                 {atom,[{generated,true},{location,{698,26}}],erlang},
                 {atom,[{generated,true},{location,{698,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{698,26}}],
                  [{atom,[{generated,true},{location,{698,26}}],badrecord},
                   {var,{698,17},rec39}]}]}]}]}]}},
        {debug_line,699,284},
        {call,
         {699,13},
         {atom,{699,13},opt_local_call},
         [{var,{699,28},'I'},
          {var,{699,31},'Callee'},
          {var,{699,39},'CallArgs'},
          {var,{699,49},'Dst'},
          {var,{699,54},'Ts'},
          {var,{699,58},'Fdb'},
          {var,{699,63},'Meta'}]}]},
      {clause,
       {700,9},
       [{tuple,
         {700,9},
         [{tuple,
           {700,10},
           [{atom,{700,10},t_fun},
            {var,{700,23},'Arity'},
            {tuple,{700,36},[{var,{700,37},'Name'},{var,{700,42},'Arity'}]},
            {var,{700,10},'_'}]},
          {var,{700,51},'_'}]}],
       [],
       [{debug_line,703,285},
        {match,
         {703,13},
         {var,{703,13},'Callee'},
         {tuple,
          {703,22},
          [{atom,{703,22},b_local},
           {tuple,{703,36},[{atom,{703,36},b_literal},{var,{703,51},'Name'}]},
           {var,{704,37},'Arity'}]}},
        {debug_line,705,286},
        {match,
         {705,13},
         {var,{705,13},'I'},
         {block,
          {705,17},
          [{match,
            {705,26},
            {var,{705,26},rec40},
            {cons,
             {705,31},
             {var,{705,32},'Callee'},
             {var,{705,41},'CallArgs0'}}},
           {match,{705,17},{var,{705,17},rec41},{var,{705,17},'I0'}},
           {'case',
            {705,26},
            {var,{705,17},rec41},
            [{clause,
              {705,26},
              [{tuple,
                {705,26},
                [{atom,{705,26},b_set},
                 {var,{705,26},'_'},
                 {var,{705,26},'_'},
                 {var,{705,26},'_'},
                 {var,{705,26},'_'}]}],
              [],
              [{call,
                {705,26},
                {remote,
                 {705,26},
                 {atom,{705,26},erlang},
                 {atom,{705,26},setelement}},
                [{integer,{705,26},5},
                 {var,{705,17},rec41},
                 {var,{705,26},rec40}]}]},
             {clause,
              [{generated,true},{location,{705,26}}],
              [{var,[{generated,true},{location,{705,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{705,26}}],
                {remote,
                 [{generated,true},{location,{705,26}}],
                 {atom,[{generated,true},{location,{705,26}}],erlang},
                 {atom,[{generated,true},{location,{705,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{705,26}}],
                  [{atom,[{generated,true},{location,{705,26}}],badrecord},
                   {var,{705,17},rec41}]}]}]}]}]}},
        {debug_line,706,287},
        {call,
         {706,13},
         {atom,{706,13},opt_local_call},
         [{var,{706,28},'I'},
          {var,{706,31},'Callee'},
          {var,{706,39},'CallArgs0'},
          {var,{706,50},'Dst'},
          {var,{706,55},'Ts'},
          {var,{706,59},'Fdb'},
          {var,{706,64},'Meta'}]}]},
      {clause,
       {707,9},
       [{tuple,
         {707,9},
         [{tuple,
           {707,10},
           [{atom,{707,10},t_fun},
            {var,{707,10},'_'},
            {var,{707,10},'_'},
            {var,{707,22},'Type'}]},
          {var,{707,29},'_'}]}],
       [[{op,{707,42},'=/=',{var,{707,37},'Type'},{atom,{707,46},any}}]],
       [{debug_line,708,288},
        {tuple,
         {708,13},
         [{call,
           {708,14},
           {remote,{708,22},{atom,{708,14},beam_ssa},{atom,{708,23},add_anno}},
           [{atom,{708,32},result_type},
            {var,{708,45},'Type'},
            {var,{708,51},'I0'}]},
          {var,{708,56},'Fdb'}]}]},
      {clause,
       {709,9},
       [{var,{709,9},'_'}],
       [],
       [{debug_line,710,289},
        {tuple,{710,13},[{var,{710,14},'I0'},{var,{710,18},'Fdb'}]}]}]}]}]}.
{function,
 {713,1},
 opt_local_call,7,
 [{clause,
   {713,1},
   [{var,{713,1},'_'},
    {var,{713,1},'_'},
    {var,{713,1},'_'},
    {var,{713,1},'_'},
    {var,{713,1},'_'},
    {var,{713,1},'_'},
    {var,{713,1},'_'}],
   [[{call,
      {713,1},
      {remote,{713,1},{atom,{713,1},fake},{atom,{713,1},is_beam_bif_info}},
      []}]],
   [{debug_line,713,290},{atom,{713,1},ignore}]},
  {clause,
   {713,1},
   [{var,{713,16},'I0'},
    {var,{713,20},'Callee'},
    {var,{713,28},'Args'},
    {var,{713,34},'Dst'},
    {var,{713,39},'Ts'},
    {var,{713,43},'Fdb'},
    {var,{713,48},'Meta'}],
   [],
   [{debug_line,714,291},
    {match,
     {714,5},
     {var,{714,5},'ArgTypes'},
     {call,
      {714,16},
      {atom,{714,16},argument_types},
      [{var,{714,31},'Args'},{var,{714,37},'Ts'}]}},
    {debug_line,715,292},
    {match,
     {715,5},
     {var,{715,5},'I'},
     {call,
      {715,9},
      {atom,{715,9},opt_local_return},
      [{var,{715,26},'I0'},
       {var,{715,30},'Callee'},
       {var,{715,38},'ArgTypes'},
       {var,{715,48},'Fdb'}]}},
    {debug_line,716,293},
    {'case',
     {716,5},
     {var,{716,10},'Fdb'},
     [{clause,
       {717,9},
       [{map,
         {717,9},
         [{map_field_exact,
           {717,19},
           {var,{717,12},'Callee'},
           {match,
            {717,22},
            {tuple,
             {717,22},
             [{atom,{717,22},func_info},
              {var,{717,22},'_'},
              {var,{717,22},'_'},
              {atom,{717,42},false},
              {var,{717,58},'AT0'},
              {var,{717,22},'_'}]},
            {var,{717,63},'Info0'}}}]}],
       [],
       [{debug_line,720,294},
        {match,
         {720,13},
         {var,{720,13},'CallId'},
         {tuple,
          {720,22},
          [{'case',
            {720,23},
            {var,{720,23},'Meta'},
            [{clause,
              [{generated,true},{location,{720,23}}],
              [{tuple,
                [{generated,true},{location,{720,23}}],
                [{atom,{720,23},metadata},
                 {var,{720,23},rec42},
                 {var,{720,23},'_'},
                 {var,{720,23},'_'},
                 {var,{720,23},'_'}]}],
              [],
              [{var,{720,23},rec42}]},
             {clause,
              [{generated,true},{location,{720,23}}],
              [{var,{720,23},rec42}],
              [],
              [{call,
                [{generated,true},{location,{720,23}}],
                {remote,
                 [{generated,true},{location,{720,23}}],
                 {atom,[{generated,true},{location,{720,23}}],erlang},
                 {atom,[{generated,true},{location,{720,23}}],error}},
                [{tuple,
                  [{generated,true},{location,{720,23}}],
                  [{atom,[{generated,true},{location,{720,23}}],badrecord},
                   {var,{720,23},rec42}]}]}]}]},
           {var,{720,46},'Dst'}]}},
        {debug_line,722,295},
        {match,
         {722,13},
         {var,{722,13},'AT'},
         {call,
          {722,18},
          {atom,{722,18},update_arg_types},
          [{var,{722,35},'ArgTypes'},
           {var,{722,45},'AT0'},
           {var,{722,50},'CallId'}]}},
        {debug_line,723,296},
        {match,
         {723,13},
         {var,{723,13},'Info'},
         {block,
          {723,20},
          [{match,{723,20},{var,{723,20},rec43},{var,{723,20},'Info0'}},
           {'case',
            {723,36},
            {var,{723,20},rec43},
            [{clause,
              {723,36},
              [{tuple,
                {723,36},
                [{atom,{723,36},func_info},
                 {var,{723,36},'_'},
                 {var,{723,36},'_'},
                 {var,{723,36},'_'},
                 {var,{723,36},'_'},
                 {var,{723,36},'_'}]}],
              [],
              [{call,
                {723,36},
                {remote,
                 {723,36},
                 {atom,{723,36},erlang},
                 {atom,{723,36},setelement}},
                [{integer,{723,36},5},
                 {var,{723,20},rec43},
                 {var,{723,46},'AT'}]}]},
             {clause,
              [{generated,true},{location,{723,36}}],
              [{var,[{generated,true},{location,{723,36}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{723,36}}],
                {remote,
                 [{generated,true},{location,{723,36}}],
                 {atom,[{generated,true},{location,{723,36}}],erlang},
                 {atom,[{generated,true},{location,{723,36}}],error}},
                [{tuple,
                  [{generated,true},{location,{723,36}}],
                  [{atom,[{generated,true},{location,{723,36}}],badrecord},
                   {var,{723,20},rec43}]}]}]}]}]}},
        {debug_line,725,297},
        {tuple,
         {725,13},
         [{var,{725,14},'I'},
          {map,
           {725,20},
           {var,{725,17},'Fdb'},
           [{map_field_exact,
             {725,30},
             {var,{725,23},'Callee'},
             {var,{725,33},'Info'}}]}]}]},
      {clause,
       {726,9},
       [{map,{726,9},[]}],
       [],
       [{debug_line,730,298},
        {tuple,{730,13},[{var,{730,14},'I'},{var,{730,17},'Fdb'}]}]}]}]}]}.
{function,
 {734,1},
 opt_make_fun,4,
 [{clause,
   {734,1},
   [{var,{734,1},'_'},{var,{734,1},'_'},{var,{734,1},'_'},{var,{734,1},'_'}],
   [[{call,
      {734,1},
      {remote,{734,1},{atom,{734,1},fake},{atom,{734,1},is_beam_bif_info}},
      []}]],
   [{debug_line,734,299},{atom,{734,1},ignore}]},
  {clause,
   {734,1},
   [{match,
     {734,14},
     {tuple,
      {734,14},
      [{atom,{734,14},b_set},
       {var,{734,14},'_'},
       {var,{735,25},'Dst'},
       {atom,{734,24},make_fun},
       {cons,
        {736,26},
        {match,
         {736,27},
         {tuple,
          {736,27},
          [{atom,{736,27},b_local},{var,{736,27},'_'},{var,{736,27},'_'}]},
         {var,{736,38},'Callee'}},
        {var,{736,47},'FreeVars'}}]},
     {var,{736,58},'I0'}},
    {var,{737,14},'Ts'},
    {var,{737,18},'Fdb'},
    {var,{737,23},'Meta'}],
   [],
   [{debug_line,738,300},
    {match,
     {738,5},
     {var,{738,5},'ArgCount'},
     {op,
      {738,37},
      '-',
      {'case',
       {738,16},
       {var,{738,16},'Callee'},
       [{clause,
         [{generated,true},{location,{738,16}}],
         [{tuple,
           [{generated,true},{location,{738,16}}],
           [{atom,{738,16},b_local},{var,{738,16},'_'},{var,{738,16},rec44}]}],
         [],
         [{var,{738,16},rec44}]},
        {clause,
         [{generated,true},{location,{738,16}}],
         [{var,{738,16},rec44}],
         [],
         [{call,
           [{generated,true},{location,{738,16}}],
           {remote,
            [{generated,true},{location,{738,16}}],
            {atom,[{generated,true},{location,{738,16}}],erlang},
            {atom,[{generated,true},{location,{738,16}}],error}},
           [{tuple,
             [{generated,true},{location,{738,16}}],
             [{atom,[{generated,true},{location,{738,16}}],badrecord},
              {var,{738,16},rec44}]}]}]}]},
      {call,
       {738,39},
       {remote,{738,39},{atom,{738,39},erlang},{atom,{738,39},length}},
       [{var,{738,46},'FreeVars'}]}}},
    {debug_line,739,301},
    {match,
     {739,5},
     {var,{739,5},'FVTypes'},
     {lc,
      {739,15},
      {block,0,
       [{call,
         {739,16},
         {atom,{739,16},concrete_type},
         [{var,{739,30},'FreeVar'},{var,{739,39},'Ts'}]}]},
      [{block,0,[{atom,{739,57},true}]},
       {generate,
        {739,54},
        {var,{739,46},'FreeVar'},
        {var,{739,57},'FreeVars'}}]}},
    {debug_line,740,302},
    {match,
     {740,5},
     {var,{740,5},'ArgTypes'},
     {op,
      {740,41},
      '++',
      {call,
       {740,16},
       {remote,{740,16},{atom,{740,16},lists},{atom,{740,16},duplicate}},
       [{var,{740,26},'ArgCount'},{atom,{740,36},any}]},
      {var,{740,44},'FVTypes'}}},
    {debug_line,742,303},
    {match,
     {742,5},
     {var,{742,5},'I'},
     {call,
      {742,9},
      {atom,{742,9},opt_local_return},
      [{var,{742,26},'I0'},
       {var,{742,30},'Callee'},
       {var,{742,38},'ArgTypes'},
       {var,{742,48},'Fdb'}]}},
    {debug_line,744,304},
    {'case',
     {744,5},
     {var,{744,10},'Fdb'},
     [{clause,
       {745,9},
       [{map,
         {745,9},
         [{map_field_exact,
           {745,19},
           {var,{745,12},'Callee'},
           {match,
            {745,22},
            {tuple,
             {745,22},
             [{atom,{745,22},func_info},
              {var,{745,22},'_'},
              {var,{745,22},'_'},
              {atom,{745,42},false},
              {var,{745,58},'AT0'},
              {var,{745,22},'_'}]},
            {var,{745,63},'Info0'}}}]}],
       [],
       [{debug_line,746,305},
        {match,
         {746,13},
         {var,{746,13},'CallId'},
         {tuple,
          {746,22},
          [{'case',
            {746,23},
            {var,{746,23},'Meta'},
            [{clause,
              [{generated,true},{location,{746,23}}],
              [{tuple,
                [{generated,true},{location,{746,23}}],
                [{atom,{746,23},metadata},
                 {var,{746,23},rec45},
                 {var,{746,23},'_'},
                 {var,{746,23},'_'},
                 {var,{746,23},'_'}]}],
              [],
              [{var,{746,23},rec45}]},
             {clause,
              [{generated,true},{location,{746,23}}],
              [{var,{746,23},rec45}],
              [],
              [{call,
                [{generated,true},{location,{746,23}}],
                {remote,
                 [{generated,true},{location,{746,23}}],
                 {atom,[{generated,true},{location,{746,23}}],erlang},
                 {atom,[{generated,true},{location,{746,23}}],error}},
                [{tuple,
                  [{generated,true},{location,{746,23}}],
                  [{atom,[{generated,true},{location,{746,23}}],badrecord},
                   {var,{746,23},rec45}]}]}]}]},
           {var,{746,46},'Dst'}]}},
        {debug_line,748,306},
        {match,
         {748,13},
         {var,{748,13},'AT'},
         {call,
          {748,18},
          {atom,{748,18},update_arg_types},
          [{var,{748,35},'ArgTypes'},
           {var,{748,45},'AT0'},
           {var,{748,50},'CallId'}]}},
        {debug_line,749,307},
        {match,
         {749,13},
         {var,{749,13},'Info'},
         {block,
          {749,20},
          [{match,{749,20},{var,{749,20},rec46},{var,{749,20},'Info0'}},
           {'case',
            {749,36},
            {var,{749,20},rec46},
            [{clause,
              {749,36},
              [{tuple,
                {749,36},
                [{atom,{749,36},func_info},
                 {var,{749,36},'_'},
                 {var,{749,36},'_'},
                 {var,{749,36},'_'},
                 {var,{749,36},'_'},
                 {var,{749,36},'_'}]}],
              [],
              [{call,
                {749,36},
                {remote,
                 {749,36},
                 {atom,{749,36},erlang},
                 {atom,{749,36},setelement}},
                [{integer,{749,36},5},
                 {var,{749,20},rec46},
                 {var,{749,46},'AT'}]}]},
             {clause,
              [{generated,true},{location,{749,36}}],
              [{var,[{generated,true},{location,{749,36}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{749,36}}],
                {remote,
                 [{generated,true},{location,{749,36}}],
                 {atom,[{generated,true},{location,{749,36}}],erlang},
                 {atom,[{generated,true},{location,{749,36}}],error}},
                [{tuple,
                  [{generated,true},{location,{749,36}}],
                  [{atom,[{generated,true},{location,{749,36}}],badrecord},
                   {var,{749,20},rec46}]}]}]}]}]}},
        {debug_line,751,308},
        {tuple,
         {751,13},
         [{var,{751,14},'I'},
          {map,
           {751,20},
           {var,{751,17},'Fdb'},
           [{map_field_exact,
             {751,30},
             {var,{751,23},'Callee'},
             {var,{751,33},'Info'}}]}]}]},
      {clause,
       {752,9},
       [{map,{752,9},[]}],
       [],
       [{debug_line,755,309},
        {tuple,{755,13},[{var,{755,14},'I'},{var,{755,17},'Fdb'}]}]}]}]}]}.
{function,
    {758,1},
    opt_local_return,4,
    [{clause,
         {758,1},
         [{var,{758,1},'_'},
          {var,{758,1},'_'},
          {var,{758,1},'_'},
          {var,{758,1},'_'}],
         [[{call,
               {758,1},
               {remote,
                   {758,1},
                   {atom,{758,1},fake},
                   {atom,{758,1},is_beam_bif_info}},
               []}]],
         [{debug_line,758,310},{atom,{758,1},ignore}]},
     {clause,
         {758,1},
         [{var,{758,18},'I'},
          {var,{758,21},'Callee'},
          {var,{758,29},'ArgTypes'},
          {var,{758,39},'Fdb'}],
         [[{op,{758,53},'=/=',{var,{758,49},'Fdb'},{map,{758,57},[]}}]],
         [{debug_line,759,311},
          {match,
              {759,5},
              {tuple,
                  {759,5},
                  [{atom,{759,5},func_info},
                   {var,{759,5},'_'},
                   {var,{759,5},'_'},
                   {var,{759,5},'_'},
                   {var,{759,5},'_'},
                   {var,{759,27},'SuccTypes'}]},
              {call,
                  {759,40},
                  {remote,
                      {759,40},
                      {atom,{759,40},erlang},
                      {atom,{759,40},map_get}},
                  [{var,{759,48},'Callee'},{var,{759,56},'Fdb'}]}},
          {debug_line,760,312},
          {'case',
              {760,5},
              {call,
                  {760,10},
                  {atom,{760,10},return_type},
                  [{var,{760,22},'SuccTypes'},{var,{760,33},'ArgTypes'}]},
              [{clause,
                   {761,9},
                   [{atom,{761,9},any}],
                   [],
                   [{debug_line,761,313},{var,{761,16},'I'}]},
               {clause,
                   {762,9},
                   [{var,{762,9},'Type'}],
                   [],
                   [{debug_line,762,314},
                    {call,
                        {762,17},
                        {remote,
                            {762,25},
                            {atom,{762,17},beam_ssa},
                            {atom,{762,26},add_anno}},
                        [{atom,{762,35},result_type},
                         {var,{762,48},'Type'},
                         {var,{762,54},'I'}]}]}]}]},
     {clause,
         {764,1},
         [{var,{764,18},'I'},
          {var,{764,21},'_Callee'},
          {var,{764,30},'_ArgTyps'},
          {var,{764,40},'_Fdb'}],
         [],
         [{debug_line,766,315},{var,{766,5},'I'}]}]}.
{function,
    {768,1},
    update_arg_types,3,
    [{clause,
         {768,1},
         [{var,{768,1},'_'},{var,{768,1},'_'},{var,{768,1},'_'}],
         [[{call,
               {768,1},
               {remote,
                   {768,1},
                   {atom,{768,1},fake},
                   {atom,{768,1},is_beam_bif_info}},
               []}]],
         [{debug_line,768,316},{atom,{768,1},ignore}]},
     {clause,
         {768,1},
         [{cons,{768,18},{var,{768,19},'ArgType'},{var,{768,29},'ArgTypes'}},
          {cons,{768,40},{var,{768,41},'TypeMap0'},{var,{768,52},'TypeMaps'}},
          {var,{768,63},'CallId'}],
         [],
         [{debug_line,769,317},
          {match,
              {769,5},
              {var,{769,5},'TypeMap'},
              {map,
                  {769,23},
                  {var,{769,15},'TypeMap0'},
                  [{map_field_assoc,
                       {769,33},
                       {var,{769,26},'CallId'},
                       {var,{769,36},'ArgType'}}]}},
          {debug_line,770,318},
          {cons,
              {770,5},
              {var,{770,6},'TypeMap'},
              {call,
                  {770,16},
                  {atom,{770,16},update_arg_types},
                  [{var,{770,33},'ArgTypes'},
                   {var,{770,43},'TypeMaps'},
                   {var,{770,53},'CallId'}]}}]},
     {clause,
         {771,1},
         [{nil,{771,18}},{nil,{771,22}},{var,{771,26},'_CallId'}],
         [],
         [{debug_line,772,319},{nil,{772,5}}]}]}.
{attribute,
    {776,2},
    spec,
    {{opt_finish,3},
     [{type,
          {776,17},
          bounded_fun,
          [{type,
               {776,17},
               'fun',
               [{type,
                    {776,17},
                    product,
                    [{var,{776,18},'Args'},
                     {var,{776,24},'Anno'},
                     {var,{776,30},'FuncDb'}]},
                {type,
                    {776,41},
                    tuple,
                    [{var,{776,42},'Anno'},{var,{776,48},'FuncDb'}]}]},
           [{type,
                {777,7},
                constraint,
                [{atom,{777,7},is_subtype},
                 [{var,{777,7},'Args'},
                  {type,
                      {777,15},
                      list,
                      [{remote_type,
                           {777,16},
                           [{atom,{777,16},beam_ssa},
                            {atom,{777,25},b_var},
                            []]}]}]]},
            {type,
                {778,7},
                constraint,
                [{atom,{778,7},is_subtype},
                 [{var,{778,7},'Anno'},
                  {remote_type,
                      {778,15},
                      [{atom,{778,15},beam_ssa},{atom,{778,24},anno},[]]}]]},
            {type,
                {779,7},
                constraint,
                [{atom,{779,7},is_subtype},
                 [{var,{779,7},'FuncDb'},
                  {user_type,{779,17},func_info_db,[]}]]}]]}]}}.
{function,
    {780,1},
    opt_finish,3,
    [{clause,
         {780,1},
         [{var,{780,1},'_'},{var,{780,1},'_'},{var,{780,1},'_'}],
         [[{call,
               {780,1},
               {remote,
                   {780,1},
                   {atom,{780,1},fake},
                   {atom,{780,1},is_beam_bif_info}},
               []}]],
         [{debug_line,780,320},{atom,{780,1},ignore}]},
     {clause,
         {780,1},
         [{var,{780,12},'Args'},{var,{780,18},'Anno'},{var,{780,24},'FuncDb'}],
         [],
         [{debug_line,781,321},
          {match,
              {781,5},
              {var,{781,5},'Id'},
              {call,
                  {781,10},
                  {atom,{781,10},get_func_id},
                  [{var,{781,22},'Anno'}]}},
          {debug_line,782,322},
          {'case',
              {782,5},
              {var,{782,10},'FuncDb'},
              [{clause,
                   {783,9},
                   [{map,
                        {783,9},
                        [{map_field_exact,
                             {783,15},
                             {var,{783,12},'Id'},
                             {tuple,
                                 {783,18},
                                 [{atom,{783,18},func_info},
                                  {var,{783,18},'_'},
                                  {var,{783,18},'_'},
                                  {atom,{783,38},false},
                                  {var,{783,54},'ArgTypes'},
                                  {var,{783,18},'_'}]}}]}],
                   [],
                   [{debug_line,784,323},
                    {match,
                        {784,13},
                        {var,{784,13},'ParamInfo0'},
                        {call,
                            {784,26},
                            {remote,
                                {784,30},
                                {atom,{784,26},maps},
                                {atom,{784,31},get}},
                            [{atom,{784,35},parameter_info},
                             {var,{784,51},'Anno'},
                             {block,0,[{map,{784,57},[]}]}]}},
                    {debug_line,785,324},
                    {match,
                        {785,13},
                        {var,{785,13},'ParamInfo'},
                        {call,
                            {785,25},
                            {atom,{785,25},opt_finish_1},
                            [{var,{785,38},'Args'},
                             {var,{785,44},'ArgTypes'},
                             {var,{785,54},'ParamInfo0'}]}},
                    {debug_line,786,325},
                    {tuple,
                        {786,13},
                        [{map,
                             {786,18},
                             {var,{786,14},'Anno'},
                             [{map_field_assoc,
                                  {786,36},
                                  {atom,{786,21},parameter_info},
                                  {var,{786,39},'ParamInfo'}}]},
                         {var,{786,52},'FuncDb'}]}]},
               {clause,
                   {787,9},
                   [{map,{787,9},[]}],
                   [],
                   [{debug_line,788,326},
                    {tuple,
                        {788,13},
                        [{var,{788,14},'Anno'},
                         {var,{788,20},'FuncDb'}]}]}]}]}]}.
{function,
 {791,1},
 opt_finish_1,3,
 [{clause,
   {791,1},
   [{var,{791,1},'_'},{var,{791,1},'_'},{var,{791,1},'_'}],
   [[{call,
      {791,1},
      {remote,{791,1},{atom,{791,1},fake},{atom,{791,1},is_beam_bif_info}},
      []}]],
   [{debug_line,791,327},{atom,{791,1},ignore}]},
  {clause,
   {791,1},
   [{cons,{791,14},{var,{791,15},'Arg'},{var,{791,21},'Args'}},
    {cons,{791,28},{var,{791,29},'TypeMap'},{var,{791,39},'TypeMaps'}},
    {var,{791,50},'Acc0'}],
   [],
   [{debug_line,792,328},
    {'case',
     {792,5},
     {call,
      {792,10},
      {remote,{792,20},{atom,{792,10},beam_types},{atom,{792,21},join}},
      [{block,0,
        [{call,
          {792,26},
          {remote,{792,30},{atom,{792,26},maps},{atom,{792,31},values}},
          [{var,{792,38},'TypeMap'}]}]}]},
     [{clause,
       {793,9},
       [{atom,{793,9},any}],
       [],
       [{debug_line,794,329},
        {call,
         {794,13},
         {atom,{794,13},opt_finish_1},
         [{var,{794,26},'Args'},
          {var,{794,32},'TypeMaps'},
          {var,{794,42},'Acc0'}]}]},
      {clause,
       {795,9},
       [{var,{795,9},'JoinedType'}],
       [],
       [{debug_line,796,330},
        {match,
         {796,13},
         {var,{796,13},'Info'},
         {call,
          {796,20},
          {remote,{796,24},{atom,{796,20},maps},{atom,{796,25},get}},
          [{var,{796,29},'Arg'},{var,{796,34},'Acc0'},{nil,{796,40}}]}},
        {debug_line,797,331},
        {match,
         {797,13},
         {var,{797,13},'Acc'},
         {map,
          {797,23},
          {var,{797,19},'Acc0'},
          [{map_field_assoc,
            {797,30},
            {var,{797,26},'Arg'},
            {cons,
             {797,33},
             {tuple,
              {797,34},
              [{atom,{797,35},type},{var,{797,41},'JoinedType'}]},
             {var,{797,55},'Info'}}}]}},
        {debug_line,798,332},
        {call,
         {798,13},
         {atom,{798,13},opt_finish_1},
         [{var,{798,26},'Args'},
          {var,{798,32},'TypeMaps'},
          {var,{798,42},'Acc'}]}]}]}]},
  {clause,
   {800,1},
   [{nil,{800,14}},{nil,{800,18}},{var,{800,22},'Acc'}],
   [],
   [{debug_line,801,333},{var,{801,5},'Acc'}]}]}.
{attribute,
    {845,2},
    spec,
    {{opt_ranges,1},
     [{type,
          {845,17},
          bounded_fun,
          [{type,
               {845,17},
               'fun',
               [{type,{845,17},product,[{var,{845,18},'Blocks0'}]},
                {var,{845,30},'Blocks'}]},
           [{type,
                {846,7},
                constraint,
                [{atom,{846,7},is_subtype},
                 [{var,{846,7},'Blocks0'},
                  {remote_type,
                      {846,18},
                      [{atom,{846,18},beam_ssa},
                       {atom,{846,27},block_map},
                       []]}]]},
            {type,
                {847,7},
                constraint,
                [{atom,{847,7},is_subtype},
                 [{var,{847,7},'Blocks'},
                  {remote_type,
                      {847,17},
                      [{atom,{847,17},beam_ssa},
                       {atom,{847,26},block_map},
                       []]}]]}]]}]}}.
{function,
    {849,1},
    opt_ranges,1,
    [{clause,
         {849,1},
         [{var,{849,1},'_'}],
         [[{call,
               {849,1},
               {remote,
                   {849,1},
                   {atom,{849,1},fake},
                   {atom,{849,1},is_beam_bif_info}},
               []}]],
         [{debug_line,849,334},{atom,{849,1},ignore}]},
     {clause,
         {849,1},
         [{var,{849,12},'Blocks'}],
         [],
         [{debug_line,850,335},
          {match,
              {850,5},
              {var,{850,5},'RPO'},
              {call,
                  {850,11},
                  {remote,
                      {850,19},
                      {atom,{850,11},beam_ssa},
                      {atom,{850,20},rpo}},
                  [{var,{850,24},'Blocks'}]}},
          {debug_line,851,336},
          {match,
              {851,5},
              {var,{851,5},'Tss'},
              {map,
                  {851,11},
                  [{map_field_assoc,
                       {851,15},
                       {integer,{851,13},0},
                       {map,{851,18},[]}},
                   {map_field_assoc,
                       {851,40},
                       {integer,{851,24},1},
                       {map,{851,43},[]}}]}},
          {debug_line,852,337},
          {call,
              {852,5},
              {atom,{852,5},ranges},
              [{var,{852,12},'RPO'},
               {var,{852,17},'Tss'},
               {var,{852,22},'Blocks'}]}]}]}.
{function,
 {854,1},
 ranges,3,
 [{clause,
   {854,1},
   [{var,{854,1},'_'},{var,{854,1},'_'},{var,{854,1},'_'}],
   [[{call,
      {854,1},
      {remote,{854,1},{atom,{854,1},fake},{atom,{854,1},is_beam_bif_info}},
      []}]],
   [{debug_line,854,338},{atom,{854,1},ignore}]},
  {clause,
   {854,1},
   [{cons,{854,8},{var,{854,9},'L'},{var,{854,11},'Ls'}},
    {var,{854,16},'Tss0'},
    {var,{854,22},'Blocks0'}],
   [],
   [{debug_line,855,339},
    {match,
     {855,5},
     {tuple,
      {855,5},
      [{atom,{855,5},b_blk},
       {var,{855,5},'_'},
       {var,{855,15},'Is0'},
       {var,{855,5},'_'}]},
     {match,
      {855,22},
      {var,{855,22},'Blk0'},
      {call,
       {855,29},
       {remote,{855,29},{atom,{855,29},erlang},{atom,{855,29},map_get}},
       [{var,{855,37},'L'},{var,{855,40},'Blocks0'}]}}},
    {debug_line,856,340},
    {match,
     {856,5},
     {var,{856,5},'Ts0'},
     {call,
      {856,11},
      {remote,{856,11},{atom,{856,11},erlang},{atom,{856,11},map_get}},
      [{var,{856,19},'L'},{var,{856,22},'Tss0'}]}},
    {debug_line,857,341},
    {match,
     {857,5},
     {tuple,{857,5},[{var,{857,6},'Is'},{var,{857,9},'Ts'}]},
     {call,
      {857,15},
      {atom,{857,15},ranges_is},
      [{var,{857,25},'Is0'},{var,{857,30},'Ts0'},{nil,{857,35}}]}},
    {debug_line,858,342},
    {match,
     {858,5},
     {var,{858,5},'Blk'},
     {block,
      {858,11},
      [{match,{858,11},{var,{858,11},rec47},{var,{858,11},'Blk0'}},
       {'case',
        {858,22},
        {var,{858,11},rec47},
        [{clause,
          {858,22},
          [{tuple,
            {858,22},
            [{atom,{858,22},b_blk},
             {var,{858,22},'_'},
             {var,{858,22},'_'},
             {var,{858,22},'_'}]}],
          [],
          [{call,
            {858,22},
            {remote,
             {858,22},
             {atom,{858,22},erlang},
             {atom,{858,22},setelement}},
            [{integer,{858,22},3},{var,{858,11},rec47},{var,{858,25},'Is'}]}]},
         {clause,
          [{generated,true},{location,{858,22}}],
          [{var,[{generated,true},{location,{858,22}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{858,22}}],
            {remote,
             [{generated,true},{location,{858,22}}],
             {atom,[{generated,true},{location,{858,22}}],erlang},
             {atom,[{generated,true},{location,{858,22}}],error}},
            [{tuple,
              [{generated,true},{location,{858,22}}],
              [{atom,[{generated,true},{location,{858,22}}],badrecord},
               {var,{858,11},rec47}]}]}]}]}]}},
    {debug_line,859,343},
    {match,
     {859,5},
     {var,{859,5},'Blocks'},
     {map,
      {859,21},
      {var,{859,14},'Blocks0'},
      [{map_field_exact,{859,25},{var,{859,23},'L'},{var,{859,28},'Blk'}}]}},
    {debug_line,860,344},
    {match,
     {860,5},
     {var,{860,5},'Tss'},
     {call,
      {860,11},
      {atom,{860,11},ranges_successors},
      [{block,0,
        [{call,
          {860,29},
          {remote,
           {860,37},
           {atom,{860,29},beam_ssa},
           {atom,{860,38},successors}},
          [{var,{860,49},'Blk'}]}]},
       {var,{860,55},'Ts'},
       {var,{860,59},'Tss0'}]}},
    {debug_line,861,345},
    {call,
     {861,5},
     {atom,{861,5},ranges},
     [{var,{861,12},'Ls'},{var,{861,16},'Tss'},{var,{861,21},'Blocks'}]}]},
  {clause,
   {862,1},
   [{nil,{862,8}},{var,{862,12},'_Tss'},{var,{862,18},'Blocks'}],
   [],
   [{debug_line,862,346},{var,{862,29},'Blocks'}]}]}.
{function,
    {864,1},
    ranges_is,3,
    [{clause,
         {864,1},
         [{var,{864,1},'_'},{var,{864,1},'_'},{var,{864,1},'_'}],
         [[{call,
               {864,1},
               {remote,
                   {864,1},
                   {atom,{864,1},fake},
                   {atom,{864,1},is_beam_bif_info}},
               []}]],
         [{debug_line,864,347},{atom,{864,1},ignore}]},
     {clause,
         {864,1},
         [{cons,
              {864,11},
              {match,
                  {864,12},
                  {tuple,
                      {864,12},
                      [{atom,{864,12},b_set},
                       {var,{864,12},'_'},
                       {var,{864,12},'_'},
                       {var,{864,22},'Op'},
                       {var,{864,30},'Args'}]},
                  {var,{864,36},'I0'}},
              {var,{864,39},'Is'}},
          {var,{864,44},'Ts0'},
          {var,{864,49},'Acc'}],
         [],
         [{debug_line,865,348},
          {'case',
              {865,5},
              {call,
                  {865,10},
                  {atom,{865,10},benefits_from_type_anno},
                  [{var,{865,34},'Op'},{var,{865,38},'Args'}]},
              [{clause,
                   {866,9},
                   [{atom,{866,9},false}],
                   [],
                   [{debug_line,867,349},
                    {call,
                        {867,13},
                        {atom,{867,13},ranges_is},
                        [{var,{867,23},'Is'},
                         {var,{867,27},'Ts0'},
                         {block,0,
                             [{cons,
                                  {867,32},
                                  {var,{867,33},'I0'},
                                  {var,{867,36},'Acc'}}]}]}]},
               {clause,
                   {868,9},
                   [{atom,{868,9},true}],
                   [],
                   [{debug_line,869,350},
                    {match,
                        {869,13},
                        {var,{869,13},'I'},
                        {call,
                            {869,17},
                            {atom,{869,17},update_anno_types},
                            [{var,{869,35},'I0'},{var,{869,39},'Ts0'}]}},
                    {debug_line,870,351},
                    {match,
                        {870,13},
                        {var,{870,13},'Ts'},
                        {call,
                            {870,18},
                            {atom,{870,18},ranges_propagate_types},
                            [{var,{870,41},'I'},{var,{870,44},'Ts0'}]}},
                    {debug_line,871,352},
                    {call,
                        {871,13},
                        {atom,{871,13},ranges_is},
                        [{var,{871,23},'Is'},
                         {var,{871,27},'Ts'},
                         {block,0,
                             [{cons,
                                  {871,31},
                                  {var,{871,32},'I'},
                                  {var,{871,34},'Acc'}}]}]}]}]}]},
     {clause,
         {873,1},
         [{nil,{873,11}},{var,{873,15},'Ts'},{var,{873,19},'Acc'}],
         [],
         [{debug_line,874,353},
          {tuple,
              {874,5},
              [{call,
                   {874,6},
                   {remote,
                       {874,6},
                       {atom,{874,6},lists},
                       {atom,{874,6},reverse}},
                   [{var,{874,14},'Acc'}]},
               {var,{874,19},'Ts'}]}]}]}.
{function,
    {876,1},
    ranges_successors,3,
    [{clause,
         {876,1},
         [{var,{876,1},'_'},{var,{876,1},'_'},{var,{876,1},'_'}],
         [[{call,
               {876,1},
               {remote,
                   {876,1},
                   {atom,{876,1},fake},
                   {atom,{876,1},is_beam_bif_info}},
               []}]],
         [{debug_line,876,354},{atom,{876,1},ignore}]},
     {clause,
         {876,1},
         [{cons,{876,19},{integer,{876,21},1},{var,{876,37},'Ls'}},
          {var,{876,42},'Ts'},
          {var,{876,46},'Tss'}],
         [],
         [{debug_line,877,355},
          {call,
              {877,5},
              {atom,{877,5},ranges_successors},
              [{var,{877,23},'Ls'},
               {var,{877,27},'Ts'},
               {var,{877,31},'Tss'}]}]},
     {clause,
         {878,1},
         [{cons,{878,19},{var,{878,20},'L'},{var,{878,22},'Ls'}},
          {var,{878,27},'Ts0'},
          {var,{878,32},'Tss0'}],
         [],
         [{debug_line,879,356},
          {'case',
              {879,5},
              {var,{879,10},'Tss0'},
              [{clause,
                   {880,9},
                   [{map,
                        {880,9},
                        [{map_field_exact,
                             {880,13},
                             {var,{880,11},'L'},
                             {var,{880,16},'Ts1'}}]}],
                   [],
                   [{debug_line,881,357},
                    {match,
                        {881,13},
                        {var,{881,13},'Ts'},
                        {call,
                            {881,18},
                            {atom,{881,18},join_types},
                            [{var,{881,29},'Ts0'},{var,{881,34},'Ts1'}]}},
                    {debug_line,882,358},
                    {match,
                        {882,13},
                        {var,{882,13},'Tss'},
                        {map,
                            {882,23},
                            {var,{882,19},'Tss0'},
                            [{map_field_exact,
                                 {882,27},
                                 {var,{882,25},'L'},
                                 {var,{882,30},'Ts'}}]}},
                    {debug_line,883,359},
                    {call,
                        {883,13},
                        {atom,{883,13},ranges_successors},
                        [{var,{883,31},'Ls'},
                         {var,{883,35},'Ts0'},
                         {var,{883,40},'Tss'}]}]},
               {clause,
                   {884,9},
                   [{map,{884,9},[]}],
                   [],
                   [{debug_line,885,360},
                    {match,
                        {885,13},
                        {var,{885,13},'Tss'},
                        {map,
                            {885,23},
                            {var,{885,19},'Tss0'},
                            [{map_field_assoc,
                                 {885,27},
                                 {var,{885,25},'L'},
                                 {var,{885,30},'Ts0'}}]}},
                    {debug_line,886,361},
                    {call,
                        {886,13},
                        {atom,{886,13},ranges_successors},
                        [{var,{886,31},'Ls'},
                         {var,{886,35},'Ts0'},
                         {var,{886,40},'Tss'}]}]}]}]},
     {clause,
         {888,1},
         [{nil,{888,19}},{var,{888,23},'_'},{var,{888,26},'Tss'}],
         [],
         [{debug_line,888,362},{var,{888,34},'Tss'}]}]}.
{function,
    {890,1},
    ranges_propagate_types,2,
    [{clause,
         {890,1},
         [{var,{890,1},'_'},{var,{890,1},'_'}],
         [[{call,
               {890,1},
               {remote,
                   {890,1},
                   {atom,{890,1},fake},
                   {atom,{890,1},is_beam_bif_info}},
               []}]],
         [{debug_line,890,363},{atom,{890,1},ignore}]},
     {clause,
         {890,1},
         [{tuple,
              {890,24},
              [{atom,{890,24},b_set},
               {var,{890,36},'Anno'},
               {var,{890,69},'Dst'},
               {match,
                   {890,44},
                   {tuple,{890,44},[{atom,{890,45},bif},{var,{890,49},'_'}]},
                   {var,{890,52},'Op'}},
               {var,{890,60},'Args'}]},
          {var,{890,75},'Ts'}],
         [],
         [{debug_line,891,364},
          {'case',
              {891,5},
              {var,{891,10},'Anno'},
              [{clause,
                   {892,9},
                   [{map,
                        {892,9},
                        [{map_field_exact,
                             {892,21},
                             {atom,{892,11},arg_types},
                             {var,{892,24},'ArgTypes0'}}]}],
                   [],
                   [{debug_line,893,365},
                    {match,
                        {893,13},
                        {var,{893,13},'ArgTypes'},
                        {call,
                            {893,24},
                            {atom,{893,24},ranges_get_arg_types},
                            [{var,{893,45},'Args'},
                             {integer,{893,51},0},
                             {var,{893,54},'ArgTypes0'}]}},
                    {debug_line,894,366},
                    {'case',
                        {894,13},
                        {call,
                            {894,18},
                            {remote,
                                {894,33},
                                {atom,{894,18},beam_call_types},
                                {atom,{894,34},arith_type}},
                            [{var,{894,45},'Op'},{var,{894,49},'ArgTypes'}]},
                        [{clause,
                             {895,17},
                             [{atom,{895,17},any}],
                             [],
                             [{debug_line,895,367},{var,{895,24},'Ts'}]},
                         {clause,
                             {896,17},
                             [{var,{896,17},'T'}],
                             [],
                             [{debug_line,896,368},
                              {map,
                                  {896,24},
                                  {var,{896,22},'Ts'},
                                  [{map_field_assoc,
                                       {896,30},
                                       {var,{896,26},'Dst'},
                                       {var,{896,33},'T'}}]}]}]}]},
               {clause,
                   {898,9},
                   [{map,{898,9},[]}],
                   [],
                   [{debug_line,899,369},{var,{899,13},'Ts'}]}]}]},
     {clause,
         {901,1},
         [{var,{901,24},'_'},{var,{901,27},'Ts'}],
         [],
         [{debug_line,901,370},{var,{901,34},'Ts'}]}]}.
{function,
    {903,1},
    ranges_get_arg_types,3,
    [{clause,
         {903,1},
         [{var,{903,1},'_'},{var,{903,1},'_'},{var,{903,1},'_'}],
         [[{call,
               {903,1},
               {remote,
                   {903,1},
                   {atom,{903,1},fake},
                   {atom,{903,1},is_beam_bif_info}},
               []}]],
         [{debug_line,903,371},{atom,{903,1},ignore}]},
     {clause,
         {903,1},
         [{cons,
              {903,22},
              {tuple,{903,23},[{atom,{903,23},b_var},{var,{903,23},'_'}]},
              {var,{903,32},'As'}},
          {var,{903,37},'Index'},
          {var,{903,44},'ArgTypes'}],
         [],
         [{debug_line,904,372},
          {'case',
              {904,5},
              {var,{904,10},'ArgTypes'},
              [{clause,
                   {905,9},
                   [{map,
                        {905,9},
                        [{map_field_exact,
                             {905,17},
                             {var,{905,11},'Index'},
                             {var,{905,20},'Type'}}]}],
                   [],
                   [{debug_line,906,373},
                    {cons,
                        {906,13},
                        {var,{906,14},'Type'},
                        {call,
                            {906,19},
                            {atom,{906,19},ranges_get_arg_types},
                            [{var,{906,40},'As'},
                             {block,0,
                                 [{op,{906,50},
                                      '+',
                                      {var,{906,44},'Index'},
                                      {integer,{906,52},1}}]},
                             {var,{906,55},'ArgTypes'}]}}]},
               {clause,
                   {907,9},
                   [{map,{907,9},[]}],
                   [],
                   [{debug_line,908,374},
                    {cons,
                        {908,13},
                        {atom,{908,14},any},
                        {call,
                            {908,18},
                            {atom,{908,18},ranges_get_arg_types},
                            [{var,{908,39},'As'},
                             {block,0,
                                 [{op,{908,49},
                                      '+',
                                      {var,{908,43},'Index'},
                                      {integer,{908,51},1}}]},
                             {var,{908,54},'ArgTypes'}]}}]}]}]},
     {clause,
         {910,1},
         [{cons,
              {910,22},
              {tuple,
                  {910,23},
                  [{atom,{910,23},b_literal},{var,{910,38},'Value'}]},
              {var,{910,45},'As'}},
          {var,{910,50},'Index'},
          {var,{910,57},'ArgTypes'}],
         [],
         [{debug_line,911,375},
          {match,
              {911,5},
              {var,{911,5},'Type'},
              {call,
                  {911,12},
                  {remote,
                      {911,22},
                      {atom,{911,12},beam_types},
                      {atom,{911,23},make_type_from_value}},
                  [{var,{911,44},'Value'}]}},
          {debug_line,912,376},
          {cons,
              {912,5},
              {var,{912,6},'Type'},
              {call,
                  {912,11},
                  {atom,{912,11},ranges_get_arg_types},
                  [{var,{912,32},'As'},
                   {block,0,
                       [{op,{912,42},
                            '+',
                            {var,{912,36},'Index'},
                            {integer,{912,44},1}}]},
                   {var,{912,47},'ArgTypes'}]}}]},
     {clause,
         {913,1},
         [{nil,{913,22}},{var,{913,26},'_'},{var,{913,29},'_'}],
         [],
         [{debug_line,913,377},{nil,{913,35}}]}]}.
{function,
 {915,1},
 update_anno_types,2,
 [{clause,
   {915,1},
   [{var,{915,1},'_'},{var,{915,1},'_'}],
   [[{call,
      {915,1},
      {remote,{915,1},{atom,{915,1},fake},{atom,{915,1},is_beam_bif_info}},
      []}]],
   [{debug_line,915,378},{atom,{915,1},ignore}]},
  {clause,
   {915,1},
   [{match,
     {915,19},
     {tuple,
      {915,19},
      [{atom,{915,19},b_set},
       {var,{915,31},'Anno'},
       {var,{915,19},'_'},
       {var,{915,19},'_'},
       {var,{915,41},'Args'}]},
     {var,{915,47},'I'}},
    {var,{915,50},'Ts'}],
   [],
   [{debug_line,916,379},
    {match,
     {916,5},
     {var,{916,5},'ArgTypes1'},
     {'case',
      {916,17},
      {var,{916,22},'Anno'},
      [{clause,
        {917,21},
        [{map,
          {917,21},
          [{map_field_exact,
            {917,33},
            {atom,{917,23},arg_types},
            {var,{917,36},'ArgTypes0'}}]}],
        [],
        [{debug_line,917,380},{var,{917,50},'ArgTypes0'}]},
       {clause,
        {918,21},
        [{map,{918,21},[]}],
        [],
        [{debug_line,918,381},{map,{918,28},[]}]}]}},
    {debug_line,920,382},
    {match,
     {920,5},
     {var,{920,5},'ArgTypes'},
     {call,
      {920,16},
      {atom,{920,16},update_anno_types_1},
      [{var,{920,36},'Args'},
       {var,{920,42},'Ts'},
       {integer,{920,46},0},
       {var,{920,49},'ArgTypes1'}]}},
    {debug_line,921,383},
    {'case',
     {921,5},
     {var,{921,10},'Anno'},
     [{clause,
       {922,9},
       [{map,
         {922,9},
         [{map_field_exact,
           {922,21},
           {atom,{922,11},arg_types},
           {var,{922,24},'ArgTypes'}}]}],
       [],
       [{debug_line,923,384},{var,{923,13},'I'}]},
      {clause,
       {924,9},
       [{map,{924,9},[]}],
       [[{op,
          {924,37},
          '=/=',
          {call,
           {924,18},
           {remote,{924,18},{atom,{924,18},erlang},{atom,{924,18},map_size}},
           [{var,{924,27},'ArgTypes'}]},
          {integer,{924,41},0}}]],
       [{debug_line,925,385},
        {block,
         {925,13},
         [{match,
           {925,21},
           {var,{925,21},rec48},
           {map,
            {925,30},
            {var,{925,26},'Anno'},
            [{map_field_assoc,
              {925,42},
              {atom,{925,32},arg_types},
              {var,{925,45},'ArgTypes'}}]}},
          {match,{925,13},{var,{925,13},rec49},{var,{925,13},'I'}},
          {'case',
           {925,21},
           {var,{925,13},rec49},
           [{clause,
             {925,21},
             [{tuple,
               {925,21},
               [{atom,{925,21},b_set},
                {var,{925,21},'_'},
                {var,{925,21},'_'},
                {var,{925,21},'_'},
                {var,{925,21},'_'}]}],
             [],
             [{call,
               {925,21},
               {remote,
                {925,21},
                {atom,{925,21},erlang},
                {atom,{925,21},setelement}},
               [{integer,{925,21},2},
                {var,{925,13},rec49},
                {var,{925,21},rec48}]}]},
            {clause,
             [{generated,true},{location,{925,21}}],
             [{var,[{generated,true},{location,{925,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{925,21}}],
               {remote,
                [{generated,true},{location,{925,21}}],
                {atom,[{generated,true},{location,{925,21}}],erlang},
                {atom,[{generated,true},{location,{925,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{925,21}}],
                 [{atom,[{generated,true},{location,{925,21}}],badrecord},
                  {var,{925,13},rec49}]}]}]}]}]}]},
      {clause,
       {926,9},
       [{map,{926,9},[]}],
       [],
       [{debug_line,927,386},{var,{927,13},'I'}]}]}]}]}.
{function,
    {930,1},
    update_anno_types_1,4,
    [{clause,
         {930,1},
         [{var,{930,1},'_'},
          {var,{930,1},'_'},
          {var,{930,1},'_'},
          {var,{930,1},'_'}],
         [[{call,
               {930,1},
               {remote,
                   {930,1},
                   {atom,{930,1},fake},
                   {atom,{930,1},is_beam_bif_info}},
               []}]],
         [{debug_line,930,387},{atom,{930,1},ignore}]},
     {clause,
         {930,1},
         [{cons,
              {930,21},
              {match,
                  {930,22},
                  {tuple,{930,22},[{atom,{930,22},b_var},{var,{930,22},'_'}]},
                  {var,{930,31},'V'}},
              {var,{930,33},'As'}},
          {var,{930,38},'Ts'},
          {var,{930,42},'Index'},
          {var,{930,49},'ArgTypes'}],
         [],
         [{debug_line,931,388},
          {match,
              {931,5},
              {var,{931,5},'T0'},
              {'case',
                  {931,10},
                  {var,{931,15},'ArgTypes'},
                  [{clause,
                       {932,14},
                       [{map,
                            {932,14},
                            [{map_field_exact,
                                 {932,22},
                                 {var,{932,16},'Index'},
                                 {var,{932,25},'T00'}}]}],
                       [],
                       [{debug_line,932,389},{var,{932,33},'T00'}]},
                   {clause,
                       {933,14},
                       [{map,{933,14},[]}],
                       [],
                       [{debug_line,933,390},{atom,{933,21},any}]}]}},
          {debug_line,935,391},
          {match,
              {935,5},
              {var,{935,5},'T1'},
              {'case',
                  {935,10},
                  {var,{935,15},'Ts'},
                  [{clause,
                       {936,14},
                       [{map,
                            {936,14},
                            [{map_field_exact,
                                 {936,18},
                                 {var,{936,16},'V'},
                                 {var,{936,21},'T11'}}]}],
                       [],
                       [{debug_line,936,392},{var,{936,29},'T11'}]},
                   {clause,
                       {937,14},
                       [{map,{937,14},[]}],
                       [],
                       [{debug_line,937,393},{atom,{937,21},any}]}]}},
          {debug_line,939,394},
          {'case',
              {939,5},
              {call,
                  {939,10},
                  {remote,
                      {939,20},
                      {atom,{939,10},beam_types},
                      {atom,{939,21},meet}},
                  [{var,{939,26},'T0'},{var,{939,30},'T1'}]},
              [{clause,
                   {940,9},
                   [{atom,{940,9},any}],
                   [],
                   [{debug_line,941,395},
                    {call,
                        {941,13},
                        {atom,{941,13},update_anno_types_1},
                        [{var,{941,33},'As'},
                         {var,{941,37},'Ts'},
                         {block,0,
                             [{op,{941,47},
                                  '+',
                                  {var,{941,41},'Index'},
                                  {integer,{941,49},1}}]},
                         {var,{941,52},'ArgTypes'}]}]},
               {clause,
                   {942,9},
                   [{atom,{942,9},none}],
                   [],
                   [{debug_line,954,396},
                    {call,
                        {954,13},
                        {atom,{954,13},update_anno_types_1},
                        [{var,{954,33},'As'},
                         {var,{954,37},'Ts'},
                         {block,0,
                             [{op,{954,47},
                                  '+',
                                  {var,{954,41},'Index'},
                                  {integer,{954,49},1}}]},
                         {var,{954,52},'ArgTypes'}]}]},
               {clause,
                   {955,9},
                   [{var,{955,9},'T'}],
                   [],
                   [{debug_line,956,397},
                    {call,
                        {956,13},
                        {atom,{956,13},update_anno_types_1},
                        [{var,{956,33},'As'},
                         {var,{956,37},'Ts'},
                         {block,0,
                             [{op,{956,47},
                                  '+',
                                  {var,{956,41},'Index'},
                                  {integer,{956,49},1}}]},
                         {block,0,
                             [{map,
                                  {956,60},
                                  {var,{956,52},'ArgTypes'},
                                  [{map_field_assoc,
                                       {956,68},
                                       {var,{956,62},'Index'},
                                       {var,{956,71},'T'}}]}]}]}]}]}]},
     {clause,
         {958,1},
         [{cons,{958,21},{var,{958,22},'_'},{var,{958,24},'As'}},
          {var,{958,29},'Ts'},
          {var,{958,33},'Index'},
          {var,{958,40},'ArgTypes'}],
         [],
         [{debug_line,959,398},
          {call,
              {959,5},
              {atom,{959,5},update_anno_types_1},
              [{var,{959,25},'As'},
               {var,{959,29},'Ts'},
               {block,0,
                   [{op,{959,39},
                        '+',
                        {var,{959,33},'Index'},
                        {integer,{959,41},1}}]},
               {var,{959,44},'ArgTypes'}]}]},
     {clause,
         {960,1},
         [{nil,{960,21}},
          {var,{960,25},'_'},
          {var,{960,28},'_'},
          {var,{960,31},'ArgTypes'}],
         [],
         [{debug_line,960,399},{var,{960,44},'ArgTypes'}]}]}.
{function,
 {966,1},
 simplify_terminator,4,
 [{clause,
   {966,1},
   [{var,{966,1},'_'},{var,{966,1},'_'},{var,{966,1},'_'},{var,{966,1},'_'}],
   [[{call,
      {966,1},
      {remote,{966,1},{atom,{966,1},fake},{atom,{966,1},is_beam_bif_info}},
      []}]],
   [{debug_line,966,400},{atom,{966,1},ignore}]},
  {clause,
   {966,1},
   [{match,
     {966,21},
     {tuple,
      {966,21},
      [{atom,{966,21},b_br},
       {var,{966,21},'_'},
       {var,{966,32},'Bool'},
       {var,{966,21},'_'},
       {var,{966,21},'_'}]},
     {var,{966,38},'Br0'}},
    {var,{966,43},'Ts'},
    {var,{966,47},'Ds'},
    {var,{966,51},'Sub'}],
   [],
   [{debug_line,967,401},
    {match,
     {967,5},
     {var,{967,5},'Br'},
     {call,
      {967,10},
      {remote,{967,18},{atom,{967,10},beam_ssa},{atom,{967,19},normalize}},
      [{block,0,
        [{block,
          {967,29},
          [{match,
            {967,38},
            {var,{967,38},rec50},
            {call,
             {967,43},
             {atom,{967,43},simplify_arg},
             [{var,{967,56},'Bool'},
              {var,{967,62},'Ts'},
              {var,{967,66},'Sub'}]}},
           {match,{967,29},{var,{967,29},rec51},{var,{967,29},'Br0'}},
           {'case',
            {967,38},
            {var,{967,29},rec51},
            [{clause,
              {967,38},
              [{tuple,
                {967,38},
                [{atom,{967,38},b_br},
                 {var,{967,38},'_'},
                 {var,{967,38},'_'},
                 {var,{967,38},'_'},
                 {var,{967,38},'_'}]}],
              [],
              [{call,
                {967,38},
                {remote,
                 {967,38},
                 {atom,{967,38},erlang},
                 {atom,{967,38},setelement}},
                [{integer,{967,38},3},
                 {var,{967,29},rec51},
                 {var,{967,38},rec50}]}]},
             {clause,
              [{generated,true},{location,{967,38}}],
              [{var,[{generated,true},{location,{967,38}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{967,38}}],
                {remote,
                 [{generated,true},{location,{967,38}}],
                 {atom,[{generated,true},{location,{967,38}}],erlang},
                 {atom,[{generated,true},{location,{967,38}}],error}},
                [{tuple,
                  [{generated,true},{location,{967,38}}],
                  [{atom,[{generated,true},{location,{967,38}}],badrecord},
                   {var,{967,29},rec51}]}]}]}]}]}]}]}},
    {debug_line,968,402},
    {call,
     {968,5},
     {atom,{968,5},simplify_not},
     [{var,{968,18},'Br'},
      {var,{968,22},'Ts'},
      {var,{968,26},'Ds'},
      {var,{968,30},'Sub'}]}]},
  {clause,
   {969,1},
   [{match,
     {969,21},
     {tuple,
      {969,21},
      [{atom,{969,21},b_switch},
       {var,{969,21},'_'},
       {var,{969,35},'Arg0'},
       {var,{969,45},'Fail'},
       {var,{969,55},'List0'}]},
     {var,{969,62},'Sw0'}},
    {var,{970,21},'Ts'},
    {var,{970,25},'Ds'},
    {var,{970,29},'Sub'}],
   [],
   [{debug_line,971,403},
    {match,
     {971,5},
     {var,{971,5},'Arg'},
     {call,
      {971,11},
      {atom,{971,11},simplify_arg},
      [{var,{971,24},'Arg0'},{var,{971,30},'Ts'},{var,{971,34},'Sub'}]}},
    {debug_line,974,404},
    {match,
     {974,5},
     {var,{974,5},'List'},
     {lc,
      {974,12},
      {block,0,[{tuple,{974,13},[{var,{974,14},'Val'},{var,{974,18},'Lbl'}]}]},
      [{block,0,[{atom,{974,40},true}]},
       {generate_strict,
        {974,36},
        {tuple,{974,26},[{var,{974,27},'Val'},{var,{974,31},'Lbl'}]},
        {var,{974,40},'List0'}},
       {block,0,[{atom,{974,51},true}]},
       {op,{974,51},'=/=',{var,{974,47},'Lbl'},{var,{974,55},'Fail'}}]}},
    {debug_line,975,405},
    {'case',
     {975,5},
     {call,
      {975,10},
      {remote,{975,18},{atom,{975,10},beam_ssa},{atom,{975,19},normalize}},
      [{block,0,
        [{block,
          {975,29},
          [{match,{975,29},{var,{975,29},rec52},{var,{975,29},'Sw0'}},
           {'case',
            {975,42},
            {var,{975,29},rec52},
            [{clause,
              {975,42},
              [{tuple,
                {975,42},
                [{atom,{975,42},b_switch},
                 {var,{975,42},'_'},
                 {var,{975,42},'_'},
                 {var,{975,42},'_'},
                 {var,{975,42},'_'}]}],
              [],
              [{call,
                {975,42},
                {remote,
                 {975,42},
                 {atom,{975,42},erlang},
                 {atom,{975,42},setelement}},
                [{integer,{975,42},3},
                 {call,
                  {975,50},
                  {remote,
                   {975,50},
                   {atom,{975,50},erlang},
                   {atom,{975,50},setelement}},
                  [{integer,{975,50},5},
                   {var,{975,29},rec52},
                   {var,{975,55},'List'}]},
                 {var,{975,46},'Arg'}]}]},
             {clause,
              [{generated,true},{location,{975,42}}],
              [{var,[{generated,true},{location,{975,42}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{975,42}}],
                {remote,
                 [{generated,true},{location,{975,42}}],
                 {atom,[{generated,true},{location,{975,42}}],erlang},
                 {atom,[{generated,true},{location,{975,42}}],error}},
                [{tuple,
                  [{generated,true},{location,{975,42}}],
                  [{atom,[{generated,true},{location,{975,42}}],badrecord},
                   {var,{975,29},rec52}]}]}]}]}]}]}]},
     [{clause,
       {976,9},
       [{match,
         {976,9},
         {tuple,
          {976,9},
          [{atom,{976,9},b_switch},
           {var,{976,9},'_'},
           {var,{976,9},'_'},
           {var,{976,9},'_'},
           {var,{976,9},'_'}]},
         {var,{976,21},'Sw'}}],
       [],
       [{debug_line,977,406},
        {'case',
         {977,13},
         {call,
          {977,18},
          {remote,
           {977,28},
           {atom,{977,18},beam_types},
           {atom,{977,29},is_boolean_type}},
          [{block,0,
            [{call,
              {977,45},
              {atom,{977,45},concrete_type},
              [{var,{977,59},'Arg'},{var,{977,64},'Ts'}]}]}]},
         [{clause,
           {978,17},
           [{atom,{978,17},true}],
           [],
           [{debug_line,978,407},
            {call,
             {978,25},
             {atom,{978,25},simplify_switch_bool},
             [{var,{978,46},'Sw'},
              {var,{978,50},'Ts'},
              {var,{978,54},'Ds'},
              {var,{978,58},'Sub'}]}]},
          {clause,
           {979,17},
           [{atom,{979,17},false}],
           [],
           [{debug_line,979,408},{var,{979,26},'Sw'}]}]}]},
      {clause,
       {981,9},
       [{match,
         {981,9},
         {tuple,
          {981,9},
          [{atom,{981,9},b_br},
           {var,{981,9},'_'},
           {var,{981,9},'_'},
           {var,{981,9},'_'},
           {var,{981,9},'_'}]},
         {var,{981,17},'Br'}}],
       [],
       [{debug_line,982,409},
        {call,
         {982,13},
         {atom,{982,13},simplify_terminator},
         [{var,{982,33},'Br'},
          {var,{982,37},'Ts'},
          {var,{982,41},'Ds'},
          {var,{982,45},'Sub'}]}]}]}]},
  {clause,
   {984,1},
   [{match,
     {984,21},
     {tuple,
      {984,21},
      [{atom,{984,21},b_ret},{var,{984,41},'Anno0'},{var,{984,32},'Arg'}]},
     {var,{984,48},'Ret0'}},
    {var,{984,54},'Ts'},
    {var,{984,58},'Ds'},
    {var,{984,62},'Sub'}],
   [],
   [{debug_line,987,410},
    {match,
     {987,5},
     {var,{987,5},'Ret'},
     {'case',
      {987,11},
      {var,{987,16},'Ds'},
      [{clause,
        {988,15},
        [{map,
          {988,15},
          [{map_field_exact,
            {988,22},
            {var,{988,18},'Arg'},
            {tuple,
             {988,25},
             [{atom,{988,25},b_set},
              {var,{988,25},'_'},
              {var,{988,25},'_'},
              {atom,{988,35},call},
              {var,{988,25},'_'}]}}]}],
        [],
        [{debug_line,988,411},{var,{988,45},'Ret0'}]},
       {clause,
        {989,15},
        [{map,{989,15},[]}],
        [],
        [{debug_line,989,412},
         {block,
          {989,22},
          [{match,
            {989,33},
            {var,{989,33},rec53},
            {call,
             {989,37},
             {atom,{989,37},simplify_arg},
             [{var,{989,50},'Arg'},{var,{989,55},'Ts'},{var,{989,59},'Sub'}]}},
           {match,{989,22},{var,{989,22},rec54},{var,{989,22},'Ret0'}},
           {'case',
            {989,33},
            {var,{989,22},rec54},
            [{clause,
              {989,33},
              [{tuple,
                {989,33},
                [{atom,{989,33},b_ret},
                 {var,{989,33},'_'},
                 {var,{989,33},'_'}]}],
              [],
              [{call,
                {989,33},
                {remote,
                 {989,33},
                 {atom,{989,33},erlang},
                 {atom,{989,33},setelement}},
                [{integer,{989,33},3},
                 {var,{989,22},rec54},
                 {var,{989,33},rec53}]}]},
             {clause,
              [{generated,true},{location,{989,33}}],
              [{var,[{generated,true},{location,{989,33}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{989,33}}],
                {remote,
                 [{generated,true},{location,{989,33}}],
                 {atom,[{generated,true},{location,{989,33}}],erlang},
                 {atom,[{generated,true},{location,{989,33}}],error}},
                [{tuple,
                  [{generated,true},{location,{989,33}}],
                  [{atom,[{generated,true},{location,{989,33}}],badrecord},
                   {var,{989,22},rec54}]}]}]}]}]}]}]}},
    {debug_line,994,413},
    {match,
     {994,5},
     {var,{994,5},'Type'},
     {'case',
      {994,12},
      {tuple,{994,17},[{var,{994,18},'Arg'},{var,{994,23},'Ts'}]},
      [{clause,
        {995,16},
        [{tuple,
          {995,16},
          [{tuple,{995,17},[{atom,{995,17},b_literal},{var,{995,17},'_'}]},
           {var,{995,30},'_'}]}],
        [],
        [{debug_line,995,414},
         {call,
          {995,36},
          {atom,{995,36},concrete_type},
          [{var,{995,50},'Arg'},{var,{995,55},'Ts'}]}]},
       {clause,
        {996,16},
        [{tuple,
          {996,16},
          [{var,{996,17},'_'},
           {map,
            {996,19},
            [{map_field_exact,
              {996,24},
              {var,{996,21},'Arg'},
              {var,{996,26},'_'}}]}]}],
        [],
        [{debug_line,996,415},
         {call,
          {996,33},
          {atom,{996,33},concrete_type},
          [{var,{996,47},'Arg'},{var,{996,52},'Ts'}]}]},
       {clause,
        {997,16},
        [{var,{997,16},'_'}],
        [],
        [{debug_line,997,416},{atom,{997,21},any}]}]}},
    {debug_line,999,417},
    {'case',
     {999,5},
     {var,{999,10},'Type'},
     [{clause,
       {1000,9},
       [{atom,{1000,9},any}],
       [],
       [{debug_line,1001,418},{var,{1001,13},'Ret'}]},
      {clause,
       {1002,9},
       [{var,{1002,9},'_'}],
       [],
       [{debug_line,1003,419},
        {match,
         {1003,13},
         {var,{1003,13},'Anno'},
         {map,
          {1003,25},
          {var,{1003,20},'Anno0'},
          [{map_field_assoc,
            {1003,40},
            {atom,{1003,28},result_type},
            {var,{1003,43},'Type'}}]}},
        {debug_line,1004,420},
        {block,
         {1004,13},
         [{match,{1004,13},{var,{1004,13},rec55},{var,{1004,13},'Ret'}},
          {'case',
           {1004,23},
           {var,{1004,13},rec55},
           [{clause,
             {1004,23},
             [{tuple,
               {1004,23},
               [{atom,{1004,23},b_ret},
                {var,{1004,23},'_'},
                {var,{1004,23},'_'}]}],
             [],
             [{call,
               {1004,23},
               {remote,
                {1004,23},
                {atom,{1004,23},erlang},
                {atom,{1004,23},setelement}},
               [{integer,{1004,23},2},
                {var,{1004,13},rec55},
                {var,{1004,28},'Anno'}]}]},
            {clause,
             [{generated,true},{location,{1004,23}}],
             [{var,[{generated,true},{location,{1004,23}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1004,23}}],
               {remote,
                [{generated,true},{location,{1004,23}}],
                {atom,[{generated,true},{location,{1004,23}}],erlang},
                {atom,[{generated,true},{location,{1004,23}}],error}},
               [{tuple,
                 [{generated,true},{location,{1004,23}}],
                 [{atom,[{generated,true},{location,{1004,23}}],badrecord},
                  {var,{1004,13},rec55}]}]}]}]}]}]}]}]}]}.
{function,
 {1013,1},
 simplify,5,
 [{clause,
   {1013,1},
   [{var,{1013,1},'_'},
    {var,{1013,1},'_'},
    {var,{1013,1},'_'},
    {var,{1013,1},'_'},
    {var,{1013,1},'_'}],
   [[{call,
      {1013,1},
      {remote,{1013,1},{atom,{1013,1},fake},{atom,{1013,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1013,421},{atom,{1013,1},ignore}]},
  {clause,
   {1013,1},
   [{match,
     {1013,10},
     {tuple,
      {1013,10},
      [{atom,{1013,10},b_set},
       {var,{1013,10},'_'},
       {var,{1013,28},'Dst'},
       {atom,{1013,20},phi},
       {var,{1013,37},'Args0'}]},
     {var,{1013,44},'I0'}},
    {var,{1013,48},'Ts0'},
    {var,{1013,53},'Ds0'},
    {var,{1013,58},'Ls'},
    {var,{1013,62},'Sub'}],
   [],
   [{debug_line,1016,422},
    {match,
     {1016,5},
     {tuple,{1016,5},[{var,{1016,6},'Type'},{var,{1016,12},'Args'}]},
     {call,
      {1016,20},
      {atom,{1016,20},simplify_phi_args},
      [{var,{1016,38},'Args0'},
       {var,{1016,45},'Ls'},
       {var,{1016,49},'Sub'},
       {atom,{1016,54},none},
       {nil,{1016,60}}]}},
    {debug_line,1017,423},
    {'case',
     {1017,5},
     {call,{1017,10},{atom,{1017,10},phi_all_same},[{var,{1017,23},'Args'}]},
     [{clause,
       {1018,9},
       [{atom,{1018,9},true}],
       [],
       [{debug_line,1021,424},
        {match,
         {1021,13},
         {cons,
          {1021,13},
          {tuple,{1021,14},[{var,{1021,15},'Val'},{var,{1021,20},'_'}]},
          {var,{1021,25},'_'}},
         {var,{1021,30},'Args'}},
        {debug_line,1022,425},
        {map,
         {1022,16},
         {var,{1022,13},'Sub'},
         [{map_field_assoc,
           {1022,23},
           {var,{1022,19},'Dst'},
           {var,{1022,26},'Val'}}]}]},
      {clause,
       {1023,9},
       [{atom,{1023,9},false}],
       [],
       [{debug_line,1024,426},
        {match,
         {1024,13},
         {var,{1024,13},'I'},
         {block,
          {1024,17},
          [{match,{1024,17},{var,{1024,17},rec56},{var,{1024,17},'I0'}},
           {'case',
            {1024,26},
            {var,{1024,17},rec56},
            [{clause,
              {1024,26},
              [{tuple,
                {1024,26},
                [{atom,{1024,26},b_set},
                 {var,{1024,26},'_'},
                 {var,{1024,26},'_'},
                 {var,{1024,26},'_'},
                 {var,{1024,26},'_'}]}],
              [],
              [{call,
                {1024,26},
                {remote,
                 {1024,26},
                 {atom,{1024,26},erlang},
                 {atom,{1024,26},setelement}},
                [{integer,{1024,26},5},
                 {var,{1024,17},rec56},
                 {var,{1024,31},'Args'}]}]},
             {clause,
              [{generated,true},{location,{1024,26}}],
              [{var,[{generated,true},{location,{1024,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1024,26}}],
                {remote,
                 [{generated,true},{location,{1024,26}}],
                 {atom,[{generated,true},{location,{1024,26}}],erlang},
                 {atom,[{generated,true},{location,{1024,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1024,26}}],
                  [{atom,[{generated,true},{location,{1024,26}}],badrecord},
                   {var,{1024,17},rec56}]}]}]}]}]}},
        {debug_line,1026,427},
        {match,
         {1026,13},
         {var,{1026,13},'Ts'},
         {map,
          {1026,21},
          {var,{1026,18},'Ts0'},
          [{map_field_assoc,
            {1026,28},
            {var,{1026,24},'Dst'},
            {var,{1026,31},'Type'}}]}},
        {debug_line,1027,428},
        {match,
         {1027,13},
         {var,{1027,13},'Ds'},
         {map,
          {1027,21},
          {var,{1027,18},'Ds0'},
          [{map_field_assoc,
            {1027,28},
            {var,{1027,24},'Dst'},
            {var,{1027,31},'I'}}]}},
        {debug_line,1028,429},
        {tuple,
         {1028,13},
         [{var,{1028,14},'I'},
          {var,{1028,17},'Ts'},
          {var,{1028,21},'Ds'}]}]}]}]},
  {clause,
   {1030,1},
   [{match,
     {1030,10},
     {tuple,
      {1030,10},
      [{atom,{1030,10},b_set},
       {var,{1030,10},'_'},
       {var,{1030,52},'Dst'},
       {tuple,{1030,20},[{atom,{1030,21},succeeded},{var,{1030,31},'Kind'}]},
       {cons,{1030,42},{var,{1030,43},'Arg'},{nil,{1030,46}}}]},
     {var,{1030,57},'I'}},
    {var,{1031,10},'Ts0'},
    {var,{1031,15},'Ds0'},
    {var,{1031,20},'_Ls'},
    {var,{1031,25},'Sub'}],
   [],
   [{debug_line,1032,430},
    {match,
     {1032,5},
     {var,{1032,5},'Type'},
     {'case',
      {1032,12},
      {call,
       {1032,17},
       {atom,{1032,17},will_succeed},
       [{var,{1032,30},'I'},
        {var,{1032,33},'Ts0'},
        {var,{1032,38},'Ds0'},
        {var,{1032,43},'Sub'}]},
      [{clause,
        {1033,16},
        [{atom,{1033,16},yes}],
        [],
        [{debug_line,1033,431},
         {call,
          {1033,23},
          {remote,
           {1033,33},
           {atom,{1033,23},beam_types},
           {atom,{1033,34},make_atom}},
          [{atom,{1033,44},true}]}]},
       {clause,
        {1034,16},
        [{atom,{1034,16},no}],
        [],
        [{debug_line,1034,432},
         {call,
          {1034,22},
          {remote,
           {1034,32},
           {atom,{1034,22},beam_types},
           {atom,{1034,33},make_atom}},
          [{atom,{1034,43},false}]}]},
       {clause,
        [{text,"'maybe'"},{location,{1035,16}}],
        [{atom,[{text,"'maybe'"},{location,{1035,16}}],'maybe'}],
        [],
        [{debug_line,1035,433},
         {call,
          {1035,27},
          {remote,
           {1035,37},
           {atom,{1035,27},beam_types},
           {atom,{1035,38},make_boolean}},
          []}]}]}},
    {debug_line,1037,434},
    {'case',
     {1037,5},
     {var,{1037,10},'Type'},
     [{clause,
       {1038,9},
       [{tuple,
         {1038,9},
         [{atom,{1038,9},t_atom},
          {cons,{1038,26},{atom,{1038,27},true},{nil,{1038,31}}}]}],
       [],
       [{debug_line,1041,435},
        {match,
         {1041,13},
         {var,{1041,13},'Lit'},
         {tuple,{1041,19},[{atom,{1041,19},b_literal},{atom,{1041,34},true}]}},
        {debug_line,1042,436},
        {map,
         {1042,16},
         {var,{1042,13},'Sub'},
         [{map_field_assoc,
           {1042,23},
           {var,{1042,19},'Dst'},
           {var,{1042,26},'Lit'}}]}]},
      {clause,
       {1043,9},
       [{tuple,
         {1043,9},
         [{atom,{1043,9},t_atom},
          {cons,{1043,26},{atom,{1043,27},false},{nil,{1043,32}}}]}],
       [[{op,{1043,45},'=:=',{var,{1043,40},'Kind'},{atom,{1043,49},guard}}]],
       [{debug_line,1045,437},
        {match,
         {1045,13},
         {var,{1045,13},'Lit'},
         {tuple,
          {1045,19},
          [{atom,{1045,19},b_literal},{atom,{1045,34},false}]}},
        {debug_line,1046,438},
        {map,
         {1046,16},
         {var,{1046,13},'Sub'},
         [{map_field_assoc,
           {1046,23},
           {var,{1046,19},'Dst'},
           {var,{1046,26},'Lit'}}]}]},
      {clause,
       {1047,9},
       [{var,{1047,9},'_'}],
       [],
       [{debug_line,1048,439},
        {match,
         {1048,13},
         {atom,{1048,13},true},
         {call,
          {1048,20},
          {remote,
           {1048,20},
           {atom,{1048,20},erlang},
           {atom,{1048,20},is_map_key}},
          [{var,{1048,31},'Arg'},{var,{1048,36},'Ds0'}]}},
        {debug_line,1053,440},
        {match,
         {1053,13},
         {var,{1053,13},'Ts'},
         {map,
          {1053,21},
          {var,{1053,18},'Ts0'},
          [{map_field_assoc,
            {1053,28},
            {var,{1053,24},'Dst'},
            {var,{1053,31},'Type'}}]}},
        {debug_line,1054,441},
        {match,
         {1054,13},
         {var,{1054,13},'Ds'},
         {map,
          {1054,21},
          {var,{1054,18},'Ds0'},
          [{map_field_assoc,
            {1054,28},
            {var,{1054,24},'Dst'},
            {var,{1054,31},'I'}}]}},
        {debug_line,1055,442},
        {tuple,
         {1055,13},
         [{var,{1055,14},'I'},
          {var,{1055,17},'Ts'},
          {var,{1055,21},'Ds'}]}]}]}]},
  {clause,
   {1057,1},
   [{match,
     {1057,10},
     {tuple,
      {1057,10},
      [{atom,{1057,10},b_set},
       {var,{1057,10},'_'},
       {var,{1057,33},'Dst'},
       {atom,{1057,20},bs_match},
       {var,{1057,42},'Args0'}]},
     {var,{1057,49},'I0'}},
    {var,{1057,53},'Ts0'},
    {var,{1057,58},'Ds0'},
    {var,{1057,63},'_Ls'},
    {var,{1057,68},'Sub'}],
   [],
   [{debug_line,1058,443},
    {match,
     {1058,5},
     {var,{1058,5},'Args'},
     {call,
      {1058,12},
      {atom,{1058,12},simplify_args},
      [{var,{1058,26},'Args0'},{var,{1058,33},'Ts0'},{var,{1058,38},'Sub'}]}},
    {debug_line,1059,444},
    {match,
     {1059,5},
     {var,{1059,5},'I1'},
     {block,
      {1059,10},
      [{match,{1059,10},{var,{1059,10},rec57},{var,{1059,10},'I0'}},
       {'case',
        {1059,19},
        {var,{1059,10},rec57},
        [{clause,
          {1059,19},
          [{tuple,
            {1059,19},
            [{atom,{1059,19},b_set},
             {var,{1059,19},'_'},
             {var,{1059,19},'_'},
             {var,{1059,19},'_'},
             {var,{1059,19},'_'}]}],
          [],
          [{call,
            {1059,19},
            {remote,
             {1059,19},
             {atom,{1059,19},erlang},
             {atom,{1059,19},setelement}},
            [{integer,{1059,19},5},
             {var,{1059,10},rec57},
             {var,{1059,24},'Args'}]}]},
         {clause,
          [{generated,true},{location,{1059,19}}],
          [{var,[{generated,true},{location,{1059,19}}],'_'}],
          [],
          [{call,
            [{generated,true},{location,{1059,19}}],
            {remote,
             [{generated,true},{location,{1059,19}}],
             {atom,[{generated,true},{location,{1059,19}}],erlang},
             {atom,[{generated,true},{location,{1059,19}}],error}},
            [{tuple,
              [{generated,true},{location,{1059,19}}],
              [{atom,[{generated,true},{location,{1059,19}}],badrecord},
               {var,{1059,10},rec57}]}]}]}]}]}},
    {debug_line,1060,445},
    {match,
     {1060,5},
     {var,{1060,5},'I2'},
     {'case',
      {1060,10},
      {tuple,{1060,15},[{var,{1060,16},'Args0'},{var,{1060,22},'Args'}]},
      [{clause,
        {1061,14},
        [{tuple,
          {1061,14},
          [{cons,
            {1061,15},
            {var,{1061,16},'_'},
            {cons,
             {1061,18},
             {var,{1061,18},'_'},
             {cons,
              {1061,20},
              {var,{1061,20},'_'},
              {cons,
               {1061,22},
               {tuple,{1061,22},[{atom,{1061,22},b_var},{var,{1061,22},'_'}]},
               {cons,{1061,31},{var,{1061,31},'_'},{nil,{1061,32}}}}}}},
           {cons,
            {1061,34},
            {var,{1061,35},'Type'},
            {cons,
             {1061,40},
             {var,{1061,40},'Val'},
             {cons,
              {1061,44},
              {var,{1061,44},'Flags'},
              {cons,
               {1061,50},
               {tuple,
                {1061,50},
                [{atom,{1061,50},b_literal},{atom,{1061,65},all}]},
               {cons,{1061,70},{var,{1061,70},'Unit'},{nil,{1061,74}}}}}}}]}],
        [],
        [{debug_line,1065,446},
         {block,
          {1065,18},
          [{match,
            {1065,27},
            {var,{1065,27},rec58},
            {cons,
             {1065,32},
             {var,{1065,33},'Type'},
             {cons,
              {1065,38},
              {var,{1065,38},'Val'},
              {cons,
               {1065,42},
               {var,{1065,42},'Flags'},
               {cons,
                {1065,48},
                {tuple,
                 {1065,48},
                 [{atom,{1065,48},b_literal},{atom,{1065,63},bad_size}]},
                {cons,{1065,73},{var,{1065,73},'Unit'},{nil,{1065,77}}}}}}}},
           {match,{1065,18},{var,{1065,18},rec59},{var,{1065,18},'I1'}},
           {'case',
            {1065,27},
            {var,{1065,18},rec59},
            [{clause,
              {1065,27},
              [{tuple,
                {1065,27},
                [{atom,{1065,27},b_set},
                 {var,{1065,27},'_'},
                 {var,{1065,27},'_'},
                 {var,{1065,27},'_'},
                 {var,{1065,27},'_'}]}],
              [],
              [{call,
                {1065,27},
                {remote,
                 {1065,27},
                 {atom,{1065,27},erlang},
                 {atom,{1065,27},setelement}},
                [{integer,{1065,27},5},
                 {var,{1065,18},rec59},
                 {var,{1065,27},rec58}]}]},
             {clause,
              [{generated,true},{location,{1065,27}}],
              [{var,[{generated,true},{location,{1065,27}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1065,27}}],
                {remote,
                 [{generated,true},{location,{1065,27}}],
                 {atom,[{generated,true},{location,{1065,27}}],erlang},
                 {atom,[{generated,true},{location,{1065,27}}],error}},
                [{tuple,
                  [{generated,true},{location,{1065,27}}],
                  [{atom,[{generated,true},{location,{1065,27}}],badrecord},
                   {var,{1065,18},rec59}]}]}]}]}]}]},
       {clause,
        {1066,14},
        [{tuple,{1066,14},[{var,{1066,15},'_'},{var,{1066,17},'_'}]}],
        [],
        [{debug_line,1067,447},{var,{1067,18},'I1'}]}]}},
    {debug_line,1071,448},
    {match,
     {1071,5},
     {tuple,
      {1071,5},
      [{atom,{1071,5},b_set},
       {var,{1071,5},'_'},
       {var,{1071,5},'_'},
       {var,{1071,5},'_'},
       {var,{1071,5},'_'}]},
     {match,
      {1071,16},
      {var,{1071,16},'I'},
      {call,
       {1071,20},
       {atom,{1071,20},simplify},
       [{var,{1071,29},'I2'},{var,{1071,33},'Ts0'}]}}},
    {debug_line,1072,449},
    {match,
     {1072,5},
     {var,{1072,5},'Ts'},
     {call,
      {1072,10},
      {atom,{1072,10},update_types},
      [{var,{1072,23},'I'},{var,{1072,26},'Ts0'},{var,{1072,31},'Ds0'}]}},
    {debug_line,1073,450},
    {match,
     {1073,5},
     {var,{1073,5},'Ds'},
     {map,
      {1073,13},
      {var,{1073,10},'Ds0'},
      [{map_field_assoc,
        {1073,20},
        {var,{1073,16},'Dst'},
        {var,{1073,23},'I'}}]}},
    {debug_line,1074,451},
    {tuple,
     {1074,5},
     [{var,{1074,6},'I'},{var,{1074,9},'Ts'},{var,{1074,13},'Ds'}]}]},
  {clause,
   {1075,1},
   [{match,
     {1075,10},
     {tuple,
      {1075,10},
      [{atom,{1075,10},b_set},
       {var,{1075,61},'Anno'},
       {var,{1075,41},'Dst'},
       {match,{1075,20},{atom,{1075,20},bs_create_bin},{var,{1075,34},'Op'}},
       {var,{1075,50},'Args0'}]},
     {var,{1075,67},'I0'}},
    {var,{1076,10},'Ts0'},
    {var,{1076,15},'Ds0'},
    {var,{1076,20},'_Ls'},
    {var,{1076,25},'Sub'}],
   [],
   [{debug_line,1077,452},
    {match,
     {1077,5},
     {var,{1077,5},'Args'},
     {call,
      {1077,12},
      {atom,{1077,12},simplify_args},
      [{var,{1077,26},'Args0'},{var,{1077,33},'Ts0'},{var,{1077,38},'Sub'}]}},
    {debug_line,1079,453},
    {'case',
     {1079,5},
     {var,{1079,10},'Args'},
     [{clause,
       {1080,9},
       [{cons,
         {1080,9},
         {tuple,
          {1080,10},
          [{atom,{1080,10},b_literal},{atom,{1080,25},binary}]},
         {cons,
          {1081,10},
          {tuple,
           {1081,10},
           [{atom,{1081,10},b_literal},
            {cons,{1081,25},{integer,{1081,26},1},{var,{1081,28},'_'}}]},
          {cons,
           {1082,10},
           {match,
            {1082,10},
            {tuple,
             {1082,10},
             [{atom,{1082,10},b_literal},{var,{1082,25},'Bitstring'}]},
            {var,{1082,36},'Lit'}},
           {cons,
            {1083,10},
            {tuple,
             {1083,10},
             [{atom,{1083,10},b_literal},{atom,{1083,25},all}]},
            {nil,{1083,29}}}}}}],
       [[{call,
          {1083,36},
          {remote,
           {1083,36},
           {atom,{1083,36},erlang},
           {atom,{1083,36},is_bitstring}},
          [{var,{1083,49},'Bitstring'}]}]],
       [{debug_line,1086,454},
        {map,
         {1086,16},
         {var,{1086,13},'Sub'},
         [{map_field_assoc,
           {1086,23},
           {var,{1086,19},'Dst'},
           {var,{1086,26},'Lit'}}]}]},
      {clause,
       {1087,9},
       [{cons,{1087,9},{var,{1087,10},'_'},{var,{1087,12},'_'}}],
       [],
       [{debug_line,1088,455},
        {match,
         {1088,13},
         {var,{1088,13},'I1'},
         {block,
          {1088,18},
          [{match,{1088,18},{var,{1088,18},rec60},{var,{1088,18},'I0'}},
           {'case',
            {1088,27},
            {var,{1088,18},rec60},
            [{clause,
              {1088,27},
              [{tuple,
                {1088,27},
                [{atom,{1088,27},b_set},
                 {var,{1088,27},'_'},
                 {var,{1088,27},'_'},
                 {var,{1088,27},'_'},
                 {var,{1088,27},'_'}]}],
              [],
              [{call,
                {1088,27},
                {remote,
                 {1088,27},
                 {atom,{1088,27},erlang},
                 {atom,{1088,27},setelement}},
                [{integer,{1088,27},5},
                 {var,{1088,18},rec60},
                 {var,{1088,32},'Args'}]}]},
             {clause,
              [{generated,true},{location,{1088,27}}],
              [{var,[{generated,true},{location,{1088,27}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1088,27}}],
                {remote,
                 [{generated,true},{location,{1088,27}}],
                 {atom,[{generated,true},{location,{1088,27}}],erlang},
                 {atom,[{generated,true},{location,{1088,27}}],error}},
                [{tuple,
                  [{generated,true},{location,{1088,27}}],
                  [{atom,[{generated,true},{location,{1088,27}}],badrecord},
                   {var,{1088,18},rec60}]}]}]}]}]}},
        {debug_line,1089,456},
        {match,
         {1089,13},
         {tuple,
          {1089,13},
          [{atom,{1089,13},t_bitstring},
           {var,{1089,36},'Unit'},
           {var,{1089,13},'_'}]},
         {match,
          {1089,44},
          {var,{1089,44},'T'},
          {call,
           {1089,48},
           {atom,{1089,48},type},
           [{var,{1089,53},'Op'},
            {var,{1089,57},'Args'},
            {var,{1089,63},'Anno'},
            {var,{1089,69},'Ts0'},
            {var,{1089,74},'Ds0'}]}}},
        {debug_line,1090,457},
        {match,
         {1090,13},
         {var,{1090,13},'I2'},
         {'case',
          {1090,18},
          {var,{1090,23},'T'},
          [{clause,
            {1091,21},
            [{tuple,
              {1091,21},
              [{atom,{1091,21},t_bitstring},
               {var,{1091,21},'_'},
               {atom,{1091,45},true}]}],
            [],
            [{debug_line,1092,458},
             {call,
              {1092,25},
              {remote,
               {1092,33},
               {atom,{1092,25},beam_ssa},
               {atom,{1092,34},add_anno}},
              [{atom,{1092,43},result_type},
               {var,{1092,56},'T'},
               {var,{1092,59},'I1'}]}]},
           {clause,
            {1093,21},
            [{var,{1093,21},'_'}],
            [],
            [{debug_line,1093,459},{var,{1093,26},'I1'}]}]}},
        {debug_line,1095,460},
        {match,
         {1095,13},
         {var,{1095,13},'I'},
         {call,
          {1095,17},
          {remote,
           {1095,25},
           {atom,{1095,17},beam_ssa},
           {atom,{1095,26},add_anno}},
          [{atom,{1095,35},unit},
           {var,{1095,41},'Unit'},
           {var,{1095,47},'I2'}]}},
        {debug_line,1096,461},
        {match,
         {1096,13},
         {var,{1096,13},'Ts'},
         {map,
          {1096,21},
          {var,{1096,18},'Ts0'},
          [{map_field_assoc,
            {1096,28},
            {var,{1096,24},'Dst'},
            {var,{1096,31},'T'}}]}},
        {debug_line,1097,462},
        {match,
         {1097,13},
         {var,{1097,13},'Ds'},
         {map,
          {1097,21},
          {var,{1097,18},'Ds0'},
          [{map_field_assoc,
            {1097,28},
            {var,{1097,24},'Dst'},
            {var,{1097,31},'I'}}]}},
        {debug_line,1098,463},
        {tuple,
         {1098,13},
         [{var,{1098,14},'I'},
          {var,{1098,17},'Ts'},
          {var,{1098,21},'Ds'}]}]}]}]},
  {clause,
   {1100,1},
   [{match,
     {1100,10},
     {tuple,
      {1100,10},
      [{atom,{1100,10},b_set},
       {var,{1100,10},'_'},
       {var,{1100,21},'Dst'},
       {var,{1100,10},'_'},
       {var,{1100,30},'Args0'}]},
     {var,{1100,37},'I0'}},
    {var,{1100,41},'Ts0'},
    {var,{1100,46},'Ds0'},
    {var,{1100,51},'_Ls'},
    {var,{1100,56},'Sub'}],
   [],
   [{debug_line,1101,464},
    {match,
     {1101,5},
     {var,{1101,5},'Args'},
     {call,
      {1101,12},
      {atom,{1101,12},simplify_args},
      [{var,{1101,26},'Args0'},{var,{1101,33},'Ts0'},{var,{1101,38},'Sub'}]}},
    {debug_line,1102,465},
    {match,
     {1102,5},
     {var,{1102,5},'I1'},
     {call,
      {1102,10},
      {remote,{1102,18},{atom,{1102,10},beam_ssa},{atom,{1102,19},normalize}},
      [{block,0,
        [{block,
          {1102,29},
          [{match,{1102,29},{var,{1102,29},rec61},{var,{1102,29},'I0'}},
           {'case',
            {1102,38},
            {var,{1102,29},rec61},
            [{clause,
              {1102,38},
              [{tuple,
                {1102,38},
                [{atom,{1102,38},b_set},
                 {var,{1102,38},'_'},
                 {var,{1102,38},'_'},
                 {var,{1102,38},'_'},
                 {var,{1102,38},'_'}]}],
              [],
              [{call,
                {1102,38},
                {remote,
                 {1102,38},
                 {atom,{1102,38},erlang},
                 {atom,{1102,38},setelement}},
                [{integer,{1102,38},5},
                 {var,{1102,29},rec61},
                 {var,{1102,43},'Args'}]}]},
             {clause,
              [{generated,true},{location,{1102,38}}],
              [{var,[{generated,true},{location,{1102,38}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1102,38}}],
                {remote,
                 [{generated,true},{location,{1102,38}}],
                 {atom,[{generated,true},{location,{1102,38}}],erlang},
                 {atom,[{generated,true},{location,{1102,38}}],error}},
                [{tuple,
                  [{generated,true},{location,{1102,38}}],
                  [{atom,[{generated,true},{location,{1102,38}}],badrecord},
                   {var,{1102,29},rec61}]}]}]}]}]}]}]}},
    {debug_line,1103,466},
    {'case',
     {1103,5},
     {call,
      {1103,10},
      {atom,{1103,10},simplify},
      [{var,{1103,19},'I1'},{var,{1103,23},'Ts0'},{var,{1103,28},'Ds0'}]},
     [{clause,
       {1104,9},
       [{match,
         {1104,9},
         {tuple,
          {1104,9},
          [{atom,{1104,9},b_set},
           {var,{1104,9},'_'},
           {var,{1104,9},'_'},
           {var,{1104,9},'_'},
           {var,{1104,9},'_'}]},
         {var,{1104,18},'I'}}],
       [],
       [{debug_line,1105,467},
        {match,
         {1105,13},
         {var,{1105,13},'Ts'},
         {call,
          {1105,18},
          {atom,{1105,18},update_types},
          [{var,{1105,31},'I'},{var,{1105,34},'Ts0'},{var,{1105,39},'Ds0'}]}},
        {debug_line,1106,468},
        {match,
         {1106,13},
         {var,{1106,13},'Ds'},
         {map,
          {1106,21},
          {var,{1106,18},'Ds0'},
          [{map_field_assoc,
            {1106,28},
            {var,{1106,24},'Dst'},
            {var,{1106,31},'I'}}]}},
        {debug_line,1107,469},
        {tuple,
         {1107,13},
         [{var,{1107,14},'I'},{var,{1107,17},'Ts'},{var,{1107,21},'Ds'}]}]},
      {clause,
       {1108,9},
       [{match,
         {1108,9},
         {tuple,{1108,9},[{atom,{1108,9},b_literal},{var,{1108,9},'_'}]},
         {var,{1108,22},'Lit'}}],
       [],
       [{debug_line,1109,470},
        {map,
         {1109,16},
         {var,{1109,13},'Sub'},
         [{map_field_assoc,
           {1109,23},
           {var,{1109,19},'Dst'},
           {var,{1109,26},'Lit'}}]}]},
      {clause,
       {1110,9},
       [{match,
         {1110,9},
         {tuple,{1110,9},[{atom,{1110,9},b_var},{var,{1110,9},'_'}]},
         {var,{1110,18},'Var'}}],
       [],
       [{debug_line,1111,471},
        {map,
         {1111,16},
         {var,{1111,13},'Sub'},
         [{map_field_assoc,
           {1111,23},
           {var,{1111,19},'Dst'},
           {var,{1111,26},'Var'}}]}]}]}]}]}.
{function,
 {1114,1},
 simplify,3,
 [{clause,
   {1114,1},
   [{var,{1114,1},'_'},{var,{1114,1},'_'},{var,{1114,1},'_'}],
   [[{call,
      {1114,1},
      {remote,{1114,1},{atom,{1114,1},fake},{atom,{1114,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1114,472},{atom,{1114,1},ignore}]},
  {clause,
   {1114,1},
   [{match,
     {1114,10},
     {tuple,
      {1114,10},
      [{atom,{1114,10},b_set},
       {var,{1114,10},'_'},
       {var,{1114,10},'_'},
       {tuple,{1114,20},[{atom,{1114,21},bif},{atom,{1114,25},'band'}]},
       {var,{1114,38},'Args'}]},
     {var,{1114,44},'I'}},
    {var,{1114,47},'Ts'},
    {var,{1114,51},'Ds'}],
   [],
   [{debug_line,1115,473},
    {'case',
     {1115,5},
     {call,
      {1115,10},
      {atom,{1115,10},normalized_types},
      [{var,{1115,27},'Args'},{var,{1115,33},'Ts'}]},
     [{clause,
       {1116,9},
       [{cons,
         {1116,9},
         {tuple,{1116,10},[{atom,{1116,10},t_integer},{var,{1116,30},'R'}]},
         {cons,
          {1116,33},
          {tuple,
           {1116,33},
           [{atom,{1116,33},t_integer},
            {tuple,{1116,53},[{var,{1116,54},'M'},{var,{1116,56},'M'}]}]},
          {nil,{1116,59}}}}],
       [],
       [{debug_line,1117,474},
        {'case',
         {1117,13},
         {call,
          {1117,18},
          {remote,
           {1117,29},
           {atom,{1117,18},beam_bounds},
           {atom,{1117,30},is_masking_redundant}},
          [{var,{1117,51},'R'},{var,{1117,54},'M'}]},
         [{clause,
           {1118,17},
           [{atom,{1118,17},true}],
           [],
           [{debug_line,1120,475},
            {call,
             {1120,21},
             {remote,{1120,21},{atom,{1120,21},erlang},{atom,{1120,21},hd}},
             [{var,{1120,24},'Args'}]}]},
          {clause,
           {1121,17},
           [{atom,{1121,17},false}],
           [],
           [{debug_line,1122,476},
            {call,
             {1122,21},
             {atom,{1122,21},eval_bif},
             [{var,{1122,30},'I'},
              {var,{1122,33},'Ts'},
              {var,{1122,37},'Ds'}]}]}]}]},
      {clause,
       {1124,9},
       [{cons,
         {1124,9},
         {var,{1124,10},'_'},
         {cons,{1124,12},{var,{1124,12},'_'},{nil,{1124,13}}}}],
       [],
       [{debug_line,1125,477},
        {call,
         {1125,13},
         {atom,{1125,13},eval_bif},
         [{var,{1125,22},'I'},
          {var,{1125,25},'Ts'},
          {var,{1125,29},'Ds'}]}]}]}]},
  {clause,
   {1127,1},
   [{match,
     {1127,10},
     {tuple,
      {1127,10},
      [{atom,{1127,10},b_set},
       {var,{1127,10},'_'},
       {var,{1127,10},'_'},
       {tuple,{1127,20},[{atom,{1127,21},bif},{atom,{1127,25},'and'}]},
       {var,{1127,37},'Args'}]},
     {var,{1127,43},'I'}},
    {var,{1127,46},'Ts'},
    {var,{1127,50},'Ds'}],
   [],
   [{debug_line,1128,478},
    {'case',
     {1128,5},
     {call,
      {1128,10},
      {atom,{1128,10},is_safe_bool_op},
      [{var,{1128,26},'Args'},{var,{1128,32},'Ts'}]},
     [{clause,
       {1129,9},
       [{atom,{1129,9},true}],
       [],
       [{debug_line,1130,479},
        {'case',
         {1130,13},
         {var,{1130,18},'Args'},
         [{clause,
           {1131,17},
           [{cons,
             {1131,17},
             {var,{1131,18},'_'},
             {cons,
              {1131,20},
              {match,
               {1131,20},
               {tuple,
                {1131,20},
                [{atom,{1131,20},b_literal},{atom,{1131,35},false}]},
               {var,{1131,42},'Res'}},
              {nil,{1131,45}}}}],
           [],
           [{debug_line,1131,480},{var,{1131,50},'Res'}]},
          {clause,
           {1132,17},
           [{cons,
             {1132,17},
             {var,{1132,18},'Res'},
             {cons,
              {1132,22},
              {tuple,
               {1132,22},
               [{atom,{1132,22},b_literal},{atom,{1132,37},true}]},
              {nil,{1132,42}}}}],
           [],
           [{debug_line,1132,481},{var,{1132,47},'Res'}]},
          {clause,
           {1133,17},
           [{var,{1133,17},'_'}],
           [],
           [{debug_line,1133,482},
            {call,
             {1133,22},
             {atom,{1133,22},eval_bif},
             [{var,{1133,31},'I'},
              {var,{1133,34},'Ts'},
              {var,{1133,38},'Ds'}]}]}]}]},
      {clause,
       {1135,9},
       [{atom,{1135,9},false}],
       [],
       [{debug_line,1136,483},{var,{1136,13},'I'}]}]}]},
  {clause,
   {1138,1},
   [{match,
     {1138,10},
     {tuple,
      {1138,10},
      [{atom,{1138,10},b_set},
       {var,{1138,10},'_'},
       {var,{1138,10},'_'},
       {tuple,{1138,20},[{atom,{1138,21},bif},{atom,{1138,25},'or'}]},
       {var,{1138,36},'Args'}]},
     {var,{1138,42},'I'}},
    {var,{1138,45},'Ts'},
    {var,{1138,49},'Ds'}],
   [],
   [{debug_line,1139,484},
    {'case',
     {1139,5},
     {call,
      {1139,10},
      {atom,{1139,10},is_safe_bool_op},
      [{var,{1139,26},'Args'},{var,{1139,32},'Ts'}]},
     [{clause,
       {1140,9},
       [{atom,{1140,9},true}],
       [],
       [{debug_line,1141,485},
        {'case',
         {1141,13},
         {var,{1141,18},'Args'},
         [{clause,
           {1142,17},
           [{cons,
             {1142,17},
             {var,{1142,18},'Res'},
             {cons,
              {1142,22},
              {tuple,
               {1142,22},
               [{atom,{1142,22},b_literal},{atom,{1142,37},false}]},
              {nil,{1142,43}}}}],
           [],
           [{debug_line,1142,486},{var,{1142,48},'Res'}]},
          {clause,
           {1143,17},
           [{cons,
             {1143,17},
             {var,{1143,18},'_'},
             {cons,
              {1143,20},
              {match,
               {1143,20},
               {tuple,
                {1143,20},
                [{atom,{1143,20},b_literal},{atom,{1143,35},true}]},
               {var,{1143,41},'Res'}},
              {nil,{1143,44}}}}],
           [],
           [{debug_line,1143,487},{var,{1143,49},'Res'}]},
          {clause,
           {1144,17},
           [{var,{1144,17},'_'}],
           [],
           [{debug_line,1144,488},
            {call,
             {1144,22},
             {atom,{1144,22},eval_bif},
             [{var,{1144,31},'I'},
              {var,{1144,34},'Ts'},
              {var,{1144,38},'Ds'}]}]}]}]},
      {clause,
       {1146,9},
       [{atom,{1146,9},false}],
       [],
       [{debug_line,1147,489},{var,{1147,13},'I'}]}]}]},
  {clause,
   {1149,1},
   [{match,
     {1149,10},
     {tuple,
      {1149,10},
      [{atom,{1149,10},b_set},
       {var,{1149,10},'_'},
       {var,{1149,10},'_'},
       {tuple,{1149,20},[{atom,{1149,21},bif},{atom,{1149,25},element}]},
       {cons,
        {1149,39},
        {tuple,{1149,40},[{atom,{1149,40},b_literal},{var,{1149,55},'Index'}]},
        {cons,{1149,62},{var,{1149,62},'Tuple'},{nil,{1149,67}}}}]},
     {var,{1149,70},'I0'}},
    {var,{1149,74},'Ts'},
    {var,{1149,78},'Ds'}],
   [],
   [{debug_line,1150,490},
    {'case',
     {1150,5},
     {call,
      {1150,10},
      {atom,{1150,10},normalized_type},
      [{var,{1150,26},'Tuple'},{var,{1150,33},'Ts'}]},
     [{clause,
       {1151,9},
       [{tuple,
         {1151,9},
         [{atom,{1151,9},t_tuple},
          {var,{1151,23},'Size'},
          {var,{1151,9},'_'},
          {var,{1151,9},'_'}]}],
       [[{call,
          {1151,34},
          {remote,
           {1151,34},
           {atom,{1151,34},erlang},
           {atom,{1151,34},is_integer}},
          [{var,{1151,45},'Index'}]},
         {op,{1152,36},'=<',{integer,{1152,34},1},{var,{1152,39},'Index'}},
         {op,{1153,40},'=<',{var,{1153,34},'Index'},{var,{1153,43},'Size'}}]],
       [{debug_line,1154,491},
        {match,
         {1154,13},
         {var,{1154,13},'I'},
         {block,
          {1154,17},
          [{match,
            {1155,26},
            {var,{1155,26},rec62},
            {cons,
             {1155,31},
             {var,{1155,32},'Tuple'},
             {cons,
              {1155,38},
              {tuple,
               {1155,38},
               [{atom,{1155,38},b_literal},
                {op,
                 {1155,58},
                 '-',
                 {var,{1155,53},'Index'},
                 {integer,{1155,59},1}}]},
              {nil,{1155,61}}}}},
           {match,{1154,17},{var,{1154,17},rec63},{var,{1154,17},'I0'}},
           {'case',
            {1154,26},
            {var,{1154,17},rec63},
            [{clause,
              {1154,26},
              [{tuple,
                {1154,26},
                [{atom,{1154,26},b_set},
                 {var,{1154,26},'_'},
                 {var,{1154,26},'_'},
                 {var,{1154,26},'_'},
                 {var,{1154,26},'_'}]}],
              [],
              [{call,
                {1154,26},
                {remote,
                 {1154,26},
                 {atom,{1154,26},erlang},
                 {atom,{1154,26},setelement}},
                [{integer,{1154,26},4},
                 {call,
                  {1155,26},
                  {remote,
                   {1155,26},
                   {atom,{1155,26},erlang},
                   {atom,{1155,26},setelement}},
                  [{integer,{1155,26},5},
                   {var,{1154,17},rec63},
                   {var,{1155,26},rec62}]},
                 {atom,{1154,29},get_tuple_element}]}]},
             {clause,
              [{generated,true},{location,{1154,26}}],
              [{var,[{generated,true},{location,{1154,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1154,26}}],
                {remote,
                 [{generated,true},{location,{1154,26}}],
                 {atom,[{generated,true},{location,{1154,26}}],erlang},
                 {atom,[{generated,true},{location,{1154,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1154,26}}],
                  [{atom,[{generated,true},{location,{1154,26}}],badrecord},
                   {var,{1154,17},rec63}]}]}]}]}]}},
        {debug_line,1156,492},
        {call,
         {1156,13},
         {atom,{1156,13},simplify},
         [{var,{1156,22},'I'},{var,{1156,25},'Ts'},{var,{1156,29},'Ds'}]}]},
      {clause,
       {1157,9},
       [{var,{1157,9},'_'}],
       [],
       [{debug_line,1158,493},
        {call,
         {1158,13},
         {atom,{1158,13},eval_bif},
         [{var,{1158,22},'I0'},
          {var,{1158,26},'Ts'},
          {var,{1158,30},'Ds'}]}]}]}]},
  {clause,
   {1160,1},
   [{match,
     {1160,10},
     {tuple,
      {1160,10},
      [{atom,{1160,10},b_set},
       {var,{1160,10},'_'},
       {var,{1160,10},'_'},
       {tuple,{1160,20},[{atom,{1160,21},bif},{atom,{1160,25},hd}]},
       {cons,{1160,34},{var,{1160,35},'List'},{nil,{1160,39}}}]},
     {var,{1160,42},'I'}},
    {var,{1160,45},'Ts'},
    {var,{1160,49},'Ds'}],
   [],
   [{debug_line,1161,494},
    {'case',
     {1161,5},
     {call,
      {1161,10},
      {atom,{1161,10},normalized_type},
      [{var,{1161,26},'List'},{var,{1161,32},'Ts'}]},
     [{clause,
       {1162,9},
       [{tuple,
         {1162,9},
         [{atom,{1162,9},t_cons},{var,{1162,9},'_'},{var,{1162,9},'_'}]}],
       [],
       [{debug_line,1163,495},
        {block,
         {1163,13},
         [{match,{1163,13},{var,{1163,13},rec64},{var,{1163,13},'I'}},
          {'case',
           {1163,21},
           {var,{1163,13},rec64},
           [{clause,
             {1163,21},
             [{tuple,
               {1163,21},
               [{atom,{1163,21},b_set},
                {var,{1163,21},'_'},
                {var,{1163,21},'_'},
                {var,{1163,21},'_'},
                {var,{1163,21},'_'}]}],
             [],
             [{call,
               {1163,21},
               {remote,
                {1163,21},
                {atom,{1163,21},erlang},
                {atom,{1163,21},setelement}},
               [{integer,{1163,21},4},
                {var,{1163,13},rec64},
                {atom,{1163,24},get_hd}]}]},
            {clause,
             [{generated,true},{location,{1163,21}}],
             [{var,[{generated,true},{location,{1163,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1163,21}}],
               {remote,
                [{generated,true},{location,{1163,21}}],
                {atom,[{generated,true},{location,{1163,21}}],erlang},
                {atom,[{generated,true},{location,{1163,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1163,21}}],
                 [{atom,[{generated,true},{location,{1163,21}}],badrecord},
                  {var,{1163,13},rec64}]}]}]}]}]}]},
      {clause,
       {1164,9},
       [{var,{1164,9},'_'}],
       [],
       [{debug_line,1165,496},
        {call,
         {1165,13},
         {atom,{1165,13},eval_bif},
         [{var,{1165,22},'I'},
          {var,{1165,25},'Ts'},
          {var,{1165,29},'Ds'}]}]}]}]},
  {clause,
   {1167,1},
   [{match,
     {1167,10},
     {tuple,
      {1167,10},
      [{atom,{1167,10},b_set},
       {var,{1167,10},'_'},
       {var,{1167,10},'_'},
       {tuple,{1167,20},[{atom,{1167,21},bif},{atom,{1167,25},tl}]},
       {cons,{1167,34},{var,{1167,35},'List'},{nil,{1167,39}}}]},
     {var,{1167,42},'I'}},
    {var,{1167,45},'Ts'},
    {var,{1167,49},'Ds'}],
   [],
   [{debug_line,1168,497},
    {'case',
     {1168,5},
     {call,
      {1168,10},
      {atom,{1168,10},normalized_type},
      [{var,{1168,26},'List'},{var,{1168,32},'Ts'}]},
     [{clause,
       {1169,9},
       [{tuple,
         {1169,9},
         [{atom,{1169,9},t_cons},{var,{1169,9},'_'},{var,{1169,9},'_'}]}],
       [],
       [{debug_line,1170,498},
        {block,
         {1170,13},
         [{match,{1170,13},{var,{1170,13},rec65},{var,{1170,13},'I'}},
          {'case',
           {1170,21},
           {var,{1170,13},rec65},
           [{clause,
             {1170,21},
             [{tuple,
               {1170,21},
               [{atom,{1170,21},b_set},
                {var,{1170,21},'_'},
                {var,{1170,21},'_'},
                {var,{1170,21},'_'},
                {var,{1170,21},'_'}]}],
             [],
             [{call,
               {1170,21},
               {remote,
                {1170,21},
                {atom,{1170,21},erlang},
                {atom,{1170,21},setelement}},
               [{integer,{1170,21},4},
                {var,{1170,13},rec65},
                {atom,{1170,24},get_tl}]}]},
            {clause,
             [{generated,true},{location,{1170,21}}],
             [{var,[{generated,true},{location,{1170,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1170,21}}],
               {remote,
                [{generated,true},{location,{1170,21}}],
                {atom,[{generated,true},{location,{1170,21}}],erlang},
                {atom,[{generated,true},{location,{1170,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1170,21}}],
                 [{atom,[{generated,true},{location,{1170,21}}],badrecord},
                  {var,{1170,13},rec65}]}]}]}]}]}]},
      {clause,
       {1171,9},
       [{var,{1171,9},'_'}],
       [],
       [{debug_line,1172,499},
        {call,
         {1172,13},
         {atom,{1172,13},eval_bif},
         [{var,{1172,22},'I'},
          {var,{1172,25},'Ts'},
          {var,{1172,29},'Ds'}]}]}]}]},
  {clause,
   {1174,1},
   [{match,
     {1174,10},
     {tuple,
      {1174,10},
      [{atom,{1174,10},b_set},
       {var,{1174,10},'_'},
       {var,{1174,10},'_'},
       {tuple,{1174,20},[{atom,{1174,21},bif},{atom,{1174,25},size}]},
       {cons,{1174,36},{var,{1174,37},'Term'},{nil,{1174,41}}}]},
     {var,{1174,44},'I'}},
    {var,{1174,47},'Ts'},
    {var,{1174,51},'Ds'}],
   [],
   [{debug_line,1175,500},
    {'case',
     {1175,5},
     {call,
      {1175,10},
      {atom,{1175,10},normalized_type},
      [{var,{1175,26},'Term'},{var,{1175,32},'Ts'}]},
     [{clause,
       {1176,9},
       [{tuple,
         {1176,9},
         [{atom,{1176,9},t_tuple},
          {var,{1176,9},'_'},
          {var,{1176,9},'_'},
          {var,{1176,9},'_'}]}],
       [],
       [{debug_line,1177,501},
        {call,
         {1177,13},
         {atom,{1177,13},simplify},
         [{block,0,
           [{block,
             {1177,22},
             [{match,{1177,22},{var,{1177,22},rec66},{var,{1177,22},'I'}},
              {'case',
               {1177,30},
               {var,{1177,22},rec66},
               [{clause,
                 {1177,30},
                 [{tuple,
                   {1177,30},
                   [{atom,{1177,30},b_set},
                    {var,{1177,30},'_'},
                    {var,{1177,30},'_'},
                    {var,{1177,30},'_'},
                    {var,{1177,30},'_'}]}],
                 [],
                 [{call,
                   {1177,30},
                   {remote,
                    {1177,30},
                    {atom,{1177,30},erlang},
                    {atom,{1177,30},setelement}},
                   [{integer,{1177,30},4},
                    {var,{1177,22},rec66},
                    {tuple,
                     {1177,33},
                     [{atom,{1177,34},bif},{atom,{1177,38},tuple_size}]}]}]},
                {clause,
                 [{generated,true},{location,{1177,30}}],
                 [{var,[{generated,true},{location,{1177,30}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1177,30}}],
                   {remote,
                    [{generated,true},{location,{1177,30}}],
                    {atom,[{generated,true},{location,{1177,30}}],erlang},
                    {atom,[{generated,true},{location,{1177,30}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1177,30}}],
                     [{atom,[{generated,true},{location,{1177,30}}],badrecord},
                      {var,{1177,22},rec66}]}]}]}]}]}]},
          {var,{1177,52},'Ts'}]}]},
      {clause,
       {1178,9},
       [{tuple,
         {1178,9},
         [{atom,{1178,9},t_bitstring},
          {var,{1178,32},'U'},
          {var,{1178,9},'_'}]}],
       [[{op,
          {1178,48},
          '=:=',
          {op,{1178,42},'rem',{var,{1178,40},'U'},{integer,{1178,46},8}},
          {integer,{1178,52},0}}]],
       [{debug_line,1182,502},
        {call,
         {1182,13},
         {atom,{1182,13},simplify},
         [{block,0,
           [{block,
             {1182,22},
             [{match,{1182,22},{var,{1182,22},rec67},{var,{1182,22},'I'}},
              {'case',
               {1182,30},
               {var,{1182,22},rec67},
               [{clause,
                 {1182,30},
                 [{tuple,
                   {1182,30},
                   [{atom,{1182,30},b_set},
                    {var,{1182,30},'_'},
                    {var,{1182,30},'_'},
                    {var,{1182,30},'_'},
                    {var,{1182,30},'_'}]}],
                 [],
                 [{call,
                   {1182,30},
                   {remote,
                    {1182,30},
                    {atom,{1182,30},erlang},
                    {atom,{1182,30},setelement}},
                   [{integer,{1182,30},4},
                    {var,{1182,22},rec67},
                    {tuple,
                     {1182,33},
                     [{atom,{1182,34},bif},{atom,{1182,38},byte_size}]}]}]},
                {clause,
                 [{generated,true},{location,{1182,30}}],
                 [{var,[{generated,true},{location,{1182,30}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1182,30}}],
                   {remote,
                    [{generated,true},{location,{1182,30}}],
                    {atom,[{generated,true},{location,{1182,30}}],erlang},
                    {atom,[{generated,true},{location,{1182,30}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1182,30}}],
                     [{atom,[{generated,true},{location,{1182,30}}],badrecord},
                      {var,{1182,22},rec67}]}]}]}]}]}]},
          {var,{1182,51},'Ts'},
          {var,{1182,55},'Ds'}]}]},
      {clause,
       {1183,9},
       [{var,{1183,9},'_'}],
       [],
       [{debug_line,1184,503},
        {call,
         {1184,13},
         {atom,{1184,13},eval_bif},
         [{var,{1184,22},'I'},
          {var,{1184,25},'Ts'},
          {var,{1184,29},'Ds'}]}]}]}]},
  {clause,
   {1186,1},
   [{match,
     {1186,10},
     {tuple,
      {1186,10},
      [{atom,{1186,10},b_set},
       {var,{1186,10},'_'},
       {var,{1186,10},'_'},
       {tuple,{1186,20},[{atom,{1186,21},bif},{atom,{1186,25},tuple_size}]},
       {cons,{1186,42},{var,{1186,43},'Term'},{nil,{1186,47}}}]},
     {var,{1186,50},'I'}},
    {var,{1186,53},'Ts'},
    {var,{1186,57},'_Ds'}],
   [],
   [{debug_line,1187,504},
    {'case',
     {1187,5},
     {call,
      {1187,10},
      {atom,{1187,10},normalized_type},
      [{var,{1187,26},'Term'},{var,{1187,32},'Ts'}]},
     [{clause,
       {1188,9},
       [{tuple,
         {1188,9},
         [{atom,{1188,9},t_tuple},
          {var,{1188,23},'Size'},
          {atom,{1188,34},true},
          {var,{1188,9},'_'}]}],
       [],
       [{debug_line,1189,505},
        {tuple,
         {1189,13},
         [{atom,{1189,13},b_literal},{var,{1189,28},'Size'}]}]},
      {clause,
       {1190,9},
       [{var,{1190,9},'_'}],
       [],
       [{debug_line,1191,506},{var,{1191,13},'I'}]}]}]},
  {clause,
   {1193,1},
   [{match,
     {1193,10},
     {tuple,
      {1193,10},
      [{atom,{1193,10},b_set},
       {var,{1193,10},'_'},
       {var,{1193,10},'_'},
       {tuple,{1193,20},[{atom,{1193,21},bif},{atom,{1193,25},is_map_key}]},
       {cons,
        {1193,42},
        {var,{1193,43},'Key'},
        {cons,{1193,47},{var,{1193,47},'Map'},{nil,{1193,50}}}}]},
     {var,{1193,53},'I'}},
    {var,{1193,56},'Ts'},
    {var,{1193,60},'_Ds'}],
   [],
   [{debug_line,1194,507},
    {'case',
     {1194,5},
     {call,
      {1194,10},
      {atom,{1194,10},normalized_type},
      [{var,{1194,26},'Map'},{var,{1194,31},'Ts'}]},
     [{clause,
       {1195,9},
       [{tuple,
         {1195,9},
         [{atom,{1195,9},t_map},{var,{1195,9},'_'},{var,{1195,9},'_'}]}],
       [],
       [{debug_line,1196,508},
        {block,
         {1196,13},
         [{match,
           {1196,38},
           {var,{1196,38},rec68},
           {cons,
            {1196,43},
            {var,{1196,44},'Map'},
            {cons,{1196,48},{var,{1196,48},'Key'},{nil,{1196,51}}}}},
          {match,{1196,13},{var,{1196,13},rec69},{var,{1196,13},'I'}},
          {'case',
           {1196,21},
           {var,{1196,13},rec69},
           [{clause,
             {1196,21},
             [{tuple,
               {1196,21},
               [{atom,{1196,21},b_set},
                {var,{1196,21},'_'},
                {var,{1196,21},'_'},
                {var,{1196,21},'_'},
                {var,{1196,21},'_'}]}],
             [],
             [{call,
               {1196,21},
               {remote,
                {1196,21},
                {atom,{1196,21},erlang},
                {atom,{1196,21},setelement}},
               [{integer,{1196,21},4},
                {call,
                 {1196,38},
                 {remote,
                  {1196,38},
                  {atom,{1196,38},erlang},
                  {atom,{1196,38},setelement}},
                 [{integer,{1196,38},5},
                  {var,{1196,13},rec69},
                  {var,{1196,38},rec68}]},
                {atom,{1196,24},has_map_field}]}]},
            {clause,
             [{generated,true},{location,{1196,21}}],
             [{var,[{generated,true},{location,{1196,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1196,21}}],
               {remote,
                [{generated,true},{location,{1196,21}}],
                {atom,[{generated,true},{location,{1196,21}}],erlang},
                {atom,[{generated,true},{location,{1196,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1196,21}}],
                 [{atom,[{generated,true},{location,{1196,21}}],badrecord},
                  {var,{1196,13},rec69}]}]}]}]}]}]},
      {clause,
       {1197,9},
       [{var,{1197,9},'_'}],
       [],
       [{debug_line,1198,509},{var,{1198,13},'I'}]}]}]},
  {clause,
   {1200,1},
   [{match,
     {1200,10},
     {tuple,
      {1200,10},
      [{atom,{1200,10},b_set},
       {var,{1200,10},'_'},
       {var,{1200,10},'_'},
       {tuple,{1200,20},[{atom,{1200,21},bif},{var,{1200,25},'Op0'}]},
       {cons,
        {1200,35},
        {var,{1200,36},'A'},
        {cons,{1200,38},{var,{1200,38},'B'},{nil,{1200,39}}}}]},
     {var,{1200,42},'I'}},
    {var,{1200,45},'Ts'},
    {var,{1200,49},'Ds'}],
   [[{op,{1200,62},'=:=',{var,{1200,58},'Op0'},{atom,{1200,66},'=='}}],
    [{op,{1201,62},'=:=',{var,{1201,58},'Op0'},{atom,{1201,66},'/='}}]],
   [{debug_line,1202,510},
    {match,
     {1202,5},
     {var,{1202,5},'EqEq'},
     {'case',
      {1202,12},
      {tuple,
       {1202,17},
       [{call,
         {1202,18},
         {atom,{1202,18},number_type},
         [{var,{1202,30},'A'},{var,{1202,33},'Ts'}]},
        {call,
         {1202,37},
         {atom,{1202,37},number_type},
         [{var,{1202,49},'B'},{var,{1202,52},'Ts'}]}]},
      [{clause,
        {1203,16},
        [{tuple,{1203,16},[{atom,{1203,17},none},{var,{1203,22},'_'}]}],
        [],
        [{debug_line,1206,511},{atom,{1206,20},true}]},
       {clause,
        {1207,16},
        [{tuple,{1207,16},[{var,{1207,17},'_'},{atom,{1207,19},none}]}],
        [],
        [{debug_line,1210,512},{atom,{1210,20},true}]},
       {clause,
        {1211,16},
        [{tuple,
          {1211,16},
          [{tuple,{1211,17},[{atom,{1211,17},t_integer},{var,{1211,17},'_'}]},
           {tuple,
            {1211,30},
            [{atom,{1211,30},t_integer},{var,{1211,30},'_'}]}]}],
        [],
        [{debug_line,1213,513},{atom,{1213,20},true}]},
       {clause,
        {1214,16},
        [{tuple,{1214,16},[{var,{1214,17},'_'},{var,{1214,19},'_'}]}],
        [],
        [{debug_line,1217,514},{atom,{1217,20},false}]}]}},
    {debug_line,1219,515},
    {'case',
     {1219,5},
     {var,{1219,10},'EqEq'},
     [{clause,
       {1220,9},
       [{atom,{1220,9},true}],
       [],
       [{debug_line,1221,516},
        {match,
         {1221,13},
         {var,{1221,13},'Op'},
         {'case',
          {1221,18},
          {var,{1221,23},'Op0'},
          [{clause,
            {1222,22},
            [{atom,{1222,22},'=='}],
            [],
            [{debug_line,1222,517},{atom,{1222,30},'=:='}]},
           {clause,
            {1223,22},
            [{atom,{1223,22},'/='}],
            [],
            [{debug_line,1223,518},{atom,{1223,30},'=/='}]}]}},
        {debug_line,1225,519},
        {call,
         {1225,13},
         {atom,{1225,13},simplify},
         [{block,0,
           [{block,
             {1225,22},
             [{match,
               {1225,30},
               {var,{1225,30},rec70},
               {tuple,{1225,33},[{atom,{1225,34},bif},{var,{1225,38},'Op'}]}},
              {match,{1225,22},{var,{1225,22},rec71},{var,{1225,22},'I'}},
              {'case',
               {1225,30},
               {var,{1225,22},rec71},
               [{clause,
                 {1225,30},
                 [{tuple,
                   {1225,30},
                   [{atom,{1225,30},b_set},
                    {var,{1225,30},'_'},
                    {var,{1225,30},'_'},
                    {var,{1225,30},'_'},
                    {var,{1225,30},'_'}]}],
                 [],
                 [{call,
                   {1225,30},
                   {remote,
                    {1225,30},
                    {atom,{1225,30},erlang},
                    {atom,{1225,30},setelement}},
                   [{integer,{1225,30},4},
                    {var,{1225,22},rec71},
                    {var,{1225,30},rec70}]}]},
                {clause,
                 [{generated,true},{location,{1225,30}}],
                 [{var,[{generated,true},{location,{1225,30}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1225,30}}],
                   {remote,
                    [{generated,true},{location,{1225,30}}],
                    {atom,[{generated,true},{location,{1225,30}}],erlang},
                    {atom,[{generated,true},{location,{1225,30}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1225,30}}],
                     [{atom,[{generated,true},{location,{1225,30}}],badrecord},
                      {var,{1225,22},rec71}]}]}]}]}]}]},
          {var,{1225,44},'Ts'},
          {var,{1225,48},'Ds'}]}]},
      {clause,
       {1226,9},
       [{atom,{1226,9},false}],
       [],
       [{debug_line,1227,520},
        {call,
         {1227,13},
         {atom,{1227,13},eval_bif},
         [{var,{1227,22},'I'},
          {var,{1227,25},'Ts'},
          {var,{1227,29},'Ds'}]}]}]}]},
  {clause,
   {1229,1},
   [{tuple,
     {1229,10},
     [{atom,{1229,10},b_set},
      {var,{1229,10},'_'},
      {var,{1229,10},'_'},
      {tuple,{1229,20},[{atom,{1229,21},bif},{atom,{1229,25},'=:='}]},
      {cons,
       {1229,37},
       {var,{1229,38},'Same'},
       {cons,{1229,43},{var,{1229,43},'Same'},{nil,{1229,47}}}}]},
    {var,{1229,51},'_Ts'},
    {var,{1229,56},'_Ds'}],
   [],
   [{debug_line,1230,521},
    {tuple,{1230,5},[{atom,{1230,5},b_literal},{atom,{1230,20},true}]}]},
  {clause,
   {1231,1},
   [{match,
     {1231,10},
     {tuple,
      {1231,10},
      [{atom,{1231,10},b_set},
       {var,{1231,10},'_'},
       {var,{1231,10},'_'},
       {tuple,{1231,20},[{atom,{1231,21},bif},{atom,{1231,25},'=:='}]},
       {cons,
        {1231,37},
        {var,{1231,38},'LHS'},
        {cons,{1231,42},{var,{1231,42},'RHS'},{nil,{1231,45}}}}]},
     {var,{1231,48},'I'}},
    {var,{1231,51},'Ts'},
    {var,{1231,55},'Ds'}],
   [],
   [{debug_line,1232,522},
    {match,
     {1232,5},
     {var,{1232,5},'LType'},
     {call,
      {1232,13},
      {atom,{1232,13},concrete_type},
      [{var,{1232,27},'LHS'},{var,{1232,32},'Ts'}]}},
    {debug_line,1233,523},
    {match,
     {1233,5},
     {var,{1233,5},'RType'},
     {call,
      {1233,13},
      {atom,{1233,13},concrete_type},
      [{var,{1233,27},'RHS'},{var,{1233,32},'Ts'}]}},
    {debug_line,1234,524},
    {'case',
     {1234,5},
     {call,
      {1234,10},
      {remote,{1234,20},{atom,{1234,10},beam_types},{atom,{1234,21},meet}},
      [{var,{1234,26},'LType'},{var,{1234,33},'RType'}]},
     [{clause,
       {1235,9},
       [{atom,{1235,9},none}],
       [],
       [{debug_line,1236,525},
        {tuple,
         {1236,13},
         [{atom,{1236,13},b_literal},{atom,{1236,28},false}]}]},
      {clause,
       {1237,9},
       [{var,{1237,9},'_'}],
       [],
       [{debug_line,1238,526},
        {'case',
         {1238,13},
         {tuple,
          {1238,18},
          [{call,
            {1238,19},
            {remote,
             {1238,29},
             {atom,{1238,19},beam_types},
             {atom,{1238,30},is_boolean_type}},
            [{var,{1238,46},'LType'}]},
           {call,
            {1239,19},
            {remote,
             {1239,29},
             {atom,{1239,19},beam_types},
             {atom,{1239,30},normalize}},
            [{var,{1239,40},'RType'}]}]},
         [{clause,
           {1240,17},
           [{tuple,
             {1240,17},
             [{atom,{1240,18},true},
              {tuple,
               {1240,23},
               [{atom,{1240,23},t_atom},
                {cons,{1240,40},{atom,{1240,41},true},{nil,{1240,45}}}]}]}],
           [],
           [{debug_line,1242,527},{var,{1242,21},'LHS'}]},
          {clause,
           {1243,17},
           [{tuple,
             {1243,17},
             [{atom,{1243,18},true},
              {tuple,
               {1243,23},
               [{atom,{1243,23},t_atom},
                {cons,{1243,40},{atom,{1243,41},false},{nil,{1243,46}}}]}]}],
           [],
           [{debug_line,1253,528},
            {call,
             {1253,21},
             {atom,{1253,21},simplify},
             [{block,0,
               [{block,
                 {1253,30},
                 [{match,
                   {1253,53},
                   {var,{1253,53},rec72},
                   {cons,{1253,58},{var,{1253,59},'LHS'},{nil,{1253,62}}}},
                  {match,{1253,30},{var,{1253,30},rec73},{var,{1253,30},'I'}},
                  {'case',
                   {1253,38},
                   {var,{1253,30},rec73},
                   [{clause,
                     {1253,38},
                     [{tuple,
                       {1253,38},
                       [{atom,{1253,38},b_set},
                        {var,{1253,38},'_'},
                        {var,{1253,38},'_'},
                        {var,{1253,38},'_'},
                        {var,{1253,38},'_'}]}],
                     [],
                     [{call,
                       {1253,38},
                       {remote,
                        {1253,38},
                        {atom,{1253,38},erlang},
                        {atom,{1253,38},setelement}},
                       [{integer,{1253,38},4},
                        {call,
                         {1253,53},
                         {remote,
                          {1253,53},
                          {atom,{1253,53},erlang},
                          {atom,{1253,53},setelement}},
                         [{integer,{1253,53},5},
                          {var,{1253,30},rec73},
                          {var,{1253,53},rec72}]},
                        {tuple,
                         {1253,41},
                         [{atom,{1253,42},bif},{atom,{1253,46},'not'}]}]}]},
                    {clause,
                     [{generated,true},{location,{1253,38}}],
                     [{var,[{generated,true},{location,{1253,38}}],'_'}],
                     [],
                     [{call,
                       [{generated,true},{location,{1253,38}}],
                       {remote,
                        [{generated,true},{location,{1253,38}}],
                        {atom,[{generated,true},{location,{1253,38}}],erlang},
                        {atom,[{generated,true},{location,{1253,38}}],error}},
                       [{tuple,
                         [{generated,true},{location,{1253,38}}],
                         [{atom,
                           [{generated,true},{location,{1253,38}}],
                           badrecord},
                          {var,{1253,30},rec73}]}]}]}]}]}]},
              {var,{1253,66},'Ts'},
              {var,{1253,70},'Ds'}]}]},
          {clause,
           {1254,17},
           [{tuple,{1254,17},[{var,{1254,18},'_'},{var,{1254,20},'_'}]}],
           [],
           [{debug_line,1255,529},
            {call,
             {1255,21},
             {atom,{1255,21},eval_bif},
             [{var,{1255,30},'I'},
              {var,{1255,33},'Ts'},
              {var,{1255,37},'Ds'}]}]}]}]}]}]},
  {clause,
   {1258,1},
   [{match,
     {1258,10},
     {tuple,
      {1258,10},
      [{atom,{1258,10},b_set},
       {var,{1258,10},'_'},
       {var,{1258,10},'_'},
       {tuple,{1258,20},[{atom,{1258,21},bif},{atom,{1258,25},is_list}]},
       {cons,{1258,39},{var,{1258,40},'Src'},{nil,{1258,43}}}]},
     {var,{1258,46},'I0'}},
    {var,{1258,50},'Ts'},
    {var,{1258,54},'Ds'}],
   [],
   [{debug_line,1259,530},
    {'case',
     {1259,5},
     {call,
      {1259,10},
      {atom,{1259,10},concrete_type},
      [{var,{1259,24},'Src'},{var,{1259,29},'Ts'}]},
     [{clause,
       {1260,9},
       [{tuple,
         {1260,9},
         [{atom,{1260,9},t_union},
          {var,{1260,9},'_'},
          {tuple,
           {1260,23},
           [{atom,{1260,23},t_cons},{var,{1260,23},'_'},{var,{1260,23},'_'}]},
          {var,{1260,9},'_'},
          {var,{1260,9},'_'},
          {var,{1260,9},'_'}]}],
       [],
       [{debug_line,1261,531},
        {match,
         {1261,13},
         {var,{1261,13},'I'},
         {block,
          {1261,17},
          [{match,
            {1261,46},
            {var,{1261,46},rec74},
            {cons,{1261,51},{var,{1261,52},'Src'},{nil,{1261,55}}}},
           {match,{1261,17},{var,{1261,17},rec75},{var,{1261,17},'I0'}},
           {'case',
            {1261,26},
            {var,{1261,17},rec75},
            [{clause,
              {1261,26},
              [{tuple,
                {1261,26},
                [{atom,{1261,26},b_set},
                 {var,{1261,26},'_'},
                 {var,{1261,26},'_'},
                 {var,{1261,26},'_'},
                 {var,{1261,26},'_'}]}],
              [],
              [{call,
                {1261,26},
                {remote,
                 {1261,26},
                 {atom,{1261,26},erlang},
                 {atom,{1261,26},setelement}},
                [{integer,{1261,26},4},
                 {call,
                  {1261,46},
                  {remote,
                   {1261,46},
                   {atom,{1261,46},erlang},
                   {atom,{1261,46},setelement}},
                  [{integer,{1261,46},5},
                   {var,{1261,17},rec75},
                   {var,{1261,46},rec74}]},
                 {atom,{1261,29},is_nonempty_list}]}]},
             {clause,
              [{generated,true},{location,{1261,26}}],
              [{var,[{generated,true},{location,{1261,26}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1261,26}}],
                {remote,
                 [{generated,true},{location,{1261,26}}],
                 {atom,[{generated,true},{location,{1261,26}}],erlang},
                 {atom,[{generated,true},{location,{1261,26}}],error}},
                [{tuple,
                  [{generated,true},{location,{1261,26}}],
                  [{atom,[{generated,true},{location,{1261,26}}],badrecord},
                   {var,{1261,17},rec75}]}]}]}]}]}},
        {debug_line,1265,532},
        {call,
         {1265,13},
         {remote,
          {1265,21},
          {atom,{1265,13},beam_ssa},
          {atom,{1265,22},add_anno}},
         [{atom,{1265,31},was_bif_is_list},
          {atom,{1265,48},true},
          {var,{1265,54},'I'}]}]},
      {clause,
       {1266,9},
       [{tuple,
         {1266,9},
         [{atom,{1266,9},t_union},
          {var,{1266,9},'_'},
          {atom,{1266,23},nil},
          {var,{1266,9},'_'},
          {var,{1266,9},'_'},
          {var,{1266,9},'_'}]}],
       [],
       [{debug_line,1267,533},
        {block,
         {1267,13},
         [{match,
           {1267,37},
           {var,{1267,37},rec76},
           {cons,
            {1267,42},
            {var,{1267,43},'Src'},
            {cons,
             {1267,47},
             {tuple,{1267,47},[{atom,{1267,47},b_literal},{nil,{1267,62}}]},
             {nil,{1267,65}}}}},
          {match,{1267,13},{var,{1267,13},rec77},{var,{1267,13},'I0'}},
          {'case',
           {1267,22},
           {var,{1267,13},rec77},
           [{clause,
             {1267,22},
             [{tuple,
               {1267,22},
               [{atom,{1267,22},b_set},
                {var,{1267,22},'_'},
                {var,{1267,22},'_'},
                {var,{1267,22},'_'},
                {var,{1267,22},'_'}]}],
             [],
             [{call,
               {1267,22},
               {remote,
                {1267,22},
                {atom,{1267,22},erlang},
                {atom,{1267,22},setelement}},
               [{integer,{1267,22},4},
                {call,
                 {1267,37},
                 {remote,
                  {1267,37},
                  {atom,{1267,37},erlang},
                  {atom,{1267,37},setelement}},
                 [{integer,{1267,37},5},
                  {var,{1267,13},rec77},
                  {var,{1267,37},rec76}]},
                {tuple,
                 {1267,25},
                 [{atom,{1267,26},bif},{atom,{1267,30},'=:='}]}]}]},
            {clause,
             [{generated,true},{location,{1267,22}}],
             [{var,[{generated,true},{location,{1267,22}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1267,22}}],
               {remote,
                [{generated,true},{location,{1267,22}}],
                {atom,[{generated,true},{location,{1267,22}}],erlang},
                {atom,[{generated,true},{location,{1267,22}}],error}},
               [{tuple,
                 [{generated,true},{location,{1267,22}}],
                 [{atom,[{generated,true},{location,{1267,22}}],badrecord},
                  {var,{1267,13},rec77}]}]}]}]}]}]},
      {clause,
       {1268,9},
       [{var,{1268,9},'_'}],
       [],
       [{debug_line,1269,534},
        {call,
         {1269,13},
         {atom,{1269,13},eval_bif},
         [{var,{1269,22},'I0'},
          {var,{1269,26},'Ts'},
          {var,{1269,30},'Ds'}]}]}]}]},
  {clause,
   {1271,1},
   [{match,
     {1271,10},
     {tuple,
      {1271,10},
      [{atom,{1271,10},b_set},
       {var,{1271,10},'_'},
       {var,{1271,10},'_'},
       {tuple,{1271,20},[{atom,{1271,21},bif},{var,{1271,25},'Op'}]},
       {cons,{1271,34},{var,{1271,35},'Term'},{nil,{1271,39}}}]},
     {var,{1271,42},'I'}},
    {var,{1271,45},'Ts'},
    {var,{1271,49},'_Ds'}],
   [[{op,{1272,11},'=:=',{var,{1272,8},'Op'},{atom,{1272,15},trunc}}],
    [{op,{1272,25},'=:=',{var,{1272,22},'Op'},{atom,{1272,29},round}}],
    [{op,{1272,39},'=:=',{var,{1272,36},'Op'},{atom,{1272,43},ceil}}],
    [{op,{1272,52},'=:=',{var,{1272,49},'Op'},{atom,{1272,56},floor}}]],
   [{debug_line,1273,535},
    {'case',
     {1273,5},
     {call,
      {1273,10},
      {atom,{1273,10},normalized_type},
      [{var,{1273,26},'Term'},{var,{1273,32},'Ts'}]},
     [{clause,
       {1274,9},
       [{tuple,{1274,9},[{atom,{1274,9},t_integer},{var,{1274,9},'_'}]}],
       [],
       [{debug_line,1274,536},{var,{1274,25},'Term'}]},
      {clause,
       {1275,9},
       [{var,{1275,9},'_'}],
       [],
       [{debug_line,1275,537},{var,{1275,14},'I'}]}]}]},
  {clause,
   {1277,1},
   [{match,
     {1277,10},
     {tuple,
      {1277,10},
      [{atom,{1277,10},b_set},
       {var,{1277,10},'_'},
       {var,{1277,10},'_'},
       {tuple,{1277,20},[{atom,{1277,21},bif},{var,{1277,25},'Op'}]},
       {var,{1277,34},'Args'}]},
     {var,{1277,40},'I'}},
    {var,{1277,43},'Ts'},
    {var,{1277,47},'Ds'}],
   [],
   [{debug_line,1278,538},
    {match,
     {1278,5},
     {var,{1278,5},'Types'},
     {call,
      {1278,13},
      {atom,{1278,13},normalized_types},
      [{var,{1278,30},'Args'},{var,{1278,36},'Ts'}]}},
    {debug_line,1279,539},
    {'case',
     {1279,5},
     {call,
      {1279,10},
      {atom,{1279,10},is_float_op},
      [{var,{1279,22},'Op'},{var,{1279,26},'Types'}]},
     [{clause,
       {1280,9},
       [{atom,{1280,9},false}],
       [],
       [{debug_line,1281,540},
        {call,
         {1281,13},
         {atom,{1281,13},eval_bif},
         [{var,{1281,22},'I'},{var,{1281,25},'Ts'},{var,{1281,29},'Ds'}]}]},
      {clause,
       {1282,9},
       [{atom,{1282,9},true}],
       [],
       [{debug_line,1283,541},
        {match,
         {1283,13},
         {var,{1283,13},'AnnoArgs'},
         {lc,
          {1283,24},
          {block,0,
           [{call,
             {1283,25},
             {atom,{1283,25},anno_float_arg},
             [{var,{1283,40},'A'}]}]},
          [{block,0,[{atom,{1283,51},true}]},
           {generate,{1283,48},{var,{1283,46},'A'},{var,{1283,51},'Types'}}]}},
        {debug_line,1284,542},
        {call,
         {1284,13},
         {atom,{1284,13},eval_bif},
         [{block,0,
           [{call,
             {1284,22},
             {remote,
              {1284,30},
              {atom,{1284,22},beam_ssa},
              {atom,{1284,31},add_anno}},
             [{atom,{1284,40},float_op},
              {var,{1284,50},'AnnoArgs'},
              {var,{1284,60},'I'}]}]},
          {var,{1284,64},'Ts'},
          {var,{1284,68},'Ds'}]}]}]}]},
  {clause,
   {1286,1},
   [{var,{1286,10},'I'},{var,{1286,13},'Ts'},{var,{1286,17},'_Ds'}],
   [],
   [{debug_line,1287,543},
    {call,
     {1287,5},
     {atom,{1287,5},simplify},
     [{var,{1287,14},'I'},{var,{1287,17},'Ts'}]}]}]}.
{function,
 {1289,1},
 simplify,2,
 [{clause,
   {1289,1},
   [{var,{1289,1},'_'},{var,{1289,1},'_'}],
   [[{call,
      {1289,1},
      {remote,{1289,1},{atom,{1289,1},fake},{atom,{1289,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1289,544},{atom,{1289,1},ignore}]},
  {clause,
   {1289,1},
   [{match,
     {1289,10},
     {tuple,
      {1289,10},
      [{atom,{1289,10},b_set},
       {var,{1289,10},'_'},
       {var,{1289,10},'_'},
       {atom,{1289,20},bs_extract},
       {cons,{1289,36},{var,{1289,37},'Ctx'},{nil,{1289,40}}}]},
     {var,{1289,43},'I'}},
    {var,{1289,46},'Ts'}],
   [],
   [{debug_line,1290,545},
    {'case',
     {1290,5},
     {call,
      {1290,10},
      {atom,{1290,10},concrete_type},
      [{var,{1290,24},'Ctx'},{var,{1290,29},'Ts'}]},
     [{clause,
       {1291,9},
       [{tuple,
         {1291,9},
         [{atom,{1291,9},t_bitstring},{var,{1291,9},'_'},{var,{1291,9},'_'}]}],
       [],
       [{debug_line,1294,546},{var,{1294,13},'Ctx'}]},
      {clause,
       {1295,9},
       [{tuple,{1295,9},[{atom,{1295,9},t_bs_context},{var,{1295,9},'_'}]}],
       [],
       [{debug_line,1296,547},{var,{1296,13},'I'}]}]}]},
  {clause,
   {1298,1},
   [{match,
     {1298,10},
     {tuple,
      {1298,10},
      [{atom,{1298,10},b_set},
       {var,{1298,10},'_'},
       {var,{1298,10},'_'},
       {atom,{1298,20},bs_match},
       {cons,
        {1299,22},
        {tuple,{1299,23},[{atom,{1299,23},b_literal},{atom,{1299,38},binary}]},
        {cons,
         {1299,47},
         {var,{1299,47},'Ctx'},
         {cons,
          {1299,52},
          {var,{1299,52},'_Flags'},
          {cons,
           {1300,23},
           {tuple,{1300,23},[{atom,{1300,23},b_literal},{atom,{1300,38},all}]},
           {cons,
            {1301,23},
            {tuple,
             {1301,23},
             [{atom,{1301,23},b_literal},{var,{1301,38},'OpUnit'}]},
            {nil,{1301,45}}}}}}}]},
     {var,{1301,48},'I'}},
    {var,{1301,51},'Ts'}],
   [],
   [{debug_line,1304,548},
    {match,
     {1304,5},
     {tuple,{1304,5},[{atom,{1304,5},t_bs_context},{var,{1304,29},'CtxUnit'}]},
     {call,
      {1304,40},
      {atom,{1304,40},concrete_type},
      [{var,{1304,54},'Ctx'},{var,{1304,59},'Ts'}]}},
    {debug_line,1305,549},
    {'if',
     {1305,5},
     [{clause,
       {1306,9},
       [],
       [[{op,
          {1306,28},
          '=:=',
          {op,
           {1306,17},
           'rem',
           {var,{1306,9},'CtxUnit'},
           {var,{1306,21},'OpUnit'}},
          {integer,{1306,32},0}}]],
       [{debug_line,1307,550},
        {block,
         {1307,13},
         [{match,
           {1307,36},
           {var,{1307,36},rec78},
           {cons,{1307,41},{var,{1307,42},'Ctx'},{nil,{1307,45}}}},
          {match,{1307,13},{var,{1307,13},rec79},{var,{1307,13},'I'}},
          {'case',
           {1307,21},
           {var,{1307,13},rec79},
           [{clause,
             {1307,21},
             [{tuple,
               {1307,21},
               [{atom,{1307,21},b_set},
                {var,{1307,21},'_'},
                {var,{1307,21},'_'},
                {var,{1307,21},'_'},
                {var,{1307,21},'_'}]}],
             [],
             [{call,
               {1307,21},
               {remote,
                {1307,21},
                {atom,{1307,21},erlang},
                {atom,{1307,21},setelement}},
               [{integer,{1307,21},4},
                {call,
                 {1307,36},
                 {remote,
                  {1307,36},
                  {atom,{1307,36},erlang},
                  {atom,{1307,36},setelement}},
                 [{integer,{1307,36},5},
                  {var,{1307,13},rec79},
                  {var,{1307,36},rec78}]},
                {atom,{1307,24},bs_get_tail}]}]},
            {clause,
             [{generated,true},{location,{1307,21}}],
             [{var,[{generated,true},{location,{1307,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1307,21}}],
               {remote,
                [{generated,true},{location,{1307,21}}],
                {atom,[{generated,true},{location,{1307,21}}],erlang},
                {atom,[{generated,true},{location,{1307,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1307,21}}],
                 [{atom,[{generated,true},{location,{1307,21}}],badrecord},
                  {var,{1307,13},rec79}]}]}]}]}]}]},
      {clause,
       {1308,9},
       [],
       [[{op,
          {1308,28},
          '=/=',
          {op,
           {1308,17},
           'rem',
           {var,{1308,9},'CtxUnit'},
           {var,{1308,21},'OpUnit'}},
          {integer,{1308,32},0}}]],
       [{debug_line,1309,551},{var,{1309,13},'I'}]}]}]},
  {clause,
   {1311,1},
   [{match,
     {1311,10},
     {tuple,
      {1311,10},
      [{atom,{1311,10},b_set},
       {var,{1311,10},'_'},
       {var,{1311,10},'_'},
       {atom,{1311,20},bs_start_match},
       {cons,
        {1311,40},
        {tuple,{1311,41},[{atom,{1311,41},b_literal},{atom,{1311,56},new}]},
        {cons,{1311,62},{var,{1311,62},'Src'},{nil,{1311,65}}}}]},
     {var,{1311,68},'I'}},
    {var,{1311,71},'Ts'}],
   [],
   [{debug_line,1312,552},
    {'case',
     {1312,5},
     {call,
      {1312,10},
      {atom,{1312,10},concrete_type},
      [{var,{1312,24},'Src'},{var,{1312,29},'Ts'}]},
     [{clause,
       {1313,9},
       [{tuple,{1313,9},[{atom,{1313,9},t_bs_context},{var,{1313,9},'_'}]}],
       [],
       [{debug_line,1314,553},
        {block,
         {1314,13},
         [{match,
           {1314,39},
           {var,{1314,39},rec80},
           {cons,
            {1314,44},
            {tuple,
             {1314,45},
             [{atom,{1314,45},b_literal},{atom,{1314,60},resume}]},
            {cons,{1314,69},{var,{1314,69},'Src'},{nil,{1314,72}}}}},
          {match,{1314,13},{var,{1314,13},rec81},{var,{1314,13},'I'}},
          {'case',
           {1314,21},
           {var,{1314,13},rec81},
           [{clause,
             {1314,21},
             [{tuple,
               {1314,21},
               [{atom,{1314,21},b_set},
                {var,{1314,21},'_'},
                {var,{1314,21},'_'},
                {var,{1314,21},'_'},
                {var,{1314,21},'_'}]}],
             [],
             [{call,
               {1314,21},
               {remote,
                {1314,21},
                {atom,{1314,21},erlang},
                {atom,{1314,21},setelement}},
               [{integer,{1314,21},4},
                {call,
                 {1314,39},
                 {remote,
                  {1314,39},
                  {atom,{1314,39},erlang},
                  {atom,{1314,39},setelement}},
                 [{integer,{1314,39},5},
                  {var,{1314,13},rec81},
                  {var,{1314,39},rec80}]},
                {atom,{1314,24},bs_start_match}]}]},
            {clause,
             [{generated,true},{location,{1314,21}}],
             [{var,[{generated,true},{location,{1314,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1314,21}}],
               {remote,
                [{generated,true},{location,{1314,21}}],
                {atom,[{generated,true},{location,{1314,21}}],erlang},
                {atom,[{generated,true},{location,{1314,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1314,21}}],
                 [{atom,[{generated,true},{location,{1314,21}}],badrecord},
                  {var,{1314,13},rec81}]}]}]}]}]}]},
      {clause,
       {1315,9},
       [{var,{1315,9},'_'}],
       [],
       [{debug_line,1316,554},{var,{1316,13},'I'}]}]}]},
  {clause,
   {1318,1},
   [{match,
     {1318,10},
     {tuple,
      {1318,10},
      [{atom,{1318,10},b_set},
       {var,{1318,10},'_'},
       {var,{1318,10},'_'},
       {atom,{1318,20},get_tuple_element},
       {cons,
        {1318,43},
        {var,{1318,44},'Tuple'},
        {cons,
         {1318,50},
         {tuple,{1318,50},[{atom,{1318,50},b_literal},{var,{1318,65},'N'}]},
         {nil,{1318,67}}}}]},
     {var,{1318,70},'I'}},
    {var,{1318,73},'Ts'}],
   [],
   [{debug_line,1319,555},
    {match,
     {1319,5},
     {tuple,
      {1319,5},
      [{atom,{1319,5},t_tuple},
       {var,{1319,19},'Size'},
       {var,{1319,5},'_'},
       {var,{1319,33},'Es'}]},
     {call,
      {1319,39},
      {atom,{1319,39},normalized_type},
      [{var,{1319,55},'Tuple'},{var,{1319,62},'Ts'}]}},
    {debug_line,1320,556},
    {match,
     {1320,5},
     {atom,{1320,5},true},
     {op,{1320,17},'>',{var,{1320,12},'Size'},{var,{1320,19},'N'}}},
    {debug_line,1321,557},
    {match,
     {1321,5},
     {var,{1321,5},'ElemType'},
     {call,
      {1321,16},
      {remote,
       {1321,26},
       {atom,{1321,16},beam_types},
       {atom,{1321,27},get_tuple_element}},
      [{block,0,
        [{op,{1321,47},'+',{var,{1321,45},'N'},{integer,{1321,49},1}}]},
       {var,{1321,52},'Es'}]}},
    {debug_line,1322,558},
    {'case',
     {1322,5},
     {call,
      {1322,10},
      {remote,
       {1322,20},
       {atom,{1322,10},beam_types},
       {atom,{1322,21},get_singleton_value}},
      [{var,{1322,41},'ElemType'}]},
     [{clause,
       {1323,9},
       [{tuple,{1323,9},[{atom,{1323,10},ok},{var,{1323,14},'Val'}]}],
       [],
       [{debug_line,1323,559},
        {tuple,{1323,22},[{atom,{1323,22},b_literal},{var,{1323,37},'Val'}]}]},
      {clause,
       {1324,9},
       [{atom,{1324,9},error}],
       [],
       [{debug_line,1324,560},{var,{1324,18},'I'}]}]}]},
  {clause,
   {1326,1},
   [{match,
     {1326,10},
     {tuple,
      {1326,10},
      [{atom,{1326,10},b_set},
       {var,{1326,10},'_'},
       {var,{1326,10},'_'},
       {atom,{1326,20},is_nonempty_list},
       {cons,{1326,42},{var,{1326,43},'Src'},{nil,{1326,46}}}]},
     {var,{1326,49},'I'}},
    {var,{1326,52},'Ts'}],
   [],
   [{debug_line,1327,561},
    {'case',
     {1327,5},
     {call,
      {1327,10},
      {atom,{1327,10},normalized_type},
      [{var,{1327,26},'Src'},{var,{1327,31},'Ts'}]},
     [{clause,
       {1328,9},
       [{atom,{1328,9},any}],
       [],
       [{debug_line,1329,562},{var,{1329,13},'I'}]},
      {clause,
       {1330,9},
       [{tuple,
         {1330,9},
         [{atom,{1330,9},t_list},{var,{1330,9},'_'},{var,{1330,9},'_'}]}],
       [],
       [{debug_line,1331,563},{var,{1331,13},'I'}]},
      {clause,
       {1332,9},
       [{tuple,
         {1332,9},
         [{atom,{1332,9},t_cons},{var,{1332,9},'_'},{var,{1332,9},'_'}]}],
       [],
       [{debug_line,1333,564},
        {tuple,{1333,13},[{atom,{1333,13},b_literal},{atom,{1333,28},true}]}]},
      {clause,
       {1334,9},
       [{var,{1334,9},'_'}],
       [],
       [{debug_line,1335,565},
        {tuple,
         {1335,13},
         [{atom,{1335,13},b_literal},{atom,{1335,28},false}]}]}]}]},
  {clause,
   {1337,1},
   [{match,
     {1337,10},
     {tuple,
      {1337,10},
      [{atom,{1337,10},b_set},
       {var,{1337,10},'_'},
       {var,{1337,10},'_'},
       {atom,{1337,20},is_tagged_tuple},
       {cons,
        {1338,22},
        {var,{1338,23},'Src'},
        {cons,
         {1338,27},
         {tuple,{1338,27},[{atom,{1338,27},b_literal},{var,{1338,42},'Size'}]},
         {cons,
          {1338,48},
          {match,
           {1338,48},
           {tuple,{1338,48},[{atom,{1338,48},b_literal},{var,{1338,48},'_'}]},
           {var,{1338,61},'Tag'}},
          {nil,{1338,64}}}}}]},
     {var,{1338,67},'I'}},
    {var,{1338,70},'Ts'}],
   [],
   [{debug_line,1339,566},
    {'case',
     {1339,5},
     {call,
      {1339,10},
      {atom,{1339,10},concrete_type},
      [{var,{1339,24},'Src'},{var,{1339,29},'Ts'}]},
     [{clause,
       {1340,9},
       [{match,
         {1340,9},
         {tuple,
          {1340,9},
          [{atom,{1340,9},t_union},
           {var,{1340,9},'_'},
           {var,{1340,9},'_'},
           {var,{1340,9},'_'},
           {var,{1340,28},'TupleSet'},
           {var,{1340,9},'_'}]},
         {var,{1340,38},'U'}}],
       [],
       [{debug_line,1344,567},
        {match,
         {1344,13},
         {var,{1344,13},'TupleOnlyType'},
         {tuple,
          {1344,29},
          [{atom,{1344,29},t_union},
           {atom,{1344,29},none},
           {atom,{1344,29},none},
           {atom,{1344,29},none},
           {var,{1344,48},'TupleSet'},
           {atom,{1344,29},none}]}},
        {debug_line,1345,568},
        {match,
         {1345,13},
         {var,{1345,13},'TT'},
         {call,
          {1345,18},
          {remote,
           {1345,28},
           {atom,{1345,18},beam_types},
           {atom,{1345,29},normalize}},
          [{var,{1345,39},'TupleOnlyType'}]}},
        {debug_line,1346,569},
        {'case',
         {1346,13},
         {call,
          {1346,18},
          {atom,{1346,18},simplify_is_record},
          [{var,{1346,37},'I'},
           {var,{1346,40},'TT'},
           {var,{1346,44},'Size'},
           {var,{1346,50},'Tag'},
           {var,{1346,55},'Ts'}]},
         [{clause,
           {1347,17},
           [{tuple,
             {1347,17},
             [{atom,{1347,17},b_literal},{atom,{1347,32},true}]}],
           [],
           [{debug_line,1352,570},
            {block,
             {1352,21},
             [{match,
               {1352,47},
               {var,{1352,47},rec82},
               {cons,{1352,52},{var,{1352,53},'Src'},{nil,{1352,56}}}},
              {match,{1352,21},{var,{1352,21},rec83},{var,{1352,21},'I'}},
              {'case',
               {1352,29},
               {var,{1352,21},rec83},
               [{clause,
                 {1352,29},
                 [{tuple,
                   {1352,29},
                   [{atom,{1352,29},b_set},
                    {var,{1352,29},'_'},
                    {var,{1352,29},'_'},
                    {var,{1352,29},'_'},
                    {var,{1352,29},'_'}]}],
                 [],
                 [{call,
                   {1352,29},
                   {remote,
                    {1352,29},
                    {atom,{1352,29},erlang},
                    {atom,{1352,29},setelement}},
                   [{integer,{1352,29},4},
                    {call,
                     {1352,47},
                     {remote,
                      {1352,47},
                      {atom,{1352,47},erlang},
                      {atom,{1352,47},setelement}},
                     [{integer,{1352,47},5},
                      {var,{1352,21},rec83},
                      {var,{1352,47},rec82}]},
                    {tuple,
                     {1352,32},
                     [{atom,{1352,33},bif},{atom,{1352,37},is_tuple}]}]}]},
                {clause,
                 [{generated,true},{location,{1352,29}}],
                 [{var,[{generated,true},{location,{1352,29}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1352,29}}],
                   {remote,
                    [{generated,true},{location,{1352,29}}],
                    {atom,[{generated,true},{location,{1352,29}}],erlang},
                    {atom,[{generated,true},{location,{1352,29}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1352,29}}],
                     [{atom,[{generated,true},{location,{1352,29}}],badrecord},
                      {var,{1352,21},rec83}]}]}]}]}]}]},
          {clause,
           {1353,17},
           [{match,
             {1353,17},
             {tuple,
              {1353,17},
              [{atom,{1353,17},b_literal},{atom,{1353,32},false}]},
             {var,{1353,39},'False'}}],
           [],
           [{debug_line,1355,571},{var,{1355,21},'False'}]},
          {clause,
           {1356,17},
           [{var,{1356,17},'_'}],
           [],
           [{debug_line,1360,572},
            {match,
             {1360,21},
             {var,{1360,21},'TupleArityType'},
             {tuple,
              {1360,38},
              [{atom,{1360,38},t_tuple},
               {var,{1360,52},'Size'},
               {atom,{1360,63},true},
               {map,{1360,38},[]}]}},
            {debug_line,1361,573},
            {match,
             {1361,21},
             {var,{1361,21},'TTT'},
             {call,
              {1361,27},
              {remote,
               {1361,37},
               {atom,{1361,27},beam_types},
               {atom,{1361,38},meet}},
              [{var,{1361,43},'TupleArityType'},
               {var,{1361,59},'TupleOnlyType'}]}},
            {debug_line,1362,574},
            {'case',
             {1362,21},
             {call,
              {1362,26},
              {atom,{1362,26},simplify_is_record},
              [{var,{1362,45},'I'},
               {var,{1362,48},'TTT'},
               {var,{1362,53},'Size'},
               {var,{1362,59},'Tag'},
               {var,{1362,64},'Ts'}]},
             [{clause,
               {1363,25},
               [{tuple,
                 {1363,25},
                 [{atom,{1363,25},b_literal},{atom,{1363,40},true}]}],
               [],
               [{debug_line,1366,575},
                {'case',
                 {1366,29},
                 {call,
                  {1366,34},
                  {remote,
                   {1366,44},
                   {atom,{1366,34},beam_types},
                   {atom,{1366,45},normalize}},
                  [{var,{1366,55},'U'}]},
                 [{clause,
                   {1367,33},
                   [{tuple,
                     {1367,33},
                     [{atom,{1367,33},t_tuple},
                      {var,{1367,33},'_'},
                      {var,{1367,33},'_'},
                      {var,{1367,33},'_'}]}],
                   [],
                   [{debug_line,1370,576},
                    {call,
                     {1370,37},
                     {remote,
                      {1370,45},
                      {atom,{1370,37},beam_ssa},
                      {atom,{1370,46},add_anno}},
                     [{atom,{1370,55},constraints},
                      {atom,{1370,68},arity},
                      {var,{1370,75},'I'}]}]},
                  {clause,
                   {1371,33},
                   [{atom,{1371,33},any}],
                   [],
                   [{debug_line,1375,577},
                    {call,
                     {1375,37},
                     {remote,
                      {1375,45},
                      {atom,{1375,37},beam_ssa},
                      {atom,{1375,46},add_anno}},
                     [{atom,{1375,55},constraints},
                      {atom,{1375,68},tuple_arity},
                      {var,{1375,81},'I'}]}]}]}]},
              {clause,
               {1377,25},
               [{var,{1377,25},'_'}],
               [],
               [{debug_line,1378,578},{var,{1378,29},'I'}]}]}]}]}]},
      {clause,
       {1381,9},
       [{var,{1381,9},'SimpleType'}],
       [],
       [{debug_line,1382,579},
        {call,
         {1382,13},
         {atom,{1382,13},simplify_is_record},
         [{var,{1382,32},'I'},
          {var,{1382,35},'SimpleType'},
          {var,{1382,47},'Size'},
          {var,{1382,53},'Tag'},
          {var,{1382,58},'Ts'}]}]}]}]},
  {clause,
   {1384,1},
   [{tuple,
     {1384,10},
     [{atom,{1384,10},b_set},
      {var,{1384,10},'_'},
      {var,{1384,10},'_'},
      {atom,{1384,20},put_list},
      {cons,
       {1384,34},
       {tuple,{1384,35},[{atom,{1384,35},b_literal},{var,{1384,50},'H'}]},
       {cons,
        {1385,35},
        {tuple,{1385,35},[{atom,{1385,35},b_literal},{var,{1385,50},'T'}]},
        {nil,{1385,52}}}}]},
    {var,{1385,56},'_Ts'}],
   [],
   [{debug_line,1386,580},
    {tuple,
     {1386,5},
     [{atom,{1386,5},b_literal},
      {cons,{1386,20},{var,{1386,21},'H'},{var,{1386,23},'T'}}]}]},
  {clause,
   {1387,1},
   [{match,
     {1387,10},
     {tuple,
      {1387,10},
      [{atom,{1387,10},b_set},
       {var,{1387,10},'_'},
       {var,{1387,10},'_'},
       {atom,{1387,20},put_tuple},
       {var,{1387,35},'Args'}]},
     {var,{1387,41},'I'}},
    {var,{1387,44},'_Ts'}],
   [],
   [{debug_line,1388,581},
    {'case',
     {1388,5},
     {call,
      {1388,10},
      {atom,{1388,10},make_literal_list},
      [{var,{1388,28},'Args'}]},
     [{clause,
       {1389,9},
       [{atom,{1389,9},none}],
       [],
       [{debug_line,1389,582},{var,{1389,17},'I'}]},
      {clause,
       {1390,9},
       [{var,{1390,9},'List'}],
       [],
       [{debug_line,1390,583},
        {tuple,
         {1390,17},
         [{atom,{1390,17},b_literal},
          {call,
           {1390,32},
           {remote,
            {1390,32},
            {atom,{1390,32},erlang},
            {atom,{1390,32},list_to_tuple}},
           [{var,{1390,46},'List'}]}]}]}]}]},
  {clause,
   {1392,1},
   [{match,
     {1392,10},
     {tuple,
      {1392,10},
      [{atom,{1392,10},b_set},
       {var,{1392,10},'_'},
       {var,{1392,10},'_'},
       {atom,{1392,20},call},
       {cons,
        {1392,30},
        {match,
         {1392,31},
         {tuple,
          {1392,31},
          [{atom,{1392,31},b_remote},
           {var,{1392,31},'_'},
           {var,{1392,31},'_'},
           {var,{1392,31},'_'}]},
         {var,{1392,43},'Rem'}},
        {var,{1392,47},'Args'}}]},
     {var,{1392,54},'I'}},
    {var,{1392,57},'Ts'}],
   [],
   [{debug_line,1393,584},
    {'case',
     {1393,5},
     {var,{1393,10},'Rem'},
     [{clause,
       {1394,9},
       [{tuple,
         {1394,9},
         [{atom,{1394,9},b_remote},
          {tuple,{1394,23},[{atom,{1394,23},b_literal},{var,{1394,38},'Mod'}]},
          {tuple,
           {1395,24},
           [{atom,{1395,24},b_literal},{var,{1395,39},'Name'}]},
          {var,{1394,9},'_'}]}],
       [],
       [{debug_line,1396,585},
        {call,
         {1396,13},
         {atom,{1396,13},simplify_remote_call},
         [{var,{1396,34},'Mod'},
          {var,{1396,39},'Name'},
          {var,{1396,45},'Args'},
          {var,{1396,51},'Ts'},
          {var,{1396,55},'I'}]}]},
      {clause,
       {1397,9},
       [{tuple,
         {1397,9},
         [{atom,{1397,9},b_remote},
          {var,{1397,9},'_'},
          {var,{1397,9},'_'},
          {var,{1397,9},'_'}]}],
       [],
       [{debug_line,1398,586},{var,{1398,13},'I'}]}]}]},
  {clause,
   {1400,1},
   [{match,
     {1400,10},
     {tuple,
      {1400,10},
      [{atom,{1400,10},b_set},
       {var,{1400,10},'_'},
       {var,{1400,10},'_'},
       {atom,{1400,20},call},
       {cons,
        {1400,30},
        {tuple,{1400,31},[{atom,{1400,31},b_literal},{var,{1400,46},'Fun'}]},
        {var,{1400,51},'Args'}}]},
     {var,{1400,58},'I'}},
    {var,{1400,61},'_Ts'}],
   [[{call,
      {1401,8},
      {remote,{1401,8},{atom,{1401,8},erlang},{atom,{1401,8},is_function}},
      [{var,{1401,20},'Fun'},
       {call,
        {1401,25},
        {remote,{1401,25},{atom,{1401,25},erlang},{atom,{1401,25},length}},
        [{var,{1401,32},'Args'}]}]}]],
   [{debug_line,1402,587},
    {match,
     {1402,5},
     {var,{1402,5},'FI'},
     {call,
      {1402,10},
      {remote,{1402,16},{atom,{1402,10},erlang},{atom,{1402,17},fun_info}},
      [{var,{1402,26},'Fun'}]}},
    {debug_line,1403,588},
    {match,
     {1403,5},
     {tuple,{1403,5},[{atom,{1403,6},module},{var,{1403,13},'M'}]},
     {call,
      {1403,18},
      {remote,{1403,18},{atom,{1403,18},lists},{atom,{1403,18},keyfind}},
      [{atom,{1403,26},module},{integer,{1403,34},1},{var,{1403,37},'FI'}]}},
    {debug_line,1404,589},
    {match,
     {1404,5},
     {tuple,{1404,5},[{atom,{1404,6},name},{var,{1404,11},'F'}]},
     {call,
      {1404,16},
      {remote,{1404,16},{atom,{1404,16},lists},{atom,{1404,16},keyfind}},
      [{atom,{1404,24},name},{integer,{1404,30},1},{var,{1404,33},'FI'}]}},
    {debug_line,1405,590},
    {match,
     {1405,5},
     {tuple,{1405,5},[{atom,{1405,6},arity},{var,{1405,12},'A'}]},
     {call,
      {1405,17},
      {remote,{1405,17},{atom,{1405,17},lists},{atom,{1405,17},keyfind}},
      [{atom,{1405,25},arity},{integer,{1405,32},1},{var,{1405,35},'FI'}]}},
    {debug_line,1406,591},
    {match,
     {1406,5},
     {var,{1406,5},'Rem'},
     {tuple,
      {1406,11},
      [{atom,{1406,11},b_remote},
       {tuple,{1406,25},[{atom,{1406,25},b_literal},{var,{1406,40},'M'}]},
       {tuple,{1407,26},[{atom,{1407,26},b_literal},{var,{1407,41},'F'}]},
       {var,{1408,27},'A'}]}},
    {debug_line,1409,592},
    {block,
     {1409,5},
     [{match,
       {1409,13},
       {var,{1409,13},rec84},
       {cons,{1409,18},{var,{1409,19},'Rem'},{var,{1409,23},'Args'}}},
      {match,{1409,5},{var,{1409,5},rec85},{var,{1409,5},'I'}},
      {'case',
       {1409,13},
       {var,{1409,5},rec85},
       [{clause,
         {1409,13},
         [{tuple,
           {1409,13},
           [{atom,{1409,13},b_set},
            {var,{1409,13},'_'},
            {var,{1409,13},'_'},
            {var,{1409,13},'_'},
            {var,{1409,13},'_'}]}],
         [],
         [{call,
           {1409,13},
           {remote,
            {1409,13},
            {atom,{1409,13},erlang},
            {atom,{1409,13},setelement}},
           [{integer,{1409,13},5},
            {var,{1409,5},rec85},
            {var,{1409,13},rec84}]}]},
        {clause,
         [{generated,true},{location,{1409,13}}],
         [{var,[{generated,true},{location,{1409,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1409,13}}],
           {remote,
            [{generated,true},{location,{1409,13}}],
            {atom,[{generated,true},{location,{1409,13}}],erlang},
            {atom,[{generated,true},{location,{1409,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1409,13}}],
             [{atom,[{generated,true},{location,{1409,13}}],badrecord},
              {var,{1409,5},rec85}]}]}]}]}]}]},
  {clause,
   {1410,1},
   [{match,
     {1410,10},
     {tuple,
      {1410,10},
      [{atom,{1410,10},b_set},
       {var,{1410,10},'_'},
       {var,{1410,10},'_'},
       {atom,{1410,20},peek_message},
       {cons,
        {1410,38},
        {tuple,{1410,39},[{atom,{1410,39},b_literal},{var,{1410,54},'Val'}]},
        {nil,{1410,58}}}]},
     {var,{1410,61},'I'}},
    {var,{1410,64},'_Ts'}],
   [],
   [{debug_line,1411,593},
    {'case',
     {1411,5},
     {var,{1411,10},'Val'},
     [{clause,
       {1412,9},
       [{atom,{1412,9},none}],
       [],
       [{debug_line,1413,594},{var,{1413,13},'I'}]},
      {clause,
       {1414,9},
       [{var,{1414,9},'_'}],
       [],
       [{debug_line,1418,595},
        {block,
         {1418,13},
         [{match,
           {1418,21},
           {var,{1418,21},rec86},
           {cons,
            {1418,26},
            {tuple,
             {1418,27},
             [{atom,{1418,27},b_literal},{atom,{1418,42},none}]},
            {nil,{1418,47}}}},
          {match,{1418,13},{var,{1418,13},rec87},{var,{1418,13},'I'}},
          {'case',
           {1418,21},
           {var,{1418,13},rec87},
           [{clause,
             {1418,21},
             [{tuple,
               {1418,21},
               [{atom,{1418,21},b_set},
                {var,{1418,21},'_'},
                {var,{1418,21},'_'},
                {var,{1418,21},'_'},
                {var,{1418,21},'_'}]}],
             [],
             [{call,
               {1418,21},
               {remote,
                {1418,21},
                {atom,{1418,21},erlang},
                {atom,{1418,21},setelement}},
               [{integer,{1418,21},5},
                {var,{1418,13},rec87},
                {var,{1418,21},rec86}]}]},
            {clause,
             [{generated,true},{location,{1418,21}}],
             [{var,[{generated,true},{location,{1418,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1418,21}}],
               {remote,
                [{generated,true},{location,{1418,21}}],
                {atom,[{generated,true},{location,{1418,21}}],erlang},
                {atom,[{generated,true},{location,{1418,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1418,21}}],
                 [{atom,[{generated,true},{location,{1418,21}}],badrecord},
                  {var,{1418,13},rec87}]}]}]}]}]}]}]}]},
  {clause,
   {1420,1},
   [{tuple,
     {1420,10},
     [{atom,{1420,10},b_set},
      {var,{1420,10},'_'},
      {var,{1420,10},'_'},
      {atom,{1420,20},recv_marker_clear},
      {cons,
       {1420,43},
       {tuple,{1420,44},[{atom,{1420,44},b_literal},{var,{1420,44},'_'}]},
       {nil,{1420,56}}}]},
    {var,{1420,60},'_Ts'}],
   [],
   [{debug_line,1422,596},
    {tuple,{1422,5},[{atom,{1422,5},b_literal},{atom,{1422,20},none}]}]},
  {clause,
   {1423,1},
   [{match,
     {1423,10},
     {tuple,
      {1423,10},
      [{atom,{1423,10},b_set},
       {var,{1423,10},'_'},
       {var,{1423,10},'_'},
       {atom,{1423,20},update_tuple},
       {cons,{1423,38},{var,{1423,39},'Src'},{var,{1423,45},'Updates'}}]},
     {var,{1423,55},'I'}},
    {var,{1423,58},'Ts'}],
   [],
   [{debug_line,1424,597},
    {'case',
     {1424,5},
     {tuple,
      {1424,10},
      [{call,
        {1424,11},
        {atom,{1424,11},normalized_type},
        [{var,{1424,27},'Src'},{var,{1424,32},'Ts'}]},
       {call,
        {1424,37},
        {atom,{1424,37},update_tuple_highest_index},
        [{var,{1424,64},'Updates'},
         {block,0,[{op,{1424,73},'-',{integer,{1424,74},1}}]}]}]},
     [{clause,
       {1425,9},
       [{tuple,
         {1425,9},
         [{tuple,
           {1425,10},
           [{atom,{1425,10},t_tuple},
            {var,{1425,35},'Size'},
            {atom,{1425,25},true},
            {var,{1425,10},'_'}]},
          {var,{1425,42},'Highest'}]}],
       [[{op,{1425,64},'=<',{var,{1425,56},'Highest'},{var,{1425,67},'Size'}},
         {op,{1426,61},'<',{var,{1426,56},'Size'},{integer,{1426,63},512}}]],
       [{debug_line,1427,598},
        {match,
         {1427,13},
         {var,{1427,13},'Args'},
         {cons,
          {1427,20},
          {tuple,
           {1427,21},
           [{atom,{1427,21},b_literal},{atom,{1427,36},reuse}]},
          {cons,
           {1428,21},
           {tuple,
            {1428,21},
            [{atom,{1428,21},b_literal},{var,{1428,36},'Size'}]},
           {cons,{1429,21},{var,{1429,21},'Src'},{var,{1429,27},'Updates'}}}}},
        {debug_line,1430,599},
        {call,
         {1430,13},
         {atom,{1430,13},simplify},
         [{block,0,
           [{block,
             {1430,22},
             [{match,{1430,22},{var,{1430,22},rec88},{var,{1430,22},'I'}},
              {'case',
               {1430,30},
               {var,{1430,22},rec88},
               [{clause,
                 {1430,30},
                 [{tuple,
                   {1430,30},
                   [{atom,{1430,30},b_set},
                    {var,{1430,30},'_'},
                    {var,{1430,30},'_'},
                    {var,{1430,30},'_'},
                    {var,{1430,30},'_'}]}],
                 [],
                 [{call,
                   {1430,30},
                   {remote,
                    {1430,30},
                    {atom,{1430,30},erlang},
                    {atom,{1430,30},setelement}},
                   [{integer,{1430,30},4},
                    {call,
                     {1430,47},
                     {remote,
                      {1430,47},
                      {atom,{1430,47},erlang},
                      {atom,{1430,47},setelement}},
                     [{integer,{1430,47},5},
                      {var,{1430,22},rec88},
                      {var,{1430,52},'Args'}]},
                    {atom,{1430,33},update_record}]}]},
                {clause,
                 [{generated,true},{location,{1430,30}}],
                 [{var,[{generated,true},{location,{1430,30}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1430,30}}],
                   {remote,
                    [{generated,true},{location,{1430,30}}],
                    {atom,[{generated,true},{location,{1430,30}}],erlang},
                    {atom,[{generated,true},{location,{1430,30}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1430,30}}],
                     [{atom,[{generated,true},{location,{1430,30}}],badrecord},
                      {var,{1430,22},rec88}]}]}]}]}]}]},
          {var,{1430,59},'Ts'}]}]},
      {clause,
       {1431,9},
       [{tuple,{1431,9},[{var,{1431,10},'_'},{var,{1431,13},'_'}]}],
       [],
       [{debug_line,1432,600},{var,{1432,13},'I'}]}]}]},
  {clause,
   {1434,1},
   [{match,
     {1434,10},
     {tuple,
      {1434,10},
      [{atom,{1434,10},b_set},
       {var,{1434,10},'_'},
       {var,{1434,10},'_'},
       {atom,{1434,20},update_record},
       {cons,
        {1434,39},
        {var,{1434,40},'_Hint'},
        {cons,
         {1434,47},
         {var,{1434,47},'_Size'},
         {cons,
          {1434,54},
          {tuple,
           {1434,54},
           [{atom,{1434,54},b_literal},{var,{1434,69},'Tuple0'}]},
          {var,{1434,79},'Updates'}}}}]},
     {var,{1434,89},'I'}},
    {var,{1434,92},'_Ts'}],
   [[{op,
      {1435,51},
      '<',
      {op,
       {1435,27},
       '-',
       {call,
        {1435,8},
        {remote,{1435,8},{atom,{1435,8},erlang},{atom,{1435,8},tuple_size}},
        [{var,{1435,19},'Tuple0'}]},
       {op,
        {1435,45},
        'div',
        {call,
         {1435,29},
         {remote,{1435,29},{atom,{1435,29},erlang},{atom,{1435,29},length}},
         [{var,{1435,36},'Updates'}]},
        {integer,{1435,49},2}}},
      {integer,{1435,53},20}}]],
   [{debug_line,1439,601},
    {match,
     {1439,5},
     {var,{1439,5},'Tuple1'},
     {call,
      {1439,14},
      {remote,
       {1439,14},
       {atom,{1439,14},erlang},
       {atom,{1439,14},list_to_tuple}},
      [{block,0,
        [{lc,
          {1439,28},
          {block,0,
           [{tuple,
             {1439,29},
             [{atom,{1439,29},b_literal},{var,{1439,44},'E'}]}]},
          [{block,0,[{atom,{1439,55},true}]},
           {generate,
            {1439,52},
            {var,{1439,50},'E'},
            {call,
             {1439,55},
             {remote,
              {1439,55},
              {atom,{1439,55},erlang},
              {atom,{1439,55},tuple_to_list}},
             [{var,{1439,69},'Tuple0'}]}}]}]}]}},
    {debug_line,1440,602},
    {match,
     {1440,5},
     {var,{1440,5},'Tuple'},
     {call,
      {1440,13},
      {atom,{1440,13},update_tuple_literal},
      [{var,{1440,34},'Updates'},{var,{1440,43},'Tuple1'}]}},
    {debug_line,1441,603},
    {block,
     {1441,5},
     [{match,
       {1441,26},
       {var,{1441,26},rec89},
       {call,
        {1441,31},
        {remote,
         {1441,31},
         {atom,{1441,31},erlang},
         {atom,{1441,31},tuple_to_list}},
        [{var,{1441,45},'Tuple'}]}},
      {match,{1441,5},{var,{1441,5},rec90},{var,{1441,5},'I'}},
      {'case',
       {1441,13},
       {var,{1441,5},rec90},
       [{clause,
         {1441,13},
         [{tuple,
           {1441,13},
           [{atom,{1441,13},b_set},
            {var,{1441,13},'_'},
            {var,{1441,13},'_'},
            {var,{1441,13},'_'},
            {var,{1441,13},'_'}]}],
         [],
         [{call,
           {1441,13},
           {remote,
            {1441,13},
            {atom,{1441,13},erlang},
            {atom,{1441,13},setelement}},
           [{integer,{1441,13},4},
            {call,
             {1441,26},
             {remote,
              {1441,26},
              {atom,{1441,26},erlang},
              {atom,{1441,26},setelement}},
             [{integer,{1441,26},5},
              {var,{1441,5},rec90},
              {var,{1441,26},rec89}]},
            {atom,{1441,16},put_tuple}]}]},
        {clause,
         [{generated,true},{location,{1441,13}}],
         [{var,[{generated,true},{location,{1441,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{1441,13}}],
           {remote,
            [{generated,true},{location,{1441,13}}],
            {atom,[{generated,true},{location,{1441,13}}],erlang},
            {atom,[{generated,true},{location,{1441,13}}],error}},
           [{tuple,
             [{generated,true},{location,{1441,13}}],
             [{atom,[{generated,true},{location,{1441,13}}],badrecord},
              {var,{1441,5},rec90}]}]}]}]}]}]},
  {clause,
   {1442,1},
   [{match,
     {1442,10},
     {tuple,
      {1442,10},
      [{atom,{1442,10},b_set},
       {var,{1442,10},'_'},
       {var,{1442,10},'_'},
       {atom,{1442,20},update_record},
       {cons,
        {1442,39},
        {var,{1442,40},'Hint0'},
        {cons,
         {1442,47},
         {var,{1442,47},'Size'},
         {cons,{1442,53},{var,{1442,53},'Src'},{var,{1442,59},'Updates0'}}}}]},
     {var,{1442,70},'I'}},
    {var,{1442,73},'Ts'}],
   [],
   [{debug_line,1443,604},
    {'case',
     {1443,5},
     {call,
      {1443,10},
      {atom,{1443,10},simplify_update_record},
      [{var,{1443,33},'Src'},
       {var,{1443,38},'Hint0'},
       {var,{1443,45},'Updates0'},
       {var,{1443,55},'Ts'}]},
     [{clause,
       {1444,9},
       [{tuple,
         {1444,9},
         [{atom,{1444,10},changed},{var,{1444,19},'_'},{nil,{1444,22}}]}],
       [],
       [{debug_line,1445,605},{var,{1445,13},'Src'}]},
      {clause,
       {1446,9},
       [{tuple,
         {1446,9},
         [{atom,{1446,10},changed},
          {var,{1446,19},'Hint'},
          {match,
           {1446,25},
           {cons,{1446,25},{var,{1446,26},'_'},{var,{1446,28},'_'}},
           {var,{1446,31},'Updates'}}]}],
       [],
       [{debug_line,1447,606},
        {block,
         {1447,13},
         [{match,
           {1447,38},
           {var,{1447,38},rec91},
           {cons,
            {1447,43},
            {var,{1447,44},'Hint'},
            {cons,
             {1447,50},
             {var,{1447,50},'Size'},
             {cons,
              {1447,56},
              {var,{1447,56},'Src'},
              {var,{1447,62},'Updates'}}}}},
          {match,{1447,13},{var,{1447,13},rec92},{var,{1447,13},'I'}},
          {'case',
           {1447,21},
           {var,{1447,13},rec92},
           [{clause,
             {1447,21},
             [{tuple,
               {1447,21},
               [{atom,{1447,21},b_set},
                {var,{1447,21},'_'},
                {var,{1447,21},'_'},
                {var,{1447,21},'_'},
                {var,{1447,21},'_'}]}],
             [],
             [{call,
               {1447,21},
               {remote,
                {1447,21},
                {atom,{1447,21},erlang},
                {atom,{1447,21},setelement}},
               [{integer,{1447,21},4},
                {call,
                 {1447,38},
                 {remote,
                  {1447,38},
                  {atom,{1447,38},erlang},
                  {atom,{1447,38},setelement}},
                 [{integer,{1447,38},5},
                  {var,{1447,13},rec92},
                  {var,{1447,38},rec91}]},
                {atom,{1447,24},update_record}]}]},
            {clause,
             [{generated,true},{location,{1447,21}}],
             [{var,[{generated,true},{location,{1447,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1447,21}}],
               {remote,
                [{generated,true},{location,{1447,21}}],
                {atom,[{generated,true},{location,{1447,21}}],erlang},
                {atom,[{generated,true},{location,{1447,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1447,21}}],
                 [{atom,[{generated,true},{location,{1447,21}}],badrecord},
                  {var,{1447,13},rec92}]}]}]}]}]}]},
      {clause,
       {1448,9},
       [{atom,{1448,9},unchanged}],
       [],
       [{debug_line,1449,607},{var,{1449,13},'I'}]}]}]},
  {clause,
   {1451,1},
   [{var,{1451,10},'I'},{var,{1451,13},'_Ts'}],
   [],
   [{debug_line,1452,608},{var,{1452,5},'I'}]}]}.
{function,
    {1454,1},
    update_tuple_literal,2,
    [{clause,
         {1454,1},
         [{var,{1454,1},'_'},{var,{1454,1},'_'}],
         [[{call,
               {1454,1},
               {remote,
                   {1454,1},
                   {atom,{1454,1},fake},
                   {atom,{1454,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1454,609},{atom,{1454,1},ignore}]},
     {clause,
         {1454,1},
         [{cons,
              {1454,22},
              {tuple,
                  {1454,23},
                  [{atom,{1454,23},b_literal},{var,{1454,38},'Position'}]},
              {cons,
                  {1454,49},
                  {var,{1454,49},'Val'},
                  {var,{1454,55},'Updates'}}},
          {var,{1454,65},'Tuple0'}],
         [],
         [{debug_line,1455,610},
          {match,
              {1455,5},
              {var,{1455,5},'Tuple'},
              {call,
                  {1455,13},
                  {remote,
                      {1455,13},
                      {atom,{1455,13},erlang},
                      {atom,{1455,13},setelement}},
                  [{var,{1455,24},'Position'},
                   {var,{1455,34},'Tuple0'},
                   {var,{1455,42},'Val'}]}},
          {debug_line,1456,611},
          {call,
              {1456,5},
              {atom,{1456,5},update_tuple_literal},
              [{var,{1456,26},'Updates'},{var,{1456,35},'Tuple'}]}]},
     {clause,
         {1457,1},
         [{nil,{1457,22}},{var,{1457,26},'Tuple'}],
         [],
         [{debug_line,1458,612},{var,{1458,5},'Tuple'}]}]}.
{function,
    {1460,1},
    will_succeed,4,
    [{clause,
         {1460,1},
         [{var,{1460,1},'_'},
          {var,{1460,1},'_'},
          {var,{1460,1},'_'},
          {var,{1460,1},'_'}],
         [[{call,
               {1460,1},
               {remote,
                   {1460,1},
                   {atom,{1460,1},fake},
                   {atom,{1460,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1460,613},{atom,{1460,1},ignore}]},
     {clause,
         {1460,1},
         [{tuple,
              {1460,14},
              [{atom,{1460,14},b_set},
               {var,{1460,14},'_'},
               {var,{1460,14},'_'},
               {var,{1460,14},'_'},
               {cons,{1460,26},{var,{1460,27},'Src'},{nil,{1460,30}}}]},
          {var,{1460,34},'Ts'},
          {var,{1460,38},'Ds'},
          {var,{1460,42},'Sub'}],
         [],
         [{debug_line,1461,614},
          {'case',
              {1461,5},
              {tuple,{1461,10},[{var,{1461,11},'Ds'},{var,{1461,15},'Ts'}]},
              [{clause,
                   {1462,9},
                   [{tuple,
                        {1462,9},
                        [{map,{1462,10},[]},
                         {map,
                             {1462,15},
                             [{map_field_exact,
                                  {1462,22},
                                  {var,{1462,18},'Src'},
                                  {atom,{1462,25},none}}]}]}],
                   [],
                   [{debug_line,1464,615},{atom,{1464,13},no}]},
               {clause,
                   {1465,9},
                   [{tuple,
                        {1465,9},
                        [{map,
                             {1465,10},
                             [{map_field_exact,
                                  {1465,17},
                                  {var,{1465,13},'Src'},
                                  {var,{1465,20},'I'}}]},
                         {map,{1465,25},[]}]}],
                   [],
                   [{debug_line,1468,616},
                    {match,
                        {1468,13},
                        {atom,{1468,13},false},
                        {call,
                            {1468,21},
                            {remote,
                                {1468,21},
                                {atom,{1468,21},erlang},
                                {atom,{1468,21},is_map_key}},
                            [{var,{1468,32},'Src'},{var,{1468,37},'Sub'}]}},
                    {debug_line,1469,617},
                    {call,
                        {1469,13},
                        {atom,{1469,13},will_succeed_1},
                        [{var,{1469,28},'I'},
                         {var,{1469,31},'Src'},
                         {var,{1469,36},'Ts'}]}]},
               {clause,
                   {1470,9},
                   [{tuple,{1470,9},[{map,{1470,10},[]},{map,{1470,15},[]}]}],
                   [],
                   [{debug_line,1473,618},
                    {match,
                        {1473,13},
                        {atom,{1473,13},true},
                        {call,
                            {1473,20},
                            {remote,
                                {1473,20},
                                {atom,{1473,20},erlang},
                                {atom,{1473,20},is_map_key}},
                            [{var,{1473,31},'Src'},{var,{1473,36},'Sub'}]}},
                    {debug_line,1474,619},
                    {atom,{1474,13},yes}]}]}]}]}.
{function,
    {1477,1},
    will_succeed_1,3,
    [{clause,
         {1477,1},
         [{var,{1477,1},'_'},{var,{1477,1},'_'},{var,{1477,1},'_'}],
         [[{call,
               {1477,1},
               {remote,
                   {1477,1},
                   {atom,{1477,1},fake},
                   {atom,{1477,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1477,620},{atom,{1477,1},ignore}]},
     {clause,
         {1477,1},
         [{tuple,
              {1477,16},
              [{atom,{1477,16},b_set},
               {var,{1477,16},'_'},
               {var,{1477,16},'_'},
               {atom,{1477,26},bs_get_tail},
               {var,{1477,16},'_'}]},
          {var,{1477,40},'_Src'},
          {var,{1477,46},'_Ts'}],
         [],
         [{debug_line,1478,621},{atom,{1478,5},yes}]},
     {clause,
         {1479,1},
         [{tuple,
              {1479,16},
              [{atom,{1479,16},b_set},
               {var,{1479,16},'_'},
               {var,{1479,16},'_'},
               {atom,{1479,26},bs_start_match},
               {cons,
                   {1479,46},
                   {var,{1479,47},'_'},
                   {cons,{1479,50},{var,{1479,50},'Arg'},{nil,{1479,53}}}}]},
          {var,{1479,57},'_Src'},
          {var,{1479,63},'Ts'}],
         [],
         [{debug_line,1480,622},
          {match,
              {1480,5},
              {var,{1480,5},'ArgType'},
              {call,
                  {1480,15},
                  {atom,{1480,15},concrete_type},
                  [{var,{1480,29},'Arg'},{var,{1480,34},'Ts'}]}},
          {debug_line,1481,623},
          {'case',
              {1481,5},
              {call,
                  {1481,10},
                  {remote,
                      {1481,20},
                      {atom,{1481,10},beam_types},
                      {atom,{1481,21},is_bs_matchable_type}},
                  [{var,{1481,42},'ArgType'}]},
              [{clause,
                   {1482,9},
                   [{atom,{1482,9},true}],
                   [],
                   [{debug_line,1486,624},{atom,{1486,13},yes}]},
               {clause,
                   {1487,9},
                   [{atom,{1487,9},false}],
                   [],
                   [{debug_line,1489,625},
                    {'case',
                        {1489,13},
                        {call,
                            {1489,18},
                            {remote,
                                {1489,28},
                                {atom,{1489,18},beam_types},
                                {atom,{1489,29},meet}},
                            [{var,{1489,34},'ArgType'},
                             {block,0,
                                 [{tuple,
                                      {1489,43},
                                      [{atom,{1489,43},t_bs_matchable},
                                       {integer,{1489,43},1}]}]}]},
                        [{clause,
                             {1490,17},
                             [{atom,{1490,17},none}],
                             [],
                             [{debug_line,1490,626},{atom,{1490,25},no}]},
                         {clause,
                             {1491,17},
                             [{var,{1491,17},'_'}],
                             [],
                             [{debug_line,1491,627},
                              {atom,
                                  [{text,"'maybe'"},{location,{1491,22}}],
                                  'maybe'}]}]}]}]}]},
     {clause,
         {1495,1},
         [{tuple,
              {1495,16},
              [{atom,{1495,16},b_set},
               {var,{1495,16},'_'},
               {var,{1495,16},'_'},
               {tuple,{1495,26},[{atom,{1495,27},bif},{var,{1495,31},'Bif'}]},
               {var,{1495,41},'BifArgs'}]},
          {var,{1495,51},'_Src'},
          {var,{1495,57},'Ts'}],
         [],
         [{debug_line,1496,628},
          {match,
              {1496,5},
              {var,{1496,5},'ArgTypes'},
              {call,
                  {1496,16},
                  {atom,{1496,16},concrete_types},
                  [{var,{1496,31},'BifArgs'},{var,{1496,40},'Ts'}]}},
          {debug_line,1497,629},
          {call,
              {1497,5},
              {remote,
                  {1497,20},
                  {atom,{1497,5},beam_call_types},
                  {atom,{1497,21},will_succeed}},
              [{atom,{1497,34},erlang},
               {var,{1497,42},'Bif'},
               {var,{1497,47},'ArgTypes'}]}]},
     {clause,
         {1498,1},
         [{tuple,
              {1498,16},
              [{atom,{1498,16},b_set},
               {var,{1498,16},'_'},
               {var,{1498,16},'_'},
               {atom,{1498,26},call},
               {cons,
                   {1499,28},
                   {tuple,
                       {1499,29},
                       [{atom,{1499,29},b_remote},
                        {tuple,
                            {1499,43},
                            [{atom,{1499,43},b_literal},
                             {var,{1499,58},'Mod'}]},
                        {tuple,
                            {1500,44},
                            [{atom,{1500,44},b_literal},
                             {var,{1500,59},'Func'}]},
                        {var,{1499,29},'_'}]},
                   {var,{1501,29},'CallArgs'}}]},
          {var,{1502,16},'_Src'},
          {var,{1502,22},'Ts'}],
         [],
         [{debug_line,1503,630},
          {match,
              {1503,5},
              {var,{1503,5},'ArgTypes'},
              {call,
                  {1503,16},
                  {atom,{1503,16},concrete_types},
                  [{var,{1503,31},'CallArgs'},{var,{1503,41},'Ts'}]}},
          {debug_line,1504,631},
          {call,
              {1504,5},
              {remote,
                  {1504,20},
                  {atom,{1504,5},beam_call_types},
                  {atom,{1504,21},will_succeed}},
              [{var,{1504,34},'Mod'},
               {var,{1504,39},'Func'},
               {var,{1504,45},'ArgTypes'}]}]},
     {clause,
         {1506,1},
         [{tuple,
              {1506,16},
              [{atom,{1506,16},b_set},
               {var,{1506,16},'_'},
               {var,{1506,16},'_'},
               {atom,{1506,26},get_hd},
               {var,{1506,16},'_'}]},
          {var,{1506,35},'_Src'},
          {var,{1506,41},'_Ts'}],
         [],
         [{debug_line,1507,632},{atom,{1507,5},yes}]},
     {clause,
         {1508,1},
         [{tuple,
              {1508,16},
              [{atom,{1508,16},b_set},
               {var,{1508,16},'_'},
               {var,{1508,16},'_'},
               {atom,{1508,26},get_tl},
               {var,{1508,16},'_'}]},
          {var,{1508,35},'_Src'},
          {var,{1508,41},'_Ts'}],
         [],
         [{debug_line,1509,633},{atom,{1509,5},yes}]},
     {clause,
         {1510,1},
         [{tuple,
              {1510,16},
              [{atom,{1510,16},b_set},
               {var,{1510,16},'_'},
               {var,{1510,16},'_'},
               {atom,{1510,26},has_map_field},
               {var,{1510,16},'_'}]},
          {var,{1510,42},'_Src'},
          {var,{1510,48},'_Ts'}],
         [],
         [{debug_line,1511,634},{atom,{1511,5},yes}]},
     {clause,
         {1512,1},
         [{tuple,
              {1512,16},
              [{atom,{1512,16},b_set},
               {var,{1512,16},'_'},
               {var,{1512,16},'_'},
               {atom,{1512,26},get_tuple_element},
               {var,{1512,16},'_'}]},
          {var,{1512,46},'_Src'},
          {var,{1512,52},'_Ts'}],
         [],
         [{debug_line,1513,635},{atom,{1513,5},yes}]},
     {clause,
         {1514,1},
         [{tuple,
              {1514,16},
              [{atom,{1514,16},b_set},
               {var,{1514,16},'_'},
               {var,{1514,16},'_'},
               {atom,{1514,26},put_map},
               {cons,
                   {1514,39},
                   {tuple,
                       {1514,40},
                       [{atom,{1514,40},b_literal},{atom,{1514,55},assoc}]},
                   {var,{1514,62},'_'}}]},
          {var,{1514,67},'_Src'},
          {var,{1514,73},'_Ts'}],
         [],
         [{debug_line,1515,636},{atom,{1515,5},yes}]},
     {clause,
         {1516,1},
         [{tuple,
              {1516,16},
              [{atom,{1516,16},b_set},
               {var,{1516,16},'_'},
               {var,{1516,16},'_'},
               {atom,{1516,26},put_tuple},
               {var,{1516,16},'_'}]},
          {var,{1516,38},'_Src'},
          {var,{1516,44},'_Ts'}],
         [],
         [{debug_line,1517,637},{atom,{1517,5},yes}]},
     {clause,
         {1518,1},
         [{tuple,
              {1518,16},
              [{atom,{1518,16},b_set},
               {var,{1518,16},'_'},
               {var,{1518,16},'_'},
               {atom,{1518,26},update_tuple},
               {cons,
                   {1518,44},
                   {var,{1518,45},'Tuple'},
                   {var,{1518,53},'Updates'}}]},
          {var,{1518,64},'_Src'},
          {var,{1518,70},'Ts'}],
         [],
         [{debug_line,1519,638},
          {match,
              {1519,5},
              {var,{1519,5},'TupleType'},
              {call,
                  {1519,17},
                  {atom,{1519,17},concrete_type},
                  [{var,{1519,31},'Tuple'},{var,{1519,38},'Ts'}]}},
          {debug_line,1520,639},
          {match,
              {1520,5},
              {var,{1520,5},'HighestIndex'},
              {call,
                  {1520,20},
                  {atom,{1520,20},update_tuple_highest_index},
                  [{var,{1520,47},'Updates'},
                   {block,0,[{op,{1520,56},'-',{integer,{1520,57},1}}]}]}},
          {debug_line,1521,640},
          {match,
              {1521,5},
              {var,{1521,5},'Args'},
              {cons,
                  {1521,12},
                  {call,
                      {1521,13},
                      {remote,
                          {1521,23},
                          {atom,{1521,13},beam_types},
                          {atom,{1521,24},make_integer}},
                      [{var,{1521,37},'HighestIndex'}]},
                  {cons,
                      {1521,52},
                      {var,{1521,52},'TupleType'},
                      {cons,{1521,63},{atom,{1521,63},any},{nil,{1521,66}}}}}},
          {debug_line,1522,641},
          {call,
              {1522,5},
              {remote,
                  {1522,20},
                  {atom,{1522,5},beam_call_types},
                  {atom,{1522,21},will_succeed}},
              [{atom,{1522,34},erlang},
               {atom,{1522,42},setelement},
               {var,{1522,54},'Args'}]}]},
     {clause,
         {1523,1},
         [{tuple,
              {1523,16},
              [{atom,{1523,16},b_set},
               {var,{1523,16},'_'},
               {var,{1523,16},'_'},
               {atom,{1523,26},update_record},
               {var,{1523,16},'_'}]},
          {var,{1523,42},'_Src'},
          {var,{1523,48},'_Ts'}],
         [],
         [{debug_line,1524,642},{atom,{1524,5},yes}]},
     {clause,
         {1526,1},
         [{tuple,
              {1526,16},
              [{atom,{1526,16},b_set},
               {var,{1526,16},'_'},
               {var,{1526,16},'_'},
               {atom,{1526,26},bs_create_bin},
               {var,{1526,16},'_'}]},
          {var,{1526,42},'_Src'},
          {var,{1526,48},'_Ts'}],
         [],
         [{debug_line,1531,643},
          {atom,[{text,"'maybe'"},{location,{1531,5}}],'maybe'}]},
     {clause,
         {1532,1},
         [{tuple,
              {1532,16},
              [{atom,{1532,16},b_set},
               {var,{1532,16},'_'},
               {var,{1532,16},'_'},
               {atom,{1532,26},bs_match},
               {cons,
                   {1533,28},
                   {tuple,
                       {1533,29},
                       [{atom,{1533,29},b_literal},{var,{1533,44},'Type'}]},
                   {cons,
                       {1533,50},
                       {var,{1533,50},'_'},
                       {cons,
                           {1533,52},
                           {var,{1533,52},'_'},
                           {cons,
                               {1533,54},
                               {tuple,
                                   {1533,54},
                                   [{atom,{1533,54},b_literal},
                                    {var,{1533,69},'Size'}]},
                               {cons,
                                   {1533,75},
                                   {var,{1533,75},'_'},
                                   {nil,{1533,76}}}}}}}]},
          {var,{1534,16},'_Src'},
          {var,{1534,22},'_Ts'}],
         [],
         [{debug_line,1535,644},
          {'if',
              {1535,5},
              [{clause,
                   {1536,9},
                   [],
                   [[{call,
                         {1536,9},
                         {remote,
                             {1536,9},
                             {atom,{1536,9},erlang},
                             {atom,{1536,9},is_integer}},
                         [{var,{1536,20},'Size'}]},
                     {op,{1536,32},
                         '>=',
                         {var,{1536,27},'Size'},
                         {integer,{1536,35},0}}]],
                   [{debug_line,1537,645},
                    {atom,[{text,"'maybe'"},{location,{1537,13}}],'maybe'}]},
               {clause,
                   {1538,9},
                   [],
                   [[{op,{1538,14},
                         '=:=',
                         {var,{1538,9},'Type'},
                         {atom,{1538,18},binary}},
                     {op,{1538,31},
                         '=:=',
                         {var,{1538,26},'Size'},
                         {atom,{1538,35},all}}]],
                   [{debug_line,1541,646},
                    {atom,[{text,"'maybe'"},{location,{1541,13}}],'maybe'}]},
               {clause,
                   {1542,9},
                   [],
                   [[{atom,{1542,9},true}]],
                   [{debug_line,1544,647},{atom,{1544,13},no}]}]}]},
     {clause,
         {1548,1},
         [{tuple,
              {1548,16},
              [{atom,{1548,16},b_set},
               {var,{1548,16},'_'},
               {var,{1548,16},'_'},
               {atom,{1548,26},call},
               {var,{1548,16},'_'}]},
          {var,{1548,33},'_Src'},
          {var,{1548,39},'_Ts'}],
         [],
         [{debug_line,1549,648},
          {atom,[{text,"'maybe'"},{location,{1549,5}}],'maybe'}]},
     {clause,
         {1550,1},
         [{tuple,
              {1550,16},
              [{atom,{1550,16},b_set},
               {var,{1550,16},'_'},
               {var,{1550,16},'_'},
               {atom,{1550,26},get_map_element},
               {var,{1550,16},'_'}]},
          {var,{1550,44},'_Src'},
          {var,{1550,50},'_Ts'}],
         [],
         [{debug_line,1551,649},
          {atom,[{text,"'maybe'"},{location,{1551,5}}],'maybe'}]},
     {clause,
         {1552,1},
         [{tuple,
              {1552,16},
              [{atom,{1552,16},b_set},
               {var,{1552,16},'_'},
               {var,{1552,16},'_'},
               {atom,{1552,26},wait_timeout},
               {var,{1552,16},'_'}]},
          {var,{1552,41},'_Src'},
          {var,{1552,47},'_Ts'}],
         [],
         [{debug_line,1557,650},
          {atom,[{text,"'maybe'"},{location,{1557,5}}],'maybe'}]},
     {clause,
         {1559,1},
         [{tuple,
              {1559,16},
              [{atom,{1559,16},b_set},
               {var,{1559,16},'_'},
               {var,{1559,16},'_'},
               {var,{1559,16},'_'},
               {var,{1559,16},'_'}]},
          {var,{1559,26},'_Src'},
          {var,{1559,32},'_Ts'}],
         [],
         [{debug_line,1560,651},
          {atom,[{text,"'maybe'"},{location,{1560,5}}],'maybe'}]}]}.
{function,
 {1568,1},
 simplify_update_record,4,
 [{clause,
   {1568,1},
   [{var,{1568,1},'_'},
    {var,{1568,1},'_'},
    {var,{1568,1},'_'},
    {var,{1568,1},'_'}],
   [[{call,
      {1568,1},
      {remote,{1568,1},{atom,{1568,1},fake},{atom,{1568,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1568,652},{atom,{1568,1},ignore}]},
  {clause,
   {1568,1},
   [{var,{1568,24},'Src'},
    {var,{1568,29},'Hint0'},
    {var,{1568,36},'Updates'},
    {var,{1568,45},'Ts'}],
   [],
   [{debug_line,1569,653},
    {'case',
     {1569,5},
     {call,
      {1569,10},
      {atom,{1569,10},sur_1},
      [{var,{1569,16},'Updates'},
       {block,0,
        [{call,
          {1569,25},
          {atom,{1569,25},concrete_type},
          [{var,{1569,39},'Src'},{var,{1569,44},'Ts'}]}]},
       {var,{1569,49},'Ts'},
       {var,{1569,53},'Hint0'},
       {nil,{1569,60}}]},
     [{clause,
       {1570,9},
       [{tuple,
         {1570,9},
         [{tuple,
           {1570,10},
           [{atom,{1570,10},b_literal},{atom,{1570,25},reuse}]},
          {nil,{1570,33}}]}],
       [[{op,
          {1570,58},
          '>',
          {call,
           {1570,42},
           {remote,{1570,42},{atom,{1570,42},erlang},{atom,{1570,42},length}},
           [{var,{1570,49},'Updates'}]},
          {integer,{1570,60},2}}]],
       [{debug_line,1571,654},
        {tuple,
         {1571,13},
         [{atom,{1571,14},changed},
          {tuple,{1571,23},[{atom,{1571,23},b_literal},{atom,{1571,38},copy}]},
          {var,{1571,45},'Updates'}]}]},
      {clause,
       {1572,9},
       [{tuple,{1572,9},[{var,{1572,10},'Hint0'},{nil,{1572,17}}]}],
       [],
       [{debug_line,1573,655},{atom,{1573,13},unchanged}]},
      {clause,
       {1574,9},
       [{tuple,{1574,9},[{var,{1574,10},'Hint1'},{var,{1574,17},'Skipped'}]}],
       [],
       [{debug_line,1575,656},
        {match,
         {1575,13},
         {var,{1575,13},'Updates1'},
         {call,
          {1575,24},
          {atom,{1575,24},sur_skip},
          [{var,{1575,33},'Updates'},{var,{1575,42},'Skipped'}]}},
        {debug_line,1576,657},
        {match,
         {1576,13},
         {var,{1576,13},'Hint'},
         {'if',
          {1576,20},
          [{clause,
            {1576,23},
            [],
            [[{op,
               {1576,40},
               '>',
               {call,
                {1576,23},
                {remote,
                 {1576,23},
                 {atom,{1576,23},erlang},
                 {atom,{1576,23},length}},
                [{var,{1576,30},'Updates1'}]},
               {integer,{1576,42},2}}]],
            [{debug_line,1577,658},
             {tuple,
              {1577,28},
              [{atom,{1577,28},b_literal},{atom,{1577,43},copy}]}]},
           {clause,
            {1578,23},
            [],
            [[{atom,{1578,23},true}]],
            [{debug_line,1579,659},{var,{1579,28},'Hint1'}]}]}},
        {debug_line,1581,660},
        {tuple,
         {1581,13},
         [{atom,{1581,14},changed},
          {var,{1581,23},'Hint'},
          {var,{1581,29},'Updates1'}]}]}]}]}]}.
{function,
 {1584,1},
 sur_1,5,
 [{clause,
   {1584,1},
   [{var,{1584,1},'_'},
    {var,{1584,1},'_'},
    {var,{1584,1},'_'},
    {var,{1584,1},'_'},
    {var,{1584,1},'_'}],
   [[{call,
      {1584,1},
      {remote,{1584,1},{atom,{1584,1},fake},{atom,{1584,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1584,661},{atom,{1584,1},ignore}]},
  {clause,
   {1584,1},
   [{cons,
     {1584,7},
     {var,{1584,8},'Index'},
     {cons,{1584,15},{var,{1584,15},'Arg'},{var,{1584,21},'Updates'}}},
    {var,{1584,31},'RecordType'},
    {var,{1584,43},'Ts'},
    {var,{1584,47},'Hint'},
    {var,{1584,53},'Skipped'}],
   [],
   [{debug_line,1585,662},
    {match,
     {1585,5},
     {var,{1585,5},'FieldType'},
     {call,
      {1585,17},
      {atom,{1585,17},concrete_type},
      [{var,{1585,31},'Arg'},{var,{1585,36},'Ts'}]}},
    {debug_line,1586,663},
    {match,
     {1586,5},
     {var,{1586,5},'IndexType'},
     {call,
      {1586,17},
      {atom,{1586,17},concrete_type},
      [{var,{1586,31},'Index'},{var,{1586,38},'Ts'}]}},
    {debug_line,1587,664},
    {match,
     {1587,5},
     {var,{1587,5},'Singleton'},
     {call,
      {1587,17},
      {remote,
       {1587,27},
       {atom,{1587,17},beam_types},
       {atom,{1587,28},is_singleton_type}},
      [{var,{1587,46},'FieldType'}]}},
    {debug_line,1588,665},
    {'case',
     {1588,5},
     {call,
      {1588,10},
      {remote,
       {1588,25},
       {atom,{1588,10},beam_call_types},
       {atom,{1588,26},types}},
      [{atom,{1588,32},erlang},
       {atom,{1588,40},element},
       {block,0,
        [{cons,
          {1588,49},
          {var,{1588,50},'IndexType'},
          {cons,{1588,61},{var,{1588,61},'RecordType'},{nil,{1588,71}}}}]}]},
     [{clause,
       {1589,9},
       [{tuple,
         {1589,9},
         [{var,{1589,10},'FieldType'},
          {var,{1589,21},'_'},
          {var,{1589,24},'_'}]}],
       [[{var,{1589,32},'Singleton'}]],
       [{debug_line,1592,666},
        {call,
         {1592,13},
         {atom,{1592,13},sur_1},
         [{var,{1592,19},'Updates'},
          {var,{1592,28},'RecordType'},
          {var,{1592,40},'Ts'},
          {var,{1592,44},'Hint'},
          {block,0,
           [{op,
             {1592,58},
             '++',
             {var,{1592,50},'Skipped'},
             {cons,{1592,61},{var,{1592,62},'Index'},{nil,{1592,67}}}}]}]}]},
      {clause,
       {1593,9},
       [{tuple,
         {1593,9},
         [{var,{1593,10},'ElementType'},
          {var,{1593,23},'_'},
          {var,{1593,26},'_'}]}],
       [],
       [{debug_line,1594,667},
        {'case',
         {1594,13},
         {call,
          {1594,18},
          {remote,{1594,28},{atom,{1594,18},beam_types},{atom,{1594,29},meet}},
          [{var,{1594,34},'FieldType'},{var,{1594,45},'ElementType'}]},
         [{clause,
           {1595,17},
           [{atom,{1595,17},none}],
           [],
           [{debug_line,1600,668},
            {call,
             {1600,21},
             {atom,{1600,21},sur_1},
             [{var,{1600,27},'Updates'},
              {var,{1600,36},'RecordType'},
              {var,{1600,48},'Ts'},
              {block,0,
               [{debug_line,1601,669},
                {tuple,
                 {1601,27},
                 [{atom,{1601,27},b_literal},{atom,{1601,42},copy}]}]},
              {var,{1601,49},'Skipped'}]}]},
          {clause,
           {1602,17},
           [{var,{1602,17},'_'}],
           [],
           [{debug_line,1603,670},
            {call,
             {1603,21},
             {atom,{1603,21},sur_1},
             [{var,{1603,27},'Updates'},
              {var,{1603,36},'RecordType'},
              {var,{1603,48},'Ts'},
              {var,{1603,52},'Hint'},
              {var,{1603,58},'Skipped'}]}]}]}]}]}]},
  {clause,
   {1606,1},
   [{nil,{1606,7}},
    {var,{1606,11},'_RecordType'},
    {var,{1606,24},'_Ts'},
    {var,{1606,29},'Hint'},
    {var,{1606,35},'Skipped'}],
   [],
   [{debug_line,1607,671},
    {tuple,{1607,5},[{var,{1607,6},'Hint'},{var,{1607,12},'Skipped'}]}]}]}.
{function,{1609,1},
          sur_skip,2,
          [{clause,{1609,1},
                   [{var,{1609,1},'_'},{var,{1609,1},'_'}],
                   [[{call,{1609,1},
                           {remote,{1609,1},
                                   {atom,{1609,1},fake},
                                   {atom,{1609,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1609,672},{atom,{1609,1},ignore}]},
           {clause,{1609,1},
                   [{cons,{1609,10},
                          {var,{1609,11},'Index'},
                          {cons,{1609,18},
                                {var,{1609,18},'_Arg'},
                                {var,{1609,25},'Updates'}}},
                    {cons,{1609,35},
                          {var,{1609,36},'Index'},
                          {var,{1609,44},'Skipped'}}],
                   [],
                   [{debug_line,1610,673},
                    {call,{1610,5},
                          {atom,{1610,5},sur_skip},
                          [{var,{1610,14},'Updates'},
                           {var,{1610,23},'Skipped'}]}]},
           {clause,{1611,1},
                   [{cons,{1611,10},
                          {var,{1611,11},'Index'},
                          {cons,{1611,18},
                                {var,{1611,18},'Arg'},
                                {var,{1611,24},'Updates'}}},
                    {var,{1611,34},'Skipped'}],
                   [],
                   [{debug_line,1612,674},
                    {cons,{1612,5},
                          {var,{1612,6},'Index'},
                          {cons,{1612,13},
                                {var,{1612,13},'Arg'},
                                {call,{1612,19},
                                      {atom,{1612,19},sur_skip},
                                      [{var,{1612,28},'Updates'},
                                       {var,{1612,37},'Skipped'}]}}}]},
           {clause,{1613,1},
                   [{nil,{1613,10}},{nil,{1613,14}}],
                   [],
                   [{debug_line,1614,675},{nil,{1614,5}}]}]}.
{function,
 {1616,1},
 simplify_is_record,5,
 [{clause,
   {1616,1},
   [{var,{1616,1},'_'},
    {var,{1616,1},'_'},
    {var,{1616,1},'_'},
    {var,{1616,1},'_'},
    {var,{1616,1},'_'}],
   [[{call,
      {1616,1},
      {remote,{1616,1},{atom,{1616,1},fake},{atom,{1616,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1616,676},{atom,{1616,1},ignore}]},
  {clause,
   {1616,1},
   [{var,{1616,20},'I'},
    {tuple,
     {1616,23},
     [{atom,{1616,23},t_tuple},
      {var,{1617,37},'Size'},
      {var,{1616,38},'Exact'},
      {var,{1618,41},'Es'}]},
    {var,{1619,20},'RecSize'},
    {match,
     {1619,29},
     {tuple,{1619,29},[{atom,{1619,29},b_literal},{var,{1619,44},'TagVal'}]},
     {var,{1619,52},'RecTag'}},
    {var,{1619,60},'Ts'}],
   [],
   [{debug_line,1620,677},
    {match,
     {1620,5},
     {var,{1620,5},'TagType'},
     {call,
      {1620,15},
      {remote,{1620,19},{atom,{1620,15},maps},{atom,{1620,20},get}},
      [{integer,{1620,24},1},{var,{1620,27},'Es'},{atom,{1620,31},any}]}},
    {debug_line,1621,678},
    {match,
     {1621,5},
     {var,{1621,5},'TagMatch'},
     {'case',
      {1621,16},
      {call,
       {1621,21},
       {remote,
        {1621,31},
        {atom,{1621,21},beam_types},
        {atom,{1621,32},get_singleton_value}},
       [{var,{1621,52},'TagType'}]},
      [{clause,
        {1622,20},
        [{tuple,{1622,20},[{atom,{1622,21},ok},{var,{1622,25},'TagVal'}]}],
        [],
        [{debug_line,1622,679},{atom,{1622,36},yes}]},
       {clause,
        {1623,20},
        [{tuple,{1623,20},[{atom,{1623,21},ok},{var,{1623,25},'_'}]}],
        [],
        [{debug_line,1623,680},{atom,{1623,31},no}]},
       {clause,
        {1624,20},
        [{atom,{1624,20},error}],
        [],
        [{debug_line,1626,681},
         {'case',
          {1626,24},
          {call,
           {1626,29},
           {remote,
            {1626,39},
            {atom,{1626,29},beam_types},
            {atom,{1626,40},meet}},
           [{block,0,
             [{call,
               {1626,45},
               {atom,{1626,45},concrete_type},
               [{var,{1626,59},'RecTag'},{var,{1626,67},'Ts'}]}]},
            {var,{1626,72},'TagType'}]},
          [{clause,
            {1627,28},
            [{atom,{1627,28},none}],
            [],
            [{debug_line,1627,682},{atom,{1627,36},no}]},
           {clause,
            {1628,28},
            [{var,{1628,28},'_'}],
            [],
            [{debug_line,1628,683},
             {atom,[{text,"'maybe'"},{location,{1628,33}}],'maybe'}]}]}]}]}},
    {debug_line,1631,684},
    {'if',
     {1631,5},
     [{clause,
       {1632,9},
       [],
       [[{op,{1632,14},'=/=',{var,{1632,9},'Size'},{var,{1632,18},'RecSize'}},
         {var,{1632,27},'Exact'}],
        [{op,{1632,39},'>',{var,{1632,34},'Size'},{var,{1632,41},'RecSize'}}],
        [{op,{1632,59},'=:=',{var,{1632,50},'TagMatch'},{atom,{1632,63},no}}]],
       [{debug_line,1633,685},
        {tuple,
         {1633,13},
         [{atom,{1633,13},b_literal},{atom,{1633,28},false}]}]},
      {clause,
       {1634,9},
       [],
       [[{op,{1634,14},'=:=',{var,{1634,9},'Size'},{var,{1634,18},'RecSize'}},
         {var,{1634,27},'Exact'},
         {op,
          {1634,43},
          '=:=',
          {var,{1634,34},'TagMatch'},
          {atom,{1634,47},yes}}]],
       [{debug_line,1635,686},
        {tuple,{1635,13},[{atom,{1635,13},b_literal},{atom,{1635,28},true}]}]},
      {clause,
       {1636,9},
       [],
       [[{atom,{1636,9},true}]],
       [{debug_line,1637,687},{var,{1637,13},'I'}]}]}]},
  {clause,
   {1639,1},
   [{var,{1639,20},'I'},
    {atom,{1639,23},any},
    {var,{1639,28},'_Size'},
    {var,{1639,35},'_Tag'},
    {var,{1639,41},'_Ts'}],
   [],
   [{debug_line,1640,688},{var,{1640,5},'I'}]},
  {clause,
   {1641,1},
   [{var,{1641,20},'_I'},
    {var,{1641,24},'_Type'},
    {var,{1641,31},'_Size'},
    {var,{1641,38},'_Tag'},
    {var,{1641,44},'_Ts'}],
   [],
   [{debug_line,1642,689},
    {tuple,{1642,5},[{atom,{1642,5},b_literal},{atom,{1642,20},false}]}]}]}.
{function,
    {1644,1},
    simplify_switch_bool,4,
    [{clause,
         {1644,1},
         [{var,{1644,1},'_'},
          {var,{1644,1},'_'},
          {var,{1644,1},'_'},
          {var,{1644,1},'_'}],
         [[{call,
               {1644,1},
               {remote,
                   {1644,1},
                   {atom,{1644,1},fake},
                   {atom,{1644,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1644,690},{atom,{1644,1},ignore}]},
     {clause,
         {1644,1},
         [{tuple,
              {1644,22},
              [{atom,{1644,22},b_switch},
               {var,{1644,22},'_'},
               {var,{1644,36},'B'},
               {var,{1644,43},'Fail'},
               {var,{1644,53},'List0'}]},
          {var,{1644,61},'Ts'},
          {var,{1644,65},'Ds'},
          {var,{1644,69},'Sub'}],
         [],
         [{debug_line,1645,691},
          {match,
              {1645,5},
              {var,{1645,5},'FalseVal'},
              {tuple,
                  {1645,16},
                  [{atom,{1645,16},b_literal},{atom,{1645,31},false}]}},
          {debug_line,1646,692},
          {match,
              {1646,5},
              {var,{1646,5},'TrueVal'},
              {tuple,
                  {1646,15},
                  [{atom,{1646,15},b_literal},{atom,{1646,30},true}]}},
          {debug_line,1647,693},
          {match,
              {1647,5},
              {var,{1647,5},'List1'},
              {op,{1647,19},
                  '++',
                  {var,{1647,13},'List0'},
                  {cons,
                      {1647,22},
                      {tuple,
                          {1647,23},
                          [{var,{1647,24},'FalseVal'},{var,{1647,33},'Fail'}]},
                      {cons,
                          {1647,39},
                          {tuple,
                              {1647,39},
                              [{var,{1647,40},'TrueVal'},
                               {var,{1647,48},'Fail'}]},
                          {nil,{1647,53}}}}}},
          {debug_line,1648,694},
          {match,
              {1648,5},
              {tuple,{1648,5},[{var,{1648,6},'_'},{var,{1648,8},'FalseLbl'}]},
              {call,
                  {1648,20},
                  {remote,
                      {1648,20},
                      {atom,{1648,20},lists},
                      {atom,{1648,20},keyfind}},
                  [{var,{1648,28},'FalseVal'},
                   {integer,{1648,38},1},
                   {var,{1648,41},'List1'}]}},
          {debug_line,1649,695},
          {match,
              {1649,5},
              {tuple,{1649,5},[{var,{1649,6},'_'},{var,{1649,8},'TrueLbl'}]},
              {call,
                  {1649,19},
                  {remote,
                      {1649,19},
                      {atom,{1649,19},lists},
                      {atom,{1649,19},keyfind}},
                  [{var,{1649,27},'TrueVal'},
                   {integer,{1649,36},1},
                   {var,{1649,39},'List1'}]}},
          {debug_line,1650,696},
          {match,
              {1650,5},
              {var,{1650,5},'Br'},
              {tuple,
                  {1650,10},
                  [{atom,{1650,10},b_br},
                   {map,{1650,10},[]},
                   {var,{1650,21},'B'},
                   {var,{1650,28},'TrueLbl'},
                   {var,{1650,41},'FalseLbl'}]}},
          {debug_line,1651,697},
          {call,
              {1651,5},
              {atom,{1651,5},simplify_terminator},
              [{var,{1651,25},'Br'},
               {var,{1651,29},'Ts'},
               {var,{1651,33},'Ds'},
               {var,{1651,37},'Sub'}]}]}]}.
{function,
 {1653,1},
 simplify_not,4,
 [{clause,
   {1653,1},
   [{var,{1653,1},'_'},
    {var,{1653,1},'_'},
    {var,{1653,1},'_'},
    {var,{1653,1},'_'}],
   [[{call,
      {1653,1},
      {remote,{1653,1},{atom,{1653,1},fake},{atom,{1653,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1653,698},{atom,{1653,1},ignore}]},
  {clause,
   {1653,1},
   [{match,
     {1653,14},
     {tuple,
      {1653,14},
      [{atom,{1653,14},b_br},
       {var,{1653,14},'_'},
       {match,
        {1653,25},
        {tuple,{1653,25},[{atom,{1653,25},b_var},{var,{1653,25},'_'}]},
        {var,{1653,34},'V'}},
       {var,{1653,41},'Succ'},
       {var,{1653,51},'Fail'}]},
     {var,{1653,57},'Br0'}},
    {var,{1653,62},'Ts'},
    {var,{1653,66},'Ds'},
    {var,{1653,70},'Sub'}],
   [],
   [{debug_line,1654,699},
    {'case',
     {1654,5},
     {var,{1654,10},'Ds'},
     [{clause,
       {1655,9},
       [{map,
         {1655,9},
         [{map_field_exact,
           {1655,12},
           {var,{1655,11},'V'},
           {tuple,
            {1655,14},
            [{atom,{1655,14},b_set},
             {var,{1655,14},'_'},
             {var,{1655,14},'_'},
             {tuple,{1655,24},[{atom,{1655,25},bif},{atom,{1655,29},'not'}]},
             {cons,{1655,41},{var,{1655,42},'Bool'},{nil,{1655,46}}}]}}]}],
       [],
       [{debug_line,1656,700},
        {'case',
         {1656,13},
         {call,
          {1656,18},
          {remote,
           {1656,28},
           {atom,{1656,18},beam_types},
           {atom,{1656,29},is_boolean_type}},
          [{block,0,
            [{call,
              {1656,45},
              {atom,{1656,45},concrete_type},
              [{var,{1656,59},'Bool'},{var,{1656,65},'Ts'}]}]}]},
         [{clause,
           {1657,17},
           [{atom,{1657,17},true}],
           [],
           [{debug_line,1658,701},
            {match,
             {1658,21},
             {var,{1658,21},'Br'},
             {block,
              {1658,26},
              [{match,{1658,26},{var,{1658,26},rec93},{var,{1658,26},'Br0'}},
               {'case',
                {1658,35},
                {var,{1658,26},rec93},
                [{clause,
                  {1658,35},
                  [{tuple,
                    {1658,35},
                    [{atom,{1658,35},b_br},
                     {var,{1658,35},'_'},
                     {var,{1658,35},'_'},
                     {var,{1658,35},'_'},
                     {var,{1658,35},'_'}]}],
                  [],
                  [{call,
                    {1658,35},
                    {remote,
                     {1658,35},
                     {atom,{1658,35},erlang},
                     {atom,{1658,35},setelement}},
                    [{integer,{1658,35},3},
                     {call,
                      {1658,45},
                      {remote,
                       {1658,45},
                       {atom,{1658,45},erlang},
                       {atom,{1658,45},setelement}},
                      [{integer,{1658,45},4},
                       {call,
                        {1658,55},
                        {remote,
                         {1658,55},
                         {atom,{1658,55},erlang},
                         {atom,{1658,55},setelement}},
                        [{integer,{1658,55},5},
                         {var,{1658,26},rec93},
                         {var,{1658,60},'Succ'}]},
                       {var,{1658,50},'Fail'}]},
                     {var,{1658,40},'Bool'}]}]},
                 {clause,
                  [{generated,true},{location,{1658,35}}],
                  [{var,[{generated,true},{location,{1658,35}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{1658,35}}],
                    {remote,
                     [{generated,true},{location,{1658,35}}],
                     {atom,[{generated,true},{location,{1658,35}}],erlang},
                     {atom,[{generated,true},{location,{1658,35}}],error}},
                    [{tuple,
                      [{generated,true},{location,{1658,35}}],
                      [{atom,
                        [{generated,true},{location,{1658,35}}],
                        badrecord},
                       {var,{1658,26},rec93}]}]}]}]}]}},
            {debug_line,1659,702},
            {call,
             {1659,21},
             {atom,{1659,21},simplify_terminator},
             [{var,{1659,41},'Br'},
              {var,{1659,45},'Ts'},
              {var,{1659,49},'Ds'},
              {var,{1659,53},'Sub'}]}]},
          {clause,
           {1660,17},
           [{atom,{1660,17},false}],
           [],
           [{debug_line,1661,703},{var,{1661,21},'Br0'}]}]}]},
      {clause,
       {1663,9},
       [{map,{1663,9},[]}],
       [],
       [{debug_line,1664,704},{var,{1664,13},'Br0'}]}]}]},
  {clause,
   {1666,1},
   [{match,
     {1666,14},
     {tuple,
      {1666,14},
      [{atom,{1666,14},b_br},
       {var,{1666,14},'_'},
       {tuple,{1666,25},[{atom,{1666,25},b_literal},{var,{1666,25},'_'}]},
       {var,{1666,14},'_'},
       {var,{1666,14},'_'}]},
     {var,{1666,39},'Br'}},
    {var,{1666,43},'_Sub'},
    {var,{1666,49},'_Ts'},
    {var,{1666,54},'_Ds'}],
   [],
   [{debug_line,1667,705},{var,{1667,5},'Br'}]}]}.
{function,
    {1669,1},
    simplify_phi_args,5,
    [{clause,
         {1669,1},
         [{var,{1669,1},'_'},
          {var,{1669,1},'_'},
          {var,{1669,1},'_'},
          {var,{1669,1},'_'},
          {var,{1669,1},'_'}],
         [[{call,
               {1669,1},
               {remote,
                   {1669,1},
                   {atom,{1669,1},fake},
                   {atom,{1669,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1669,706},{atom,{1669,1},ignore}]},
     {clause,
         {1669,1},
         [{cons,
              {1669,19},
              {tuple,
                  {1669,20},
                  [{var,{1669,21},'Arg0'},{var,{1669,27},'From'}]},
              {var,{1669,35},'Rest'}},
          {var,{1669,42},'Ls'},
          {var,{1669,46},'Sub'},
          {var,{1669,51},'Type0'},
          {var,{1669,58},'Args'}],
         [],
         [{debug_line,1670,707},
          {'case',
              {1670,5},
              {var,{1670,10},'Ls'},
              [{clause,
                   {1671,9},
                   [{map,
                        {1671,9},
                        [{map_field_exact,
                             {1671,17},
                             {var,{1671,12},'From'},
                             {var,{1671,20},'Outgoing'}}]}],
                   [],
                   [{debug_line,1672,708},
                    {match,
                        {1672,13},
                        {tuple,
                            {1672,13},
                            [{atom,{1672,14},outgoing},{var,{1672,24},'Ts'}]},
                        {var,{1672,30},'Outgoing'}},
                    {debug_line,1674,709},
                    {match,
                        {1674,13},
                        {var,{1674,13},'Arg'},
                        {call,
                            {1674,19},
                            {atom,{1674,19},simplify_arg},
                            [{var,{1674,32},'Arg0'},
                             {var,{1674,38},'Ts'},
                             {var,{1674,42},'Sub'}]}},
                    {debug_line,1675,710},
                    {match,
                        {1675,13},
                        {var,{1675,13},'Type'},
                        {call,
                            {1675,20},
                            {remote,
                                {1675,30},
                                {atom,{1675,20},beam_types},
                                {atom,{1675,31},join}},
                            [{block,0,
                                 [{call,
                                      {1675,36},
                                      {atom,{1675,36},concrete_type},
                                      [{var,{1675,50},'Arg'},
                                       {var,{1675,55},'Ts'}]}]},
                             {var,{1675,60},'Type0'}]}},
                    {debug_line,1676,711},
                    {match,
                        {1676,13},
                        {var,{1676,13},'Phi'},
                        {tuple,
                            {1676,19},
                            [{var,{1676,20},'Arg'},{var,{1676,25},'From'}]}},
                    {debug_line,1678,712},
                    {call,
                        {1678,13},
                        {atom,{1678,13},simplify_phi_args},
                        [{var,{1678,31},'Rest'},
                         {var,{1678,37},'Ls'},
                         {var,{1678,41},'Sub'},
                         {var,{1678,46},'Type'},
                         {block,0,
                             [{cons,
                                  {1678,52},
                                  {var,{1678,53},'Phi'},
                                  {var,{1678,59},'Args'}}]}]}]},
               {clause,
                   {1679,9},
                   [{map,{1679,9},[]}],
                   [],
                   [{debug_line,1680,713},
                    {call,
                        {1680,13},
                        {atom,{1680,13},simplify_phi_args},
                        [{var,{1680,31},'Rest'},
                         {var,{1680,37},'Ls'},
                         {var,{1680,41},'Sub'},
                         {var,{1680,46},'Type0'},
                         {var,{1680,53},'Args'}]}]}]}]},
     {clause,
         {1682,1},
         [{nil,{1682,19}},
          {var,{1682,23},'_Ls'},
          {var,{1682,28},'_Sub'},
          {var,{1682,34},'Type'},
          {var,{1682,40},'Args'}],
         [],
         [{debug_line,1685,714},
          {tuple,
              {1685,5},
              [{var,{1685,6},'Type'},
               {call,
                   {1685,12},
                   {remote,
                       {1685,12},
                       {atom,{1685,12},lists},
                       {atom,{1685,12},reverse}},
                   [{var,{1685,20},'Args'}]}]}]}]}.
{function,{1687,1},
          phi_all_same,1,
          [{clause,{1687,1},
                   [{var,{1687,1},'_'}],
                   [[{call,{1687,1},
                           {remote,{1687,1},
                                   {atom,{1687,1},fake},
                                   {atom,{1687,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1687,715},{atom,{1687,1},ignore}]},
           {clause,{1687,1},
                   [{cons,{1687,14},
                          {tuple,{1687,15},
                                 [{var,{1687,16},'Arg'},
                                  {var,{1687,21},'_From'}]},
                          {var,{1687,30},'Phis'}}],
                   [],
                   [{debug_line,1688,716},
                    {call,{1688,5},
                          {atom,{1688,5},phi_all_same_1},
                          [{var,{1688,20},'Phis'},{var,{1688,26},'Arg'}]}]}]}.
{function,{1690,1},
          phi_all_same_1,2,
          [{clause,{1690,1},
                   [{var,{1690,1},'_'},{var,{1690,1},'_'}],
                   [[{call,{1690,1},
                           {remote,{1690,1},
                                   {atom,{1690,1},fake},
                                   {atom,{1690,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1690,717},{atom,{1690,1},ignore}]},
           {clause,{1690,1},
                   [{cons,{1690,16},
                          {tuple,{1690,17},
                                 [{var,{1690,18},'Arg'},
                                  {var,{1690,23},'_From'}]},
                          {var,{1690,32},'Phis'}},
                    {var,{1690,39},'Arg'}],
                   [],
                   [{debug_line,1691,718},
                    {call,{1691,5},
                          {atom,{1691,5},phi_all_same_1},
                          [{var,{1691,20},'Phis'},{var,{1691,26},'Arg'}]}]},
           {clause,{1692,1},
                   [{nil,{1692,16}},{var,{1692,20},'_Arg'}],
                   [],
                   [{debug_line,1693,719},{atom,{1693,5},true}]},
           {clause,{1694,1},
                   [{var,{1694,16},'_Phis'},{var,{1694,23},'_Arg'}],
                   [],
                   [{debug_line,1695,720},{atom,{1695,5},false}]}]}.
{function,
 {1697,1},
 simplify_remote_call,5,
 [{clause,
   {1697,1},
   [{var,{1697,1},'_'},
    {var,{1697,1},'_'},
    {var,{1697,1},'_'},
    {var,{1697,1},'_'},
    {var,{1697,1},'_'}],
   [[{call,
      {1697,1},
      {remote,{1697,1},{atom,{1697,1},fake},{atom,{1697,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1697,721},{atom,{1697,1},ignore}]},
  {clause,
   {1697,1},
   [{atom,{1697,22},erlang},
    {atom,{1697,30},throw},
    {cons,{1697,37},{var,{1697,38},'Term'},{nil,{1697,42}}},
    {var,{1697,45},'Ts'},
    {var,{1697,49},'I'}],
   [],
   [{debug_line,1700,722},
    {match,
     {1700,5},
     {var,{1700,5},'Type'},
     {call,
      {1700,12},
      {atom,{1700,12},normalized_type},
      [{var,{1700,28},'Term'},{var,{1700,34},'Ts'}]}},
    {debug_line,1701,723},
    {call,
     {1701,5},
     {remote,{1701,13},{atom,{1701,5},beam_ssa},{atom,{1701,14},add_anno}},
     [{atom,{1701,23},thrown_type},
      {var,{1701,36},'Type'},
      {var,{1701,42},'I'}]}]},
  {clause,
   {1702,1},
   [{atom,{1702,22},erlang},
    {atom,{1702,30},'++'},
    {cons,
     {1702,36},
     {tuple,{1702,37},[{atom,{1702,37},b_literal},{nil,{1702,52}}]},
     {cons,{1702,56},{var,{1702,56},'Tl'},{nil,{1702,58}}}},
    {var,{1702,61},'_Ts'},
    {var,{1702,66},'_I'}],
   [],
   [{debug_line,1703,724},{var,{1703,5},'Tl'}]},
  {clause,
   {1704,1},
   [{match,{1704,22},{atom,{1704,22},maps},{var,{1704,27},'Mod'}},
    {match,{1704,32},{atom,{1704,32},put},{var,{1704,36},'Name'}},
    {cons,
     {1704,42},
     {var,{1704,43},'Key'},
     {cons,
      {1704,47},
      {var,{1704,47},'Val'},
      {cons,{1704,51},{var,{1704,51},'Map'},{nil,{1704,54}}}}},
    {var,{1704,57},'Ts'},
    {var,{1704,61},'I'}],
   [],
   [{debug_line,1705,725},
    {'case',
     {1705,5},
     {call,
      {1705,10},
      {atom,{1705,10},concrete_type},
      [{var,{1705,24},'Map'},{var,{1705,29},'Ts'}]},
     [{clause,
       {1706,9},
       [{tuple,
         {1706,9},
         [{atom,{1706,9},t_map},{var,{1706,9},'_'},{var,{1706,9},'_'}]}],
       [],
       [{debug_line,1709,726},
        {match,
         {1709,13},
         {var,{1709,13},'Args'},
         {cons,
          {1709,20},
          {tuple,
           {1709,21},
           [{atom,{1709,21},b_literal},{atom,{1709,36},assoc}]},
          {cons,
           {1709,43},
           {var,{1709,43},'Map'},
           {cons,
            {1709,47},
            {var,{1709,47},'Key'},
            {cons,{1709,51},{var,{1709,51},'Val'},{nil,{1709,54}}}}}}},
        {debug_line,1710,727},
        {block,
         {1710,13},
         [{match,{1710,13},{var,{1710,13},rec94},{var,{1710,13},'I'}},
          {'case',
           {1710,21},
           {var,{1710,13},rec94},
           [{clause,
             {1710,21},
             [{tuple,
               {1710,21},
               [{atom,{1710,21},b_set},
                {var,{1710,21},'_'},
                {var,{1710,21},'_'},
                {var,{1710,21},'_'},
                {var,{1710,21},'_'}]}],
             [],
             [{call,
               {1710,21},
               {remote,
                {1710,21},
                {atom,{1710,21},erlang},
                {atom,{1710,21},setelement}},
               [{integer,{1710,21},4},
                {call,
                 {1710,32},
                 {remote,
                  {1710,32},
                  {atom,{1710,32},erlang},
                  {atom,{1710,32},setelement}},
                 [{integer,{1710,32},5},
                  {var,{1710,13},rec94},
                  {var,{1710,37},'Args'}]},
                {atom,{1710,24},put_map}]}]},
            {clause,
             [{generated,true},{location,{1710,21}}],
             [{var,[{generated,true},{location,{1710,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1710,21}}],
               {remote,
                [{generated,true},{location,{1710,21}}],
                {atom,[{generated,true},{location,{1710,21}}],erlang},
                {atom,[{generated,true},{location,{1710,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{1710,21}}],
                 [{atom,[{generated,true},{location,{1710,21}}],badrecord},
                  {var,{1710,13},rec94}]}]}]}]}]}]},
      {clause,
       {1711,9},
       [{var,{1711,9},'_'}],
       [],
       [{debug_line,1712,728},
        {call,
         {1712,13},
         {atom,{1712,13},simplify_pure_call},
         [{var,{1712,32},'Mod'},
          {var,{1712,37},'Name'},
          {block,0,
           [{cons,
             {1712,43},
             {var,{1712,44},'Key'},
             {cons,
              {1712,48},
              {var,{1712,48},'Val'},
              {cons,{1712,52},{var,{1712,52},'Map'},{nil,{1712,55}}}}}]},
          {var,{1712,58},'I'}]}]}]}]},
  {clause,
   {1714,1},
   [{var,{1714,22},'Mod'},
    {var,{1714,27},'Name'},
    {var,{1714,33},'Args'},
    {var,{1714,39},'_Ts'},
    {var,{1714,44},'I'}],
   [],
   [{debug_line,1715,729},
    {'case',
     {1715,5},
     {call,
      {1715,10},
      {remote,{1715,18},{atom,{1715,10},erl_bifs},{atom,{1715,19},is_pure}},
      [{var,{1715,27},'Mod'},
       {var,{1715,32},'Name'},
       {block,0,
        [{call,
          {1715,38},
          {remote,{1715,38},{atom,{1715,38},erlang},{atom,{1715,38},length}},
          [{var,{1715,45},'Args'}]}]}]},
     [{clause,
       {1716,9},
       [{atom,{1716,9},true}],
       [],
       [{debug_line,1717,730},
        {call,
         {1717,13},
         {atom,{1717,13},simplify_pure_call},
         [{var,{1717,32},'Mod'},
          {var,{1717,37},'Name'},
          {var,{1717,43},'Args'},
          {var,{1717,49},'I'}]}]},
      {clause,
       {1718,9},
       [{atom,{1718,9},false}],
       [],
       [{debug_line,1719,731},{var,{1719,13},'I'}]}]}]}]}.
{function,
 {1723,1},
 simplify_pure_call,4,
 [{clause,
   {1723,1},
   [{var,{1723,1},'_'},
    {var,{1723,1},'_'},
    {var,{1723,1},'_'},
    {var,{1723,1},'_'}],
   [[{call,
      {1723,1},
      {remote,{1723,1},{atom,{1723,1},fake},{atom,{1723,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1723,732},{atom,{1723,1},ignore}]},
  {clause,
   {1723,1},
   [{var,{1723,20},'Mod'},
    {var,{1723,25},'Name'},
    {var,{1723,31},'Args0'},
    {var,{1723,38},'I'}],
   [],
   [{debug_line,1724,733},
    {'case',
     {1724,5},
     {call,
      {1724,10},
      {atom,{1724,10},make_literal_list},
      [{var,{1724,28},'Args0'}]},
     [{clause,
       {1725,9},
       [{atom,{1725,9},none}],
       [],
       [{debug_line,1726,734},{var,{1726,13},'I'}]},
      {clause,
       {1727,9},
       [{var,{1727,9},'Args'}],
       [],
       [{debug_line,1729,735},
        {'try',
         {1729,13},
         [{call,
           {1729,17},
           {remote,{1729,17},{atom,{1729,17},erlang},{atom,{1729,17},apply}},
           [{var,{1729,23},'Mod'},
            {var,{1729,28},'Name'},
            {var,{1729,34},'Args'}]}],
         [{clause,
           {1730,17},
           [{var,{1730,17},'Val'}],
           [],
           [{debug_line,1731,736},
            {'case',
             {1731,21},
             {call,
              {1731,26},
              {remote,
               {1731,30},
               {atom,{1731,26},cerl},
               {atom,{1731,31},is_literal_term}},
              [{var,{1731,47},'Val'}]},
             [{clause,
               {1732,25},
               [{atom,{1732,25},true}],
               [],
               [{debug_line,1733,737},
                {tuple,
                 {1733,29},
                 [{atom,{1733,29},b_literal},{var,{1733,44},'Val'}]}]},
              {clause,
               {1734,25},
               [{atom,{1734,25},false}],
               [],
               [{debug_line,1737,738},{var,{1737,29},'I'}]}]}]}],
         [{clause,
           {1740,17},
           [{tuple,
             {1740,17},
             [{var,{1740,17},'_'},{var,{1740,19},'_'},{var,{1740,19},'_'}]}],
           [],
           [{debug_line,1743,739},{var,{1743,21},'I'}]}],
         []}]}]}]}]}.
{function,
    {1747,1},
    number_type,2,
    [{clause,
         {1747,1},
         [{var,{1747,1},'_'},{var,{1747,1},'_'}],
         [[{call,
               {1747,1},
               {remote,
                   {1747,1},
                   {atom,{1747,1},fake},
                   {atom,{1747,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1747,740},{atom,{1747,1},ignore}]},
     {clause,
         {1747,1},
         [{var,{1747,13},'V'},{var,{1747,16},'Ts'}],
         [],
         [{debug_line,1748,741},
          {call,
              {1748,5},
              {atom,{1748,5},number_type_1},
              [{block,0,
                   [{call,
                        {1748,19},
                        {atom,{1748,19},concrete_type},
                        [{var,{1748,33},'V'},{var,{1748,36},'Ts'}]}]}]}]}]}.
{function,
 {1750,1},
 number_type_1,1,
 [{clause,
   {1750,1},
   [{var,{1750,1},'_'}],
   [[{call,
      {1750,1},
      {remote,{1750,1},{atom,{1750,1},fake},{atom,{1750,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1750,742},{atom,{1750,1},ignore}]},
  {clause,
   {1750,1},
   [{atom,{1750,15},any}],
   [],
   [{debug_line,1751,743},
    {tuple,{1751,5},[{atom,{1751,5},t_number},{atom,{1751,5},any}]}]},
  {clause,
   {1752,1},
   [{var,{1752,15},'Type'}],
   [],
   [{debug_line,1753,744},
    {match,
     {1753,5},
     {var,{1753,5},'N'},
     {call,
      {1753,9},
      {remote,{1753,19},{atom,{1753,9},beam_types},{atom,{1753,20},meet}},
      [{var,{1753,25},'Type'},
       {block,0,
        [{tuple,
          {1753,31},
          [{atom,{1753,31},t_number},{atom,{1753,31},any}]}]}]}},
    {debug_line,1755,745},
    {match,
     {1755,5},
     {var,{1755,5},'List'},
     {'case',
      {1755,12},
      {call,
       {1755,17},
       {remote,{1755,27},{atom,{1755,17},beam_types},{atom,{1755,28},meet}},
       [{var,{1755,33},'Type'},
        {block,0,
         [{tuple,
           {1755,39},
           [{atom,{1755,39},t_list},
            {atom,{1755,39},any},
            {atom,{1755,39},any}]}]}]},
      [{clause,
        {1756,16},
        [{tuple,
          {1756,16},
          [{atom,{1756,16},t_cons},
           {var,{1756,29},'Head'},
           {var,{1756,45},'Tail'}]}],
        [],
        [{debug_line,1757,746},
         {call,
          {1757,20},
          {remote,{1757,30},{atom,{1757,20},beam_types},{atom,{1757,31},join}},
          [{block,0,
            [{call,
              {1757,36},
              {atom,{1757,36},number_type_1},
              [{var,{1757,50},'Head'}]}]},
           {block,0,
            [{call,
              {1757,57},
              {atom,{1757,57},number_type_1},
              [{var,{1757,71},'Tail'}]}]}]}]},
       {clause,
        {1758,16},
        [{tuple,
          {1758,16},
          [{atom,{1758,16},t_list},
           {var,{1758,29},'Head'},
           {var,{1758,45},'Tail'}]}],
        [],
        [{debug_line,1759,747},
         {call,
          {1759,20},
          {remote,{1759,30},{atom,{1759,20},beam_types},{atom,{1759,31},join}},
          [{block,0,
            [{call,
              {1759,36},
              {atom,{1759,36},number_type_1},
              [{var,{1759,50},'Head'}]}]},
           {block,0,
            [{call,
              {1759,57},
              {atom,{1759,57},number_type_1},
              [{var,{1759,71},'Tail'}]}]}]}]},
       {clause,
        {1760,16},
        [{atom,{1760,16},nil}],
        [],
        [{debug_line,1761,748},{atom,{1761,20},none}]},
       {clause,
        {1762,16},
        [{atom,{1762,16},none}],
        [],
        [{debug_line,1763,749},{atom,{1763,20},none}]}]}},
    {debug_line,1766,750},
    {match,
     {1766,5},
     {var,{1766,5},'Tup'},
     {'case',
      {1766,11},
      {call,
       {1766,16},
       {remote,{1766,26},{atom,{1766,16},beam_types},{atom,{1766,27},meet}},
       [{var,{1766,32},'Type'},
        {block,0,
         [{tuple,
           {1766,38},
           [{atom,{1766,38},t_tuple},
            {integer,{1766,38},0},
            {atom,{1766,38},false},
            {map,{1766,38},[]}]}]}]},
      [{clause,
        {1767,15},
        [{tuple,
          {1767,15},
          [{atom,{1767,15},t_tuple},
           {var,{1767,29},'Size'},
           {atom,{1767,40},true},
           {var,{1767,54},'ElemTypes'}]}],
        [[{op,
           {1768,42},
           '=:=',
           {call,
            {1768,22},
            {remote,
             {1768,22},
             {atom,{1768,22},erlang},
             {atom,{1768,22},map_size}},
            [{var,{1768,31},'ElemTypes'}]},
           {var,{1768,46},'Size'}}]],
        [{debug_line,1769,751},
         {call,
          {1769,19},
          {remote,{1769,29},{atom,{1769,19},beam_types},{atom,{1769,30},join}},
          [{block,0,
            [{debug_line,1770,752},
             {op,
              {1770,69},
              '++',
              {lc,
               {1769,35},
               {block,0,
                [{call,
                  {1769,36},
                  {atom,{1769,36},number_type_1},
                  [{var,{1769,50},'ET'}]}]},
               [{block,0,[{atom,{1770,45},true}]},
                {generate,
                 {1770,42},
                 {var,{1770,39},'ET'},
                 {call,
                  {1770,45},
                  {remote,
                   {1770,49},
                   {atom,{1770,45},maps},
                   {atom,{1770,50},values}},
                  [{var,{1770,57},'ElemTypes'}]}}]},
              {cons,{1770,72},{atom,{1770,73},none},{nil,{1770,77}}}}]}]}]},
       {clause,
        {1771,15},
        [{tuple,
          {1771,15},
          [{atom,{1771,15},t_tuple},
           {var,{1771,15},'_'},
           {var,{1771,15},'_'},
           {var,{1771,15},'_'}]}],
        [],
        [{debug_line,1772,753},
         {tuple,{1772,19},[{atom,{1772,19},t_number},{atom,{1772,19},any}]}]},
       {clause,
        {1773,15},
        [{tuple,
          {1773,15},
          [{atom,{1773,15},t_union},
           {var,{1773,15},'_'},
           {var,{1773,15},'_'},
           {var,{1773,15},'_'},
           {var,{1773,15},'_'},
           {var,{1773,15},'_'}]}],
        [],
        [{debug_line,1774,754},
         {tuple,{1774,19},[{atom,{1774,19},t_number},{atom,{1774,19},any}]}]},
       {clause,
        {1775,15},
        [{atom,{1775,15},none}],
        [],
        [{debug_line,1776,755},{atom,{1776,19},none}]}]}},
    {debug_line,1779,756},
    {match,
     {1779,5},
     {var,{1779,5},'Map'},
     {'case',
      {1779,11},
      {call,
       {1779,16},
       {remote,{1779,26},{atom,{1779,16},beam_types},{atom,{1779,27},meet}},
       [{var,{1779,32},'Type'},
        {block,0,
         [{tuple,
           {1779,38},
           [{atom,{1779,38},t_map},
            {atom,{1779,38},any},
            {atom,{1779,38},any}]}]}]},
      [{clause,
        {1780,15},
        [{tuple,
          {1780,15},
          [{atom,{1780,15},t_map},
           {var,{1780,15},'_'},
           {var,{1780,34},'MapValue'}]}],
        [],
        [{debug_line,1784,757},{var,{1784,19},'MapValue'}]},
       {clause,
        {1785,15},
        [{atom,{1785,15},none}],
        [],
        [{debug_line,1786,758},{atom,{1786,19},none}]}]}},
    {debug_line,1789,759},
    {match,
     {1789,5},
     {var,{1789,5},'Fun'},
     {'case',
      {1789,11},
      {call,
       {1789,16},
       {remote,{1789,26},{atom,{1789,16},beam_types},{atom,{1789,27},meet}},
       [{var,{1789,32},'Type'},
        {block,0,
         [{tuple,
           {1789,38},
           [{atom,{1789,38},t_fun},
            {atom,{1789,38},any},
            {atom,{1789,38},any},
            {atom,{1789,38},any}]}]}]},
      [{clause,
        {1790,15},
        [{tuple,
          {1790,15},
          [{atom,{1790,15},t_fun},
           {var,{1790,15},'_'},
           {var,{1790,15},'_'},
           {var,{1790,15},'_'}]}],
        [],
        [{debug_line,1793,760},
         {tuple,{1793,19},[{atom,{1793,19},t_number},{atom,{1793,19},any}]}]},
       {clause,
        {1794,15},
        [{atom,{1794,15},none}],
        [],
        [{debug_line,1795,761},{atom,{1795,19},none}]}]}},
    {debug_line,1798,762},
    {call,
     {1798,5},
     {remote,{1798,15},{atom,{1798,5},beam_types},{atom,{1798,16},join}},
     [{block,0,
       [{cons,
         {1798,21},
         {var,{1798,22},'N'},
         {cons,
          {1798,24},
          {var,{1798,24},'List'},
          {cons,
           {1798,29},
           {var,{1798,29},'Tup'},
           {cons,
            {1798,33},
            {var,{1798,33},'Map'},
            {cons,{1798,37},{var,{1798,37},'Fun'},{nil,{1798,40}}}}}}}]}]}]}]}.
{function,{1800,1},
          make_literal_list,1,
          [{clause,{1800,1},
                   [{var,{1800,1},'_'}],
                   [[{call,{1800,1},
                           {remote,{1800,1},
                                   {atom,{1800,1},fake},
                                   {atom,{1800,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1800,763},{atom,{1800,1},ignore}]},
           {clause,{1800,1},
                   [{var,{1800,19},'Args'}],
                   [],
                   [{debug_line,1801,764},
                    {call,{1801,5},
                          {atom,{1801,5},make_literal_list},
                          [{var,{1801,23},'Args'},{nil,{1801,29}}]}]}]}.
{function,
    {1803,1},
    make_literal_list,2,
    [{clause,
         {1803,1},
         [{var,{1803,1},'_'},{var,{1803,1},'_'}],
         [[{call,
               {1803,1},
               {remote,
                   {1803,1},
                   {atom,{1803,1},fake},
                   {atom,{1803,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1803,765},{atom,{1803,1},ignore}]},
     {clause,
         {1803,1},
         [{cons,
              {1803,19},
              {tuple,
                  {1803,20},
                  [{atom,{1803,20},b_literal},{var,{1803,35},'H'}]},
              {var,{1803,38},'T'}},
          {var,{1803,42},'Acc'}],
         [],
         [{debug_line,1804,766},
          {call,
              {1804,5},
              {atom,{1804,5},make_literal_list},
              [{var,{1804,23},'T'},
               {block,0,
                   [{cons,
                        {1804,26},
                        {var,{1804,27},'H'},
                        {var,{1804,29},'Acc'}}]}]}]},
     {clause,
         {1805,1},
         [{cons,{1805,19},{var,{1805,20},'_'},{var,{1805,22},'_'}},
          {var,{1805,26},'_'}],
         [],
         [{debug_line,1806,767},{atom,{1806,5},none}]},
     {clause,
         {1807,1},
         [{nil,{1807,19}},{var,{1807,23},'Acc'}],
         [],
         [{debug_line,1808,768},
          {call,
              {1808,5},
              {remote,{1808,5},{atom,{1808,5},lists},{atom,{1808,5},reverse}},
              [{var,{1808,13},'Acc'}]}]}]}.
{function,
    {1810,1},
    is_safe_bool_op,2,
    [{clause,
         {1810,1},
         [{var,{1810,1},'_'},{var,{1810,1},'_'}],
         [[{call,
               {1810,1},
               {remote,
                   {1810,1},
                   {atom,{1810,1},fake},
                   {atom,{1810,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1810,769},{atom,{1810,1},ignore}]},
     {clause,
         {1810,1},
         [{cons,
              {1810,17},
              {var,{1810,18},'LHS'},
              {cons,{1810,23},{var,{1810,23},'RHS'},{nil,{1810,26}}}},
          {var,{1810,29},'Ts'}],
         [],
         [{debug_line,1811,770},
          {match,
              {1811,5},
              {var,{1811,5},'LType'},
              {call,
                  {1811,13},
                  {atom,{1811,13},concrete_type},
                  [{var,{1811,27},'LHS'},{var,{1811,32},'Ts'}]}},
          {debug_line,1812,771},
          {match,
              {1812,5},
              {var,{1812,5},'RType'},
              {call,
                  {1812,13},
                  {atom,{1812,13},concrete_type},
                  [{var,{1812,27},'RHS'},{var,{1812,32},'Ts'}]}},
          {debug_line,1813,772},
          {'case',
              {1813,5},
              {call,
                  {1813,5},
                  {remote,
                      {1813,15},
                      {atom,{1813,5},beam_types},
                      {atom,{1813,16},is_boolean_type}},
                  [{var,{1813,32},'LType'}]},
              [{clause,
                   {1813,5},
                   [{atom,{1813,5},true}],
                   [],
                   [{debug_line,1814,773},
                    {call,
                        {1814,9},
                        {remote,
                            {1814,19},
                            {atom,{1814,9},beam_types},
                            {atom,{1814,20},is_boolean_type}},
                        [{var,{1814,36},'RType'}]}]},
               {clause,
                   {1813,5},
                   [{atom,{1813,5},false}],
                   [],
                   [{atom,{1813,5},false}]},
               {clause,
                   [{generated,true},{location,{1813,5}}],
                   [{var,{1813,5},cov1}],
                   [],
                   [{call,
                        {1813,5},
                        {remote,
                            {1813,5},
                            {atom,{1813,5},erlang},
                            {atom,{1813,5},error}},
                        [{block,0,
                             [{tuple,
                                  {1813,5},
                                  [{atom,{1813,5},badarg},
                                   {var,{1813,5},cov1}]}]}]}]}]}]}]}.
{function,
 {1816,1},
 eval_bif,3,
 [{clause,
   {1816,1},
   [{var,{1816,1},'_'},{var,{1816,1},'_'},{var,{1816,1},'_'}],
   [[{call,
      {1816,1},
      {remote,{1816,1},{atom,{1816,1},fake},{atom,{1816,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1816,774},{atom,{1816,1},ignore}]},
  {clause,
   {1816,1},
   [{match,
     {1816,10},
     {tuple,
      {1816,10},
      [{atom,{1816,10},b_set},
       {var,{1816,10},'_'},
       {var,{1816,10},'_'},
       {tuple,{1816,20},[{atom,{1816,21},bif},{var,{1816,25},'Bif'}]},
       {var,{1816,35},'Args'}]},
     {var,{1816,41},'I'}},
    {var,{1816,44},'Ts'},
    {var,{1816,48},'Ds'}],
   [],
   [{debug_line,1817,775},
    {match,
     {1817,5},
     {var,{1817,5},'Arity'},
     {call,
      {1817,13},
      {remote,{1817,13},{atom,{1817,13},erlang},{atom,{1817,13},length}},
      [{var,{1817,20},'Args'}]}},
    {debug_line,1818,776},
    {'case',
     {1818,5},
     {call,
      {1818,10},
      {remote,{1818,18},{atom,{1818,10},erl_bifs},{atom,{1818,19},is_pure}},
      [{atom,{1818,27},erlang},{var,{1818,35},'Bif'},{var,{1818,40},'Arity'}]},
     [{clause,
       {1819,9},
       [{atom,{1819,9},false}],
       [],
       [{debug_line,1820,777},{var,{1820,13},'I'}]},
      {clause,
       {1821,9},
       [{atom,{1821,9},true}],
       [],
       [{debug_line,1822,778},
        {'case',
         {1822,13},
         {call,
          {1822,18},
          {atom,{1822,18},make_literal_list},
          [{var,{1822,36},'Args'}]},
         [{clause,
           {1823,17},
           [{atom,{1823,17},none}],
           [],
           [{debug_line,1824,779},
            {call,
             {1824,21},
             {atom,{1824,21},eval_bif_1},
             [{var,{1824,32},'I'},
              {var,{1824,35},'Bif'},
              {var,{1824,40},'Ts'},
              {var,{1824,44},'Ds'}]}]},
          {clause,
           {1825,17},
           [{var,{1825,17},'LitArgs'}],
           [],
           [{debug_line,1826,780},
            {'try',
             {1826,21},
             [{call,
               {1826,25},
               {remote,
                {1826,25},
                {atom,{1826,25},erlang},
                {atom,{1826,25},apply}},
               [{atom,{1826,31},erlang},
                {var,{1826,39},'Bif'},
                {var,{1826,44},'LitArgs'}]}],
             [{clause,
               {1827,25},
               [{var,{1827,25},'Val'}],
               [],
               [{debug_line,1827,781},
                {tuple,
                 {1827,32},
                 [{atom,{1827,32},b_literal},{var,{1827,47},'Val'}]}]}],
             [{clause,
               {1829,25},
               [{tuple,
                 {1829,25},
                 [{atom,{1829,25},error},
                  {var,{1829,31},'_'},
                  {var,{1829,31},'_'}]}],
               [],
               [{debug_line,1829,782},{var,{1829,36},'I'}]}],
             []}]}]}]}]}]}]}.
{function,
 {1835,1},
 eval_bif_1,4,
 [{clause,
   {1835,1},
   [{var,{1835,1},'_'},
    {var,{1835,1},'_'},
    {var,{1835,1},'_'},
    {var,{1835,1},'_'}],
   [[{call,
      {1835,1},
      {remote,{1835,1},{atom,{1835,1},fake},{atom,{1835,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1835,783},{atom,{1835,1},ignore}]},
  {clause,
   {1835,1},
   [{match,
     {1835,12},
     {tuple,
      {1835,12},
      [{atom,{1835,12},b_set},
       {var,{1835,12},'_'},
       {var,{1835,12},'_'},
       {var,{1835,12},'_'},
       {var,{1835,24},'Args'}]},
     {var,{1835,30},'I'}},
    {var,{1835,33},'Op'},
    {var,{1835,37},'Ts'},
    {var,{1835,41},'Ds'}],
   [],
   [{debug_line,1836,784},
    {'case',
     {1836,5},
     {call,
      {1836,10},
      {atom,{1836,10},concrete_types},
      [{var,{1836,25},'Args'},{var,{1836,31},'Ts'}]},
     [{clause,
       {1837,9},
       [{cons,
         {1837,9},
         {tuple,{1837,10},[{atom,{1837,10},t_integer},{var,{1837,10},'_'}]},
         {cons,
          {1837,23},
          {tuple,
           {1837,23},
           [{atom,{1837,23},t_integer},
            {tuple,{1837,43},[{integer,{1837,44},0},{integer,{1837,46},0}]}]},
          {nil,{1837,49}}}}],
       [[{op,{1837,59},'=:=',{var,{1837,56},'Op'},{atom,{1837,63},'bor'}}],
        [{op,{1837,73},'=:=',{var,{1837,70},'Op'},{atom,{1837,77},'bxor'}}]],
       [{debug_line,1838,785},
        {match,
         {1838,13},
         {tuple,
          {1838,13},
          [{atom,{1838,13},b_set},
           {var,{1838,13},'_'},
           {var,{1838,13},'_'},
           {var,{1838,13},'_'},
           {cons,
            {1838,25},
            {var,{1838,26},'Result'},
            {cons,{1838,33},{var,{1838,33},'_'},{nil,{1838,34}}}}]},
         {var,{1838,39},'I'}},
        {debug_line,1839,786},
        {var,{1839,13},'Result'}]},
      {clause,
       {1840,9},
       [{cons,
         {1840,9},
         {tuple,{1840,10},[{atom,{1840,10},t_integer},{var,{1840,10},'_'}]},
         {cons,
          {1840,23},
          {tuple,
           {1840,23},
           [{atom,{1840,23},t_integer},
            {tuple,{1840,43},[{integer,{1840,44},0},{integer,{1840,46},0}]}]},
          {nil,{1840,49}}}}],
       [[{op,{1840,59},'=:=',{var,{1840,56},'Op'},{atom,{1840,63},'*'}}],
        [{op,{1840,71},'=:=',{var,{1840,68},'Op'},{atom,{1840,75},'band'}}]],
       [{debug_line,1841,787},
        {tuple,{1841,13},[{atom,{1841,13},b_literal},{integer,{1841,28},0}]}]},
      {clause,
       {1842,9},
       [{cons,
         {1842,9},
         {var,{1842,10},'T'},
         {cons,
          {1842,12},
          {tuple,
           {1842,12},
           [{atom,{1842,12},t_integer},
            {tuple,{1842,32},[{integer,{1842,33},0},{integer,{1842,35},0}]}]},
          {nil,{1842,38}}}}],
       [[{op,{1842,48},'=:=',{var,{1842,45},'Op'},{atom,{1842,52},'+'}}],
        [{op,{1842,60},'=:=',{var,{1842,57},'Op'},{atom,{1842,64},'-'}}]],
       [{debug_line,1843,788},
        {'case',
         {1843,13},
         {call,
          {1843,18},
          {remote,
           {1843,28},
           {atom,{1843,18},beam_types},
           {atom,{1843,29},is_numerical_type}},
          [{var,{1843,47},'T'}]},
         [{clause,
           {1844,17},
           [{atom,{1844,17},true}],
           [],
           [{debug_line,1845,789},
            {match,
             {1845,21},
             {tuple,
              {1845,21},
              [{atom,{1845,21},b_set},
               {var,{1845,21},'_'},
               {var,{1845,21},'_'},
               {var,{1845,21},'_'},
               {cons,
                {1845,33},
                {var,{1845,34},'Result'},
                {cons,{1845,41},{var,{1845,41},'_'},{nil,{1845,42}}}}]},
             {var,{1845,47},'I'}},
            {debug_line,1846,790},
            {var,{1846,21},'Result'}]},
          {clause,
           {1847,17},
           [{atom,{1847,17},false}],
           [],
           [{debug_line,1848,791},{var,{1848,21},'I'}]}]}]},
      {clause,
       {1850,9},
       [{cons,
         {1850,9},
         {var,{1850,10},'T'},
         {cons,
          {1850,12},
          {tuple,
           {1850,12},
           [{atom,{1850,12},t_integer},
            {tuple,{1850,32},[{integer,{1850,33},1},{integer,{1850,35},1}]}]},
          {nil,{1850,38}}}}],
       [[{op,{1850,48},'=:=',{var,{1850,45},'Op'},{atom,{1850,52},'*'}}],
        [{op,{1850,60},'=:=',{var,{1850,57},'Op'},{atom,{1850,64},'div'}}]],
       [{debug_line,1851,792},
        {'case',
         {1851,13},
         {call,
          {1851,18},
          {remote,
           {1851,28},
           {atom,{1851,18},beam_types},
           {atom,{1851,29},is_numerical_type}},
          [{var,{1851,47},'T'}]},
         [{clause,
           {1852,17},
           [{atom,{1852,17},true}],
           [],
           [{debug_line,1853,793},
            {match,
             {1853,21},
             {tuple,
              {1853,21},
              [{atom,{1853,21},b_set},
               {var,{1853,21},'_'},
               {var,{1853,21},'_'},
               {var,{1853,21},'_'},
               {cons,
                {1853,33},
                {var,{1853,34},'Result'},
                {cons,{1853,41},{var,{1853,41},'_'},{nil,{1853,42}}}}]},
             {var,{1853,47},'I'}},
            {debug_line,1854,794},
            {var,{1854,21},'Result'}]},
          {clause,
           {1855,17},
           [{atom,{1855,17},false}],
           [],
           [{debug_line,1856,795},{var,{1856,21},'I'}]}]}]},
      {clause,
       {1858,9},
       [{cons,
         {1858,9},
         {tuple,{1858,10},[{atom,{1858,10},t_integer},{var,{1858,10},'_'}]},
         {cons,
          {1858,23},
          {tuple,{1858,23},[{atom,{1858,23},t_integer},{var,{1858,23},'_'}]},
          {nil,{1858,35}}}}],
       [],
       [{debug_line,1859,796},
        {call,
         {1859,13},
         {atom,{1859,13},reassociate},
         [{var,{1859,25},'I'},{var,{1859,28},'Ts'},{var,{1859,32},'Ds'}]}]},
      {clause,
       {1860,9},
       [{var,{1860,9},'_'}],
       [],
       [{debug_line,1861,797},{var,{1861,13},'I'}]}]}]}]}.
{function,
 {1864,1},
 reassociate,3,
 [{clause,
   {1864,1},
   [{var,{1864,1},'_'},{var,{1864,1},'_'},{var,{1864,1},'_'}],
   [[{call,
      {1864,1},
      {remote,{1864,1},{atom,{1864,1},fake},{atom,{1864,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1864,798},{atom,{1864,1},ignore}]},
  {clause,
   {1864,1},
   [{match,
     {1864,13},
     {tuple,
      {1864,13},
      [{atom,{1864,13},b_set},
       {var,{1864,13},'_'},
       {var,{1864,13},'_'},
       {tuple,{1864,23},[{atom,{1864,24},bif},{var,{1864,28},'OpB'}]},
       {cons,
        {1864,38},
        {match,
         {1864,39},
         {tuple,{1864,39},[{atom,{1864,39},b_var},{var,{1864,39},'_'}]},
         {var,{1864,48},'V0'}},
        {cons,
         {1864,51},
         {tuple,{1864,51},[{atom,{1864,51},b_literal},{var,{1864,66},'B0'}]},
         {nil,{1864,69}}}}]},
     {var,{1864,72},'I'}},
    {var,{1864,75},'_Ts'},
    {var,{1864,80},'Ds'}],
   [[{op,{1865,12},'=:=',{var,{1865,8},'OpB'},{atom,{1865,16},'+'}}],
    [{op,{1865,25},'=:=',{var,{1865,21},'OpB'},{atom,{1865,29},'-'}}]],
   [{debug_line,1866,799},
    {'case',
     {1866,5},
     {call,
      {1866,10},
      {remote,{1866,10},{atom,{1866,10},erlang},{atom,{1866,10},map_get}},
      [{var,{1866,18},'V0'},{var,{1866,22},'Ds'}]},
     [{clause,
       {1867,9},
       [{tuple,
         {1867,9},
         [{atom,{1867,9},b_set},
          {var,{1867,9},'_'},
          {var,{1867,9},'_'},
          {tuple,{1867,19},[{atom,{1867,20},bif},{var,{1867,24},'OpA'}]},
          {cons,
           {1867,34},
           {match,
            {1867,35},
            {tuple,{1867,35},[{atom,{1867,35},b_var},{var,{1867,35},'_'}]},
            {var,{1867,44},'V'}},
           {cons,
            {1867,46},
            {tuple,
             {1867,46},
             [{atom,{1867,46},b_literal},{var,{1867,61},'A0'}]},
            {nil,{1867,64}}}}]}],
       [[{op,{1868,20},'=:=',{var,{1868,16},'OpA'},{atom,{1868,24},'+'}}],
        [{op,{1868,33},'=:=',{var,{1868,29},'OpA'},{atom,{1868,37},'-'}}]],
       [{debug_line,1869,800},
        {match,
         {1869,13},
         {var,{1869,13},'A'},
         {call,
          {1869,17},
          {remote,{1869,23},{atom,{1869,17},erlang},{var,{1869,24},'OpA'}},
          [{var,{1869,28},'A0'}]}},
        {debug_line,1870,801},
        {match,
         {1870,13},
         {var,{1870,13},'B'},
         {call,
          {1870,17},
          {remote,{1870,23},{atom,{1870,17},erlang},{var,{1870,24},'OpB'}},
          [{var,{1870,28},'B0'}]}},
        {debug_line,1871,802},
        {'case',
         {1871,13},
         {op,{1871,20},'+',{var,{1871,18},'A'},{var,{1871,22},'B'}},
         [{clause,
           {1872,17},
           [{var,{1872,17},'Combined'}],
           [[{op,
              {1872,40},
              '<',
              {var,{1872,31},'Combined'},
              {integer,{1872,42},0}}]],
           [{debug_line,1873,803},
            {block,
             {1873,21},
             [{match,
               {1873,42},
               {var,{1873,42},rec95},
               {cons,
                {1873,47},
                {var,{1873,48},'V'},
                {cons,
                 {1873,50},
                 {tuple,
                  {1873,50},
                  [{atom,{1873,50},b_literal},
                   {op,{1873,65},'-',{var,{1873,66},'Combined'}}]},
                 {nil,{1873,75}}}}},
              {match,{1873,21},{var,{1873,21},rec96},{var,{1873,21},'I'}},
              {'case',
               {1873,29},
               {var,{1873,21},rec96},
               [{clause,
                 {1873,29},
                 [{tuple,
                   {1873,29},
                   [{atom,{1873,29},b_set},
                    {var,{1873,29},'_'},
                    {var,{1873,29},'_'},
                    {var,{1873,29},'_'},
                    {var,{1873,29},'_'}]}],
                 [],
                 [{call,
                   {1873,29},
                   {remote,
                    {1873,29},
                    {atom,{1873,29},erlang},
                    {atom,{1873,29},setelement}},
                   [{integer,{1873,29},4},
                    {call,
                     {1873,42},
                     {remote,
                      {1873,42},
                      {atom,{1873,42},erlang},
                      {atom,{1873,42},setelement}},
                     [{integer,{1873,42},5},
                      {var,{1873,21},rec96},
                      {var,{1873,42},rec95}]},
                    {tuple,
                     {1873,32},
                     [{atom,{1873,33},bif},{atom,{1873,37},'-'}]}]}]},
                {clause,
                 [{generated,true},{location,{1873,29}}],
                 [{var,[{generated,true},{location,{1873,29}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1873,29}}],
                   {remote,
                    [{generated,true},{location,{1873,29}}],
                    {atom,[{generated,true},{location,{1873,29}}],erlang},
                    {atom,[{generated,true},{location,{1873,29}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1873,29}}],
                     [{atom,[{generated,true},{location,{1873,29}}],badrecord},
                      {var,{1873,21},rec96}]}]}]}]}]}]},
          {clause,
           {1874,17},
           [{var,{1874,17},'Combined'}],
           [[{op,
              {1874,40},
              '>=',
              {var,{1874,31},'Combined'},
              {integer,{1874,43},0}}]],
           [{debug_line,1875,804},
            {block,
             {1875,21},
             [{match,
               {1875,42},
               {var,{1875,42},rec97},
               {cons,
                {1875,47},
                {var,{1875,48},'V'},
                {cons,
                 {1875,50},
                 {tuple,
                  {1875,50},
                  [{atom,{1875,50},b_literal},{var,{1875,65},'Combined'}]},
                 {nil,{1875,74}}}}},
              {match,{1875,21},{var,{1875,21},rec98},{var,{1875,21},'I'}},
              {'case',
               {1875,29},
               {var,{1875,21},rec98},
               [{clause,
                 {1875,29},
                 [{tuple,
                   {1875,29},
                   [{atom,{1875,29},b_set},
                    {var,{1875,29},'_'},
                    {var,{1875,29},'_'},
                    {var,{1875,29},'_'},
                    {var,{1875,29},'_'}]}],
                 [],
                 [{call,
                   {1875,29},
                   {remote,
                    {1875,29},
                    {atom,{1875,29},erlang},
                    {atom,{1875,29},setelement}},
                   [{integer,{1875,29},4},
                    {call,
                     {1875,42},
                     {remote,
                      {1875,42},
                      {atom,{1875,42},erlang},
                      {atom,{1875,42},setelement}},
                     [{integer,{1875,42},5},
                      {var,{1875,21},rec98},
                      {var,{1875,42},rec97}]},
                    {tuple,
                     {1875,32},
                     [{atom,{1875,33},bif},{atom,{1875,37},'+'}]}]}]},
                {clause,
                 [{generated,true},{location,{1875,29}}],
                 [{var,[{generated,true},{location,{1875,29}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{1875,29}}],
                   {remote,
                    [{generated,true},{location,{1875,29}}],
                    {atom,[{generated,true},{location,{1875,29}}],erlang},
                    {atom,[{generated,true},{location,{1875,29}}],error}},
                   [{tuple,
                     [{generated,true},{location,{1875,29}}],
                     [{atom,[{generated,true},{location,{1875,29}}],badrecord},
                      {var,{1875,21},rec98}]}]}]}]}]}]}]}]},
      {clause,
       {1877,9},
       [{tuple,
         {1877,9},
         [{atom,{1877,9},b_set},
          {var,{1877,9},'_'},
          {var,{1877,9},'_'},
          {var,{1877,9},'_'},
          {var,{1877,9},'_'}]}],
       [],
       [{debug_line,1878,805},{var,{1878,13},'I'}]}]}]},
  {clause,
   {1880,1},
   [{var,{1880,13},'I'},{var,{1880,16},'_Ts'},{var,{1880,21},'_Ds'}],
   [],
   [{debug_line,1880,806},{var,{1880,29},'I'}]}]}.
{function,{1882,1},
          simplify_args,3,
          [{clause,{1882,1},
                   [{var,{1882,1},'_'},{var,{1882,1},'_'},{var,{1882,1},'_'}],
                   [[{call,{1882,1},
                           {remote,{1882,1},
                                   {atom,{1882,1},fake},
                                   {atom,{1882,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1882,807},{atom,{1882,1},ignore}]},
           {clause,{1882,1},
                   [{var,{1882,15},'Args'},
                    {var,{1882,21},'Ts'},
                    {var,{1882,25},'Sub'}],
                   [],
                   [{debug_line,1883,808},
                    {lc,{1883,5},
                        {block,0,
                               [{call,{1883,6},
                                      {atom,{1883,6},simplify_arg},
                                      [{var,{1883,19},'Arg'},
                                       {var,{1883,24},'Ts'},
                                       {var,{1883,28},'Sub'}]}]},
                        [{block,0,[{atom,{1883,43},true}]},
                         {generate,{1883,40},
                                   {var,{1883,36},'Arg'},
                                   {var,{1883,43},'Args'}}]}]}]}.
{function,
    {1885,1},
    simplify_arg,3,
    [{clause,
         {1885,1},
         [{var,{1885,1},'_'},{var,{1885,1},'_'},{var,{1885,1},'_'}],
         [[{call,
               {1885,1},
               {remote,
                   {1885,1},
                   {atom,{1885,1},fake},
                   {atom,{1885,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1885,809},{atom,{1885,1},ignore}]},
     {clause,
         {1885,1},
         [{match,
              {1885,14},
              {tuple,{1885,14},[{atom,{1885,14},b_var},{var,{1885,14},'_'}]},
              {var,{1885,23},'Arg0'}},
          {var,{1885,29},'Ts'},
          {var,{1885,33},'Sub'}],
         [],
         [{debug_line,1886,810},
          {'case',
              {1886,5},
              {call,
                  {1886,10},
                  {atom,{1886,10},sub_arg},
                  [{var,{1886,18},'Arg0'},{var,{1886,24},'Sub'}]},
              [{clause,
                   {1887,9},
                   [{match,
                        {1887,9},
                        {tuple,
                            {1887,9},
                            [{atom,{1887,9},b_literal},{var,{1887,9},'_'}]},
                        {var,{1887,22},'LitArg'}}],
                   [],
                   [{debug_line,1888,811},{var,{1888,13},'LitArg'}]},
               {clause,
                   {1889,9},
                   [{match,
                        {1889,9},
                        {tuple,
                            {1889,9},
                            [{atom,{1889,9},b_var},{var,{1889,9},'_'}]},
                        {var,{1889,18},'Arg'}}],
                   [],
                   [{debug_line,1890,812},
                    {'case',
                        {1890,13},
                        {call,
                            {1890,18},
                            {remote,
                                {1890,28},
                                {atom,{1890,18},beam_types},
                                {atom,{1890,29},get_singleton_value}},
                            [{block,0,
                                 [{call,
                                      {1890,49},
                                      {atom,{1890,49},concrete_type},
                                      [{var,{1890,63},'Arg'},
                                       {var,{1890,68},'Ts'}]}]}]},
                        [{clause,
                             {1891,17},
                             [{tuple,
                                  {1891,17},
                                  [{atom,{1891,18},ok},
                                   {var,{1891,22},'Val'}]}],
                             [],
                             [{debug_line,1891,813},
                              {tuple,
                                  {1891,30},
                                  [{atom,{1891,30},b_literal},
                                   {var,{1891,45},'Val'}]}]},
                         {clause,
                             {1892,17},
                             [{atom,{1892,17},error}],
                             [],
                             [{debug_line,1892,814},
                              {var,{1892,26},'Arg'}]}]}]}]}]},
     {clause,
         {1895,1},
         [{match,
              {1895,14},
              {tuple,
                  {1895,14},
                  [{atom,{1895,14},b_remote},
                   {var,{1895,28},'Mod'},
                   {var,{1895,37},'Name'},
                   {var,{1895,14},'_'}]},
              {var,{1895,43},'Rem'}},
          {var,{1895,48},'Ts'},
          {var,{1895,52},'Sub'}],
         [],
         [{debug_line,1896,815},
          {block,
              {1896,5},
              [{match,
                   {1896,18},
                   {var,{1896,18},rec99},
                   {call,
                       {1896,22},
                       {atom,{1896,22},simplify_arg},
                       [{var,{1896,35},'Mod'},
                        {var,{1896,40},'Ts'},
                        {var,{1896,44},'Sub'}]}},
               {match,
                   {1897,18},
                   {var,{1897,18},rec100},
                   {call,
                       {1897,23},
                       {atom,{1897,23},simplify_arg},
                       [{var,{1897,36},'Name'},
                        {var,{1897,42},'Ts'},
                        {var,{1897,46},'Sub'}]}},
               {match,{1896,5},{var,{1896,5},rec101},{var,{1896,5},'Rem'}},
               {'case',
                   {1896,18},
                   {var,{1896,5},rec101},
                   [{clause,
                        {1896,18},
                        [{tuple,
                             {1896,18},
                             [{atom,{1896,18},b_remote},
                              {var,{1896,18},'_'},
                              {var,{1896,18},'_'},
                              {var,{1896,18},'_'}]}],
                        [],
                        [{call,
                             {1896,18},
                             {remote,
                                 {1896,18},
                                 {atom,{1896,18},erlang},
                                 {atom,{1896,18},setelement}},
                             [{integer,{1896,18},2},
                              {call,
                                  {1897,18},
                                  {remote,
                                      {1897,18},
                                      {atom,{1897,18},erlang},
                                      {atom,{1897,18},setelement}},
                                  [{integer,{1897,18},3},
                                   {var,{1896,5},rec101},
                                   {var,{1897,18},rec100}]},
                              {var,{1896,18},rec99}]}]},
                    {clause,
                        [{generated,true},{location,{1896,18}}],
                        [{var,[{generated,true},{location,{1896,18}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{1896,18}}],
                             {remote,
                                 [{generated,true},{location,{1896,18}}],
                                 {atom,
                                     [{generated,true},{location,{1896,18}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{1896,18}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{1896,18}}],
                                  [{atom,
                                       [{generated,true},{location,{1896,18}}],
                                       badrecord},
                                   {var,{1896,5},rec101}]}]}]}]}]}]},
     {clause,
         {1898,1},
         [{var,{1898,14},'Arg'},{var,{1898,19},'_Ts'},{var,{1898,24},'_Sub'}],
         [],
         [{debug_line,1898,816},{var,{1898,33},'Arg'}]}]}.
{function,
    {1900,1},
    sub_arg,2,
    [{clause,
         {1900,1},
         [{var,{1900,1},'_'},{var,{1900,1},'_'}],
         [[{call,
               {1900,1},
               {remote,
                   {1900,1},
                   {atom,{1900,1},fake},
                   {atom,{1900,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1900,817},{atom,{1900,1},ignore}]},
     {clause,
         {1900,1},
         [{match,
              {1900,9},
              {tuple,{1900,9},[{atom,{1900,9},b_var},{var,{1900,9},'_'}]},
              {var,{1900,18},'Old'}},
          {var,{1900,23},'Sub'}],
         [],
         [{debug_line,1901,818},
          {'case',
              {1901,5},
              {var,{1901,10},'Sub'},
              [{clause,
                   {1902,9},
                   [{map,
                        {1902,9},
                        [{map_field_exact,
                             {1902,14},
                             {var,{1902,11},'Old'},
                             {var,{1902,16},'New'}}]}],
                   [],
                   [{debug_line,1902,819},{var,{1902,24},'New'}]},
               {clause,
                   {1903,9},
                   [{map,{1903,9},[]}],
                   [],
                   [{debug_line,1903,820},{var,{1903,16},'Old'}]}]}]}]}.
{function,
    {1906,1},
    is_float_op,2,
    [{clause,
         {1906,1},
         [{var,{1906,1},'_'},{var,{1906,1},'_'}],
         [[{call,
               {1906,1},
               {remote,
                   {1906,1},
                   {atom,{1906,1},fake},
                   {atom,{1906,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1906,821},{atom,{1906,1},ignore}]},
     {clause,
         {1906,1},
         [{atom,{1906,13},'-'},
          {cons,
              {1906,18},
              {tuple,{1906,19},[{atom,{1906,19},t_float},{var,{1906,19},'_'}]},
              {nil,{1906,29}}}],
         [],
         [{debug_line,1907,822},{atom,{1907,5},true}]},
     {clause,
         {1908,1},
         [{atom,{1908,13},'/'},
          {cons,
              {1908,18},
              {var,{1908,19},'_'},
              {cons,{1908,21},{var,{1908,21},'_'},{nil,{1908,22}}}}],
         [],
         [{debug_line,1909,823},{atom,{1909,5},true}]},
     {clause,
         {1910,1},
         [{var,{1910,13},'Op'},
          {cons,
              {1910,17},
              {tuple,{1910,18},[{atom,{1910,18},t_float},{var,{1910,18},'_'}]},
              {cons,{1910,29},{var,{1910,29},'_Other'},{nil,{1910,35}}}}],
         [],
         [{debug_line,1911,824},
          {call,
              {1911,5},
              {atom,{1911,5},is_float_op_1},
              [{var,{1911,19},'Op'}]}]},
     {clause,
         {1912,1},
         [{var,{1912,13},'Op'},
          {cons,
              {1912,17},
              {var,{1912,18},'_Other'},
              {cons,
                  {1912,25},
                  {tuple,
                      {1912,25},
                      [{atom,{1912,25},t_float},{var,{1912,25},'_'}]},
                  {nil,{1912,35}}}}],
         [],
         [{debug_line,1913,825},
          {call,
              {1913,5},
              {atom,{1913,5},is_float_op_1},
              [{var,{1913,19},'Op'}]}]},
     {clause,
         {1914,1},
         [{var,{1914,13},'_'},{var,{1914,16},'_'}],
         [],
         [{debug_line,1914,826},{atom,{1914,22},false}]}]}.
{function,{1916,1},
          is_float_op_1,1,
          [{clause,{1916,1},
                   [{var,{1916,1},'_'}],
                   [[{call,{1916,1},
                           {remote,{1916,1},
                                   {atom,{1916,1},fake},
                                   {atom,{1916,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1916,827},{atom,{1916,1},ignore}]},
           {clause,{1916,1},
                   [{atom,{1916,15},'+'}],
                   [],
                   [{debug_line,1916,828},{atom,{1916,23},true}]},
           {clause,{1917,1},
                   [{atom,{1917,15},'-'}],
                   [],
                   [{debug_line,1917,829},{atom,{1917,23},true}]},
           {clause,{1918,1},
                   [{atom,{1918,15},'*'}],
                   [],
                   [{debug_line,1918,830},{atom,{1918,23},true}]},
           {clause,{1919,1},
                   [{var,{1919,15},'_'}],
                   [],
                   [{debug_line,1919,831},{atom,{1919,21},false}]}]}.
{function,{1921,1},
          anno_float_arg,1,
          [{clause,{1921,1},
                   [{var,{1921,1},'_'}],
                   [[{call,{1921,1},
                           {remote,{1921,1},
                                   {atom,{1921,1},fake},
                                   {atom,{1921,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1921,832},{atom,{1921,1},ignore}]},
           {clause,{1921,1},
                   [{tuple,{1921,16},
                           [{atom,{1921,16},t_float},{var,{1921,16},'_'}]}],
                   [],
                   [{debug_line,1921,833},{atom,{1921,31},float}]},
           {clause,{1922,1},
                   [{var,{1922,16},'_'}],
                   [],
                   [{debug_line,1922,834},{atom,{1922,22},convert}]}]}.
{function,{1930,1},
          return_type,2,
          [{clause,{1930,1},
                   [{var,{1930,1},'_'},{var,{1930,1},'_'}],
                   [[{call,{1930,1},
                           {remote,{1930,1},
                                   {atom,{1930,1},fake},
                                   {atom,{1930,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1930,835},{atom,{1930,1},ignore}]},
           {clause,{1930,1},
                   [{var,{1930,13},'SuccTypes0'},{var,{1930,25},'CallArgs0'}],
                   [],
                   [{debug_line,1931,836},
                    {match,{1931,5},
                           {var,{1931,5},'SuccTypes'},
                           {call,{1931,17},
                                 {atom,{1931,17},st_filter_reachable},
                                 [{var,{1931,37},'SuccTypes0'},
                                  {var,{1931,49},'CallArgs0'},
                                  {nil,{1931,60}},
                                  {nil,{1931,64}}]}},
                    {debug_line,1932,837},
                    {call,{1932,5},
                          {atom,{1932,5},st_join_return_types},
                          [{var,{1932,26},'SuccTypes'},
                           {atom,{1932,37},none}]}]}]}.
{function,
    {1934,1},
    st_filter_reachable,4,
    [{clause,
         {1934,1},
         [{var,{1934,1},'_'},
          {var,{1934,1},'_'},
          {var,{1934,1},'_'},
          {var,{1934,1},'_'}],
         [[{call,
               {1934,1},
               {remote,
                   {1934,1},
                   {atom,{1934,1},fake},
                   {atom,{1934,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1934,838},{atom,{1934,1},ignore}]},
     {clause,
         {1934,1},
         [{cons,
              {1934,21},
              {match,
                  {1934,22},
                  {tuple,
                      {1934,22},
                      [{var,{1934,23},'SuccArgs'},
                       {tuple,
                           {1934,33},
                           [{atom,{1934,34},call_self},
                            {var,{1934,45},'SelfArgs'}]}]},
                  {var,{1934,56},'SuccType'}},
              {var,{1934,67},'Rest'}},
          {var,{1935,21},'CallArgs0'},
          {var,{1935,32},'Deferred'},
          {var,{1935,42},'Acc'}],
         [],
         [{debug_line,1936,839},
          {'case',
              {1936,5},
              {call,
                  {1936,10},
                  {atom,{1936,10},st_is_reachable},
                  [{var,{1936,26},'SuccArgs'},{var,{1936,36},'CallArgs0'}]},
              [{clause,
                   {1937,9},
                   [{atom,{1937,9},true}],
                   [],
                   [{debug_line,1941,840},
                    {match,
                        {1941,13},
                        {var,{1941,13},'CallArgs'},
                        {call,
                            {1941,24},
                            {atom,{1941,24},parallel_join},
                            [{var,{1941,38},'SelfArgs'},
                             {var,{1941,48},'CallArgs0'}]}},
                    {debug_line,1942,841},
                    {call,
                        {1942,13},
                        {atom,{1942,13},st_filter_reachable},
                        [{var,{1942,33},'Rest'},
                         {var,{1942,39},'CallArgs'},
                         {var,{1942,49},'Deferred'},
                         {var,{1942,59},'Acc'}]}]},
               {clause,
                   {1943,9},
                   [{atom,{1943,9},false}],
                   [],
                   [{debug_line,1946,842},
                    {call,
                        {1946,13},
                        {atom,{1946,13},st_filter_reachable},
                        [{var,{1946,33},'Rest'},
                         {var,{1946,39},'CallArgs0'},
                         {block,0,
                             [{cons,
                                  {1946,50},
                                  {var,{1946,51},'SuccType'},
                                  {var,{1946,62},'Deferred'}}]},
                         {var,{1946,73},'Acc'}]}]}]}]},
     {clause,
         {1948,1},
         [{cons,{1948,21},{var,{1948,22},'SuccType'},{var,{1948,33},'Rest'}},
          {var,{1948,40},'CallArgs'},
          {var,{1948,50},'Deferred'},
          {var,{1948,60},'Acc'}],
         [],
         [{debug_line,1949,843},
          {call,
              {1949,5},
              {atom,{1949,5},st_filter_reachable},
              [{var,{1949,25},'Rest'},
               {var,{1949,31},'CallArgs'},
               {var,{1949,41},'Deferred'},
               {block,0,
                   [{cons,
                        {1949,51},
                        {var,{1949,52},'SuccType'},
                        {var,{1949,63},'Acc'}}]}]}]},
     {clause,
         {1950,1},
         [{nil,{1950,21}},
          {var,{1950,25},'CallArgs'},
          {var,{1950,35},'Deferred'},
          {var,{1950,45},'Acc'}],
         [],
         [{debug_line,1951,844},
          {'case',
              {1951,5},
              {call,
                  {1951,10},
                  {atom,{1951,10},st_any_reachable},
                  [{var,{1951,27},'Deferred'},{var,{1951,37},'CallArgs'}]},
              [{clause,
                   {1952,9},
                   [{atom,{1952,9},true}],
                   [],
                   [{debug_line,1955,845},
                    {call,
                        {1955,13},
                        {atom,{1955,13},st_filter_reachable},
                        [{var,{1955,33},'Deferred'},
                         {var,{1955,43},'CallArgs'},
                         {nil,{1955,53}},
                         {var,{1955,57},'Acc'}]}]},
               {clause,
                   {1956,9},
                   [{atom,{1956,9},false}],
                   [],
                   [{debug_line,1960,846},
                    {lc,{1960,13},
                        {block,0,[{var,{1960,14},'ST'}]},
                        [{block,0,[{atom,{1960,41},true}]},
                         {generate_strict,
                             {1960,37},
                             {match,
                                 {1960,20},
                                 {tuple,
                                     {1960,20},
                                     [{var,{1960,21},'SuccArgs'},
                                      {var,{1960,31},'_'}]},
                                 {var,{1960,34},'ST'}},
                             {var,{1960,41},'Acc'}},
                         {block,0,[{atom,{1960,46},true}]},
                         {call,
                             {1960,46},
                             {atom,{1960,46},st_is_reachable},
                             [{var,{1960,62},'SuccArgs'},
                              {var,{1960,72},'CallArgs'}]}]}]}]}]}]}.
{function,
    {1963,1},
    st_join_return_types,2,
    [{clause,
         {1963,1},
         [{var,{1963,1},'_'},{var,{1963,1},'_'}],
         [[{call,
               {1963,1},
               {remote,
                   {1963,1},
                   {atom,{1963,1},fake},
                   {atom,{1963,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1963,847},{atom,{1963,1},ignore}]},
     {clause,
         {1963,1},
         [{cons,
              {1963,22},
              {tuple,
                  {1963,23},
                  [{var,{1963,24},'_SuccArgs'},{var,{1963,35},'SuccRet'}]},
              {var,{1963,46},'Rest'}},
          {var,{1963,53},'Acc0'}],
         [],
         [{debug_line,1964,848},
          {call,
              {1964,5},
              {atom,{1964,5},st_join_return_types},
              [{var,{1964,26},'Rest'},
               {block,0,
                   [{call,
                        {1964,32},
                        {remote,
                            {1964,42},
                            {atom,{1964,32},beam_types},
                            {atom,{1964,43},join}},
                        [{var,{1964,48},'SuccRet'},
                         {var,{1964,57},'Acc0'}]}]}]}]},
     {clause,
         {1965,1},
         [{nil,{1965,22}},{var,{1965,26},'Acc'}],
         [],
         [{debug_line,1966,849},{var,{1966,5},'Acc'}]}]}.
{function,
    {1968,1},
    st_any_reachable,2,
    [{clause,
         {1968,1},
         [{var,{1968,1},'_'},{var,{1968,1},'_'}],
         [[{call,
               {1968,1},
               {remote,
                   {1968,1},
                   {atom,{1968,1},fake},
                   {atom,{1968,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1968,850},{atom,{1968,1},ignore}]},
     {clause,
         {1968,1},
         [{cons,
              {1968,18},
              {tuple,
                  {1968,19},
                  [{var,{1968,20},'SuccArgs'},{var,{1968,30},'_'}]},
              {var,{1968,35},'SuccType'}},
          {var,{1968,46},'CallArgs'}],
         [],
         [{debug_line,1969,851},
          {'case',
              {1969,5},
              {call,
                  {1969,10},
                  {atom,{1969,10},st_is_reachable},
                  [{var,{1969,26},'SuccArgs'},{var,{1969,36},'CallArgs'}]},
              [{clause,
                   {1970,9},
                   [{atom,{1970,9},true}],
                   [],
                   [{debug_line,1970,852},{atom,{1970,17},true}]},
               {clause,
                   {1971,9},
                   [{atom,{1971,9},false}],
                   [],
                   [{debug_line,1971,853},
                    {call,
                        {1971,18},
                        {atom,{1971,18},st_any_reachable},
                        [{var,{1971,35},'SuccType'},
                         {var,{1971,45},'CallArgs'}]}]}]}]},
     {clause,
         {1973,1},
         [{nil,{1973,18}},{var,{1973,22},'_CallArgs'}],
         [],
         [{debug_line,1974,854},{atom,{1974,5},false}]}]}.
{function,
    {1976,1},
    st_is_reachable,2,
    [{clause,
         {1976,1},
         [{var,{1976,1},'_'},{var,{1976,1},'_'}],
         [[{call,
               {1976,1},
               {remote,
                   {1976,1},
                   {atom,{1976,1},fake},
                   {atom,{1976,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1976,855},{atom,{1976,1},ignore}]},
     {clause,
         {1976,1},
         [{cons,{1976,17},{var,{1976,18},'A'},{var,{1976,22},'SuccArgs'}},
          {cons,{1976,33},{var,{1976,34},'B'},{var,{1976,38},'CallArgs'}}],
         [],
         [{debug_line,1977,856},
          {'case',
              {1977,5},
              {call,
                  {1977,10},
                  {remote,
                      {1977,20},
                      {atom,{1977,10},beam_types},
                      {atom,{1977,21},meet}},
                  [{var,{1977,26},'A'},{var,{1977,29},'B'}]},
              [{clause,
                   {1978,9},
                   [{atom,{1978,9},none}],
                   [],
                   [{debug_line,1978,857},{atom,{1978,17},false}]},
               {clause,
                   {1979,9},
                   [{var,{1979,9},'_Other'}],
                   [],
                   [{debug_line,1979,858},
                    {call,
                        {1979,19},
                        {atom,{1979,19},st_is_reachable},
                        [{var,{1979,35},'SuccArgs'},
                         {var,{1979,45},'CallArgs'}]}]}]}]},
     {clause,
         {1981,1},
         [{nil,{1981,17}},{nil,{1981,21}}],
         [],
         [{debug_line,1982,859},{atom,{1982,5},true}]}]}.
{function,
 {1984,1},
 update_success_types,5,
 [{clause,
   {1984,1},
   [{var,{1984,1},'_'},
    {var,{1984,1},'_'},
    {var,{1984,1},'_'},
    {var,{1984,1},'_'},
    {var,{1984,1},'_'}],
   [[{call,
      {1984,1},
      {remote,{1984,1},{atom,{1984,1},fake},{atom,{1984,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1984,860},{atom,{1984,1},ignore}]},
  {clause,
   {1984,1},
   [{tuple,
     {1984,22},
     [{atom,{1984,22},b_ret},{var,{1984,22},'_'},{var,{1984,33},'Arg'}]},
    {var,{1984,39},'Ts'},
    {var,{1984,43},'Ds'},
    {var,{1984,47},'Meta'},
    {var,{1984,53},'SuccTypes'}],
   [],
   [{debug_line,1985,861},
    {match,
     {1985,5},
     {tuple,
      {1985,5},
      [{atom,{1985,5},metadata},
       {var,{1985,24},'FuncId'},
       {var,{1986,29},'Limited'},
       {var,{1987,23},'Params'},
       {var,{1985,5},'_'}]},
     {var,{1987,34},'Meta'}},
    {debug_line,1989,862},
    {match,
     {1989,5},
     {var,{1989,5},'RetType'},
     {'case',
      {1989,15},
      {var,{1989,20},'Ds'},
      [{clause,
        {1990,19},
        [{map,
          {1990,19},
          [{map_field_exact,
            {1990,26},
            {var,{1990,22},'Arg'},
            {tuple,
             {1990,29},
             [{atom,{1990,29},b_set},
              {var,{1990,29},'_'},
              {var,{1990,29},'_'},
              {atom,{1990,39},call},
              {cons,
               {1990,49},
               {var,{1990,50},'FuncId'},
               {var,{1990,59},'Args'}}]}}]}],
        [],
        [{debug_line,1991,863},
         {tuple,
          {1991,23},
          [{atom,{1991,24},call_self},
           {call,
            {1991,35},
            {atom,{1991,35},argument_types},
            [{var,{1991,50},'Args'},{var,{1991,56},'Ts'}]}]}]},
       {clause,
        {1992,19},
        [{map,{1992,19},[]}],
        [],
        [{debug_line,1993,864},
         {call,
          {1993,23},
          {atom,{1993,23},argument_type},
          [{var,{1993,37},'Arg'},{var,{1993,42},'Ts'}]}]}]}},
    {debug_line,1995,865},
    {match,
     {1995,5},
     {var,{1995,5},'ArgTypes'},
     {call,
      {1995,16},
      {atom,{1995,16},argument_types},
      [{var,{1995,31},'Params'},{var,{1995,39},'Ts'}]}},
    {debug_line,1997,866},
    {'case',
     {1997,5},
     {var,{1997,10},'Limited'},
     [{clause,
       {1998,9},
       [{atom,{1998,9},true}],
       [],
       [{debug_line,1998,867},
        {call,
         {1998,17},
         {atom,{1998,17},ust_limited},
         [{var,{1998,29},'SuccTypes'},
          {var,{1998,40},'ArgTypes'},
          {var,{1998,50},'RetType'}]}]},
      {clause,
       {1999,9},
       [{atom,{1999,9},false}],
       [],
       [{debug_line,1999,868},
        {call,
         {1999,18},
         {atom,{1999,18},ust_unlimited},
         [{var,{1999,32},'SuccTypes'},
          {var,{1999,43},'ArgTypes'},
          {var,{1999,53},'RetType'}]}]}]}]},
  {clause,
   {2001,1},
   [{var,{2001,22},'_Last'},
    {var,{2001,29},'_Ts'},
    {var,{2001,34},'_Ds'},
    {var,{2001,39},'_Meta'},
    {var,{2001,46},'SuccTypes'}],
   [],
   [{debug_line,2002,869},{var,{2002,5},'SuccTypes'}]}]}.
{function,{2005,1},
          ust_limited,3,
          [{clause,{2005,1},
                   [{var,{2005,1},'_'},{var,{2005,1},'_'},{var,{2005,1},'_'}],
                   [[{call,{2005,1},
                           {remote,{2005,1},
                                   {atom,{2005,1},fake},
                                   {atom,{2005,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2005,870},{atom,{2005,1},ignore}]},
           {clause,{2005,1},
                   [{var,{2005,13},'SuccTypes'},
                    {var,{2005,24},'CallArgs'},
                    {tuple,{2005,34},
                           [{atom,{2005,35},call_self},
                            {var,{2005,46},'SelfArgs'}]}],
                   [],
                   [{debug_line,2006,871},
                    {match,{2006,5},
                           {var,{2006,5},'NewArgs'},
                           {call,{2006,15},
                                 {atom,{2006,15},parallel_join},
                                 [{var,{2006,29},'CallArgs'},
                                  {var,{2006,39},'SelfArgs'}]}},
                    {debug_line,2007,872},
                    {call,{2007,5},
                          {atom,{2007,5},ust_limited_1},
                          [{var,{2007,19},'SuccTypes'},
                           {var,{2007,30},'NewArgs'},
                           {atom,{2007,39},none}]}]},
           {clause,{2008,1},
                   [{var,{2008,13},'SuccTypes'},
                    {var,{2008,24},'CallArgs'},
                    {var,{2008,34},'CallRet'}],
                   [],
                   [{debug_line,2009,873},
                    {call,{2009,5},
                          {atom,{2009,5},ust_limited_1},
                          [{var,{2009,19},'SuccTypes'},
                           {var,{2009,30},'CallArgs'},
                           {var,{2009,40},'CallRet'}]}]}]}.
{function,
    {2011,1},
    ust_limited_1,3,
    [{clause,
         {2011,1},
         [{var,{2011,1},'_'},{var,{2011,1},'_'},{var,{2011,1},'_'}],
         [[{call,
               {2011,1},
               {remote,
                   {2011,1},
                   {atom,{2011,1},fake},
                   {atom,{2011,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2011,874},{atom,{2011,1},ignore}]},
     {clause,
         {2011,1},
         [{nil,{2011,15}},
          {var,{2011,19},'ArgTypes'},
          {var,{2011,29},'RetType'}],
         [],
         [{debug_line,2012,875},
          {cons,
              {2012,5},
              {tuple,
                  {2012,6},
                  [{var,{2012,7},'ArgTypes'},{var,{2012,17},'RetType'}]},
              {nil,{2012,25}}}]},
     {clause,
         {2013,1},
         [{cons,
              {2013,15},
              {tuple,
                  {2013,16},
                  [{var,{2013,17},'SuccArgs'},{var,{2013,27},'SuccRet'}]},
              {nil,{2013,35}}},
          {var,{2013,38},'CallArgs'},
          {var,{2013,48},'CallRet'}],
         [],
         [{debug_line,2014,876},
          {match,
              {2014,5},
              {var,{2014,5},'NewTypes'},
              {call,
                  {2014,16},
                  {atom,{2014,16},parallel_join},
                  [{var,{2014,30},'SuccArgs'},{var,{2014,40},'CallArgs'}]}},
          {debug_line,2015,877},
          {match,
              {2015,5},
              {var,{2015,5},'NewType'},
              {call,
                  {2015,15},
                  {remote,
                      {2015,25},
                      {atom,{2015,15},beam_types},
                      {atom,{2015,26},join}},
                  [{var,{2015,31},'SuccRet'},{var,{2015,40},'CallRet'}]}},
          {debug_line,2016,878},
          {cons,
              {2016,5},
              {tuple,
                  {2016,6},
                  [{var,{2016,7},'NewTypes'},{var,{2016,17},'NewType'}]},
              {nil,{2016,25}}}]}]}.
{function,
    {2024,1},
    ust_unlimited,3,
    [{clause,
         {2024,1},
         [{var,{2024,1},'_'},{var,{2024,1},'_'},{var,{2024,1},'_'}],
         [[{call,
               {2024,1},
               {remote,
                   {2024,1},
                   {atom,{2024,1},fake},
                   {atom,{2024,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2024,879},{atom,{2024,1},ignore}]},
     {clause,
         {2024,1},
         [{var,{2024,15},'SuccTypes'},
          {var,{2024,26},'_CallArgs'},
          {atom,{2024,37},none}],
         [],
         [{debug_line,2026,880},{var,{2026,5},'SuccTypes'}]},
     {clause,
         {2027,1},
         [{match,
              {2027,15},
              {cons,
                  {2027,15},
                  {tuple,
                      {2027,16},
                      [{var,{2027,17},'SameArgs'},{var,{2027,27},'SameType'}]},
                  {var,{2027,39},'_'}},
              {var,{2027,42},'SuccTypes'}},
          {var,{2027,53},'SameArgs'},
          {var,{2027,63},'SameType'}],
         [],
         [{debug_line,2029,881},{var,{2029,5},'SuccTypes'}]},
     {clause,
         {2030,1},
         [{cons,
              {2030,15},
              {var,{2030,16},'SuccType'},
              {var,{2030,27},'SuccTypes'}},
          {var,{2030,39},'CallArgs'},
          {var,{2030,49},'CallRet'}],
         [],
         [{debug_line,2031,882},
          {cons,
              {2031,5},
              {var,{2031,6},'SuccType'},
              {call,
                  {2031,17},
                  {atom,{2031,17},ust_unlimited},
                  [{var,{2031,31},'SuccTypes'},
                   {var,{2031,42},'CallArgs'},
                   {var,{2031,52},'CallRet'}]}}]},
     {clause,
         {2032,1},
         [{nil,{2032,15}},
          {var,{2032,19},'CallArgs'},
          {var,{2032,29},'CallRet'}],
         [],
         [{debug_line,2033,883},
          {cons,
              {2033,5},
              {tuple,
                  {2033,6},
                  [{var,{2033,7},'CallArgs'},{var,{2033,17},'CallRet'}]},
              {nil,{2033,25}}}]}]}.
{function,
 {2035,1},
 update_successors,5,
 [{clause,
   {2035,1},
   [{var,{2035,1},'_'},
    {var,{2035,1},'_'},
    {var,{2035,1},'_'},
    {var,{2035,1},'_'},
    {var,{2035,1},'_'}],
   [[{call,
      {2035,1},
      {remote,{2035,1},{atom,{2035,1},fake},{atom,{2035,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2035,884},{atom,{2035,1},ignore}]},
  {clause,
   {2035,1},
   [{match,
     {2035,19},
     {tuple,
      {2035,19},
      [{atom,{2035,19},b_br},
       {var,{2035,19},'_'},
       {tuple,{2035,30},[{atom,{2035,30},b_literal},{atom,{2035,45},true}]},
       {var,{2035,56},'Succ'},
       {var,{2035,19},'_'}]},
     {var,{2035,62},'Last'}},
    {var,{2036,19},'Ts'},
    {var,{2036,23},'_Ds'},
    {var,{2036,28},'Ls'},
    {var,{2036,32},'_UsedOnce'}],
   [],
   [{debug_line,2037,885},
    {tuple,
     {2037,5},
     [{var,{2037,6},'Last'},
      {call,
       {2037,12},
       {atom,{2037,12},update_successor},
       [{var,{2037,29},'Succ'},{var,{2037,35},'Ts'},{var,{2037,39},'Ls'}]}]}]},
  {clause,
   {2038,1},
   [{match,
     {2038,19},
     {tuple,
      {2038,19},
      [{atom,{2038,19},b_br},
       {var,{2038,19},'_'},
       {match,
        {2038,30},
        {tuple,{2038,30},[{atom,{2038,30},b_var},{var,{2038,30},'_'}]},
        {var,{2038,39},'Bool'}},
       {var,{2038,49},'Succ'},
       {var,{2038,59},'Fail'}]},
     {var,{2038,65},'Last0'}},
    {var,{2039,19},'Ts'},
    {var,{2039,23},'Ds'},
    {var,{2039,27},'Ls0'},
    {var,{2039,32},'UsedOnce'}],
   [],
   [{debug_line,2040,886},
    {match,
     {2040,5},
     {var,{2040,5},'IsTempVar'},
     {call,
      {2040,17},
      {remote,{2040,17},{atom,{2040,17},erlang},{atom,{2040,17},is_map_key}},
      [{var,{2040,28},'Bool'},{var,{2040,34},'UsedOnce'}]}},
    {debug_line,2041,887},
    {'case',
     {2041,5},
     {call,
      {2041,10},
      {atom,{2041,10},infer_types_br},
      [{var,{2041,25},'Bool'},
       {var,{2041,31},'Ts'},
       {var,{2041,35},'IsTempVar'},
       {var,{2041,46},'Ds'}]},
     [{clause,
       {2042,9},
       [{tuple,
         {2042,9},
         [{match,{2042,10},{map,{2042,10},[]},{var,{2042,14},'SuccTs'}},
          {match,{2042,22},{map,{2042,22},[]},{var,{2042,26},'FailTs'}}]}],
       [],
       [{debug_line,2043,888},
        {match,
         {2043,13},
         {var,{2043,13},'Ls1'},
         {call,
          {2043,19},
          {atom,{2043,19},update_successor},
          [{var,{2043,36},'Succ'},
           {var,{2043,42},'SuccTs'},
           {var,{2043,50},'Ls0'}]}},
        {debug_line,2044,889},
        {match,
         {2044,13},
         {var,{2044,13},'Ls'},
         {call,
          {2044,18},
          {atom,{2044,18},update_successor},
          [{var,{2044,35},'Fail'},
           {var,{2044,41},'FailTs'},
           {var,{2044,49},'Ls1'}]}},
        {debug_line,2045,890},
        {tuple,{2045,13},[{var,{2045,14},'Last0'},{var,{2045,21},'Ls'}]}]},
      {clause,
       {2046,9},
       [{tuple,
         {2046,9},
         [{match,{2046,10},{map,{2046,10},[]},{var,{2046,14},'SuccTs'}},
          {atom,{2046,22},none}]}],
       [],
       [{debug_line,2047,891},
        {match,
         {2047,13},
         {var,{2047,13},'Last'},
         {block,
          {2047,20},
          [{match,
            {2047,31},
            {var,{2047,31},rec102},
            {tuple,
             {2047,36},
             [{atom,{2047,36},b_literal},{atom,{2047,51},true}]}},
           {match,{2047,20},{var,{2047,20},rec103},{var,{2047,20},'Last0'}},
           {'case',
            {2047,31},
            {var,{2047,20},rec103},
            [{clause,
              {2047,31},
              [{tuple,
                {2047,31},
                [{atom,{2047,31},b_br},
                 {var,{2047,31},'_'},
                 {var,{2047,31},'_'},
                 {var,{2047,31},'_'},
                 {var,{2047,31},'_'}]}],
              [],
              [{call,
                {2047,31},
                {remote,
                 {2047,31},
                 {atom,{2047,31},erlang},
                 {atom,{2047,31},setelement}},
                [{integer,{2047,31},3},
                 {call,
                  {2047,57},
                  {remote,
                   {2047,57},
                   {atom,{2047,57},erlang},
                   {atom,{2047,57},setelement}},
                  [{integer,{2047,57},5},
                   {var,{2047,20},rec103},
                   {var,{2047,62},'Succ'}]},
                 {var,{2047,31},rec102}]}]},
             {clause,
              [{generated,true},{location,{2047,31}}],
              [{var,[{generated,true},{location,{2047,31}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2047,31}}],
                {remote,
                 [{generated,true},{location,{2047,31}}],
                 {atom,[{generated,true},{location,{2047,31}}],erlang},
                 {atom,[{generated,true},{location,{2047,31}}],error}},
                [{tuple,
                  [{generated,true},{location,{2047,31}}],
                  [{atom,[{generated,true},{location,{2047,31}}],badrecord},
                   {var,{2047,20},rec103}]}]}]}]}]}},
        {debug_line,2048,892},
        {tuple,
         {2048,13},
         [{var,{2048,14},'Last'},
          {call,
           {2048,20},
           {atom,{2048,20},update_successor},
           [{var,{2048,37},'Succ'},
            {var,{2048,43},'SuccTs'},
            {var,{2048,51},'Ls0'}]}]}]},
      {clause,
       {2049,9},
       [{tuple,
         {2049,9},
         [{atom,{2049,10},none},
          {match,{2049,16},{map,{2049,16},[]},{var,{2049,20},'FailTs'}}]}],
       [],
       [{debug_line,2050,893},
        {match,
         {2050,13},
         {var,{2050,13},'Last'},
         {block,
          {2050,20},
          [{match,
            {2050,31},
            {var,{2050,31},rec104},
            {tuple,
             {2050,36},
             [{atom,{2050,36},b_literal},{atom,{2050,51},true}]}},
           {match,{2050,20},{var,{2050,20},rec105},{var,{2050,20},'Last0'}},
           {'case',
            {2050,31},
            {var,{2050,20},rec105},
            [{clause,
              {2050,31},
              [{tuple,
                {2050,31},
                [{atom,{2050,31},b_br},
                 {var,{2050,31},'_'},
                 {var,{2050,31},'_'},
                 {var,{2050,31},'_'},
                 {var,{2050,31},'_'}]}],
              [],
              [{call,
                {2050,31},
                {remote,
                 {2050,31},
                 {atom,{2050,31},erlang},
                 {atom,{2050,31},setelement}},
                [{integer,{2050,31},3},
                 {call,
                  {2050,57},
                  {remote,
                   {2050,57},
                   {atom,{2050,57},erlang},
                   {atom,{2050,57},setelement}},
                  [{integer,{2050,57},4},
                   {var,{2050,20},rec105},
                   {var,{2050,62},'Fail'}]},
                 {var,{2050,31},rec104}]}]},
             {clause,
              [{generated,true},{location,{2050,31}}],
              [{var,[{generated,true},{location,{2050,31}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2050,31}}],
                {remote,
                 [{generated,true},{location,{2050,31}}],
                 {atom,[{generated,true},{location,{2050,31}}],erlang},
                 {atom,[{generated,true},{location,{2050,31}}],error}},
                [{tuple,
                  [{generated,true},{location,{2050,31}}],
                  [{atom,[{generated,true},{location,{2050,31}}],badrecord},
                   {var,{2050,20},rec105}]}]}]}]}]}},
        {debug_line,2051,894},
        {tuple,
         {2051,13},
         [{var,{2051,14},'Last'},
          {call,
           {2051,20},
           {atom,{2051,20},update_successor},
           [{var,{2051,37},'Fail'},
            {var,{2051,43},'FailTs'},
            {var,{2051,51},'Ls0'}]}]}]}]}]},
  {clause,
   {2053,1},
   [{match,
     {2053,19},
     {tuple,
      {2053,19},
      [{atom,{2053,19},b_switch},
       {var,{2053,19},'_'},
       {match,
        {2053,33},
        {tuple,{2053,33},[{atom,{2053,33},b_var},{var,{2053,33},'_'}]},
        {var,{2053,42},'V'}},
       {var,{2053,49},'Fail0'},
       {var,{2053,60},'List0'}]},
     {var,{2053,67},'Last0'}},
    {var,{2054,19},'Ts'},
    {var,{2054,23},'Ds'},
    {var,{2054,27},'Ls0'},
    {var,{2054,32},'UsedOnce'}],
   [],
   [{debug_line,2055,895},
    {match,
     {2055,5},
     {var,{2055,5},'IsTempVar'},
     {call,
      {2055,17},
      {remote,{2055,17},{atom,{2055,17},erlang},{atom,{2055,17},is_map_key}},
      [{var,{2055,28},'V'},{var,{2055,31},'UsedOnce'}]}},
    {debug_line,2057,896},
    {match,
     {2057,5},
     {tuple,
      {2057,5},
      [{var,{2057,6},'List1'},{var,{2057,13},'FailTs'},{var,{2057,21},'Ls1'}]},
     {call,
      {2058,9},
      {atom,{2058,9},update_switch},
      [{var,{2058,23},'List0'},
       {var,{2058,30},'V'},
       {block,0,
        [{debug_line,2058,897},
         {call,
          {2058,33},
          {atom,{2058,33},concrete_type},
          [{var,{2058,47},'V'},{var,{2058,50},'Ts'}]}]},
       {var,{2059,23},'Ts'},
       {var,{2059,27},'Ds'},
       {var,{2059,31},'Ls0'},
       {var,{2059,36},'IsTempVar'},
       {nil,{2059,47}}]}},
    {debug_line,2061,898},
    {'case',
     {2061,5},
     {var,{2061,10},'FailTs'},
     [{clause,
       {2062,9},
       [{atom,{2062,9},none}],
       [],
       [{debug_line,2064,899},
        {'case',
         {2064,13},
         {var,{2064,18},'List1'},
         [{clause,
           {2065,17},
           [{cons,
             {2065,17},
             {tuple,
              {2065,18},
              [{tuple,
                {2065,19},
                [{atom,{2065,19},b_literal},{integer,{2065,34},0}]},
               {var,{2065,37},'_'}]},
             {var,{2065,40},'_'}}],
           [],
           [{debug_line,2070,900},
            {match,
             {2070,21},
             {tuple,
              {2070,21},
              [{var,{2070,22},'List'},
               {cons,
                {2070,28},
                {tuple,{2070,29},[{var,{2070,30},'_'},{var,{2070,32},'Fail'}]},
                {nil,{2070,37}}}]},
             {call,
              {2070,42},
              {remote,{2070,42},{atom,{2070,42},lists},{atom,{2070,42},split}},
              [{block,0,
                [{op,
                  {2070,61},
                  '-',
                  {call,
                   {2070,48},
                   {remote,
                    {2070,48},
                    {atom,{2070,48},erlang},
                    {atom,{2070,48},length}},
                   [{var,{2070,55},'List1'}]},
                  {integer,{2070,62},1}}]},
               {var,{2070,65},'List1'}]}},
            {debug_line,2071,901},
            {match,
             {2071,21},
             {var,{2071,21},'Last'},
             {block,
              {2071,28},
              [{match,
                {2071,28},
                {var,{2071,28},rec106},
                {var,{2071,28},'Last0'}},
               {'case',
                {2071,43},
                {var,{2071,28},rec106},
                [{clause,
                  {2071,43},
                  [{tuple,
                    {2071,43},
                    [{atom,{2071,43},b_switch},
                     {var,{2071,43},'_'},
                     {var,{2071,43},'_'},
                     {var,{2071,43},'_'},
                     {var,{2071,43},'_'}]}],
                  [],
                  [{call,
                    {2071,43},
                    {remote,
                     {2071,43},
                     {atom,{2071,43},erlang},
                     {atom,{2071,43},setelement}},
                    [{integer,{2071,43},4},
                     {call,
                      {2071,53},
                      {remote,
                       {2071,53},
                       {atom,{2071,53},erlang},
                       {atom,{2071,53},setelement}},
                      [{integer,{2071,53},5},
                       {var,{2071,28},rec106},
                       {var,{2071,58},'List'}]},
                     {var,{2071,48},'Fail'}]}]},
                 {clause,
                  [{generated,true},{location,{2071,43}}],
                  [{var,[{generated,true},{location,{2071,43}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2071,43}}],
                    {remote,
                     [{generated,true},{location,{2071,43}}],
                     {atom,[{generated,true},{location,{2071,43}}],erlang},
                     {atom,[{generated,true},{location,{2071,43}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2071,43}}],
                      [{atom,
                        [{generated,true},{location,{2071,43}}],
                        badrecord},
                       {var,{2071,28},rec106}]}]}]}]}]}},
            {debug_line,2072,902},
            {tuple,{2072,21},[{var,{2072,22},'Last'},{var,{2072,28},'Ls1'}]}]},
          {clause,
           {2073,17},
           [{cons,
             {2073,17},
             {tuple,{2073,18},[{var,{2073,19},'_'},{var,{2073,21},'Fail'}]},
             {var,{2073,27},'List'}}],
           [],
           [{debug_line,2075,903},
            {match,
             {2075,21},
             {var,{2075,21},'Last'},
             {block,
              {2075,28},
              [{match,
                {2075,28},
                {var,{2075,28},rec107},
                {var,{2075,28},'Last0'}},
               {'case',
                {2075,43},
                {var,{2075,28},rec107},
                [{clause,
                  {2075,43},
                  [{tuple,
                    {2075,43},
                    [{atom,{2075,43},b_switch},
                     {var,{2075,43},'_'},
                     {var,{2075,43},'_'},
                     {var,{2075,43},'_'},
                     {var,{2075,43},'_'}]}],
                  [],
                  [{call,
                    {2075,43},
                    {remote,
                     {2075,43},
                     {atom,{2075,43},erlang},
                     {atom,{2075,43},setelement}},
                    [{integer,{2075,43},4},
                     {call,
                      {2075,53},
                      {remote,
                       {2075,53},
                       {atom,{2075,53},erlang},
                       {atom,{2075,53},setelement}},
                      [{integer,{2075,53},5},
                       {var,{2075,28},rec107},
                       {var,{2075,58},'List'}]},
                     {var,{2075,48},'Fail'}]}]},
                 {clause,
                  [{generated,true},{location,{2075,43}}],
                  [{var,[{generated,true},{location,{2075,43}}],'_'}],
                  [],
                  [{call,
                    [{generated,true},{location,{2075,43}}],
                    {remote,
                     [{generated,true},{location,{2075,43}}],
                     {atom,[{generated,true},{location,{2075,43}}],erlang},
                     {atom,[{generated,true},{location,{2075,43}}],error}},
                    [{tuple,
                      [{generated,true},{location,{2075,43}}],
                      [{atom,
                        [{generated,true},{location,{2075,43}}],
                        badrecord},
                       {var,{2075,28},rec107}]}]}]}]}]}},
            {debug_line,2076,904},
            {tuple,
             {2076,21},
             [{var,{2076,22},'Last'},{var,{2076,28},'Ls1'}]}]}]}]},
      {clause,
       {2078,9},
       [{map,{2078,9},[]}],
       [],
       [{debug_line,2079,905},
        {match,
         {2079,13},
         {var,{2079,13},'Ls'},
         {call,
          {2079,18},
          {atom,{2079,18},update_successor},
          [{var,{2079,35},'Fail0'},
           {var,{2079,42},'FailTs'},
           {var,{2079,50},'Ls1'}]}},
        {debug_line,2080,906},
        {match,
         {2080,13},
         {var,{2080,13},'Last'},
         {block,
          {2080,20},
          [{match,{2080,20},{var,{2080,20},rec108},{var,{2080,20},'Last0'}},
           {'case',
            {2080,35},
            {var,{2080,20},rec108},
            [{clause,
              {2080,35},
              [{tuple,
                {2080,35},
                [{atom,{2080,35},b_switch},
                 {var,{2080,35},'_'},
                 {var,{2080,35},'_'},
                 {var,{2080,35},'_'},
                 {var,{2080,35},'_'}]}],
              [],
              [{call,
                {2080,35},
                {remote,
                 {2080,35},
                 {atom,{2080,35},erlang},
                 {atom,{2080,35},setelement}},
                [{integer,{2080,35},5},
                 {var,{2080,20},rec108},
                 {var,{2080,40},'List1'}]}]},
             {clause,
              [{generated,true},{location,{2080,35}}],
              [{var,[{generated,true},{location,{2080,35}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2080,35}}],
                {remote,
                 [{generated,true},{location,{2080,35}}],
                 {atom,[{generated,true},{location,{2080,35}}],erlang},
                 {atom,[{generated,true},{location,{2080,35}}],error}},
                [{tuple,
                  [{generated,true},{location,{2080,35}}],
                  [{atom,[{generated,true},{location,{2080,35}}],badrecord},
                   {var,{2080,20},rec108}]}]}]}]}]}},
        {debug_line,2081,907},
        {tuple,{2081,13},[{var,{2081,14},'Last'},{var,{2081,20},'Ls'}]}]}]}]},
  {clause,
   {2083,1},
   [{match,
     {2083,19},
     {tuple,
      {2083,19},
      [{atom,{2083,19},b_ret},{var,{2083,19},'_'},{var,{2083,19},'_'}]},
     {var,{2083,28},'Last'}},
    {var,{2083,34},'_Ts'},
    {var,{2083,39},'_Ds'},
    {var,{2083,44},'Ls'},
    {var,{2083,48},'_UsedOnce'}],
   [],
   [{debug_line,2084,908},
    {tuple,{2084,5},[{var,{2084,6},'Last'},{var,{2084,12},'Ls'}]}]}]}.
{function,
    {2086,1},
    update_switch,8,
    [{clause,
         {2086,1},
         [{var,{2086,1},'_'},
          {var,{2086,1},'_'},
          {var,{2086,1},'_'},
          {var,{2086,1},'_'},
          {var,{2086,1},'_'},
          {var,{2086,1},'_'},
          {var,{2086,1},'_'},
          {var,{2086,1},'_'}],
         [[{call,
               {2086,1},
               {remote,
                   {2086,1},
                   {atom,{2086,1},fake},
                   {atom,{2086,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2086,909},{atom,{2086,1},ignore}]},
     {clause,
         {2086,1},
         [{cons,
              {2086,15},
              {match,
                  {2086,16},
                  {tuple,
                      {2086,16},
                      [{var,{2086,17},'Val'},{var,{2086,22},'Lbl'}]},
                  {var,{2086,27},'Sw'}},
              {var,{2086,32},'List'}},
          {var,{2087,15},'V'},
          {var,{2087,18},'FailType0'},
          {var,{2087,29},'Ts'},
          {var,{2087,33},'Ds'},
          {var,{2087,37},'Ls0'},
          {var,{2087,42},'IsTempVar'},
          {var,{2087,53},'Acc'}],
         [],
         [{debug_line,2088,910},
          {match,
              {2088,5},
              {var,{2088,5},'FailType'},
              {call,
                  {2088,16},
                  {remote,
                      {2088,26},
                      {atom,{2088,16},beam_types},
                      {atom,{2088,27},subtract}},
                  [{var,{2088,36},'FailType0'},
                   {block,0,
                       [{call,
                            {2088,47},
                            {atom,{2088,47},concrete_type},
                            [{var,{2088,61},'Val'},{var,{2088,66},'Ts'}]}]}]}},
          {debug_line,2089,911},
          {'case',
              {2089,5},
              {call,
                  {2089,10},
                  {atom,{2089,10},infer_types_switch},
                  [{var,{2089,29},'V'},
                   {var,{2089,32},'Val'},
                   {var,{2089,37},'Ts'},
                   {var,{2089,41},'IsTempVar'},
                   {var,{2089,52},'Ds'}]},
              [{clause,
                   {2090,9},
                   [{atom,{2090,9},none}],
                   [],
                   [{debug_line,2091,912},
                    {call,
                        {2091,13},
                        {atom,{2091,13},update_switch},
                        [{var,{2091,27},'List'},
                         {var,{2091,33},'V'},
                         {var,{2091,36},'FailType'},
                         {var,{2091,46},'Ts'},
                         {var,{2091,50},'Ds'},
                         {var,{2091,54},'Ls0'},
                         {var,{2091,59},'IsTempVar'},
                         {var,{2091,70},'Acc'}]}]},
               {clause,
                   {2092,9},
                   [{var,{2092,9},'SwTs'}],
                   [],
                   [{debug_line,2093,913},
                    {match,
                        {2093,13},
                        {var,{2093,13},'Ls'},
                        {call,
                            {2093,18},
                            {atom,{2093,18},update_successor},
                            [{var,{2093,35},'Lbl'},
                             {var,{2093,40},'SwTs'},
                             {var,{2093,46},'Ls0'}]}},
                    {debug_line,2094,914},
                    {call,
                        {2094,13},
                        {atom,{2094,13},update_switch},
                        [{var,{2094,27},'List'},
                         {var,{2094,33},'V'},
                         {var,{2094,36},'FailType'},
                         {var,{2094,46},'Ts'},
                         {var,{2094,50},'Ds'},
                         {var,{2094,54},'Ls'},
                         {var,{2094,58},'IsTempVar'},
                         {block,0,
                             [{cons,
                                  {2094,69},
                                  {var,{2094,70},'Sw'},
                                  {var,{2094,75},'Acc'}}]}]}]}]}]},
     {clause,
         {2096,1},
         [{nil,{2096,15}},
          {var,{2096,19},'_V'},
          {atom,{2096,23},none},
          {var,{2096,29},'_Ts'},
          {var,{2096,34},'_Ds'},
          {var,{2096,39},'Ls'},
          {var,{2096,43},'_IsTempVar'},
          {var,{2096,55},'Acc'}],
         [],
         [{debug_line,2098,915},
          {tuple,
              {2098,5},
              [{call,
                   {2098,6},
                   {remote,
                       {2098,6},
                       {atom,{2098,6},lists},
                       {atom,{2098,6},reverse}},
                   [{var,{2098,14},'Acc'}]},
               {atom,{2098,20},none},
               {var,{2098,26},'Ls'}]}]},
     {clause,
         {2099,1},
         [{nil,{2099,15}},
          {var,{2099,19},'V'},
          {var,{2099,22},'FailType'},
          {var,{2099,32},'Ts'},
          {var,{2099,36},'Ds'},
          {var,{2099,40},'Ls'},
          {var,{2099,44},'IsTempVar'},
          {var,{2099,55},'Acc'}],
         [],
         [{debug_line,2101,916},
          {match,
              {2101,5},
              {var,{2101,5},'FailTs'},
              {'case',
                  {2101,14},
                  {call,
                      {2101,19},
                      {remote,
                          {2101,29},
                          {atom,{2101,19},beam_types},
                          {atom,{2101,30},get_singleton_value}},
                      [{var,{2101,50},'FailType'}]},
                  [{clause,
                       {2102,18},
                       [{tuple,
                            {2102,18},
                            [{atom,{2102,19},ok},{var,{2102,23},'Value'}]}],
                       [],
                       [{debug_line,2105,917},
                        {match,
                            {2105,22},
                            {var,{2105,22},'Lit'},
                            {tuple,
                                {2105,28},
                                [{atom,{2105,28},b_literal},
                                 {var,{2105,43},'Value'}]}},
                        {debug_line,2106,918},
                        {call,
                            {2106,22},
                            {atom,{2106,22},infer_types_switch},
                            [{var,{2106,41},'V'},
                             {var,{2106,44},'Lit'},
                             {var,{2106,49},'Ts'},
                             {var,{2106,53},'IsTempVar'},
                             {var,{2106,64},'Ds'}]}]},
                   {clause,
                       {2107,18},
                       [{atom,{2107,18},error}],
                       [],
                       [{debug_line,2110,919},
                        {match,
                            {2110,22},
                            {map,
                                {2110,22},
                                [{map_field_exact,
                                     {2110,27},
                                     {var,{2110,25},'V'},
                                     {var,{2110,30},'Def'}}]},
                            {var,{2110,38},'Ds'}},
                        {debug_line,2111,920},
                        {match,
                            {2111,22},
                            {var,{2111,22},'PosTypes'},
                            {cons,
                                {2111,33},
                                {tuple,
                                    {2111,34},
                                    [{var,{2111,35},'V'},
                                     {var,{2111,38},'FailType'}]},
                                {call,
                                    {2111,50},
                                    {atom,{2111,50},infer_eq_type},
                                    [{var,{2111,64},'Def'},
                                     {var,{2111,69},'FailType'}]}}},
                        {debug_line,2113,921},
                        {'case',
                            {2113,22},
                            {call,
                                {2113,27},
                                {atom,{2113,27},meet_types},
                                [{var,{2113,38},'PosTypes'},
                                 {var,{2113,48},'Ts'}]},
                            [{clause,
                                 {2114,26},
                                 [{atom,{2114,26},none}],
                                 [],
                                 [{debug_line,2114,922},
                                  {atom,{2114,34},none}]},
                             {clause,
                                 {2115,26},
                                 [{var,{2115,26},'FailTs0'}],
                                 [[{var,{2115,39},'IsTempVar'}]],
                                 [{debug_line,2115,923},
                                  {call,
                                      {2115,52},
                                      {atom,{2115,52},ts_remove_var},
                                      [{var,{2115,66},'V'},
                                       {var,{2115,69},'FailTs0'}]}]},
                             {clause,
                                 {2116,26},
                                 [{var,{2116,26},'FailTs0'}],
                                 [],
                                 [{debug_line,2116,924},
                                  {var,{2116,37},'FailTs0'}]}]}]}]}},
          {debug_line,2120,925},
          {tuple,
              {2120,5},
              [{call,
                   {2120,6},
                   {remote,
                       {2120,6},
                       {atom,{2120,6},lists},
                       {atom,{2120,6},reverse}},
                   [{var,{2120,14},'Acc'}]},
               {var,{2120,20},'FailTs'},
               {var,{2120,28},'Ls'}]}]}]}.
{function,
    {2122,1},
    update_successor,3,
    [{clause,
         {2122,1},
         [{var,{2122,1},'_'},{var,{2122,1},'_'},{var,{2122,1},'_'}],
         [[{call,
               {2122,1},
               {remote,
                   {2122,1},
                   {atom,{2122,1},fake},
                   {atom,{2122,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2122,926},{atom,{2122,1},ignore}]},
     {clause,
         {2122,1},
         [{integer,{2122,19},1},{var,{2122,36},'_Ts'},{var,{2122,41},'Ls'}],
         [],
         [{debug_line,2126,927},{var,{2126,5},'Ls'}]},
     {clause,
         {2127,1},
         [{var,{2127,18},'S'},{var,{2127,21},'Ts0'},{var,{2127,26},'Ls'}],
         [],
         [{debug_line,2128,928},
          {'case',
              {2128,5},
              {var,{2128,10},'Ls'},
              [{clause,
                   {2129,9},
                   [{map,
                        {2129,9},
                        [{map_field_exact,
                             {2129,14},
                             {var,{2129,12},'S'},
                             {tuple,
                                 {2129,17},
                                 [{atom,{2129,18},outgoing},
                                  {var,{2129,28},'_'}]}}]}],
                   [],
                   [{debug_line,2132,929},{var,{2132,13},'Ls'}]},
               {clause,
                   {2133,9},
                   [{map,
                        {2133,9},
                        [{map_field_exact,
                             {2133,14},
                             {var,{2133,12},'S'},
                             {tuple,
                                 {2133,17},
                                 [{atom,{2133,18},incoming},
                                  {var,{2133,28},'InTs'}]}}]}],
                   [],
                   [{debug_line,2134,930},
                    {match,
                        {2134,13},
                        {var,{2134,13},'Ts'},
                        {call,
                            {2134,18},
                            {atom,{2134,18},join_types},
                            [{var,{2134,29},'Ts0'},{var,{2134,34},'InTs'}]}},
                    {debug_line,2135,931},
                    {map,
                        {2135,15},
                        {var,{2135,13},'Ls'},
                        [{map_field_exact,
                             {2135,20},
                             {var,{2135,18},'S'},
                             {tuple,
                                 {2135,23},
                                 [{atom,{2135,24},incoming},
                                  {var,{2135,34},'Ts'}]}}]}]},
               {clause,
                   {2136,9},
                   [{map,{2136,9},[]}],
                   [],
                   [{debug_line,2137,932},
                    {map,
                        {2137,15},
                        {var,{2137,13},'Ls'},
                        [{map_field_assoc,
                             {2137,20},
                             {var,{2137,18},'S'},
                             {tuple,
                                 {2137,23},
                                 [{atom,{2137,24},incoming},
                                  {var,{2137,34},'Ts0'}]}}]}]}]}]}]}.
{function,
    {2140,1},
    update_types,3,
    [{clause,
         {2140,1},
         [{var,{2140,1},'_'},{var,{2140,1},'_'},{var,{2140,1},'_'}],
         [[{call,
               {2140,1},
               {remote,
                   {2140,1},
                   {atom,{2140,1},fake},
                   {atom,{2140,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2140,933},{atom,{2140,1},ignore}]},
     {clause,
         {2140,1},
         [{tuple,
              {2140,14},
              [{atom,{2140,14},b_set},
               {var,{2140,40},'Anno'},
               {var,{2140,31},'Dst'},
               {var,{2140,24},'Op'},
               {var,{2140,50},'Args'}]},
          {var,{2140,57},'Ts'},
          {var,{2140,61},'Ds'}],
         [],
         [{debug_line,2141,934},
          {match,
              {2141,5},
              {var,{2141,5},'T'},
              {call,
                  {2141,9},
                  {atom,{2141,9},type},
                  [{var,{2141,14},'Op'},
                   {var,{2141,18},'Args'},
                   {var,{2141,24},'Anno'},
                   {var,{2141,30},'Ts'},
                   {var,{2141,34},'Ds'}]}},
          {debug_line,2142,935},
          {map,
              {2142,7},
              {var,{2142,5},'Ts'},
              [{map_field_assoc,
                   {2142,14},
                   {var,{2142,10},'Dst'},
                   {var,{2142,17},'T'}}]}]}]}.
{function,
 {2144,1},
 type,5,
 [{clause,
   {2144,1},
   [{var,{2144,1},'_'},
    {var,{2144,1},'_'},
    {var,{2144,1},'_'},
    {var,{2144,1},'_'},
    {var,{2144,1},'_'}],
   [[{call,
      {2144,1},
      {remote,{2144,1},{atom,{2144,1},fake},{atom,{2144,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2144,936},{atom,{2144,1},ignore}]},
  {clause,
   {2144,1},
   [{tuple,{2144,6},[{atom,{2144,7},bif},{var,{2144,11},'Bif'}]},
    {var,{2144,17},'Args'},
    {var,{2144,23},'_Anno'},
    {var,{2144,30},'Ts'},
    {var,{2144,34},'_Ds'}],
   [],
   [{debug_line,2145,937},
    {match,
     {2145,5},
     {var,{2145,5},'ArgTypes'},
     {call,
      {2145,16},
      {atom,{2145,16},concrete_types},
      [{var,{2145,31},'Args'},{var,{2145,37},'Ts'}]}},
    {debug_line,2146,938},
    {'case',
     {2146,5},
     {call,
      {2146,10},
      {remote,
       {2146,25},
       {atom,{2146,10},beam_call_types},
       {atom,{2146,26},types}},
      [{atom,{2146,32},erlang},
       {var,{2146,40},'Bif'},
       {var,{2146,45},'ArgTypes'}]},
     [{clause,
       {2147,9},
       [{tuple,
         {2147,9},
         [{atom,{2147,10},any},{var,{2147,15},'_'},{var,{2147,18},'_'}]}],
       [],
       [{debug_line,2148,939},
        {'case',
         {2148,13},
         {tuple,{2148,18},[{var,{2148,19},'Bif'},{var,{2148,24},'Args'}]},
         [{clause,
           {2149,17},
           [{tuple,
             {2149,17},
             [{atom,{2149,18},element},
              {cons,
               {2149,27},
               {var,{2149,28},'_'},
               {cons,
                {2149,30},
                {tuple,
                 {2149,30},
                 [{atom,{2149,30},b_literal},{var,{2149,45},'Tuple'}]},
                {nil,{2149,51}}}}]}],
           [[{op,
              {2150,42},
              '>',
              {call,
               {2150,24},
               {remote,
                {2150,24},
                {atom,{2150,24},erlang},
                {atom,{2150,24},tuple_size}},
               [{var,{2150,35},'Tuple'}]},
              {integer,{2150,44},0}}]],
           [{debug_line,2151,940},
            {call,
             {2151,21},
             {atom,{2151,21},join_tuple_elements},
             [{var,{2151,41},'Tuple'}]}]},
          {clause,
           {2152,17},
           [{tuple,{2152,17},[{var,{2152,18},'_'},{var,{2152,21},'_'}]}],
           [],
           [{debug_line,2153,941},{atom,{2153,21},any}]}]}]},
      {clause,
       {2155,9},
       [{tuple,
         {2155,9},
         [{var,{2155,10},'RetType'},{var,{2155,19},'_'},{var,{2155,22},'_'}]}],
       [],
       [{debug_line,2156,942},{var,{2156,13},'RetType'}]}]}]},
  {clause,
   {2158,1},
   [{atom,{2158,6},bs_create_bin},
    {var,{2158,21},'Args'},
    {var,{2158,27},'_Anno'},
    {var,{2158,34},'Ts'},
    {var,{2158,38},'_Ds'}],
   [],
   [{debug_line,2159,943},
    {match,
     {2159,5},
     {var,{2159,5},'SizeUnit'},
     {call,
      {2159,16},
      {atom,{2159,16},bs_size_unit},
      [{var,{2159,29},'Args'},{var,{2159,35},'Ts'}]}},
    {debug_line,2160,944},
    {match,
     {2160,5},
     {var,{2160,5},'Appendable'},
     {'case',
      {2160,18},
      {var,{2160,23},'Args'},
      [{clause,
        {2161,22},
        [{cons,
          {2161,22},
          {tuple,
           {2161,23},
           [{atom,{2161,23},b_literal},{atom,{2161,38},private_append}]},
          {var,{2161,54},'_'}}],
        [],
        [{debug_line,2162,945},{atom,{2162,26},true}]},
       {clause,
        {2163,22},
        [{cons,
          {2163,22},
          {tuple,
           {2163,23},
           [{atom,{2163,23},b_literal},{atom,{2163,38},append}]},
          {cons,
           {2163,46},
           {var,{2163,46},'_'},
           {cons,{2163,48},{var,{2163,48},'Var'},{var,{2163,52},'_'}}}}],
        [],
        [{debug_line,2164,946},
         {'case',
          {2164,26},
          {call,
           {2164,31},
           {atom,{2164,31},argument_type},
           [{var,{2164,45},'Var'},{var,{2164,50},'Ts'}]},
          [{clause,
            {2165,30},
            [{tuple,
              {2165,30},
              [{atom,{2165,30},t_bitstring},
               {var,{2165,30},'_'},
               {var,{2165,54},'A'}]}],
            [],
            [{debug_line,2165,947},{var,{2165,60},'A'}]},
           {clause,
            {2166,30},
            [{tuple,
              {2166,30},
              [{atom,{2166,30},t_union},
               {var,{2166,30},'_'},
               {var,{2166,30},'_'},
               {var,{2166,30},'_'},
               {var,{2166,30},'_'},
               {tuple,
                {2166,45},
                [{atom,{2166,45},t_bitstring},
                 {var,{2166,45},'_'},
                 {var,{2166,69},'A'}]}]}],
            [],
            [{debug_line,2166,948},{var,{2166,76},'A'}]},
           {clause,
            {2167,30},
            [{var,{2167,30},'_'}],
            [],
            [{debug_line,2167,949},{atom,{2167,35},false}]}]}]},
       {clause,
        {2169,22},
        [{var,{2169,22},'_'}],
        [],
        [{debug_line,2170,950},{atom,{2170,26},false}]}]}},
    {debug_line,2172,951},
    {tuple,
     {2172,5},
     [{atom,{2172,5},t_bitstring},
      {var,{2172,28},'SizeUnit'},
      {var,{2172,48},'Appendable'}]}]},
  {clause,
   {2173,1},
   [{atom,{2173,6},bs_extract},
    {cons,{2173,18},{var,{2173,19},'Ctx'},{nil,{2173,22}}},
    {var,{2173,25},'_Anno'},
    {var,{2173,32},'Ts'},
    {var,{2173,36},'Ds'}],
   [],
   [{debug_line,2174,952},
    {match,
     {2174,5},
     {tuple,
      {2174,5},
      [{atom,{2174,5},b_set},
       {var,{2174,5},'_'},
       {var,{2174,5},'_'},
       {atom,{2174,15},bs_match},
       {cons,
        {2175,17},
        {tuple,{2175,18},[{atom,{2175,18},b_literal},{var,{2175,33},'Type'}]},
        {cons,{2175,40},{var,{2175,40},'_OrigCtx'},{var,{2175,51},'Args'}}}]},
     {call,
      {2175,60},
      {remote,{2175,60},{atom,{2175,60},erlang},{atom,{2175,60},map_get}},
      [{var,{2175,68},'Ctx'},{var,{2175,73},'Ds'}]}},
    {debug_line,2176,953},
    {call,
     {2176,5},
     {atom,{2176,5},bs_match_type},
     [{var,{2176,19},'Type'},{var,{2176,25},'Args'},{var,{2176,31},'Ts'}]}]},
  {clause,
   {2177,1},
   [{atom,{2177,6},bs_start_match},
    {cons,
     {2177,22},
     {var,{2177,23},'_'},
     {cons,{2177,26},{var,{2177,26},'Src'},{nil,{2177,29}}}},
    {var,{2177,32},'_Anno'},
    {var,{2177,39},'Ts'},
    {var,{2177,43},'_Ds'}],
   [],
   [{debug_line,2178,954},
    {'case',
     {2178,5},
     {call,
      {2178,10},
      {remote,{2178,20},{atom,{2178,10},beam_types},{atom,{2178,21},meet}},
      [{block,0,
        [{tuple,
          {2178,26},
          [{atom,{2178,26},t_bs_matchable},{integer,{2178,26},1}]}]},
       {block,0,
        [{call,
          {2178,45},
          {atom,{2178,45},concrete_type},
          [{var,{2178,59},'Src'},{var,{2178,64},'Ts'}]}]}]},
     [{clause,
       {2179,9},
       [{atom,{2179,9},none}],
       [],
       [{debug_line,2180,955},{atom,{2180,13},none}]},
      {clause,
       {2181,9},
       [{var,{2181,9},'T'}],
       [],
       [{debug_line,2182,956},
        {match,
         {2182,13},
         {var,{2182,13},'Unit'},
         {call,
          {2182,20},
          {remote,
           {2182,30},
           {atom,{2182,20},beam_types},
           {atom,{2182,31},get_bs_matchable_unit}},
          [{var,{2182,53},'T'}]}},
        {debug_line,2183,957},
        {tuple,
         {2183,13},
         [{atom,{2183,13},t_bs_context},{var,{2183,37},'Unit'}]}]}]}]},
  {clause,
   {2185,1},
   [{atom,{2185,6},bs_match},
    {cons,
     {2185,16},
     {tuple,{2185,17},[{atom,{2185,17},b_literal},{atom,{2185,32},binary}]},
     {cons,
      {2185,41},
      {var,{2185,41},'Ctx'},
      {cons,
       {2185,46},
       {var,{2185,46},'_Flags'},
       {cons,
        {2186,17},
        {tuple,{2186,17},[{atom,{2186,17},b_literal},{atom,{2186,32},all}]},
        {cons,
         {2186,38},
         {tuple,
          {2186,38},
          [{atom,{2186,38},b_literal},{var,{2186,53},'OpUnit'}]},
         {nil,{2186,60}}}}}}},
    {var,{2187,6},'_Anno'},
    {var,{2187,13},'Ts'},
    {var,{2187,17},'_Ds'}],
   [],
   [{debug_line,2191,958},
    {match,
     {2191,5},
     {var,{2191,5},'CtxType'},
     {call,
      {2191,15},
      {atom,{2191,15},concrete_type},
      [{var,{2191,29},'Ctx'},{var,{2191,34},'Ts'}]}},
    {debug_line,2192,959},
    {match,
     {2192,5},
     {var,{2192,5},'OpType'},
     {tuple,
      {2192,14},
      [{atom,{2192,14},t_bs_context},{var,{2192,38},'OpUnit'}]}},
    {debug_line,2194,960},
    {call,
     {2194,5},
     {remote,{2194,15},{atom,{2194,5},beam_types},{atom,{2194,16},meet}},
     [{var,{2194,21},'CtxType'},{var,{2194,30},'OpType'}]}]},
  {clause,
   {2195,1},
   [{atom,{2195,6},bs_match},
    {var,{2195,16},'Args0'},
    {var,{2195,23},'_Anno'},
    {var,{2195,30},'Ts'},
    {var,{2195,34},'_Ds'}],
   [],
   [{debug_line,2196,961},
    {match,
     {2196,5},
     {cons,
      {2196,5},
      {tuple,{2196,6},[{atom,{2196,6},b_literal},{var,{2196,21},'Type'}]},
      {cons,{2196,28},{var,{2196,28},'Ctx'},{var,{2196,34},'Args'}}},
     {var,{2196,42},'Args0'}},
    {debug_line,2197,962},
    {'case',
     {2197,5},
     {call,
      {2197,10},
      {atom,{2197,10},bs_match_type},
      [{var,{2197,24},'Type'},{var,{2197,30},'Args'},{var,{2197,36},'Ts'}]},
     [{clause,
       {2198,9},
       [{atom,{2198,9},none}],
       [],
       [{debug_line,2199,963},{atom,{2199,13},none}]},
      {clause,
       {2200,9},
       [{var,{2200,9},'_'}],
       [],
       [{debug_line,2205,964},
        {match,
         {2205,13},
         {tuple,
          {2205,13},
          [{atom,{2205,13},t_bs_context},{var,{2205,37},'CtxUnit'}]},
         {call,
          {2205,48},
          {atom,{2205,48},concrete_type},
          [{var,{2205,62},'Ctx'},{var,{2205,67},'Ts'}]}},
        {debug_line,2206,965},
        {match,
         {2206,13},
         {var,{2206,13},'OpUnit'},
         {call,
          {2206,22},
          {atom,{2206,22},bs_match_stride},
          [{var,{2206,38},'Type'},
           {var,{2206,44},'Args'},
           {var,{2206,50},'Ts'}]}},
        {debug_line,2208,966},
        {tuple,
         {2208,13},
         [{atom,{2208,13},t_bs_context},
          {call,
           {2208,37},
           {atom,{2208,37},gcd},
           [{var,{2208,41},'OpUnit'},{var,{2208,49},'CtxUnit'}]}]}]}]}]},
  {clause,
   {2210,1},
   [{atom,{2210,6},bs_get_tail},
    {cons,{2210,19},{var,{2210,20},'Ctx'},{nil,{2210,23}}},
    {var,{2210,26},'_Anno'},
    {var,{2210,33},'Ts'},
    {var,{2210,37},'_Ds'}],
   [],
   [{debug_line,2211,967},
    {match,
     {2211,5},
     {tuple,{2211,5},[{atom,{2211,5},t_bs_context},{var,{2211,29},'Unit'}]},
     {call,
      {2211,37},
      {atom,{2211,37},concrete_type},
      [{var,{2211,51},'Ctx'},{var,{2211,56},'Ts'}]}},
    {debug_line,2212,968},
    {tuple,
     {2212,5},
     [{atom,{2212,5},t_bitstring},
      {var,{2212,28},'Unit'},
      {atom,{2212,5},false}]}]},
  {clause,
   {2213,1},
   [{atom,{2213,6},call},
    {cons,
     {2213,12},
     {tuple,
      {2213,13},
      [{atom,{2213,13},b_remote},
       {tuple,{2213,27},[{atom,{2213,27},b_literal},{var,{2213,42},'Mod'}]},
       {tuple,{2214,28},[{atom,{2214,28},b_literal},{var,{2214,43},'Name'}]},
       {var,{2213,13},'_'}]},
     {var,{2214,50},'Args'}},
    {var,{2214,57},'_Anno'},
    {var,{2214,64},'Ts'},
    {var,{2214,68},'_Ds'}],
   [[{call,
      {2215,8},
      {remote,{2215,8},{atom,{2215,8},erlang},{atom,{2215,8},is_atom}},
      [{var,{2215,16},'Mod'}]},
     {call,
      {2215,22},
      {remote,{2215,22},{atom,{2215,22},erlang},{atom,{2215,22},is_atom}},
      [{var,{2215,30},'Name'}]}]],
   [{debug_line,2216,969},
    {match,
     {2216,5},
     {var,{2216,5},'ArgTypes'},
     {call,
      {2216,16},
      {atom,{2216,16},concrete_types},
      [{var,{2216,31},'Args'},{var,{2216,37},'Ts'}]}},
    {debug_line,2217,970},
    {match,
     {2217,5},
     {tuple,
      {2217,5},
      [{var,{2217,6},'RetType'},{var,{2217,15},'_'},{var,{2217,18},'_'}]},
     {call,
      {2217,23},
      {remote,
       {2217,38},
       {atom,{2217,23},beam_call_types},
       {atom,{2217,39},types}},
      [{var,{2217,45},'Mod'},
       {var,{2217,50},'Name'},
       {var,{2217,56},'ArgTypes'}]}},
    {debug_line,2218,971},
    {var,{2218,5},'RetType'}]},
  {clause,
   {2219,1},
   [{atom,{2219,6},call},
    {cons,
     {2219,12},
     {tuple,
      {2219,13},
      [{atom,{2219,13},b_remote},
       {var,{2219,27},'Mod'},
       {var,{2219,36},'Name'},
       {var,{2219,13},'_'}]},
     {var,{2219,44},'_Args'}},
    {var,{2219,52},'_Anno'},
    {var,{2219,59},'Ts'},
    {var,{2219,63},'_Ds'}],
   [],
   [{debug_line,2223,972},
    {match,
     {2223,5},
     {var,{2223,5},'ModType'},
     {call,
      {2223,15},
      {remote,{2223,25},{atom,{2223,15},beam_types},{atom,{2223,26},meet}},
      [{block,0,
        [{call,
          {2223,31},
          {atom,{2223,31},concrete_type},
          [{var,{2223,45},'Mod'},{var,{2223,50},'Ts'}]}]},
       {block,0,
        [{tuple,{2223,55},[{atom,{2223,55},t_atom},{atom,{2223,55},any}]}]}]}},
    {debug_line,2224,973},
    {match,
     {2224,5},
     {var,{2224,5},'NameType'},
     {call,
      {2224,16},
      {remote,{2224,26},{atom,{2224,16},beam_types},{atom,{2224,27},meet}},
      [{block,0,
        [{call,
          {2224,32},
          {atom,{2224,32},concrete_type},
          [{var,{2224,46},'Name'},{var,{2224,52},'Ts'}]}]},
       {block,0,
        [{tuple,{2224,57},[{atom,{2224,57},t_atom},{atom,{2224,57},any}]}]}]}},
    {debug_line,2225,974},
    {'case',
     {2225,5},
     {tuple,{2225,10},[{var,{2225,11},'ModType'},{var,{2225,20},'NameType'}]},
     [{clause,
       {2226,9},
       [{tuple,{2226,9},[{atom,{2226,10},none},{var,{2226,16},'_'}]}],
       [],
       [{debug_line,2226,975},{atom,{2226,22},none}]},
      {clause,
       {2227,9},
       [{tuple,{2227,9},[{var,{2227,10},'_'},{atom,{2227,13},none}]}],
       [],
       [{debug_line,2227,976},{atom,{2227,22},none}]},
      {clause,
       {2228,9},
       [{tuple,{2228,9},[{var,{2228,10},'_'},{var,{2228,13},'_'}]}],
       [],
       [{debug_line,2228,977},{atom,{2228,19},any}]}]}]},
  {clause,
   {2230,1},
   [{atom,{2230,6},call},
    {cons,
     {2230,12},
     {tuple,
      {2230,13},
      [{atom,{2230,13},b_local},{var,{2230,13},'_'},{var,{2230,13},'_'}]},
     {var,{2230,26},'_Args'}},
    {var,{2230,34},'Anno'},
    {var,{2230,40},'_Ts'},
    {var,{2230,45},'_Ds'}],
   [],
   [{debug_line,2231,978},
    {'case',
     {2231,5},
     {var,{2231,10},'Anno'},
     [{clause,
       {2232,9},
       [{map,
         {2232,9},
         [{map_field_exact,
           {2232,24},
           {atom,{2232,12},result_type},
           {var,{2232,27},'Type'}}]}],
       [],
       [{debug_line,2232,979},{var,{2232,37},'Type'}]},
      {clause,
       {2233,9},
       [{map,{2233,9},[]}],
       [],
       [{debug_line,2233,980},{atom,{2233,16},any}]}]}]},
  {clause,
   {2235,1},
   [{atom,{2235,6},call},
    {cons,
     {2235,12},
     {match,
      {2235,13},
      {tuple,{2235,13},[{atom,{2235,13},b_var},{var,{2235,13},'_'}]},
      {var,{2235,22},'Fun'}},
     {var,{2235,28},'Args'}},
    {var,{2235,35},'Anno'},
    {var,{2235,41},'Ts'},
    {var,{2235,45},'_Ds'}],
   [],
   [{debug_line,2236,981},
    {match,
     {2236,5},
     {var,{2236,5},'FunType'},
     {call,
      {2236,15},
      {atom,{2236,15},concrete_type},
      [{var,{2236,29},'Fun'},{var,{2236,34},'Ts'}]}},
    {debug_line,2237,982},
    {'case',
     {2237,5},
     {tuple,
      {2237,10},
      [{call,
        {2237,11},
        {remote,{2237,21},{atom,{2237,11},beam_types},{atom,{2237,22},meet}},
        [{var,{2237,27},'FunType'},
         {block,0,
          [{tuple,
            {2237,36},
            [{atom,{2237,36},t_fun},
             {call,
              {2237,49},
              {remote,
               {2237,49},
               {atom,{2237,49},erlang},
               {atom,{2237,49},length}},
              [{var,{2237,56},'Args'}]},
             {atom,{2237,36},any},
             {atom,{2237,36},any}]}]}]},
       {var,{2237,65},'Anno'}]},
     [{clause,
       {2238,9},
       [{tuple,
         {2238,9},
         [{tuple,
           {2238,10},
           [{atom,{2238,10},t_fun},
            {var,{2238,10},'_'},
            {var,{2238,10},'_'},
            {var,{2238,10},'_'}]},
          {map,
           {2238,20},
           [{map_field_exact,
             {2238,35},
             {atom,{2238,23},result_type},
             {var,{2238,38},'Type'}}]}]}],
       [],
       [{debug_line,2238,983},{var,{2238,49},'Type'}]},
      {clause,
       {2239,9},
       [{tuple,
         {2239,9},
         [{tuple,
           {2239,10},
           [{atom,{2239,10},t_fun},
            {var,{2239,10},'_'},
            {var,{2239,10},'_'},
            {var,{2239,10},'_'}]},
          {map,{2239,20},[]}]}],
       [],
       [{debug_line,2239,984},{atom,{2239,28},any}]},
      {clause,
       {2240,9},
       [{tuple,{2240,9},[{atom,{2240,10},none},{map,{2240,16},[]}]}],
       [],
       [{debug_line,2240,985},{atom,{2240,24},none}]}]}]},
  {clause,
   {2242,1},
   [{atom,{2242,6},call},
    {cons,
     {2242,12},
     {tuple,{2242,13},[{atom,{2242,13},b_literal},{var,{2242,28},'Fun'}]},
     {var,{2242,35},'Args'}},
    {var,{2242,42},'_Anno'},
    {var,{2242,49},'_Ts'},
    {var,{2242,54},'_Ds'}],
   [],
   [{debug_line,2243,986},
    {'case',
     {2243,5},
     {call,
      {2243,10},
      {remote,{2243,10},{atom,{2243,10},erlang},{atom,{2243,10},is_function}},
      [{var,{2243,22},'Fun'},
       {block,0,
        [{call,
          {2243,27},
          {remote,{2243,27},{atom,{2243,27},erlang},{atom,{2243,27},length}},
          [{var,{2243,34},'Args'}]}]}]},
     [{clause,
       {2244,9},
       [{atom,{2244,9},true}],
       [],
       [{debug_line,2246,987},{atom,{2246,13},any}]},
      {clause,
       {2247,9},
       [{atom,{2247,9},false}],
       [],
       [{debug_line,2250,988},{atom,{2250,13},none}]}]}]},
  {clause,
   {2252,1},
   [{atom,{2252,6},extract},
    {cons,
     {2252,15},
     {var,{2252,16},'V'},
     {cons,
      {2252,19},
      {tuple,{2252,19},[{atom,{2252,19},b_literal},{var,{2252,34},'Idx'}]},
      {nil,{2252,38}}}},
    {var,{2252,41},'_Anno'},
    {var,{2252,48},'_Ts'},
    {var,{2252,53},'Ds'}],
   [],
   [{debug_line,2253,989},
    {'case',
     {2253,5},
     {call,
      {2253,10},
      {remote,{2253,10},{atom,{2253,10},erlang},{atom,{2253,10},map_get}},
      [{var,{2253,18},'V'},{var,{2253,21},'Ds'}]},
     [{clause,
       {2254,9},
       [{tuple,
         {2254,9},
         [{atom,{2254,9},b_set},
          {var,{2254,9},'_'},
          {var,{2254,9},'_'},
          {atom,{2254,19},landingpad},
          {var,{2254,9},'_'}]}],
       [[{op,{2254,40},'=:=',{var,{2254,36},'Idx'},{integer,{2254,44},0}}]],
       [{debug_line,2256,990},
        {tuple,
         {2256,13},
         [{atom,{2256,13},t_atom},
          {cons,
           {2256,30},
           {atom,{2256,31},error},
           {cons,
            {2256,37},
            {atom,{2256,37},exit},
            {cons,{2256,42},{atom,{2256,42},throw},{nil,{2256,47}}}}}]}]},
      {clause,
       {2257,9},
       [{tuple,
         {2257,9},
         [{atom,{2257,9},b_set},
          {var,{2257,9},'_'},
          {var,{2257,9},'_'},
          {atom,{2257,19},landingpad},
          {var,{2257,9},'_'}]}],
       [[{op,{2257,40},'=:=',{var,{2257,36},'Idx'},{integer,{2257,44},1}}]],
       [{debug_line,2259,991},{atom,{2259,13},any}]},
      {clause,
       {2260,9},
       [{tuple,
         {2260,9},
         [{atom,{2260,9},b_set},
          {var,{2260,9},'_'},
          {var,{2260,9},'_'},
          {atom,{2260,19},landingpad},
          {var,{2260,9},'_'}]}],
       [[{op,{2260,40},'=:=',{var,{2260,36},'Idx'},{integer,{2260,44},2}}]],
       [{debug_line,2262,992},{atom,{2262,13},any}]}]}]},
  {clause,
   {2264,1},
   [{atom,{2264,6},get_hd},
    {cons,{2264,14},{var,{2264,15},'Src'},{nil,{2264,18}}},
    {var,{2264,21},'_Anno'},
    {var,{2264,28},'Ts'},
    {var,{2264,32},'_Ds'}],
   [],
   [{debug_line,2265,993},
    {match,
     {2265,5},
     {var,{2265,5},'SrcType'},
     {match,
      {2265,15},
      {tuple,
       {2265,15},
       [{atom,{2265,15},t_cons},{var,{2265,15},'_'},{var,{2265,15},'_'}]},
      {call,
       {2265,27},
       {atom,{2265,27},normalized_type},
       [{var,{2265,43},'Src'},{var,{2265,48},'Ts'}]}}},
    {debug_line,2266,994},
    {match,
     {2266,5},
     {tuple,
      {2266,5},
      [{var,{2266,6},'RetType'},{var,{2266,15},'_'},{var,{2266,18},'_'}]},
     {call,
      {2266,23},
      {remote,
       {2266,38},
       {atom,{2266,23},beam_call_types},
       {atom,{2266,39},types}},
      [{atom,{2266,45},erlang},
       {atom,{2266,53},hd},
       {block,0,
        [{cons,{2266,57},{var,{2266,58},'SrcType'},{nil,{2266,65}}}]}]}},
    {debug_line,2267,995},
    {var,{2267,5},'RetType'}]},
  {clause,
   {2268,1},
   [{atom,{2268,6},get_tl},
    {cons,{2268,14},{var,{2268,15},'Src'},{nil,{2268,18}}},
    {var,{2268,21},'_Anno'},
    {var,{2268,28},'Ts'},
    {var,{2268,32},'_Ds'}],
   [],
   [{debug_line,2269,996},
    {match,
     {2269,5},
     {var,{2269,5},'SrcType'},
     {match,
      {2269,15},
      {tuple,
       {2269,15},
       [{atom,{2269,15},t_cons},{var,{2269,15},'_'},{var,{2269,15},'_'}]},
      {call,
       {2269,27},
       {atom,{2269,27},normalized_type},
       [{var,{2269,43},'Src'},{var,{2269,48},'Ts'}]}}},
    {debug_line,2270,997},
    {match,
     {2270,5},
     {tuple,
      {2270,5},
      [{var,{2270,6},'RetType'},{var,{2270,15},'_'},{var,{2270,18},'_'}]},
     {call,
      {2270,23},
      {remote,
       {2270,38},
       {atom,{2270,23},beam_call_types},
       {atom,{2270,39},types}},
      [{atom,{2270,45},erlang},
       {atom,{2270,53},tl},
       {block,0,
        [{cons,{2270,57},{var,{2270,58},'SrcType'},{nil,{2270,65}}}]}]}},
    {debug_line,2271,998},
    {var,{2271,5},'RetType'}]},
  {clause,
   {2272,1},
   [{atom,{2272,6},get_map_element},
    {cons,
     {2272,23},
     {var,{2272,24},'Map0'},
     {cons,{2272,30},{var,{2272,30},'Key0'},{nil,{2272,34}}}},
    {var,{2272,37},'_Anno'},
    {var,{2272,44},'Ts'},
    {var,{2272,48},'_Ds'}],
   [],
   [{debug_line,2273,999},
    {match,
     {2273,5},
     {var,{2273,5},'Map'},
     {call,
      {2273,11},
      {atom,{2273,11},concrete_type},
      [{var,{2273,25},'Map0'},{var,{2273,31},'Ts'}]}},
    {debug_line,2274,1000},
    {match,
     {2274,5},
     {var,{2274,5},'Key'},
     {call,
      {2274,11},
      {atom,{2274,11},concrete_type},
      [{var,{2274,25},'Key0'},{var,{2274,31},'Ts'}]}},
    {debug_line,2276,1001},
    {match,
     {2276,5},
     {tuple,
      {2276,5},
      [{var,{2276,6},'RetType'},{var,{2276,15},'_'},{var,{2276,18},'_'}]},
     {call,
      {2276,23},
      {remote,
       {2276,38},
       {atom,{2276,23},beam_call_types},
       {atom,{2276,39},types}},
      [{atom,{2276,45},erlang},
       {atom,{2276,53},map_get},
       {block,0,
        [{cons,
          {2276,62},
          {var,{2276,63},'Key'},
          {cons,{2276,68},{var,{2276,68},'Map'},{nil,{2276,71}}}}]}]}},
    {debug_line,2277,1002},
    {var,{2277,5},'RetType'}]},
  {clause,
   {2278,1},
   [{atom,{2278,6},get_tuple_element},
    {cons,
     {2278,25},
     {var,{2278,26},'Tuple'},
     {cons,{2278,33},{var,{2278,33},'Offset'},{nil,{2278,39}}}},
    {var,{2278,42},'_Anno'},
    {var,{2278,49},'_Ts'},
    {var,{2278,54},'_Ds'}],
   [],
   [{debug_line,2279,1003},
    {match,
     {2279,5},
     {tuple,{2279,5},[{atom,{2279,5},b_literal},{var,{2279,20},'N'}]},
     {var,{2279,25},'Offset'}},
    {debug_line,2280,1004},
    {match,
     {2280,5},
     {var,{2280,5},'Index'},
     {op,{2280,15},'+',{var,{2280,13},'N'},{integer,{2280,17},1}}},
    {debug_line,2283,1005},
    {'fun',
     {2283,5},
     {clauses,
      [{clause,
        {2283,8},
        [{var,{2283,9},'Ts'}],
        [],
        [{debug_line,2284,1006},
         {match,
          {2284,13},
          {tuple,
           {2284,13},
           [{atom,{2284,13},t_tuple},
            {var,{2284,27},'Size'},
            {var,{2284,13},'_'},
            {var,{2284,41},'Es'}]},
          {call,
           {2284,47},
           {atom,{2284,47},normalized_type},
           [{var,{2284,63},'Tuple'},{var,{2284,70},'Ts'}]}},
         {debug_line,2285,1007},
         {match,
          {2285,13},
          {atom,{2285,13},true},
          {op,{2285,26},'=<',{var,{2285,20},'Index'},{var,{2285,29},'Size'}}},
         {debug_line,2286,1008},
         {call,
          {2286,13},
          {remote,
           {2286,23},
           {atom,{2286,13},beam_types},
           {atom,{2286,24},get_tuple_element}},
          [{var,{2286,42},'Index'},{var,{2286,49},'Es'}]}]}]}}]},
  {clause,
   {2288,1},
   [{atom,{2288,6},has_map_field},
    {cons,
     {2288,21},
     {var,{2288,22},'Map0'},
     {cons,{2288,28},{var,{2288,28},'Key0'},{nil,{2288,32}}}},
    {var,{2288,35},'_Anno'},
    {var,{2288,42},'Ts'},
    {var,{2288,46},'_Ds'}],
   [],
   [{debug_line,2289,1009},
    {match,
     {2289,5},
     {var,{2289,5},'Map'},
     {call,
      {2289,11},
      {atom,{2289,11},concrete_type},
      [{var,{2289,25},'Map0'},{var,{2289,31},'Ts'}]}},
    {debug_line,2290,1010},
    {match,
     {2290,5},
     {var,{2290,5},'Key'},
     {call,
      {2290,11},
      {atom,{2290,11},concrete_type},
      [{var,{2290,25},'Key0'},{var,{2290,31},'Ts'}]}},
    {debug_line,2292,1011},
    {match,
     {2292,5},
     {tuple,
      {2292,5},
      [{var,{2292,6},'RetType'},{var,{2292,15},'_'},{var,{2292,18},'_'}]},
     {call,
      {2292,23},
      {remote,
       {2292,38},
       {atom,{2292,23},beam_call_types},
       {atom,{2292,39},types}},
      [{atom,{2292,45},erlang},
       {atom,{2292,53},is_map_key},
       {block,0,
        [{cons,
          {2292,65},
          {var,{2292,66},'Key'},
          {cons,{2292,71},{var,{2292,71},'Map'},{nil,{2292,74}}}}]}]}},
    {debug_line,2293,1012},
    {match,
     {2293,5},
     {atom,{2293,5},true},
     {op,{2293,17},'=/=',{atom,{2293,12},none},{var,{2293,21},'RetType'}}},
    {debug_line,2294,1013},
    {var,{2294,5},'RetType'}]},
  {clause,
   {2295,1},
   [{atom,{2295,6},is_nonempty_list},
    {cons,{2295,24},{var,{2295,25},'_'},{nil,{2295,26}}},
    {var,{2295,29},'_Anno'},
    {var,{2295,36},'_Ts'},
    {var,{2295,41},'_Ds'}],
   [],
   [{debug_line,2296,1014},
    {call,
     {2296,5},
     {remote,
      {2296,15},
      {atom,{2296,5},beam_types},
      {atom,{2296,16},make_boolean}},
     []}]},
  {clause,
   {2297,1},
   [{atom,{2297,6},is_tagged_tuple},
    {cons,
     {2297,23},
     {var,{2297,24},'_'},
     {cons,
      {2297,26},
      {tuple,{2297,26},[{atom,{2297,26},b_literal},{var,{2297,26},'_'}]},
      {cons,
       {2297,39},
       {tuple,{2297,39},[{atom,{2297,39},b_literal},{var,{2297,39},'_'}]},
       {nil,{2297,51}}}}},
    {var,{2297,54},'_Anno'},
    {var,{2297,61},'_Ts'},
    {var,{2297,66},'_Ds'}],
   [],
   [{debug_line,2298,1015},
    {call,
     {2298,5},
     {remote,
      {2298,15},
      {atom,{2298,5},beam_types},
      {atom,{2298,16},make_boolean}},
     []}]},
  {clause,
   {2299,1},
   [{atom,{2299,6},make_fun},
    {var,{2299,16},'Args'},
    {var,{2299,22},'Anno'},
    {var,{2299,28},'_Ts'},
    {var,{2299,33},'_Ds'}],
   [],
   [{debug_line,2300,1016},
    {match,
     {2300,5},
     {var,{2300,5},'RetType'},
     {'case',
      {2300,15},
      {var,{2300,20},'Anno'},
      [{clause,
        {2301,19},
        [{map,
          {2301,19},
          [{map_field_exact,
            {2301,34},
            {atom,{2301,22},result_type},
            {var,{2301,37},'Type'}}]}],
        [],
        [{debug_line,2301,1017},{var,{2301,47},'Type'}]},
       {clause,
        {2302,19},
        [{map,{2302,19},[]}],
        [],
        [{debug_line,2302,1018},{atom,{2302,26},any}]}]}},
    {debug_line,2304,1019},
    {match,
     {2304,5},
     {cons,
      {2304,5},
      {tuple,
       {2304,6},
       [{atom,{2304,6},b_local},
        {tuple,{2304,20},[{atom,{2304,20},b_literal},{var,{2304,35},'Name'}]},
        {var,{2304,47},'TotalArity'}]},
      {var,{2304,61},'Env'}},
     {var,{2304,68},'Args'}},
    {debug_line,2305,1020},
    {match,
     {2305,5},
     {var,{2305,5},'Arity'},
     {op,
      {2305,24},
      '-',
      {var,{2305,13},'TotalArity'},
      {call,
       {2305,26},
       {remote,{2305,26},{atom,{2305,26},erlang},{atom,{2305,26},length}},
       [{var,{2305,33},'Env'}]}}},
    {debug_line,2306,1021},
    {tuple,
     {2306,5},
     [{atom,{2306,5},t_fun},
      {var,{2306,18},'Arity'},
      {tuple,{2306,31},[{var,{2306,32},'Name'},{var,{2306,37},'TotalArity'}]},
      {var,{2306,54},'RetType'}]}]},
  {clause,
   {2307,1},
   [{atom,{2307,6},match_fail},
    {var,{2307,18},'_'},
    {var,{2307,21},'_Anno'},
    {var,{2307,28},'_Ts'},
    {var,{2307,33},'_Ds'}],
   [],
   [{debug_line,2308,1022},{atom,{2308,5},none}]},
  {clause,
   {2309,1},
   [{atom,{2309,6},put_map},
    {cons,
     {2309,15},
     {var,{2309,16},'_Kind'},
     {cons,{2309,23},{var,{2309,23},'Map'},{var,{2309,29},'Ss'}}},
    {var,{2309,34},'_Anno'},
    {var,{2309,41},'Ts'},
    {var,{2309,45},'_Ds'}],
   [],
   [{debug_line,2310,1023},
    {call,
     {2310,5},
     {atom,{2310,5},put_map_type},
     [{var,{2310,18},'Map'},{var,{2310,23},'Ss'},{var,{2310,27},'Ts'}]}]},
  {clause,
   {2311,1},
   [{atom,{2311,6},put_list},
    {cons,
     {2311,16},
     {var,{2311,17},'Head'},
     {cons,{2311,23},{var,{2311,23},'Tail'},{nil,{2311,27}}}},
    {var,{2311,30},'_Anno'},
    {var,{2311,37},'Ts'},
    {var,{2311,41},'_Ds'}],
   [],
   [{debug_line,2312,1024},
    {match,
     {2312,5},
     {var,{2312,5},'HeadType'},
     {call,
      {2312,16},
      {atom,{2312,16},concrete_type},
      [{var,{2312,30},'Head'},{var,{2312,36},'Ts'}]}},
    {debug_line,2313,1025},
    {match,
     {2313,5},
     {var,{2313,5},'TailType'},
     {call,
      {2313,16},
      {atom,{2313,16},concrete_type},
      [{var,{2313,30},'Tail'},{var,{2313,36},'Ts'}]}},
    {debug_line,2314,1026},
    {call,
     {2314,5},
     {remote,{2314,15},{atom,{2314,5},beam_types},{atom,{2314,16},make_cons}},
     [{var,{2314,26},'HeadType'},{var,{2314,36},'TailType'}]}]},
  {clause,
   {2315,1},
   [{atom,{2315,6},put_tuple},
    {var,{2315,17},'Args'},
    {var,{2315,23},'_Anno'},
    {var,{2315,30},'Ts'},
    {var,{2315,34},'_Ds'}],
   [],
   [{debug_line,2316,1027},
    {match,
     {2316,5},
     {tuple,{2316,5},[{var,{2316,6},'Es'},{var,{2316,10},'_'}]},
     {call,
      {2316,15},
      {remote,{2316,15},{atom,{2316,15},lists},{atom,{2316,15},foldl}},
      [{block,0,
        [{'fun',
          {2316,21},
          {clauses,
           [{clause,
             {2316,24},
             [{var,{2316,25},'Arg'},
              {tuple,
               {2316,30},
               [{var,{2316,31},'Es0'},{var,{2316,36},'Index'}]}],
             [],
             [{debug_line,2317,1028},
              {match,
               {2317,29},
               {var,{2317,29},'Type'},
               {call,
                {2317,36},
                {atom,{2317,36},concrete_type},
                [{var,{2317,50},'Arg'},{var,{2317,55},'Ts'}]}},
              {debug_line,2318,1029},
              {match,
               {2318,29},
               {var,{2318,29},'Es'},
               {call,
                {2318,34},
                {remote,
                 {2318,44},
                 {atom,{2318,34},beam_types},
                 {atom,{2318,45},set_tuple_element}},
                [{var,{2318,63},'Index'},
                 {var,{2318,70},'Type'},
                 {var,{2318,76},'Es0'}]}},
              {debug_line,2319,1030},
              {tuple,
               {2319,29},
               [{var,{2319,30},'Es'},
                {op,
                 {2319,40},
                 '+',
                 {var,{2319,34},'Index'},
                 {integer,{2319,42},1}}]}]}]}}]},
       {block,0,
        [{debug_line,2320,1031},
         {tuple,{2320,26},[{map,{2320,27},[]},{integer,{2320,32},1}]}]},
       {var,{2320,36},'Args'}]}},
    {debug_line,2321,1032},
    {tuple,
     {2321,5},
     [{atom,{2321,5},t_tuple},
      {call,
       {2321,30},
       {remote,{2321,30},{atom,{2321,30},erlang},{atom,{2321,30},length}},
       [{var,{2321,37},'Args'}]},
      {atom,{2321,20},true},
      {var,{2321,52},'Es'}]}]},
  {clause,
   {2322,1},
   [{atom,{2322,6},raw_raise},
    {cons,
     {2322,17},
     {var,{2322,18},'Class'},
     {cons,
      {2322,25},
      {var,{2322,25},'_'},
      {cons,{2322,28},{var,{2322,28},'_'},{nil,{2322,29}}}}},
    {var,{2322,32},'_Anno'},
    {var,{2322,39},'Ts'},
    {var,{2322,43},'_Ds'}],
   [],
   [{debug_line,2323,1033},
    {match,
     {2323,5},
     {var,{2323,5},'ClassType'},
     {call,
      {2323,17},
      {atom,{2323,17},concrete_type},
      [{var,{2323,31},'Class'},{var,{2323,38},'Ts'}]}},
    {debug_line,2324,1034},
    {'case',
     {2324,5},
     {call,
      {2324,10},
      {remote,{2324,20},{atom,{2324,10},beam_types},{atom,{2324,21},meet}},
      [{var,{2324,26},'ClassType'},
       {block,0,
        [{tuple,
          {2324,37},
          [{atom,{2324,37},t_atom},
           {cons,
            {2324,54},
            {atom,{2324,55},error},
            {cons,
             {2324,61},
             {atom,{2324,61},exit},
             {cons,{2324,66},{atom,{2324,66},throw},{nil,{2324,71}}}}}]}]}]},
     [{clause,
       {2325,9},
       [{var,{2325,9},'ClassType'}],
       [],
       [{debug_line,2329,1035},{atom,{2329,13},none}]},
      {clause,
       {2330,9},
       [{var,{2330,9},'_'}],
       [],
       [{debug_line,2331,1036},
        {call,
         {2331,13},
         {remote,
          {2331,23},
          {atom,{2331,13},beam_types},
          {atom,{2331,24},make_atom}},
         [{atom,{2331,34},badarg}]}]}]}]},
  {clause,
   {2333,1},
   [{atom,{2333,6},resume},
    {cons,
     {2333,14},
     {var,{2333,15},'_'},
     {cons,{2333,18},{var,{2333,18},'_'},{nil,{2333,19}}}},
    {var,{2333,22},'_Anno'},
    {var,{2333,29},'_Ts'},
    {var,{2333,34},'_Ds'}],
   [],
   [{debug_line,2334,1037},{atom,{2334,5},none}]},
  {clause,
   {2335,1},
   [{atom,{2335,6},update_record},
    {cons,
     {2335,21},
     {var,{2335,22},'_Hint'},
     {cons,
      {2335,29},
      {var,{2335,29},'_Size'},
      {cons,{2335,36},{var,{2335,36},'Src'},{var,{2335,42},'Updates'}}}},
    {var,{2335,52},'_Anno'},
    {var,{2335,59},'Ts'},
    {var,{2335,63},'_Ds'}],
   [],
   [{debug_line,2336,1038},
    {call,
     {2336,5},
     {atom,{2336,5},update_tuple_type},
     [{var,{2336,23},'Updates'},{var,{2336,32},'Src'},{var,{2336,37},'Ts'}]}]},
  {clause,
   {2337,1},
   [{atom,{2337,6},update_tuple},
    {cons,{2337,20},{var,{2337,21},'Src'},{var,{2337,27},'Updates'}},
    {var,{2337,37},'_Anno'},
    {var,{2337,44},'Ts'},
    {var,{2337,48},'_Ds'}],
   [],
   [{debug_line,2338,1039},
    {call,
     {2338,5},
     {atom,{2338,5},update_tuple_type},
     [{var,{2338,23},'Updates'},{var,{2338,32},'Src'},{var,{2338,37},'Ts'}]}]},
  {clause,
   {2339,1},
   [{atom,{2339,6},wait_timeout},
    {cons,
     {2339,20},
     {tuple,{2339,21},[{atom,{2339,21},b_literal},{atom,{2339,36},infinity}]},
     {nil,{2339,45}}},
    {var,{2339,48},'_Anno'},
    {var,{2339,55},'_Ts'},
    {var,{2339,60},'_Ds'}],
   [],
   [{debug_line,2341,1040},
    {call,
     {2341,5},
     {remote,{2341,15},{atom,{2341,5},beam_types},{atom,{2341,16},make_atom}},
     [{atom,{2341,26},false}]}]},
  {clause,
   {2342,1},
   [{atom,{2342,6},bs_init_writable},
    {cons,{2342,24},{var,{2342,25},'_Size'},{nil,{2342,30}}},
    {var,{2342,33},'_'},
    {var,{2342,36},'_'},
    {var,{2342,39},'_'}],
   [],
   [{debug_line,2343,1041},
    {call,
     {2343,5},
     {remote,
      {2343,15},
      {atom,{2343,5},beam_types},
      {atom,{2343,16},make_type_from_value}},
     [{block,0,[{bin,{2343,37},[]}]}]}]},
  {clause,
   {2344,1},
   [{var,{2344,6},'_'},
    {var,{2344,9},'_'},
    {var,{2344,12},'_'},
    {var,{2344,15},'_'},
    {var,{2344,18},'_'}],
   [],
   [{debug_line,2345,1042},{atom,{2345,5},any}]}]}.
{function,
    {2347,1},
    update_tuple_type,3,
    [{clause,
         {2347,1},
         [{var,{2347,1},'_'},{var,{2347,1},'_'},{var,{2347,1},'_'}],
         [[{call,
               {2347,1},
               {remote,
                   {2347,1},
                   {atom,{2347,1},fake},
                   {atom,{2347,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2347,1043},{atom,{2347,1},ignore}]},
     {clause,
         {2347,1},
         [{match,
              {2347,19},
              {cons,{2347,19},{var,{2347,20},'_'},{var,{2347,22},'_'}},
              {var,{2347,25},'Updates0'}},
          {var,{2347,35},'Src'},
          {var,{2347,40},'Ts'}],
         [],
         [{debug_line,2348,1044},
          {match,
              {2348,5},
              {var,{2348,5},'Updates'},
              {call,
                  {2348,15},
                  {atom,{2348,15},update_tuple_type_1},
                  [{var,{2348,35},'Updates0'},{var,{2348,45},'Ts'}]}},
          {debug_line,2349,1045},
          {call,
              {2349,5},
              {remote,
                  {2349,15},
                  {atom,{2349,5},beam_types},
                  {atom,{2349,16},update_tuple}},
              [{block,0,
                   [{call,
                        {2349,29},
                        {atom,{2349,29},concrete_type},
                        [{var,{2349,43},'Src'},{var,{2349,48},'Ts'}]}]},
               {var,{2349,53},'Updates'}]}]}]}.
{function,
    {2351,1},
    update_tuple_type_1,2,
    [{clause,
         {2351,1},
         [{var,{2351,1},'_'},{var,{2351,1},'_'}],
         [[{call,
               {2351,1},
               {remote,
                   {2351,1},
                   {atom,{2351,1},fake},
                   {atom,{2351,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2351,1046},{atom,{2351,1},ignore}]},
     {clause,
         {2351,1},
         [{cons,
              {2351,21},
              {tuple,
                  {2351,22},
                  [{atom,{2351,22},b_literal},{var,{2351,37},'Index'}]},
              {cons,
                  {2351,45},
                  {var,{2351,45},'Value'},
                  {var,{2351,53},'Updates'}}},
          {var,{2351,63},'Ts'}],
         [],
         [{debug_line,2352,1047},
          {cons,
              {2352,5},
              {tuple,
                  {2352,6},
                  [{var,{2352,7},'Index'},
                   {call,
                       {2352,14},
                       {atom,{2352,14},concrete_type},
                       [{var,{2352,28},'Value'},{var,{2352,35},'Ts'}]}]},
              {call,
                  {2352,42},
                  {atom,{2352,42},update_tuple_type_1},
                  [{var,{2352,62},'Updates'},{var,{2352,71},'Ts'}]}}]},
     {clause,
         {2353,1},
         [{nil,{2353,21}},{var,{2353,25},'_Ts'}],
         [],
         [{debug_line,2354,1048},{nil,{2354,5}}]}]}.
{function,
    {2356,1},
    update_tuple_highest_index,2,
    [{clause,
         {2356,1},
         [{var,{2356,1},'_'},{var,{2356,1},'_'}],
         [[{call,
               {2356,1},
               {remote,
                   {2356,1},
                   {atom,{2356,1},fake},
                   {atom,{2356,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2356,1049},{atom,{2356,1},ignore}]},
     {clause,
         {2356,1},
         [{cons,
              {2356,28},
              {tuple,
                  {2356,29},
                  [{atom,{2356,29},b_literal},{var,{2356,44},'Index'}]},
              {cons,
                  {2356,52},
                  {var,{2356,52},'_Value'},
                  {var,{2356,61},'Updates'}}},
          {var,{2356,71},'Acc'}],
         [],
         [{debug_line,2357,1050},
          {call,
              {2357,5},
              {atom,{2357,5},update_tuple_highest_index},
              [{var,{2357,32},'Updates'},
               {block,0,
                   [{call,
                        {2357,41},
                        {remote,
                            {2357,41},
                            {atom,{2357,41},erlang},
                            {atom,{2357,41},max}},
                        [{var,{2357,45},'Index'},{var,{2357,52},'Acc'}]}]}]}]},
     {clause,
         {2358,1},
         [{nil,{2358,28}},{var,{2358,32},'Acc'}],
         [],
         [{debug_line,2359,1051},
          {match,
              {2359,5},
              {atom,{2359,5},true},
              {op,{2359,16},'>=',{var,{2359,12},'Acc'},{integer,{2359,19},1}}},
          {debug_line,2360,1052},
          {var,{2360,5},'Acc'}]}]}.
{function,
    {2362,1},
    join_tuple_elements,1,
    [{clause,
         {2362,1},
         [{var,{2362,1},'_'}],
         [[{call,
               {2362,1},
               {remote,
                   {2362,1},
                   {atom,{2362,1},fake},
                   {atom,{2362,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2362,1053},{atom,{2362,1},ignore}]},
     {clause,
         {2362,1},
         [{var,{2362,21},'Tuple'}],
         [],
         [{debug_line,2363,1054},
          {call,
              {2363,5},
              {atom,{2363,5},join_tuple_elements},
              [{block,0,
                   [{call,
                        {2363,25},
                        {remote,
                            {2363,25},
                            {atom,{2363,25},erlang},
                            {atom,{2363,25},tuple_size}},
                        [{var,{2363,36},'Tuple'}]}]},
               {var,{2363,44},'Tuple'},
               {atom,{2363,51},none}]}]}]}.
{function,
    {2365,1},
    join_tuple_elements,3,
    [{clause,
         {2365,1},
         [{var,{2365,1},'_'},{var,{2365,1},'_'},{var,{2365,1},'_'}],
         [[{call,
               {2365,1},
               {remote,
                   {2365,1},
                   {atom,{2365,1},fake},
                   {atom,{2365,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2365,1055},{atom,{2365,1},ignore}]},
     {clause,
         {2365,1},
         [{integer,{2365,21},0},
          {var,{2365,24},'_Tuple'},
          {var,{2365,32},'Type'}],
         [],
         [{debug_line,2366,1056},{var,{2366,5},'Type'}]},
     {clause,
         {2367,1},
         [{var,{2367,21},'I'},{var,{2367,24},'Tuple'},{var,{2367,31},'Type0'}],
         [],
         [{debug_line,2368,1057},
          {match,
              {2368,5},
              {var,{2368,5},'Type1'},
              {call,
                  {2368,13},
                  {remote,
                      {2368,23},
                      {atom,{2368,13},beam_types},
                      {atom,{2368,24},make_type_from_value}},
                  [{block,0,
                       [{call,
                            {2368,45},
                            {remote,
                                {2368,45},
                                {atom,{2368,45},erlang},
                                {atom,{2368,45},element}},
                            [{var,{2368,53},'I'},
                             {var,{2368,56},'Tuple'}]}]}]}},
          {debug_line,2369,1058},
          {match,
              {2369,5},
              {var,{2369,5},'Type'},
              {call,
                  {2369,12},
                  {remote,
                      {2369,22},
                      {atom,{2369,12},beam_types},
                      {atom,{2369,23},join}},
                  [{var,{2369,28},'Type0'},{var,{2369,35},'Type1'}]}},
          {debug_line,2370,1059},
          {call,
              {2370,5},
              {atom,{2370,5},join_tuple_elements},
              [{block,0,
                   [{op,{2370,27},
                        '-',
                        {var,{2370,25},'I'},
                        {integer,{2370,29},1}}]},
               {var,{2370,32},'Tuple'},
               {var,{2370,39},'Type'}]}]}]}.
{function,
    {2372,1},
    put_map_type,3,
    [{clause,
         {2372,1},
         [{var,{2372,1},'_'},{var,{2372,1},'_'},{var,{2372,1},'_'}],
         [[{call,
               {2372,1},
               {remote,
                   {2372,1},
                   {atom,{2372,1},fake},
                   {atom,{2372,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2372,1060},{atom,{2372,1},ignore}]},
     {clause,
         {2372,1},
         [{var,{2372,14},'Map'},{var,{2372,19},'Ss'},{var,{2372,23},'Ts'}],
         [],
         [{debug_line,2373,1061},
          {call,
              {2373,5},
              {atom,{2373,5},pmt_1},
              [{var,{2373,11},'Ss'},
               {var,{2373,15},'Ts'},
               {block,0,
                   [{call,
                        {2373,19},
                        {atom,{2373,19},concrete_type},
                        [{var,{2373,33},'Map'},{var,{2373,38},'Ts'}]}]}]}]}]}.
{function,
    {2375,1},
    pmt_1,3,
    [{clause,
         {2375,1},
         [{var,{2375,1},'_'},{var,{2375,1},'_'},{var,{2375,1},'_'}],
         [[{call,
               {2375,1},
               {remote,
                   {2375,1},
                   {atom,{2375,1},fake},
                   {atom,{2375,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2375,1062},{atom,{2375,1},ignore}]},
     {clause,
         {2375,1},
         [{cons,
              {2375,7},
              {var,{2375,8},'Key0'},
              {cons,{2375,14},{var,{2375,14},'Value0'},{var,{2375,23},'Ss'}}},
          {var,{2375,28},'Ts'},
          {var,{2375,32},'Acc0'}],
         [],
         [{debug_line,2376,1063},
          {match,
              {2376,5},
              {var,{2376,5},'Key'},
              {call,
                  {2376,11},
                  {atom,{2376,11},concrete_type},
                  [{var,{2376,25},'Key0'},{var,{2376,31},'Ts'}]}},
          {debug_line,2377,1064},
          {match,
              {2377,5},
              {var,{2377,5},'Value'},
              {call,
                  {2377,13},
                  {atom,{2377,13},concrete_type},
                  [{var,{2377,27},'Value0'},{var,{2377,35},'Ts'}]}},
          {debug_line,2378,1065},
          {match,
              {2378,5},
              {tuple,
                  {2378,5},
                  [{var,{2378,6},'Acc'},
                   {var,{2378,11},'_'},
                   {var,{2378,14},'_'}]},
              {call,
                  {2378,19},
                  {remote,
                      {2378,34},
                      {atom,{2378,19},beam_call_types},
                      {atom,{2378,35},types}},
                  [{atom,{2378,41},maps},
                   {atom,{2378,47},put},
                   {block,0,
                       [{cons,
                            {2378,52},
                            {var,{2378,53},'Key'},
                            {cons,
                                {2378,58},
                                {var,{2378,58},'Value'},
                                {cons,
                                    {2378,65},
                                    {var,{2378,65},'Acc0'},
                                    {nil,{2378,69}}}}}]}]}},
          {debug_line,2379,1066},
          {call,
              {2379,5},
              {atom,{2379,5},pmt_1},
              [{var,{2379,11},'Ss'},
               {var,{2379,15},'Ts'},
               {var,{2379,19},'Acc'}]}]},
     {clause,
         {2380,1},
         [{nil,{2380,7}},{var,{2380,11},'_Ts'},{var,{2380,16},'Acc'}],
         [],
         [{debug_line,2381,1067},{var,{2381,5},'Acc'}]}]}.
{function,{2383,1},
          bs_size_unit,2,
          [{clause,{2383,1},
                   [{var,{2383,1},'_'},{var,{2383,1},'_'}],
                   [[{call,{2383,1},
                           {remote,{2383,1},
                                   {atom,{2383,1},fake},
                                   {atom,{2383,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2383,1068},{atom,{2383,1},ignore}]},
           {clause,{2383,1},
                   [{var,{2383,14},'Args'},{var,{2383,20},'Ts'}],
                   [],
                   [{debug_line,2384,1069},
                    {call,{2384,5},
                          {atom,{2384,5},bs_size_unit},
                          [{var,{2384,18},'Args'},
                           {var,{2384,24},'Ts'},
                           {integer,{2384,28},0},
                           {integer,{2384,31},256}]}]}]}.
{function,
 {2386,1},
 bs_size_unit,4,
 [{clause,
   {2386,1},
   [{var,{2386,1},'_'},
    {var,{2386,1},'_'},
    {var,{2386,1},'_'},
    {var,{2386,1},'_'}],
   [[{call,
      {2386,1},
      {remote,{2386,1},{atom,{2386,1},fake},{atom,{2386,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2386,1070},{atom,{2386,1},ignore}]},
  {clause,
   {2386,1},
   [{cons,
     {2386,14},
     {tuple,{2386,15},[{atom,{2386,15},b_literal},{var,{2386,30},'Type'}]},
     {cons,
      {2386,36},
      {tuple,
       {2386,36},
       [{atom,{2386,36},b_literal},
        {cons,{2386,51},{var,{2386,52},'U1'},{var,{2386,55},'_'}}]},
      {cons,
       {2386,59},
       {var,{2386,59},'Value'},
       {cons,{2386,65},{var,{2386,65},'SizeTerm'},{var,{2386,74},'Args'}}}}},
    {var,{2387,14},'Ts'},
    {var,{2387,18},'FixedSize'},
    {var,{2387,29},'Unit'}],
   [],
   [{debug_line,2388,1071},
    {'case',
     {2388,5},
     {tuple,
      {2388,10},
      [{var,{2388,11},'Type'},
       {var,{2388,16},'Value'},
       {var,{2388,22},'SizeTerm'}]},
     [{clause,
       {2389,9},
       [{tuple,
         {2389,9},
         [{var,{2389,10},'_'},
          {tuple,{2389,12},[{atom,{2389,12},b_literal},{var,{2389,27},'Bs'}]},
          {tuple,
           {2389,31},
           [{atom,{2389,31},b_literal},{atom,{2389,46},all}]}]}],
       [[{call,
          {2389,57},
          {remote,
           {2389,57},
           {atom,{2389,57},erlang},
           {atom,{2389,57},is_bitstring}},
          [{var,{2389,70},'Bs'}]}]],
       [{debug_line,2391,1072},
        {match,
         {2391,13},
         {var,{2391,13},'Size'},
         {op,
          {2391,33},
          '+',
          {call,
           {2391,20},
           {remote,
            {2391,20},
            {atom,{2391,20},erlang},
            {atom,{2391,20},bit_size}},
           [{var,{2391,29},'Bs'}]},
          {var,{2391,35},'FixedSize'}}},
        {debug_line,2392,1073},
        {call,
         {2392,13},
         {atom,{2392,13},bs_size_unit},
         [{var,{2392,26},'Args'},
          {var,{2392,32},'Ts'},
          {var,{2392,36},'Size'},
          {var,{2392,42},'Unit'}]}]},
      {clause,
       {2393,9},
       [{tuple,
         {2393,9},
         [{var,{2393,10},'_'},
          {var,{2393,12},'_'},
          {tuple,
           {2393,14},
           [{atom,{2393,14},b_literal},{atom,{2393,29},all}]}]}],
       [],
       [{debug_line,2394,1074},
        {'case',
         {2394,13},
         {call,
          {2394,18},
          {atom,{2394,18},concrete_type},
          [{var,{2394,32},'Value'},{var,{2394,39},'Ts'}]},
         [{clause,
           {2395,17},
           [{tuple,
             {2395,17},
             [{atom,{2395,17},t_bitstring},
              {var,{2395,40},'U2'},
              {var,{2395,17},'_'}]}],
           [],
           [{debug_line,2398,1075},
            {match,
             {2398,21},
             {var,{2398,21},'U'},
             {call,
              {2398,25},
              {remote,{2398,25},{atom,{2398,25},erlang},{atom,{2398,25},max}},
              [{var,{2398,29},'U1'},{var,{2398,33},'U2'}]}},
            {debug_line,2399,1076},
            {call,
             {2399,21},
             {atom,{2399,21},bs_size_unit},
             [{var,{2399,34},'Args'},
              {var,{2399,40},'Ts'},
              {var,{2399,44},'FixedSize'},
              {block,0,
               [{call,
                 {2399,55},
                 {atom,{2399,55},gcd},
                 [{var,{2399,59},'U'},{var,{2399,62},'Unit'}]}]}]}]},
          {clause,
           {2400,17},
           [{var,{2400,17},'_'}],
           [],
           [{debug_line,2402,1077},
            {call,
             {2402,21},
             {atom,{2402,21},bs_size_unit},
             [{var,{2402,34},'Args'},
              {var,{2402,40},'Ts'},
              {var,{2402,44},'FixedSize'},
              {block,0,
               [{call,
                 {2402,55},
                 {atom,{2402,55},gcd},
                 [{var,{2402,59},'U1'},{var,{2402,63},'Unit'}]}]}]}]}]}]},
      {clause,
       {2404,9},
       [{tuple,
         {2404,9},
         [{atom,{2404,10},utf8},{var,{2404,15},'_'},{var,{2404,17},'_'}]}],
       [],
       [{debug_line,2406,1078},
        {call,
         {2406,13},
         {atom,{2406,13},bs_size_unit},
         [{var,{2406,26},'Args'},
          {var,{2406,32},'Ts'},
          {block,0,
           [{op,
             {2406,38},
             '+',
             {integer,{2406,36},8},
             {var,{2406,40},'FixedSize'}}]},
          {block,0,
           [{call,
             {2406,51},
             {atom,{2406,51},gcd},
             [{integer,{2406,55},8},{var,{2406,58},'Unit'}]}]}]}]},
      {clause,
       {2407,9},
       [{tuple,
         {2407,9},
         [{atom,{2407,10},utf16},{var,{2407,16},'_'},{var,{2407,18},'_'}]}],
       [],
       [{debug_line,2409,1079},
        {call,
         {2409,13},
         {atom,{2409,13},bs_size_unit},
         [{var,{2409,26},'Args'},
          {var,{2409,32},'Ts'},
          {block,0,
           [{op,
             {2409,39},
             '+',
             {integer,{2409,36},16},
             {var,{2409,41},'FixedSize'}}]},
          {block,0,
           [{call,
             {2409,52},
             {atom,{2409,52},gcd},
             [{integer,{2409,56},16},{var,{2409,60},'Unit'}]}]}]}]},
      {clause,
       {2410,9},
       [{tuple,
         {2410,9},
         [{atom,{2410,10},utf32},{var,{2410,16},'_'},{var,{2410,18},'_'}]}],
       [],
       [{debug_line,2412,1080},
        {call,
         {2412,13},
         {atom,{2412,13},bs_size_unit},
         [{var,{2412,26},'Args'},
          {var,{2412,32},'Ts'},
          {block,0,
           [{op,
             {2412,39},
             '+',
             {integer,{2412,36},32},
             {var,{2412,41},'FixedSize'}}]},
          {var,{2412,52},'Unit'}]}]},
      {clause,
       {2413,9},
       [{tuple,
         {2413,9},
         [{var,{2413,10},'_'},{var,{2413,12},'_'},{var,{2413,14},'_'}]}],
       [],
       [{debug_line,2414,1081},
        {'case',
         {2414,13},
         {call,
          {2414,18},
          {atom,{2414,18},concrete_type},
          [{var,{2414,32},'SizeTerm'},{var,{2414,42},'Ts'}]},
         [{clause,
           {2415,17},
           [{tuple,
             {2415,17},
             [{atom,{2415,17},t_integer},
              {tuple,
               {2415,37},
               [{var,{2415,38},'Size1'},{var,{2415,45},'Size1'}]}]}],
           [[{call,
              {2416,24},
              {remote,
               {2416,24},
               {atom,{2416,24},erlang},
               {atom,{2416,24},is_integer}},
              [{var,{2416,35},'Size1'}]},
             {call,
              {2416,43},
              {remote,
               {2416,43},
               {atom,{2416,43},erlang},
               {atom,{2416,43},is_integer}},
              [{var,{2416,54},'U1'}]},
             {op,
              {2416,65},
              '>=',
              {var,{2416,59},'Size1'},
              {integer,{2416,68},0}}]],
           [{debug_line,2417,1082},
            {match,
             {2417,21},
             {var,{2417,21},'EffectiveSize'},
             {op,{2417,43},'*',{var,{2417,37},'Size1'},{var,{2417,45},'U1'}}},
            {debug_line,2419,1083},
            {call,
             {2419,21},
             {atom,{2419,21},bs_size_unit},
             [{var,{2419,34},'Args'},
              {var,{2419,40},'Ts'},
              {block,0,
               [{op,
                 {2419,58},
                 '+',
                 {var,{2419,44},'EffectiveSize'},
                 {var,{2419,60},'FixedSize'}}]},
              {var,{2419,71},'Unit'}]}]},
          {clause,
           {2420,17},
           [{var,{2420,17},'_'}],
           [[{call,
              {2420,24},
              {remote,
               {2420,24},
               {atom,{2420,24},erlang},
               {atom,{2420,24},is_integer}},
              [{var,{2420,35},'U1'}]}]],
           [{debug_line,2422,1084},
            {call,
             {2422,21},
             {atom,{2422,21},bs_size_unit},
             [{var,{2422,34},'Args'},
              {var,{2422,40},'Ts'},
              {var,{2422,44},'FixedSize'},
              {block,0,
               [{call,
                 {2422,55},
                 {atom,{2422,55},gcd},
                 [{var,{2422,59},'U1'},{var,{2422,63},'Unit'}]}]}]}]},
          {clause,
           {2423,17},
           [{var,{2423,17},'_'}],
           [],
           [{debug_line,2425,1085},
            {call,
             {2425,21},
             {atom,{2425,21},bs_size_unit},
             [{var,{2425,34},'Args'},
              {var,{2425,40},'Ts'},
              {var,{2425,44},'FixedSize'},
              {block,0,
               [{call,
                 {2425,55},
                 {atom,{2425,55},gcd},
                 [{integer,{2425,59},1},{var,{2425,62},'Unit'}]}]}]}]}]}]}]}]},
  {clause,
   {2428,1},
   [{nil,{2428,14}},
    {var,{2428,18},'_Ts'},
    {var,{2428,23},'FixedSize'},
    {var,{2428,34},'Unit'}],
   [],
   [{debug_line,2429,1086},
    {call,
     {2429,5},
     {atom,{2429,5},gcd},
     [{var,{2429,9},'FixedSize'},{var,{2429,20},'Unit'}]}]}]}.
{function,
    {2433,1},
    bs_match_stride,3,
    [{clause,
         {2433,1},
         [{var,{2433,1},'_'},{var,{2433,1},'_'},{var,{2433,1},'_'}],
         [[{call,
               {2433,1},
               {remote,
                   {2433,1},
                   {atom,{2433,1},fake},
                   {atom,{2433,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2433,1087},{atom,{2433,1},ignore}]},
     {clause,
         {2433,1},
         [{var,{2433,17},'_'},
          {cons,
              {2433,20},
              {var,{2433,21},'_'},
              {cons,
                  {2433,23},
                  {var,{2433,23},'Size'},
                  {cons,
                      {2433,28},
                      {tuple,
                          {2433,28},
                          [{atom,{2433,28},b_literal},{var,{2433,43},'Unit'}]},
                      {nil,{2433,48}}}}},
          {var,{2433,51},'Ts'}],
         [],
         [{debug_line,2434,1088},
          {'case',
              {2434,5},
              {call,
                  {2434,10},
                  {atom,{2434,10},concrete_type},
                  [{var,{2434,24},'Size'},{var,{2434,30},'Ts'}]},
              [{clause,
                   {2435,9},
                   [{tuple,
                        {2435,9},
                        [{atom,{2435,9},t_integer},
                         {tuple,
                             {2435,29},
                             [{var,{2435,30},'Sz'},{var,{2435,34},'Sz'}]}]}],
                   [[{call,
                         {2435,44},
                         {remote,
                             {2435,44},
                             {atom,{2435,44},erlang},
                             {atom,{2435,44},is_integer}},
                         [{var,{2435,55},'Sz'}]}]],
                   [{debug_line,2436,1089},
                    {op,{2436,16},
                        '*',
                        {var,{2436,13},'Sz'},
                        {var,{2436,18},'Unit'}}]},
               {clause,
                   {2437,9},
                   [{var,{2437,9},'_'}],
                   [],
                   [{debug_line,2438,1090},{var,{2438,13},'Unit'}]}]}]},
     {clause,
         {2440,1},
         [{atom,{2440,17},string},
          {cons,
              {2440,25},
              {tuple,
                  {2440,26},
                  [{atom,{2440,26},b_literal},{var,{2440,41},'String'}]},
              {nil,{2440,48}}},
          {var,{2440,51},'_'}],
         [],
         [{debug_line,2441,1091},
          {call,
              {2441,5},
              {remote,
                  {2441,5},
                  {atom,{2441,5},erlang},
                  {atom,{2441,5},bit_size}},
              [{var,{2441,14},'String'}]}]},
     {clause,
         {2442,1},
         [{atom,{2442,17},utf8},{var,{2442,23},'_'},{var,{2442,26},'_'}],
         [],
         [{debug_line,2443,1092},{integer,{2443,5},8}]},
     {clause,
         {2444,1},
         [{atom,{2444,17},utf16},{var,{2444,24},'_'},{var,{2444,27},'_'}],
         [],
         [{debug_line,2445,1093},{integer,{2445,5},16}]},
     {clause,
         {2446,1},
         [{atom,{2446,17},utf32},{var,{2446,24},'_'},{var,{2446,27},'_'}],
         [],
         [{debug_line,2447,1094},{integer,{2447,5},32}]},
     {clause,
         {2448,1},
         [{var,{2448,17},'_'},{var,{2448,20},'_'},{var,{2448,23},'_'}],
         [],
         [{debug_line,2449,1095},{integer,{2449,5},1}]}]}.
{function,
 {2453,1},
 bs_match_type,3,
 [{clause,
   {2453,1},
   [{var,{2453,1},'_'},{var,{2453,1},'_'},{var,{2453,1},'_'}],
   [[{call,
      {2453,1},
      {remote,{2453,1},{atom,{2453,1},fake},{atom,{2453,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2453,1096},{atom,{2453,1},ignore}]},
  {clause,
   {2453,1},
   [{atom,{2453,15},binary},{var,{2453,23},'Args'},{var,{2453,29},'_Ts'}],
   [],
   [{debug_line,2454,1097},
    {match,
     {2454,5},
     {cons,
      {2454,5},
      {var,{2454,6},'_'},
      {cons,
       {2454,8},
       {var,{2454,8},'_'},
       {cons,
        {2454,10},
        {tuple,{2454,10},[{atom,{2454,10},b_literal},{var,{2454,25},'U'}]},
        {nil,{2454,27}}}}},
     {var,{2454,31},'Args'}},
    {debug_line,2455,1098},
    {tuple,
     {2455,5},
     [{atom,{2455,5},t_bitstring},
      {var,{2455,28},'U'},
      {atom,{2455,5},false}]}]},
  {clause,
   {2456,1},
   [{atom,{2456,15},float},{var,{2456,22},'_Args'},{var,{2456,29},'_Ts'}],
   [],
   [{debug_line,2457,1099},
    {tuple,{2457,5},[{atom,{2457,5},t_float},{atom,{2457,5},any}]}]},
  {clause,
   {2458,1},
   [{atom,{2458,15},integer},{var,{2458,24},'Args'},{var,{2458,30},'Ts'}],
   [],
   [{debug_line,2459,1100},
    {match,
     {2459,5},
     {cons,
      {2459,5},
      {tuple,{2459,6},[{atom,{2459,6},b_literal},{var,{2459,21},'Flags'}]},
      {cons,
       {2459,28},
       {var,{2459,28},'Size'},
       {cons,
        {2459,33},
        {tuple,{2459,33},[{atom,{2459,33},b_literal},{var,{2459,48},'Unit'}]},
        {nil,{2459,53}}}}},
     {var,{2459,57},'Args'}},
    {debug_line,2460,1101},
    {'case',
     {2460,5},
     {call,
      {2460,10},
      {remote,{2460,20},{atom,{2460,10},beam_types},{atom,{2460,21},meet}},
      [{block,0,
        [{call,
          {2460,26},
          {atom,{2460,26},concrete_type},
          [{var,{2460,40},'Size'},{var,{2460,46},'Ts'}]}]},
       {block,0,
        [{tuple,
          {2460,51},
          [{atom,{2460,51},t_integer},{atom,{2460,51},any}]}]}]},
     [{clause,
       {2461,9},
       [{tuple,{2461,9},[{atom,{2461,9},t_integer},{var,{2461,29},'Bounds'}]}],
       [],
       [{debug_line,2462,1102},
        {'case',
         {2462,13},
         {call,
          {2462,18},
          {remote,
           {2462,29},
           {atom,{2462,18},beam_bounds},
           {atom,{2462,30},bounds}},
          [{atom,{2462,37},'*'},
           {var,{2462,42},'Bounds'},
           {block,0,
            [{tuple,
              {2462,50},
              [{var,{2462,51},'Unit'},{var,{2462,57},'Unit'}]}]}]},
         [{clause,
           {2463,17},
           [{tuple,{2463,17},[{var,{2463,18},'_'},{var,{2463,21},'MaxBits'}]}],
           [[{call,
              {2463,35},
              {remote,
               {2463,35},
               {atom,{2463,35},erlang},
               {atom,{2463,35},is_integer}},
              [{var,{2463,46},'MaxBits'}]},
             {op,
              {2464,43},
              '>=',
              {var,{2464,35},'MaxBits'},
              {integer,{2464,46},1}},
             {op,
              {2465,43},
              '=<',
              {var,{2465,35},'MaxBits'},
              {integer,{2465,46},64}}]],
           [{debug_line,2466,1103},
            {'case',
             {2466,21},
             {call,
              {2466,26},
              {remote,
               {2466,26},
               {atom,{2466,26},lists},
               {atom,{2466,26},member}},
              [{atom,{2466,33},unsigned},{var,{2466,43},'Flags'}]},
             [{clause,
               {2467,25},
               [{atom,{2467,25},true}],
               [],
               [{debug_line,2468,1104},
                {match,
                 {2468,29},
                 {var,{2468,29},'Max'},
                 {op,
                  {2468,51},
                  '-',
                  {op,
                   {2468,38},
                   'bsl',
                   {integer,{2468,36},1},
                   {var,{2468,42},'MaxBits'}},
                  {integer,{2468,53},1}}},
                {debug_line,2469,1105},
                {call,
                 {2469,29},
                 {remote,
                  {2469,39},
                  {atom,{2469,29},beam_types},
                  {atom,{2469,40},make_integer}},
                 [{integer,{2469,53},0},{var,{2469,56},'Max'}]}]},
              {clause,
               {2470,25},
               [{atom,{2470,25},false}],
               [],
               [{debug_line,2471,1106},
                {match,
                 {2471,29},
                 {var,{2471,29},'Max'},
                 {op,
                  {2471,57},
                  '-',
                  {op,
                   {2471,38},
                   'bsl',
                   {integer,{2471,36},1},
                   {op,
                    {2471,51},
                    '-',
                    {var,{2471,43},'MaxBits'},
                    {integer,{2471,53},1}}},
                  {integer,{2471,59},1}}},
                {debug_line,2472,1107},
                {match,
                 {2472,29},
                 {var,{2472,29},'Min'},
                 {op,
                  {2472,35},
                  '-',
                  {op,
                   {2472,41},
                   '+',
                   {var,{2472,37},'Max'},
                   {integer,{2472,43},1}}}},
                {debug_line,2473,1108},
                {call,
                 {2473,29},
                 {remote,
                  {2473,39},
                  {atom,{2473,29},beam_types},
                  {atom,{2473,40},make_integer}},
                 [{var,{2473,53},'Min'},{var,{2473,58},'Max'}]}]}]}]},
          {clause,
           {2475,17},
           [{tuple,{2475,17},[{var,{2475,18},'_'},{integer,{2475,21},0}]}],
           [],
           [{debug_line,2476,1109},
            {call,
             {2476,21},
             {remote,
              {2476,31},
              {atom,{2476,21},beam_types},
              {atom,{2476,32},make_integer}},
             [{integer,{2476,45},0}]}]},
          {clause,
           {2477,17},
           [{var,{2477,17},'_'}],
           [],
           [{debug_line,2478,1110},
            {'case',
             {2478,21},
             {call,
              {2478,26},
              {remote,
               {2478,26},
               {atom,{2478,26},lists},
               {atom,{2478,26},member}},
              [{atom,{2478,33},unsigned},{var,{2478,43},'Flags'}]},
             [{clause,
               {2479,25},
               [{atom,{2479,25},true}],
               [],
               [{debug_line,2479,1111},
                {tuple,
                 {2479,33},
                 [{atom,{2479,33},t_integer},
                  {tuple,
                   {2479,53},
                   [{integer,{2479,54},0},{atom,{2479,56},'+inf'}]}]}]},
              {clause,
               {2480,25},
               [{atom,{2480,25},false}],
               [],
               [{debug_line,2480,1112},
                {tuple,
                 {2480,34},
                 [{atom,{2480,34},t_integer},{atom,{2480,34},any}]}]}]}]}]}]},
      {clause,
       {2483,9},
       [{atom,{2483,9},none}],
       [],
       [{debug_line,2484,1113},{atom,{2484,13},none}]}]}]},
  {clause,
   {2487,1},
   [{atom,{2487,15},utf8},{var,{2487,21},'_Args'},{var,{2487,28},'_Ts'}],
   [],
   [{debug_line,2488,1114},
    {call,
     {2488,5},
     {remote,
      {2488,15},
      {atom,{2488,5},beam_types},
      {atom,{2488,16},make_integer}},
     [{integer,{2488,29},0},{integer,{2488,33},1114111}]}]},
  {clause,
   {2489,1},
   [{atom,{2489,15},utf16},{var,{2489,22},'_Args'},{var,{2489,29},'_Ts'}],
   [],
   [{debug_line,2490,1115},
    {call,
     {2490,5},
     {remote,
      {2490,15},
      {atom,{2490,5},beam_types},
      {atom,{2490,16},make_integer}},
     [{integer,{2490,29},0},{integer,{2490,33},1114111}]}]},
  {clause,
   {2491,1},
   [{atom,{2491,15},utf32},{var,{2491,22},'_Args'},{var,{2491,29},'_Ts'}],
   [],
   [{debug_line,2492,1116},
    {call,
     {2492,5},
     {remote,
      {2492,15},
      {atom,{2492,5},beam_types},
      {atom,{2492,16},make_integer}},
     [{integer,{2492,29},0},{integer,{2492,33},1114111}]}]},
  {clause,
   {2493,1},
   [{atom,{2493,15},string},{var,{2493,23},'_Args'},{var,{2493,30},'_Ts'}],
   [],
   [{debug_line,2496,1117},{atom,{2496,5},any}]}]}.
{function,{2498,1},
          normalized_types,2,
          [{clause,{2498,1},
                   [{var,{2498,1},'_'},{var,{2498,1},'_'}],
                   [[{call,{2498,1},
                           {remote,{2498,1},
                                   {atom,{2498,1},fake},
                                   {atom,{2498,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2498,1118},{atom,{2498,1},ignore}]},
           {clause,{2498,1},
                   [{var,{2498,18},'Values'},{var,{2498,26},'Ts'}],
                   [],
                   [{debug_line,2499,1119},
                    {lc,{2499,5},
                        {block,0,
                               [{call,{2499,6},
                                      {atom,{2499,6},normalized_type},
                                      [{var,{2499,22},'Val'},
                                       {var,{2499,27},'Ts'}]}]},
                        [{block,0,[{atom,{2499,41},true}]},
                         {generate,{2499,38},
                                   {var,{2499,34},'Val'},
                                   {var,{2499,41},'Values'}}]}]}]}.
{attribute,
    {2501,2},
    spec,
    {{normalized_type,2},
     [{type,
          {2501,22},
          'fun',
          [{type,
               {2501,22},
               product,
               [{remote_type,
                    {2501,23},
                    [{atom,{2501,23},beam_ssa},{atom,{2501,32},value},[]]},
                {user_type,{2501,41},type_db,[]}]},
           {user_type,{2501,55},normal_type,[]}]}]}}.
{function,
    {2503,1},
    normalized_type,2,
    [{clause,
         {2503,1},
         [{var,{2503,1},'_'},{var,{2503,1},'_'}],
         [[{call,
               {2503,1},
               {remote,
                   {2503,1},
                   {atom,{2503,1},fake},
                   {atom,{2503,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2503,1120},{atom,{2503,1},ignore}]},
     {clause,
         {2503,1},
         [{var,{2503,17},'V'},{var,{2503,20},'Ts'}],
         [],
         [{debug_line,2504,1121},
          {call,
              {2504,5},
              {remote,
                  {2504,15},
                  {atom,{2504,5},beam_types},
                  {atom,{2504,16},normalize}},
              [{block,0,
                   [{call,
                        {2504,26},
                        {atom,{2504,26},concrete_type},
                        [{var,{2504,40},'V'},{var,{2504,43},'Ts'}]}]}]}]}]}.
{function,{2506,1},
          argument_types,2,
          [{clause,{2506,1},
                   [{var,{2506,1},'_'},{var,{2506,1},'_'}],
                   [[{call,{2506,1},
                           {remote,{2506,1},
                                   {atom,{2506,1},fake},
                                   {atom,{2506,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2506,1122},{atom,{2506,1},ignore}]},
           {clause,{2506,1},
                   [{var,{2506,16},'Values'},{var,{2506,24},'Ts'}],
                   [],
                   [{debug_line,2507,1123},
                    {lc,{2507,5},
                        {block,0,
                               [{call,{2507,6},
                                      {atom,{2507,6},argument_type},
                                      [{var,{2507,20},'Val'},
                                       {var,{2507,25},'Ts'}]}]},
                        [{block,0,[{atom,{2507,39},true}]},
                         {generate,{2507,36},
                                   {var,{2507,32},'Val'},
                                   {var,{2507,39},'Values'}}]}]}]}.
{attribute,
    {2509,2},
    spec,
    {{argument_type,2},
     [{type,
          {2509,20},
          'fun',
          [{type,
               {2509,20},
               product,
               [{remote_type,
                    {2509,21},
                    [{atom,{2509,21},beam_ssa},{atom,{2509,30},value},[]]},
                {user_type,{2509,39},type_db,[]}]},
           {user_type,{2509,53},type,[]}]}]}}.
{function,
    {2511,1},
    argument_type,2,
    [{clause,
         {2511,1},
         [{var,{2511,1},'_'},{var,{2511,1},'_'}],
         [[{call,
               {2511,1},
               {remote,
                   {2511,1},
                   {atom,{2511,1},fake},
                   {atom,{2511,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2511,1124},{atom,{2511,1},ignore}]},
     {clause,
         {2511,1},
         [{var,{2511,15},'V'},{var,{2511,18},'Ts'}],
         [],
         [{debug_line,2512,1125},
          {call,
              {2512,5},
              {remote,
                  {2512,15},
                  {atom,{2512,5},beam_types},
                  {atom,{2512,16},limit_depth}},
              [{block,0,
                   [{call,
                        {2512,28},
                        {atom,{2512,28},concrete_type},
                        [{var,{2512,42},'V'},{var,{2512,45},'Ts'}]}]}]}]}]}.
{function,{2514,1},
          concrete_types,2,
          [{clause,{2514,1},
                   [{var,{2514,1},'_'},{var,{2514,1},'_'}],
                   [[{call,{2514,1},
                           {remote,{2514,1},
                                   {atom,{2514,1},fake},
                                   {atom,{2514,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2514,1126},{atom,{2514,1},ignore}]},
           {clause,{2514,1},
                   [{var,{2514,16},'Values'},{var,{2514,24},'Ts'}],
                   [],
                   [{debug_line,2515,1127},
                    {lc,{2515,5},
                        {block,0,
                               [{call,{2515,6},
                                      {atom,{2515,6},concrete_type},
                                      [{var,{2515,20},'Val'},
                                       {var,{2515,25},'Ts'}]}]},
                        [{block,0,[{atom,{2515,39},true}]},
                         {generate,{2515,36},
                                   {var,{2515,32},'Val'},
                                   {var,{2515,39},'Values'}}]}]}]}.
{attribute,
    {2517,2},
    spec,
    {{concrete_type,2},
     [{type,
          {2517,20},
          'fun',
          [{type,
               {2517,20},
               product,
               [{remote_type,
                    {2517,21},
                    [{atom,{2517,21},beam_ssa},{atom,{2517,30},value},[]]},
                {user_type,{2517,39},type_db,[]}]},
           {user_type,{2517,53},type,[]}]}]}}.
{function,
    {2519,1},
    concrete_type,2,
    [{clause,
         {2519,1},
         [{var,{2519,1},'_'},{var,{2519,1},'_'}],
         [[{call,
               {2519,1},
               {remote,
                   {2519,1},
                   {atom,{2519,1},fake},
                   {atom,{2519,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2519,1128},{atom,{2519,1},ignore}]},
     {clause,
         {2519,1},
         [{tuple,
              {2519,15},
              [{atom,{2519,15},b_literal},{var,{2519,30},'Value'}]},
          {var,{2519,38},'_Ts'}],
         [],
         [{debug_line,2520,1129},
          {call,
              {2520,5},
              {remote,
                  {2520,15},
                  {atom,{2520,5},beam_types},
                  {atom,{2520,16},make_type_from_value}},
              [{var,{2520,37},'Value'}]}]},
     {clause,
         {2521,1},
         [{match,
              {2521,15},
              {tuple,{2521,15},[{atom,{2521,15},b_var},{var,{2521,15},'_'}]},
              {var,{2521,24},'Var'}},
          {var,{2521,29},'Ts'}],
         [],
         [{debug_line,2522,1130},
          {match,
              {2522,5},
              {map,
                  {2522,5},
                  [{map_field_exact,
                       {2522,12},
                       {var,{2522,8},'Var'},
                       {var,{2522,15},'Type'}}]},
              {var,{2522,24},'Ts'}},
          {debug_line,2523,1131},
          {'case',
              {2523,5},
              {call,
                  {2523,10},
                  {remote,
                      {2523,10},
                      {atom,{2523,10},erlang},
                      {atom,{2523,10},is_function}},
                  [{var,{2523,22},'Type'}]},
              [{clause,
                   {2524,9},
                   [{atom,{2524,9},true}],
                   [],
                   [{debug_line,2524,1132},
                    {call,
                        {2524,17},
                        {var,{2524,17},'Type'},
                        [{var,{2524,22},'Ts'}]}]},
               {clause,
                   {2525,9},
                   [{atom,{2525,9},false}],
                   [],
                   [{debug_line,2525,1133},{var,{2525,18},'Type'}]}]}]}]}.
{function,
    {2549,1},
    infer_types_br,4,
    [{clause,
         {2549,1},
         [{var,{2549,1},'_'},
          {var,{2549,1},'_'},
          {var,{2549,1},'_'},
          {var,{2549,1},'_'}],
         [[{call,
               {2549,1},
               {remote,
                   {2549,1},
                   {atom,{2549,1},fake},
                   {atom,{2549,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2549,1134},{atom,{2549,1},ignore}]},
     {clause,
         {2549,1},
         [{match,
              {2549,16},
              {tuple,{2549,16},[{atom,{2549,16},b_var},{var,{2549,16},'_'}]},
              {var,{2549,25},'V'}},
          {var,{2549,28},'Ts'},
          {var,{2549,32},'IsTempVar'},
          {var,{2549,43},'Ds'}],
         [],
         [{debug_line,2550,1135},
          {match,
              {2550,5},
              {tuple,
                  {2550,5},
                  [{var,{2550,6},'SuccTs0'},{var,{2550,15},'FailTs0'}]},
              {call,
                  {2550,26},
                  {atom,{2550,26},infer_types_br_1},
                  [{var,{2550,43},'V'},
                   {var,{2550,46},'Ts'},
                   {var,{2550,50},'Ds'}]}},
          {debug_line,2552,1136},
          {'case',
              {2552,5},
              {var,{2552,10},'IsTempVar'},
              [{clause,
                   {2553,9},
                   [{atom,{2553,9},true}],
                   [],
                   [{debug_line,2558,1137},
                    {match,
                        {2558,13},
                        {var,{2558,13},'SuccTs'},
                        {call,
                            {2558,22},
                            {atom,{2558,22},ts_remove_var},
                            [{var,{2558,36},'V'},{var,{2558,39},'SuccTs0'}]}},
                    {debug_line,2559,1138},
                    {match,
                        {2559,13},
                        {var,{2559,13},'FailTs'},
                        {call,
                            {2559,22},
                            {atom,{2559,22},ts_remove_var},
                            [{var,{2559,36},'V'},{var,{2559,39},'FailTs0'}]}},
                    {debug_line,2560,1139},
                    {tuple,
                        {2560,13},
                        [{var,{2560,14},'SuccTs'},{var,{2560,22},'FailTs'}]}]},
               {clause,
                   {2561,9},
                   [{atom,{2561,9},false}],
                   [],
                   [{debug_line,2562,1140},
                    {match,
                        {2562,13},
                        {var,{2562,13},'SuccTs'},
                        {call,
                            {2562,22},
                            {atom,{2562,22},infer_br_value},
                            [{var,{2562,37},'V'},
                             {atom,{2562,40},true},
                             {var,{2562,46},'SuccTs0'}]}},
                    {debug_line,2563,1141},
                    {match,
                        {2563,13},
                        {var,{2563,13},'FailTs'},
                        {call,
                            {2563,22},
                            {atom,{2563,22},infer_br_value},
                            [{var,{2563,37},'V'},
                             {atom,{2563,40},false},
                             {var,{2563,47},'FailTs0'}]}},
                    {debug_line,2564,1142},
                    {tuple,
                        {2564,13},
                        [{var,{2564,14},'SuccTs'},
                         {var,{2564,22},'FailTs'}]}]}]}]}]}.
{function,
    {2567,1},
    infer_types_br_1,3,
    [{clause,
         {2567,1},
         [{var,{2567,1},'_'},{var,{2567,1},'_'},{var,{2567,1},'_'}],
         [[{call,
               {2567,1},
               {remote,
                   {2567,1},
                   {atom,{2567,1},fake},
                   {atom,{2567,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2567,1143},{atom,{2567,1},ignore}]},
     {clause,
         {2567,1},
         [{var,{2567,18},'V'},{var,{2567,21},'Ts'},{var,{2567,25},'Ds'}],
         [],
         [{debug_line,2568,1144},
          {match,
              {2568,5},
              {map,
                  {2568,5},
                  [{map_field_exact,
                       {2568,8},
                       {var,{2568,7},'V'},
                       {tuple,
                           {2568,10},
                           [{atom,{2568,10},b_set},
                            {var,{2568,10},'_'},
                            {var,{2568,10},'_'},
                            {var,{2568,20},'Op0'},
                            {var,{2568,29},'Args'}]}}]},
              {var,{2568,38},'Ds'}},
          {debug_line,2570,1145},
          {'case',
              {2570,5},
              {call,
                  {2570,10},
                  {atom,{2570,10},inv_relop},
                  [{var,{2570,20},'Op0'}]},
              [{clause,
                   {2571,9},
                   [{atom,{2571,9},none}],
                   [],
                   [{debug_line,2573,1146},
                    {match,
                        {2573,13},
                        {tuple,
                            {2573,13},
                            [{var,{2573,14},'PosTypes'},
                             {var,{2573,24},'NegTypes'}]},
                        {call,
                            {2573,36},
                            {atom,{2573,36},infer_type},
                            [{var,{2573,47},'Op0'},
                             {var,{2573,52},'Args'},
                             {var,{2573,58},'Ts'},
                             {var,{2573,62},'Ds'}]}},
                    {debug_line,2574,1147},
                    {match,
                        {2574,13},
                        {var,{2574,13},'SuccTs'},
                        {call,
                            {2574,22},
                            {atom,{2574,22},meet_types},
                            [{var,{2574,33},'PosTypes'},
                             {var,{2574,43},'Ts'}]}},
                    {debug_line,2575,1148},
                    {match,
                        {2575,13},
                        {var,{2575,13},'FailTs'},
                        {call,
                            {2575,22},
                            {atom,{2575,22},subtract_types},
                            [{var,{2575,37},'NegTypes'},
                             {var,{2575,47},'Ts'}]}},
                    {debug_line,2576,1149},
                    {tuple,
                        {2576,13},
                        [{var,{2576,14},'SuccTs'},{var,{2576,22},'FailTs'}]}]},
               {clause,
                   {2577,9},
                   [{var,{2577,9},'InvOp'}],
                   [],
                   [{debug_line,2579,1150},
                    {match,
                        {2579,13},
                        {tuple,
                            {2579,13},
                            [{atom,{2579,14},bif},{var,{2579,18},'Op'}]},
                        {var,{2579,24},'Op0'}},
                    {debug_line,2582,1151},
                    {match,
                        {2582,13},
                        {var,{2582,13},'Types'},
                        {call,
                            {2582,21},
                            {atom,{2582,21},concrete_types},
                            [{var,{2582,36},'Args'},{var,{2582,42},'Ts'}]}},
                    {debug_line,2583,1152},
                    {match,
                        {2583,13},
                        {tuple,
                            {2583,13},
                            [{var,{2583,14},'TruePos'},
                             {var,{2583,23},'TrueNeg'}]},
                        {call,
                            {2583,34},
                            {atom,{2583,34},infer_relop},
                            [{var,{2583,46},'Op'},
                             {var,{2583,50},'Args'},
                             {var,{2583,56},'Types'},
                             {var,{2583,63},'Ds'}]}},
                    {debug_line,2584,1153},
                    {match,
                        {2584,13},
                        {var,{2584,13},'TrueTypes'},
                        {'maybe',
                            {2584,25},
                            [{debug_line,2585,1154},
                             {maybe_match,
                                 {2585,45},
                                 {match,
                                     {2585,28},
                                     {var,{2585,28},'TrueTypes0'},
                                     {map,{2585,41},[]}},
                                 {call,
                                     {2585,48},
                                     {atom,{2585,48},meet_types},
                                     [{var,{2585,59},'TruePos'},
                                      {var,{2585,68},'Ts'}]}},
                             {debug_line,2586,1155},
                             {call,
                                 {2586,28},
                                 {atom,{2586,28},subtract_types},
                                 [{var,{2586,43},'TrueNeg'},
                                  {var,{2586,52},'TrueTypes0'}]}],
                            {'else',
                                {2587,25},
                                [{clause,
                                     {2588,29},
                                     [{atom,{2588,29},none}],
                                     [],
                                     [{debug_line,2588,1156},
                                      {atom,{2588,37},none}]}]}}},
                    {debug_line,2592,1157},
                    {match,
                        {2592,13},
                        {tuple,
                            {2592,13},
                            [{var,{2592,14},'FalsePos'},
                             {var,{2592,24},'FalseNeg'}]},
                        {call,
                            {2592,36},
                            {atom,{2592,36},infer_relop},
                            [{var,{2592,48},'InvOp'},
                             {var,{2592,55},'Args'},
                             {var,{2592,61},'Types'},
                             {var,{2592,68},'Ds'}]}},
                    {debug_line,2593,1158},
                    {match,
                        {2593,13},
                        {var,{2593,13},'FalseTypes'},
                        {'maybe',
                            {2593,26},
                            [{debug_line,2594,1159},
                             {maybe_match,
                                 {2594,47},
                                 {match,
                                     {2594,29},
                                     {var,{2594,29},'FalseTypes0'},
                                     {map,{2594,43},[]}},
                                 {call,
                                     {2594,50},
                                     {atom,{2594,50},meet_types},
                                     [{var,{2594,61},'FalsePos'},
                                      {var,{2594,71},'Ts'}]}},
                             {debug_line,2595,1160},
                             {call,
                                 {2595,29},
                                 {atom,{2595,29},subtract_types},
                                 [{var,{2595,44},'FalseNeg'},
                                  {var,{2595,54},'FalseTypes0'}]}],
                            {'else',
                                {2596,26},
                                [{clause,
                                     {2597,30},
                                     [{atom,{2597,30},none}],
                                     [],
                                     [{debug_line,2597,1161},
                                      {atom,{2597,38},none}]}]}}},
                    {debug_line,2600,1162},
                    {tuple,
                        {2600,13},
                        [{var,{2600,14},'TrueTypes'},
                         {var,{2600,25},'FalseTypes'}]}]}]}]}]}.
{function,
 {2603,1},
 infer_relop,4,
 [{clause,
   {2603,1},
   [{var,{2603,1},'_'},
    {var,{2603,1},'_'},
    {var,{2603,1},'_'},
    {var,{2603,1},'_'}],
   [[{call,
      {2603,1},
      {remote,{2603,1},{atom,{2603,1},fake},{atom,{2603,1},is_beam_bif_info}},
      []}]],
   [{debug_line,2603,1163},{atom,{2603,1},ignore}]},
  {clause,
   {2603,1},
   [{atom,{2603,13},'=:='},
    {cons,
     {2603,20},
     {var,{2603,21},'LHS'},
     {cons,{2603,25},{var,{2603,25},'RHS'},{nil,{2603,28}}}},
    {cons,
     {2604,13},
     {match,
      {2604,14},
      {tuple,
       {2604,14},
       [{atom,{2604,14},t_bitstring},
        {var,{2604,14},'_'},
        {var,{2604,38},'LHSApp'}]},
      {var,{2604,46},'LType0'}},
     {cons,
      {2605,14},
      {match,
       {2605,14},
       {tuple,
        {2605,14},
        [{atom,{2605,14},t_bitstring},
         {var,{2605,14},'_'},
         {var,{2605,38},'RHSApp'}]},
       {var,{2605,46},'RType0'}},
      {nil,{2605,52}}}},
    {var,{2605,55},'Ds'}],
   [[{var,{2606,8},'LHSApp'}],[{var,{2606,17},'RHSApp'}]],
   [{debug_line,2615,1164},
    {match,
     {2615,5},
     {tuple,
      {2615,5},
      [{cons,
        {2615,6},
        {tuple,{2615,7},[{var,{2615,8},'LHS'},{var,{2615,12},'LType'}]},
        {cons,
         {2615,19},
         {tuple,{2615,19},[{var,{2615,20},'RHS'},{var,{2615,24},'RType'}]},
         {var,{2615,33},'EqTypes'}}},
       {nil,{2615,43}}]},
     {call,
      {2616,9},
      {atom,{2616,9},infer_relop},
      [{atom,{2616,21},'=:='},
       {block,0,
        [{debug_line,2616,1165},
         {cons,
          {2616,28},
          {var,{2616,29},'LHS'},
          {cons,{2616,33},{var,{2616,33},'RHS'},{nil,{2616,36}}}}]},
       {block,0,
        [{debug_line,2617,1166},
         {cons,
          {2617,21},
          {block,
           {2617,22},
           [{match,{2617,22},{var,{2617,22},rec109},{var,{2617,22},'LType0'}},
            {'case',
             {2617,41},
             {var,{2617,22},rec109},
             [{clause,
               {2617,41},
               [{tuple,
                 {2617,41},
                 [{atom,{2617,41},t_bitstring},
                  {var,{2617,41},'_'},
                  {var,{2617,41},'_'}]}],
               [],
               [{call,
                 {2617,41},
                 {remote,
                  {2617,41},
                  {atom,{2617,41},erlang},
                  {atom,{2617,41},setelement}},
                 [{integer,{2617,41},3},
                  {var,{2617,22},rec109},
                  {atom,{2617,52},false}]}]},
              {clause,
               [{generated,true},{location,{2617,41}}],
               [{var,[{generated,true},{location,{2617,41}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2617,41}}],
                 {remote,
                  [{generated,true},{location,{2617,41}}],
                  {atom,[{generated,true},{location,{2617,41}}],erlang},
                  {atom,[{generated,true},{location,{2617,41}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2617,41}}],
                   [{atom,[{generated,true},{location,{2617,41}}],badrecord},
                    {var,{2617,22},rec109}]}]}]}]}]},
          {cons,
           {2618,22},
           {block,
            {2618,22},
            [{match,{2618,22},{var,{2618,22},rec110},{var,{2618,22},'RType0'}},
             {'case',
              {2618,41},
              {var,{2618,22},rec110},
              [{clause,
                {2618,41},
                [{tuple,
                  {2618,41},
                  [{atom,{2618,41},t_bitstring},
                   {var,{2618,41},'_'},
                   {var,{2618,41},'_'}]}],
                [],
                [{call,
                  {2618,41},
                  {remote,
                   {2618,41},
                   {atom,{2618,41},erlang},
                   {atom,{2618,41},setelement}},
                  [{integer,{2618,41},3},
                   {var,{2618,22},rec110},
                   {atom,{2618,52},false}]}]},
               {clause,
                [{generated,true},{location,{2618,41}}],
                [{var,[{generated,true},{location,{2618,41}}],'_'}],
                [],
                [{call,
                  [{generated,true},{location,{2618,41}}],
                  {remote,
                   [{generated,true},{location,{2618,41}}],
                   {atom,[{generated,true},{location,{2618,41}}],erlang},
                   {atom,[{generated,true},{location,{2618,41}}],error}},
                  [{tuple,
                    [{generated,true},{location,{2618,41}}],
                    [{atom,[{generated,true},{location,{2618,41}}],badrecord},
                     {var,{2618,22},rec110}]}]}]}]}]},
           {nil,{2618,58}}}}]},
       {var,{2618,61},'Ds'}]}},
    {debug_line,2619,1167},
    {tuple,
     {2619,5},
     [{cons,
       {2619,6},
       {tuple,
        {2619,7},
        [{var,{2619,8},'LHS'},
         {block,
          {2619,12},
          [{match,{2619,12},{var,{2619,12},rec111},{var,{2619,12},'LType'}},
           {'case',
            {2619,30},
            {var,{2619,12},rec111},
            [{clause,
              {2619,30},
              [{tuple,
                {2619,30},
                [{atom,{2619,30},t_bitstring},
                 {var,{2619,30},'_'},
                 {var,{2619,30},'_'}]}],
              [],
              [{call,
                {2619,30},
                {remote,
                 {2619,30},
                 {atom,{2619,30},erlang},
                 {atom,{2619,30},setelement}},
                [{integer,{2619,30},3},
                 {var,{2619,12},rec111},
                 {var,{2619,41},'LHSApp'}]}]},
             {clause,
              [{generated,true},{location,{2619,30}}],
              [{var,[{generated,true},{location,{2619,30}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{2619,30}}],
                {remote,
                 [{generated,true},{location,{2619,30}}],
                 {atom,[{generated,true},{location,{2619,30}}],erlang},
                 {atom,[{generated,true},{location,{2619,30}}],error}},
                [{tuple,
                  [{generated,true},{location,{2619,30}}],
                  [{atom,[{generated,true},{location,{2619,30}}],badrecord},
                   {var,{2619,12},rec111}]}]}]}]}]}]},
       {cons,
        {2620,7},
        {tuple,
         {2620,7},
         [{var,{2620,8},'RHS'},
          {block,
           {2620,12},
           [{match,{2620,12},{var,{2620,12},rec112},{var,{2620,12},'RType'}},
            {'case',
             {2620,30},
             {var,{2620,12},rec112},
             [{clause,
               {2620,30},
               [{tuple,
                 {2620,30},
                 [{atom,{2620,30},t_bitstring},
                  {var,{2620,30},'_'},
                  {var,{2620,30},'_'}]}],
               [],
               [{call,
                 {2620,30},
                 {remote,
                  {2620,30},
                  {atom,{2620,30},erlang},
                  {atom,{2620,30},setelement}},
                 [{integer,{2620,30},3},
                  {var,{2620,12},rec112},
                  {var,{2620,41},'RHSApp'}]}]},
              {clause,
               [{generated,true},{location,{2620,30}}],
               [{var,[{generated,true},{location,{2620,30}}],'_'}],
               [],
               [{call,
                 [{generated,true},{location,{2620,30}}],
                 {remote,
                  [{generated,true},{location,{2620,30}}],
                  {atom,[{generated,true},{location,{2620,30}}],erlang},
                  {atom,[{generated,true},{location,{2620,30}}],error}},
                 [{tuple,
                   [{generated,true},{location,{2620,30}}],
                   [{atom,[{generated,true},{location,{2620,30}}],badrecord},
                    {var,{2620,12},rec112}]}]}]}]}]}]},
        {var,{2620,52},'EqTypes'}}},
      {nil,{2620,62}}]}]},
  {clause,
   {2621,1},
   [{atom,{2621,13},'=:='},
    {cons,
     {2621,20},
     {var,{2621,21},'LHS'},
     {cons,{2621,25},{var,{2621,25},'RHS'},{nil,{2621,28}}}},
    {cons,
     {2621,31},
     {var,{2621,32},'LType'},
     {cons,{2621,38},{var,{2621,38},'RType'},{nil,{2621,43}}}},
    {var,{2621,46},'Ds'}],
   [],
   [{debug_line,2622,1168},
    {match,
     {2622,5},
     {var,{2622,5},'EqTypes'},
     {call,
      {2622,15},
      {atom,{2622,15},infer_eq_type},
      [{block,0,
        [{call,
          {2622,29},
          {remote,{2622,29},{atom,{2622,29},erlang},{atom,{2622,29},map_get}},
          [{var,{2622,37},'LHS'},{var,{2622,42},'Ds'}]}]},
       {var,{2622,47},'RType'}]}},
    {debug_line,2628,1169},
    {match,
     {2628,5},
     {var,{2628,5},'Type'},
     {call,
      {2628,12},
      {remote,{2628,22},{atom,{2628,12},beam_types},{atom,{2628,23},meet}},
      [{var,{2628,28},'LType'},{var,{2628,35},'RType'}]}},
    {debug_line,2629,1170},
    {tuple,
     {2629,5},
     [{op,
       {2629,30},
       '++',
       {cons,
        {2629,6},
        {tuple,{2629,7},[{var,{2629,8},'LHS'},{var,{2629,12},'Type'}]},
        {cons,
         {2629,18},
         {tuple,{2629,18},[{var,{2629,19},'RHS'},{var,{2629,23},'Type'}]},
         {nil,{2629,28}}}},
       {var,{2629,33},'EqTypes'}},
      {nil,{2629,42}}]}]},
  {clause,
   {2630,1},
   [{atom,{2630,13},'=/='},
    {cons,
     {2630,20},
     {var,{2630,21},'LHS'},
     {cons,{2630,25},{var,{2630,25},'RHS'},{nil,{2630,28}}}},
    {cons,
     {2630,31},
     {var,{2630,32},'LType'},
     {cons,{2630,38},{var,{2630,38},'RType'},{nil,{2630,43}}}},
    {var,{2630,46},'Ds'}],
   [],
   [{debug_line,2631,1171},
    {match,
     {2631,5},
     {var,{2631,5},'NeTypes'},
     {call,
      {2631,15},
      {atom,{2631,15},infer_ne_type},
      [{block,0,
        [{call,
          {2631,29},
          {remote,{2631,29},{atom,{2631,29},erlang},{atom,{2631,29},map_get}},
          [{var,{2631,37},'LHS'},{var,{2631,42},'Ds'}]}]},
       {var,{2631,47},'RType'}]}},
    {debug_line,2644,1172},
    {tuple,
     {2644,5},
     [{lc,
       {2644,6},
       {block,0,
        [{tuple,
          {2644,7},
          [{var,{2644,8},'V'},
           {call,
            {2644,10},
            {remote,
             {2644,20},
             {atom,{2644,10},beam_types},
             {atom,{2644,21},subtract}},
            [{var,{2644,30},'ThisType'},{var,{2644,40},'OtherType'}]}]}]},
       [{block,0,[{debug_line,2645,1173},{atom,{2645,39},true}]},
        {generate_strict,
         {2645,35},
         {tuple,
          {2645,10},
          [{var,{2645,11},'V'},
           {var,{2645,14},'ThisType'},
           {var,{2645,24},'OtherType'}]},
         {cons,
          {2645,39},
          {tuple,
           {2645,40},
           [{var,{2645,41},'RHS'},
            {var,{2645,46},'RType'},
            {var,{2645,53},'LType'}]},
          {cons,
           {2645,61},
           {tuple,
            {2645,61},
            [{var,{2645,62},'LHS'},
             {var,{2645,67},'LType'},
             {var,{2645,74},'RType'}]},
           {nil,{2645,80}}}}},
        {block,0,[{debug_line,2646,1174},{atom,{2646,10},true}]},
        {call,
         {2646,10},
         {remote,
          {2646,20},
          {atom,{2646,10},beam_types},
          {atom,{2646,21},is_singleton_type}},
         [{var,{2646,39},'OtherType'}]}]},
      {var,{2646,52},'NeTypes'}]}]},
  {clause,
   {2647,1},
   [{var,{2647,13},'Op'},
    {var,{2647,17},'Args'},
    {var,{2647,23},'Types'},
    {var,{2647,30},'_Ds'}],
   [],
   [{debug_line,2648,1175},
    {tuple,
     {2648,5},
     [{call,
       {2648,6},
       {atom,{2648,6},infer_relop},
       [{var,{2648,18},'Op'},{var,{2648,22},'Args'},{var,{2648,28},'Types'}]},
      {nil,{2648,36}}]}]}]}.
{function,
    {2650,1},
    infer_relop,3,
    [{clause,
         {2650,1},
         [{var,{2650,1},'_'},{var,{2650,1},'_'},{var,{2650,1},'_'}],
         [[{call,
               {2650,1},
               {remote,
                   {2650,1},
                   {atom,{2650,1},fake},
                   {atom,{2650,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2650,1176},{atom,{2650,1},ignore}]},
     {clause,
         {2650,1},
         [{var,{2650,13},'Op'},
          {cons,
              {2650,17},
              {var,{2650,18},'Arg1'},
              {cons,{2650,23},{var,{2650,23},'Arg2'},{nil,{2650,27}}}},
          {var,{2650,30},'Types0'}],
         [],
         [{debug_line,2651,1177},
          {'case',
              {2651,5},
              {call,
                  {2651,10},
                  {atom,{2651,10},infer_relop},
                  [{var,{2651,22},'Op'},{var,{2651,26},'Types0'}]},
              [{clause,
                   {2652,9},
                   [{atom,{2652,9},any}],
                   [],
                   [{debug_line,2654,1178},{nil,{2654,13}}]},
               {clause,
                   {2655,9},
                   [{tuple,
                        {2655,9},
                        [{var,{2655,10},'NewType1'},
                         {var,{2655,19},'NewType2'}]}],
                   [],
                   [{debug_line,2656,1179},
                    {cons,
                        {2656,13},
                        {tuple,
                            {2656,14},
                            [{var,{2656,15},'Arg1'},
                             {var,{2656,20},'NewType1'}]},
                        {cons,
                            {2656,30},
                            {tuple,
                                {2656,30},
                                [{var,{2656,31},'Arg2'},
                                 {var,{2656,36},'NewType2'}]},
                            {nil,{2656,45}}}}]}]}]}]}.
{function,
    {2659,1},
    infer_relop,2,
    [{clause,
         {2659,1},
         [{var,{2659,1},'_'},{var,{2659,1},'_'}],
         [[{call,
               {2659,1},
               {remote,
                   {2659,1},
                   {atom,{2659,1},fake},
                   {atom,{2659,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2659,1180},{atom,{2659,1},ignore}]},
     {clause,
         {2659,1},
         [{var,{2659,13},'Op'},
          {cons,
              {2659,17},
              {tuple,
                  {2659,18},
                  [{atom,{2659,18},t_integer},{var,{2659,38},'R1'}]},
              {cons,
                  {2660,18},
                  {tuple,
                      {2660,18},
                      [{atom,{2660,18},t_integer},{var,{2660,38},'R2'}]},
                  {nil,{2660,41}}}}],
         [],
         [{debug_line,2661,1181},
          {'case',
              {2661,5},
              {call,
                  {2661,10},
                  {remote,
                      {2661,21},
                      {atom,{2661,10},beam_bounds},
                      {atom,{2661,22},infer_relop_types}},
                  [{var,{2661,40},'Op'},
                   {var,{2661,44},'R1'},
                   {var,{2661,48},'R2'}]},
              [{clause,
                   {2662,9},
                   [{tuple,
                        {2662,9},
                        [{var,{2662,10},'NewR1'},{var,{2662,16},'NewR2'}]}],
                   [],
                   [{debug_line,2663,1182},
                    {tuple,
                        {2663,13},
                        [{tuple,
                             {2663,14},
                             [{atom,{2663,14},t_integer},
                              {var,{2663,34},'NewR1'}]},
                         {tuple,
                             {2664,14},
                             [{atom,{2664,14},t_integer},
                              {var,{2664,34},'NewR2'}]}]}]},
               {clause,
                   {2665,9},
                   [{atom,{2665,9},none}],
                   [],
                   [{debug_line,2666,1183},
                    {tuple,
                        {2666,13},
                        [{atom,{2666,14},none},{atom,{2666,20},none}]}]},
               {clause,
                   {2667,9},
                   [{atom,{2667,9},any}],
                   [],
                   [{debug_line,2668,1184},{atom,{2668,13},any}]}]}]},
     {clause,
         {2670,1},
         [{var,{2670,13},'Op0'},
          {cons,
              {2670,18},
              {var,{2670,19},'Type1'},
              {cons,{2670,25},{var,{2670,25},'Type2'},{nil,{2670,30}}}}],
         [],
         [{debug_line,2671,1185},
          {match,
              {2671,5},
              {var,{2671,5},'Op'},
              {'case',
                  {2671,10},
                  {var,{2671,15},'Op0'},
                  [{clause,
                       {2672,14},
                       [{atom,{2672,14},'<'}],
                       [],
                       [{debug_line,2672,1186},{atom,{2672,21},'=<'}]},
                   {clause,
                       {2673,14},
                       [{atom,{2673,14},'>'}],
                       [],
                       [{debug_line,2673,1187},{atom,{2673,21},'>='}]},
                   {clause,
                       {2674,14},
                       [{var,{2674,14},'_'}],
                       [],
                       [{debug_line,2674,1188},{var,{2674,19},'Op0'}]}]}},
          {debug_line,2676,1189},
          {'case',
              {2676,5},
              {tuple,
                  {2676,10},
                  [{call,
                       {2676,11},
                       {atom,{2676,11},infer_get_range},
                       [{var,{2676,27},'Type1'}]},
                   {call,
                       {2676,34},
                       {atom,{2676,34},infer_get_range},
                       [{var,{2676,50},'Type2'}]}]},
              [{clause,
                   {2677,9},
                   [{tuple,
                        {2677,9},
                        [{atom,{2677,10},unknown},{atom,{2677,18},unknown}]}],
                   [],
                   [{debug_line,2678,1190},{atom,{2678,13},any}]},
               {clause,
                   {2679,9},
                   [{match,
                        {2679,9},
                        {tuple,
                            {2679,9},
                            [{atom,{2679,10},unknown},{var,{2679,18},'_'}]},
                        {var,{2679,21},'R'}}],
                   [],
                   [{debug_line,2680,1191},
                    {call,
                        {2680,13},
                        {atom,{2680,13},infer_relop_any},
                        [{var,{2680,29},'Op'},{var,{2680,33},'R'}]}]},
               {clause,
                   {2681,9},
                   [{match,
                        {2681,9},
                        {tuple,
                            {2681,9},
                            [{var,{2681,10},'_'},{atom,{2681,12},unknown}]},
                        {var,{2681,21},'R'}}],
                   [],
                   [{debug_line,2682,1192},
                    {call,
                        {2682,13},
                        {atom,{2682,13},infer_relop_any},
                        [{var,{2682,29},'Op'},{var,{2682,33},'R'}]}]},
               {clause,
                   {2683,9},
                   [{tuple,
                        {2683,9},
                        [{var,{2683,10},'R1'},{var,{2683,13},'R2'}]}],
                   [],
                   [{debug_line,2685,1193},
                    {'case',
                        {2685,13},
                        {call,
                            {2685,18},
                            {remote,
                                {2685,29},
                                {atom,{2685,18},beam_bounds},
                                {atom,{2685,30},infer_relop_types}},
                            [{var,{2685,48},'Op'},
                             {var,{2685,52},'R1'},
                             {var,{2685,56},'R2'}]},
                        [{clause,
                             {2686,17},
                             [{tuple,
                                  {2686,17},
                                  [{var,{2686,18},'NewR1'},
                                   {var,{2686,24},'NewR2'}]}],
                             [],
                             [{debug_line,2687,1194},
                              {tuple,
                                  {2687,21},
                                  [{tuple,
                                       {2687,22},
                                       [{atom,{2687,22},t_number},
                                        {var,{2687,41},'NewR1'}]},
                                   {tuple,
                                       {2688,22},
                                       [{atom,{2688,22},t_number},
                                        {var,{2688,41},'NewR2'}]}]}]},
                         {clause,
                             {2689,17},
                             [{atom,{2689,17},none}],
                             [],
                             [{debug_line,2690,1195},
                              {tuple,
                                  {2690,21},
                                  [{atom,{2690,22},none},
                                   {atom,{2690,28},none}]}]},
                         {clause,
                             {2691,17},
                             [{atom,{2691,17},any}],
                             [],
                             [{debug_line,2692,1196},
                              {atom,{2692,21},any}]}]}]}]}]}]}.
{function,
    {2696,1},
    infer_relop_any,2,
    [{clause,
         {2696,1},
         [{var,{2696,1},'_'},{var,{2696,1},'_'}],
         [[{call,
               {2696,1},
               {remote,
                   {2696,1},
                   {atom,{2696,1},fake},
                   {atom,{2696,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2696,1197},{atom,{2696,1},ignore}]},
     {clause,
         {2696,1},
         [{atom,{2696,17},'=<'},
          {tuple,{2696,23},[{atom,{2696,24},unknown},{atom,{2696,32},any}]}],
         [],
         [{debug_line,2699,1198},
          {tuple,
              {2699,5},
              [{tuple,{2699,6},[{atom,{2699,6},t_number},{atom,{2699,6},any}]},
               {atom,{2699,19},any}]}]},
     {clause,
         {2700,1},
         [{atom,{2700,17},'=<'},
          {tuple,
              {2700,23},
              [{atom,{2700,24},unknown},
               {tuple,
                   {2700,32},
                   [{var,{2700,33},'_'},{var,{2700,35},'Max'}]}]}],
         [],
         [{debug_line,2701,1199},
          {tuple,
              {2701,5},
              [{call,
                   {2701,6},
                   {atom,{2701,6},make_number},
                   [{block,0,
                        [{tuple,
                             {2701,18},
                             [{atom,{2701,19},'-inf'},
                              {var,{2701,26},'Max'}]}]}]},
               {atom,{2701,33},any}]}]},
     {clause,
         {2702,1},
         [{atom,{2702,17},'>='},
          {tuple,{2702,23},[{atom,{2702,24},any},{atom,{2702,28},unknown}]}],
         [],
         [{debug_line,2703,1200},
          {tuple,
              {2703,5},
              [{atom,{2703,6},any},
               {tuple,
                   {2703,11},
                   [{atom,{2703,11},t_number},{atom,{2703,11},any}]}]}]},
     {clause,
         {2704,1},
         [{atom,{2704,17},'>='},
          {tuple,
              {2704,23},
              [{tuple,{2704,24},[{var,{2704,25},'_'},{var,{2704,27},'Max'}]},
               {atom,{2704,32},unknown}]}],
         [],
         [{debug_line,2705,1201},
          {tuple,
              {2705,5},
              [{atom,{2705,6},any},
               {call,
                   {2705,11},
                   {atom,{2705,11},make_number},
                   [{block,0,
                        [{tuple,
                             {2705,23},
                             [{atom,{2705,24},'-inf'},
                              {var,{2705,31},'Max'}]}]}]}]}]},
     {clause,
         {2706,1},
         [{atom,{2706,17},'>='},
          {tuple,
              {2706,23},
              [{atom,{2706,24},unknown},
               {tuple,
                   {2706,32},
                   [{var,{2706,33},'Min'},{var,{2706,37},'_'}]}]}],
         [[{call,
               {2706,47},
               {remote,
                   {2706,47},
                   {atom,{2706,47},erlang},
                   {atom,{2706,47},is_integer}},
               [{var,{2706,58},'Min'}]}]],
         [{debug_line,2709,1202},
          {match,
              {2709,5},
              {var,{2709,5},'N'},
              {tuple,
                  {2709,9},
                  [{atom,{2709,9},t_number},
                   {tuple,
                       {2709,28},
                       [{atom,{2709,29},'-inf'},{var,{2709,36},'Min'}]}]}},
          {debug_line,2710,1203},
          {tuple,
              {2710,5},
              [{call,
                   {2710,6},
                   {remote,
                       {2710,16},
                       {atom,{2710,6},beam_types},
                       {atom,{2710,17},subtract}},
                   [{atom,{2710,26},any},{var,{2710,31},'N'}]},
               {atom,{2710,35},any}]}]},
     {clause,
         {2711,1},
         [{atom,{2711,17},'=<'},
          {tuple,
              {2711,23},
              [{tuple,{2711,24},[{var,{2711,25},'Min'},{var,{2711,29},'_'}]},
               {atom,{2711,32},unknown}]}],
         [[{call,
               {2711,47},
               {remote,
                   {2711,47},
                   {atom,{2711,47},erlang},
                   {atom,{2711,47},is_integer}},
               [{var,{2711,58},'Min'}]}]],
         [{debug_line,2712,1204},
          {match,
              {2712,5},
              {var,{2712,5},'N'},
              {tuple,
                  {2712,9},
                  [{atom,{2712,9},t_number},
                   {tuple,
                       {2712,28},
                       [{atom,{2712,29},'-inf'},{var,{2712,36},'Min'}]}]}},
          {debug_line,2713,1205},
          {tuple,
              {2713,5},
              [{atom,{2713,6},any},
               {call,
                   {2713,11},
                   {remote,
                       {2713,21},
                       {atom,{2713,11},beam_types},
                       {atom,{2713,22},subtract}},
                   [{atom,{2713,31},any},{var,{2713,36},'N'}]}]}]},
     {clause,
         {2714,1},
         [{var,{2714,17},'_Op'},{var,{2714,22},'_R'}],
         [],
         [{debug_line,2715,1206},{atom,{2715,5},any}]}]}.
{function,{2717,1},
          make_number,1,
          [{clause,{2717,1},
                   [{var,{2717,1},'_'}],
                   [[{call,{2717,1},
                           {remote,{2717,1},
                                   {atom,{2717,1},fake},
                                   {atom,{2717,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2717,1207},{atom,{2717,1},ignore}]},
           {clause,{2717,1},
                   [{tuple,{2717,13},
                           [{atom,{2717,14},'-inf'},{atom,{2717,21},'+inf'}]}],
                   [],
                   [{debug_line,2718,1208},
                    {tuple,{2718,5},
                           [{atom,{2718,5},t_number},{atom,{2718,5},any}]}]},
           {clause,{2719,1},
                   [{match,{2719,13},
                           {tuple,{2719,13},
                                  [{var,{2719,14},'_'},{var,{2719,16},'_'}]},
                           {var,{2719,19},'R'}}],
                   [],
                   [{debug_line,2720,1209},
                    {tuple,{2720,5},
                           [{atom,{2720,5},t_number},{var,{2720,24},'R'}]}]}]}.
{function,{2722,1},
          inv_relop,1,
          [{clause,{2722,1},
                   [{var,{2722,1},'_'}],
                   [[{call,{2722,1},
                           {remote,{2722,1},
                                   {atom,{2722,1},fake},
                                   {atom,{2722,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2722,1210},{atom,{2722,1},ignore}]},
           {clause,{2722,1},
                   [{tuple,{2722,11},
                           [{atom,{2722,12},bif},{var,{2722,16},'Op'}]}],
                   [],
                   [{debug_line,2722,1211},
                    {call,{2722,24},
                          {atom,{2722,24},inv_relop_1},
                          [{var,{2722,36},'Op'}]}]},
           {clause,{2723,1},
                   [{var,{2723,11},'_'}],
                   [],
                   [{debug_line,2723,1212},{atom,{2723,17},none}]}]}.
{function,{2725,1},
          inv_relop_1,1,
          [{clause,{2725,1},
                   [{var,{2725,1},'_'}],
                   [[{call,{2725,1},
                           {remote,{2725,1},
                                   {atom,{2725,1},fake},
                                   {atom,{2725,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2725,1213},{atom,{2725,1},ignore}]},
           {clause,{2725,1},
                   [{atom,{2725,13},'<'}],
                   [],
                   [{debug_line,2725,1214},{atom,{2725,21},'>='}]},
           {clause,{2726,1},
                   [{atom,{2726,13},'=<'}],
                   [],
                   [{debug_line,2726,1215},{atom,{2726,22},'>'}]},
           {clause,{2727,1},
                   [{atom,{2727,13},'>='}],
                   [],
                   [{debug_line,2727,1216},{atom,{2727,22},'<'}]},
           {clause,{2728,1},
                   [{atom,{2728,13},'>'}],
                   [],
                   [{debug_line,2728,1217},{atom,{2728,22},'=<'}]},
           {clause,{2729,1},
                   [{atom,{2729,13},'=:='}],
                   [],
                   [{debug_line,2729,1218},{atom,{2729,23},'=/='}]},
           {clause,{2730,1},
                   [{atom,{2730,13},'=/='}],
                   [],
                   [{debug_line,2730,1219},{atom,{2730,23},'=:='}]},
           {clause,{2731,1},
                   [{var,{2731,13},'_'}],
                   [],
                   [{debug_line,2731,1220},{atom,{2731,19},none}]}]}.
{function,{2733,1},
          infer_get_range,1,
          [{clause,{2733,1},
                   [{var,{2733,1},'_'}],
                   [[{call,{2733,1},
                           {remote,{2733,1},
                                   {atom,{2733,1},fake},
                                   {atom,{2733,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2733,1221},{atom,{2733,1},ignore}]},
           {clause,{2733,1},
                   [{tuple,{2733,17},
                           [{atom,{2733,17},t_integer},{var,{2733,37},'R'}]}],
                   [],
                   [{debug_line,2733,1222},{var,{2733,44},'R'}]},
           {clause,{2734,1},
                   [{tuple,{2734,17},
                           [{atom,{2734,17},t_number},{var,{2734,36},'R'}]}],
                   [],
                   [{debug_line,2734,1223},{var,{2734,43},'R'}]},
           {clause,{2735,1},
                   [{var,{2735,17},'_'}],
                   [],
                   [{debug_line,2735,1224},{atom,{2735,23},unknown}]}]}.
{function,
    {2737,1},
    infer_br_value,3,
    [{clause,
         {2737,1},
         [{var,{2737,1},'_'},{var,{2737,1},'_'},{var,{2737,1},'_'}],
         [[{call,
               {2737,1},
               {remote,
                   {2737,1},
                   {atom,{2737,1},fake},
                   {atom,{2737,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2737,1225},{atom,{2737,1},ignore}]},
     {clause,
         {2737,1},
         [{var,{2737,16},'_V'},{var,{2737,20},'_Bool'},{atom,{2737,27},none}],
         [],
         [{debug_line,2738,1226},{atom,{2738,5},none}]},
     {clause,
         {2739,1},
         [{var,{2739,16},'V'},{var,{2739,19},'Bool'},{var,{2739,25},'NewTs'}],
         [],
         [{debug_line,2740,1227},
          {match,
              {2740,5},
              {map,
                  {2740,5},
                  [{map_field_exact,
                       {2740,10},
                       {var,{2740,8},'V'},
                       {var,{2740,13},'T'}}]},
              {var,{2740,19},'NewTs'}},
          {debug_line,2741,1228},
          {'case',
              {2741,5},
              {call,
                  {2741,10},
                  {remote,
                      {2741,20},
                      {atom,{2741,10},beam_types},
                      {atom,{2741,21},is_boolean_type}},
                  [{var,{2741,37},'T'}]},
              [{clause,
                   {2742,9},
                   [{atom,{2742,9},true}],
                   [],
                   [{debug_line,2743,1229},
                    {map,
                        {2743,18},
                        {var,{2743,13},'NewTs'},
                        [{map_field_exact,
                             {2743,23},
                             {var,{2743,21},'V'},
                             {call,
                                 {2743,26},
                                 {remote,
                                     {2743,36},
                                     {atom,{2743,26},beam_types},
                                     {atom,{2743,37},make_atom}},
                                 [{var,{2743,47},'Bool'}]}}]}]},
               {clause,
                   {2744,9},
                   [{atom,{2744,9},false}],
                   [],
                   [{debug_line,2746,1230},{var,{2746,13},'NewTs'}]}]}]}]}.
{function,
    {2749,1},
    infer_types_switch,5,
    [{clause,
         {2749,1},
         [{var,{2749,1},'_'},
          {var,{2749,1},'_'},
          {var,{2749,1},'_'},
          {var,{2749,1},'_'},
          {var,{2749,1},'_'}],
         [[{call,
               {2749,1},
               {remote,
                   {2749,1},
                   {atom,{2749,1},fake},
                   {atom,{2749,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2749,1231},{atom,{2749,1},ignore}]},
     {clause,
         {2749,1},
         [{var,{2749,20},'V'},
          {var,{2749,23},'Lit'},
          {var,{2749,28},'Ts0'},
          {var,{2749,33},'IsTempVar'},
          {var,{2749,44},'Ds'}],
         [],
         [{debug_line,2750,1232},
          {match,
              {2750,5},
              {var,{2750,5},'Args'},
              {cons,
                  {2750,12},
                  {var,{2750,13},'V'},
                  {cons,{2750,15},{var,{2750,15},'Lit'},{nil,{2750,18}}}}},
          {debug_line,2751,1233},
          {match,
              {2751,5},
              {var,{2751,5},'Types'},
              {call,
                  {2751,13},
                  {atom,{2751,13},concrete_types},
                  [{var,{2751,28},'Args'},{var,{2751,34},'Ts0'}]}},
          {debug_line,2752,1234},
          {match,
              {2752,5},
              {tuple,
                  {2752,5},
                  [{var,{2752,6},'PosTypes'},{var,{2752,16},'NegTypes'}]},
              {call,
                  {2752,28},
                  {atom,{2752,28},infer_relop},
                  [{atom,{2752,40},'=:='},
                   {var,{2752,47},'Args'},
                   {var,{2752,53},'Types'},
                   {var,{2752,60},'Ds'}]}},
          {debug_line,2753,1235},
          {match,
              {2753,5},
              {var,{2753,5},'Ts'},
              {'maybe',
                  {2753,10},
                  [{debug_line,2754,1236},
                   {maybe_match,
                       {2754,23},
                       {match,
                           {2754,13},
                           {var,{2754,13},'Ts1'},
                           {map,{2754,19},[]}},
                       {call,
                           {2754,26},
                           {atom,{2754,26},meet_types},
                           [{var,{2754,37},'PosTypes'},
                            {var,{2754,47},'Ts0'}]}},
                   {debug_line,2755,1237},
                   {call,
                       {2755,13},
                       {atom,{2755,13},subtract_types},
                       [{var,{2755,28},'NegTypes'},{var,{2755,38},'Ts1'}]}],
                  {'else',
                      {2756,10},
                      [{clause,
                           {2757,13},
                           [{atom,{2757,13},none}],
                           [],
                           [{debug_line,2757,1238},{atom,{2757,21},none}]}]}}},
          {debug_line,2759,1239},
          {'case',
              {2759,5},
              {var,{2759,10},'IsTempVar'},
              [{clause,
                   {2760,9},
                   [{atom,{2760,9},true}],
                   [],
                   [{debug_line,2760,1240},
                    {call,
                        {2760,17},
                        {atom,{2760,17},ts_remove_var},
                        [{var,{2760,31},'V'},{var,{2760,34},'Ts'}]}]},
               {clause,
                   {2761,9},
                   [{atom,{2761,9},false}],
                   [],
                   [{debug_line,2761,1241},{var,{2761,18},'Ts'}]}]}]}]}.
{function,{2764,1},
          ts_remove_var,2,
          [{clause,{2764,1},
                   [{var,{2764,1},'_'},{var,{2764,1},'_'}],
                   [[{call,{2764,1},
                           {remote,{2764,1},
                                   {atom,{2764,1},fake},
                                   {atom,{2764,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,2764,1242},{atom,{2764,1},ignore}]},
           {clause,{2764,1},
                   [{var,{2764,15},'_V'},{atom,{2764,19},none}],
                   [],
                   [{debug_line,2764,1243},{atom,{2764,28},none}]},
           {clause,{2765,1},
                   [{var,{2765,15},'V'},{var,{2765,18},'Ts'}],
                   [],
                   [{debug_line,2765,1244},
                    {call,{2765,25},
                          {remote,{2765,29},
                                  {atom,{2765,25},maps},
                                  {atom,{2765,30},remove}},
                          [{var,{2765,37},'V'},{var,{2765,40},'Ts'}]}]}]}.
{function,
    {2767,1},
    infer_type,4,
    [{clause,
         {2767,1},
         [{var,{2767,1},'_'},
          {var,{2767,1},'_'},
          {var,{2767,1},'_'},
          {var,{2767,1},'_'}],
         [[{call,
               {2767,1},
               {remote,
                   {2767,1},
                   {atom,{2767,1},fake},
                   {atom,{2767,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2767,1245},{atom,{2767,1},ignore}]},
     {clause,
         {2767,1},
         [{tuple,{2767,12},[{atom,{2767,13},succeeded},{var,{2767,23},'_'}]},
          {cons,
              {2767,27},
              {match,
                  {2767,28},
                  {tuple,
                      {2767,28},
                      [{atom,{2767,28},b_var},{var,{2767,28},'_'}]},
                  {var,{2767,37},'Src'}},
              {nil,{2767,40}}},
          {var,{2767,43},'Ts'},
          {var,{2767,47},'Ds'}],
         [],
         [{debug_line,2768,1246},
          {match,
              {2768,5},
              {tuple,
                  {2768,5},
                  [{atom,{2768,5},b_set},
                   {var,{2768,5},'_'},
                   {var,{2768,5},'_'},
                   {var,{2768,15},'Op'},
                   {var,{2768,23},'Args'}]},
              {call,
                  {2768,31},
                  {remote,
                      {2768,35},
                      {atom,{2768,31},maps},
                      {atom,{2768,36},get}},
                  [{var,{2768,40},'Src'},{var,{2768,45},'Ds'}]}},
          {debug_line,2769,1247},
          {call,
              {2769,5},
              {atom,{2769,5},infer_success_type},
              [{var,{2769,24},'Op'},
               {var,{2769,28},'Args'},
               {var,{2769,34},'Ts'},
               {var,{2769,38},'Ds'}]}]},
     {clause,
         {2774,1},
         [{atom,{2774,12},is_tagged_tuple},
          {cons,
              {2774,29},
              {match,
                  {2774,30},
                  {tuple,
                      {2774,30},
                      [{atom,{2774,30},b_var},{var,{2774,30},'_'}]},
                  {var,{2774,39},'Src'}},
              {cons,
                  {2774,43},
                  {tuple,
                      {2774,43},
                      [{atom,{2774,43},b_literal},{var,{2774,58},'Size'}]},
                  {cons,
                      {2775,30},
                      {match,
                          {2775,30},
                          {tuple,
                              {2775,30},
                              [{atom,{2775,30},b_literal},
                               {var,{2775,30},'_'}]},
                          {var,{2775,43},'Tag'}},
                      {nil,{2775,46}}}}},
          {var,{2775,49},'_Ts'},
          {var,{2775,54},'_Ds'}],
         [],
         [{debug_line,2776,1248},
          {match,
              {2776,5},
              {var,{2776,5},'Es'},
              {call,
                  {2776,10},
                  {remote,
                      {2776,20},
                      {atom,{2776,10},beam_types},
                      {atom,{2776,21},set_tuple_element}},
                  [{integer,{2776,39},1},
                   {block,0,
                       [{call,
                            {2776,42},
                            {atom,{2776,42},concrete_type},
                            [{var,{2776,56},'Tag'},
                             {block,0,[{map,{2776,61},[]}]}]}]},
                   {block,0,[{map,{2776,67},[]}]}]}},
          {debug_line,2777,1249},
          {match,
              {2777,5},
              {var,{2777,5},'T'},
              {tuple,
                  {2777,9},
                  [{var,{2777,10},'Src'},
                   {tuple,
                       {2777,14},
                       [{atom,{2777,14},t_tuple},
                        {var,{2777,39},'Size'},
                        {atom,{2777,29},true},
                        {var,{2777,53},'Es'}]}]}},
          {debug_line,2778,1250},
          {tuple,
              {2778,5},
              [{cons,{2778,6},{var,{2778,7},'T'},{nil,{2778,8}}},
               {cons,{2778,11},{var,{2778,12},'T'},{nil,{2778,13}}}]}]},
     {clause,
         {2779,1},
         [{atom,{2779,12},is_nonempty_list},
          {cons,
              {2779,30},
              {match,
                  {2779,31},
                  {tuple,
                      {2779,31},
                      [{atom,{2779,31},b_var},{var,{2779,31},'_'}]},
                  {var,{2779,40},'Src'}},
              {nil,{2779,43}}},
          {var,{2779,46},'_Ts'},
          {var,{2779,51},'_Ds'}],
         [],
         [{debug_line,2780,1251},
          {match,
              {2780,5},
              {var,{2780,5},'T'},
              {tuple,
                  {2780,9},
                  [{var,{2780,10},'Src'},
                   {tuple,
                       {2780,14},
                       [{atom,{2780,14},t_cons},
                        {atom,{2780,14},any},
                        {atom,{2780,14},any}]}]}},
          {debug_line,2781,1252},
          {tuple,
              {2781,5},
              [{cons,{2781,6},{var,{2781,7},'T'},{nil,{2781,8}}},
               {cons,{2781,11},{var,{2781,12},'T'},{nil,{2781,13}}}]}]},
     {clause,
         {2782,1},
         [{tuple,{2782,12},[{atom,{2782,13},bif},{atom,{2782,17},is_atom}]},
          {cons,
              {2782,27},
              {match,
                  {2782,28},
                  {tuple,
                      {2782,28},
                      [{atom,{2782,28},b_var},{var,{2782,28},'_'}]},
                  {var,{2782,37},'Arg'}},
              {nil,{2782,40}}},
          {var,{2782,43},'_Ts'},
          {var,{2782,48},'_Ds'}],
         [],
         [{debug_line,2783,1253},
          {match,
              {2783,5},
              {var,{2783,5},'T'},
              {tuple,
                  {2783,9},
                  [{var,{2783,10},'Arg'},
                   {tuple,
                       {2783,15},
                       [{atom,{2783,15},t_atom},{atom,{2783,15},any}]}]}},
          {debug_line,2784,1254},
          {tuple,
              {2784,5},
              [{cons,{2784,6},{var,{2784,7},'T'},{nil,{2784,8}}},
               {cons,{2784,11},{var,{2784,12},'T'},{nil,{2784,13}}}]}]},
     {clause,
         {2785,1},
         [{tuple,{2785,12},[{atom,{2785,13},bif},{atom,{2785,17},is_binary}]},
          {cons,
              {2785,29},
              {match,
                  {2785,30},
                  {tuple,
                      {2785,30},
                      [{atom,{2785,30},b_var},{var,{2785,30},'_'}]},
                  {var,{2785,39},'Arg'}},
              {nil,{2785,42}}},
          {var,{2785,45},'_Ts'},
          {var,{2785,50},'_Ds'}],
         [],
         [{debug_line,2786,1255},
          {match,
              {2786,5},
              {var,{2786,5},'T'},
              {tuple,
                  {2786,9},
                  [{var,{2786,10},'Arg'},
                   {tuple,
                       {2786,15},
                       [{atom,{2786,15},t_bitstring},
                        {integer,{2786,38},8},
                        {atom,{2786,15},false}]}]}},
          {debug_line,2787,1256},
          {tuple,
              {2787,5},
              [{cons,{2787,6},{var,{2787,7},'T'},{nil,{2787,8}}},
               {cons,{2787,11},{var,{2787,12},'T'},{nil,{2787,13}}}]}]},
     {clause,
         {2788,1},
         [{tuple,
              {2788,12},
              [{atom,{2788,13},bif},{atom,{2788,17},is_bitstring}]},
          {cons,
              {2788,32},
              {match,
                  {2788,33},
                  {tuple,
                      {2788,33},
                      [{atom,{2788,33},b_var},{var,{2788,33},'_'}]},
                  {var,{2788,42},'Arg'}},
              {nil,{2788,45}}},
          {var,{2788,48},'Ts'},
          {var,{2788,52},'_Ds'}],
         [],
         [{debug_line,2789,1257},
          {match,
              {2789,5},
              {var,{2789,5},'T'},
              {tuple,
                  {2789,9},
                  [{var,{2789,10},'Arg'},
                   {call,
                       {2789,15},
                       {remote,
                           {2789,25},
                           {atom,{2789,15},beam_types},
                           {atom,{2789,26},meet}},
                       [{block,0,
                            [{call,
                                 {2789,31},
                                 {atom,{2789,31},concrete_type},
                                 [{var,{2789,45},'Arg'},
                                  {var,{2789,50},'Ts'}]}]},
                        {block,0,
                            [{tuple,
                                 {2789,55},
                                 [{atom,{2789,55},t_bs_matchable},
                                  {integer,{2789,55},1}]}]}]}]}},
          {debug_line,2790,1258},
          {tuple,
              {2790,5},
              [{cons,{2790,6},{var,{2790,7},'T'},{nil,{2790,8}}},
               {cons,{2790,11},{var,{2790,12},'T'},{nil,{2790,13}}}]}]},
     {clause,
         {2791,1},
         [{tuple,{2791,12},[{atom,{2791,13},bif},{atom,{2791,17},is_boolean}]},
          {cons,
              {2791,30},
              {match,
                  {2791,31},
                  {tuple,
                      {2791,31},
                      [{atom,{2791,31},b_var},{var,{2791,31},'_'}]},
                  {var,{2791,40},'Arg'}},
              {nil,{2791,43}}},
          {var,{2791,46},'_Ts'},
          {var,{2791,51},'_Ds'}],
         [],
         [{debug_line,2792,1259},
          {match,
              {2792,5},
              {var,{2792,5},'T'},
              {tuple,
                  {2792,9},
                  [{var,{2792,10},'Arg'},
                   {call,
                       {2792,15},
                       {remote,
                           {2792,25},
                           {atom,{2792,15},beam_types},
                           {atom,{2792,26},make_boolean}},
                       []}]}},
          {debug_line,2793,1260},
          {tuple,
              {2793,5},
              [{cons,{2793,6},{var,{2793,7},'T'},{nil,{2793,8}}},
               {cons,{2793,11},{var,{2793,12},'T'},{nil,{2793,13}}}]}]},
     {clause,
         {2794,1},
         [{tuple,{2794,12},[{atom,{2794,13},bif},{atom,{2794,17},is_float}]},
          {cons,
              {2794,28},
              {match,
                  {2794,29},
                  {tuple,
                      {2794,29},
                      [{atom,{2794,29},b_var},{var,{2794,29},'_'}]},
                  {var,{2794,38},'Arg'}},
              {nil,{2794,41}}},
          {var,{2794,44},'_Ts'},
          {var,{2794,49},'_Ds'}],
         [],
         [{debug_line,2795,1261},
          {match,
              {2795,5},
              {var,{2795,5},'T'},
              {tuple,
                  {2795,9},
                  [{var,{2795,10},'Arg'},
                   {tuple,
                       {2795,15},
                       [{atom,{2795,15},t_float},{atom,{2795,15},any}]}]}},
          {debug_line,2796,1262},
          {tuple,
              {2796,5},
              [{cons,{2796,6},{var,{2796,7},'T'},{nil,{2796,8}}},
               {cons,{2796,11},{var,{2796,12},'T'},{nil,{2796,13}}}]}]},
     {clause,
         {2797,1},
         [{tuple,
              {2797,12},
              [{atom,{2797,13},bif},{atom,{2797,17},is_function}]},
          {cons,
              {2797,31},
              {match,
                  {2797,32},
                  {tuple,
                      {2797,32},
                      [{atom,{2797,32},b_var},{var,{2797,32},'_'}]},
                  {var,{2797,41},'Arg'}},
              {nil,{2797,44}}},
          {var,{2797,47},'_Ts'},
          {var,{2797,52},'_Ds'}],
         [],
         [{debug_line,2798,1263},
          {match,
              {2798,5},
              {var,{2798,5},'T'},
              {tuple,
                  {2798,9},
                  [{var,{2798,10},'Arg'},
                   {tuple,
                       {2798,15},
                       [{atom,{2798,15},t_fun},
                        {atom,{2798,15},any},
                        {atom,{2798,15},any},
                        {atom,{2798,15},any}]}]}},
          {debug_line,2799,1264},
          {tuple,
              {2799,5},
              [{cons,{2799,6},{var,{2799,7},'T'},{nil,{2799,8}}},
               {cons,{2799,11},{var,{2799,12},'T'},{nil,{2799,13}}}]}]},
     {clause,
         {2800,1},
         [{tuple,
              {2800,12},
              [{atom,{2800,13},bif},{atom,{2800,17},is_function}]},
          {cons,
              {2800,31},
              {match,
                  {2800,32},
                  {tuple,
                      {2800,32},
                      [{atom,{2800,32},b_var},{var,{2800,32},'_'}]},
                  {var,{2800,41},'Arg'}},
              {cons,{2800,46},{var,{2800,46},'Arity'},{nil,{2800,51}}}},
          {var,{2800,54},'_Ts'},
          {var,{2800,59},'_Ds'}],
         [],
         [{debug_line,2801,1265},
          {'case',
              {2801,5},
              {var,{2801,10},'Arity'},
              [{clause,
                   {2802,9},
                   [{tuple,
                        {2802,9},
                        [{atom,{2802,9},b_literal},{var,{2802,24},'V'}]}],
                   [[{call,
                         {2802,32},
                         {remote,
                             {2802,32},
                             {atom,{2802,32},erlang},
                             {atom,{2802,32},is_integer}},
                         [{var,{2802,43},'V'}]},
                     {op,{2802,49},
                         '>=',
                         {var,{2802,47},'V'},
                         {integer,{2802,52},0}},
                     {op,{2802,57},
                         '=<',
                         {var,{2802,55},'V'},
                         {integer,{2802,61},255}}]],
                   [{debug_line,2803,1266},
                    {match,
                        {2803,13},
                        {var,{2803,13},'T'},
                        {tuple,
                            {2803,17},
                            [{var,{2803,18},'Arg'},
                             {tuple,
                                 {2803,23},
                                 [{atom,{2803,23},t_fun},
                                  {var,{2803,36},'V'},
                                  {atom,{2803,23},any},
                                  {atom,{2803,23},any}]}]}},
                    {debug_line,2804,1267},
                    {tuple,
                        {2804,13},
                        [{cons,{2804,14},{var,{2804,15},'T'},{nil,{2804,16}}},
                         {cons,
                             {2804,19},
                             {var,{2804,20},'T'},
                             {nil,{2804,21}}}]}]},
               {clause,
                   {2805,9},
                   [{var,{2805,9},'_'}],
                   [],
                   [{debug_line,2809,1268},
                    {match,
                        {2809,13},
                        {var,{2809,13},'T'},
                        {tuple,
                            {2809,17},
                            [{var,{2809,18},'Arg'},
                             {tuple,
                                 {2809,23},
                                 [{atom,{2809,23},t_fun},
                                  {atom,{2809,23},any},
                                  {atom,{2809,23},any},
                                  {atom,{2809,23},any}]}]}},
                    {debug_line,2810,1269},
                    {tuple,
                        {2810,13},
                        [{cons,{2810,14},{var,{2810,15},'T'},{nil,{2810,16}}},
                         {nil,{2810,19}}]}]}]}]},
     {clause,
         {2812,1},
         [{tuple,{2812,12},[{atom,{2812,13},bif},{atom,{2812,17},is_integer}]},
          {cons,
              {2812,30},
              {match,
                  {2812,31},
                  {tuple,
                      {2812,31},
                      [{atom,{2812,31},b_var},{var,{2812,31},'_'}]},
                  {var,{2812,40},'Arg'}},
              {nil,{2812,43}}},
          {var,{2812,46},'_Ts'},
          {var,{2812,51},'_Ds'}],
         [],
         [{debug_line,2813,1270},
          {match,
              {2813,5},
              {var,{2813,5},'T'},
              {tuple,
                  {2813,9},
                  [{var,{2813,10},'Arg'},
                   {tuple,
                       {2813,15},
                       [{atom,{2813,15},t_integer},{atom,{2813,15},any}]}]}},
          {debug_line,2814,1271},
          {tuple,
              {2814,5},
              [{cons,{2814,6},{var,{2814,7},'T'},{nil,{2814,8}}},
               {cons,{2814,11},{var,{2814,12},'T'},{nil,{2814,13}}}]}]},
     {clause,
         {2815,1},
         [{tuple,{2815,12},[{atom,{2815,13},bif},{atom,{2815,17},is_list}]},
          {cons,
              {2815,27},
              {match,
                  {2815,28},
                  {tuple,
                      {2815,28},
                      [{atom,{2815,28},b_var},{var,{2815,28},'_'}]},
                  {var,{2815,37},'Arg'}},
              {nil,{2815,40}}},
          {var,{2815,43},'_Ts'},
          {var,{2815,48},'_Ds'}],
         [],
         [{debug_line,2816,1272},
          {match,
              {2816,5},
              {var,{2816,5},'T'},
              {tuple,
                  {2816,9},
                  [{var,{2816,10},'Arg'},
                   {tuple,
                       {2816,15},
                       [{atom,{2816,15},t_list},
                        {atom,{2816,15},any},
                        {atom,{2816,15},any}]}]}},
          {debug_line,2817,1273},
          {tuple,
              {2817,5},
              [{cons,{2817,6},{var,{2817,7},'T'},{nil,{2817,8}}},
               {cons,{2817,11},{var,{2817,12},'T'},{nil,{2817,13}}}]}]},
     {clause,
         {2818,1},
         [{tuple,{2818,12},[{atom,{2818,13},bif},{atom,{2818,17},is_map}]},
          {cons,
              {2818,26},
              {match,
                  {2818,27},
                  {tuple,
                      {2818,27},
                      [{atom,{2818,27},b_var},{var,{2818,27},'_'}]},
                  {var,{2818,36},'Arg'}},
              {nil,{2818,39}}},
          {var,{2818,42},'_Ts'},
          {var,{2818,47},'_Ds'}],
         [],
         [{debug_line,2819,1274},
          {match,
              {2819,5},
              {var,{2819,5},'T'},
              {tuple,
                  {2819,9},
                  [{var,{2819,10},'Arg'},
                   {tuple,
                       {2819,15},
                       [{atom,{2819,15},t_map},
                        {atom,{2819,15},any},
                        {atom,{2819,15},any}]}]}},
          {debug_line,2820,1275},
          {tuple,
              {2820,5},
              [{cons,{2820,6},{var,{2820,7},'T'},{nil,{2820,8}}},
               {cons,{2820,11},{var,{2820,12},'T'},{nil,{2820,13}}}]}]},
     {clause,
         {2821,1},
         [{tuple,{2821,12},[{atom,{2821,13},bif},{atom,{2821,17},is_number}]},
          {cons,
              {2821,29},
              {match,
                  {2821,30},
                  {tuple,
                      {2821,30},
                      [{atom,{2821,30},b_var},{var,{2821,30},'_'}]},
                  {var,{2821,39},'Arg'}},
              {nil,{2821,42}}},
          {var,{2821,45},'_Ts'},
          {var,{2821,50},'_Ds'}],
         [],
         [{debug_line,2822,1276},
          {match,
              {2822,5},
              {var,{2822,5},'T'},
              {tuple,
                  {2822,9},
                  [{var,{2822,10},'Arg'},
                   {tuple,
                       {2822,15},
                       [{atom,{2822,15},t_number},{atom,{2822,15},any}]}]}},
          {debug_line,2823,1277},
          {tuple,
              {2823,5},
              [{cons,{2823,6},{var,{2823,7},'T'},{nil,{2823,8}}},
               {cons,{2823,11},{var,{2823,12},'T'},{nil,{2823,13}}}]}]},
     {clause,
         {2824,1},
         [{tuple,{2824,12},[{atom,{2824,13},bif},{atom,{2824,17},is_pid}]},
          {cons,
              {2824,26},
              {match,
                  {2824,27},
                  {tuple,
                      {2824,27},
                      [{atom,{2824,27},b_var},{var,{2824,27},'_'}]},
                  {var,{2824,36},'Arg'}},
              {nil,{2824,39}}},
          {var,{2824,42},'_Ts'},
          {var,{2824,47},'_Ds'}],
         [],
         [{debug_line,2825,1278},
          {match,
              {2825,5},
              {var,{2825,5},'T'},
              {tuple,{2825,9},[{var,{2825,10},'Arg'},{atom,{2825,15},pid}]}},
          {debug_line,2826,1279},
          {tuple,
              {2826,5},
              [{cons,{2826,6},{var,{2826,7},'T'},{nil,{2826,8}}},
               {cons,{2826,11},{var,{2826,12},'T'},{nil,{2826,13}}}]}]},
     {clause,
         {2827,1},
         [{tuple,{2827,12},[{atom,{2827,13},bif},{atom,{2827,17},is_port}]},
          {cons,
              {2827,27},
              {match,
                  {2827,28},
                  {tuple,
                      {2827,28},
                      [{atom,{2827,28},b_var},{var,{2827,28},'_'}]},
                  {var,{2827,37},'Arg'}},
              {nil,{2827,40}}},
          {var,{2827,43},'_Ts'},
          {var,{2827,48},'_Ds'}],
         [],
         [{debug_line,2828,1280},
          {match,
              {2828,5},
              {var,{2828,5},'T'},
              {tuple,{2828,9},[{var,{2828,10},'Arg'},{atom,{2828,15},port}]}},
          {debug_line,2829,1281},
          {tuple,
              {2829,5},
              [{cons,{2829,6},{var,{2829,7},'T'},{nil,{2829,8}}},
               {cons,{2829,11},{var,{2829,12},'T'},{nil,{2829,13}}}]}]},
     {clause,
         {2830,1},
         [{tuple,
              {2830,12},
              [{atom,{2830,13},bif},{atom,{2830,17},is_reference}]},
          {cons,
              {2830,32},
              {match,
                  {2830,33},
                  {tuple,
                      {2830,33},
                      [{atom,{2830,33},b_var},{var,{2830,33},'_'}]},
                  {var,{2830,42},'Arg'}},
              {nil,{2830,45}}},
          {var,{2830,48},'_Ts'},
          {var,{2830,53},'_Ds'}],
         [],
         [{debug_line,2831,1282},
          {match,
              {2831,5},
              {var,{2831,5},'T'},
              {tuple,
                  {2831,9},
                  [{var,{2831,10},'Arg'},{atom,{2831,15},reference}]}},
          {debug_line,2832,1283},
          {tuple,
              {2832,5},
              [{cons,{2832,6},{var,{2832,7},'T'},{nil,{2832,8}}},
               {cons,{2832,11},{var,{2832,12},'T'},{nil,{2832,13}}}]}]},
     {clause,
         {2833,1},
         [{tuple,{2833,12},[{atom,{2833,13},bif},{atom,{2833,17},is_tuple}]},
          {cons,
              {2833,28},
              {match,
                  {2833,29},
                  {tuple,
                      {2833,29},
                      [{atom,{2833,29},b_var},{var,{2833,29},'_'}]},
                  {var,{2833,38},'Arg'}},
              {nil,{2833,41}}},
          {var,{2833,44},'_Ts'},
          {var,{2833,49},'_Ds'}],
         [],
         [{debug_line,2834,1284},
          {match,
              {2834,5},
              {var,{2834,5},'T'},
              {tuple,
                  {2834,9},
                  [{var,{2834,10},'Arg'},
                   {tuple,
                       {2834,15},
                       [{atom,{2834,15},t_tuple},
                        {integer,{2834,15},0},
                        {atom,{2834,15},false},
                        {map,{2834,15},[]}]}]}},
          {debug_line,2835,1285},
          {tuple,
              {2835,5},
              [{cons,{2835,6},{var,{2835,7},'T'},{nil,{2835,8}}},
               {cons,{2835,11},{var,{2835,12},'T'},{nil,{2835,13}}}]}]},
     {clause,
         {2836,1},
         [{tuple,{2836,12},[{atom,{2836,13},bif},{atom,{2836,17},'and'}]},
          {cons,
              {2836,25},
              {match,
                  {2836,26},
                  {tuple,
                      {2836,26},
                      [{atom,{2836,26},b_var},{var,{2836,26},'_'}]},
                  {var,{2836,35},'LHS'}},
              {cons,
                  {2836,39},
                  {match,
                      {2836,39},
                      {tuple,
                          {2836,39},
                          [{atom,{2836,39},b_var},{var,{2836,39},'_'}]},
                      {var,{2836,48},'RHS'}},
                  {nil,{2836,51}}}},
          {var,{2836,54},'Ts'},
          {var,{2836,58},'Ds'}],
         [],
         [{debug_line,2843,1286},
          {match,
              {2843,5},
              {map,
                  {2843,5},
                  [{map_field_exact,
                       {2843,12},
                       {var,{2843,8},'LHS'},
                       {tuple,
                           {2843,15},
                           [{atom,{2843,15},b_set},
                            {var,{2843,15},'_'},
                            {var,{2843,15},'_'},
                            {var,{2843,25},'LHSOp'},
                            {var,{2843,36},'LHSArgs'}]}},
                   {map_field_exact,
                       {2844,12},
                       {var,{2844,8},'RHS'},
                       {tuple,
                           {2844,15},
                           [{atom,{2844,15},b_set},
                            {var,{2844,15},'_'},
                            {var,{2844,15},'_'},
                            {var,{2844,25},'RHSOp'},
                            {var,{2844,36},'RHSArgs'}]}}]},
              {var,{2844,49},'Ds'}},
          {debug_line,2846,1287},
          {match,
              {2846,5},
              {tuple,{2846,5},[{var,{2846,6},'LHSPos'},{var,{2846,14},'_'}]},
              {call,
                  {2846,19},
                  {atom,{2846,19},infer_and_type},
                  [{var,{2846,34},'LHSOp'},
                   {var,{2846,41},'LHSArgs'},
                   {var,{2846,50},'Ts'},
                   {var,{2846,54},'Ds'}]}},
          {debug_line,2847,1288},
          {match,
              {2847,5},
              {tuple,{2847,5},[{var,{2847,6},'RHSPos'},{var,{2847,14},'_'}]},
              {call,
                  {2847,19},
                  {atom,{2847,19},infer_and_type},
                  [{var,{2847,34},'RHSOp'},
                   {var,{2847,41},'RHSArgs'},
                   {var,{2847,50},'Ts'},
                   {var,{2847,54},'Ds'}]}},
          {debug_line,2849,1289},
          {match,
              {2849,5},
              {var,{2849,5},'True'},
              {call,
                  {2849,12},
                  {remote,
                      {2849,22},
                      {atom,{2849,12},beam_types},
                      {atom,{2849,23},make_atom}},
                  [{atom,{2849,33},true}]}},
          {debug_line,2850,1290},
          {tuple,
              {2850,5},
              [{op,{2850,33},
                   '++',
                   {cons,
                       {2850,6},
                       {tuple,
                           {2850,7},
                           [{var,{2850,8},'LHS'},{var,{2850,13},'True'}]},
                       {cons,
                           {2850,20},
                           {tuple,
                               {2850,20},
                               [{var,{2850,21},'RHS'},{var,{2850,26},'True'}]},
                           {nil,{2850,31}}}},
                   {op,{2850,43},
                       '++',
                       {var,{2850,36},'LHSPos'},
                       {var,{2850,46},'RHSPos'}}},
               {nil,{2850,54}}]}]},
     {clause,
         {2851,1},
         [{var,{2851,12},'_Op'},
          {var,{2851,17},'_Args'},
          {var,{2851,24},'_Ts'},
          {var,{2851,29},'_Ds'}],
         [],
         [{debug_line,2852,1291},
          {tuple,{2852,5},[{nil,{2852,6}},{nil,{2852,10}}]}]}]}.
{function,
    {2854,1},
    infer_success_type,4,
    [{clause,
         {2854,1},
         [{var,{2854,1},'_'},
          {var,{2854,1},'_'},
          {var,{2854,1},'_'},
          {var,{2854,1},'_'}],
         [[{call,
               {2854,1},
               {remote,
                   {2854,1},
                   {atom,{2854,1},fake},
                   {atom,{2854,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2854,1292},{atom,{2854,1},ignore}]},
     {clause,
         {2854,1},
         [{tuple,{2854,20},[{atom,{2854,21},bif},{var,{2854,25},'Op'}]},
          {var,{2854,30},'Args'},
          {var,{2854,36},'Ts'},
          {var,{2854,40},'_Ds'}],
         [],
         [{debug_line,2855,1293},
          {match,
              {2855,5},
              {var,{2855,5},'ArgTypes'},
              {call,
                  {2855,16},
                  {atom,{2855,16},concrete_types},
                  [{var,{2855,31},'Args'},{var,{2855,37},'Ts'}]}},
          {debug_line,2857,1294},
          {match,
              {2857,5},
              {tuple,
                  {2857,5},
                  [{var,{2857,6},'_'},
                   {var,{2857,9},'PosTypes0'},
                   {var,{2857,20},'CanSubtract'}]},
              {call,
                  {2857,35},
                  {remote,
                      {2857,50},
                      {atom,{2857,35},beam_call_types},
                      {atom,{2857,51},types}},
                  [{atom,{2857,57},erlang},
                   {var,{2857,65},'Op'},
                   {var,{2857,69},'ArgTypes'}]}},
          {debug_line,2858,1295},
          {match,
              {2858,5},
              {var,{2858,5},'PosTypes'},
              {call,
                  {2858,16},
                  {remote,
                      {2858,16},
                      {atom,{2858,16},lists},
                      {atom,{2858,16},zip}},
                  [{var,{2858,20},'Args'},{var,{2858,26},'PosTypes0'}]}},
          {debug_line,2860,1296},
          {'case',
              {2860,5},
              {var,{2860,10},'CanSubtract'},
              [{clause,
                   {2861,9},
                   [{atom,{2861,9},true}],
                   [],
                   [{debug_line,2861,1297},
                    {tuple,
                        {2861,17},
                        [{var,{2861,18},'PosTypes'},
                         {var,{2861,28},'PosTypes'}]}]},
               {clause,
                   {2862,9},
                   [{atom,{2862,9},false}],
                   [],
                   [{debug_line,2862,1298},
                    {tuple,
                        {2862,18},
                        [{var,{2862,19},'PosTypes'},{nil,{2862,29}}]}]}]}]},
     {clause,
         {2864,1},
         [{atom,{2864,20},call},
          {cons,
              {2864,26},
              {match,
                  {2864,27},
                  {tuple,
                      {2864,27},
                      [{atom,{2864,27},b_var},{var,{2864,27},'_'}]},
                  {var,{2864,36},'Fun'}},
              {var,{2864,40},'Args'}},
          {var,{2864,47},'_Ts'},
          {var,{2864,52},'_Ds'}],
         [],
         [{debug_line,2865,1299},
          {match,
              {2865,5},
              {var,{2865,5},'T'},
              {tuple,
                  {2865,9},
                  [{var,{2865,10},'Fun'},
                   {tuple,
                       {2865,15},
                       [{atom,{2865,15},t_fun},
                        {call,
                            {2865,28},
                            {remote,
                                {2865,28},
                                {atom,{2865,28},erlang},
                                {atom,{2865,28},length}},
                            [{var,{2865,35},'Args'}]},
                        {atom,{2865,15},any},
                        {atom,{2865,15},any}]}]}},
          {debug_line,2866,1300},
          {tuple,
              {2866,5},
              [{cons,{2866,6},{var,{2866,7},'T'},{nil,{2866,8}}},
               {nil,{2866,11}}]}]},
     {clause,
         {2867,1},
         [{atom,{2867,20},bs_start_match},
          {cons,
              {2867,36},
              {var,{2867,37},'_'},
              {cons,
                  {2867,40},
                  {match,
                      {2867,40},
                      {tuple,
                          {2867,40},
                          [{atom,{2867,40},b_var},{var,{2867,40},'_'}]},
                      {var,{2867,49},'Src'}},
                  {nil,{2867,52}}}},
          {var,{2867,55},'_Ts'},
          {var,{2867,60},'_Ds'}],
         [],
         [{debug_line,2868,1301},
          {match,
              {2868,5},
              {var,{2868,5},'T'},
              {tuple,
                  {2868,9},
                  [{var,{2868,10},'Src'},
                   {tuple,
                       {2868,14},
                       [{atom,{2868,14},t_bs_matchable},
                        {integer,{2868,14},1}]}]}},
          {debug_line,2869,1302},
          {tuple,
              {2869,5},
              [{cons,{2869,6},{var,{2869,7},'T'},{nil,{2869,8}}},
               {cons,{2869,11},{var,{2869,12},'T'},{nil,{2869,13}}}]}]},
     {clause,
         {2870,1},
         [{atom,{2870,20},bs_match},
          {cons,
              {2870,30},
              {tuple,
                  {2870,31},
                  [{atom,{2870,31},b_literal},{atom,{2870,46},binary}]},
              {cons,
                  {2871,31},
                  {var,{2871,31},'Ctx'},
                  {cons,
                      {2871,36},
                      {var,{2871,36},'_Flags'},
                      {cons,
                          {2872,31},
                          {tuple,
                              {2872,31},
                              [{atom,{2872,31},b_literal},
                               {atom,{2872,46},all}]},
                          {cons,
                              {2873,31},
                              {tuple,
                                  {2873,31},
                                  [{atom,{2873,31},b_literal},
                                   {var,{2873,46},'OpUnit'}]},
                              {nil,{2873,53}}}}}}},
          {var,{2874,20},'_Ts'},
          {var,{2874,25},'_Ds'}],
         [],
         [{debug_line,2877,1303},
          {match,
              {2877,5},
              {var,{2877,5},'T'},
              {tuple,
                  {2877,9},
                  [{var,{2877,10},'Ctx'},
                   {tuple,
                       {2877,15},
                       [{atom,{2877,15},t_bs_context},
                        {var,{2877,39},'OpUnit'}]}]}},
          {debug_line,2878,1304},
          {tuple,
              {2878,5},
              [{cons,{2878,6},{var,{2878,7},'T'},{nil,{2878,8}}},
               {cons,{2878,11},{var,{2878,12},'T'},{nil,{2878,13}}}]}]},
     {clause,
         {2879,1},
         [{var,{2879,20},'_Op'},
          {var,{2879,25},'_Args'},
          {var,{2879,32},'_Ts'},
          {var,{2879,37},'_Ds'}],
         [],
         [{debug_line,2880,1305},
          {tuple,{2880,5},[{nil,{2880,6}},{nil,{2880,10}}]}]}]}.
{function,
    {2882,1},
    infer_eq_type,2,
    [{clause,
         {2882,1},
         [{var,{2882,1},'_'},{var,{2882,1},'_'}],
         [[{call,
               {2882,1},
               {remote,
                   {2882,1},
                   {atom,{2882,1},fake},
                   {atom,{2882,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2882,1306},{atom,{2882,1},ignore}]},
     {clause,
         {2882,1},
         [{tuple,
              {2882,15},
              [{atom,{2882,15},b_set},
               {var,{2882,15},'_'},
               {var,{2882,15},'_'},
               {tuple,
                   {2882,25},
                   [{atom,{2882,26},bif},{atom,{2882,30},tuple_size}]},
               {cons,
                   {2882,47},
                   {match,
                       {2882,48},
                       {tuple,
                           {2882,48},
                           [{atom,{2882,48},b_var},{var,{2882,48},'_'}]},
                       {var,{2882,57},'Tuple'}},
                   {nil,{2882,62}}}]},
          {tuple,
              {2883,15},
              [{atom,{2883,15},t_integer},
               {tuple,
                   {2883,35},
                   [{var,{2883,36},'Size'},{var,{2883,41},'Size'}]}]}],
         [],
         [{debug_line,2884,1307},
          {cons,
              {2884,5},
              {tuple,
                  {2884,6},
                  [{var,{2884,7},'Tuple'},
                   {tuple,
                       {2884,13},
                       [{atom,{2884,13},t_tuple},
                        {var,{2884,38},'Size'},
                        {atom,{2884,28},true},
                        {map,{2884,13},[]}]}]},
              {nil,{2884,44}}}]},
     {clause,
         {2885,1},
         [{tuple,
              {2885,15},
              [{atom,{2885,15},b_set},
               {var,{2885,15},'_'},
               {var,{2885,15},'_'},
               {atom,{2885,25},get_tuple_element},
               {cons,
                   {2886,27},
                   {match,
                       {2886,28},
                       {tuple,
                           {2886,28},
                           [{atom,{2886,28},b_var},{var,{2886,28},'_'}]},
                       {var,{2886,37},'Tuple'}},
                   {cons,
                       {2886,43},
                       {tuple,
                           {2886,43},
                           [{atom,{2886,43},b_literal},{var,{2886,58},'N'}]},
                       {nil,{2886,60}}}}]},
          {var,{2887,15},'ElementType'}],
         [],
         [{debug_line,2888,1308},
          {match,
              {2888,5},
              {var,{2888,5},'Index'},
              {op,{2888,15},'+',{var,{2888,13},'N'},{integer,{2888,17},1}}},
          {debug_line,2889,1309},
          {'case',
              {2889,5},
              {call,
                  {2889,10},
                  {remote,
                      {2889,20},
                      {atom,{2889,10},beam_types},
                      {atom,{2889,21},set_tuple_element}},
                  [{var,{2889,39},'Index'},
                   {var,{2889,46},'ElementType'},
                   {block,0,[{map,{2889,59},[]}]}]},
              [{clause,
                   {2890,9},
                   [{match,
                        {2890,9},
                        {map,
                            {2890,9},
                            [{map_field_exact,
                                 {2890,18},
                                 {var,{2890,12},'Index'},
                                 {var,{2890,21},'_'}}]},
                        {var,{2890,25},'Es'}}],
                   [],
                   [{debug_line,2891,1310},
                    {cons,
                        {2891,13},
                        {tuple,
                            {2891,14},
                            [{var,{2891,15},'Tuple'},
                             {tuple,
                                 {2891,21},
                                 [{atom,{2891,21},t_tuple},
                                  {var,{2891,35},'Index'},
                                  {atom,{2891,21},false},
                                  {var,{2891,50},'Es'}]}]},
                        {nil,{2891,54}}}]},
               {clause,
                   {2892,9},
                   [{map,{2892,9},[]}],
                   [],
                   [{debug_line,2894,1311},{nil,{2894,13}}]}]}]},
     {clause,
         {2896,1},
         [{var,{2896,15},'_'},{var,{2896,18},'_'}],
         [],
         [{debug_line,2897,1312},{nil,{2897,5}}]}]}.
{function,
    {2899,1},
    infer_ne_type,2,
    [{clause,
         {2899,1},
         [{var,{2899,1},'_'},{var,{2899,1},'_'}],
         [[{call,
               {2899,1},
               {remote,
                   {2899,1},
                   {atom,{2899,1},fake},
                   {atom,{2899,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2899,1313},{atom,{2899,1},ignore}]},
     {clause,
         {2899,1},
         [{tuple,
              {2899,15},
              [{atom,{2899,15},b_set},
               {var,{2899,15},'_'},
               {var,{2899,15},'_'},
               {tuple,
                   {2899,25},
                   [{atom,{2899,26},bif},{atom,{2899,30},tuple_size}]},
               {cons,
                   {2899,47},
                   {match,
                       {2899,48},
                       {tuple,
                           {2899,48},
                           [{atom,{2899,48},b_var},{var,{2899,48},'_'}]},
                       {var,{2899,57},'Tuple'}},
                   {nil,{2899,62}}}]},
          {tuple,
              {2900,15},
              [{atom,{2900,15},t_integer},
               {tuple,
                   {2900,35},
                   [{var,{2900,36},'Size'},{var,{2900,41},'Size'}]}]}],
         [],
         [{debug_line,2901,1314},
          {cons,
              {2901,5},
              {tuple,
                  {2901,6},
                  [{var,{2901,7},'Tuple'},
                   {tuple,
                       {2901,13},
                       [{atom,{2901,13},t_tuple},
                        {var,{2901,38},'Size'},
                        {atom,{2901,28},true},
                        {map,{2901,13},[]}]}]},
              {nil,{2901,44}}}]},
     {clause,
         {2902,1},
         [{tuple,
              {2902,15},
              [{atom,{2902,15},b_set},
               {var,{2902,15},'_'},
               {var,{2902,15},'_'},
               {atom,{2902,25},get_tuple_element},
               {cons,
                   {2903,27},
                   {match,
                       {2903,28},
                       {tuple,
                           {2903,28},
                           [{atom,{2903,28},b_var},{var,{2903,28},'_'}]},
                       {var,{2903,37},'Tuple'}},
                   {cons,
                       {2903,43},
                       {tuple,
                           {2903,43},
                           [{atom,{2903,43},b_literal},{var,{2903,58},'N'}]},
                       {nil,{2903,60}}}}]},
          {var,{2904,15},'ElementType'}],
         [],
         [{debug_line,2905,1315},
          {match,
              {2905,5},
              {var,{2905,5},'Index'},
              {op,{2905,15},'+',{var,{2905,13},'N'},{integer,{2905,17},1}}},
          {debug_line,2906,1316},
          {'case',
              {2906,5},
              {tuple,
                  {2906,10},
                  [{call,
                       {2906,11},
                       {remote,
                           {2906,21},
                           {atom,{2906,11},beam_types},
                           {atom,{2906,22},is_singleton_type}},
                       [{var,{2906,40},'ElementType'}]},
                   {call,
                       {2907,11},
                       {remote,
                           {2907,21},
                           {atom,{2907,11},beam_types},
                           {atom,{2907,22},set_tuple_element}},
                       [{var,{2907,40},'Index'},
                        {var,{2907,47},'ElementType'},
                        {block,0,
                            [{debug_line,2907,1317},{map,{2907,60},[]}]}]}]},
              [{clause,
                   {2908,9},
                   [{tuple,
                        {2908,9},
                        [{atom,{2908,10},true},
                         {match,
                             {2908,16},
                             {map,
                                 {2908,16},
                                 [{map_field_exact,
                                      {2908,25},
                                      {var,{2908,19},'Index'},
                                      {var,{2908,28},'_'}}]},
                             {var,{2908,32},'Es'}}]}],
                   [],
                   [{debug_line,2909,1318},
                    {cons,
                        {2909,13},
                        {tuple,
                            {2909,14},
                            [{var,{2909,15},'Tuple'},
                             {tuple,
                                 {2909,21},
                                 [{atom,{2909,21},t_tuple},
                                  {var,{2909,35},'Index'},
                                  {atom,{2909,21},false},
                                  {var,{2909,50},'Es'}]}]},
                        {nil,{2909,54}}}]},
               {clause,
                   {2910,9},
                   [{tuple,{2910,9},[{var,{2910,10},'_'},{map,{2910,13},[]}]}],
                   [],
                   [{debug_line,2914,1319},{nil,{2914,13}}]}]}]},
     {clause,
         {2916,1},
         [{var,{2916,15},'_'},{var,{2916,18},'_'}],
         [],
         [{debug_line,2917,1320},{nil,{2917,5}}]}]}.
{function,
    {2919,1},
    infer_and_type,4,
    [{clause,
         {2919,1},
         [{var,{2919,1},'_'},
          {var,{2919,1},'_'},
          {var,{2919,1},'_'},
          {var,{2919,1},'_'}],
         [[{call,
               {2919,1},
               {remote,
                   {2919,1},
                   {atom,{2919,1},fake},
                   {atom,{2919,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2919,1321},{atom,{2919,1},ignore}]},
     {clause,
         {2919,1},
         [{var,{2919,16},'Op'},
          {var,{2919,20},'Args'},
          {var,{2919,26},'Ts'},
          {var,{2919,30},'Ds'}],
         [],
         [{debug_line,2920,1322},
          {'case',
              {2920,5},
              {call,
                  {2920,10},
                  {atom,{2920,10},inv_relop},
                  [{var,{2920,20},'Op'}]},
              [{clause,
                   {2921,9},
                   [{atom,{2921,9},none}],
                   [],
                   [{debug_line,2922,1323},
                    {call,
                        {2922,13},
                        {atom,{2922,13},infer_type},
                        [{var,{2922,24},'Op'},
                         {var,{2922,28},'Args'},
                         {var,{2922,34},'Ts'},
                         {var,{2922,38},'Ds'}]}]},
               {clause,
                   {2923,9},
                   [{var,{2923,9},'_InvOp'}],
                   [],
                   [{debug_line,2924,1324},
                    {match,
                        {2924,13},
                        {tuple,
                            {2924,13},
                            [{atom,{2924,14},bif},{var,{2924,18},'RelOp'}]},
                        {var,{2924,27},'Op'}},
                    {debug_line,2925,1325},
                    {call,
                        {2925,13},
                        {atom,{2925,13},infer_relop},
                        [{var,{2925,25},'RelOp'},
                         {var,{2925,32},'Args'},
                         {block,0,
                             [{call,
                                  {2925,38},
                                  {atom,{2925,38},concrete_types},
                                  [{var,{2925,53},'Args'},
                                   {var,{2925,59},'Ts'}]}]},
                         {var,{2925,64},'Ds'}]}]}]}]}]}.
{function,
    {2928,1},
    join_types,2,
    [{clause,
         {2928,1},
         [{var,{2928,1},'_'},{var,{2928,1},'_'}],
         [[{call,
               {2928,1},
               {remote,
                   {2928,1},
                   {atom,{2928,1},fake},
                   {atom,{2928,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2928,1326},{atom,{2928,1},ignore}]},
     {clause,
         {2928,1},
         [{var,{2928,12},'Ts'},{var,{2928,16},'Ts'}],
         [],
         [{debug_line,2929,1327},{var,{2929,5},'Ts'}]},
     {clause,
         {2930,1},
         [{var,{2930,12},'LHS'},{var,{2930,17},'RHS'}],
         [],
         [{debug_line,2931,1328},
          {'if',
              {2931,5},
              [{clause,
                   {2932,9},
                   [],
                   [[{op,{2932,23},
                         '<',
                         {call,
                             {2932,9},
                             {remote,
                                 {2932,9},
                                 {atom,{2932,9},erlang},
                                 {atom,{2932,9},map_size}},
                             [{var,{2932,18},'LHS'}]},
                         {call,
                             {2932,25},
                             {remote,
                                 {2932,25},
                                 {atom,{2932,25},erlang},
                                 {atom,{2932,25},map_size}},
                             [{var,{2932,34},'RHS'}]}}]],
                   [{debug_line,2933,1329},
                    {call,
                        {2933,13},
                        {atom,{2933,13},join_types_1},
                        [{block,0,
                             [{call,
                                  {2933,26},
                                  {remote,
                                      {2933,30},
                                      {atom,{2933,26},maps},
                                      {atom,{2933,31},keys}},
                                  [{var,{2933,36},'LHS'}]}]},
                         {var,{2933,42},'RHS'},
                         {var,{2933,47},'LHS'}]}]},
               {clause,
                   {2934,9},
                   [],
                   [[{atom,{2934,9},true}]],
                   [{debug_line,2935,1330},
                    {call,
                        {2935,13},
                        {atom,{2935,13},join_types_1},
                        [{block,0,
                             [{call,
                                  {2935,26},
                                  {remote,
                                      {2935,30},
                                      {atom,{2935,26},maps},
                                      {atom,{2935,31},keys}},
                                  [{var,{2935,36},'RHS'}]}]},
                         {var,{2935,42},'LHS'},
                         {var,{2935,47},'RHS'}]}]}]}]}]}.
{function,
    {2939,1},
    join_types_1,3,
    [{clause,
         {2939,1},
         [{var,{2939,1},'_'},{var,{2939,1},'_'},{var,{2939,1},'_'}],
         [[{call,
               {2939,1},
               {remote,
                   {2939,1},
                   {atom,{2939,1},fake},
                   {atom,{2939,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2939,1331},{atom,{2939,1},ignore}]},
     {clause,
         {2939,1},
         [{cons,{2939,14},{var,{2939,15},'V'},{var,{2939,19},'Vs'}},
          {var,{2939,24},'Bigger'},
          {var,{2939,32},'Smaller'}],
         [],
         [{debug_line,2940,1332},
          {'case',
              {2940,5},
              {tuple,
                  {2940,10},
                  [{var,{2940,11},'Bigger'},{var,{2940,19},'Smaller'}]},
              [{clause,
                   {2941,9},
                   [{tuple,
                        {2941,9},
                        [{map,
                             {2941,10},
                             [{map_field_exact,
                                  {2941,15},
                                  {var,{2941,13},'V'},
                                  {var,{2941,18},'Same'}}]},
                         {map,
                             {2941,26},
                             [{map_field_exact,
                                  {2941,31},
                                  {var,{2941,29},'V'},
                                  {var,{2941,34},'Same'}}]}]}],
                   [],
                   [{debug_line,2942,1333},
                    {call,
                        {2942,13},
                        {atom,{2942,13},join_types_1},
                        [{var,{2942,26},'Vs'},
                         {var,{2942,30},'Bigger'},
                         {var,{2942,38},'Smaller'}]}]},
               {clause,
                   {2943,9},
                   [{tuple,
                        {2943,9},
                        [{map,
                             {2943,10},
                             [{map_field_exact,
                                  {2943,15},
                                  {var,{2943,13},'V'},
                                  {var,{2943,18},'LHS0'}}]},
                         {map,
                             {2943,26},
                             [{map_field_exact,
                                  {2943,31},
                                  {var,{2943,29},'V'},
                                  {var,{2943,34},'RHS0'}}]}]}],
                   [],
                   [{debug_line,2945,1334},
                    {match,
                        {2945,13},
                        {var,{2945,13},'LHS'},
                        {'case',
                            {2945,19},
                            {call,
                                {2945,24},
                                {remote,
                                    {2945,24},
                                    {atom,{2945,24},erlang},
                                    {atom,{2945,24},is_function}},
                                [{var,{2945,36},'LHS0'}]},
                            [{clause,
                                 {2946,23},
                                 [{atom,{2946,23},true}],
                                 [],
                                 [{debug_line,2946,1335},
                                  {call,
                                      {2946,31},
                                      {var,{2946,31},'LHS0'},
                                      [{var,{2946,36},'Bigger'}]}]},
                             {clause,
                                 {2947,23},
                                 [{atom,{2947,23},false}],
                                 [],
                                 [{debug_line,2947,1336},
                                  {var,{2947,32},'LHS0'}]}]}},
                    {debug_line,2949,1337},
                    {match,
                        {2949,13},
                        {var,{2949,13},'RHS'},
                        {'case',
                            {2949,19},
                            {call,
                                {2949,24},
                                {remote,
                                    {2949,24},
                                    {atom,{2949,24},erlang},
                                    {atom,{2949,24},is_function}},
                                [{var,{2949,36},'RHS0'}]},
                            [{clause,
                                 {2950,23},
                                 [{atom,{2950,23},true}],
                                 [],
                                 [{debug_line,2950,1338},
                                  {call,
                                      {2950,31},
                                      {var,{2950,31},'RHS0'},
                                      [{var,{2950,36},'Smaller'}]}]},
                             {clause,
                                 {2951,23},
                                 [{atom,{2951,23},false}],
                                 [],
                                 [{debug_line,2951,1339},
                                  {var,{2951,32},'RHS0'}]}]}},
                    {debug_line,2953,1340},
                    {match,
                        {2953,13},
                        {var,{2953,13},'T'},
                        {call,
                            {2953,17},
                            {remote,
                                {2953,27},
                                {atom,{2953,17},beam_types},
                                {atom,{2953,28},join}},
                            [{var,{2953,33},'LHS'},{var,{2953,38},'RHS'}]}},
                    {debug_line,2954,1341},
                    {call,
                        {2954,13},
                        {atom,{2954,13},join_types_1},
                        [{var,{2954,26},'Vs'},
                         {var,{2954,30},'Bigger'},
                         {block,0,
                             [{map,
                                  {2954,45},
                                  {var,{2954,38},'Smaller'},
                                  [{map_field_exact,
                                       {2954,50},
                                       {var,{2954,48},'V'},
                                       {var,{2954,53},'T'}}]}]}]}]},
               {clause,
                   {2955,9},
                   [{tuple,
                        {2955,9},
                        [{map,{2955,10},[]},
                         {map,
                             {2955,15},
                             [{map_field_exact,
                                  {2955,20},
                                  {var,{2955,18},'V'},
                                  {var,{2955,23},'_'}}]}]}],
                   [],
                   [{debug_line,2956,1342},
                    {call,
                        {2956,13},
                        {atom,{2956,13},join_types_1},
                        [{var,{2956,26},'Vs'},
                         {var,{2956,30},'Bigger'},
                         {block,0,
                             [{call,
                                  {2956,38},
                                  {remote,
                                      {2956,42},
                                      {atom,{2956,38},maps},
                                      {atom,{2956,43},remove}},
                                  [{var,{2956,50},'V'},
                                   {var,{2956,53},'Smaller'}]}]}]}]}]}]},
     {clause,
         {2958,1},
         [{nil,{2958,14}},{var,{2958,18},'_Bigger'},{var,{2958,27},'Smaller'}],
         [],
         [{debug_line,2959,1343},{var,{2959,5},'Smaller'}]}]}.
{function,
    {2961,1},
    meet_types,2,
    [{clause,
         {2961,1},
         [{var,{2961,1},'_'},{var,{2961,1},'_'}],
         [[{call,
               {2961,1},
               {remote,
                   {2961,1},
                   {atom,{2961,1},fake},
                   {atom,{2961,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2961,1344},{atom,{2961,1},ignore}]},
     {clause,
         {2961,1},
         [{cons,
              {2961,12},
              {tuple,
                  {2961,13},
                  [{match,
                       {2961,14},
                       {tuple,
                           {2961,14},
                           [{atom,{2961,14},b_literal},{var,{2961,14},'_'}]},
                       {var,{2961,27},'Lit'}},
                   {var,{2961,32},'T0'}]},
              {var,{2961,38},'Vs'}},
          {var,{2961,43},'Ts'}],
         [],
         [{debug_line,2962,1345},
          {match,
              {2962,5},
              {var,{2962,5},'T1'},
              {call,
                  {2962,10},
                  {atom,{2962,10},concrete_type},
                  [{var,{2962,24},'Lit'},{var,{2962,29},'Ts'}]}},
          {debug_line,2963,1346},
          {'case',
              {2963,5},
              {call,
                  {2963,10},
                  {remote,
                      {2963,20},
                      {atom,{2963,10},beam_types},
                      {atom,{2963,21},meet}},
                  [{var,{2963,26},'T0'},{var,{2963,30},'T1'}]},
              [{clause,
                   {2964,9},
                   [{atom,{2964,9},none}],
                   [],
                   [{debug_line,2964,1347},{atom,{2964,17},none}]},
               {clause,
                   {2965,9},
                   [{var,{2965,9},'_'}],
                   [],
                   [{debug_line,2965,1348},
                    {call,
                        {2965,14},
                        {atom,{2965,14},meet_types},
                        [{var,{2965,25},'Vs'},{var,{2965,29},'Ts'}]}]}]}]},
     {clause,
         {2967,1},
         [{cons,
              {2967,12},
              {tuple,
                  {2967,13},
                  [{match,
                       {2967,14},
                       {tuple,
                           {2967,14},
                           [{atom,{2967,14},b_var},{var,{2967,14},'_'}]},
                       {var,{2967,23},'V'}},
                   {var,{2967,26},'T0'}]},
              {var,{2967,32},'Vs'}},
          {var,{2967,37},'Ts'}],
         [],
         [{debug_line,2968,1349},
          {match,
              {2968,5},
              {var,{2968,5},'T1'},
              {call,
                  {2968,10},
                  {atom,{2968,10},concrete_type},
                  [{var,{2968,24},'V'},{var,{2968,27},'Ts'}]}},
          {debug_line,2969,1350},
          {'case',
              {2969,5},
              {call,
                  {2969,10},
                  {remote,
                      {2969,20},
                      {atom,{2969,10},beam_types},
                      {atom,{2969,21},meet}},
                  [{var,{2969,26},'T0'},{var,{2969,30},'T1'}]},
              [{clause,
                   {2970,9},
                   [{atom,{2970,9},none}],
                   [],
                   [{debug_line,2970,1351},{atom,{2970,17},none}]},
               {clause,
                   {2971,9},
                   [{var,{2971,9},'T1'}],
                   [],
                   [{debug_line,2971,1352},
                    {call,
                        {2971,15},
                        {atom,{2971,15},meet_types},
                        [{var,{2971,26},'Vs'},{var,{2971,30},'Ts'}]}]},
               {clause,
                   {2972,9},
                   [{var,{2972,9},'T'}],
                   [],
                   [{debug_line,2972,1353},
                    {call,
                        {2972,14},
                        {atom,{2972,14},meet_types},
                        [{var,{2972,25},'Vs'},
                         {block,0,
                             [{map,
                                  {2972,31},
                                  {var,{2972,29},'Ts'},
                                  [{map_field_exact,
                                       {2972,36},
                                       {var,{2972,34},'V'},
                                       {var,{2972,39},'T'}}]}]}]}]}]}]},
     {clause,
         {2974,1},
         [{nil,{2974,12}},{var,{2974,16},'Ts'}],
         [],
         [{debug_line,2975,1354},{var,{2975,5},'Ts'}]}]}.
{function,
    {2977,1},
    subtract_types,2,
    [{clause,
         {2977,1},
         [{var,{2977,1},'_'},{var,{2977,1},'_'}],
         [[{call,
               {2977,1},
               {remote,
                   {2977,1},
                   {atom,{2977,1},fake},
                   {atom,{2977,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2977,1355},{atom,{2977,1},ignore}]},
     {clause,
         {2977,1},
         [{cons,
              {2977,16},
              {tuple,
                  {2977,17},
                  [{match,
                       {2977,18},
                       {tuple,
                           {2977,18},
                           [{atom,{2977,18},b_literal},{var,{2977,18},'_'}]},
                       {var,{2977,31},'Lit'}},
                   {var,{2977,36},'T0'}]},
              {var,{2977,42},'Vs'}},
          {var,{2977,47},'Ts'}],
         [],
         [{debug_line,2978,1356},
          {match,
              {2978,5},
              {var,{2978,5},'T1'},
              {call,
                  {2978,10},
                  {atom,{2978,10},concrete_type},
                  [{var,{2978,24},'Lit'},{var,{2978,29},'Ts'}]}},
          {debug_line,2979,1357},
          {'case',
              {2979,5},
              {call,
                  {2979,10},
                  {remote,
                      {2979,20},
                      {atom,{2979,10},beam_types},
                      {atom,{2979,21},subtract}},
                  [{var,{2979,30},'T0'},{var,{2979,34},'T1'}]},
              [{clause,
                   {2980,9},
                   [{atom,{2980,9},none}],
                   [],
                   [{debug_line,2980,1358},{atom,{2980,17},none}]},
               {clause,
                   {2981,9},
                   [{var,{2981,9},'_'}],
                   [],
                   [{debug_line,2981,1359},
                    {call,
                        {2981,14},
                        {atom,{2981,14},subtract_types},
                        [{var,{2981,29},'Vs'},{var,{2981,33},'Ts'}]}]}]}]},
     {clause,
         {2983,1},
         [{cons,
              {2983,16},
              {tuple,
                  {2983,17},
                  [{match,
                       {2983,18},
                       {tuple,
                           {2983,18},
                           [{atom,{2983,18},b_var},{var,{2983,18},'_'}]},
                       {var,{2983,27},'V'}},
                   {var,{2983,30},'T0'}]},
              {var,{2983,34},'Vs'}},
          {var,{2983,39},'Ts'}],
         [],
         [{debug_line,2984,1360},
          {match,
              {2984,5},
              {var,{2984,5},'T1'},
              {call,
                  {2984,10},
                  {atom,{2984,10},concrete_type},
                  [{var,{2984,24},'V'},{var,{2984,27},'Ts'}]}},
          {debug_line,2985,1361},
          {'case',
              {2985,5},
              {call,
                  {2985,10},
                  {remote,
                      {2985,20},
                      {atom,{2985,10},beam_types},
                      {atom,{2985,21},subtract}},
                  [{var,{2985,30},'T1'},{var,{2985,34},'T0'}]},
              [{clause,
                   {2986,9},
                   [{atom,{2986,9},none}],
                   [],
                   [{debug_line,2986,1362},{atom,{2986,17},none}]},
               {clause,
                   {2987,9},
                   [{var,{2987,9},'T1'}],
                   [],
                   [{debug_line,2987,1363},
                    {call,
                        {2987,15},
                        {atom,{2987,15},subtract_types},
                        [{var,{2987,30},'Vs'},{var,{2987,34},'Ts'}]}]},
               {clause,
                   {2988,9},
                   [{var,{2988,9},'T'}],
                   [],
                   [{debug_line,2988,1364},
                    {call,
                        {2988,14},
                        {atom,{2988,14},subtract_types},
                        [{var,{2988,29},'Vs'},
                         {block,0,
                             [{map,
                                  {2988,35},
                                  {var,{2988,33},'Ts'},
                                  [{map_field_exact,
                                       {2988,39},
                                       {var,{2988,37},'V'},
                                       {var,{2988,42},'T'}}]}]}]}]}]}]},
     {clause,
         {2990,1},
         [{nil,{2990,16}},{var,{2990,20},'Ts'}],
         [],
         [{debug_line,2991,1365},{var,{2991,5},'Ts'}]}]}.
{function,
    {2993,1},
    parallel_join,2,
    [{clause,
         {2993,1},
         [{var,{2993,1},'_'},{var,{2993,1},'_'}],
         [[{call,
               {2993,1},
               {remote,
                   {2993,1},
                   {atom,{2993,1},fake},
                   {atom,{2993,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2993,1366},{atom,{2993,1},ignore}]},
     {clause,
         {2993,1},
         [{var,{2993,15},'As'},{var,{2993,19},'Bs'}],
         [],
         [{debug_line,2994,1367},
          {lc,{2994,5},
              {block,0,
                  [{call,
                       {2994,6},
                       {remote,
                           {2994,16},
                           {atom,{2994,6},beam_types},
                           {atom,{2994,17},join}},
                       [{var,{2994,22},'A'},{var,{2994,25},'B'}]}]},
              [{block,0,[{atom,{2994,33},true}]},
               {block,0,[{atom,{2994,33},true}]},
               {zip,
                   {2994,33},
                   [{generate,
                        {2994,33},
                        {var,{2994,31},'A'},
                        {var,{2994,36},'As'}},
                    {generate,
                        {2994,44},
                        {var,{2994,42},'B'},
                        {var,{2994,47},'Bs'}}]}]}]}]}.
{function,
    {2996,1},
    gcd,2,
    [{clause,
         {2996,1},
         [{var,{2996,1},'_'},{var,{2996,1},'_'}],
         [[{call,
               {2996,1},
               {remote,
                   {2996,1},
                   {atom,{2996,1},fake},
                   {atom,{2996,1},is_beam_bif_info}},
               []}]],
         [{debug_line,2996,1368},{atom,{2996,1},ignore}]},
     {clause,
         {2996,1},
         [{var,{2996,5},'A'},{var,{2996,8},'B'}],
         [],
         [{debug_line,2997,1369},
          {'case',
              {2997,5},
              {op,{2997,12},'rem',{var,{2997,10},'A'},{var,{2997,16},'B'}},
              [{clause,
                   {2998,9},
                   [{integer,{2998,9},0}],
                   [],
                   [{debug_line,2998,1370},{var,{2998,14},'B'}]},
               {clause,
                   {2999,9},
                   [{var,{2999,9},'X'}],
                   [],
                   [{debug_line,2999,1371},
                    {call,
                        {2999,14},
                        {atom,{2999,14},gcd},
                        [{var,{2999,18},'B'},{var,{2999,21},'X'}]}]}]}]}]}.
{function,
    {3006,1},
    init_metadata,3,
    [{clause,
         {3006,1},
         [{var,{3006,1},'_'},{var,{3006,1},'_'},{var,{3006,1},'_'}],
         [[{call,
               {3006,1},
               {remote,
                   {3006,1},
                   {atom,{3006,1},fake},
                   {atom,{3006,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3006,1372},{atom,{3006,1},ignore}]},
     {clause,
         {3006,1},
         [{var,{3006,15},'FuncId'},
          {var,{3006,23},'Linear'},
          {var,{3006,31},'Params'}],
         [],
         [{debug_line,3007,1373},
          {match,
              {3007,5},
              {tuple,
                  {3007,5},
                  [{var,{3007,6},'RetCounter'},{var,{3007,18},'UsedOnce0'}]},
              {call,
                  {3007,31},
                  {atom,{3007,31},init_metadata_1},
                  [{block,0,
                       [{call,
                            {3007,47},
                            {remote,
                                {3007,47},
                                {atom,{3007,47},lists},
                                {atom,{3007,47},reverse}},
                            [{var,{3007,55},'Linear'}]}]},
                   {integer,{3007,64},0},
                   {block,0,[{map,{3007,67},[]}]}]}},
          {debug_line,3008,1374},
          {match,
              {3008,5},
              {var,{3008,5},'UsedOnce'},
              {call,
                  {3008,16},
                  {remote,
                      {3008,20},
                      {atom,{3008,16},maps},
                      {atom,{3008,21},without}},
                  [{var,{3008,29},'Params'},{var,{3008,37},'UsedOnce0'}]}},
          {debug_line,3010,1375},
          {tuple,
              {3010,5},
              [{atom,{3010,5},metadata},
               {var,{3010,26},'FuncId'},
               {op,{3011,43},
                   '>=',
                   {var,{3011,32},'RetCounter'},
                   {integer,{3011,47},30}},
               {var,{3012,25},'Params'},
               {var,{3013,28},'UsedOnce'}]}]}]}.
{function,
    {3015,1},
    init_metadata_1,3,
    [{clause,
         {3015,1},
         [{var,{3015,1},'_'},{var,{3015,1},'_'},{var,{3015,1},'_'}],
         [[{call,
               {3015,1},
               {remote,
                   {3015,1},
                   {atom,{3015,1},fake},
                   {atom,{3015,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3015,1376},{atom,{3015,1},ignore}]},
     {clause,
         {3015,1},
         [{cons,
              {3015,17},
              {tuple,
                  {3015,18},
                  [{var,{3015,19},'L'},
                   {tuple,
                       {3015,21},
                       [{atom,{3015,21},b_blk},
                        {var,{3015,21},'_'},
                        {var,{3015,31},'Is'},
                        {var,{3015,39},'Last'}]}]},
              {var,{3015,48},'Bs'}},
          {var,{3015,53},'RetCounter0'},
          {var,{3015,66},'Uses0'}],
         [],
         [{debug_line,3018,1377},
          {match,
              {3018,5},
              {var,{3018,5},'RetCounter'},
              {'case',
                  {3018,18},
                  {var,{3018,23},'Last'},
                  [{clause,
                       {3019,22},
                       [{tuple,
                            {3019,22},
                            [{atom,{3019,22},b_ret},
                             {var,{3019,22},'_'},
                             {var,{3019,22},'_'}]}],
                       [],
                       [{debug_line,3019,1378},
                        {op,{3019,46},
                            '+',
                            {var,{3019,34},'RetCounter0'},
                            {integer,{3019,48},1}}]},
                   {clause,
                       {3020,22},
                       [{var,{3020,22},'_'}],
                       [],
                       [{debug_line,3020,1379},
                        {var,{3020,27},'RetCounter0'}]}]}},
          {debug_line,3029,1380},
          {match,
              {3029,5},
              {var,{3029,5},'Uses1'},
              {call,
                  {3029,13},
                  {atom,{3029,13},used_once_last_uses},
                  [{block,0,
                       [{call,
                            {3029,33},
                            {remote,
                                {3029,41},
                                {atom,{3029,33},beam_ssa},
                                {atom,{3029,42},used}},
                            [{var,{3029,47},'Last'}]}]},
                   {var,{3029,54},'L'},
                   {var,{3029,57},'Uses0'}]}},
          {debug_line,3030,1381},
          {match,
              {3030,5},
              {var,{3030,5},'Uses'},
              {call,
                  {3030,12},
                  {atom,{3030,12},used_once_2},
                  [{block,0,
                       [{call,
                            {3030,24},
                            {remote,
                                {3030,24},
                                {atom,{3030,24},lists},
                                {atom,{3030,24},reverse}},
                            [{var,{3030,32},'Is'}]}]},
                   {var,{3030,37},'L'},
                   {var,{3030,40},'Uses1'}]}},
          {debug_line,3031,1382},
          {call,
              {3031,5},
              {atom,{3031,5},init_metadata_1},
              [{var,{3031,21},'Bs'},
               {var,{3031,25},'RetCounter'},
               {var,{3031,37},'Uses'}]}]},
     {clause,
         {3032,1},
         [{nil,{3032,17}},{var,{3032,21},'RetCounter'},{var,{3032,33},'Uses'}],
         [],
         [{debug_line,3033,1383},
          {tuple,
              {3033,5},
              [{var,{3033,6},'RetCounter'},{var,{3033,18},'Uses'}]}]}]}.
{function,
    {3035,1},
    used_once_2,3,
    [{clause,
         {3035,1},
         [{var,{3035,1},'_'},{var,{3035,1},'_'},{var,{3035,1},'_'}],
         [[{call,
               {3035,1},
               {remote,
                   {3035,1},
                   {atom,{3035,1},fake},
                   {atom,{3035,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3035,1384},{atom,{3035,1},ignore}]},
     {clause,
         {3035,1},
         [{cons,
              {3035,13},
              {match,
                  {3035,14},
                  {tuple,
                      {3035,14},
                      [{atom,{3035,14},b_set},
                       {var,{3035,14},'_'},
                       {var,{3035,25},'Dst'},
                       {var,{3035,14},'_'},
                       {var,{3035,14},'_'}]},
                  {var,{3035,30},'I'}},
              {var,{3035,32},'Is'}},
          {var,{3035,37},'L'},
          {var,{3035,40},'Uses0'}],
         [],
         [{debug_line,3036,1385},
          {match,
              {3036,5},
              {var,{3036,5},'Uses'},
              {call,
                  {3036,12},
                  {atom,{3036,12},used_once_uses},
                  [{block,0,
                       [{call,
                            {3036,27},
                            {remote,
                                {3036,35},
                                {atom,{3036,27},beam_ssa},
                                {atom,{3036,36},used}},
                            [{var,{3036,41},'I'}]}]},
                   {var,{3036,45},'L'},
                   {var,{3036,48},'Uses0'}]}},
          {debug_line,3037,1386},
          {'case',
              {3037,5},
              {var,{3037,10},'Uses'},
              [{clause,
                   {3038,9},
                   [{map,
                        {3038,9},
                        [{map_field_exact,
                             {3038,14},
                             {var,{3038,11},'Dst'},
                             {var,{3038,16},'L'}}]}],
                   [],
                   [{debug_line,3039,1387},
                    {call,
                        {3039,13},
                        {atom,{3039,13},used_once_2},
                        [{var,{3039,25},'Is'},
                         {var,{3039,29},'L'},
                         {var,{3039,32},'Uses'}]}]},
               {clause,
                   {3040,9},
                   [{map,{3040,9},[]}],
                   [],
                   [{debug_line,3043,1388},
                    {call,
                        {3043,13},
                        {atom,{3043,13},used_once_2},
                        [{var,{3043,25},'Is'},
                         {var,{3043,29},'L'},
                         {block,0,
                             [{call,
                                  {3043,32},
                                  {remote,
                                      {3043,36},
                                      {atom,{3043,32},maps},
                                      {atom,{3043,37},remove}},
                                  [{var,{3043,44},'Dst'},
                                   {var,{3043,49},'Uses'}]}]}]}]}]}]},
     {clause,
         {3045,1},
         [{nil,{3045,13}},{var,{3045,17},'_'},{var,{3045,20},'Uses'}],
         [],
         [{debug_line,3045,1389},{var,{3045,29},'Uses'}]}]}.
{function,
 {3047,1},
 used_once_uses,3,
 [{clause,
   {3047,1},
   [{var,{3047,1},'_'},{var,{3047,1},'_'},{var,{3047,1},'_'}],
   [[{call,
      {3047,1},
      {remote,{3047,1},{atom,{3047,1},fake},{atom,{3047,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3047,1390},{atom,{3047,1},ignore}]},
  {clause,
   {3047,1},
   [{cons,{3047,16},{var,{3047,17},'V'},{var,{3047,19},'Vs'}},
    {var,{3047,24},'L'},
    {var,{3047,27},'Uses'}],
   [],
   [{debug_line,3048,1391},
    {'case',
     {3048,5},
     {var,{3048,10},'Uses'},
     [{clause,
       {3049,9},
       [{map,
         {3049,9},
         [{map_field_exact,
           {3049,12},
           {var,{3049,11},'V'},
           {atom,{3049,14},more_than_once}}]}],
       [],
       [{debug_line,3050,1392},
        {call,
         {3050,13},
         {atom,{3050,13},used_once_uses},
         [{var,{3050,28},'Vs'},{var,{3050,32},'L'},{var,{3050,35},'Uses'}]}]},
      {clause,
       {3051,9},
       [{map,{3051,9},[]}],
       [],
       [{debug_line,3054,1393},
        {call,
         {3054,13},
         {atom,{3054,13},used_once_uses},
         [{var,{3054,28},'Vs'},
          {var,{3054,32},'L'},
          {block,0,
           [{map,
             {3054,39},
             {var,{3054,35},'Uses'},
             [{map_field_assoc,
               {3054,42},
               {var,{3054,41},'V'},
               {atom,{3054,44},more_than_once}}]}]}]}]}]}]},
  {clause,
   {3056,1},
   [{nil,{3056,16}},{var,{3056,20},'_'},{var,{3056,23},'Uses'}],
   [],
   [{debug_line,3056,1394},{var,{3056,32},'Uses'}]}]}.
{function,
 {3058,1},
 used_once_last_uses,3,
 [{clause,
   {3058,1},
   [{var,{3058,1},'_'},{var,{3058,1},'_'},{var,{3058,1},'_'}],
   [[{call,
      {3058,1},
      {remote,{3058,1},{atom,{3058,1},fake},{atom,{3058,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3058,1395},{atom,{3058,1},ignore}]},
  {clause,
   {3058,1},
   [{cons,{3058,21},{var,{3058,22},'V'},{var,{3058,24},'Vs'}},
    {var,{3058,29},'L'},
    {var,{3058,32},'Uses'}],
   [],
   [{debug_line,3059,1396},
    {'case',
     {3059,5},
     {var,{3059,10},'Uses'},
     [{clause,
       {3060,9},
       [{map,
         {3060,9},
         [{map_field_exact,
           {3060,12},
           {var,{3060,11},'V'},
           {atom,{3060,14},more_than_once}}]}],
       [],
       [{debug_line,3062,1397},
        {call,
         {3062,13},
         {atom,{3062,13},used_once_last_uses},
         [{var,{3062,33},'Vs'},{var,{3062,37},'L'},{var,{3062,40},'Uses'}]}]},
      {clause,
       {3063,9},
       [{map,
         {3063,9},
         [{map_field_exact,
           {3063,12},
           {var,{3063,11},'V'},
           {var,{3063,14},'_'}}]}],
       [],
       [{debug_line,3065,1398},
        {call,
         {3065,13},
         {atom,{3065,13},used_once_last_uses},
         [{var,{3065,33},'Vs'},
          {var,{3065,37},'L'},
          {block,0,
           [{map,
             {3065,44},
             {var,{3065,40},'Uses'},
             [{map_field_exact,
               {3065,47},
               {var,{3065,46},'V'},
               {atom,{3065,49},more_than_once}}]}]}]}]},
      {clause,
       {3066,9},
       [{map,{3066,9},[]}],
       [],
       [{debug_line,3068,1399},
        {call,
         {3068,13},
         {atom,{3068,13},used_once_last_uses},
         [{var,{3068,33},'Vs'},
          {var,{3068,37},'L'},
          {block,0,
           [{map,
             {3068,44},
             {var,{3068,40},'Uses'},
             [{map_field_assoc,
               {3068,47},
               {var,{3068,46},'V'},
               {var,{3068,49},'L'}}]}]}]}]}]}]},
  {clause,
   {3070,1},
   [{nil,{3070,21}},{var,{3070,25},'_'},{var,{3070,28},'Uses'}],
   [],
   [{debug_line,3070,1400},{var,{3070,37},'Uses'}]}]}.
{attribute,
    {3083,2},
    record,
    {worklist,
        [{typed_record_field,
             {record_field,
                 {3084,11},
                 {atom,{3084,11},counter},
                 {integer,{3084,21},0}},
             {type,{3084,26},integer,[]}},
         {typed_record_field,
             {record_field,
                 {3085,11},
                 {atom,{3085,11},elements},
                 {call,
                     {3085,22},
                     {remote,
                         {3085,30},
                         {atom,{3085,22},gb_trees},
                         {atom,{3085,31},empty}},
                     []}},
             {remote_type,
                 {3085,42},
                 [{atom,{3085,42},gb_trees},
                  {atom,{3085,51},tree},
                  [{type,{3085,56},integer,[]},{type,{3085,67},term,[]}]]}},
         {typed_record_field,
             {record_field,
                 {3086,11},
                 {atom,{3086,11},indexes},
                 {map,{3086,21},[]}},
             {type,
                 {3086,28},
                 map,
                 [{type,
                      {3086,38},
                      map_field_assoc,
                      [{type,{3086,31},term,[]},
                       {type,{3086,41},integer,[]}]}]}}]}}.
{attribute,{3088,2},
           type,
           {worklist,{type,{3088,21},record,[{atom,{3088,22},worklist}]},[]}}.
{function,
    {3090,1},
    wl_new,0,
    [{clause,
         {3090,1},
         [],
         [[{call,
               {3090,1},
               {remote,
                   {3090,1},
                   {atom,{3090,1},fake},
                   {atom,{3090,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3090,1401},{atom,{3090,1},ignore}]},
     {clause,
         {3090,1},
         [],[],
         [{debug_line,3090,1402},
          {tuple,
              {3090,13},
              [{atom,{3090,13},worklist},
               {integer,{3090,13},0},
               {call,
                   {3090,13},
                   {remote,
                       {3090,13},
                       {atom,{3090,13},gb_trees},
                       {atom,{3090,13},empty}},
                   []},
               {map,{3090,13},[]}]}]}]}.
{function,
    {3094,1},
    wl_add,2,
    [{clause,
         {3094,1},
         [{var,{3094,1},'_'},{var,{3094,1},'_'}],
         [[{call,
               {3094,1},
               {remote,
                   {3094,1},
                   {atom,{3094,1},fake},
                   {atom,{3094,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3094,1403},{atom,{3094,1},ignore}]},
     {clause,
         {3094,1},
         [{var,{3094,8},'Element'},
          {tuple,
              {3094,17},
              [{atom,{3094,17},worklist},
               {var,{3094,35},'Counter'},
               {var,{3094,52},'Es'},
               {var,{3094,63},'Is'}]}],
         [],
         [{debug_line,3095,1404},
          {'case',
              {3095,5},
              {var,{3095,10},'Is'},
              [{clause,
                   {3096,9},
                   [{map,
                        {3096,9},
                        [{map_field_exact,
                             {3096,20},
                             {var,{3096,12},'Element'},
                             {var,{3096,23},'Index'}}]}],
                   [],
                   [{debug_line,3097,1405},
                    {call,
                        {3097,13},
                        {atom,{3097,13},wl_add_1},
                        [{var,{3097,22},'Element'},
                         {var,{3097,31},'Counter'},
                         {block,0,
                             [{call,
                                  {3097,40},
                                  {remote,
                                      {3097,48},
                                      {atom,{3097,40},gb_trees},
                                      {atom,{3097,49},delete}},
                                  [{var,{3097,56},'Index'},
                                   {var,{3097,63},'Es'}]}]},
                         {var,{3097,68},'Is'}]}]},
               {clause,
                   {3098,9},
                   [{map,{3098,9},[]}],
                   [],
                   [{debug_line,3099,1406},
                    {call,
                        {3099,13},
                        {atom,{3099,13},wl_add_1},
                        [{var,{3099,22},'Element'},
                         {var,{3099,31},'Counter'},
                         {var,{3099,40},'Es'},
                         {var,{3099,44},'Is'}]}]}]}]}]}.
{function,
    {3102,1},
    wl_add_1,4,
    [{clause,
         {3102,1},
         [{var,{3102,1},'_'},
          {var,{3102,1},'_'},
          {var,{3102,1},'_'},
          {var,{3102,1},'_'}],
         [[{call,
               {3102,1},
               {remote,
                   {3102,1},
                   {atom,{3102,1},fake},
                   {atom,{3102,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3102,1407},{atom,{3102,1},ignore}]},
     {clause,
         {3102,1},
         [{var,{3102,10},'Element'},
          {var,{3102,19},'Counter0'},
          {var,{3102,29},'Es0'},
          {var,{3102,34},'Is0'}],
         [],
         [{debug_line,3103,1408},
          {match,
              {3103,5},
              {var,{3103,5},'Counter'},
              {op,{3103,24},
                  '+',
                  {var,{3103,15},'Counter0'},
                  {integer,{3103,26},1}}},
          {debug_line,3104,1409},
          {match,
              {3104,5},
              {var,{3104,5},'Es'},
              {call,
                  {3104,10},
                  {remote,
                      {3104,18},
                      {atom,{3104,10},gb_trees},
                      {atom,{3104,19},insert}},
                  [{var,{3104,26},'Counter'},
                   {var,{3104,35},'Element'},
                   {var,{3104,44},'Es0'}]}},
          {debug_line,3105,1410},
          {match,
              {3105,5},
              {var,{3105,5},'Is'},
              {map,
                  {3105,13},
                  {var,{3105,10},'Is0'},
                  [{map_field_assoc,
                       {3105,24},
                       {var,{3105,16},'Element'},
                       {var,{3105,27},'Counter'}}]}},
          {debug_line,3106,1411},
          {tuple,
              {3106,5},
              [{atom,{3106,5},worklist},
               {var,{3106,23},'Counter'},
               {var,{3106,40},'Es'},
               {var,{3106,51},'Is'}]}]}]}.
{function,{3110,1},
          wl_changed,2,
          [{clause,{3110,1},
                   [{var,{3110,1},'_'},{var,{3110,1},'_'}],
                   [[{call,{3110,1},
                           {remote,{3110,1},
                                   {atom,{3110,1},fake},
                                   {atom,{3110,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3110,1412},{atom,{3110,1},ignore}]},
           {clause,{3110,1},
                   [{tuple,{3110,12},
                           [{atom,{3110,12},worklist},
                            {var,{3110,30},'Same'},
                            {var,{3110,12},'_'},
                            {var,{3110,12},'_'}]},
                    {tuple,{3110,37},
                           [{atom,{3110,37},worklist},
                            {var,{3110,55},'Same'},
                            {var,{3110,37},'_'},
                            {var,{3110,37},'_'}]}],
                   [],
                   [{debug_line,3110,1413},{atom,{3110,65},false}]},
           {clause,{3111,1},
                   [{tuple,{3111,12},
                           [{atom,{3111,12},worklist},
                            {var,{3111,12},'_'},
                            {var,{3111,12},'_'},
                            {var,{3111,12},'_'}]},
                    {tuple,{3111,25},
                           [{atom,{3111,25},worklist},
                            {var,{3111,25},'_'},
                            {var,{3111,25},'_'},
                            {var,{3111,25},'_'}]}],
                   [],
                   [{debug_line,3111,1414},{atom,{3111,41},true}]}]}.
{function,{3116,1},
          wl_defer_list,2,
          [{clause,{3116,1},
                   [{var,{3116,1},'_'},{var,{3116,1},'_'}],
                   [[{call,{3116,1},
                           {remote,{3116,1},
                                   {atom,{3116,1},fake},
                                   {atom,{3116,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,3116,1415},{atom,{3116,1},ignore}]},
           {clause,{3116,1},
                   [{var,{3116,15},'Elements'},
                    {tuple,{3116,25},
                           [{atom,{3116,25},worklist},
                            {var,{3116,43},'Counter'},
                            {var,{3116,60},'Es'},
                            {var,{3116,71},'Is'}]}],
                   [],
                   [{debug_line,3117,1416},
                    {call,{3117,5},
                          {atom,{3117,5},wl_defer_list_1},
                          [{var,{3117,21},'Elements'},
                           {var,{3117,31},'Counter'},
                           {var,{3117,40},'Es'},
                           {var,{3117,44},'Is'}]}]}]}.
{function,
    {3119,1},
    wl_defer_list_1,4,
    [{clause,
         {3119,1},
         [{var,{3119,1},'_'},
          {var,{3119,1},'_'},
          {var,{3119,1},'_'},
          {var,{3119,1},'_'}],
         [[{call,
               {3119,1},
               {remote,
                   {3119,1},
                   {atom,{3119,1},fake},
                   {atom,{3119,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3119,1417},{atom,{3119,1},ignore}]},
     {clause,
         {3119,1},
         [{cons,
              {3119,17},
              {var,{3119,18},'Element'},
              {var,{3119,28},'Elements'}},
          {var,{3119,39},'Counter0'},
          {var,{3119,49},'Es0'},
          {var,{3119,54},'Is0'}],
         [],
         [{debug_line,3120,1418},
          {'case',
              {3120,5},
              {var,{3120,10},'Is0'},
              [{clause,
                   {3121,9},
                   [{map,
                        {3121,9},
                        [{map_field_exact,
                             {3121,20},
                             {var,{3121,12},'Element'},
                             {var,{3121,23},'_'}}]}],
                   [],
                   [{debug_line,3122,1419},
                    {call,
                        {3122,13},
                        {atom,{3122,13},wl_defer_list_1},
                        [{var,{3122,29},'Elements'},
                         {var,{3122,39},'Counter0'},
                         {var,{3122,49},'Es0'},
                         {var,{3122,54},'Is0'}]}]},
               {clause,
                   {3123,9},
                   [{map,{3123,9},[]}],
                   [],
                   [{debug_line,3124,1420},
                    {match,
                        {3124,13},
                        {var,{3124,13},'Counter'},
                        {op,{3124,32},
                            '+',
                            {var,{3124,23},'Counter0'},
                            {integer,{3124,34},1}}},
                    {debug_line,3125,1421},
                    {match,
                        {3125,13},
                        {var,{3125,13},'Es'},
                        {call,
                            {3125,18},
                            {remote,
                                {3125,26},
                                {atom,{3125,18},gb_trees},
                                {atom,{3125,27},insert}},
                            [{block,0,
                                 [{op,{3125,34},
                                      '-',
                                      {var,{3125,35},'Counter'}}]},
                             {var,{3125,44},'Element'},
                             {var,{3125,53},'Es0'}]}},
                    {debug_line,3126,1422},
                    {match,
                        {3126,13},
                        {var,{3126,13},'Is'},
                        {map,
                            {3126,21},
                            {var,{3126,18},'Is0'},
                            [{map_field_assoc,
                                 {3126,32},
                                 {var,{3126,24},'Element'},
                                 {op,{3126,35},
                                     '-',
                                     {var,{3126,36},'Counter'}}}]}},
                    {debug_line,3127,1423},
                    {call,
                        {3127,13},
                        {atom,{3127,13},wl_defer_list_1},
                        [{var,{3127,29},'Elements'},
                         {var,{3127,39},'Counter'},
                         {var,{3127,48},'Es'},
                         {var,{3127,52},'Is'}]}]}]}]},
     {clause,
         {3129,1},
         [{nil,{3129,17}},
          {var,{3129,21},'Counter'},
          {var,{3129,30},'Es'},
          {var,{3129,34},'Is'}],
         [],
         [{debug_line,3130,1424},
          {tuple,
              {3130,5},
              [{atom,{3130,5},worklist},
               {var,{3130,23},'Counter'},
               {var,{3130,40},'Es'},
               {var,{3130,51},'Is'}]}]}]}.
{function,
    {3132,1},
    wl_next,1,
    [{clause,
         {3132,1},
         [{var,{3132,1},'_'}],
         [[{call,
               {3132,1},
               {remote,
                   {3132,1},
                   {atom,{3132,1},fake},
                   {atom,{3132,1},is_beam_bif_info}},
               []}]],
         [{debug_line,3132,1425},{atom,{3132,1},ignore}]},
     {clause,
         {3132,1},
         [{tuple,
              {3132,9},
              [{atom,{3132,9},worklist},
               {var,{3132,9},'_'},
               {var,{3132,9},'_'},
               {var,{3132,27},'Is'}]}],
         [[{op,{3132,40},'=:=',{var,{3132,37},'Is'},{map,{3132,44},[]}}]],
         [{debug_line,3133,1426},{atom,{3133,5},empty}]},
     {clause,
         {3134,1},
         [{tuple,
              {3134,9},
              [{atom,{3134,9},worklist},
               {var,{3134,9},'_'},
               {var,{3134,28},'Es'},
               {var,{3134,39},'Is'}]}],
         [[{op,{3134,52},'=/=',{var,{3134,49},'Is'},{map,{3134,56},[]}}]],
         [{debug_line,3135,1427},
          {match,
              {3135,5},
              {tuple,
                  {3135,5},
                  [{var,{3135,6},'_Key'},{var,{3135,12},'Element'}]},
              {call,
                  {3135,23},
                  {remote,
                      {3135,31},
                      {atom,{3135,23},gb_trees},
                      {atom,{3135,32},largest}},
                  [{var,{3135,40},'Es'}]}},
          {debug_line,3136,1428},
          {tuple,{3136,5},[{atom,{3136,6},ok},{var,{3136,10},'Element'}]}]}]}.
{function,
 {3139,1},
 wl_pop,2,
 [{clause,
   {3139,1},
   [{var,{3139,1},'_'},{var,{3139,1},'_'}],
   [[{call,
      {3139,1},
      {remote,{3139,1},{atom,{3139,1},fake},{atom,{3139,1},is_beam_bif_info}},
      []}]],
   [{debug_line,3139,1429},{atom,{3139,1},ignore}]},
  {clause,
   {3139,1},
   [{var,{3139,8},'Element'},
    {match,
     {3139,17},
     {tuple,
      {3139,17},
      [{atom,{3139,17},worklist},
       {var,{3139,35},'Counter0'},
       {var,{3139,53},'Es0'},
       {var,{3139,65},'Is0'}]},
     {var,{3139,70},'Wl'}}],
   [],
   [{debug_line,3140,1430},
    {match,
     {3140,5},
     {var,{3140,5},'Counter'},
     {op,{3140,24},'+',{var,{3140,15},'Counter0'},{integer,{3140,26},1}}},
    {debug_line,3141,1431},
    {match,
     {3141,5},
     {tuple,
      {3141,5},
      [{var,{3141,6},'_Key'},{var,{3141,12},'Element'},{var,{3141,21},'Es'}]},
     {call,
      {3141,27},
      {remote,
       {3141,35},
       {atom,{3141,27},gb_trees},
       {atom,{3141,36},take_largest}},
      [{var,{3141,49},'Es0'}]}},
    {debug_line,3142,1432},
    {match,
     {3142,5},
     {var,{3142,5},'Is'},
     {call,
      {3142,10},
      {remote,{3142,14},{atom,{3142,10},maps},{atom,{3142,15},remove}},
      [{var,{3142,22},'Element'},{var,{3142,31},'Is0'}]}},
    {debug_line,3143,1433},
    {block,
     {3143,5},
     [{match,{3143,5},{var,{3143,5},rec113},{var,{3143,5},'Wl'}},
      {'case',
       {3143,17},
       {var,{3143,5},rec113},
       [{clause,
         {3143,17},
         [{tuple,
           {3143,17},
           [{atom,{3143,17},worklist},
            {var,{3143,17},'_'},
            {var,{3143,17},'_'},
            {var,{3143,17},'_'}]}],
         [],
         [{call,
           {3143,17},
           {remote,
            {3143,17},
            {atom,{3143,17},erlang},
            {atom,{3143,17},setelement}},
           [{integer,{3143,17},2},
            {call,
             {3143,33},
             {remote,
              {3143,33},
              {atom,{3143,33},erlang},
              {atom,{3143,33},setelement}},
             [{integer,{3143,33},3},
              {call,
               {3143,45},
               {remote,
                {3143,45},
                {atom,{3143,45},erlang},
                {atom,{3143,45},setelement}},
               [{integer,{3143,45},4},
                {var,{3143,5},rec113},
                {var,{3143,53},'Is'}]},
              {var,{3143,42},'Es'}]},
            {var,{3143,25},'Counter'}]}]},
        {clause,
         [{generated,true},{location,{3143,17}}],
         [{var,[{generated,true},{location,{3143,17}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{3143,17}}],
           {remote,
            [{generated,true},{location,{3143,17}}],
            {atom,[{generated,true},{location,{3143,17}}],erlang},
            {atom,[{generated,true},{location,{3143,17}}],error}},
           [{tuple,
             [{generated,true},{location,{3143,17}}],
             [{atom,[{generated,true},{location,{3143,17}}],badrecord},
              {var,{3143,5},rec113}]}]}]}]}]}]}]}.
{eof,{3144,1}}.
