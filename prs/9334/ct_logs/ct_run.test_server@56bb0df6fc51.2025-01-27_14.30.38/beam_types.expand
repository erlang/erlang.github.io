{attribute,{1,1},file,{"beam_types.erl",1}}.
{attribute,{21,2},module,beam_types}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{26,1},file,{"beam_types.erl",26}}.
{attribute,{27,2},
           import,
           {lists,[{foldl,3},{mapfoldl,3},{reverse,1},{usort,1}]}}.
{attribute,{29,2},export,[{meet,1},{meet,2},{join,1},{join,2},{subtract,2}]}.
{attribute,{31,2},
           export,
           [{is_boolean_type,1},
            {is_numerical_type,1},
            {get_bs_matchable_unit,1},
            {is_bs_matchable_type,1},
            {get_singleton_value,1},
            {is_singleton_type,1},
            {normalize,1}]}.
{attribute,{39,2},
           export,
           [{get_tuple_element,2},{set_tuple_element,3},{update_tuple,2}]}.
{attribute,{43,2},export,[{make_type_from_value,1}]}.
{attribute,{45,2},
           export,
           [{make_atom,1},
            {make_boolean,0},
            {make_cons,2},
            {make_float,1},
            {make_integer,1},
            {make_integer,2}]}.
{attribute,{52,2},export,[{limit_depth,1}]}.
{attribute,{54,2},export,[{decode_ext,1},{encode_ext,1},{convert_ext,2}]}.
{attribute,{58,2},export,[{verified_type,1}]}.
{attribute,{72,2},
           spec,
           {{meet,1},
            [{type,{72,11},
                   'fun',
                   [{type,{72,11},
                          product,
                          [{type,{72,12},list,[{user_type,{72,13},type,[]}]}]},
                    {user_type,{72,25},type,[]}]}]}}.
{function,
    {74,1},
    meet,1,
    [{clause,
         {74,1},
         [{var,{74,1},'_'}],
         [[{call,
               {74,1},
               {remote,
                   {74,1},
                   {atom,{74,1},fake},
                   {atom,{74,1},is_beam_bif_info}},
               []}]],
         [{debug_line,74,1},{atom,{74,1},ignore}]},
     {clause,
         {74,1},
         [{cons,
              {74,6},
              {var,{74,7},'T1'},
              {cons,{74,11},{var,{74,11},'T2'},{var,{74,16},'Ts'}}}],
         [],
         [{debug_line,75,2},
          {call,
              {75,5},
              {atom,{75,5},meet},
              [{block,0,
                   [{cons,
                        {75,10},
                        {call,
                            {75,11},
                            {atom,{75,11},meet},
                            [{var,{75,16},'T1'},{var,{75,20},'T2'}]},
                        {var,{75,26},'Ts'}}]}]}]},
     {clause,
         {76,1},
         [{cons,{76,6},{var,{76,7},'T'},{nil,{76,8}}}],
         [],
         [{debug_line,76,3},{var,{76,14},'T'}]}]}.
{attribute,{92,2},
           spec,
           {{meet,2},
            [{type,{92,11},
                   'fun',
                   [{type,{92,11},
                          product,
                          [{user_type,{92,12},type,[]},
                           {user_type,{92,20},type,[]}]},
                    {user_type,{92,31},type,[]}]}]}}.
{function,{94,1},
          meet,2,
          [{clause,{94,1},
                   [{var,{94,1},'_'},{var,{94,1},'_'}],
                   [[{call,{94,1},
                           {remote,{94,1},
                                   {atom,{94,1},fake},
                                   {atom,{94,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,94,4},{atom,{94,1},ignore}]},
           {clause,{94,1},
                   [{var,{94,6},'T'},{var,{94,9},'T'}],
                   [],
                   [{debug_line,95,5},
                    {call,{95,5},
                          {atom,{95,5},verified_type},
                          [{var,{95,19},'T'}]}]},
           {clause,{96,1},
                   [{atom,{96,6},any},{var,{96,11},'T'}],
                   [],
                   [{debug_line,97,6},
                    {call,{97,5},
                          {atom,{97,5},verified_type},
                          [{var,{97,19},'T'}]}]},
           {clause,{98,1},
                   [{var,{98,6},'T'},{atom,{98,9},any}],
                   [],
                   [{debug_line,99,7},
                    {call,{99,5},
                          {atom,{99,5},verified_type},
                          [{var,{99,19},'T'}]}]},
           {clause,{100,1},
                   [{match,{100,6},
                           {tuple,{100,6},
                                  [{atom,{100,6},t_union},
                                   {var,{100,6},'_'},
                                   {var,{100,6},'_'},
                                   {var,{100,6},'_'},
                                   {var,{100,6},'_'},
                                   {var,{100,6},'_'}]},
                           {var,{100,17},'A'}},
                    {var,{100,20},'B'}],
                   [],
                   [{debug_line,101,8},
                    {call,{101,5},
                          {atom,{101,5},meet_unions},
                          [{var,{101,17},'A'},{var,{101,20},'B'}]}]},
           {clause,{102,1},
                   [{var,{102,6},'A'},
                    {match,{102,9},
                           {tuple,{102,9},
                                  [{atom,{102,9},t_union},
                                   {var,{102,9},'_'},
                                   {var,{102,9},'_'},
                                   {var,{102,9},'_'},
                                   {var,{102,9},'_'},
                                   {var,{102,9},'_'}]},
                           {var,{102,20},'B'}}],
                   [],
                   [{debug_line,103,9},
                    {call,{103,5},
                          {atom,{103,5},meet_unions},
                          [{var,{103,17},'B'},{var,{103,20},'A'}]}]},
           {clause,{104,1},
                   [{var,{104,6},'A'},{var,{104,9},'B'}],
                   [],
                   [{debug_line,105,10},
                    {call,{105,5},
                          {atom,{105,5},glb},
                          [{var,{105,9},'A'},{var,{105,12},'B'}]}]}]}.
{function,
    {107,1},
    meet_unions,2,
    [{clause,
         {107,1},
         [{var,{107,1},'_'},{var,{107,1},'_'}],
         [[{call,
               {107,1},
               {remote,
                   {107,1},
                   {atom,{107,1},fake},
                   {atom,{107,1},is_beam_bif_info}},
               []}]],
         [{debug_line,107,11},{atom,{107,1},ignore}]},
     {clause,
         {107,1},
         [{tuple,
              {107,13},
              [{atom,{107,13},t_union},
               {var,{107,27},'AtomA'},
               {var,{107,38},'ListA'},
               {var,{107,51},'NumberA'},
               {var,{108,32},'TSetA'},
               {var,{108,44},'OtherA'}]},
          {tuple,
              {109,13},
              [{atom,{109,13},t_union},
               {var,{109,27},'AtomB'},
               {var,{109,38},'ListB'},
               {var,{109,51},'NumberB'},
               {var,{110,32},'TSetB'},
               {var,{110,44},'OtherB'}]}],
         [],
         [{debug_line,111,12},
          {match,
              {111,5},
              {var,{111,5},'Union'},
              {tuple,
                  {111,13},
                  [{atom,{111,13},t_union},
                   {call,
                       {111,27},
                       {atom,{111,27},glb},
                       [{var,{111,31},'AtomA'},{var,{111,38},'AtomB'}]},
                   {call,
                       {112,27},
                       {atom,{112,27},glb},
                       [{var,{112,31},'ListA'},{var,{112,38},'ListB'}]},
                   {call,
                       {113,29},
                       {atom,{113,29},glb},
                       [{var,{113,33},'NumberA'},{var,{113,42},'NumberB'}]},
                   {call,
                       {114,32},
                       {atom,{114,32},meet_tuple_sets},
                       [{var,{114,48},'TSetA'},{var,{114,55},'TSetB'}]},
                   {call,
                       {115,28},
                       {atom,{115,28},glb},
                       [{var,{115,32},'OtherA'},{var,{115,40},'OtherB'}]}]}},
          {debug_line,116,13},
          {call,
              {116,5},
              {atom,{116,5},shrink_union},
              [{var,{116,18},'Union'}]}]},
     {clause,
         {117,1},
         [{tuple,
              {117,13},
              [{atom,{117,13},t_union},
               {var,{117,27},'AtomA'},
               {var,{117,13},'_'},
               {var,{117,13},'_'},
               {var,{117,13},'_'},
               {var,{117,13},'_'}]},
          {match,
              {117,35},
              {tuple,{117,35},[{atom,{117,35},t_atom},{var,{117,35},'_'}]},
              {var,{117,45},'B'}}],
         [],
         [{debug_line,118,14},
          {'case',
              {118,5},
              {call,
                  {118,10},
                  {atom,{118,10},glb},
                  [{var,{118,14},'AtomA'},{var,{118,21},'B'}]},
              [{clause,
                   {119,9},
                   [{atom,{119,9},none}],
                   [],
                   [{debug_line,119,15},{atom,{119,17},none}]},
               {clause,
                   {120,9},
                   [{var,{120,9},'Atom'}],
                   [],
                   [{debug_line,120,16},{var,{120,17},'Atom'}]}]}]},
     {clause,
         {122,1},
         [{tuple,
              {122,13},
              [{atom,{122,13},t_union},
               {var,{122,13},'_'},
               {var,{122,13},'_'},
               {var,{122,29},'NumberA'},
               {var,{122,13},'_'},
               {var,{122,13},'_'}]},
          {var,{122,39},'B'}],
         [[{op,{122,63},
               'orelse',
               {call,
                   [{generated,true},{location,{122,48}}],
                   {remote,
                       [{generated,true},{location,{122,48}}],
                       {atom,[{generated,true},{location,{122,48}}],erlang},
                       {atom,
                           [{generated,true},{location,{122,48}}],
                           is_record}},
                   [{var,{122,63},'B'},
                    {atom,{122,48},t_number},
                    {integer,{122,48},2}]},
               {op,{122,63},
                   'orelse',
                   {call,
                       [{generated,true},{location,{122,63}}],
                       {remote,
                           [{generated,true},{location,{122,63}}],
                           {atom,
                               [{generated,true},{location,{122,63}}],
                               erlang},
                           {atom,
                               [{generated,true},{location,{122,63}}],
                               is_record}},
                       [{var,{122,63},'B'},
                        {atom,{122,63},t_float},
                        {integer,{122,63},2}]},
                   {call,
                       [{generated,true},{location,{122,63}}],
                       {remote,
                           [{generated,true},{location,{122,63}}],
                           {atom,
                               [{generated,true},{location,{122,63}}],
                               erlang},
                           {atom,
                               [{generated,true},{location,{122,63}}],
                               is_record}},
                       [{var,{122,63},'B'},
                        {atom,{122,63},t_integer},
                        {integer,{122,63},2}]}}}]],
         [{debug_line,123,17},
          {'case',
              {123,5},
              {call,
                  {123,10},
                  {atom,{123,10},glb},
                  [{var,{123,14},'NumberA'},{var,{123,23},'B'}]},
              [{clause,
                   {124,9},
                   [{atom,{124,9},none}],
                   [],
                   [{debug_line,124,18},{atom,{124,17},none}]},
               {clause,
                   {125,9},
                   [{var,{125,9},'Number'}],
                   [],
                   [{debug_line,125,19},{var,{125,19},'Number'}]}]}]},
     {clause,
         {127,1},
         [{tuple,
              {127,13},
              [{atom,{127,13},t_union},
               {var,{127,13},'_'},
               {var,{127,27},'ListA'},
               {var,{127,13},'_'},
               {var,{127,13},'_'},
               {var,{127,13},'_'}]},
          {var,{127,35},'B'}],
         [[{op,{127,57},
               'orelse',
               {call,
                   [{generated,true},{location,{127,44}}],
                   {remote,
                       [{generated,true},{location,{127,44}}],
                       {atom,[{generated,true},{location,{127,44}}],erlang},
                       {atom,
                           [{generated,true},{location,{127,44}}],
                           is_record}},
                   [{var,{127,57},'B'},
                    {atom,{127,44},t_list},
                    {integer,{127,44},3}]},
               {op,{127,57},
                   'orelse',
                   {call,
                       [{generated,true},{location,{127,57}}],
                       {remote,
                           [{generated,true},{location,{127,57}}],
                           {atom,
                               [{generated,true},{location,{127,57}}],
                               erlang},
                           {atom,
                               [{generated,true},{location,{127,57}}],
                               is_record}},
                       [{var,{127,57},'B'},
                        {atom,{127,57},t_cons},
                        {integer,{127,57},3}]},
                   {op,{127,57},
                       '=:=',
                       {var,{127,57},'B'},
                       {atom,{127,57},nil}}}}]],
         [{debug_line,128,20},
          {'case',
              {128,5},
              {call,
                  {128,10},
                  {atom,{128,10},glb},
                  [{var,{128,14},'ListA'},{var,{128,21},'B'}]},
              [{clause,
                   {129,9},
                   [{atom,{129,9},none}],
                   [],
                   [{debug_line,129,21},{atom,{129,17},none}]},
               {clause,
                   {130,9},
                   [{var,{130,9},'List'}],
                   [],
                   [{debug_line,130,22},{var,{130,17},'List'}]}]}]},
     {clause,
         {132,1},
         [{tuple,
              {132,13},
              [{atom,{132,13},t_union},
               {var,{132,13},'_'},
               {var,{132,13},'_'},
               {var,{132,13},'_'},
               {var,{132,32},'Tuples'},
               {var,{132,13},'_'}]},
          {match,
              {132,41},
              {tuple,
                  {132,41},
                  [{atom,{132,41},t_tuple},
                   {var,{132,41},'_'},
                   {var,{132,41},'_'},
                   {var,{132,41},'_'}]},
              {var,{132,52},'B'}}],
         [],
         [{debug_line,133,23},
          {match,
              {133,5},
              {var,{133,5},'Set'},
              {call,
                  {133,11},
                  {atom,{133,11},meet_tuple_sets},
                  [{var,{133,27},'Tuples'},
                   {block,0,
                       [{call,
                            {133,35},
                            {atom,{133,35},new_tuple_set},
                            [{var,{133,49},'B'}]}]}]}},
          {debug_line,134,24},
          {call,
              {134,5},
              {atom,{134,5},shrink_union},
              [{block,0,
                   [{tuple,
                        {134,18},
                        [{atom,{134,18},t_union},
                         {atom,{134,18},none},
                         {atom,{134,18},none},
                         {atom,{134,18},none},
                         {var,{134,37},'Set'},
                         {atom,{134,18},none}]}]}]}]},
     {clause,
         {135,1},
         [{tuple,
              {135,13},
              [{atom,{135,13},t_union},
               {var,{135,13},'_'},
               {var,{135,13},'_'},
               {var,{135,13},'_'},
               {var,{135,13},'_'},
               {var,{135,28},'OtherA'}]},
          {var,{135,37},'OtherB'}],
         [],
         [{debug_line,136,25},
          {'case',
              {136,5},
              {call,
                  {136,10},
                  {atom,{136,10},glb},
                  [{var,{136,14},'OtherA'},{var,{136,22},'OtherB'}]},
              [{clause,
                   {137,9},
                   [{atom,{137,9},none}],
                   [],
                   [{debug_line,137,26},{atom,{137,17},none}]},
               {clause,
                   {138,9},
                   [{var,{138,9},'Other'}],
                   [],
                   [{debug_line,138,27},{var,{138,18},'Other'}]}]}]}]}.
{function,
    {141,1},
    meet_tuple_sets,2,
    [{clause,
         {141,1},
         [{var,{141,1},'_'},{var,{141,1},'_'}],
         [[{call,
               {141,1},
               {remote,
                   {141,1},
                   {atom,{141,1},fake},
                   {atom,{141,1},is_beam_bif_info}},
               []}]],
         [{debug_line,141,28},{atom,{141,1},ignore}]},
     {clause,
         {141,1},
         [{atom,{141,17},none},{var,{141,23},'_'}],
         [],
         [{debug_line,142,29},{atom,{142,5},none}]},
     {clause,
         {143,1},
         [{var,{143,17},'_'},{atom,{143,20},none}],
         [],
         [{debug_line,144,30},{atom,{144,5},none}]},
     {clause,
         {145,1},
         [{match,
              {145,17},
              {tuple,
                  {145,17},
                  [{atom,{145,17},t_tuple},
                   {var,{145,17},'_'},
                   {var,{145,17},'_'},
                   {var,{145,17},'_'}]},
              {var,{145,28},'A'}},
          {match,
              {145,31},
              {tuple,
                  {145,31},
                  [{atom,{145,31},t_tuple},
                   {var,{145,31},'_'},
                   {var,{145,31},'_'},
                   {var,{145,31},'_'}]},
              {var,{145,42},'B'}}],
         [],
         [{debug_line,146,31},
          {call,
              {146,5},
              {atom,{146,5},new_tuple_set},
              [{block,0,
                   [{call,
                        {146,19},
                        {atom,{146,19},glb},
                        [{var,{146,23},'A'},{var,{146,26},'B'}]}]}]}]},
     {clause,
         {147,1},
         [{match,
              {147,17},
              {tuple,
                  {147,17},
                  [{atom,{147,17},t_tuple},
                   {var,{147,17},'_'},
                   {var,{147,17},'_'},
                   {var,{147,17},'_'}]},
              {var,{147,28},'Tuple'}},
          {var,{147,35},'Records'}],
         [],
         [{debug_line,148,32},
          {call,
              {148,5},
              {atom,{148,5},mts_tuple},
              [{var,{148,15},'Records'},
               {var,{148,24},'Tuple'},
               {nil,{148,31}}]}]},
     {clause,
         {149,1},
         [{var,{149,17},'Records'},
          {match,
              {149,26},
              {tuple,
                  {149,26},
                  [{atom,{149,26},t_tuple},
                   {var,{149,26},'_'},
                   {var,{149,26},'_'},
                   {var,{149,26},'_'}]},
              {var,{149,37},'Tuple'}}],
         [],
         [{debug_line,150,33},
          {call,
              {150,5},
              {atom,{150,5},meet_tuple_sets},
              [{var,{150,21},'Tuple'},{var,{150,28},'Records'}]}]},
     {clause,
         {151,1},
         [{var,{151,17},'RecordsA'},{var,{151,27},'RecordsB'}],
         [],
         [{debug_line,152,34},
          {call,
              {152,5},
              {atom,{152,5},mts_records},
              [{var,{152,17},'RecordsA'},{var,{152,27},'RecordsB'}]}]}]}.
{function,
    {154,1},
    mts_tuple,3,
    [{clause,
         {154,1},
         [{var,{154,1},'_'},{var,{154,1},'_'},{var,{154,1},'_'}],
         [[{call,
               {154,1},
               {remote,
                   {154,1},
                   {atom,{154,1},fake},
                   {atom,{154,1},is_beam_bif_info}},
               []}]],
         [{debug_line,154,35},{atom,{154,1},ignore}]},
     {clause,
         {154,1},
         [{cons,
              {154,11},
              {tuple,{154,12},[{var,{154,13},'Key'},{var,{154,18},'Type'}]},
              {var,{154,26},'Records'}},
          {var,{154,36},'Tuple'},
          {var,{154,43},'Acc'}],
         [],
         [{debug_line,155,36},
          {'case',
              {155,5},
              {call,
                  {155,10},
                  {atom,{155,10},glb},
                  [{var,{155,14},'Type'},{var,{155,20},'Tuple'}]},
              [{clause,
                   {156,9},
                   [{atom,{156,9},none}],
                   [],
                   [{debug_line,156,37},
                    {call,
                        {156,17},
                        {atom,{156,17},mts_tuple},
                        [{var,{156,27},'Records'},
                         {var,{156,36},'Tuple'},
                         {var,{156,43},'Acc'}]}]},
               {clause,
                   {157,9},
                   [{var,{157,9},'T'}],
                   [],
                   [{debug_line,157,38},
                    {call,
                        {157,14},
                        {atom,{157,14},mts_tuple},
                        [{var,{157,24},'Records'},
                         {var,{157,33},'Tuple'},
                         {block,0,
                             [{cons,
                                  {157,40},
                                  {tuple,
                                      {157,41},
                                      [{var,{157,42},'Key'},
                                       {var,{157,47},'T'}]},
                                  {var,{157,52},'Acc'}}]}]}]}]}]},
     {clause,
         {159,1},
         [{nil,{159,11}},
          {var,{159,15},'_Tuple'},
          {match,
              {159,23},
              {cons,{159,23},{var,{159,24},'_'},{var,{159,26},'_'}},
              {var,{159,29},'Acc'}}],
         [],
         [{debug_line,160,39},
          {call,
              {160,5},
              {remote,{160,5},{atom,{160,5},lists},{atom,{160,5},reverse}},
              [{var,{160,13},'Acc'}]}]},
     {clause,
         {161,1},
         [{nil,{161,11}},{var,{161,15},'_Tuple'},{nil,{161,23}}],
         [],
         [{debug_line,162,40},{atom,{162,5},none}]}]}.
{function,{164,1},
          mts_records,2,
          [{clause,{164,1},
                   [{var,{164,1},'_'},{var,{164,1},'_'}],
                   [[{call,{164,1},
                           {remote,{164,1},
                                   {atom,{164,1},fake},
                                   {atom,{164,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,164,41},{atom,{164,1},ignore}]},
           {clause,{164,1},
                   [{var,{164,13},'RecordsA'},{var,{164,23},'RecordsB'}],
                   [],
                   [{debug_line,165,42},
                    {call,{165,5},
                          {atom,{165,5},mts_records},
                          [{var,{165,17},'RecordsA'},
                           {var,{165,27},'RecordsB'},
                           {nil,{165,37}}]}]}]}.
{function,
    {167,1},
    mts_records,3,
    [{clause,
         {167,1},
         [{var,{167,1},'_'},{var,{167,1},'_'},{var,{167,1},'_'}],
         [[{call,
               {167,1},
               {remote,
                   {167,1},
                   {atom,{167,1},fake},
                   {atom,{167,1},is_beam_bif_info}},
               []}]],
         [{debug_line,167,43},{atom,{167,1},ignore}]},
     {clause,
         {167,1},
         [{cons,
              {167,13},
              {tuple,{167,14},[{var,{167,15},'Key'},{var,{167,20},'A'}]},
              {var,{167,25},'RsA'}},
          {cons,
              {167,31},
              {tuple,{167,32},[{var,{167,33},'Key'},{var,{167,38},'B'}]},
              {var,{167,43},'RsB'}},
          {var,{167,49},'Acc'}],
         [],
         [{debug_line,168,44},
          {'case',
              {168,5},
              {call,
                  {168,10},
                  {atom,{168,10},glb},
                  [{var,{168,14},'A'},{var,{168,17},'B'}]},
              [{clause,
                   {169,9},
                   [{atom,{169,9},none}],
                   [],
                   [{debug_line,169,45},
                    {call,
                        {169,17},
                        {atom,{169,17},mts_records},
                        [{var,{169,29},'RsA'},
                         {var,{169,34},'RsB'},
                         {var,{169,39},'Acc'}]}]},
               {clause,
                   {170,9},
                   [{var,{170,9},'T'}],
                   [],
                   [{debug_line,170,46},
                    {call,
                        {170,14},
                        {atom,{170,14},mts_records},
                        [{var,{170,26},'RsA'},
                         {var,{170,31},'RsB'},
                         {block,0,
                             [{cons,
                                  {170,36},
                                  {tuple,
                                      {170,37},
                                      [{var,{170,38},'Key'},
                                       {var,{170,43},'T'}]},
                                  {var,{170,48},'Acc'}}]}]}]}]}]},
     {clause,
         {172,1},
         [{match,
              {172,13},
              {cons,
                  {172,13},
                  {tuple,{172,14},[{var,{172,15},'KeyA'},{var,{172,21},'_'}]},
                  {var,{172,26},'_'}},
              {var,{172,29},'RsA'}},
          {match,
              {172,34},
              {cons,
                  {172,34},
                  {tuple,{172,35},[{var,{172,36},'KeyB'},{var,{172,42},'_'}]},
                  {var,{172,47},'_'}},
              {var,{172,50},'RsB'}},
          {var,{172,55},'Acc'}],
         [],
         [{debug_line,175,47},
          {'case',
              {175,5},
              {call,
                  {175,10},
                  {atom,{175,10},total_compare},
                  [{var,{175,24},'KeyA'},
                   {var,{175,30},'KeyB'},
                   {block,0,
                       [{'fun',
                            {175,36},
                            {function,
                                {atom,{175,40},erlang},
                                {atom,{175,47},'<'},
                                {integer,{175,51},2}}}]}]},
              [{clause,
                   {176,9},
                   [{atom,{176,9},true}],
                   [],
                   [{debug_line,177,48},
                    {call,
                        {177,13},
                        {atom,{177,13},mts_records},
                        [{block,0,
                             [{call,
                                  {177,25},
                                  {remote,
                                      {177,25},
                                      {atom,{177,25},erlang},
                                      {atom,{177,25},tl}},
                                  [{var,{177,28},'RsA'}]}]},
                         {var,{177,34},'RsB'},
                         {var,{177,39},'Acc'}]}]},
               {clause,
                   {178,9},
                   [{atom,{178,9},false}],
                   [],
                   [{debug_line,179,49},
                    {match,
                        {179,13},
                        {atom,{179,13},true},
                        {op,{179,25},
                            '=/=',
                            {var,{179,20},'KeyA'},
                            {var,{179,29},'KeyB'}}},
                    {debug_line,180,50},
                    {call,
                        {180,13},
                        {atom,{180,13},mts_records},
                        [{var,{180,25},'RsA'},
                         {block,0,
                             [{call,
                                  {180,30},
                                  {remote,
                                      {180,30},
                                      {atom,{180,30},erlang},
                                      {atom,{180,30},tl}},
                                  [{var,{180,33},'RsB'}]}]},
                         {var,{180,39},'Acc'}]}]}]}]},
     {clause,
         {182,1},
         [{var,{182,13},'_RsA'},
          {nil,{182,19}},
          {match,
              {182,23},
              {cons,{182,23},{var,{182,24},'_'},{var,{182,26},'_'}},
              {var,{182,29},'Acc'}}],
         [],
         [{debug_line,183,51},
          {call,
              {183,5},
              {remote,{183,5},{atom,{183,5},lists},{atom,{183,5},reverse}},
              [{var,{183,13},'Acc'}]}]},
     {clause,
         {184,1},
         [{nil,{184,13}},
          {var,{184,17},'_RsB'},
          {match,
              {184,23},
              {cons,{184,23},{var,{184,24},'_'},{var,{184,26},'_'}},
              {var,{184,29},'Acc'}}],
         [],
         [{debug_line,185,52},
          {call,
              {185,5},
              {remote,{185,5},{atom,{185,5},lists},{atom,{185,5},reverse}},
              [{var,{185,13},'Acc'}]}]},
     {clause,
         {186,1},
         [{var,{186,13},'_RsA'},{var,{186,19},'_RsB'},{nil,{186,25}}],
         [],
         [{debug_line,187,53},{atom,{187,5},none}]}]}.
{attribute,{191,2},
           spec,
           {{join,1},
            [{type,{191,11},
                   'fun',
                   [{type,{191,11},
                          product,
                          [{type,{191,12},
                                 list,
                                 [{user_type,{191,13},type,[]}]}]},
                    {user_type,{191,25},type,[]}]}]}}.
{function,{193,1},
          join,1,
          [{clause,{193,1},
                   [{var,{193,1},'_'}],
                   [[{call,{193,1},
                           {remote,{193,1},
                                   {atom,{193,1},fake},
                                   {atom,{193,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,193,54},{atom,{193,1},ignore}]},
           {clause,{193,1},
                   [{cons,{193,6},{var,{193,7},'T'},{var,{193,11},'Ts'}}],
                   [],
                   [{debug_line,194,55},
                    {call,{194,5},
                          {atom,{194,5},join_list},
                          [{var,{194,15},'Ts'},{var,{194,19},'T'}]}]}]}.
{function,
    {196,1},
    join_list,2,
    [{clause,
         {196,1},
         [{var,{196,1},'_'},{var,{196,1},'_'}],
         [[{call,
               {196,1},
               {remote,
                   {196,1},
                   {atom,{196,1},fake},
                   {atom,{196,1},is_beam_bif_info}},
               []}]],
         [{debug_line,196,56},{atom,{196,1},ignore}]},
     {clause,
         {196,1},
         [{cons,{196,11},{var,{196,12},'T'},{var,{196,16},'Ts'}},
          {var,{196,21},'T'}],
         [],
         [{debug_line,197,57},
          {call,
              {197,5},
              {atom,{197,5},join_list},
              [{var,{197,15},'Ts'},{var,{197,19},'T'}]}]},
     {clause,
         {198,1},
         [{cons,{198,11},{var,{198,12},'T1'},{var,{198,17},'Ts'}},
          {var,{198,22},'T'}],
         [],
         [{debug_line,199,58},
          {call,
              {199,5},
              {atom,{199,5},join_list},
              [{var,{199,15},'Ts'},
               {block,0,
                   [{call,
                        {199,19},
                        {atom,{199,19},join},
                        [{var,{199,24},'T1'},{var,{199,28},'T'}]}]}]}]},
     {clause,
         {200,1},
         [{nil,{200,11}},{var,{200,15},'T'}],
         [],
         [{debug_line,200,59},{var,{200,21},'T'}]}]}.
{attribute,{208,2},
           spec,
           {{join,2},
            [{type,{208,11},
                   'fun',
                   [{type,{208,11},
                          product,
                          [{user_type,{208,12},type,[]},
                           {user_type,{208,20},type,[]}]},
                    {user_type,{208,31},type,[]}]}]}}.
{function,
 {210,1},
 join,2,
 [{clause,
   {210,1},
   [{var,{210,1},'_'},{var,{210,1},'_'}],
   [[{call,
      {210,1},
      {remote,{210,1},{atom,{210,1},fake},{atom,{210,1},is_beam_bif_info}},
      []}]],
   [{debug_line,210,60},{atom,{210,1},ignore}]},
  {clause,
   {210,1},
   [{var,{210,6},'T'},{var,{210,9},'T'}],
   [],
   [{debug_line,210,61},{var,{210,15},'T'}]},
  {clause,
   {211,1},
   [{var,{211,6},'_T'},{atom,{211,10},any}],
   [],
   [{debug_line,211,62},{atom,{211,18},any}]},
  {clause,
   {212,1},
   [{atom,{212,6},any},{var,{212,11},'_T'}],
   [],
   [{debug_line,212,63},{atom,{212,18},any}]},
  {clause,
   {213,1},
   [{var,{213,6},'T'},{atom,{213,9},none}],
   [],
   [{debug_line,213,64},{var,{213,18},'T'}]},
  {clause,
   {214,1},
   [{atom,{214,6},none},{var,{214,12},'T'}],
   [],
   [{debug_line,214,65},{var,{214,18},'T'}]},
  {clause,
   {216,1},
   [{match,
     {216,6},
     {tuple,
      {216,6},
      [{atom,{216,6},t_union},
       {var,{216,6},'_'},
       {var,{216,6},'_'},
       {var,{216,6},'_'},
       {var,{216,6},'_'},
       {var,{216,6},'_'}]},
     {var,{216,17},'A'}},
    {var,{216,20},'B'}],
   [],
   [{debug_line,217,66},
    {call,
     {217,5},
     {atom,{217,5},join_unions},
     [{var,{217,17},'A'},{var,{217,20},'B'}]}]},
  {clause,
   {218,1},
   [{var,{218,6},'A'},
    {match,
     {218,9},
     {tuple,
      {218,9},
      [{atom,{218,9},t_union},
       {var,{218,9},'_'},
       {var,{218,9},'_'},
       {var,{218,9},'_'},
       {var,{218,9},'_'},
       {var,{218,9},'_'}]},
     {var,{218,20},'B'}}],
   [],
   [{debug_line,219,67},
    {call,
     {219,5},
     {atom,{219,5},join_unions},
     [{var,{219,17},'B'},{var,{219,20},'A'}]}]},
  {clause,
   {222,1},
   [{match,
     {222,6},
     {tuple,{222,6},[{atom,{222,6},t_atom},{var,{222,6},'_'}]},
     {var,{222,16},'A'}},
    {match,
     {222,19},
     {tuple,{222,19},[{atom,{222,19},t_atom},{var,{222,19},'_'}]},
     {var,{222,29},'B'}}],
   [],
   [{debug_line,223,68},
    {call,{223,5},{atom,{223,5},lub},[{var,{223,9},'A'},{var,{223,12},'B'}]}]},
  {clause,
   {224,1},
   [{match,
     {224,6},
     {tuple,{224,6},[{atom,{224,6},t_atom},{var,{224,6},'_'}]},
     {var,{224,16},'A'}},
    {var,{224,19},'B'}],
   [[{op,
      {224,41},
      'orelse',
      {call,
       [{generated,true},{location,{224,28}}],
       {remote,
        [{generated,true},{location,{224,28}}],
        {atom,[{generated,true},{location,{224,28}}],erlang},
        {atom,[{generated,true},{location,{224,28}}],is_record}},
       [{var,{224,41},'B'},{atom,{224,28},t_list},{integer,{224,28},3}]},
      {op,
       {224,41},
       'orelse',
       {call,
        [{generated,true},{location,{224,41}}],
        {remote,
         [{generated,true},{location,{224,41}}],
         {atom,[{generated,true},{location,{224,41}}],erlang},
         {atom,[{generated,true},{location,{224,41}}],is_record}},
        [{var,{224,41},'B'},{atom,{224,41},t_cons},{integer,{224,41},3}]},
       {op,{224,41},'=:=',{var,{224,41},'B'},{atom,{224,41},nil}}}}]],
   [{debug_line,225,69},
    {tuple,
     {225,5},
     [{atom,{225,5},t_union},
      {var,{225,19},'A'},
      {var,{225,26},'B'},
      {atom,{225,5},none},
      {atom,{225,5},none},
      {atom,{225,5},none}]}]},
  {clause,
   {226,1},
   [{match,
     {226,6},
     {tuple,{226,6},[{atom,{226,6},t_atom},{var,{226,6},'_'}]},
     {var,{226,16},'A'}},
    {var,{226,19},'B'}],
   [[{op,
      {226,43},
      'orelse',
      {call,
       [{generated,true},{location,{226,28}}],
       {remote,
        [{generated,true},{location,{226,28}}],
        {atom,[{generated,true},{location,{226,28}}],erlang},
        {atom,[{generated,true},{location,{226,28}}],is_record}},
       [{var,{226,43},'B'},{atom,{226,28},t_number},{integer,{226,28},2}]},
      {op,
       {226,43},
       'orelse',
       {call,
        [{generated,true},{location,{226,43}}],
        {remote,
         [{generated,true},{location,{226,43}}],
         {atom,[{generated,true},{location,{226,43}}],erlang},
         {atom,[{generated,true},{location,{226,43}}],is_record}},
        [{var,{226,43},'B'},{atom,{226,43},t_float},{integer,{226,43},2}]},
       {call,
        [{generated,true},{location,{226,43}}],
        {remote,
         [{generated,true},{location,{226,43}}],
         {atom,[{generated,true},{location,{226,43}}],erlang},
         {atom,[{generated,true},{location,{226,43}}],is_record}},
        [{var,{226,43},'B'},
         {atom,{226,43},t_integer},
         {integer,{226,43},2}]}}}]],
   [{debug_line,227,70},
    {tuple,
     {227,5},
     [{atom,{227,5},t_union},
      {var,{227,19},'A'},
      {atom,{227,5},none},
      {var,{227,28},'B'},
      {atom,{227,5},none},
      {atom,{227,5},none}]}]},
  {clause,
   {228,1},
   [{match,
     {228,6},
     {tuple,{228,6},[{atom,{228,6},t_atom},{var,{228,6},'_'}]},
     {var,{228,16},'A'}},
    {match,
     {228,19},
     {tuple,
      {228,19},
      [{atom,{228,19},t_tuple},
       {var,{228,19},'_'},
       {var,{228,19},'_'},
       {var,{228,19},'_'}]},
     {var,{228,30},'B'}}],
   [],
   [{debug_line,229,71},
    {tuple,
     {229,5},
     [{atom,{229,5},t_union},
      {var,{229,19},'A'},
      {atom,{229,5},none},
      {atom,{229,5},none},
      {call,{229,31},{atom,{229,31},new_tuple_set},[{var,{229,45},'B'}]},
      {atom,{229,5},none}]}]},
  {clause,
   {230,1},
   [{match,
     {230,6},
     {tuple,{230,6},[{atom,{230,6},t_atom},{var,{230,6},'_'}]},
     {var,{230,16},'A'}},
    {var,{230,19},'B'}],
   [],
   [{debug_line,231,72},
    {tuple,
     {231,5},
     [{atom,{231,5},t_union},
      {var,{231,19},'A'},
      {atom,{231,5},none},
      {atom,{231,5},none},
      {atom,{231,5},none},
      {var,{231,27},'B'}]}]},
  {clause,
   {232,1},
   [{var,{232,6},'A'},
    {match,
     {232,9},
     {tuple,{232,9},[{atom,{232,9},t_atom},{var,{232,9},'_'}]},
     {var,{232,19},'B'}}],
   [],
   [{debug_line,233,73},
    {call,
     {233,5},
     {atom,{233,5},join},
     [{var,{233,10},'B'},{var,{233,13},'A'}]}]},
  {clause,
   {235,1},
   [{var,{235,6},'A'},{var,{235,9},'B'}],
   [[{op,
      {235,31},
      'orelse',
      {call,
       [{generated,true},{location,{235,18}}],
       {remote,
        [{generated,true},{location,{235,18}}],
        {atom,[{generated,true},{location,{235,18}}],erlang},
        {atom,[{generated,true},{location,{235,18}}],is_record}},
       [{var,{235,31},'A'},{atom,{235,18},t_list},{integer,{235,18},3}]},
      {op,
       {235,31},
       'orelse',
       {call,
        [{generated,true},{location,{235,31}}],
        {remote,
         [{generated,true},{location,{235,31}}],
         {atom,[{generated,true},{location,{235,31}}],erlang},
         {atom,[{generated,true},{location,{235,31}}],is_record}},
        [{var,{235,31},'A'},{atom,{235,31},t_cons},{integer,{235,31},3}]},
       {op,{235,31},'=:=',{var,{235,31},'A'},{atom,{235,31},nil}}}},
     {op,
      {235,49},
      'orelse',
      {call,
       [{generated,true},{location,{235,36}}],
       {remote,
        [{generated,true},{location,{235,36}}],
        {atom,[{generated,true},{location,{235,36}}],erlang},
        {atom,[{generated,true},{location,{235,36}}],is_record}},
       [{var,{235,49},'B'},{atom,{235,36},t_list},{integer,{235,36},3}]},
      {op,
       {235,49},
       'orelse',
       {call,
        [{generated,true},{location,{235,49}}],
        {remote,
         [{generated,true},{location,{235,49}}],
         {atom,[{generated,true},{location,{235,49}}],erlang},
         {atom,[{generated,true},{location,{235,49}}],is_record}},
        [{var,{235,49},'B'},{atom,{235,49},t_cons},{integer,{235,49},3}]},
       {op,{235,49},'=:=',{var,{235,49},'B'},{atom,{235,49},nil}}}}]],
   [{debug_line,236,74},
    {call,{236,5},{atom,{236,5},lub},[{var,{236,9},'A'},{var,{236,12},'B'}]}]},
  {clause,
   {237,1},
   [{var,{237,6},'A'},{var,{237,9},'B'}],
   [[{op,
      {237,31},
      'orelse',
      {call,
       [{generated,true},{location,{237,18}}],
       {remote,
        [{generated,true},{location,{237,18}}],
        {atom,[{generated,true},{location,{237,18}}],erlang},
        {atom,[{generated,true},{location,{237,18}}],is_record}},
       [{var,{237,31},'A'},{atom,{237,18},t_list},{integer,{237,18},3}]},
      {op,
       {237,31},
       'orelse',
       {call,
        [{generated,true},{location,{237,31}}],
        {remote,
         [{generated,true},{location,{237,31}}],
         {atom,[{generated,true},{location,{237,31}}],erlang},
         {atom,[{generated,true},{location,{237,31}}],is_record}},
        [{var,{237,31},'A'},{atom,{237,31},t_cons},{integer,{237,31},3}]},
       {op,{237,31},'=:=',{var,{237,31},'A'},{atom,{237,31},nil}}}},
     {op,
      {237,51},
      'orelse',
      {call,
       [{generated,true},{location,{237,36}}],
       {remote,
        [{generated,true},{location,{237,36}}],
        {atom,[{generated,true},{location,{237,36}}],erlang},
        {atom,[{generated,true},{location,{237,36}}],is_record}},
       [{var,{237,51},'B'},{atom,{237,36},t_number},{integer,{237,36},2}]},
      {op,
       {237,51},
       'orelse',
       {call,
        [{generated,true},{location,{237,51}}],
        {remote,
         [{generated,true},{location,{237,51}}],
         {atom,[{generated,true},{location,{237,51}}],erlang},
         {atom,[{generated,true},{location,{237,51}}],is_record}},
        [{var,{237,51},'B'},{atom,{237,51},t_float},{integer,{237,51},2}]},
       {call,
        [{generated,true},{location,{237,51}}],
        {remote,
         [{generated,true},{location,{237,51}}],
         {atom,[{generated,true},{location,{237,51}}],erlang},
         {atom,[{generated,true},{location,{237,51}}],is_record}},
        [{var,{237,51},'B'},
         {atom,{237,51},t_integer},
         {integer,{237,51},2}]}}}]],
   [{debug_line,238,75},
    {tuple,
     {238,5},
     [{atom,{238,5},t_union},
      {atom,{238,5},none},
      {var,{238,19},'A'},
      {var,{238,28},'B'},
      {atom,{238,5},none},
      {atom,{238,5},none}]}]},
  {clause,
   {239,1},
   [{var,{239,6},'A'},
    {match,
     {239,9},
     {tuple,
      {239,9},
      [{atom,{239,9},t_tuple},
       {var,{239,9},'_'},
       {var,{239,9},'_'},
       {var,{239,9},'_'}]},
     {var,{239,20},'B'}}],
   [[{op,
      {239,42},
      'orelse',
      {call,
       [{generated,true},{location,{239,29}}],
       {remote,
        [{generated,true},{location,{239,29}}],
        {atom,[{generated,true},{location,{239,29}}],erlang},
        {atom,[{generated,true},{location,{239,29}}],is_record}},
       [{var,{239,42},'A'},{atom,{239,29},t_list},{integer,{239,29},3}]},
      {op,
       {239,42},
       'orelse',
       {call,
        [{generated,true},{location,{239,42}}],
        {remote,
         [{generated,true},{location,{239,42}}],
         {atom,[{generated,true},{location,{239,42}}],erlang},
         {atom,[{generated,true},{location,{239,42}}],is_record}},
        [{var,{239,42},'A'},{atom,{239,42},t_cons},{integer,{239,42},3}]},
       {op,{239,42},'=:=',{var,{239,42},'A'},{atom,{239,42},nil}}}}]],
   [{debug_line,240,76},
    {tuple,
     {240,5},
     [{atom,{240,5},t_union},
      {atom,{240,5},none},
      {var,{240,19},'A'},
      {atom,{240,5},none},
      {call,{240,31},{atom,{240,31},new_tuple_set},[{var,{240,45},'B'}]},
      {atom,{240,5},none}]}]},
  {clause,
   {241,1},
   [{var,{241,6},'A'},{var,{241,9},'B'}],
   [[{op,
      {241,31},
      'orelse',
      {call,
       [{generated,true},{location,{241,18}}],
       {remote,
        [{generated,true},{location,{241,18}}],
        {atom,[{generated,true},{location,{241,18}}],erlang},
        {atom,[{generated,true},{location,{241,18}}],is_record}},
       [{var,{241,31},'A'},{atom,{241,18},t_list},{integer,{241,18},3}]},
      {op,
       {241,31},
       'orelse',
       {call,
        [{generated,true},{location,{241,31}}],
        {remote,
         [{generated,true},{location,{241,31}}],
         {atom,[{generated,true},{location,{241,31}}],erlang},
         {atom,[{generated,true},{location,{241,31}}],is_record}},
        [{var,{241,31},'A'},{atom,{241,31},t_cons},{integer,{241,31},3}]},
       {op,{241,31},'=:=',{var,{241,31},'A'},{atom,{241,31},nil}}}}]],
   [{debug_line,242,77},
    {tuple,
     {242,5},
     [{atom,{242,5},t_union},
      {atom,{242,5},none},
      {var,{242,19},'A'},
      {atom,{242,5},none},
      {atom,{242,5},none},
      {var,{242,27},'B'}]}]},
  {clause,
   {243,1},
   [{var,{243,6},'A'},{var,{243,9},'B'}],
   [[{op,
      {243,31},
      'orelse',
      {call,
       [{generated,true},{location,{243,18}}],
       {remote,
        [{generated,true},{location,{243,18}}],
        {atom,[{generated,true},{location,{243,18}}],erlang},
        {atom,[{generated,true},{location,{243,18}}],is_record}},
       [{var,{243,31},'B'},{atom,{243,18},t_list},{integer,{243,18},3}]},
      {op,
       {243,31},
       'orelse',
       {call,
        [{generated,true},{location,{243,31}}],
        {remote,
         [{generated,true},{location,{243,31}}],
         {atom,[{generated,true},{location,{243,31}}],erlang},
         {atom,[{generated,true},{location,{243,31}}],is_record}},
        [{var,{243,31},'B'},{atom,{243,31},t_cons},{integer,{243,31},3}]},
       {op,{243,31},'=:=',{var,{243,31},'B'},{atom,{243,31},nil}}}}]],
   [{debug_line,244,78},
    {call,
     {244,5},
     {atom,{244,5},join},
     [{var,{244,10},'B'},{var,{244,13},'A'}]}]},
  {clause,
   {246,1},
   [{var,{246,6},'A'},{var,{246,9},'B'}],
   [[{op,
      {246,33},
      'orelse',
      {call,
       [{generated,true},{location,{246,18}}],
       {remote,
        [{generated,true},{location,{246,18}}],
        {atom,[{generated,true},{location,{246,18}}],erlang},
        {atom,[{generated,true},{location,{246,18}}],is_record}},
       [{var,{246,33},'A'},{atom,{246,18},t_number},{integer,{246,18},2}]},
      {op,
       {246,33},
       'orelse',
       {call,
        [{generated,true},{location,{246,33}}],
        {remote,
         [{generated,true},{location,{246,33}}],
         {atom,[{generated,true},{location,{246,33}}],erlang},
         {atom,[{generated,true},{location,{246,33}}],is_record}},
        [{var,{246,33},'A'},{atom,{246,33},t_float},{integer,{246,33},2}]},
       {call,
        [{generated,true},{location,{246,33}}],
        {remote,
         [{generated,true},{location,{246,33}}],
         {atom,[{generated,true},{location,{246,33}}],erlang},
         {atom,[{generated,true},{location,{246,33}}],is_record}},
        [{var,{246,33},'A'},{atom,{246,33},t_integer},{integer,{246,33},2}]}}},
     {op,
      {246,53},
      'orelse',
      {call,
       [{generated,true},{location,{246,38}}],
       {remote,
        [{generated,true},{location,{246,38}}],
        {atom,[{generated,true},{location,{246,38}}],erlang},
        {atom,[{generated,true},{location,{246,38}}],is_record}},
       [{var,{246,53},'B'},{atom,{246,38},t_number},{integer,{246,38},2}]},
      {op,
       {246,53},
       'orelse',
       {call,
        [{generated,true},{location,{246,53}}],
        {remote,
         [{generated,true},{location,{246,53}}],
         {atom,[{generated,true},{location,{246,53}}],erlang},
         {atom,[{generated,true},{location,{246,53}}],is_record}},
        [{var,{246,53},'B'},{atom,{246,53},t_float},{integer,{246,53},2}]},
       {call,
        [{generated,true},{location,{246,53}}],
        {remote,
         [{generated,true},{location,{246,53}}],
         {atom,[{generated,true},{location,{246,53}}],erlang},
         {atom,[{generated,true},{location,{246,53}}],is_record}},
        [{var,{246,53},'B'},
         {atom,{246,53},t_integer},
         {integer,{246,53},2}]}}}]],
   [{debug_line,247,79},
    {call,{247,5},{atom,{247,5},lub},[{var,{247,9},'A'},{var,{247,12},'B'}]}]},
  {clause,
   {248,1},
   [{var,{248,6},'A'},
    {match,
     {248,9},
     {tuple,
      {248,9},
      [{atom,{248,9},t_tuple},
       {var,{248,9},'_'},
       {var,{248,9},'_'},
       {var,{248,9},'_'}]},
     {var,{248,20},'B'}}],
   [[{op,
      {248,44},
      'orelse',
      {call,
       [{generated,true},{location,{248,29}}],
       {remote,
        [{generated,true},{location,{248,29}}],
        {atom,[{generated,true},{location,{248,29}}],erlang},
        {atom,[{generated,true},{location,{248,29}}],is_record}},
       [{var,{248,44},'A'},{atom,{248,29},t_number},{integer,{248,29},2}]},
      {op,
       {248,44},
       'orelse',
       {call,
        [{generated,true},{location,{248,44}}],
        {remote,
         [{generated,true},{location,{248,44}}],
         {atom,[{generated,true},{location,{248,44}}],erlang},
         {atom,[{generated,true},{location,{248,44}}],is_record}},
        [{var,{248,44},'A'},{atom,{248,44},t_float},{integer,{248,44},2}]},
       {call,
        [{generated,true},{location,{248,44}}],
        {remote,
         [{generated,true},{location,{248,44}}],
         {atom,[{generated,true},{location,{248,44}}],erlang},
         {atom,[{generated,true},{location,{248,44}}],is_record}},
        [{var,{248,44},'A'},
         {atom,{248,44},t_integer},
         {integer,{248,44},2}]}}}]],
   [{debug_line,249,80},
    {tuple,
     {249,5},
     [{atom,{249,5},t_union},
      {atom,{249,5},none},
      {atom,{249,5},none},
      {var,{249,21},'A'},
      {call,{249,33},{atom,{249,33},new_tuple_set},[{var,{249,47},'B'}]},
      {atom,{249,5},none}]}]},
  {clause,
   {250,1},
   [{var,{250,6},'A'},{var,{250,9},'B'}],
   [[{op,
      {250,33},
      'orelse',
      {call,
       [{generated,true},{location,{250,18}}],
       {remote,
        [{generated,true},{location,{250,18}}],
        {atom,[{generated,true},{location,{250,18}}],erlang},
        {atom,[{generated,true},{location,{250,18}}],is_record}},
       [{var,{250,33},'A'},{atom,{250,18},t_number},{integer,{250,18},2}]},
      {op,
       {250,33},
       'orelse',
       {call,
        [{generated,true},{location,{250,33}}],
        {remote,
         [{generated,true},{location,{250,33}}],
         {atom,[{generated,true},{location,{250,33}}],erlang},
         {atom,[{generated,true},{location,{250,33}}],is_record}},
        [{var,{250,33},'A'},{atom,{250,33},t_float},{integer,{250,33},2}]},
       {call,
        [{generated,true},{location,{250,33}}],
        {remote,
         [{generated,true},{location,{250,33}}],
         {atom,[{generated,true},{location,{250,33}}],erlang},
         {atom,[{generated,true},{location,{250,33}}],is_record}},
        [{var,{250,33},'A'},
         {atom,{250,33},t_integer},
         {integer,{250,33},2}]}}}]],
   [{debug_line,251,81},
    {tuple,
     {251,5},
     [{atom,{251,5},t_union},
      {atom,{251,5},none},
      {atom,{251,5},none},
      {var,{251,21},'A'},
      {atom,{251,5},none},
      {var,{251,29},'B'}]}]},
  {clause,
   {252,1},
   [{var,{252,6},'A'},{var,{252,9},'B'}],
   [[{op,
      {252,33},
      'orelse',
      {call,
       [{generated,true},{location,{252,18}}],
       {remote,
        [{generated,true},{location,{252,18}}],
        {atom,[{generated,true},{location,{252,18}}],erlang},
        {atom,[{generated,true},{location,{252,18}}],is_record}},
       [{var,{252,33},'B'},{atom,{252,18},t_number},{integer,{252,18},2}]},
      {op,
       {252,33},
       'orelse',
       {call,
        [{generated,true},{location,{252,33}}],
        {remote,
         [{generated,true},{location,{252,33}}],
         {atom,[{generated,true},{location,{252,33}}],erlang},
         {atom,[{generated,true},{location,{252,33}}],is_record}},
        [{var,{252,33},'B'},{atom,{252,33},t_float},{integer,{252,33},2}]},
       {call,
        [{generated,true},{location,{252,33}}],
        {remote,
         [{generated,true},{location,{252,33}}],
         {atom,[{generated,true},{location,{252,33}}],erlang},
         {atom,[{generated,true},{location,{252,33}}],is_record}},
        [{var,{252,33},'B'},
         {atom,{252,33},t_integer},
         {integer,{252,33},2}]}}}]],
   [{debug_line,253,82},
    {call,
     {253,5},
     {atom,{253,5},join},
     [{var,{253,10},'B'},{var,{253,13},'A'}]}]},
  {clause,
   {255,1},
   [{match,
     {255,6},
     {tuple,
      {255,6},
      [{atom,{255,6},t_tuple},
       {var,{255,6},'_'},
       {var,{255,6},'_'},
       {var,{255,6},'_'}]},
     {var,{255,17},'A'}},
    {match,
     {255,20},
     {tuple,
      {255,20},
      [{atom,{255,20},t_tuple},
       {var,{255,20},'_'},
       {var,{255,20},'_'},
       {var,{255,20},'_'}]},
     {var,{255,31},'B'}}],
   [],
   [{debug_line,256,83},
    {'case',
     {256,5},
     {tuple,
      {256,10},
      [{call,{256,11},{atom,{256,11},record_key},[{var,{256,22},'A'}]},
       {call,{256,26},{atom,{256,26},record_key},[{var,{256,37},'B'}]}]},
     [{clause,
       {257,9},
       [{tuple,{257,9},[{var,{257,10},'Same'},{var,{257,16},'Same'}]}],
       [],
       [{debug_line,258,84},
        {call,
         {258,13},
         {atom,{258,13},lub},
         [{var,{258,17},'A'},{var,{258,20},'B'}]}]},
      {clause,
       {259,9},
       [{tuple,{259,9},[{atom,{259,10},none},{var,{259,16},'_Key'}]}],
       [],
       [{debug_line,260,85},
        {call,
         {260,13},
         {atom,{260,13},lub},
         [{var,{260,17},'A'},{var,{260,20},'B'}]}]},
      {clause,
       {261,9},
       [{tuple,{261,9},[{var,{261,10},'_Key'},{atom,{261,16},none}]}],
       [],
       [{debug_line,262,86},
        {call,
         {262,13},
         {atom,{262,13},lub},
         [{var,{262,17},'A'},{var,{262,20},'B'}]}]},
      {clause,
       {263,9},
       [{tuple,{263,9},[{var,{263,10},'KeyA'},{var,{263,16},'KeyB'}]}],
       [],
       [{debug_line,266,87},
        {'case',
         {266,13},
         {call,
          {266,18},
          {atom,{266,18},total_compare},
          [{var,{266,32},'KeyA'},
           {var,{266,38},'KeyB'},
           {block,0,
            [{'fun',
              {266,44},
              {function,
               {atom,{266,48},erlang},
               {atom,{266,55},'<'},
               {integer,{266,59},2}}}]}]},
         [{clause,
           {267,17},
           [{atom,{267,17},true}],
           [],
           [{debug_line,268,88},
            {tuple,
             {268,21},
             [{atom,{268,21},t_union},
              {atom,{268,21},none},
              {atom,{268,21},none},
              {atom,{268,21},none},
              {cons,
               {268,40},
               {tuple,{268,41},[{var,{268,42},'KeyA'},{var,{268,48},'A'}]},
               {cons,
                {268,52},
                {tuple,{268,52},[{var,{268,53},'KeyB'},{var,{268,59},'B'}]},
                {nil,{268,61}}}},
              {atom,{268,21},none}]}]},
          {clause,
           {269,17},
           [{atom,{269,17},false}],
           [],
           [{debug_line,270,89},
            {tuple,
             {270,21},
             [{atom,{270,21},t_union},
              {atom,{270,21},none},
              {atom,{270,21},none},
              {atom,{270,21},none},
              {cons,
               {270,40},
               {tuple,{270,41},[{var,{270,42},'KeyB'},{var,{270,48},'B'}]},
               {cons,
                {270,52},
                {tuple,{270,52},[{var,{270,53},'KeyA'},{var,{270,59},'A'}]},
                {nil,{270,61}}}},
              {atom,{270,21},none}]}]}]}]}]}]},
  {clause,
   {273,1},
   [{match,
     {273,6},
     {tuple,
      {273,6},
      [{atom,{273,6},t_tuple},
       {var,{273,6},'_'},
       {var,{273,6},'_'},
       {var,{273,6},'_'}]},
     {var,{273,17},'A'}},
    {var,{273,20},'B'}],
   [],
   [{debug_line,275,90},
    {tuple,
     {275,5},
     [{atom,{275,5},t_union},
      {atom,{275,5},none},
      {atom,{275,5},none},
      {atom,{275,5},none},
      {call,{275,24},{atom,{275,24},new_tuple_set},[{var,{275,38},'A'}]},
      {var,{275,47},'B'}]}]},
  {clause,
   {276,1},
   [{var,{276,6},'A'},
    {match,
     {276,9},
     {tuple,
      {276,9},
      [{atom,{276,9},t_tuple},
       {var,{276,9},'_'},
       {var,{276,9},'_'},
       {var,{276,9},'_'}]},
     {var,{276,20},'B'}}],
   [],
   [{debug_line,277,91},
    {call,
     {277,5},
     {atom,{277,5},join},
     [{var,{277,10},'B'},{var,{277,13},'A'}]}]},
  {clause,
   {279,1},
   [{var,{279,6},'A'},{var,{279,9},'B'}],
   [],
   [{debug_line,280,92},
    {call,
     {280,5},
     {atom,{280,5},lub},
     [{var,{280,9},'A'},{var,{280,12},'B'}]}]}]}.
{function,
 {282,1},
 join_unions,2,
 [{clause,
   {282,1},
   [{var,{282,1},'_'},{var,{282,1},'_'}],
   [[{call,
      {282,1},
      {remote,{282,1},{atom,{282,1},fake},{atom,{282,1},is_beam_bif_info}},
      []}]],
   [{debug_line,282,93},{atom,{282,1},ignore}]},
  {clause,
   {282,1},
   [{tuple,
     {282,13},
     [{atom,{282,13},t_union},
      {var,{282,27},'AtomA'},
      {var,{282,38},'ListA'},
      {var,{282,51},'NumberA'},
      {var,{283,32},'TSetA'},
      {var,{283,44},'OtherA'}]},
    {tuple,
     {284,13},
     [{atom,{284,13},t_union},
      {var,{284,27},'AtomB'},
      {var,{284,38},'ListB'},
      {var,{284,51},'NumberB'},
      {var,{285,32},'TSetB'},
      {var,{285,44},'OtherB'}]}],
   [],
   [{debug_line,286,94},
    {match,
     {286,5},
     {var,{286,5},'Union'},
     {tuple,
      {286,13},
      [{atom,{286,13},t_union},
       {call,
        {286,27},
        {atom,{286,27},lub},
        [{var,{286,31},'AtomA'},{var,{286,38},'AtomB'}]},
       {call,
        {287,27},
        {atom,{287,27},lub},
        [{var,{287,31},'ListA'},{var,{287,38},'ListB'}]},
       {call,
        {288,29},
        {atom,{288,29},lub},
        [{var,{288,33},'NumberA'},{var,{288,42},'NumberB'}]},
       {call,
        {289,32},
        {atom,{289,32},join_tuple_sets},
        [{var,{289,48},'TSetA'},{var,{289,55},'TSetB'}]},
       {call,
        {290,28},
        {atom,{290,28},lub},
        [{var,{290,32},'OtherA'},{var,{290,40},'OtherB'}]}]}},
    {debug_line,291,95},
    {call,{291,5},{atom,{291,5},shrink_union},[{var,{291,18},'Union'}]}]},
  {clause,
   {292,1},
   [{match,
     {292,13},
     {tuple,
      {292,13},
      [{atom,{292,13},t_union},
       {var,{292,27},'AtomA'},
       {var,{292,13},'_'},
       {var,{292,13},'_'},
       {var,{292,13},'_'},
       {var,{292,13},'_'}]},
     {var,{292,34},'A'}},
    {match,
     {292,37},
     {tuple,{292,37},[{atom,{292,37},t_atom},{var,{292,37},'_'}]},
     {var,{292,47},'B'}}],
   [],
   [{debug_line,293,96},
    {call,
     {293,5},
     {atom,{293,5},shrink_union},
     [{block,0,
       [{block,
         {293,18},
         [{match,
           {293,28},
           {var,{293,28},rec0},
           {call,
            {293,33},
            {atom,{293,33},lub},
            [{var,{293,37},'AtomA'},{var,{293,44},'B'}]}},
          {match,{293,18},{var,{293,18},rec1},{var,{293,18},'A'}},
          {'case',
           {293,28},
           {var,{293,18},rec1},
           [{clause,
             {293,28},
             [{tuple,
               {293,28},
               [{atom,{293,28},t_union},
                {var,{293,28},'_'},
                {var,{293,28},'_'},
                {var,{293,28},'_'},
                {var,{293,28},'_'},
                {var,{293,28},'_'}]}],
             [],
             [{call,
               {293,28},
               {remote,
                {293,28},
                {atom,{293,28},erlang},
                {atom,{293,28},setelement}},
               [{integer,{293,28},2},
                {var,{293,18},rec1},
                {var,{293,28},rec0}]}]},
            {clause,
             [{generated,true},{location,{293,28}}],
             [{var,[{generated,true},{location,{293,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{293,28}}],
               {remote,
                [{generated,true},{location,{293,28}}],
                {atom,[{generated,true},{location,{293,28}}],erlang},
                {atom,[{generated,true},{location,{293,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{293,28}}],
                 [{atom,[{generated,true},{location,{293,28}}],badrecord},
                  {var,{293,18},rec1}]}]}]}]}]}]}]}]},
  {clause,
   {294,1},
   [{match,
     {294,13},
     {tuple,
      {294,13},
      [{atom,{294,13},t_union},
       {var,{294,13},'_'},
       {var,{294,27},'ListA'},
       {var,{294,13},'_'},
       {var,{294,13},'_'},
       {var,{294,13},'_'}]},
     {var,{294,34},'A'}},
    {var,{294,37},'B'}],
   [[{op,
      {294,59},
      'orelse',
      {call,
       [{generated,true},{location,{294,46}}],
       {remote,
        [{generated,true},{location,{294,46}}],
        {atom,[{generated,true},{location,{294,46}}],erlang},
        {atom,[{generated,true},{location,{294,46}}],is_record}},
       [{var,{294,59},'B'},{atom,{294,46},t_list},{integer,{294,46},3}]},
      {op,
       {294,59},
       'orelse',
       {call,
        [{generated,true},{location,{294,59}}],
        {remote,
         [{generated,true},{location,{294,59}}],
         {atom,[{generated,true},{location,{294,59}}],erlang},
         {atom,[{generated,true},{location,{294,59}}],is_record}},
        [{var,{294,59},'B'},{atom,{294,59},t_cons},{integer,{294,59},3}]},
       {op,{294,59},'=:=',{var,{294,59},'B'},{atom,{294,59},nil}}}}]],
   [{debug_line,295,97},
    {call,
     {295,5},
     {atom,{295,5},shrink_union},
     [{block,0,
       [{block,
         {295,18},
         [{match,
           {295,28},
           {var,{295,28},rec2},
           {call,
            {295,33},
            {atom,{295,33},lub},
            [{var,{295,37},'ListA'},{var,{295,44},'B'}]}},
          {match,{295,18},{var,{295,18},rec3},{var,{295,18},'A'}},
          {'case',
           {295,28},
           {var,{295,18},rec3},
           [{clause,
             {295,28},
             [{tuple,
               {295,28},
               [{atom,{295,28},t_union},
                {var,{295,28},'_'},
                {var,{295,28},'_'},
                {var,{295,28},'_'},
                {var,{295,28},'_'},
                {var,{295,28},'_'}]}],
             [],
             [{call,
               {295,28},
               {remote,
                {295,28},
                {atom,{295,28},erlang},
                {atom,{295,28},setelement}},
               [{integer,{295,28},3},
                {var,{295,18},rec3},
                {var,{295,28},rec2}]}]},
            {clause,
             [{generated,true},{location,{295,28}}],
             [{var,[{generated,true},{location,{295,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{295,28}}],
               {remote,
                [{generated,true},{location,{295,28}}],
                {atom,[{generated,true},{location,{295,28}}],erlang},
                {atom,[{generated,true},{location,{295,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{295,28}}],
                 [{atom,[{generated,true},{location,{295,28}}],badrecord},
                  {var,{295,18},rec3}]}]}]}]}]}]}]}]},
  {clause,
   {296,1},
   [{match,
     {296,13},
     {tuple,
      {296,13},
      [{atom,{296,13},t_union},
       {var,{296,13},'_'},
       {var,{296,13},'_'},
       {var,{296,29},'NumberA'},
       {var,{296,13},'_'},
       {var,{296,13},'_'}]},
     {var,{296,38},'A'}},
    {var,{296,41},'B'}],
   [[{op,
      {296,65},
      'orelse',
      {call,
       [{generated,true},{location,{296,50}}],
       {remote,
        [{generated,true},{location,{296,50}}],
        {atom,[{generated,true},{location,{296,50}}],erlang},
        {atom,[{generated,true},{location,{296,50}}],is_record}},
       [{var,{296,65},'B'},{atom,{296,50},t_number},{integer,{296,50},2}]},
      {op,
       {296,65},
       'orelse',
       {call,
        [{generated,true},{location,{296,65}}],
        {remote,
         [{generated,true},{location,{296,65}}],
         {atom,[{generated,true},{location,{296,65}}],erlang},
         {atom,[{generated,true},{location,{296,65}}],is_record}},
        [{var,{296,65},'B'},{atom,{296,65},t_float},{integer,{296,65},2}]},
       {call,
        [{generated,true},{location,{296,65}}],
        {remote,
         [{generated,true},{location,{296,65}}],
         {atom,[{generated,true},{location,{296,65}}],erlang},
         {atom,[{generated,true},{location,{296,65}}],is_record}},
        [{var,{296,65},'B'},
         {atom,{296,65},t_integer},
         {integer,{296,65},2}]}}}]],
   [{debug_line,297,98},
    {call,
     {297,5},
     {atom,{297,5},shrink_union},
     [{block,0,
       [{block,
         {297,18},
         [{match,
           {297,28},
           {var,{297,28},rec4},
           {call,
            {297,35},
            {atom,{297,35},lub},
            [{var,{297,39},'NumberA'},{var,{297,48},'B'}]}},
          {match,{297,18},{var,{297,18},rec5},{var,{297,18},'A'}},
          {'case',
           {297,28},
           {var,{297,18},rec5},
           [{clause,
             {297,28},
             [{tuple,
               {297,28},
               [{atom,{297,28},t_union},
                {var,{297,28},'_'},
                {var,{297,28},'_'},
                {var,{297,28},'_'},
                {var,{297,28},'_'},
                {var,{297,28},'_'}]}],
             [],
             [{call,
               {297,28},
               {remote,
                {297,28},
                {atom,{297,28},erlang},
                {atom,{297,28},setelement}},
               [{integer,{297,28},4},
                {var,{297,18},rec5},
                {var,{297,28},rec4}]}]},
            {clause,
             [{generated,true},{location,{297,28}}],
             [{var,[{generated,true},{location,{297,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{297,28}}],
               {remote,
                [{generated,true},{location,{297,28}}],
                {atom,[{generated,true},{location,{297,28}}],erlang},
                {atom,[{generated,true},{location,{297,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{297,28}}],
                 [{atom,[{generated,true},{location,{297,28}}],badrecord},
                  {var,{297,18},rec5}]}]}]}]}]}]}]}]},
  {clause,
   {298,1},
   [{match,
     {298,13},
     {tuple,
      {298,13},
      [{atom,{298,13},t_union},
       {var,{298,13},'_'},
       {var,{298,13},'_'},
       {var,{298,13},'_'},
       {var,{298,32},'TSetA'},
       {var,{298,13},'_'}]},
     {var,{298,39},'A'}},
    {match,
     {298,42},
     {tuple,
      {298,42},
      [{atom,{298,42},t_tuple},
       {var,{298,42},'_'},
       {var,{298,42},'_'},
       {var,{298,42},'_'}]},
     {var,{298,53},'B'}}],
   [],
   [{debug_line,299,99},
    {match,
     {299,5},
     {var,{299,5},'Set'},
     {call,
      {299,11},
      {atom,{299,11},join_tuple_sets},
      [{var,{299,27},'TSetA'},
       {block,0,
        [{call,
          {299,34},
          {atom,{299,34},new_tuple_set},
          [{var,{299,48},'B'}]}]}]}},
    {debug_line,300,100},
    {call,
     {300,5},
     {atom,{300,5},shrink_union},
     [{block,0,
       [{block,
         {300,18},
         [{match,{300,18},{var,{300,18},rec6},{var,{300,18},'A'}},
          {'case',
           {300,28},
           {var,{300,18},rec6},
           [{clause,
             {300,28},
             [{tuple,
               {300,28},
               [{atom,{300,28},t_union},
                {var,{300,28},'_'},
                {var,{300,28},'_'},
                {var,{300,28},'_'},
                {var,{300,28},'_'},
                {var,{300,28},'_'}]}],
             [],
             [{call,
               {300,28},
               {remote,
                {300,28},
                {atom,{300,28},erlang},
                {atom,{300,28},setelement}},
               [{integer,{300,28},5},
                {var,{300,18},rec6},
                {var,{300,38},'Set'}]}]},
            {clause,
             [{generated,true},{location,{300,28}}],
             [{var,[{generated,true},{location,{300,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{300,28}}],
               {remote,
                [{generated,true},{location,{300,28}}],
                {atom,[{generated,true},{location,{300,28}}],erlang},
                {atom,[{generated,true},{location,{300,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{300,28}}],
                 [{atom,[{generated,true},{location,{300,28}}],badrecord},
                  {var,{300,18},rec6}]}]}]}]}]}]}]}]},
  {clause,
   {301,1},
   [{match,
     {301,13},
     {tuple,
      {301,13},
      [{atom,{301,13},t_union},
       {var,{301,13},'_'},
       {var,{301,13},'_'},
       {var,{301,13},'_'},
       {var,{301,13},'_'},
       {var,{301,28},'OtherA'}]},
     {var,{301,36},'A'}},
    {var,{301,39},'B'}],
   [],
   [{debug_line,302,101},
    {match,
     {302,5},
     {var,{302,5},'T'},
     {call,
      {302,9},
      {atom,{302,9},lub},
      [{var,{302,13},'OtherA'},{var,{302,21},'B'}]}},
    {debug_line,303,102},
    {call,
     {303,5},
     {atom,{303,5},shrink_union},
     [{block,0,
       [{block,
         {303,18},
         [{match,{303,18},{var,{303,18},rec7},{var,{303,18},'A'}},
          {'case',
           {303,28},
           {var,{303,18},rec7},
           [{clause,
             {303,28},
             [{tuple,
               {303,28},
               [{atom,{303,28},t_union},
                {var,{303,28},'_'},
                {var,{303,28},'_'},
                {var,{303,28},'_'},
                {var,{303,28},'_'},
                {var,{303,28},'_'}]}],
             [],
             [{call,
               {303,28},
               {remote,
                {303,28},
                {atom,{303,28},erlang},
                {atom,{303,28},setelement}},
               [{integer,{303,28},6},
                {var,{303,18},rec7},
                {var,{303,34},'T'}]}]},
            {clause,
             [{generated,true},{location,{303,28}}],
             [{var,[{generated,true},{location,{303,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{303,28}}],
               {remote,
                [{generated,true},{location,{303,28}}],
                {atom,[{generated,true},{location,{303,28}}],erlang},
                {atom,[{generated,true},{location,{303,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{303,28}}],
                 [{atom,[{generated,true},{location,{303,28}}],badrecord},
                  {var,{303,18},rec7}]}]}]}]}]}]}]}]}]}.
{function,{305,1},
          join_tuple_sets,2,
          [{clause,{305,1},
                   [{var,{305,1},'_'},{var,{305,1},'_'}],
                   [[{call,{305,1},
                           {remote,{305,1},
                                   {atom,{305,1},fake},
                                   {atom,{305,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,305,103},{atom,{305,1},ignore}]},
           {clause,{305,1},
                   [{var,{305,17},'A'},{atom,{305,20},none}],
                   [],
                   [{debug_line,306,104},{var,{306,5},'A'}]},
           {clause,{307,1},
                   [{atom,{307,17},none},{var,{307,23},'B'}],
                   [],
                   [{debug_line,308,105},{var,{308,5},'B'}]},
           {clause,{309,1},
                   [{match,{309,17},
                           {tuple,{309,17},
                                  [{atom,{309,17},t_tuple},
                                   {var,{309,17},'_'},
                                   {var,{309,17},'_'},
                                   {var,{309,17},'_'}]},
                           {var,{309,28},'A'}},
                    {match,{309,31},
                           {tuple,{309,31},
                                  [{atom,{309,31},t_tuple},
                                   {var,{309,31},'_'},
                                   {var,{309,31},'_'},
                                   {var,{309,31},'_'}]},
                           {var,{309,42},'B'}}],
                   [],
                   [{debug_line,310,106},
                    {call,{310,5},
                          {atom,{310,5},lub},
                          [{var,{310,9},'A'},{var,{310,12},'B'}]}]},
           {clause,{311,1},
                   [{match,{311,17},
                           {tuple,{311,17},
                                  [{atom,{311,17},t_tuple},
                                   {var,{311,17},'_'},
                                   {var,{311,17},'_'},
                                   {var,{311,17},'_'}]},
                           {var,{311,28},'Tuple'}},
                    {var,{311,35},'Records'}],
                   [],
                   [{debug_line,312,107},
                    {call,{312,5},
                          {atom,{312,5},jts_tuple},
                          [{var,{312,15},'Records'},{var,{312,24},'Tuple'}]}]},
           {clause,{313,1},
                   [{var,{313,17},'Records'},
                    {match,{313,26},
                           {tuple,{313,26},
                                  [{atom,{313,26},t_tuple},
                                   {var,{313,26},'_'},
                                   {var,{313,26},'_'},
                                   {var,{313,26},'_'}]},
                           {var,{313,37},'Tuple'}}],
                   [],
                   [{debug_line,314,108},
                    {call,{314,5},
                          {atom,{314,5},join_tuple_sets},
                          [{var,{314,21},'Tuple'},{var,{314,28},'Records'}]}]},
           {clause,{315,1},
                   [{var,{315,17},'RecordsA'},{var,{315,27},'RecordsB'}],
                   [],
                   [{debug_line,316,109},
                    {call,{316,5},
                          {atom,{316,5},jts_records},
                          [{var,{316,17},'RecordsA'},
                           {var,{316,27},'RecordsB'}]}]}]}.
{function,
    {318,1},
    jts_tuple,2,
    [{clause,
         {318,1},
         [{var,{318,1},'_'},{var,{318,1},'_'}],
         [[{call,
               {318,1},
               {remote,
                   {318,1},
                   {atom,{318,1},fake},
                   {atom,{318,1},is_beam_bif_info}},
               []}]],
         [{debug_line,318,110},{atom,{318,1},ignore}]},
     {clause,
         {318,1},
         [{cons,
              {318,11},
              {tuple,{318,12},[{var,{318,13},'_Key'},{var,{318,19},'Tuple'}]},
              {var,{318,28},'Records'}},
          {var,{318,38},'Acc'}],
         [],
         [{debug_line,319,111},
          {call,
              {319,5},
              {atom,{319,5},jts_tuple},
              [{var,{319,15},'Records'},
               {block,0,
                   [{call,
                        {319,24},
                        {atom,{319,24},lub},
                        [{var,{319,28},'Tuple'},{var,{319,35},'Acc'}]}]}]}]},
     {clause,
         {320,1},
         [{nil,{320,11}},{var,{320,15},'Acc'}],
         [],
         [{debug_line,321,112},{var,{321,5},'Acc'}]}]}.
{function,{323,1},
          jts_records,2,
          [{clause,{323,1},
                   [{var,{323,1},'_'},{var,{323,1},'_'}],
                   [[{call,{323,1},
                           {remote,{323,1},
                                   {atom,{323,1},fake},
                                   {atom,{323,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,323,113},{atom,{323,1},ignore}]},
           {clause,{323,1},
                   [{var,{323,13},'RsA'},{var,{323,18},'RsB'}],
                   [],
                   [{debug_line,324,114},
                    {call,{324,5},
                          {atom,{324,5},jts_records},
                          [{var,{324,17},'RsA'},
                           {var,{324,22},'RsB'},
                           {integer,{324,27},0},
                           {nil,{324,30}}]}]}]}.
{function,
    {326,1},
    jts_records,4,
    [{clause,
         {326,1},
         [{var,{326,1},'_'},
          {var,{326,1},'_'},
          {var,{326,1},'_'},
          {var,{326,1},'_'}],
         [[{call,
               {326,1},
               {remote,
                   {326,1},
                   {atom,{326,1},fake},
                   {atom,{326,1},is_beam_bif_info}},
               []}]],
         [{debug_line,326,115},{atom,{326,1},ignore}]},
     {clause,
         {326,1},
         [{nil,{326,13}},
          {nil,{326,17}},
          {var,{326,21},'_N'},
          {var,{326,25},'Acc'}],
         [],
         [{debug_line,327,116},
          {call,
              {327,5},
              {remote,{327,5},{atom,{327,5},lists},{atom,{327,5},reverse}},
              [{var,{327,13},'Acc'}]}]},
     {clause,
         {328,1},
         [{var,{328,13},'RsA'},
          {var,{328,18},'RsB'},
          {var,{328,23},'N'},
          {var,{328,26},'Acc'}],
         [[{op,{328,38},'>',{var,{328,36},'N'},{integer,{328,41},12}}]],
         [{debug_line,329,117},
          {match,
              {329,5},
              {var,{329,5},'A'},
              {call,
                  {329,9},
                  {atom,{329,9},normalize_tuple_set},
                  [{var,{329,29},'RsA'},{atom,{329,34},none}]}},
          {debug_line,330,118},
          {match,
              {330,5},
              {var,{330,5},'B'},
              {call,
                  {330,9},
                  {atom,{330,9},normalize_tuple_set},
                  [{var,{330,29},'RsB'},{var,{330,34},'A'}]}},
          {debug_line,331,119},
          {match,
              {331,5},
              {tuple,
                  {331,5},
                  [{atom,{331,5},t_tuple},
                   {var,{331,5},'_'},
                   {var,{331,5},'_'},
                   {var,{331,5},'_'}]},
              {call,
                  {331,18},
                  {atom,{331,18},normalize_tuple_set},
                  [{var,{331,38},'Acc'},{var,{331,43},'B'}]}}]},
     {clause,
         {332,1},
         [{cons,
              {332,13},
              {tuple,{332,14},[{var,{332,15},'Key'},{var,{332,20},'A'}]},
              {var,{332,25},'RsA'}},
          {cons,
              {332,31},
              {tuple,{332,32},[{var,{332,33},'Key'},{var,{332,38},'B'}]},
              {var,{332,43},'RsB'}},
          {var,{332,49},'N'},
          {var,{332,52},'Acc'}],
         [],
         [{debug_line,333,120},
          {call,
              {333,5},
              {atom,{333,5},jts_records},
              [{var,{333,17},'RsA'},
               {var,{333,22},'RsB'},
               {block,0,
                   [{op,{333,29},
                        '+',
                        {var,{333,27},'N'},
                        {integer,{333,31},1}}]},
               {block,0,
                   [{cons,
                        {333,34},
                        {tuple,
                            {333,35},
                            [{var,{333,36},'Key'},
                             {call,
                                 {333,41},
                                 {atom,{333,41},lub},
                                 [{var,{333,45},'A'},{var,{333,48},'B'}]}]},
                        {var,{333,54},'Acc'}}]}]}]},
     {clause,
         {334,1},
         [{match,
              {334,13},
              {cons,
                  {334,13},
                  {tuple,{334,14},[{var,{334,15},'KeyA'},{var,{334,21},'A'}]},
                  {var,{334,26},'_'}},
              {var,{334,29},'RsA'}},
          {match,
              {334,34},
              {cons,
                  {334,34},
                  {tuple,{334,35},[{var,{334,36},'KeyB'},{var,{334,42},'B'}]},
                  {var,{334,47},'_'}},
              {var,{334,50},'RsB'}},
          {var,{334,55},'N'},
          {var,{334,58},'Acc'}],
         [],
         [{debug_line,337,121},
          {'case',
              {337,5},
              {call,
                  {337,10},
                  {atom,{337,10},total_compare},
                  [{var,{337,24},'KeyA'},
                   {var,{337,30},'KeyB'},
                   {block,0,
                       [{'fun',
                            {337,36},
                            {function,
                                {atom,{337,40},erlang},
                                {atom,{337,47},'<'},
                                {integer,{337,51},2}}}]}]},
              [{clause,
                   {338,9},
                   [{atom,{338,9},true}],
                   [],
                   [{debug_line,339,122},
                    {call,
                        {339,13},
                        {atom,{339,13},jts_records},
                        [{block,0,
                             [{call,
                                  {339,25},
                                  {remote,
                                      {339,25},
                                      {atom,{339,25},erlang},
                                      {atom,{339,25},tl}},
                                  [{var,{339,28},'RsA'}]}]},
                         {var,{339,34},'RsB'},
                         {block,0,
                             [{op,{339,41},
                                  '+',
                                  {var,{339,39},'N'},
                                  {integer,{339,43},1}}]},
                         {block,0,
                             [{cons,
                                  {339,46},
                                  {tuple,
                                      {339,47},
                                      [{var,{339,48},'KeyA'},
                                       {var,{339,54},'A'}]},
                                  {var,{339,59},'Acc'}}]}]}]},
               {clause,
                   {340,9},
                   [{atom,{340,9},false}],
                   [],
                   [{debug_line,341,123},
                    {match,
                        {341,13},
                        {atom,{341,13},true},
                        {op,{341,25},
                            '=/=',
                            {var,{341,20},'KeyA'},
                            {var,{341,29},'KeyB'}}},
                    {debug_line,342,124},
                    {call,
                        {342,13},
                        {atom,{342,13},jts_records},
                        [{var,{342,25},'RsA'},
                         {block,0,
                             [{call,
                                  {342,30},
                                  {remote,
                                      {342,30},
                                      {atom,{342,30},erlang},
                                      {atom,{342,30},tl}},
                                  [{var,{342,33},'RsB'}]}]},
                         {block,0,
                             [{op,{342,41},
                                  '+',
                                  {var,{342,39},'N'},
                                  {integer,{342,43},1}}]},
                         {block,0,
                             [{cons,
                                  {342,46},
                                  {tuple,
                                      {342,47},
                                      [{var,{342,48},'KeyB'},
                                       {var,{342,54},'B'}]},
                                  {var,{342,59},'Acc'}}]}]}]}]}]},
     {clause,
         {344,1},
         [{cons,
              {344,13},
              {tuple,{344,14},[{var,{344,15},'KeyA'},{var,{344,21},'A'}]},
              {var,{344,26},'RsA'}},
          {nil,{344,32}},
          {var,{344,36},'N'},
          {var,{344,39},'Acc'}],
         [],
         [{debug_line,345,125},
          {call,
              {345,5},
              {atom,{345,5},jts_records},
              [{var,{345,17},'RsA'},
               {nil,{345,22}},
               {block,0,
                   [{op,{345,28},
                        '+',
                        {var,{345,26},'N'},
                        {integer,{345,30},1}}]},
               {block,0,
                   [{cons,
                        {345,33},
                        {tuple,
                            {345,34},
                            [{var,{345,35},'KeyA'},{var,{345,41},'A'}]},
                        {var,{345,46},'Acc'}}]}]}]},
     {clause,
         {346,1},
         [{nil,{346,13}},
          {cons,
              {346,17},
              {tuple,{346,18},[{var,{346,19},'KeyB'},{var,{346,25},'B'}]},
              {var,{346,30},'RsB'}},
          {var,{346,36},'N'},
          {var,{346,39},'Acc'}],
         [],
         [{debug_line,347,126},
          {call,
              {347,5},
              {atom,{347,5},jts_records},
              [{nil,{347,17}},
               {var,{347,21},'RsB'},
               {block,0,
                   [{op,{347,28},
                        '+',
                        {var,{347,26},'N'},
                        {integer,{347,30},1}}]},
               {block,0,
                   [{cons,
                        {347,33},
                        {tuple,
                            {347,34},
                            [{var,{347,35},'KeyB'},{var,{347,41},'B'}]},
                        {var,{347,46},'Acc'}}]}]}]}]}.
{attribute,{352,2},
           spec,
           {{subtract,2},
            [{type,{352,15},
                   'fun',
                   [{type,{352,15},
                          product,
                          [{user_type,{352,16},type,[]},
                           {user_type,{352,24},type,[]}]},
                    {user_type,{352,35},type,[]}]}]}}.
{function,
 {354,1},
 subtract,2,
 [{clause,
   {354,1},
   [{var,{354,1},'_'},{var,{354,1},'_'}],
   [[{call,
      {354,1},
      {remote,{354,1},{atom,{354,1},fake},{atom,{354,1},is_beam_bif_info}},
      []}]],
   [{debug_line,354,127},{atom,{354,1},ignore}]},
  {clause,
   {354,1},
   [{atom,{354,10},any},
    {tuple,
     {354,15},
     [{atom,{354,15},t_number},
      {tuple,{354,34},[{atom,{354,35},'-inf'},{var,{354,42},'Max'}]}]}],
   [],
   [{debug_line,357,128},
    {tuple,
     {357,5},
     [{atom,{357,5},t_union},
      {tuple,{357,19},[{atom,{357,19},t_atom},{atom,{357,19},any}]},
      {tuple,
       {358,19},
       [{atom,{358,19},t_list},{atom,{358,19},any},{atom,{358,19},any}]},
      {tuple,
       {359,21},
       [{atom,{359,21},t_number},
        {tuple,{359,40},[{var,{359,41},'Max'},{atom,{359,45},'+inf'}]}]},
      {tuple,
       {360,24},
       [{atom,{360,24},t_tuple},
        {integer,{360,24},0},
        {atom,{360,24},false},
        {map,{360,24},[]}]},
      {atom,{361,20},other}]}]},
  {clause,
   {362,1},
   [{atom,{362,10},any},{atom,{362,15},nil}],
   [],
   [{debug_line,390,129},
    {tuple,
     {390,5},
     [{atom,{390,5},t_union},
      {tuple,{390,19},[{atom,{390,19},t_atom},{atom,{390,19},any}]},
      {tuple,
       {391,19},
       [{atom,{391,19},t_cons},{atom,{391,19},any},{atom,{391,19},any}]},
      {tuple,{392,21},[{atom,{392,21},t_number},{atom,{392,21},any}]},
      {tuple,
       {393,24},
       [{atom,{393,24},t_tuple},
        {integer,{393,24},0},
        {atom,{393,24},false},
        {map,{393,24},[]}]},
      {atom,{394,20},other}]}]},
  {clause,
   {395,1},
   [{tuple,
     {395,10},
     [{atom,{395,10},t_atom},
      {match,
       {395,27},
       {cons,{395,27},{var,{395,28},'_'},{var,{395,30},'_'}},
       {var,{395,33},'Set0'}}]},
    {tuple,
     {395,40},
     [{atom,{395,40},t_atom},
      {match,
       {395,57},
       {cons,{395,57},{var,{395,58},'_'},{var,{395,60},'_'}},
       {var,{395,63},'Set1'}}]}],
   [],
   [{debug_line,396,130},
    {'case',
     {396,5},
     {call,
      {396,10},
      {remote,{396,17},{atom,{396,10},ordsets},{atom,{396,18},subtract}},
      [{var,{396,27},'Set0'},{var,{396,33},'Set1'}]},
     [{clause,
       {397,9},
       [{nil,{397,9}}],
       [],
       [{debug_line,397,131},{atom,{397,15},none}]},
      {clause,
       {398,9},
       [{match,
         {398,9},
         {cons,{398,9},{var,{398,10},'_'},{var,{398,12},'_'}},
         {var,{398,15},'Set'}}],
       [],
       [{debug_line,398,132},
        {tuple,{398,22},[{atom,{398,22},t_atom},{var,{398,39},'Set'}]}]}]}]},
  {clause,
   {400,1},
   [{match,
     {400,10},
     {tuple,
      {400,10},
      [{atom,{400,10},t_bitstring},{var,{400,33},'UnitA'},{var,{400,10},'_'}]},
     {var,{400,40},'T'}},
    {tuple,{400,43},[{atom,{400,43},t_bs_matchable},{var,{400,69},'UnitB'}]}],
   [],
   [{debug_line,401,133},
    {call,
     {401,5},
     {atom,{401,5},subtract_matchable},
     [{var,{401,24},'T'},{var,{401,27},'UnitA'},{var,{401,34},'UnitB'}]}]},
  {clause,
   {402,1},
   [{match,
     {402,10},
     {tuple,
      {402,10},
      [{atom,{402,10},t_bitstring},
       {var,{402,48},'UnitA'},
       {var,{402,34},'App'}]},
     {var,{402,55},'T'}},
    {tuple,
     {403,10},
     [{atom,{403,10},t_bitstring},
      {var,{403,48},'UnitB'},
      {var,{403,34},'App'}]}],
   [],
   [{debug_line,404,134},
    {call,
     {404,5},
     {atom,{404,5},subtract_matchable},
     [{var,{404,24},'T'},{var,{404,27},'UnitA'},{var,{404,34},'UnitB'}]}]},
  {clause,
   {405,1},
   [{match,
     {405,10},
     {tuple,
      {405,10},
      [{atom,{405,10},t_bitstring},{var,{405,10},'_'},{var,{405,10},'_'}]},
     {var,{405,25},'T'}},
    {tuple,
     {405,28},
     [{atom,{405,28},t_bitstring},{var,{405,28},'_'},{var,{405,28},'_'}]}],
   [],
   [{debug_line,406,135},{var,{406,5},'T'}]},
  {clause,
   {407,1},
   [{match,
     {407,10},
     {tuple,{407,10},[{atom,{407,10},t_bs_context},{var,{407,34},'UnitA'}]},
     {var,{407,41},'T'}},
    {tuple,{407,44},[{atom,{407,44},t_bs_matchable},{var,{407,70},'UnitB'}]}],
   [],
   [{debug_line,408,136},
    {call,
     {408,5},
     {atom,{408,5},subtract_matchable},
     [{var,{408,24},'T'},{var,{408,27},'UnitA'},{var,{408,34},'UnitB'}]}]},
  {clause,
   {409,1},
   [{match,
     {409,10},
     {tuple,{409,10},[{atom,{409,10},t_bs_context},{var,{409,34},'UnitA'}]},
     {var,{409,41},'T'}},
    {tuple,{409,44},[{atom,{409,44},t_bs_context},{var,{409,68},'UnitB'}]}],
   [],
   [{debug_line,410,137},
    {call,
     {410,5},
     {atom,{410,5},subtract_matchable},
     [{var,{410,24},'T'},{var,{410,27},'UnitA'},{var,{410,34},'UnitB'}]}]},
  {clause,
   {411,1},
   [{tuple,
     {411,10},
     [{atom,{411,10},t_integer},
      {tuple,{411,30},[{var,{411,31},'Min'},{var,{411,36},'Max'}]}]},
    {tuple,
     {411,43},
     [{atom,{411,43},t_integer},
      {tuple,{411,63},[{var,{411,64},'N'},{var,{411,66},'N'}]}]}],
   [],
   [{debug_line,412,138},
    {'if',
     {412,5},
     [{clause,
       {413,9},
       [],
       [[{op,{413,13},'=:=',{var,{413,9},'Min'},{var,{413,17},'N'}},
         {op,{413,24},'=:=',{var,{413,20},'Max'},{var,{413,28},'N'}}]],
       [{debug_line,414,139},{atom,{414,13},none}]},
      {clause,
       {415,9},
       [],
       [[{op,{415,13},'=/=',{var,{415,9},'Min'},{var,{415,17},'N'}},
         {op,{415,24},'=/=',{var,{415,20},'Max'},{var,{415,28},'N'}}]],
       [{debug_line,416,140},
        {tuple,
         {416,13},
         [{atom,{416,13},t_integer},
          {tuple,{416,33},[{var,{416,34},'Min'},{var,{416,39},'Max'}]}]}]},
      {clause,
       {417,9},
       [],
       [[{op,{417,13},'=:=',{var,{417,9},'Min'},{var,{417,17},'N'}}]],
       [{debug_line,418,141},
        {tuple,
         {418,13},
         [{atom,{418,13},t_integer},
          {tuple,
           {418,33},
           [{op,{418,38},'+',{var,{418,34},'Min'},{integer,{418,40},1}},
            {var,{418,43},'Max'}]}]}]},
      {clause,
       {419,9},
       [],
       [[{op,{419,13},'=:=',{var,{419,9},'Max'},{var,{419,17},'N'}}]],
       [{debug_line,420,142},
        {tuple,
         {420,13},
         [{atom,{420,13},t_integer},
          {tuple,
           {420,33},
           [{var,{420,34},'Min'},
            {op,
             {420,43},
             '-',
             {var,{420,39},'Max'},
             {integer,{420,45},1}}]}]}]}]}]},
  {clause,
   {422,1},
   [{tuple,{422,10},[{atom,{422,10},t_number},{var,{422,29},'R'}]},
    {tuple,{422,33},[{atom,{422,33},t_float},{atom,{422,51},any}]}],
   [],
   [{debug_line,423,143},
    {call,{423,5},{atom,{423,5},integer_from_range},[{var,{423,24},'R'}]}]},
  {clause,
   {424,1},
   [{tuple,{424,10},[{atom,{424,10},t_number},{var,{424,29},'R'}]},
    {tuple,{424,33},[{atom,{424,33},t_integer},{atom,{424,53},any}]}],
   [],
   [{debug_line,425,144},
    {call,{425,5},{atom,{425,5},float_from_range},[{var,{425,22},'R'}]}]},
  {clause,
   {429,1},
   [{match,
     {429,10},
     {tuple,
      {429,10},
      [{atom,{429,10},t_list},{var,{429,23},'TypeA'},{var,{429,40},'TermA'}]},
     {var,{429,47},'T'}},
    {tuple,
     {430,10},
     [{atom,{430,10},t_cons},{var,{430,23},'TypeB'},{var,{430,40},'TermB'}]}],
   [],
   [{debug_line,431,145},
    {'case',
     {431,5},
     {tuple,
      {431,10},
      [{call,
        {431,11},
        {atom,{431,11},meet},
        [{var,{431,16},'TypeA'},{var,{431,23},'TypeB'}]},
       {call,
        {431,31},
        {atom,{431,31},meet},
        [{var,{431,36},'TermA'},{var,{431,43},'TermB'}]}]},
     [{clause,
       {432,9},
       [{tuple,{432,9},[{var,{432,10},'TypeA'},{var,{432,17},'TermA'}]}],
       [],
       [{debug_line,432,146},{atom,{432,27},nil}]},
      {clause,
       {433,9},
       [{var,{433,9},'_'}],
       [],
       [{debug_line,433,147},{var,{433,14},'T'}]}]}]},
  {clause,
   {435,1},
   [{tuple,
     {435,10},
     [{atom,{435,10},t_list},{var,{435,23},'Type'},{var,{435,39},'Term'}]},
    {atom,{435,46},nil}],
   [],
   [{debug_line,436,148},
    {tuple,
     {436,5},
     [{atom,{436,5},t_cons},{var,{436,18},'Type'},{var,{436,34},'Term'}]}]},
  {clause,
   {438,1},
   [{atom,{438,10},identifier},{atom,{438,22},other}],
   [],
   [{debug_line,439,149},{atom,{439,5},identifier}]},
  {clause,
   {441,1},
   [{match,
     {441,10},
     {tuple,
      {441,10},
      [{atom,{441,10},t_union},
       {var,{441,24},'Atom'},
       {var,{441,10},'_'},
       {var,{441,10},'_'},
       {var,{441,10},'_'},
       {var,{441,10},'_'}]},
     {var,{441,30},'A'}},
    {match,
     {441,33},
     {tuple,{441,33},[{atom,{441,33},t_atom},{var,{441,33},'_'}]},
     {var,{441,43},'B'}}],
   [],
   [{debug_line,442,150},
    {call,
     {442,5},
     {atom,{442,5},shrink_union},
     [{block,0,
       [{block,
         {442,18},
         [{match,
           {442,28},
           {var,{442,28},rec8},
           {call,
            {442,33},
            {atom,{442,33},subtract},
            [{var,{442,42},'Atom'},{var,{442,48},'B'}]}},
          {match,{442,18},{var,{442,18},rec9},{var,{442,18},'A'}},
          {'case',
           {442,28},
           {var,{442,18},rec9},
           [{clause,
             {442,28},
             [{tuple,
               {442,28},
               [{atom,{442,28},t_union},
                {var,{442,28},'_'},
                {var,{442,28},'_'},
                {var,{442,28},'_'},
                {var,{442,28},'_'},
                {var,{442,28},'_'}]}],
             [],
             [{call,
               {442,28},
               {remote,
                {442,28},
                {atom,{442,28},erlang},
                {atom,{442,28},setelement}},
               [{integer,{442,28},2},
                {var,{442,18},rec9},
                {var,{442,28},rec8}]}]},
            {clause,
             [{generated,true},{location,{442,28}}],
             [{var,[{generated,true},{location,{442,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{442,28}}],
               {remote,
                [{generated,true},{location,{442,28}}],
                {atom,[{generated,true},{location,{442,28}}],erlang},
                {atom,[{generated,true},{location,{442,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{442,28}}],
                 [{atom,[{generated,true},{location,{442,28}}],badrecord},
                  {var,{442,18},rec9}]}]}]}]}]}]}]}]},
  {clause,
   {443,1},
   [{match,
     {443,10},
     {tuple,
      {443,10},
      [{atom,{443,10},t_union},
       {var,{443,10},'_'},
       {var,{443,10},'_'},
       {var,{443,26},'Number'},
       {var,{443,10},'_'},
       {var,{443,10},'_'}]},
     {var,{443,34},'A'}},
    {var,{443,37},'B'}],
   [[{op,
      {443,61},
      'orelse',
      {call,
       [{generated,true},{location,{443,46}}],
       {remote,
        [{generated,true},{location,{443,46}}],
        {atom,[{generated,true},{location,{443,46}}],erlang},
        {atom,[{generated,true},{location,{443,46}}],is_record}},
       [{var,{443,61},'B'},{atom,{443,46},t_number},{integer,{443,46},2}]},
      {op,
       {443,61},
       'orelse',
       {call,
        [{generated,true},{location,{443,61}}],
        {remote,
         [{generated,true},{location,{443,61}}],
         {atom,[{generated,true},{location,{443,61}}],erlang},
         {atom,[{generated,true},{location,{443,61}}],is_record}},
        [{var,{443,61},'B'},{atom,{443,61},t_float},{integer,{443,61},2}]},
       {call,
        [{generated,true},{location,{443,61}}],
        {remote,
         [{generated,true},{location,{443,61}}],
         {atom,[{generated,true},{location,{443,61}}],erlang},
         {atom,[{generated,true},{location,{443,61}}],is_record}},
        [{var,{443,61},'B'},
         {atom,{443,61},t_integer},
         {integer,{443,61},2}]}}}]],
   [{debug_line,444,151},
    {call,
     {444,5},
     {atom,{444,5},shrink_union},
     [{block,0,
       [{block,
         {444,18},
         [{match,
           {444,28},
           {var,{444,28},rec10},
           {call,
            {444,35},
            {atom,{444,35},subtract},
            [{var,{444,44},'Number'},{var,{444,52},'B'}]}},
          {match,{444,18},{var,{444,18},rec11},{var,{444,18},'A'}},
          {'case',
           {444,28},
           {var,{444,18},rec11},
           [{clause,
             {444,28},
             [{tuple,
               {444,28},
               [{atom,{444,28},t_union},
                {var,{444,28},'_'},
                {var,{444,28},'_'},
                {var,{444,28},'_'},
                {var,{444,28},'_'},
                {var,{444,28},'_'}]}],
             [],
             [{call,
               {444,28},
               {remote,
                {444,28},
                {atom,{444,28},erlang},
                {atom,{444,28},setelement}},
               [{integer,{444,28},4},
                {var,{444,18},rec11},
                {var,{444,28},rec10}]}]},
            {clause,
             [{generated,true},{location,{444,28}}],
             [{var,[{generated,true},{location,{444,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{444,28}}],
               {remote,
                [{generated,true},{location,{444,28}}],
                {atom,[{generated,true},{location,{444,28}}],erlang},
                {atom,[{generated,true},{location,{444,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{444,28}}],
                 [{atom,[{generated,true},{location,{444,28}}],badrecord},
                  {var,{444,18},rec11}]}]}]}]}]}]}]}]},
  {clause,
   {445,1},
   [{match,
     {445,10},
     {tuple,
      {445,10},
      [{atom,{445,10},t_union},
       {var,{445,10},'_'},
       {var,{445,24},'List'},
       {var,{445,10},'_'},
       {var,{445,10},'_'},
       {var,{445,10},'_'}]},
     {var,{445,30},'A'}},
    {var,{445,33},'B'}],
   [[{op,
      {445,55},
      'orelse',
      {call,
       [{generated,true},{location,{445,42}}],
       {remote,
        [{generated,true},{location,{445,42}}],
        {atom,[{generated,true},{location,{445,42}}],erlang},
        {atom,[{generated,true},{location,{445,42}}],is_record}},
       [{var,{445,55},'B'},{atom,{445,42},t_list},{integer,{445,42},3}]},
      {op,
       {445,55},
       'orelse',
       {call,
        [{generated,true},{location,{445,55}}],
        {remote,
         [{generated,true},{location,{445,55}}],
         {atom,[{generated,true},{location,{445,55}}],erlang},
         {atom,[{generated,true},{location,{445,55}}],is_record}},
        [{var,{445,55},'B'},{atom,{445,55},t_cons},{integer,{445,55},3}]},
       {op,{445,55},'=:=',{var,{445,55},'B'},{atom,{445,55},nil}}}}]],
   [{debug_line,446,152},
    {call,
     {446,5},
     {atom,{446,5},shrink_union},
     [{block,0,
       [{block,
         {446,18},
         [{match,
           {446,28},
           {var,{446,28},rec12},
           {call,
            {446,33},
            {atom,{446,33},subtract},
            [{var,{446,42},'List'},{var,{446,48},'B'}]}},
          {match,{446,18},{var,{446,18},rec13},{var,{446,18},'A'}},
          {'case',
           {446,28},
           {var,{446,18},rec13},
           [{clause,
             {446,28},
             [{tuple,
               {446,28},
               [{atom,{446,28},t_union},
                {var,{446,28},'_'},
                {var,{446,28},'_'},
                {var,{446,28},'_'},
                {var,{446,28},'_'},
                {var,{446,28},'_'}]}],
             [],
             [{call,
               {446,28},
               {remote,
                {446,28},
                {atom,{446,28},erlang},
                {atom,{446,28},setelement}},
               [{integer,{446,28},3},
                {var,{446,18},rec13},
                {var,{446,28},rec12}]}]},
            {clause,
             [{generated,true},{location,{446,28}}],
             [{var,[{generated,true},{location,{446,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{446,28}}],
               {remote,
                [{generated,true},{location,{446,28}}],
                {atom,[{generated,true},{location,{446,28}}],erlang},
                {atom,[{generated,true},{location,{446,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{446,28}}],
                 [{atom,[{generated,true},{location,{446,28}}],badrecord},
                  {var,{446,18},rec13}]}]}]}]}]}]}]}]},
  {clause,
   {447,1},
   [{match,
     {447,10},
     {tuple,
      {447,10},
      [{atom,{447,10},t_union},
       {var,{447,10},'_'},
       {var,{447,10},'_'},
       {var,{447,10},'_'},
       {match,
        {447,29},
        {cons,{447,29},{var,{447,30},'_'},{var,{447,32},'_'}},
        {var,{447,35},'Records0'}},
       {var,{447,10},'_'}]},
     {var,{447,45},'A'}},
    {match,
     {447,48},
     {tuple,
      {447,48},
      [{atom,{447,48},t_tuple},
       {var,{447,48},'_'},
       {var,{447,48},'_'},
       {var,{447,48},'_'}]},
     {var,{447,59},'B'}}],
   [],
   [{debug_line,449,153},
    {match,
     {449,5},
     {var,{449,5},'NewSet'},
     {'case',
      {449,14},
      {lc,
       {449,19},
       {block,0,[{tuple,{449,20},[{var,{449,21},'Key'},{var,{449,26},'T'}]}]},
       [{block,0,[{atom,{449,45},true}]},
        {generate_strict,
         {449,41},
         {tuple,{449,32},[{var,{449,33},'Key'},{var,{449,38},'T'}]},
         {var,{449,45},'Records0'}},
        {block,0,[{atom,{449,66},true}]},
        {op,
         {449,66},
         '=/=',
         {call,
          {449,55},
          {atom,{449,55},meet},
          [{var,{449,60},'T'},{var,{449,63},'B'}]},
         {var,{449,70},'T'}}]},
      [{clause,
        {450,18},
        [{match,
          {450,18},
          {cons,{450,18},{var,{450,19},'_'},{var,{450,21},'_'}},
          {var,{450,24},'Records'}}],
        [],
        [{debug_line,450,154},{var,{450,35},'Records'}]},
       {clause,
        {451,18},
        [{nil,{451,18}}],
        [],
        [{debug_line,451,155},{atom,{451,24},none}]}]}},
    {debug_line,453,156},
    {call,
     {453,5},
     {atom,{453,5},shrink_union},
     [{block,0,
       [{block,
         {453,18},
         [{match,{453,18},{var,{453,18},rec14},{var,{453,18},'A'}},
          {'case',
           {453,28},
           {var,{453,18},rec14},
           [{clause,
             {453,28},
             [{tuple,
               {453,28},
               [{atom,{453,28},t_union},
                {var,{453,28},'_'},
                {var,{453,28},'_'},
                {var,{453,28},'_'},
                {var,{453,28},'_'},
                {var,{453,28},'_'}]}],
             [],
             [{call,
               {453,28},
               {remote,
                {453,28},
                {atom,{453,28},erlang},
                {atom,{453,28},setelement}},
               [{integer,{453,28},5},
                {var,{453,18},rec14},
                {var,{453,38},'NewSet'}]}]},
            {clause,
             [{generated,true},{location,{453,28}}],
             [{var,[{generated,true},{location,{453,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{453,28}}],
               {remote,
                [{generated,true},{location,{453,28}}],
                {atom,[{generated,true},{location,{453,28}}],erlang},
                {atom,[{generated,true},{location,{453,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{453,28}}],
                 [{atom,[{generated,true},{location,{453,28}}],badrecord},
                  {var,{453,18},rec14}]}]}]}]}]}]}]}]},
  {clause,
   {454,1},
   [{match,
     {454,10},
     {tuple,
      {454,10},
      [{atom,{454,10},t_union},
       {var,{454,10},'_'},
       {var,{454,10},'_'},
       {var,{454,10},'_'},
       {match,
        {454,29},
        {tuple,
         {454,29},
         [{atom,{454,29},t_tuple},
          {var,{454,29},'_'},
          {var,{454,29},'_'},
          {var,{454,29},'_'}]},
        {var,{454,40},'Tuple'}},
       {var,{454,10},'_'}]},
     {var,{454,47},'A'}},
    {match,
     {454,50},
     {tuple,
      {454,50},
      [{atom,{454,50},t_tuple},
       {var,{454,50},'_'},
       {var,{454,50},'_'},
       {var,{454,50},'_'}]},
     {var,{454,61},'B'}}],
   [],
   [{debug_line,456,157},
    {'case',
     {456,5},
     {call,
      {456,10},
      {atom,{456,10},meet},
      [{var,{456,15},'Tuple'},{var,{456,22},'B'}]},
     [{clause,
       {457,9},
       [{var,{457,9},'Tuple'}],
       [],
       [{debug_line,457,158},
        {call,
         {457,18},
         {atom,{457,18},shrink_union},
         [{block,0,
           [{block,
             {457,31},
             [{match,{457,31},{var,{457,31},rec15},{var,{457,31},'A'}},
              {'case',
               {457,41},
               {var,{457,31},rec15},
               [{clause,
                 {457,41},
                 [{tuple,
                   {457,41},
                   [{atom,{457,41},t_union},
                    {var,{457,41},'_'},
                    {var,{457,41},'_'},
                    {var,{457,41},'_'},
                    {var,{457,41},'_'},
                    {var,{457,41},'_'}]}],
                 [],
                 [{call,
                   {457,41},
                   {remote,
                    {457,41},
                    {atom,{457,41},erlang},
                    {atom,{457,41},setelement}},
                   [{integer,{457,41},5},
                    {var,{457,31},rec15},
                    {atom,{457,51},none}]}]},
                {clause,
                 [{generated,true},{location,{457,41}}],
                 [{var,[{generated,true},{location,{457,41}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{457,41}}],
                   {remote,
                    [{generated,true},{location,{457,41}}],
                    {atom,[{generated,true},{location,{457,41}}],erlang},
                    {atom,[{generated,true},{location,{457,41}}],error}},
                   [{tuple,
                     [{generated,true},{location,{457,41}}],
                     [{atom,[{generated,true},{location,{457,41}}],badrecord},
                      {var,{457,31},rec15}]}]}]}]}]}]}]}]},
      {clause,
       {458,9},
       [{var,{458,9},'_'}],
       [],
       [{debug_line,458,159},{var,{458,14},'A'}]}]}]},
  {clause,
   {460,1},
   [{match,
     {460,10},
     {tuple,
      {460,10},
      [{atom,{460,10},t_union},
       {var,{460,10},'_'},
       {var,{460,10},'_'},
       {var,{460,10},'_'},
       {var,{460,10},'_'},
       {var,{460,25},'Other'}]},
     {var,{460,32},'A'}},
    {var,{460,35},'B'}],
   [],
   [{debug_line,461,160},
    {call,
     {461,5},
     {atom,{461,5},shrink_union},
     [{block,0,
       [{block,
         {461,18},
         [{match,
           {461,28},
           {var,{461,28},rec16},
           {call,
            {461,34},
            {atom,{461,34},subtract},
            [{var,{461,43},'Other'},{var,{461,50},'B'}]}},
          {match,{461,18},{var,{461,18},rec17},{var,{461,18},'A'}},
          {'case',
           {461,28},
           {var,{461,18},rec17},
           [{clause,
             {461,28},
             [{tuple,
               {461,28},
               [{atom,{461,28},t_union},
                {var,{461,28},'_'},
                {var,{461,28},'_'},
                {var,{461,28},'_'},
                {var,{461,28},'_'},
                {var,{461,28},'_'}]}],
             [],
             [{call,
               {461,28},
               {remote,
                {461,28},
                {atom,{461,28},erlang},
                {atom,{461,28},setelement}},
               [{integer,{461,28},6},
                {var,{461,18},rec17},
                {var,{461,28},rec16}]}]},
            {clause,
             [{generated,true},{location,{461,28}}],
             [{var,[{generated,true},{location,{461,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{461,28}}],
               {remote,
                [{generated,true},{location,{461,28}}],
                {atom,[{generated,true},{location,{461,28}}],erlang},
                {atom,[{generated,true},{location,{461,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{461,28}}],
                 [{atom,[{generated,true},{location,{461,28}}],badrecord},
                  {var,{461,18},rec17}]}]}]}]}]}]}]}]},
  {clause,
   {463,1},
   [{var,{463,10},'A'},{var,{463,13},'B'}],
   [],
   [{debug_line,465,161},
    {'case',
     {465,5},
     {call,
      {465,10},
      {atom,{465,10},meet},
      [{var,{465,15},'A'},{var,{465,18},'B'}]},
     [{clause,
       {466,9},
       [{var,{466,9},'A'}],
       [],
       [{debug_line,466,162},{atom,{466,14},none}]},
      {clause,
       {467,9},
       [{var,{467,9},'_Other'}],
       [],
       [{debug_line,467,163},{var,{467,19},'A'}]}]}]}]}.
{function,
    {470,1},
    subtract_matchable,3,
    [{clause,
         {470,1},
         [{var,{470,1},'_'},{var,{470,1},'_'},{var,{470,1},'_'}],
         [[{call,
               {470,1},
               {remote,
                   {470,1},
                   {atom,{470,1},fake},
                   {atom,{470,1},is_beam_bif_info}},
               []}]],
         [{debug_line,470,164},{atom,{470,1},ignore}]},
     {clause,
         {470,1},
         [{var,{470,20},'T'},{var,{470,23},'UnitA'},{var,{470,30},'UnitB'}],
         [],
         [{debug_line,471,165},
          {'if',
              {471,5},
              [{clause,
                   {472,9},
                   [],
                   [[{op,{472,25},
                         '=:=',
                         {op,{472,15},
                             'rem',
                             {var,{472,9},'UnitA'},
                             {var,{472,19},'UnitB'}},
                         {integer,{472,29},0}}]],
                   [{debug_line,472,166},{atom,{472,34},none}]},
               {clause,
                   {473,9},
                   [],
                   [[{op,{473,25},
                         '=/=',
                         {op,{473,15},
                             'rem',
                             {var,{473,9},'UnitA'},
                             {var,{473,19},'UnitB'}},
                         {integer,{473,29},0}}]],
                   [{debug_line,473,167},{var,{473,34},'T'}]}]}]}]}.
{attribute,{480,2},
           spec,
           {{get_bs_matchable_unit,1},
            [{type,{480,28},
                   'fun',
                   [{type,{480,28},product,[{user_type,{480,29},type,[]}]},
                    {type,{480,40},
                          union,
                          [{type,{480,40},pos_integer,[]},
                           {atom,{480,56},error}]}]}]}}.
{function,{481,1},
          get_bs_matchable_unit,1,
          [{clause,{481,1},
                   [{var,{481,1},'_'}],
                   [[{call,{481,1},
                           {remote,{481,1},
                                   {atom,{481,1},fake},
                                   {atom,{481,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,481,168},{atom,{481,1},ignore}]},
           {clause,{481,1},
                   [{tuple,{481,23},
                           [{atom,{481,23},t_bitstring},
                            {var,{481,46},'Unit'},
                            {var,{481,23},'_'}]}],
                   [],
                   [{debug_line,482,169},{var,{482,5},'Unit'}]},
           {clause,{483,1},
                   [{tuple,{483,23},
                           [{atom,{483,23},t_bs_context},
                            {var,{483,47},'Unit'}]}],
                   [],
                   [{debug_line,484,170},{var,{484,5},'Unit'}]},
           {clause,{485,1},
                   [{tuple,{485,23},
                           [{atom,{485,23},t_bs_matchable},
                            {var,{485,49},'Unit'}]}],
                   [],
                   [{debug_line,486,171},{var,{486,5},'Unit'}]},
           {clause,{487,1},
                   [{var,{487,23},'_'}],
                   [],
                   [{debug_line,488,172},{atom,{488,5},error}]}]}.
{attribute,{490,2},
           spec,
           {{is_bs_matchable_type,1},
            [{type,{490,27},
                   'fun',
                   [{type,{490,27},product,[{user_type,{490,28},type,[]}]},
                    {type,{490,39},boolean,[]}]}]}}.
{function,{491,1},
          is_bs_matchable_type,1,
          [{clause,{491,1},
                   [{var,{491,1},'_'}],
                   [[{call,{491,1},
                           {remote,{491,1},
                                   {atom,{491,1},fake},
                                   {atom,{491,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,491,173},{atom,{491,1},ignore}]},
           {clause,{491,1},
                   [{var,{491,22},'Type'}],
                   [],
                   [{debug_line,492,174},
                    {op,{492,33},
                        '=/=',
                        {call,{492,5},
                              {atom,{492,5},get_bs_matchable_unit},
                              [{var,{492,27},'Type'}]},
                        {atom,{492,37},error}}]}]}.
{attribute,
    {494,2},
    spec,
    {{get_singleton_value,1},
     [{type,
          {494,26},
          bounded_fun,
          [{type,
               {494,26},
               'fun',
               [{type,{494,26},product,[{var,{494,27},'Type'}]},
                {var,{494,36},'Result'}]},
           [{type,
                {495,7},
                constraint,
                [{atom,{495,7},is_subtype},
                 [{var,{495,7},'Type'},{user_type,{495,15},type,[]}]]},
            {type,
                {496,7},
                constraint,
                [{atom,{496,7},is_subtype},
                 [{var,{496,7},'Result'},
                  {type,
                      {496,17},
                      union,
                      [{type,
                           {496,17},
                           tuple,
                           [{atom,{496,18},ok},{type,{496,22},term,[]}]},
                       {atom,{496,32},error}]}]]}]]}]}}.
{function,
    {497,1},
    get_singleton_value,1,
    [{clause,
         {497,1},
         [{var,{497,1},'_'}],
         [[{call,
               {497,1},
               {remote,
                   {497,1},
                   {atom,{497,1},fake},
                   {atom,{497,1},is_beam_bif_info}},
               []}]],
         [{debug_line,497,175},{atom,{497,1},ignore}]},
     {clause,
         {497,1},
         [{tuple,
              {497,21},
              [{atom,{497,21},t_atom},
               {cons,{497,38},{var,{497,39},'Atom'},{nil,{497,43}}}]}],
         [],
         [{debug_line,498,176},
          {tuple,{498,5},[{atom,{498,6},ok},{var,{498,10},'Atom'}]}]},
     {clause,
         {499,1},
         [{tuple,
              {499,21},
              [{atom,{499,21},t_float},
               {tuple,
                   {499,39},
                   [{var,{499,40},'Float'},{var,{499,46},'Float'}]}]}],
         [],
         [{debug_line,500,177},
          {tuple,{500,5},[{atom,{500,6},ok},{var,{500,10},'Float'}]}]},
     {clause,
         {501,1},
         [{tuple,
              {501,21},
              [{atom,{501,21},t_integer},
               {tuple,{501,41},[{var,{501,42},'Int'},{var,{501,46},'Int'}]}]}],
         [],
         [{debug_line,502,178},
          {tuple,{502,5},[{atom,{502,6},ok},{var,{502,10},'Int'}]}]},
     {clause,
         {503,1},
         [{tuple,
              {503,21},
              [{atom,{503,21},t_map},
               {atom,{503,38},none},
               {atom,{503,55},none}]}],
         [],
         [{debug_line,504,179},
          {tuple,{504,5},[{atom,{504,6},ok},{map,{504,10},[]}]}]},
     {clause,
         {505,1},
         [{tuple,
              {505,21},
              [{atom,{505,21},t_tuple},
               {var,{505,46},'Size'},
               {atom,{505,36},true},
               {var,{505,60},'Es'}]}],
         [],
         [{debug_line,506,180},
          {'case',
              {506,5},
              {call,
                  {506,10},
                  {atom,{506,10},gsv_elements},
                  [{var,{506,23},'Size'},{var,{506,29},'Es'},{nil,{506,33}}]},
              [{clause,
                   {507,9},
                   [{var,{507,9},'Values'}],
                   [[{call,
                         {507,21},
                         {remote,
                             {507,21},
                             {atom,{507,21},erlang},
                             {atom,{507,21},is_list}},
                         [{var,{507,29},'Values'}]}]],
                   [{debug_line,508,181},
                    {tuple,
                        {508,13},
                        [{atom,{508,14},ok},
                         {call,
                             {508,18},
                             {remote,
                                 {508,18},
                                 {atom,{508,18},erlang},
                                 {atom,{508,18},list_to_tuple}},
                             [{var,{508,32},'Values'}]}]}]},
               {clause,
                   {509,9},
                   [{atom,{509,9},error}],
                   [],
                   [{debug_line,510,182},{atom,{510,13},error}]}]}]},
     {clause,
         {512,1},
         [{atom,{512,21},nil}],
         [],
         [{debug_line,513,183},
          {tuple,{513,5},[{atom,{513,6},ok},{nil,{513,10}}]}]},
     {clause,
         {514,1},
         [{var,{514,21},'_'}],
         [],
         [{debug_line,515,184},{atom,{515,5},error}]}]}.
{function,
    {517,1},
    gsv_elements,3,
    [{clause,
         {517,1},
         [{var,{517,1},'_'},{var,{517,1},'_'},{var,{517,1},'_'}],
         [[{call,
               {517,1},
               {remote,
                   {517,1},
                   {atom,{517,1},fake},
                   {atom,{517,1},is_beam_bif_info}},
               []}]],
         [{debug_line,517,185},{atom,{517,1},ignore}]},
     {clause,
         {517,1},
         [{integer,{517,14},0},{var,{517,17},'_Es'},{var,{517,22},'Acc'}],
         [],
         [{debug_line,519,186},{var,{519,5},'Acc'}]},
     {clause,
         {520,1},
         [{var,{520,14},'N'},{var,{520,17},'Es'},{var,{520,21},'Acc'}],
         [],
         [{debug_line,521,187},
          {match,
              {521,5},
              {var,{521,5},'ElementType'},
              {call,
                  {521,19},
                  {atom,{521,19},get_tuple_element},
                  [{var,{521,37},'N'},{var,{521,40},'Es'}]}},
          {debug_line,522,188},
          {'case',
              {522,5},
              {call,
                  {522,10},
                  {atom,{522,10},get_singleton_value},
                  [{var,{522,30},'ElementType'}]},
              [{clause,
                   {523,9},
                   [{tuple,
                        {523,9},
                        [{atom,{523,10},ok},{var,{523,14},'Value'}]}],
                   [],
                   [{debug_line,523,189},
                    {call,
                        {523,24},
                        {atom,{523,24},gsv_elements},
                        [{block,0,
                             [{op,{523,39},
                                  '-',
                                  {var,{523,37},'N'},
                                  {integer,{523,41},1}}]},
                         {var,{523,44},'Es'},
                         {block,0,
                             [{cons,
                                  {523,48},
                                  {var,{523,49},'Value'},
                                  {var,{523,57},'Acc'}}]}]}]},
               {clause,
                   {524,9},
                   [{atom,{524,9},error}],
                   [],
                   [{debug_line,524,190},{atom,{524,18},error}]}]}]}]}.
{attribute,{527,2},
           spec,
           {{is_singleton_type,1},
            [{type,{527,24},
                   'fun',
                   [{type,{527,24},product,[{user_type,{527,25},type,[]}]},
                    {type,{527,36},boolean,[]}]}]}}.
{function,{528,1},
          is_singleton_type,1,
          [{clause,{528,1},
                   [{var,{528,1},'_'}],
                   [[{call,{528,1},
                           {remote,{528,1},
                                   {atom,{528,1},fake},
                                   {atom,{528,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,528,191},{atom,{528,1},ignore}]},
           {clause,{528,1},
                   [{var,{528,19},'Type'}],
                   [],
                   [{debug_line,529,192},
                    {op,{529,31},
                        '=/=',
                        {call,{529,5},
                              {atom,{529,5},get_singleton_value},
                              [{var,{529,25},'Type'}]},
                        {atom,{529,35},error}}]}]}.
{attribute,{531,2},
           spec,
           {{is_boolean_type,1},
            [{type,{531,22},
                   'fun',
                   [{type,{531,22},product,[{user_type,{531,23},type,[]}]},
                    {type,{531,34},boolean,[]}]}]}}.
{function,
    {532,1},
    is_boolean_type,1,
    [{clause,
         {532,1},
         [{var,{532,1},'_'}],
         [[{call,
               {532,1},
               {remote,
                   {532,1},
                   {atom,{532,1},fake},
                   {atom,{532,1},is_beam_bif_info}},
               []}]],
         [{debug_line,532,193},{atom,{532,1},ignore}]},
     {clause,
         {532,1},
         [{tuple,
              {532,17},
              [{atom,{532,17},t_atom},
               {cons,
                   {532,34},
                   {var,{532,35},'F'},
                   {cons,{532,37},{var,{532,37},'T'},{nil,{532,38}}}}]}],
         [],
         [{debug_line,533,194},
          {'case',
              {533,7},
              {op,{533,7},'=:=',{var,{533,5},'F'},{atom,{533,11},false}},
              [{clause,
                   {533,7},
                   [{atom,{533,7},true}],
                   [],
                   [{op,{533,27},
                        '=:=',
                        {var,{533,25},'T'},
                        {atom,{533,31},true}}]},
               {clause,
                   {533,7},
                   [{atom,{533,7},false}],
                   [],
                   [{atom,{533,7},false}]},
               {clause,
                   [{generated,true},{location,{533,7}}],
                   [{var,{533,7},cov1}],
                   [],
                   [{call,
                        {533,7},
                        {remote,
                            {533,7},
                            {atom,{533,7},erlang},
                            {atom,{533,7},error}},
                        [{block,0,
                             [{tuple,
                                  {533,7},
                                  [{atom,{533,7},badarg},
                                   {var,{533,7},cov1}]}]}]}]}]}]},
     {clause,
         {534,1},
         [{tuple,
              {534,17},
              [{atom,{534,17},t_atom},
               {cons,{534,34},{var,{534,35},'B'},{nil,{534,36}}}]}],
         [],
         [{debug_line,535,195},
          {call,
              {535,5},
              {remote,{535,5},{atom,{535,5},erlang},{atom,{535,5},is_boolean}},
              [{var,{535,16},'B'}]}]},
     {clause,
         {536,1},
         [{match,
              {536,17},
              {tuple,
                  {536,17},
                  [{atom,{536,17},t_union},
                   {var,{536,17},'_'},
                   {var,{536,17},'_'},
                   {var,{536,17},'_'},
                   {var,{536,17},'_'},
                   {var,{536,17},'_'}]},
              {var,{536,28},'T'}}],
         [],
         [{debug_line,537,196},
          {call,
              {537,5},
              {atom,{537,5},is_boolean_type},
              [{block,0,
                   [{call,
                        {537,21},
                        {atom,{537,21},normalize},
                        [{var,{537,31},'T'}]}]}]}]},
     {clause,
         {538,1},
         [{var,{538,17},'_'}],
         [],
         [{debug_line,539,197},{atom,{539,5},false}]}]}.
{attribute,{541,2},
           spec,
           {{is_numerical_type,1},
            [{type,{541,24},
                   'fun',
                   [{type,{541,24},product,[{user_type,{541,25},type,[]}]},
                    {type,{541,36},boolean,[]}]}]}}.
{function,{542,1},
          is_numerical_type,1,
          [{clause,{542,1},
                   [{var,{542,1},'_'}],
                   [[{call,{542,1},
                           {remote,{542,1},
                                   {atom,{542,1},fake},
                                   {atom,{542,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,542,198},{atom,{542,1},ignore}]},
           {clause,{542,1},
                   [{tuple,{542,19},
                           [{atom,{542,19},t_integer},{var,{542,19},'_'}]}],
                   [],
                   [{debug_line,542,199},{atom,{542,36},true}]},
           {clause,{543,1},
                   [{tuple,{543,19},
                           [{atom,{543,19},t_number},{var,{543,19},'_'}]}],
                   [],
                   [{debug_line,543,200},{atom,{543,35},true}]},
           {clause,{544,1},
                   [{var,{544,19},'_'}],
                   [],
                   [{debug_line,544,201},{atom,{544,25},false}]}]}.
{attribute,{546,2},
           spec,
           {{set_tuple_element,3},
            [{type,{546,24},
                   bounded_fun,
                   [{type,{546,24},
                          'fun',
                          [{type,{546,24},
                                 product,
                                 [{var,{546,25},'Index'},
                                  {var,{546,32},'Type'},
                                  {var,{546,38},'Elements'}]},
                           {var,{546,51},'Elements'}]},
                    [{type,{547,7},
                           constraint,
                           [{atom,{547,7},is_subtype},
                            [{var,{547,7},'Index'},
                             {type,{547,16},pos_integer,[]}]]},
                     {type,{548,7},
                           constraint,
                           [{atom,{548,7},is_subtype},
                            [{var,{548,7},'Type'},
                             {user_type,{548,15},type,[]}]]},
                     {type,{549,7},
                           constraint,
                           [{atom,{549,7},is_subtype},
                            [{var,{549,7},'Elements'},
                             {user_type,{549,19},tuple_elements,[]}]]}]]}]}}.
{function,
    {550,1},
    set_tuple_element,3,
    [{clause,
         {550,1},
         [{var,{550,1},'_'},{var,{550,1},'_'},{var,{550,1},'_'}],
         [[{call,
               {550,1},
               {remote,
                   {550,1},
                   {atom,{550,1},fake},
                   {atom,{550,1},is_beam_bif_info}},
               []}]],
         [{debug_line,550,202},{atom,{550,1},ignore}]},
     {clause,
         {550,1},
         [{var,{550,19},'Index'},{var,{550,26},'_Type'},{var,{550,33},'Es'}],
         [[{op,{550,48},'>',{var,{550,42},'Index'},{integer,{550,51},12}}]],
         [{debug_line,551,203},{var,{551,5},'Es'}]},
     {clause,
         {552,1},
         [{var,{552,19},'_Index'},{atom,{552,27},none},{var,{552,33},'Es'}],
         [],
         [{debug_line,553,204},{var,{553,5},'Es'}]},
     {clause,
         {554,1},
         [{var,{554,19},'Index'},{atom,{554,26},any},{var,{554,31},'Es'}],
         [],
         [{debug_line,555,205},
          {call,
              {555,5},
              {remote,{555,9},{atom,{555,5},maps},{atom,{555,10},remove}},
              [{var,{555,17},'Index'},{var,{555,24},'Es'}]}]},
     {clause,
         {556,1},
         [{var,{556,19},'Index'},{var,{556,26},'Type'},{var,{556,32},'Es'}],
         [],
         [{debug_line,557,206},
          {map,
              {557,7},
              {var,{557,5},'Es'},
              [{map_field_assoc,
                   {557,16},
                   {var,{557,10},'Index'},
                   {var,{557,19},'Type'}}]}]}]}.
{attribute,{559,2},
           spec,
           {{get_tuple_element,2},
            [{type,{559,24},
                   bounded_fun,
                   [{type,{559,24},
                          'fun',
                          [{type,{559,24},
                                 product,
                                 [{var,{559,25},'Index'},
                                  {var,{559,32},'Elements'}]},
                           {user_type,{559,45},type,[]}]},
                    [{type,{560,7},
                           constraint,
                           [{atom,{560,7},is_subtype},
                            [{var,{560,7},'Index'},
                             {type,{560,16},pos_integer,[]}]]},
                     {type,{561,7},
                           constraint,
                           [{atom,{561,7},is_subtype},
                            [{var,{561,7},'Elements'},
                             {user_type,{561,19},tuple_elements,[]}]]}]]}]}}.
{function,
    {562,1},
    get_tuple_element,2,
    [{clause,
         {562,1},
         [{var,{562,1},'_'},{var,{562,1},'_'}],
         [[{call,
               {562,1},
               {remote,
                   {562,1},
                   {atom,{562,1},fake},
                   {atom,{562,1},is_beam_bif_info}},
               []}]],
         [{debug_line,562,207},{atom,{562,1},ignore}]},
     {clause,
         {562,1},
         [{var,{562,19},'Index'},{var,{562,26},'Es'}],
         [],
         [{debug_line,563,208},
          {'case',
              {563,5},
              {var,{563,10},'Es'},
              [{clause,
                   {564,9},
                   [{map,
                        {564,9},
                        [{map_field_exact,
                             {564,18},
                             {var,{564,12},'Index'},
                             {var,{564,21},'T'}}]}],
                   [],
                   [{debug_line,564,209},{var,{564,28},'T'}]},
               {clause,
                   {565,9},
                   [{map,{565,9},[]}],
                   [],
                   [{debug_line,565,210},{atom,{565,16},any}]}]}]}]}.
{attribute,
    {570,2},
    spec,
    {{update_tuple,2},
     [{type,
          {570,19},
          bounded_fun,
          [{type,
               {570,19},
               'fun',
               [{type,
                    {570,19},
                    product,
                    [{var,{570,20},'Type'},{var,{570,26},'Updates'}]},
                {var,{570,38},'Tuple'}]},
           [{type,
                {571,7},
                constraint,
                [{atom,{571,7},is_subtype},
                 [{var,{571,7},'Type'},{user_type,{571,15},type,[]}]]},
            {type,
                {572,7},
                constraint,
                [{atom,{572,7},is_subtype},
                 [{var,{572,7},'Updates'},
                  {type,
                      {572,18},
                      nonempty_list,
                      [{type,
                           {572,19},
                           tuple,
                           [{type,{572,20},pos_integer,[]},
                            {user_type,{572,35},type,[]}]}]}]]},
            {type,
                {573,7},
                constraint,
                [{atom,{573,7},is_subtype},
                 [{var,{573,7},'Tuple'},{user_type,{573,16},type,[]}]]}]]}]}}.
{function,
 {574,1},
 update_tuple,2,
 [{clause,
   {574,1},
   [{var,{574,1},'_'},{var,{574,1},'_'}],
   [[{call,
      {574,1},
      {remote,{574,1},{atom,{574,1},fake},{atom,{574,1},is_beam_bif_info}},
      []}]],
   [{debug_line,574,211},{atom,{574,1},ignore}]},
  {clause,
   {574,1},
   [{tuple,
     {574,14},
     [{atom,{574,14},t_union},
      {var,{574,14},'_'},
      {var,{574,14},'_'},
      {var,{574,14},'_'},
      {match,
       {574,33},
       {cons,{574,33},{var,{574,34},'_'},{var,{574,36},'_'}},
       {var,{574,39},'Set0'}},
      {var,{574,14},'_'}]},
    {match,
     {574,46},
     {cons,{574,46},{var,{574,47},'_'},{var,{574,49},'_'}},
     {var,{574,52},'Updates'}}],
   [],
   [{debug_line,575,212},
    {'case',
     {575,5},
     {var,{575,10},'Updates'},
     [{clause,
       {576,9},
       [{cons,
         {576,9},
         {tuple,{576,10},[{integer,{576,11},1},{var,{576,14},'_'}]},
         {var,{576,19},'_'}}],
       [],
       [{debug_line,579,213},
        {call,
         {579,13},
         {atom,{579,13},update_tuple},
         [{block,0,
           [{call,
             {579,26},
             {atom,{579,26},normalize_tuple_set},
             [{var,{579,46},'Set0'},{atom,{579,52},none}]}]},
          {var,{579,59},'Updates'}]}]},
      {clause,
       {580,9},
       [{cons,{580,9},{var,{580,10},'_'},{var,{580,12},'_'}}],
       [],
       [{debug_line,581,214},
        {'case',
         {581,13},
         {call,
          {581,18},
          {atom,{581,18},update_tuple_set},
          [{var,{581,35},'Set0'},{var,{581,41},'Updates'}]},
         [{clause,
           {582,17},
           [{nil,{582,17}}],
           [],
           [{debug_line,583,215},{atom,{583,21},none}]},
          {clause,
           {584,17},
           [{match,
             {584,17},
             {cons,{584,17},{var,{584,18},'_'},{var,{584,20},'_'}},
             {var,{584,23},'Set'}}],
           [],
           [{debug_line,585,216},
            {call,
             {585,21},
             {atom,{585,21},verified_type},
             [{block,0,
               [{call,
                 {585,35},
                 {atom,{585,35},shrink_union},
                 [{block,0,
                   [{tuple,
                     {585,48},
                     [{atom,{585,48},t_union},
                      {atom,{585,48},none},
                      {atom,{585,48},none},
                      {atom,{585,48},none},
                      {var,{585,67},'Set'},
                      {atom,{585,48},none}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {588,1},
   [{tuple,
     {588,14},
     [{atom,{588,14},t_union},
      {var,{588,14},'_'},
      {var,{588,14},'_'},
      {var,{588,14},'_'},
      {match,
       {588,33},
       {tuple,
        {588,33},
        [{atom,{588,33},t_tuple},
         {var,{588,33},'_'},
         {var,{588,33},'_'},
         {var,{588,33},'_'}]},
       {var,{588,44},'Tuple'}},
      {var,{588,14},'_'}]},
    {match,
     {588,52},
     {cons,{588,52},{var,{588,53},'_'},{var,{588,55},'_'}},
     {var,{588,58},'Updates'}}],
   [],
   [{debug_line,589,217},
    {call,
     {589,5},
     {atom,{589,5},update_tuple},
     [{var,{589,18},'Tuple'},{var,{589,25},'Updates'}]}]},
  {clause,
   {590,1},
   [{match,
     {590,14},
     {tuple,
      {590,14},
      [{atom,{590,14},t_tuple},
       {var,{591,28},'Size'},
       {var,{590,29},'Exact'},
       {var,{592,32},'Es0'}]},
     {var,{592,37},'Tuple'}},
    {match,
     {593,14},
     {cons,{593,14},{var,{593,15},'_'},{var,{593,17},'_'}},
     {var,{593,20},'Updates'}}],
   [],
   [{debug_line,594,218},
    {'case',
     {594,5},
     {call,
      {594,10},
      {atom,{594,10},update_tuple_1},
      [{var,{594,25},'Updates'},{var,{594,34},'Size'},{var,{594,40},'Es0'}]},
     [{clause,
       {595,9},
       [{tuple,{595,9},[{var,{595,10},'MinSize'},{var,{595,19},'_Es'}]}],
       [[{var,{595,29},'Exact'},
         {op,{595,44},'>',{var,{595,36},'MinSize'},{var,{595,46},'Size'}}]],
       [{debug_line,596,219},{atom,{596,13},none}]},
      {clause,
       {597,9},
       [{tuple,{597,9},[{var,{597,10},'MinSize'},{var,{597,19},'Es'}]}],
       [],
       [{debug_line,598,220},
        {call,
         {598,13},
         {atom,{598,13},verified_normal_type},
         [{block,0,
           [{block,
             {598,34},
             [{match,{598,34},{var,{598,34},rec18},{var,{598,34},'Tuple'}},
              {'case',
               {598,48},
               {var,{598,34},rec18},
               [{clause,
                 {598,48},
                 [{tuple,
                   {598,48},
                   [{atom,{598,48},t_tuple},
                    {var,{598,48},'_'},
                    {var,{598,48},'_'},
                    {var,{598,48},'_'}]}],
                 [],
                 [{call,
                   {598,48},
                   {remote,
                    {598,48},
                    {atom,{598,48},erlang},
                    {atom,{598,48},setelement}},
                   [{integer,{598,48},2},
                    {call,
                     {598,61},
                     {remote,
                      {598,61},
                      {atom,{598,61},erlang},
                      {atom,{598,61},setelement}},
                     [{integer,{598,61},4},
                      {var,{598,34},rec18},
                      {var,{598,70},'Es'}]},
                    {var,{598,53},'MinSize'}]}]},
                {clause,
                 [{generated,true},{location,{598,48}}],
                 [{var,[{generated,true},{location,{598,48}}],'_'}],
                 [],
                 [{call,
                   [{generated,true},{location,{598,48}}],
                   {remote,
                    [{generated,true},{location,{598,48}}],
                    {atom,[{generated,true},{location,{598,48}}],erlang},
                    {atom,[{generated,true},{location,{598,48}}],error}},
                   [{tuple,
                     [{generated,true},{location,{598,48}}],
                     [{atom,[{generated,true},{location,{598,48}}],badrecord},
                      {var,{598,34},rec18}]}]}]}]}]}]}]}]}]}]},
  {clause,
   {600,1},
   [{var,{600,14},'Type'},
    {match,
     {600,20},
     {cons,{600,20},{var,{600,21},'_'},{var,{600,23},'_'}},
     {var,{600,26},'Updates'}}],
   [],
   [{debug_line,601,221},
    {'case',
     {601,5},
     {call,
      {601,10},
      {atom,{601,10},meet},
      [{var,{601,15},'Type'},
       {block,0,
        [{tuple,
          {601,21},
          [{atom,{601,21},t_tuple},
           {integer,{601,35},1},
           {atom,{601,21},false},
           {map,{601,21},[]}]}]}]},
     [{clause,
       {602,9},
       [{atom,{602,9},none}],
       [],
       [{debug_line,602,222},{atom,{602,17},none}]},
      {clause,
       {603,9},
       [{var,{603,9},'Tuple'}],
       [],
       [{debug_line,603,223},
        {call,
         {603,18},
         {atom,{603,18},update_tuple},
         [{var,{603,31},'Tuple'},{var,{603,38},'Updates'}]}]}]}]}]}.
{function,
    {606,1},
    update_tuple_set,2,
    [{clause,
         {606,1},
         [{var,{606,1},'_'},{var,{606,1},'_'}],
         [[{call,
               {606,1},
               {remote,
                   {606,1},
                   {atom,{606,1},fake},
                   {atom,{606,1},is_beam_bif_info}},
               []}]],
         [{debug_line,606,224},{atom,{606,1},ignore}]},
     {clause,
         {606,1},
         [{cons,
              {606,18},
              {tuple,{606,19},[{var,{606,20},'Tag'},{var,{606,25},'Record0'}]},
              {var,{606,36},'Set'}},
          {var,{606,42},'Updates'}],
         [],
         [{debug_line,607,225},
          {'case',
              {607,5},
              {call,
                  {607,10},
                  {atom,{607,10},update_tuple},
                  [{var,{607,23},'Record0'},{var,{607,32},'Updates'}]},
              [{clause,
                   {608,9},
                   [{atom,{608,9},none}],
                   [],
                   [{debug_line,608,226},
                    {call,
                        {608,17},
                        {atom,{608,17},update_tuple_set},
                        [{var,{608,34},'Set'},{var,{608,39},'Updates'}]}]},
               {clause,
                   {609,9},
                   [{match,
                        {609,9},
                        {tuple,
                            {609,9},
                            [{atom,{609,9},t_tuple},
                             {var,{609,9},'_'},
                             {var,{609,9},'_'},
                             {var,{609,9},'_'}]},
                        {var,{609,20},'Record'}}],
                   [],
                   [{debug_line,609,227},
                    {cons,
                        {609,30},
                        {tuple,
                            {609,31},
                            [{var,{609,32},'Tag'},{var,{609,37},'Record'}]},
                        {call,
                            {609,47},
                            {atom,{609,47},update_tuple_set},
                            [{var,{609,64},'Set'},
                             {var,{609,69},'Updates'}]}}]}]}]},
     {clause,
         {611,1},
         [{nil,{611,18}},{var,{611,22},'_Es'}],
         [],
         [{debug_line,612,228},{nil,{612,5}}]}]}.
{function,
    {614,1},
    update_tuple_1,3,
    [{clause,
         {614,1},
         [{var,{614,1},'_'},{var,{614,1},'_'},{var,{614,1},'_'}],
         [[{call,
               {614,1},
               {remote,
                   {614,1},
                   {atom,{614,1},fake},
                   {atom,{614,1},is_beam_bif_info}},
               []}]],
         [{debug_line,614,229},{atom,{614,1},ignore}]},
     {clause,
         {614,1},
         [{cons,
              {614,16},
              {tuple,{614,17},[{var,{614,18},'Index'},{var,{614,25},'Type'}]},
              {var,{614,33},'Updates'}},
          {var,{614,43},'MinSize'},
          {var,{614,52},'Es0'}],
         [],
         [{debug_line,615,230},
          {match,
              {615,5},
              {var,{615,5},'Es'},
              {call,
                  {615,10},
                  {atom,{615,10},set_tuple_element},
                  [{var,{615,28},'Index'},
                   {var,{615,35},'Type'},
                   {var,{615,41},'Es0'}]}},
          {debug_line,616,231},
          {call,
              {616,5},
              {atom,{616,5},update_tuple_1},
              [{var,{616,20},'Updates'},
               {block,0,
                   [{call,
                        {616,29},
                        {remote,
                            {616,29},
                            {atom,{616,29},erlang},
                            {atom,{616,29},max}},
                        [{var,{616,33},'Index'},{var,{616,40},'MinSize'}]}]},
               {var,{616,50},'Es'}]}]},
     {clause,
         {617,1},
         [{nil,{617,16}},{var,{617,20},'MinSize'},{var,{617,29},'Es'}],
         [],
         [{debug_line,618,232},
          {tuple,{618,5},[{var,{618,6},'MinSize'},{var,{618,15},'Es'}]}]}]}.
{attribute,{620,2},
           spec,
           {{normalize,1},
            [{type,{620,16},
                   'fun',
                   [{type,{620,16},product,[{user_type,{620,17},type,[]}]},
                    {user_type,{620,28},normal_type,[]}]}]}}.
{function,{621,1},
          normalize,1,
          [{clause,{621,1},
                   [{var,{621,1},'_'}],
                   [[{call,{621,1},
                           {remote,{621,1},
                                   {atom,{621,1},fake},
                                   {atom,{621,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,621,233},{atom,{621,1},ignore}]},
           {clause,{621,1},
                   [{tuple,{621,11},
                           [{atom,{621,11},t_union},
                            {var,{621,25},'Atom'},
                            {var,{621,35},'List'},
                            {var,{621,47},'Number'},
                            {var,{622,30},'Tuples'},
                            {var,{622,43},'Other'}]}],
                   [],
                   [{debug_line,623,234},
                    {match,{623,5},
                           {var,{623,5},'A'},
                           {call,{623,9},
                                 {atom,{623,9},lub},
                                 [{var,{623,13},'Atom'},
                                  {var,{623,19},'List'}]}},
                    {debug_line,624,235},
                    {match,{624,5},
                           {var,{624,5},'B'},
                           {call,{624,9},
                                 {atom,{624,9},lub},
                                 [{var,{624,13},'A'},
                                  {var,{624,16},'Number'}]}},
                    {debug_line,625,236},
                    {match,{625,5},
                           {var,{625,5},'C'},
                           {call,{625,9},
                                 {atom,{625,9},lub},
                                 [{var,{625,13},'B'},{var,{625,16},'Other'}]}},
                    {debug_line,626,237},
                    {call,{626,5},
                          {atom,{626,5},normalize_tuple_set},
                          [{var,{626,25},'Tuples'},{var,{626,33},'C'}]}]},
           {clause,{627,1},
                   [{var,{627,11},'T'}],
                   [],
                   [{debug_line,628,238},
                    {call,{628,5},
                          {atom,{628,5},verified_normal_type},
                          [{var,{628,26},'T'}]}]}]}.
{function,
    {630,1},
    normalize_tuple_set,2,
    [{clause,
         {630,1},
         [{var,{630,1},'_'},{var,{630,1},'_'}],
         [[{call,
               {630,1},
               {remote,
                   {630,1},
                   {atom,{630,1},fake},
                   {atom,{630,1},is_beam_bif_info}},
               []}]],
         [{debug_line,630,239},{atom,{630,1},ignore}]},
     {clause,
         {630,1},
         [{cons,
              {630,21},
              {tuple,{630,22},[{var,{630,23},'_'},{var,{630,26},'A'}]},
              {var,{630,31},'Records'}},
          {var,{630,41},'B'}],
         [],
         [{debug_line,631,240},
          {call,
              {631,5},
              {atom,{631,5},normalize_tuple_set},
              [{var,{631,25},'Records'},
               {block,0,
                   [{call,
                        {631,34},
                        {atom,{631,34},lub},
                        [{var,{631,38},'A'},{var,{631,41},'B'}]}]}]}]},
     {clause,
         {632,1},
         [{nil,{632,21}},{var,{632,25},'B'}],
         [],
         [{debug_line,633,241},{var,{633,5},'B'}]},
     {clause,
         {634,1},
         [{var,{634,21},'A'},{var,{634,24},'B'}],
         [],
         [{debug_line,635,242},
          {call,
              {635,5},
              {atom,{635,5},lub},
              [{var,{635,9},'A'},{var,{635,12},'B'}]}]}]}.
{attribute,{641,2},
           spec,
           {{make_type_from_value,1},
            [{type,{641,27},
                   'fun',
                   [{type,{641,27},product,[{type,{641,28},term,[]}]},
                    {user_type,{641,39},type,[]}]}]}}.
{function,{642,1},
          make_type_from_value,1,
          [{clause,{642,1},
                   [{var,{642,1},'_'}],
                   [[{call,{642,1},
                           {remote,{642,1},
                                   {atom,{642,1},fake},
                                   {atom,{642,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,642,243},{atom,{642,1},ignore}]},
           {clause,{642,1},
                   [{var,{642,22},'Value'}],
                   [],
                   [{debug_line,643,244},
                    {call,{643,5},
                          {atom,{643,5},mtfv_1},
                          [{var,{643,12},'Value'}]}]}]}.
{function,
 {645,1},
 mtfv_1,1,
 [{clause,
   {645,1},
   [{var,{645,1},'_'}],
   [[{call,
      {645,1},
      {remote,{645,1},{atom,{645,1},fake},{atom,{645,1},is_beam_bif_info}},
      []}]],
   [{debug_line,645,245},{atom,{645,1},ignore}]},
  {clause,
   {645,1},
   [{var,{645,8},'A'}],
   [[{call,
      {645,16},
      {remote,{645,16},{atom,{645,16},erlang},{atom,{645,16},is_atom}},
      [{var,{645,24},'A'}]}]],
   [{debug_line,646,246},
    {tuple,
     {646,5},
     [{atom,{646,5},t_atom},
      {cons,{646,22},{var,{646,23},'A'},{nil,{646,24}}}]}]},
  {clause,
   {647,1},
   [{var,{647,8},'B'}],
   [[{call,
      {647,16},
      {remote,{647,16},{atom,{647,16},erlang},{atom,{647,16},is_bitstring}},
      [{var,{647,29},'B'}]}]],
   [{debug_line,648,247},
    {'case',
     {648,5},
     {call,
      {648,10},
      {remote,{648,10},{atom,{648,10},erlang},{atom,{648,10},bit_size}},
      [{var,{648,19},'B'}]},
     [{clause,
       {649,9},
       [{integer,{649,9},0}],
       [],
       [{debug_line,652,248},
        {tuple,
         {652,13},
         [{atom,{652,13},t_bitstring},
          {integer,{652,36},256},
          {atom,{652,51},true}]}]},
      {clause,
       {653,9},
       [{var,{653,9},'Size'}],
       [],
       [{debug_line,654,249},
        {tuple,
         {654,13},
         [{atom,{654,13},t_bitstring},
          {call,
           {654,36},
           {atom,{654,36},gcd},
           [{var,{654,40},'Size'},{integer,{654,46},256}]},
          {atom,{654,13},false}]}]}]}]},
  {clause,
   {656,1},
   [{var,{656,8},'F'}],
   [[{call,
      {656,16},
      {remote,{656,16},{atom,{656,16},erlang},{atom,{656,16},is_float}},
      [{var,{656,25},'F'}]}]],
   [{debug_line,657,250},
    {call,{657,5},{atom,{657,5},make_float},[{var,{657,16},'F'}]}]},
  {clause,
   {658,1},
   [{var,{658,8},'F'}],
   [[{call,
      {658,16},
      {remote,{658,16},{atom,{658,16},erlang},{atom,{658,16},is_function}},
      [{var,{658,28},'F'}]}]],
   [{debug_line,659,251},
    {match,
     {659,5},
     {tuple,{659,5},[{atom,{659,6},arity},{var,{659,13},'Arity'}]},
     {call,
      {659,22},
      {remote,{659,28},{atom,{659,22},erlang},{atom,{659,29},fun_info}},
      [{var,{659,38},'F'},{atom,{659,41},arity}]}},
    {debug_line,660,252},
    {tuple,
     {660,5},
     [{atom,{660,5},t_fun},
      {var,{660,18},'Arity'},
      {atom,{660,5},any},
      {atom,{660,5},any}]}]},
  {clause,
   {661,1},
   [{var,{661,8},'I'}],
   [[{call,
      {661,16},
      {remote,{661,16},{atom,{661,16},erlang},{atom,{661,16},is_integer}},
      [{var,{661,27},'I'}]}]],
   [{debug_line,662,253},
    {call,{662,5},{atom,{662,5},make_integer},[{var,{662,18},'I'}]}]},
  {clause,
   {663,1},
   [{var,{663,8},'L'}],
   [[{call,
      {663,16},
      {remote,{663,16},{atom,{663,16},erlang},{atom,{663,16},is_list}},
      [{var,{663,24},'L'}]}]],
   [{debug_line,664,254},
    {'case',
     {664,5},
     {var,{664,10},'L'},
     [{clause,
       {665,9},
       [{cons,{665,9},{var,{665,10},'_'},{var,{665,12},'_'}}],
       [],
       [{debug_line,665,255},
        {call,
         {665,18},
         {atom,{665,18},mtfv_cons},
         [{var,{665,28},'L'},{atom,{665,31},none}]}]},
      {clause,
       {666,9},
       [{nil,{666,9}}],
       [],
       [{debug_line,666,256},{atom,{666,15},nil}]}]}]},
  {clause,
   {668,1},
   [{var,{668,8},'M'}],
   [[{call,
      {668,16},
      {remote,{668,16},{atom,{668,16},erlang},{atom,{668,16},is_map}},
      [{var,{668,23},'M'}]}]],
   [{debug_line,669,257},
    {match,
     {669,5},
     {tuple,{669,5},[{var,{669,6},'SKey'},{var,{669,12},'SValue'}]},
     {call,
      {670,9},
      {remote,{670,13},{atom,{670,9},maps},{atom,{670,14},fold}},
      [{block,0,
        [{debug_line,670,258},
         {'fun',
          {670,19},
          {clauses,
           [{clause,
             {670,22},
             [{var,{670,23},'Key'},
              {var,{670,28},'Value'},
              {tuple,
               {670,35},
               [{var,{670,36},'SKey0'},{var,{670,43},'SValue0'}]}],
             [],
             [{debug_line,671,259},
              {match,
               {671,27},
               {var,{671,27},'SKey'},
               {call,
                {671,34},
                {atom,{671,34},join},
                [{block,0,
                  [{call,
                    {671,39},
                    {atom,{671,39},mtfv_1},
                    [{var,{671,46},'Key'}]}]},
                 {var,{671,52},'SKey0'}]}},
              {debug_line,672,260},
              {match,
               {672,27},
               {var,{672,27},'SValue'},
               {call,
                {672,36},
                {atom,{672,36},join},
                [{block,0,
                  [{call,
                    {672,41},
                    {atom,{672,41},mtfv_1},
                    [{var,{672,48},'Value'}]}]},
                 {var,{672,56},'SValue0'}]}},
              {debug_line,673,261},
              {tuple,
               {673,27},
               [{var,{673,28},'SKey'},{var,{673,34},'SValue'}]}]}]}}]},
       {block,0,
        [{debug_line,674,262},
         {tuple,{674,24},[{atom,{674,25},none},{atom,{674,31},none}]}]},
       {var,{674,38},'M'}]}},
    {debug_line,675,263},
    {tuple,
     {675,5},
     [{atom,{675,5},t_map},{var,{675,22},'SKey'},{var,{675,39},'SValue'}]}]},
  {clause,
   {676,1},
   [{var,{676,8},'T'}],
   [[{call,
      {676,16},
      {remote,{676,16},{atom,{676,16},erlang},{atom,{676,16},is_tuple}},
      [{var,{676,25},'T'}]}]],
   [{debug_line,677,264},
    {match,
     {677,5},
     {tuple,{677,5},[{var,{677,6},'Es'},{var,{677,9},'_'}]},
     {call,
      {677,14},
      {remote,{677,14},{atom,{677,14},lists},{atom,{677,14},foldl}},
      [{block,0,
        [{'fun',
          {677,20},
          {clauses,
           [{clause,
             {677,23},
             [{var,{677,24},'Val'},
              {tuple,{677,29},[{var,{677,30},'Es0'},{var,{677,35},'Index'}]}],
             [],
             [{debug_line,678,265},
              {match,
               {678,28},
               {var,{678,28},'Type'},
               {call,{678,35},{atom,{678,35},mtfv_1},[{var,{678,42},'Val'}]}},
              {debug_line,679,266},
              {match,
               {679,28},
               {var,{679,28},'Es'},
               {call,
                {679,33},
                {atom,{679,33},set_tuple_element},
                [{var,{679,51},'Index'},
                 {var,{679,58},'Type'},
                 {var,{679,64},'Es0'}]}},
              {debug_line,680,267},
              {tuple,
               {680,28},
               [{var,{680,29},'Es'},
                {op,
                 {680,39},
                 '+',
                 {var,{680,33},'Index'},
                 {integer,{680,41},1}}]}]}]}}]},
       {block,0,
        [{debug_line,681,268},
         {tuple,{681,25},[{map,{681,26},[]},{integer,{681,31},1}]}]},
       {block,0,
        [{call,
          {681,35},
          {remote,
           {681,35},
           {atom,{681,35},erlang},
           {atom,{681,35},tuple_to_list}},
          [{var,{681,49},'T'}]}]}]}},
    {debug_line,682,269},
    {tuple,
     {682,5},
     [{atom,{682,5},t_tuple},
      {call,
       {682,30},
       {remote,{682,30},{atom,{682,30},erlang},{atom,{682,30},tuple_size}},
       [{var,{682,41},'T'}]},
      {atom,{682,20},true},
      {var,{682,53},'Es'}]}]},
  {clause,
   {683,1},
   [{var,{683,8},'_Term'}],
   [],
   [{debug_line,684,270},{atom,{684,5},any}]}]}.
{function,
    {686,1},
    mtfv_cons,2,
    [{clause,
         {686,1},
         [{var,{686,1},'_'},{var,{686,1},'_'}],
         [[{call,
               {686,1},
               {remote,
                   {686,1},
                   {atom,{686,1},fake},
                   {atom,{686,1},is_beam_bif_info}},
               []}]],
         [{debug_line,686,271},{atom,{686,1},ignore}]},
     {clause,
         {686,1},
         [{cons,{686,11},{var,{686,12},'Head'},{var,{686,19},'Tail'}},
          {var,{686,26},'Type'}],
         [],
         [{debug_line,687,272},
          {call,
              {687,5},
              {atom,{687,5},mtfv_cons},
              [{var,{687,15},'Tail'},
               {block,0,
                   [{call,
                        {687,21},
                        {atom,{687,21},join},
                        [{block,0,
                             [{call,
                                  {687,26},
                                  {atom,{687,26},mtfv_1},
                                  [{var,{687,33},'Head'}]}]},
                         {var,{687,40},'Type'}]}]}]}]},
     {clause,
         {688,1},
         [{var,{688,11},'Terminator'},{var,{688,23},'Type'}],
         [],
         [{debug_line,689,273},
          {tuple,
              {689,5},
              [{atom,{689,5},t_cons},
               {var,{689,18},'Type'},
               {call,
                   {689,34},
                   {atom,{689,34},mtfv_1},
                   [{var,{689,41},'Terminator'}]}]}]}]}.
{attribute,{691,2},
           spec,
           {{make_atom,1},
            [{type,{691,16},
                   'fun',
                   [{type,{691,16},product,[{type,{691,17},atom,[]}]},
                    {user_type,{691,28},type,[]}]}]}}.
{function,{692,1},
          make_atom,1,
          [{clause,{692,1},
                   [{var,{692,1},'_'}],
                   [[{call,{692,1},
                           {remote,{692,1},
                                   {atom,{692,1},fake},
                                   {atom,{692,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,692,274},{atom,{692,1},ignore}]},
           {clause,{692,1},
                   [{var,{692,11},'Atom'}],
                   [[{call,{692,22},
                           {remote,{692,22},
                                   {atom,{692,22},erlang},
                                   {atom,{692,22},is_atom}},
                           [{var,{692,30},'Atom'}]}]],
                   [{debug_line,693,275},
                    {tuple,{693,5},
                           [{atom,{693,5},t_atom},
                            {cons,{693,22},
                                  {var,{693,23},'Atom'},
                                  {nil,{693,27}}}]}]}]}.
{attribute,{695,2},
           spec,
           {{make_boolean,0},
            [{type,{695,19},
                   'fun',
                   [{type,{695,19},product,[]},
                    {user_type,{695,25},type,[]}]}]}}.
{function,
    {696,1},
    make_boolean,0,
    [{clause,
         {696,1},
         [],
         [[{call,
               {696,1},
               {remote,
                   {696,1},
                   {atom,{696,1},fake},
                   {atom,{696,1},is_beam_bif_info}},
               []}]],
         [{debug_line,696,276},{atom,{696,1},ignore}]},
     {clause,
         {696,1},
         [],[],
         [{debug_line,697,277},
          {tuple,
              {697,5},
              [{atom,{697,5},t_atom},
               {cons,
                   {697,22},
                   {atom,{697,23},false},
                   {cons,{697,29},{atom,{697,29},true},{nil,{697,33}}}}]}]}]}.
{attribute,{699,2},
           spec,
           {{make_cons,2},
            [{type,{699,16},
                   'fun',
                   [{type,{699,16},
                          product,
                          [{user_type,{699,17},type,[]},
                           {user_type,{699,25},type,[]}]},
                    {user_type,{699,36},type,[]}]}]}}.
{function,
 {700,1},
 make_cons,2,
 [{clause,
   {700,1},
   [{var,{700,1},'_'},{var,{700,1},'_'}],
   [[{call,
      {700,1},
      {remote,{700,1},{atom,{700,1},fake},{atom,{700,1},is_beam_bif_info}},
      []}]],
   [{debug_line,700,278},{atom,{700,1},ignore}]},
  {clause,
   {700,1},
   [{var,{700,11},'Head0'},{var,{700,18},'Tail'}],
   [],
   [{debug_line,701,279},
    {'case',
     {701,5},
     {call,
      {701,10},
      {atom,{701,10},meet},
      [{var,{701,15},'Tail'},
       {block,0,
        [{tuple,
          {701,21},
          [{atom,{701,21},t_cons},
           {atom,{701,21},any},
           {atom,{701,21},any}]}]}]},
     [{clause,
       {702,9},
       [{tuple,
         {702,9},
         [{atom,{702,9},t_cons},
          {var,{702,22},'Type0'},
          {var,{702,39},'Term0'}]}],
       [],
       [{debug_line,706,280},
        {match,
         {706,13},
         {var,{706,13},'Type'},
         {call,
          {706,20},
          {atom,{706,20},join},
          [{var,{706,25},'Head0'},{var,{706,32},'Type0'}]}},
        {debug_line,707,281},
        {match,
         {707,13},
         {var,{707,13},'Term'},
         {call,
          {707,20},
          {atom,{707,20},join},
          [{block,0,
            [{call,
              {707,25},
              {atom,{707,25},subtract},
              [{var,{707,34},'Tail'},
               {block,0,
                [{tuple,
                  {707,40},
                  [{atom,{707,40},t_cons},
                   {atom,{707,40},any},
                   {atom,{707,40},any}]}]}]}]},
           {var,{707,52},'Term0'}]}},
        {debug_line,708,282},
        {tuple,
         {708,13},
         [{atom,{708,13},t_cons},
          {var,{708,26},'Type'},
          {var,{708,42},'Term'}]}]},
      {clause,
       {709,9},
       [{var,{709,9},'_'}],
       [],
       [{debug_line,711,283},
        {tuple,
         {711,13},
         [{atom,{711,13},t_cons},
          {var,{711,26},'Head0'},
          {var,{711,43},'Tail'}]}]}]}]}]}.
{attribute,{714,2},
           spec,
           {{make_float,1},
            [{type,{714,17},
                   'fun',
                   [{type,{714,17},product,[{type,{714,18},float,[]}]},
                    {user_type,{714,30},type,[]}]}]}}.
{function,{715,1},
          make_float,1,
          [{clause,{715,1},
                   [{var,{715,1},'_'}],
                   [[{call,{715,1},
                           {remote,{715,1},
                                   {atom,{715,1},fake},
                                   {atom,{715,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,715,284},{atom,{715,1},ignore}]},
           {clause,{715,1},
                   [{var,{715,12},'Float'}],
                   [[{call,{715,24},
                           {remote,{715,24},
                                   {atom,{715,24},erlang},
                                   {atom,{715,24},is_float}},
                           [{var,{715,33},'Float'}]}]],
                   [{debug_line,716,285},
                    {tuple,{716,5},
                           [{atom,{716,5},t_float},
                            {tuple,{716,23},
                                   [{var,{716,24},'Float'},
                                    {var,{716,30},'Float'}]}]}]}]}.
{attribute,{718,2},
           spec,
           {{make_integer,1},
            [{type,{718,19},
                   'fun',
                   [{type,{718,19},product,[{type,{718,20},integer,[]}]},
                    {user_type,{718,34},type,[]}]}]}}.
{function,{719,1},
          make_integer,1,
          [{clause,{719,1},
                   [{var,{719,1},'_'}],
                   [[{call,{719,1},
                           {remote,{719,1},
                                   {atom,{719,1},fake},
                                   {atom,{719,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,719,286},{atom,{719,1},ignore}]},
           {clause,{719,1},
                   [{var,{719,14},'Int'}],
                   [[{call,{719,24},
                           {remote,{719,24},
                                   {atom,{719,24},erlang},
                                   {atom,{719,24},is_integer}},
                           [{var,{719,35},'Int'}]}]],
                   [{debug_line,720,287},
                    {call,{720,5},
                          {atom,{720,5},make_integer},
                          [{var,{720,18},'Int'},{var,{720,23},'Int'}]}]}]}.
{attribute,{722,2},
           spec,
           {{make_integer,2},
            [{type,{722,19},
                   bounded_fun,
                   [{type,{722,19},
                          'fun',
                          [{type,{722,19},
                                 product,
                                 [{var,{722,20},'Min'},{var,{722,25},'Max'}]},
                           {user_type,{722,33},type,[]}]},
                    [{type,{723,7},
                           constraint,
                           [{atom,{723,7},is_subtype},
                            [{var,{723,7},'Min'},{type,{723,14},integer,[]}]]},
                     {type,{724,7},
                           constraint,
                           [{atom,{724,7},is_subtype},
                            [{var,{724,7},'Max'},
                             {type,{724,14},integer,[]}]]}]]}]}}.
{function,{725,1},
          make_integer,2,
          [{clause,{725,1},
                   [{var,{725,1},'_'},{var,{725,1},'_'}],
                   [[{call,{725,1},
                           {remote,{725,1},
                                   {atom,{725,1},fake},
                                   {atom,{725,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,725,288},{atom,{725,1},ignore}]},
           {clause,{725,1},
                   [{var,{725,14},'Min'},{var,{725,19},'Max'}],
                   [[{call,{725,29},
                           {remote,{725,29},
                                   {atom,{725,29},erlang},
                                   {atom,{725,29},is_integer}},
                           [{var,{725,40},'Min'}]},
                     {call,{725,46},
                           {remote,{725,46},
                                   {atom,{725,46},erlang},
                                   {atom,{725,46},is_integer}},
                           [{var,{725,57},'Max'}]},
                     {op,{725,67},
                         '=<',
                         {var,{725,63},'Min'},
                         {var,{725,70},'Max'}}]],
                   [{debug_line,726,289},
                    {tuple,{726,5},
                           [{atom,{726,5},t_integer},
                            {tuple,{726,25},
                                   [{var,{726,26},'Min'},
                                    {var,{726,30},'Max'}]}]}]}]}.
{attribute,{728,2},
           spec,
           {{limit_depth,1},
            [{type,{728,18},
                   'fun',
                   [{type,{728,18},product,[{user_type,{728,19},type,[]}]},
                    {user_type,{728,30},type,[]}]}]}}.
{function,{730,1},
          limit_depth,1,
          [{clause,{730,1},
                   [{var,{730,1},'_'}],
                   [[{call,{730,1},
                           {remote,{730,1},
                                   {atom,{730,1},fake},
                                   {atom,{730,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,730,290},{atom,{730,1},ignore}]},
           {clause,{730,1},
                   [{var,{730,13},'Type'}],
                   [],
                   [{debug_line,731,291},
                    {call,{731,5},
                          {atom,{731,5},limit_depth},
                          [{var,{731,17},'Type'},{integer,{731,24},4}]}]}]}.
{attribute,{733,2},
           spec,
           {{limit_depth,2},
            [{type,{733,18},
                   'fun',
                   [{type,{733,18},
                          product,
                          [{user_type,{733,19},type,[]},
                           {type,{733,27},non_neg_integer,[]}]},
                    {user_type,{733,49},type,[]}]}]}}.
{function,
 {735,1},
 limit_depth,2,
 [{clause,
   {735,1},
   [{var,{735,1},'_'},{var,{735,1},'_'}],
   [[{call,
      {735,1},
      {remote,{735,1},{atom,{735,1},fake},{atom,{735,1},is_beam_bif_info}},
      []}]],
   [{debug_line,735,292},{atom,{735,1},ignore}]},
  {clause,
   {735,1},
   [{match,
     {735,13},
     {tuple,
      {735,13},
      [{atom,{735,13},t_cons},{var,{735,13},'_'},{var,{735,13},'_'}]},
     {var,{735,23},'T'}},
    {var,{735,26},'Depth'}],
   [],
   [{debug_line,736,293},
    {call,
     {736,5},
     {atom,{736,5},limit_depth_list},
     [{var,{736,22},'T'},{var,{736,25},'Depth'}]}]},
  {clause,
   {737,1},
   [{match,
     {737,13},
     {tuple,
      {737,13},
      [{atom,{737,13},t_list},{var,{737,13},'_'},{var,{737,13},'_'}]},
     {var,{737,23},'T'}},
    {var,{737,26},'Depth'}],
   [],
   [{debug_line,738,294},
    {call,
     {738,5},
     {atom,{738,5},limit_depth_list},
     [{var,{738,22},'T'},{var,{738,25},'Depth'}]}]},
  {clause,
   {739,1},
   [{match,
     {739,13},
     {tuple,
      {739,13},
      [{atom,{739,13},t_tuple},
       {var,{739,13},'_'},
       {var,{739,13},'_'},
       {var,{739,13},'_'}]},
     {var,{739,24},'T'}},
    {var,{739,27},'Depth'}],
   [],
   [{debug_line,740,295},
    {call,
     {740,5},
     {atom,{740,5},limit_depth_tuple},
     [{var,{740,23},'T'},{var,{740,26},'Depth'}]}]},
  {clause,
   {741,1},
   [{match,
     {741,13},
     {tuple,
      {741,13},
      [{atom,{741,13},t_fun},
       {var,{741,13},'_'},
       {var,{741,13},'_'},
       {var,{741,13},'_'}]},
     {var,{741,22},'T'}},
    {var,{741,25},'Depth'}],
   [],
   [{debug_line,742,296},
    {call,
     {742,5},
     {atom,{742,5},limit_depth_fun},
     [{var,{742,21},'T'},{var,{742,24},'Depth'}]}]},
  {clause,
   {743,1},
   [{match,
     {743,13},
     {tuple,
      {743,13},
      [{atom,{743,13},t_map},{var,{743,13},'_'},{var,{743,13},'_'}]},
     {var,{743,22},'T'}},
    {var,{743,25},'Depth'}],
   [],
   [{debug_line,744,297},
    {call,
     {744,5},
     {atom,{744,5},limit_depth_map},
     [{var,{744,21},'T'},{var,{744,24},'Depth'}]}]},
  {clause,
   {745,1},
   [{match,
     {745,13},
     {tuple,
      {745,13},
      [{atom,{745,13},t_union},
       {var,{745,13},'_'},
       {var,{745,27},'List0'},
       {var,{745,13},'_'},
       {var,{745,43},'TupleSet0'},
       {var,{745,59},'Other0'}]},
     {var,{745,67},'U'}},
    {var,{745,70},'Depth'}],
   [],
   [{debug_line,746,298},
    {match,
     {746,5},
     {var,{746,5},'TupleSet'},
     {call,
      {746,16},
      {atom,{746,16},limit_depth_tuple},
      [{var,{746,34},'TupleSet0'},{var,{746,45},'Depth'}]}},
    {debug_line,747,299},
    {match,
     {747,5},
     {var,{747,5},'List'},
     {call,
      {747,12},
      {atom,{747,12},limit_depth_list},
      [{var,{747,29},'List0'},{var,{747,36},'Depth'}]}},
    {debug_line,748,300},
    {match,
     {748,5},
     {var,{748,5},'Other'},
     {call,
      {748,13},
      {atom,{748,13},limit_depth},
      [{var,{748,25},'Other0'},{var,{748,33},'Depth'}]}},
    {debug_line,749,301},
    {call,
     {749,5},
     {atom,{749,5},shrink_union},
     [{block,0,
       [{block,
         {749,18},
         [{match,{749,18},{var,{749,18},rec19},{var,{749,18},'U'}},
          {'case',
           {749,28},
           {var,{749,18},rec19},
           [{clause,
             {749,28},
             [{tuple,
               {749,28},
               [{atom,{749,28},t_union},
                {var,{749,28},'_'},
                {var,{749,28},'_'},
                {var,{749,28},'_'},
                {var,{749,28},'_'},
                {var,{749,28},'_'}]}],
             [],
             [{call,
               {749,28},
               {remote,
                {749,28},
                {atom,{749,28},erlang},
                {atom,{749,28},setelement}},
               [{integer,{749,28},3},
                {call,
                 {749,38},
                 {remote,
                  {749,38},
                  {atom,{749,38},erlang},
                  {atom,{749,38},setelement}},
                 [{integer,{749,38},5},
                  {call,
                   {749,57},
                   {remote,
                    {749,57},
                    {atom,{749,57},erlang},
                    {atom,{749,57},setelement}},
                   [{integer,{749,57},6},
                    {var,{749,18},rec19},
                    {var,{749,63},'Other'}]},
                  {var,{749,48},'TupleSet'}]},
                {var,{749,33},'List'}]}]},
            {clause,
             [{generated,true},{location,{749,28}}],
             [{var,[{generated,true},{location,{749,28}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{749,28}}],
               {remote,
                [{generated,true},{location,{749,28}}],
                {atom,[{generated,true},{location,{749,28}}],erlang},
                {atom,[{generated,true},{location,{749,28}}],error}},
               [{tuple,
                 [{generated,true},{location,{749,28}}],
                 [{atom,[{generated,true},{location,{749,28}}],badrecord},
                  {var,{749,18},rec19}]}]}]}]}]}]}]}]},
  {clause,
   {750,1},
   [{var,{750,13},'Type'},{var,{750,19},'_Depth'}],
   [],
   [{debug_line,751,302},{var,{751,5},'Type'}]}]}.
{function,
    {753,1},
    limit_depth_fun,2,
    [{clause,
         {753,1},
         [{var,{753,1},'_'},{var,{753,1},'_'}],
         [[{call,
               {753,1},
               {remote,
                   {753,1},
                   {atom,{753,1},fake},
                   {atom,{753,1},is_beam_bif_info}},
               []}]],
         [{debug_line,753,303},{atom,{753,1},ignore}]},
     {clause,
         {753,1},
         [{match,
              {753,17},
              {tuple,
                  {753,17},
                  [{atom,{753,17},t_fun},
                   {var,{753,17},'_'},
                   {var,{753,17},'_'},
                   {var,{753,29},'Type0'}]},
              {var,{753,36},'T'}},
          {var,{753,39},'Depth'}],
         [],
         [{debug_line,754,304},
          {match,
              {754,5},
              {var,{754,5},'Type'},
              {'if',
                  {754,12},
                  [{clause,
                       {755,16},
                       [],
                       [[{op,{755,22},
                             '>',
                             {var,{755,16},'Depth'},
                             {integer,{755,24},0}}]],
                       [{debug_line,755,305},
                        {call,
                            {755,29},
                            {atom,{755,29},limit_depth},
                            [{var,{755,41},'Type0'},
                             {block,0,
                                 [{op,{755,54},
                                      '-',
                                      {var,{755,48},'Depth'},
                                      {integer,{755,56},1}}]}]}]},
                   {clause,
                       {756,16},
                       [],
                       [[{op,{756,22},
                             '=<',
                             {var,{756,16},'Depth'},
                             {integer,{756,25},0}}]],
                       [{debug_line,756,306},{atom,{756,30},any}]}]}},
          {debug_line,758,307},
          {block,
              {758,5},
              [{match,{758,5},{var,{758,5},rec20},{var,{758,5},'T'}},
               {'case',
                   {758,13},
                   {var,{758,5},rec20},
                   [{clause,
                        {758,13},
                        [{tuple,
                             {758,13},
                             [{atom,{758,13},t_fun},
                              {var,{758,13},'_'},
                              {var,{758,13},'_'},
                              {var,{758,13},'_'}]}],
                        [],
                        [{call,
                             {758,13},
                             {remote,
                                 {758,13},
                                 {atom,{758,13},erlang},
                                 {atom,{758,13},setelement}},
                             [{integer,{758,13},4},
                              {var,{758,5},rec20},
                              {var,{758,18},'Type'}]}]},
                    {clause,
                        [{generated,true},{location,{758,13}}],
                        [{var,[{generated,true},{location,{758,13}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{758,13}}],
                             {remote,
                                 [{generated,true},{location,{758,13}}],
                                 {atom,
                                     [{generated,true},{location,{758,13}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{758,13}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{758,13}}],
                                  [{atom,
                                       [{generated,true},{location,{758,13}}],
                                       badrecord},
                                   {var,{758,5},rec20}]}]}]}]}]}]}]}.
{function,
    {760,1},
    limit_depth_list,2,
    [{clause,
         {760,1},
         [{var,{760,1},'_'},{var,{760,1},'_'}],
         [[{call,
               {760,1},
               {remote,
                   {760,1},
                   {atom,{760,1},fake},
                   {atom,{760,1},is_beam_bif_info}},
               []}]],
         [{debug_line,760,308},{atom,{760,1},ignore}]},
     {clause,
         {760,1},
         [{match,
              {760,18},
              {tuple,
                  {760,18},
                  [{atom,{760,18},t_cons},
                   {var,{760,31},'Type0'},
                   {var,{760,48},'Term0'}]},
              {var,{760,55},'T'}},
          {var,{760,58},'Depth'}],
         [],
         [{debug_line,761,309},
          {match,
              {761,5},
              {tuple,{761,5},[{var,{761,6},'Type'},{var,{761,12},'Term'}]},
              {call,
                  {761,20},
                  {atom,{761,20},limit_depth_list_1},
                  [{var,{761,39},'Type0'},
                   {var,{761,46},'Term0'},
                   {var,{761,53},'Depth'}]}},
          {debug_line,762,310},
          {block,
              {762,5},
              [{match,{762,5},{var,{762,5},rec21},{var,{762,5},'T'}},
               {'case',
                   {762,14},
                   {var,{762,5},rec21},
                   [{clause,
                        {762,14},
                        [{tuple,
                             {762,14},
                             [{atom,{762,14},t_cons},
                              {var,{762,14},'_'},
                              {var,{762,14},'_'}]}],
                        [],
                        [{call,
                             {762,14},
                             {remote,
                                 {762,14},
                                 {atom,{762,14},erlang},
                                 {atom,{762,14},setelement}},
                             [{integer,{762,14},2},
                              {call,
                                  {762,24},
                                  {remote,
                                      {762,24},
                                      {atom,{762,24},erlang},
                                      {atom,{762,24},setelement}},
                                  [{integer,{762,24},3},
                                   {var,{762,5},rec21},
                                   {var,{762,35},'Term'}]},
                              {var,{762,19},'Type'}]}]},
                    {clause,
                        [{generated,true},{location,{762,14}}],
                        [{var,[{generated,true},{location,{762,14}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{762,14}}],
                             {remote,
                                 [{generated,true},{location,{762,14}}],
                                 {atom,
                                     [{generated,true},{location,{762,14}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{762,14}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{762,14}}],
                                  [{atom,
                                       [{generated,true},{location,{762,14}}],
                                       badrecord},
                                   {var,{762,5},rec21}]}]}]}]}]}]},
     {clause,
         {763,1},
         [{match,
              {763,18},
              {tuple,
                  {763,18},
                  [{atom,{763,18},t_list},
                   {var,{763,31},'Type0'},
                   {var,{763,48},'Term0'}]},
              {var,{763,55},'T'}},
          {var,{763,58},'Depth'}],
         [],
         [{debug_line,764,311},
          {match,
              {764,5},
              {tuple,{764,5},[{var,{764,6},'Type'},{var,{764,12},'Term'}]},
              {call,
                  {764,20},
                  {atom,{764,20},limit_depth_list_1},
                  [{var,{764,39},'Type0'},
                   {var,{764,46},'Term0'},
                   {var,{764,53},'Depth'}]}},
          {debug_line,765,312},
          {block,
              {765,5},
              [{match,{765,5},{var,{765,5},rec22},{var,{765,5},'T'}},
               {'case',
                   {765,14},
                   {var,{765,5},rec22},
                   [{clause,
                        {765,14},
                        [{tuple,
                             {765,14},
                             [{atom,{765,14},t_list},
                              {var,{765,14},'_'},
                              {var,{765,14},'_'}]}],
                        [],
                        [{call,
                             {765,14},
                             {remote,
                                 {765,14},
                                 {atom,{765,14},erlang},
                                 {atom,{765,14},setelement}},
                             [{integer,{765,14},2},
                              {call,
                                  {765,24},
                                  {remote,
                                      {765,24},
                                      {atom,{765,24},erlang},
                                      {atom,{765,24},setelement}},
                                  [{integer,{765,24},3},
                                   {var,{765,5},rec22},
                                   {var,{765,35},'Term'}]},
                              {var,{765,19},'Type'}]}]},
                    {clause,
                        [{generated,true},{location,{765,14}}],
                        [{var,[{generated,true},{location,{765,14}}],'_'}],
                        [],
                        [{call,
                             [{generated,true},{location,{765,14}}],
                             {remote,
                                 [{generated,true},{location,{765,14}}],
                                 {atom,
                                     [{generated,true},{location,{765,14}}],
                                     erlang},
                                 {atom,
                                     [{generated,true},{location,{765,14}}],
                                     error}},
                             [{tuple,
                                  [{generated,true},{location,{765,14}}],
                                  [{atom,
                                       [{generated,true},{location,{765,14}}],
                                       badrecord},
                                   {var,{765,5},rec22}]}]}]}]}]}]},
     {clause,
         {766,1},
         [{atom,{766,18},nil},{var,{766,23},'_Depth'}],
         [],
         [{debug_line,767,313},{atom,{767,5},nil}]},
     {clause,
         {768,1},
         [{atom,{768,18},none},{var,{768,24},'_Depth'}],
         [],
         [{debug_line,769,314},{atom,{769,5},none}]}]}.
{function,
    {771,1},
    limit_depth_list_1,3,
    [{clause,
         {771,1},
         [{var,{771,1},'_'},{var,{771,1},'_'},{var,{771,1},'_'}],
         [[{call,
               {771,1},
               {remote,
                   {771,1},
                   {atom,{771,1},fake},
                   {atom,{771,1},is_beam_bif_info}},
               []}]],
         [{debug_line,771,315},{atom,{771,1},ignore}]},
     {clause,
         {771,1},
         [{var,{771,20},'Type0'},
          {var,{771,27},'Terminator0'},
          {var,{771,40},'Depth'}],
         [[{op,{771,58},'>',{var,{771,52},'Depth'},{integer,{771,60},0}}]],
         [{debug_line,772,316},
          {match,
              {772,5},
              {var,{772,5},'Type'},
              {call,
                  {772,12},
                  {atom,{772,12},limit_depth},
                  [{var,{772,24},'Type0'},
                   {block,0,
                       [{op,{772,37},
                            '-',
                            {var,{772,31},'Depth'},
                            {integer,{772,39},1}}]}]}},
          {debug_line,773,317},
          {match,
              {773,5},
              {var,{773,5},'Terminator'},
              {call,
                  {773,18},
                  {atom,{773,18},limit_depth},
                  [{var,{773,30},'Terminator0'},
                   {block,0,
                       [{op,{773,49},
                            '-',
                            {var,{773,43},'Depth'},
                            {integer,{773,51},1}}]}]}},
          {debug_line,774,318},
          {tuple,{774,5},[{var,{774,6},'Type'},{var,{774,12},'Terminator'}]}]},
     {clause,
         {775,1},
         [{var,{775,20},'_Type'},
          {var,{775,27},'_Terminator'},
          {var,{775,40},'Depth'}],
         [[{op,{775,58},'=<',{var,{775,52},'Depth'},{integer,{775,61},0}}]],
         [{debug_line,776,319},
          {tuple,{776,5},[{atom,{776,6},any},{atom,{776,11},any}]}]}]}.
{function,
    {778,1},
    limit_depth_map,2,
    [{clause,
         {778,1},
         [{var,{778,1},'_'},{var,{778,1},'_'}],
         [[{call,
               {778,1},
               {remote,
                   {778,1},
                   {atom,{778,1},fake},
                   {atom,{778,1},is_beam_bif_info}},
               []}]],
         [{debug_line,778,320},{atom,{778,1},ignore}]},
     {clause,
         {778,1},
         [{tuple,
              {778,17},
              [{atom,{778,17},t_map},
               {var,{778,35},'SKey0'},
               {var,{779,37},'SValue0'}]},
          {var,{779,48},'Depth'}],
         [[{op,{779,66},'>',{var,{779,60},'Depth'},{integer,{779,68},0}}]],
         [{debug_line,780,321},
          {match,
              {780,5},
              {var,{780,5},'SKey'},
              {call,
                  {780,12},
                  {atom,{780,12},limit_depth},
                  [{var,{780,24},'SKey0'},
                   {block,0,
                       [{op,{780,37},
                            '-',
                            {var,{780,31},'Depth'},
                            {integer,{780,39},1}}]}]}},
          {debug_line,781,322},
          {match,
              {781,5},
              {var,{781,5},'SValue'},
              {call,
                  {781,14},
                  {atom,{781,14},limit_depth},
                  [{var,{781,26},'SValue0'},
                   {block,0,
                       [{op,{781,41},
                            '-',
                            {var,{781,35},'Depth'},
                            {integer,{781,43},1}}]}]}},
          {debug_line,782,323},
          {tuple,
              {782,5},
              [{atom,{782,5},t_map},
               {var,{782,22},'SKey'},
               {var,{782,39},'SValue'}]}]},
     {clause,
         {783,1},
         [{tuple,
              {783,17},
              [{atom,{783,17},t_map},{var,{783,17},'_'},{var,{783,17},'_'}]},
          {var,{783,27},'Depth'}],
         [[{op,{783,45},'=<',{var,{783,39},'Depth'},{integer,{783,48},0}}]],
         [{debug_line,784,324},
          {tuple,
              {784,5},
              [{atom,{784,5},t_map},
               {atom,{784,5},any},
               {atom,{784,5},any}]}]}]}.
{function,
 {786,1},
 limit_depth_tuple,2,
 [{clause,
   {786,1},
   [{var,{786,1},'_'},{var,{786,1},'_'}],
   [[{call,
      {786,1},
      {remote,{786,1},{atom,{786,1},fake},{atom,{786,1},is_beam_bif_info}},
      []}]],
   [{debug_line,786,325},{atom,{786,1},ignore}]},
  {clause,
   {786,1},
   [{match,
     {786,19},
     {tuple,
      {786,19},
      [{atom,{786,19},t_tuple},
       {var,{786,19},'_'},
       {var,{786,19},'_'},
       {var,{786,37},'Es0'}]},
     {var,{786,42},'T'}},
    {var,{786,45},'Depth'}],
   [],
   [{debug_line,787,326},
    {'if',
     {787,5},
     [{clause,
       {788,9},
       [],
       [[{op,{788,15},'>',{var,{788,9},'Depth'},{integer,{788,17},0}}]],
       [{debug_line,789,327},
        {match,
         {789,13},
         {var,{789,13},'Es'},
         {call,
          {789,18},
          {remote,{789,18},{atom,{789,18},lists},{atom,{789,18},foldl}},
          [{block,0,
            [{'fun',
              {789,24},
              {clauses,
               [{clause,
                 {789,27},
                 [{tuple,
                   {789,28},
                   [{var,{789,29},'Index'},{var,{789,36},'E0'}]},
                  {var,{789,41},'Es1'}],
                 [],
                 [{debug_line,790,328},
                  {match,
                   {790,32},
                   {var,{790,32},'E'},
                   {call,
                    {790,36},
                    {atom,{790,36},limit_depth},
                    [{var,{790,48},'E0'},
                     {block,0,
                      [{op,
                        {790,58},
                        '-',
                        {var,{790,52},'Depth'},
                        {integer,{790,60},1}}]}]}},
                  {debug_line,791,329},
                  {call,
                   {791,32},
                   {atom,{791,32},set_tuple_element},
                   [{var,{791,50},'Index'},
                    {var,{791,57},'E'},
                    {var,{791,60},'Es1'}]}]}]}}]},
           {var,{792,29},'Es0'},
           {block,0,
            [{debug_line,792,330},
             {call,
              {792,34},
              {remote,{792,38},{atom,{792,34},maps},{atom,{792,39},to_list}},
              [{var,{792,47},'Es0'}]}]}]}},
        {debug_line,793,331},
        {block,
         {793,13},
         [{match,{793,13},{var,{793,13},rec23},{var,{793,13},'T'}},
          {'case',
           {793,23},
           {var,{793,13},rec23},
           [{clause,
             {793,23},
             [{tuple,
               {793,23},
               [{atom,{793,23},t_tuple},
                {var,{793,23},'_'},
                {var,{793,23},'_'},
                {var,{793,23},'_'}]}],
             [],
             [{call,
               {793,23},
               {remote,
                {793,23},
                {atom,{793,23},erlang},
                {atom,{793,23},setelement}},
               [{integer,{793,23},4},
                {var,{793,13},rec23},
                {var,{793,32},'Es'}]}]},
            {clause,
             [{generated,true},{location,{793,23}}],
             [{var,[{generated,true},{location,{793,23}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{793,23}}],
               {remote,
                [{generated,true},{location,{793,23}}],
                {atom,[{generated,true},{location,{793,23}}],erlang},
                {atom,[{generated,true},{location,{793,23}}],error}},
               [{tuple,
                 [{generated,true},{location,{793,23}}],
                 [{atom,[{generated,true},{location,{793,23}}],badrecord},
                  {var,{793,13},rec23}]}]}]}]}]}]},
      {clause,
       {794,9},
       [],
       [[{op,{794,15},'=<',{var,{794,9},'Depth'},{integer,{794,18},0}}]],
       [{debug_line,795,332},
        {tuple,
         {795,13},
         [{atom,{795,13},t_tuple},
          {integer,{795,13},0},
          {atom,{795,13},false},
          {map,{795,31},[]}]}]}]}]},
  {clause,
   {797,1},
   [{cons,
     {797,19},
     {tuple,
      {797,20},
      [{tuple,{797,21},[{var,{797,22},'MinSize'},{var,{797,30},'_'}]},
       {var,{797,33},'_'}]},
     {var,{797,36},'_'}},
    {var,{797,40},'Depth'}],
   [[{op,{797,58},'=<',{var,{797,52},'Depth'},{integer,{797,61},0}}]],
   [{debug_line,799,333},
    {tuple,
     {799,5},
     [{atom,{799,5},t_tuple},
      {var,{799,31},'MinSize'},
      {atom,{799,20},false},
      {map,{799,5},[]}]}]},
  {clause,
   {800,1},
   [{cons,
     {800,19},
     {tuple,{800,20},[{var,{800,21},'SzTag'},{var,{800,27},'Tuple'}]},
     {var,{800,34},'Ts'}},
    {var,{800,39},'Depth'}],
   [],
   [{debug_line,801,334},
    {cons,
     {801,5},
     {tuple,
      {801,6},
      [{var,{801,7},'SzTag'},
       {call,
        {801,14},
        {atom,{801,14},limit_depth_tuple},
        [{var,{801,32},'Tuple'},{var,{801,39},'Depth'}]}]},
     {call,
      {801,49},
      {atom,{801,49},limit_depth_tuple},
      [{var,{801,67},'Ts'},{var,{801,71},'Depth'}]}}]},
  {clause,
   {802,1},
   [{nil,{802,19}},{var,{802,23},'_Depth'}],
   [],
   [{debug_line,803,335},{nil,{803,5}}]},
  {clause,
   {804,1},
   [{atom,{804,19},none},{var,{804,25},'_Depth'}],
   [],
   [{debug_line,805,336},{atom,{805,5},none}]}]}.
{attribute,{822,2},
           spec,
           {{glb,2},
            [{type,{822,10},
                   'fun',
                   [{type,{822,10},
                          product,
                          [{user_type,{822,11},normal_type,[]},
                           {user_type,{822,26},normal_type,[]}]},
                    {user_type,{822,44},normal_type,[]}]}]}}.
{function,
 {824,1},
 glb,2,
 [{clause,
   {824,1},
   [{var,{824,1},'_'},{var,{824,1},'_'}],
   [[{call,
      {824,1},
      {remote,{824,1},{atom,{824,1},fake},{atom,{824,1},is_beam_bif_info}},
      []}]],
   [{debug_line,824,337},{atom,{824,1},ignore}]},
  {clause,
   {824,1},
   [{var,{824,5},'T'},{var,{824,8},'T'}],
   [],
   [{debug_line,825,338},
    {call,{825,5},{atom,{825,5},verified_normal_type},[{var,{825,26},'T'}]}]},
  {clause,
   {826,1},
   [{atom,{826,5},any},{var,{826,10},'T'}],
   [],
   [{debug_line,827,339},
    {call,{827,5},{atom,{827,5},verified_normal_type},[{var,{827,26},'T'}]}]},
  {clause,
   {828,1},
   [{var,{828,5},'T'},{atom,{828,8},any}],
   [],
   [{debug_line,829,340},
    {call,{829,5},{atom,{829,5},verified_normal_type},[{var,{829,26},'T'}]}]},
  {clause,
   {830,1},
   [{tuple,
     {830,5},
     [{atom,{830,5},t_atom},
      {match,
       {830,22},
       {cons,{830,22},{var,{830,23},'_'},{var,{830,25},'_'}},
       {var,{830,28},'Set1'}}]},
    {tuple,
     {830,35},
     [{atom,{830,35},t_atom},
      {match,
       {830,52},
       {cons,{830,52},{var,{830,53},'_'},{var,{830,55},'_'}},
       {var,{830,58},'Set2'}}]}],
   [],
   [{debug_line,831,341},
    {'case',
     {831,5},
     {call,
      {831,10},
      {remote,{831,17},{atom,{831,10},ordsets},{atom,{831,18},intersection}},
      [{var,{831,31},'Set1'},{var,{831,37},'Set2'}]},
     [{clause,
       {832,9},
       [{nil,{832,9}}],
       [],
       [{debug_line,833,342},{atom,{833,13},none}]},
      {clause,
       {834,9},
       [{match,
         {834,9},
         {cons,{834,9},{var,{834,10},'_'},{var,{834,12},'_'}},
         {var,{834,15},'Set'}}],
       [],
       [{debug_line,835,343},
        {tuple,{835,13},[{atom,{835,13},t_atom},{var,{835,30},'Set'}]}]}]}]},
  {clause,
   {837,1},
   [{match,
     {837,5},
     {tuple,
      {837,5},
      [{atom,{837,5},t_atom},
       {cons,{837,22},{var,{837,23},'_'},{var,{837,25},'_'}}]},
     {var,{837,29},'T'}},
    {tuple,{837,32},[{atom,{837,32},t_atom},{atom,{837,49},any}]}],
   [],
   [{debug_line,838,344},{var,{838,5},'T'}]},
  {clause,
   {839,1},
   [{tuple,{839,5},[{atom,{839,5},t_atom},{atom,{839,22},any}]},
    {match,
     {839,28},
     {tuple,
      {839,28},
      [{atom,{839,28},t_atom},
       {cons,{839,45},{var,{839,46},'_'},{var,{839,48},'_'}}]},
     {var,{839,52},'T'}}],
   [],
   [{debug_line,840,345},{var,{840,5},'T'}]},
  {clause,
   {841,1},
   [{tuple,
     {841,5},
     [{atom,{841,5},t_bitstring},{var,{841,28},'U1'},{var,{841,42},'A1'}]},
    {tuple,
     {842,5},
     [{atom,{842,5},t_bitstring},{var,{842,28},'U2'},{var,{842,42},'A2'}]}],
   [],
   [{debug_line,843,346},
    {tuple,
     {843,5},
     [{atom,{843,5},t_bitstring},
      {op,
       {843,36},
       'div',
       {op,{843,31},'*',{var,{843,28},'U1'},{var,{843,33},'U2'}},
       {call,
        {843,40},
        {atom,{843,40},gcd},
        [{var,{843,44},'U1'},{var,{843,48},'U2'}]}},
      {op,{843,66},'or',{var,{843,63},'A1'},{var,{843,69},'A2'}}]}]},
  {clause,
   {844,1},
   [{match,
     {844,5},
     {tuple,
      {844,5},
      [{atom,{844,5},t_bitstring},
       {var,{844,28},'UnitA'},
       {var,{844,45},'Appendable'}]},
     {var,{844,57},'T'}},
    {tuple,{845,5},[{atom,{845,5},t_bs_matchable},{var,{845,31},'UnitB'}]}],
   [],
   [{debug_line,846,347},
    {match,
     {846,5},
     {var,{846,5},'Unit'},
     {op,
      {846,26},
      'div',
      {op,{846,18},'*',{var,{846,12},'UnitA'},{var,{846,20},'UnitB'}},
      {call,
       {846,30},
       {atom,{846,30},gcd},
       [{var,{846,34},'UnitA'},{var,{846,41},'UnitB'}]}}},
    {debug_line,847,348},
    {block,
     {847,5},
     [{match,{847,5},{var,{847,5},rec24},{var,{847,5},'T'}},
      {'case',
       {847,19},
       {var,{847,5},rec24},
       [{clause,
         {847,19},
         [{tuple,
           {847,19},
           [{atom,{847,19},t_bitstring},
            {var,{847,19},'_'},
            {var,{847,19},'_'}]}],
         [],
         [{call,
           {847,19},
           {remote,{847,19},{atom,{847,19},erlang},{atom,{847,19},setelement}},
           [{integer,{847,19},2},
            {call,
             {847,34},
             {remote,
              {847,34},
              {atom,{847,34},erlang},
              {atom,{847,34},setelement}},
             [{integer,{847,34},3},
              {var,{847,5},rec24},
              {var,{847,45},'Appendable'}]},
            {var,{847,29},'Unit'}]}]},
        {clause,
         [{generated,true},{location,{847,19}}],
         [{var,[{generated,true},{location,{847,19}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{847,19}}],
           {remote,
            [{generated,true},{location,{847,19}}],
            {atom,[{generated,true},{location,{847,19}}],erlang},
            {atom,[{generated,true},{location,{847,19}}],error}},
           [{tuple,
             [{generated,true},{location,{847,19}}],
             [{atom,[{generated,true},{location,{847,19}}],badrecord},
              {var,{847,5},rec24}]}]}]}]}]}]},
  {clause,
   {848,1},
   [{tuple,{848,5},[{atom,{848,5},t_bs_context},{var,{848,29},'UnitA'}]},
    {tuple,{848,37},[{atom,{848,37},t_bs_context},{var,{848,61},'UnitB'}]}],
   [],
   [{debug_line,849,349},
    {match,
     {849,5},
     {var,{849,5},'Unit'},
     {op,
      {849,26},
      'div',
      {op,{849,18},'*',{var,{849,12},'UnitA'},{var,{849,20},'UnitB'}},
      {call,
       {849,30},
       {atom,{849,30},gcd},
       [{var,{849,34},'UnitA'},{var,{849,41},'UnitB'}]}}},
    {debug_line,850,350},
    {tuple,{850,5},[{atom,{850,5},t_bs_context},{var,{850,29},'Unit'}]}]},
  {clause,
   {851,1},
   [{match,
     {851,5},
     {tuple,{851,5},[{atom,{851,5},t_bs_context},{var,{851,29},'UnitA'}]},
     {var,{851,36},'T'}},
    {tuple,{851,39},[{atom,{851,39},t_bs_matchable},{var,{851,65},'UnitB'}]}],
   [],
   [{debug_line,852,351},
    {match,
     {852,5},
     {var,{852,5},'Unit'},
     {op,
      {852,26},
      'div',
      {op,{852,18},'*',{var,{852,12},'UnitA'},{var,{852,20},'UnitB'}},
      {call,
       {852,30},
       {atom,{852,30},gcd},
       [{var,{852,34},'UnitA'},{var,{852,41},'UnitB'}]}}},
    {debug_line,853,352},
    {block,
     {853,5},
     [{match,{853,5},{var,{853,5},rec25},{var,{853,5},'T'}},
      {'case',
       {853,20},
       {var,{853,5},rec25},
       [{clause,
         {853,20},
         [{tuple,{853,20},[{atom,{853,20},t_bs_context},{var,{853,20},'_'}]}],
         [],
         [{call,
           {853,20},
           {remote,{853,20},{atom,{853,20},erlang},{atom,{853,20},setelement}},
           [{integer,{853,20},2},{var,{853,5},rec25},{var,{853,30},'Unit'}]}]},
        {clause,
         [{generated,true},{location,{853,20}}],
         [{var,[{generated,true},{location,{853,20}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{853,20}}],
           {remote,
            [{generated,true},{location,{853,20}}],
            {atom,[{generated,true},{location,{853,20}}],erlang},
            {atom,[{generated,true},{location,{853,20}}],error}},
           [{tuple,
             [{generated,true},{location,{853,20}}],
             [{atom,[{generated,true},{location,{853,20}}],badrecord},
              {var,{853,5},rec25}]}]}]}]}]}]},
  {clause,
   {854,1},
   [{tuple,{854,5},[{atom,{854,5},t_bs_matchable},{var,{854,31},'UnitA'}]},
    {tuple,{854,39},[{atom,{854,39},t_bs_matchable},{var,{854,65},'UnitB'}]}],
   [],
   [{debug_line,855,353},
    {match,
     {855,5},
     {var,{855,5},'Unit'},
     {op,
      {855,26},
      'div',
      {op,{855,18},'*',{var,{855,12},'UnitA'},{var,{855,20},'UnitB'}},
      {call,
       {855,30},
       {atom,{855,30},gcd},
       [{var,{855,34},'UnitA'},{var,{855,41},'UnitB'}]}}},
    {debug_line,856,354},
    {tuple,{856,5},[{atom,{856,5},t_bs_matchable},{var,{856,31},'Unit'}]}]},
  {clause,
   {857,1},
   [{tuple,{857,5},[{atom,{857,5},t_bs_matchable},{var,{857,31},'UnitA'}]},
    {match,
     {858,5},
     {tuple,
      {858,5},
      [{atom,{858,5},t_bitstring},
       {var,{858,28},'UnitB'},
       {var,{858,45},'Appendable'}]},
     {var,{858,57},'T'}}],
   [],
   [{debug_line,859,355},
    {match,
     {859,5},
     {var,{859,5},'Unit'},
     {op,
      {859,26},
      'div',
      {op,{859,18},'*',{var,{859,12},'UnitA'},{var,{859,20},'UnitB'}},
      {call,
       {859,30},
       {atom,{859,30},gcd},
       [{var,{859,34},'UnitA'},{var,{859,41},'UnitB'}]}}},
    {debug_line,860,356},
    {block,
     {860,5},
     [{match,{860,5},{var,{860,5},rec26},{var,{860,5},'T'}},
      {'case',
       {860,19},
       {var,{860,5},rec26},
       [{clause,
         {860,19},
         [{tuple,
           {860,19},
           [{atom,{860,19},t_bitstring},
            {var,{860,19},'_'},
            {var,{860,19},'_'}]}],
         [],
         [{call,
           {860,19},
           {remote,{860,19},{atom,{860,19},erlang},{atom,{860,19},setelement}},
           [{integer,{860,19},2},
            {call,
             {860,34},
             {remote,
              {860,34},
              {atom,{860,34},erlang},
              {atom,{860,34},setelement}},
             [{integer,{860,34},3},
              {var,{860,5},rec26},
              {var,{860,45},'Appendable'}]},
            {var,{860,29},'Unit'}]}]},
        {clause,
         [{generated,true},{location,{860,19}}],
         [{var,[{generated,true},{location,{860,19}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{860,19}}],
           {remote,
            [{generated,true},{location,{860,19}}],
            {atom,[{generated,true},{location,{860,19}}],erlang},
            {atom,[{generated,true},{location,{860,19}}],error}},
           [{tuple,
             [{generated,true},{location,{860,19}}],
             [{atom,[{generated,true},{location,{860,19}}],badrecord},
              {var,{860,5},rec26}]}]}]}]}]}]},
  {clause,
   {861,1},
   [{tuple,{861,5},[{atom,{861,5},t_bs_matchable},{var,{861,31},'UnitA'}]},
    {match,
     {861,39},
     {tuple,{861,39},[{atom,{861,39},t_bs_context},{var,{861,63},'UnitB'}]},
     {var,{861,70},'T'}}],
   [],
   [{debug_line,862,357},
    {match,
     {862,5},
     {var,{862,5},'Unit'},
     {op,
      {862,26},
      'div',
      {op,{862,18},'*',{var,{862,12},'UnitA'},{var,{862,20},'UnitB'}},
      {call,
       {862,30},
       {atom,{862,30},gcd},
       [{var,{862,34},'UnitA'},{var,{862,41},'UnitB'}]}}},
    {debug_line,863,358},
    {block,
     {863,5},
     [{match,{863,5},{var,{863,5},rec27},{var,{863,5},'T'}},
      {'case',
       {863,20},
       {var,{863,5},rec27},
       [{clause,
         {863,20},
         [{tuple,{863,20},[{atom,{863,20},t_bs_context},{var,{863,20},'_'}]}],
         [],
         [{call,
           {863,20},
           {remote,{863,20},{atom,{863,20},erlang},{atom,{863,20},setelement}},
           [{integer,{863,20},2},{var,{863,5},rec27},{var,{863,30},'Unit'}]}]},
        {clause,
         [{generated,true},{location,{863,20}}],
         [{var,[{generated,true},{location,{863,20}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{863,20}}],
           {remote,
            [{generated,true},{location,{863,20}}],
            {atom,[{generated,true},{location,{863,20}}],erlang},
            {atom,[{generated,true},{location,{863,20}}],error}},
           [{tuple,
             [{generated,true},{location,{863,20}}],
             [{atom,[{generated,true},{location,{863,20}}],badrecord},
              {var,{863,5},rec27}]}]}]}]}]}]},
  {clause,
   {864,1},
   [{tuple,
     {864,5},
     [{atom,{864,5},t_cons},{var,{864,18},'TypeA'},{var,{864,35},'TermA'}]},
    {tuple,
     {865,5},
     [{atom,{865,5},t_cons},{var,{865,18},'TypeB'},{var,{865,35},'TermB'}]}],
   [],
   [{debug_line,867,359},
    {'case',
     {867,5},
     {tuple,
      {867,10},
      [{call,
        {867,11},
        {atom,{867,11},meet},
        [{var,{867,16},'TypeA'},{var,{867,23},'TypeB'}]},
       {call,
        {867,31},
        {atom,{867,31},meet},
        [{var,{867,36},'TermA'},{var,{867,43},'TermB'}]}]},
     [{clause,
       {868,9},
       [{tuple,{868,9},[{atom,{868,10},none},{var,{868,16},'_'}]}],
       [],
       [{debug_line,868,360},{atom,{868,22},none}]},
      {clause,
       {869,9},
       [{tuple,{869,9},[{var,{869,10},'_'},{atom,{869,13},none}]}],
       [],
       [{debug_line,869,361},{atom,{869,22},none}]},
      {clause,
       {870,9},
       [{tuple,{870,9},[{var,{870,10},'Type'},{var,{870,16},'Term'}]}],
       [],
       [{debug_line,870,362},
        {tuple,
         {870,25},
         [{atom,{870,25},t_cons},
          {var,{870,38},'Type'},
          {var,{870,54},'Term'}]}]}]}]},
  {clause,
   {872,1},
   [{tuple,
     {872,5},
     [{atom,{872,5},t_cons},{var,{872,18},'TypeA'},{var,{872,35},'TermA'}]},
    {tuple,
     {873,5},
     [{atom,{873,5},t_list},{var,{873,18},'TypeB'},{var,{873,35},'TermB'}]}],
   [],
   [{debug_line,874,363},
    {'case',
     {874,5},
     {tuple,
      {874,10},
      [{call,
        {874,11},
        {atom,{874,11},meet},
        [{var,{874,16},'TypeA'},{var,{874,23},'TypeB'}]},
       {call,
        {874,31},
        {atom,{874,31},meet},
        [{var,{874,36},'TermA'},{var,{874,43},'TermB'}]}]},
     [{clause,
       {875,9},
       [{tuple,{875,9},[{atom,{875,10},none},{var,{875,16},'_'}]}],
       [],
       [{debug_line,875,364},{atom,{875,22},none}]},
      {clause,
       {876,9},
       [{tuple,{876,9},[{var,{876,10},'_'},{atom,{876,13},none}]}],
       [],
       [{debug_line,876,365},{atom,{876,22},none}]},
      {clause,
       {877,9},
       [{tuple,{877,9},[{var,{877,10},'Type'},{var,{877,16},'Term'}]}],
       [],
       [{debug_line,877,366},
        {tuple,
         {877,25},
         [{atom,{877,25},t_cons},
          {var,{877,38},'Type'},
          {var,{877,54},'Term'}]}]}]}]},
  {clause,
   {879,1},
   [{tuple,{879,5},[{atom,{879,5},t_float},{var,{879,23},'R1'}]},
    {tuple,{879,28},[{atom,{879,28},t_float},{var,{879,46},'R2'}]}],
   [],
   [{debug_line,880,367},
    {call,
     {880,5},
     {atom,{880,5},float_from_range},
     [{block,0,
       [{call,
         {880,22},
         {atom,{880,22},glb_ranges},
         [{var,{880,33},'R1'},{var,{880,37},'R2'}]}]}]}]},
  {clause,
   {881,1},
   [{tuple,
     {881,5},
     [{atom,{881,5},t_fun},
      {var,{881,18},'SameArity'},
      {var,{881,35},'SameTarget'},
      {var,{881,51},'TypeA'}]},
    {match,
     {882,5},
     {tuple,
      {882,5},
      [{atom,{882,5},t_fun},
       {var,{882,18},'SameArity'},
       {var,{882,35},'SameTarget'},
       {var,{882,51},'TypeB'}]},
     {var,{882,58},'T'}}],
   [],
   [{debug_line,883,368},
    {block,
     {883,5},
     [{match,
       {883,13},
       {var,{883,13},rec28},
       {call,
        {883,18},
        {atom,{883,18},meet},
        [{var,{883,23},'TypeA'},{var,{883,30},'TypeB'}]}},
      {match,{883,5},{var,{883,5},rec29},{var,{883,5},'T'}},
      {'case',
       {883,13},
       {var,{883,5},rec29},
       [{clause,
         {883,13},
         [{tuple,
           {883,13},
           [{atom,{883,13},t_fun},
            {var,{883,13},'_'},
            {var,{883,13},'_'},
            {var,{883,13},'_'}]}],
         [],
         [{call,
           {883,13},
           {remote,{883,13},{atom,{883,13},erlang},{atom,{883,13},setelement}},
           [{integer,{883,13},4},{var,{883,5},rec29},{var,{883,13},rec28}]}]},
        {clause,
         [{generated,true},{location,{883,13}}],
         [{var,[{generated,true},{location,{883,13}}],'_'}],
         [],
         [{call,
           [{generated,true},{location,{883,13}}],
           {remote,
            [{generated,true},{location,{883,13}}],
            {atom,[{generated,true},{location,{883,13}}],erlang},
            {atom,[{generated,true},{location,{883,13}}],error}},
           [{tuple,
             [{generated,true},{location,{883,13}}],
             [{atom,[{generated,true},{location,{883,13}}],badrecord},
              {var,{883,5},rec29}]}]}]}]}]}]},
  {clause,
   {884,1},
   [{match,
     {884,5},
     {tuple,
      {884,5},
      [{atom,{884,5},t_fun},
       {var,{884,5},'_'},
       {var,{884,19},'TargetA'},
       {var,{884,5},'_'}]},
     {var,{884,28},'A'}},
    {match,
     {884,31},
     {tuple,
      {884,31},
      [{atom,{884,31},t_fun},
       {var,{884,31},'_'},
       {atom,{884,45},any},
       {var,{884,31},'_'}]},
     {var,{884,50},'B'}}],
   [[{op,{884,66},'=/=',{var,{884,58},'TargetA'},{atom,{884,70},any}}]],
   [{debug_line,885,369},
    {call,
     {885,5},
     {atom,{885,5},glb},
     [{var,{885,9},'A'},
      {block,0,
       [{block,
         {885,12},
         [{match,{885,12},{var,{885,12},rec30},{var,{885,12},'B'}},
          {'case',
           {885,20},
           {var,{885,12},rec30},
           [{clause,
             {885,20},
             [{tuple,
               {885,20},
               [{atom,{885,20},t_fun},
                {var,{885,20},'_'},
                {var,{885,20},'_'},
                {var,{885,20},'_'}]}],
             [],
             [{call,
               {885,20},
               {remote,
                {885,20},
                {atom,{885,20},erlang},
                {atom,{885,20},setelement}},
               [{integer,{885,20},3},
                {var,{885,12},rec30},
                {var,{885,27},'TargetA'}]}]},
            {clause,
             [{generated,true},{location,{885,20}}],
             [{var,[{generated,true},{location,{885,20}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{885,20}}],
               {remote,
                [{generated,true},{location,{885,20}}],
                {atom,[{generated,true},{location,{885,20}}],erlang},
                {atom,[{generated,true},{location,{885,20}}],error}},
               [{tuple,
                 [{generated,true},{location,{885,20}}],
                 [{atom,[{generated,true},{location,{885,20}}],badrecord},
                  {var,{885,12},rec30}]}]}]}]}]}]}]}]},
  {clause,
   {886,1},
   [{match,
     {886,5},
     {tuple,
      {886,5},
      [{atom,{886,5},t_fun},
       {var,{886,5},'_'},
       {atom,{886,19},any},
       {var,{886,5},'_'}]},
     {var,{886,24},'A'}},
    {match,
     {886,27},
     {tuple,
      {886,27},
      [{atom,{886,27},t_fun},
       {var,{886,27},'_'},
       {var,{886,41},'TargetB'},
       {var,{886,27},'_'}]},
     {var,{886,50},'B'}}],
   [[{op,{886,66},'=/=',{var,{886,58},'TargetB'},{atom,{886,70},any}}]],
   [{debug_line,887,370},
    {call,
     {887,5},
     {atom,{887,5},glb},
     [{block,0,
       [{block,
         {887,9},
         [{match,{887,9},{var,{887,9},rec31},{var,{887,9},'A'}},
          {'case',
           {887,17},
           {var,{887,9},rec31},
           [{clause,
             {887,17},
             [{tuple,
               {887,17},
               [{atom,{887,17},t_fun},
                {var,{887,17},'_'},
                {var,{887,17},'_'},
                {var,{887,17},'_'}]}],
             [],
             [{call,
               {887,17},
               {remote,
                {887,17},
                {atom,{887,17},erlang},
                {atom,{887,17},setelement}},
               [{integer,{887,17},3},
                {var,{887,9},rec31},
                {var,{887,24},'TargetB'}]}]},
            {clause,
             [{generated,true},{location,{887,17}}],
             [{var,[{generated,true},{location,{887,17}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{887,17}}],
               {remote,
                [{generated,true},{location,{887,17}}],
                {atom,[{generated,true},{location,{887,17}}],erlang},
                {atom,[{generated,true},{location,{887,17}}],error}},
               [{tuple,
                 [{generated,true},{location,{887,17}}],
                 [{atom,[{generated,true},{location,{887,17}}],badrecord},
                  {var,{887,9},rec31}]}]}]}]}]}]},
      {var,{887,34},'B'}]}]},
  {clause,
   {888,1},
   [{match,
     {888,5},
     {tuple,
      {888,5},
      [{atom,{888,5},t_fun},
       {atom,{888,18},any},
       {var,{888,5},'_'},
       {var,{888,5},'_'}]},
     {var,{888,23},'A'}},
    {match,
     {888,26},
     {tuple,
      {888,26},
      [{atom,{888,26},t_fun},
       {var,{888,39},'ArityB'},
       {var,{888,26},'_'},
       {var,{888,26},'_'}]},
     {var,{888,47},'B'}}],
   [[{op,{888,62},'=/=',{var,{888,55},'ArityB'},{atom,{888,66},any}}]],
   [{debug_line,889,371},
    {call,
     {889,5},
     {atom,{889,5},glb},
     [{block,0,
       [{block,
         {889,9},
         [{match,{889,9},{var,{889,9},rec32},{var,{889,9},'A'}},
          {'case',
           {889,17},
           {var,{889,9},rec32},
           [{clause,
             {889,17},
             [{tuple,
               {889,17},
               [{atom,{889,17},t_fun},
                {var,{889,17},'_'},
                {var,{889,17},'_'},
                {var,{889,17},'_'}]}],
             [],
             [{call,
               {889,17},
               {remote,
                {889,17},
                {atom,{889,17},erlang},
                {atom,{889,17},setelement}},
               [{integer,{889,17},2},
                {var,{889,9},rec32},
                {var,{889,23},'ArityB'}]}]},
            {clause,
             [{generated,true},{location,{889,17}}],
             [{var,[{generated,true},{location,{889,17}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{889,17}}],
               {remote,
                [{generated,true},{location,{889,17}}],
                {atom,[{generated,true},{location,{889,17}}],erlang},
                {atom,[{generated,true},{location,{889,17}}],error}},
               [{tuple,
                 [{generated,true},{location,{889,17}}],
                 [{atom,[{generated,true},{location,{889,17}}],badrecord},
                  {var,{889,9},rec32}]}]}]}]}]}]},
      {var,{889,32},'B'}]}]},
  {clause,
   {890,1},
   [{match,
     {890,5},
     {tuple,
      {890,5},
      [{atom,{890,5},t_fun},
       {var,{890,18},'ArityA'},
       {var,{890,5},'_'},
       {var,{890,5},'_'}]},
     {var,{890,26},'A'}},
    {match,
     {890,29},
     {tuple,
      {890,29},
      [{atom,{890,29},t_fun},
       {atom,{890,42},any},
       {var,{890,29},'_'},
       {var,{890,29},'_'}]},
     {var,{890,47},'B'}}],
   [[{op,{890,62},'=/=',{var,{890,55},'ArityA'},{atom,{890,66},any}}]],
   [{debug_line,891,372},
    {call,
     {891,5},
     {atom,{891,5},glb},
     [{var,{891,9},'A'},
      {block,0,
       [{block,
         {891,12},
         [{match,{891,12},{var,{891,12},rec33},{var,{891,12},'B'}},
          {'case',
           {891,20},
           {var,{891,12},rec33},
           [{clause,
             {891,20},
             [{tuple,
               {891,20},
               [{atom,{891,20},t_fun},
                {var,{891,20},'_'},
                {var,{891,20},'_'},
                {var,{891,20},'_'}]}],
             [],
             [{call,
               {891,20},
               {remote,
                {891,20},
                {atom,{891,20},erlang},
                {atom,{891,20},setelement}},
               [{integer,{891,20},2},
                {var,{891,12},rec33},
                {var,{891,26},'ArityA'}]}]},
            {clause,
             [{generated,true},{location,{891,20}}],
             [{var,[{generated,true},{location,{891,20}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{891,20}}],
               {remote,
                [{generated,true},{location,{891,20}}],
                {atom,[{generated,true},{location,{891,20}}],erlang},
                {atom,[{generated,true},{location,{891,20}}],error}},
               [{tuple,
                 [{generated,true},{location,{891,20}}],
                 [{atom,[{generated,true},{location,{891,20}}],badrecord},
                  {var,{891,12},rec33}]}]}]}]}]}]}]}]},
  {clause,
   {892,1},
   [{tuple,{892,5},[{atom,{892,5},t_integer},{var,{892,25},'R1'}]},
    {tuple,{892,30},[{atom,{892,30},t_integer},{var,{892,50},'R2'}]}],
   [],
   [{debug_line,893,373},
    {call,
     {893,5},
     {atom,{893,5},integer_from_range},
     [{block,0,
       [{call,
         {893,24},
         {atom,{893,24},glb_ranges},
         [{var,{893,35},'R1'},{var,{893,39},'R2'}]}]}]}]},
  {clause,
   {894,1},
   [{tuple,{894,5},[{atom,{894,5},t_integer},{var,{894,25},'R1'}]},
    {tuple,{894,30},[{atom,{894,30},t_number},{var,{894,49},'R2'}]}],
   [],
   [{debug_line,895,374},
    {call,
     {895,5},
     {atom,{895,5},integer_from_range},
     [{block,0,
       [{call,
         {895,24},
         {atom,{895,24},glb_ranges},
         [{var,{895,35},'R1'},{var,{895,39},'R2'}]}]}]}]},
  {clause,
   {896,1},
   [{tuple,{896,5},[{atom,{896,5},t_float},{var,{896,23},'R1'}]},
    {tuple,{896,28},[{atom,{896,28},t_number},{var,{896,47},'R2'}]}],
   [],
   [{debug_line,897,375},
    {call,
     {897,5},
     {atom,{897,5},float_from_range},
     [{block,0,
       [{call,
         {897,22},
         {atom,{897,22},glb_ranges},
         [{var,{897,33},'R1'},
          {block,0,
           [{call,
             {897,37},
             {atom,{897,37},number_to_float_range},
             [{var,{897,59},'R2'}]}]}]}]}]}]},
  {clause,
   {898,1},
   [{tuple,
     {898,5},
     [{atom,{898,5},t_list},{var,{898,18},'TypeA'},{var,{898,35},'TermA'}]},
    {tuple,
     {899,5},
     [{atom,{899,5},t_list},{var,{899,18},'TypeB'},{var,{899,35},'TermB'}]}],
   [],
   [{debug_line,902,376},
    {'case',
     {902,5},
     {tuple,
      {902,10},
      [{call,
        {902,11},
        {atom,{902,11},meet},
        [{var,{902,16},'TypeA'},{var,{902,23},'TypeB'}]},
       {call,
        {902,31},
        {atom,{902,31},meet},
        [{var,{902,36},'TermA'},{var,{902,43},'TermB'}]}]},
     [{clause,
       {903,9},
       [{tuple,{903,9},[{atom,{903,10},none},{var,{903,16},'_'}]}],
       [],
       [{debug_line,903,377},{atom,{903,22},nil}]},
      {clause,
       {904,9},
       [{tuple,{904,9},[{var,{904,10},'_'},{atom,{904,13},none}]}],
       [],
       [{debug_line,904,378},{atom,{904,22},nil}]},
      {clause,
       {905,9},
       [{tuple,{905,9},[{var,{905,10},'Type'},{var,{905,16},'Term'}]}],
       [],
       [{debug_line,905,379},
        {tuple,
         {905,25},
         [{atom,{905,25},t_list},
          {var,{905,38},'Type'},
          {var,{905,54},'Term'}]}]}]}]},
  {clause,
   {907,1},
   [{match,
     {907,5},
     {tuple,
      {907,5},
      [{atom,{907,5},t_list},{var,{907,5},'_'},{var,{907,5},'_'}]},
     {var,{907,15},'A'}},
    {match,
     {907,18},
     {tuple,
      {907,18},
      [{atom,{907,18},t_cons},{var,{907,18},'_'},{var,{907,18},'_'}]},
     {var,{907,28},'B'}}],
   [],
   [{debug_line,908,380},
    {call,{908,5},{atom,{908,5},glb},[{var,{908,9},'B'},{var,{908,12},'A'}]}]},
  {clause,
   {909,1},
   [{tuple,
     {909,5},
     [{atom,{909,5},t_list},{var,{909,5},'_'},{var,{909,5},'_'}]},
    {atom,{909,16},nil}],
   [],
   [{debug_line,910,381},{atom,{910,5},nil}]},
  {clause,
   {911,1},
   [{atom,{911,5},nil},
    {tuple,
     {911,10},
     [{atom,{911,10},t_list},{var,{911,10},'_'},{var,{911,10},'_'}]}],
   [],
   [{debug_line,912,382},{atom,{912,5},nil}]},
  {clause,
   {913,1},
   [{tuple,{913,5},[{atom,{913,5},t_number},{var,{913,24},'R1'}]},
    {tuple,{913,29},[{atom,{913,29},t_number},{var,{913,48},'R2'}]}],
   [],
   [{debug_line,914,383},
    {call,
     {914,5},
     {atom,{914,5},number_from_range},
     [{block,0,
       [{call,
         {914,23},
         {atom,{914,23},glb_ranges},
         [{var,{914,34},'R1'},{var,{914,38},'R2'}]}]}]}]},
  {clause,
   {915,1},
   [{tuple,{915,5},[{atom,{915,5},t_number},{var,{915,24},'R1'}]},
    {tuple,{915,29},[{atom,{915,29},t_integer},{var,{915,49},'R2'}]}],
   [],
   [{debug_line,916,384},
    {call,
     {916,5},
     {atom,{916,5},integer_from_range},
     [{block,0,
       [{call,
         {916,24},
         {atom,{916,24},glb_ranges},
         [{var,{916,35},'R1'},{var,{916,39},'R2'}]}]}]}]},
  {clause,
   {917,1},
   [{tuple,{917,5},[{atom,{917,5},t_number},{var,{917,24},'R1'}]},
    {tuple,{917,29},[{atom,{917,29},t_float},{var,{917,47},'R2'}]}],
   [],
   [{debug_line,918,385},
    {call,
     {918,5},
     {atom,{918,5},float_from_range},
     [{block,0,
       [{call,
         {918,22},
         {atom,{918,22},glb_ranges},
         [{block,0,
           [{call,
             {918,33},
             {atom,{918,33},number_to_float_range},
             [{var,{918,55},'R1'}]}]},
          {var,{918,60},'R2'}]}]}]}]},
  {clause,
   {919,1},
   [{tuple,
     {919,5},
     [{atom,{919,5},t_map},{var,{919,22},'SKeyA'},{var,{919,40},'SValueA'}]},
    {tuple,
     {920,5},
     [{atom,{920,5},t_map},{var,{920,22},'SKeyB'},{var,{920,40},'SValueB'}]}],
   [],
   [{debug_line,922,386},
    {match,
     {922,5},
     {var,{922,5},'SKey'},
     {call,
      {922,12},
      {atom,{922,12},meet},
      [{var,{922,17},'SKeyA'},{var,{922,24},'SKeyB'}]}},
    {debug_line,923,387},
    {match,
     {923,5},
     {var,{923,5},'SValue'},
     {call,
      {923,14},
      {atom,{923,14},meet},
      [{var,{923,19},'SValueA'},{var,{923,28},'SValueB'}]}},
    {debug_line,924,388},
    {tuple,
     {924,5},
     [{atom,{924,5},t_map},{var,{924,22},'SKey'},{var,{924,39},'SValue'}]}]},
  {clause,
   {925,1},
   [{match,
     {925,5},
     {tuple,
      {925,5},
      [{atom,{925,5},t_tuple},
       {var,{925,5},'_'},
       {var,{925,5},'_'},
       {var,{925,5},'_'}]},
     {var,{925,16},'T1'}},
    {match,
     {925,20},
     {tuple,
      {925,20},
      [{atom,{925,20},t_tuple},
       {var,{925,20},'_'},
       {var,{925,20},'_'},
       {var,{925,20},'_'}]},
     {var,{925,31},'T2'}}],
   [],
   [{debug_line,926,389},
    {call,
     {926,5},
     {atom,{926,5},glb_tuples},
     [{var,{926,16},'T1'},{var,{926,20},'T2'}]}]},
  {clause,
   {927,1},
   [{atom,{927,5},identifier},{var,{927,17},'T'}],
   [],
   [{debug_line,928,390},
    {'case',
     {928,5},
     {call,{928,10},{atom,{928,10},is_identifier},[{var,{928,24},'T'}]},
     [{clause,
       {929,9},
       [{atom,{929,9},true}],
       [],
       [{debug_line,930,391},{var,{930,13},'T'}]},
      {clause,
       {931,9},
       [{atom,{931,9},false}],
       [],
       [{debug_line,932,392},
        {'case',
         {932,13},
         {var,{932,18},'T'},
         [{clause,
           {933,17},
           [{atom,{933,17},other}],
           [],
           [{debug_line,933,393},{atom,{933,26},identifier}]},
          {clause,
           {934,17},
           [{var,{934,17},'_'}],
           [],
           [{debug_line,934,394},{atom,{934,22},none}]}]}]}]}]},
  {clause,
   {937,1},
   [{var,{937,5},'T'},{atom,{937,8},identifier}],
   [],
   [{debug_line,938,395},
    {call,
     {938,5},
     {atom,{938,5},glb},
     [{atom,{938,9},identifier},{var,{938,21},'T'}]}]},
  {clause,
   {939,1},
   [{atom,{939,5},other},{var,{939,12},'T'}],
   [],
   [{debug_line,940,396},
    {'case',
     {940,5},
     {call,{940,10},{atom,{940,10},is_other},[{var,{940,19},'T'}]},
     [{clause,
       {941,9},
       [{atom,{941,9},true}],
       [],
       [{debug_line,941,397},{var,{941,17},'T'}]},
      {clause,
       {942,9},
       [{atom,{942,9},false}],
       [],
       [{debug_line,942,398},{atom,{942,18},none}]}]}]},
  {clause,
   {944,1},
   [{var,{944,5},'T'},{atom,{944,8},other}],
   [],
   [{debug_line,945,399},
    {call,
     {945,5},
     {atom,{945,5},glb},
     [{atom,{945,9},other},{var,{945,16},'T'}]}]},
  {clause,
   {946,1},
   [{var,{946,5},'_'},{var,{946,8},'_'}],
   [],
   [{debug_line,948,400},{atom,{948,5},none}]}]}.
{function,
 {950,1},
 glb_ranges,2,
 [{clause,
   {950,1},
   [{var,{950,1},'_'},{var,{950,1},'_'}],
   [[{call,
      {950,1},
      {remote,{950,1},{atom,{950,1},fake},{atom,{950,1},is_beam_bif_info}},
      []}]],
   [{debug_line,950,401},{atom,{950,1},ignore}]},
  {clause,
   {950,1},
   [{tuple,{950,12},[{var,{950,13},'MinA'},{var,{950,18},'MaxA'}]},
    {tuple,{950,25},[{var,{950,26},'MinB'},{var,{950,31},'MaxB'}]}],
   [],
   [{debug_line,951,402},
    {match,
     {951,5},
     {atom,{951,5},true},
     {'case',
      {951,12},
      {call,
       {951,12},
       {atom,{951,12},inf_le},
       [{var,{951,19},'MinA'},{var,{951,25},'MaxA'}]},
      [{clause,
        {951,12},
        [{atom,{951,12},true}],
        [],
        [{call,
          {951,39},
          {atom,{951,39},inf_le},
          [{var,{951,46},'MinB'},{var,{951,52},'MaxB'}]}]},
       {clause,{951,12},[{atom,{951,12},false}],[],[{atom,{951,12},false}]},
       {clause,
        [{generated,true},{location,{951,12}}],
        [{var,{951,12},cov1}],
        [],
        [{call,
          {951,12},
          {remote,{951,12},{atom,{951,12},erlang},{atom,{951,12},error}},
          [{block,0,
            [{tuple,
              {951,12},
              [{atom,{951,12},badarg},{var,{951,12},cov1}]}]}]}]}]}},
    {debug_line,952,403},
    {'case',
     {952,5},
     {'case',
      {952,11},
      {'case',
       {952,11},
       {call,
        {952,11},
        {atom,{952,11},inf_ge},
        [{var,{952,18},'MinA'},{var,{952,24},'MinB'}]},
       [{clause,
         {952,11},
         [{atom,{952,11},true}],
         [],
         [{call,
           {952,38},
           {atom,{952,38},inf_le},
           [{var,{952,45},'MinA'},{var,{952,51},'MaxB'}]}]},
        {clause,{952,11},[{atom,{952,11},false}],[],[{atom,{952,11},false}]},
        {clause,
         [{generated,true},{location,{952,11}}],
         [{var,{952,11},cov2}],
         [],
         [{call,
           {952,11},
           {remote,{952,11},{atom,{952,11},erlang},{atom,{952,11},error}},
           [{block,0,
             [{tuple,
               {952,11},
               [{atom,{952,11},badarg},{var,{952,11},cov2}]}]}]}]}]},
      [{clause,{952,11},[{atom,{952,11},true}],[],[{atom,{952,11},true}]},
       {clause,
        {952,11},
        [{atom,{952,11},false}],
        [],
        [{debug_line,953,404},
         {'case',
          {953,10},
          {call,
           {953,10},
           {atom,{953,10},inf_ge},
           [{var,{953,17},'MinB'},{var,{953,23},'MinA'}]},
          [{clause,
            {953,10},
            [{atom,{953,10},true}],
            [],
            [{call,
              {953,37},
              {atom,{953,37},inf_le},
              [{var,{953,44},'MinB'},{var,{953,50},'MaxA'}]}]},
           {clause,
            {953,10},
            [{atom,{953,10},false}],
            [],
            [{atom,{953,10},false}]},
           {clause,
            [{generated,true},{location,{953,10}}],
            [{var,{953,10},cov3}],
            [],
            [{call,
              {953,10},
              {remote,{953,10},{atom,{953,10},erlang},{atom,{953,10},error}},
              [{block,0,
                [{tuple,
                  {953,10},
                  [{atom,{953,10},badarg},{var,{953,10},cov3}]}]}]}]}]}]},
       {clause,
        [{generated,true},{location,{952,11}}],
        [{var,{952,11},cov4}],
        [],
        [{call,
          {952,11},
          {remote,{952,11},{atom,{952,11},erlang},{atom,{952,11},error}},
          [{block,0,
            [{tuple,
              {952,11},
              [{atom,{952,11},badarg},{var,{952,11},cov4}]}]}]}]}]},
     [{clause,
       {954,9},
       [{atom,{954,9},true}],
       [],
       [{debug_line,955,405},
        {match,
         {955,13},
         {atom,{955,13},true},
         {'case',
          {955,20},
          {call,
           {955,20},
           {atom,{955,20},inf_le},
           [{var,{955,27},'MinA'},{var,{955,33},'MaxA'}]},
          [{clause,
            {955,20},
            [{atom,{955,20},true}],
            [],
            [{call,
              {955,47},
              {atom,{955,47},inf_le},
              [{var,{955,54},'MinB'},{var,{955,60},'MaxB'}]}]},
           {clause,
            {955,20},
            [{atom,{955,20},false}],
            [],
            [{atom,{955,20},false}]},
           {clause,
            [{generated,true},{location,{955,20}}],
            [{var,{955,20},cov5}],
            [],
            [{call,
              {955,20},
              {remote,{955,20},{atom,{955,20},erlang},{atom,{955,20},error}},
              [{block,0,
                [{tuple,
                  {955,20},
                  [{atom,{955,20},badarg},{var,{955,20},cov5}]}]}]}]}]}},
        {debug_line,956,406},
        {tuple,
         {956,13},
         [{call,
           {956,14},
           {atom,{956,14},inf_max},
           [{var,{956,22},'MinA'},{var,{956,28},'MinB'}]},
          {call,
           {956,34},
           {atom,{956,34},inf_min},
           [{var,{956,42},'MaxA'},{var,{956,48},'MaxB'}]}]}]},
      {clause,
       {957,9},
       [{atom,{957,9},false}],
       [],
       [{debug_line,958,407},{atom,{958,13},none}]}]}]},
  {clause,
   {960,1},
   [{tuple,{960,12},[{var,{960,13},'MinA'},{var,{960,18},'MaxA'}]},
    {atom,{960,25},any}],
   [],
   [{debug_line,961,408},
    {tuple,{961,5},[{var,{961,6},'MinA'},{var,{961,11},'MaxA'}]}]},
  {clause,
   {962,1},
   [{atom,{962,12},any},
    {tuple,{962,17},[{var,{962,18},'MinB'},{var,{962,23},'MaxB'}]}],
   [],
   [{debug_line,963,409},
    {tuple,{963,5},[{var,{963,6},'MinB'},{var,{963,11},'MaxB'}]}]},
  {clause,
   {964,1},
   [{var,{964,12},'_'},{var,{964,15},'_'}],
   [],
   [{debug_line,965,410},{atom,{965,5},any}]}]}.
{function,
    {967,1},
    glb_tuples,2,
    [{clause,
         {967,1},
         [{var,{967,1},'_'},{var,{967,1},'_'}],
         [[{call,
               {967,1},
               {remote,
                   {967,1},
                   {atom,{967,1},fake},
                   {atom,{967,1},is_beam_bif_info}},
               []}]],
         [{debug_line,967,411},{atom,{967,1},ignore}]},
     {clause,
         {967,1},
         [{tuple,
              {967,12},
              [{atom,{967,12},t_tuple},
               {var,{967,26},'Sz1'},
               {var,{967,36},'Ex1'},
               {var,{967,12},'_'}]},
          {tuple,
              {967,42},
              [{atom,{967,42},t_tuple},
               {var,{967,56},'Sz2'},
               {var,{967,66},'Ex2'},
               {var,{967,42},'_'}]}],
         [[{var,{968,8},'Ex1'},
           {op,{968,17},'<',{var,{968,13},'Sz1'},{var,{968,19},'Sz2'}}],
          [{var,{969,8},'Ex2'},
           {op,{969,17},'<',{var,{969,13},'Sz2'},{var,{969,19},'Sz1'}}]],
         [{debug_line,970,412},{atom,{970,5},none}]},
     {clause,
         {971,1},
         [{tuple,
              {971,12},
              [{atom,{971,12},t_tuple},
               {var,{971,26},'Sz1'},
               {var,{971,36},'Ex1'},
               {var,{971,49},'Es1'}]},
          {tuple,
              {972,12},
              [{atom,{972,12},t_tuple},
               {var,{972,26},'Sz2'},
               {var,{972,36},'Ex2'},
               {var,{972,49},'Es2'}]}],
         [],
         [{debug_line,973,413},
          {match,
              {973,5},
              {var,{973,5},'Size'},
              {call,
                  {973,12},
                  {remote,{973,12},{atom,{973,12},erlang},{atom,{973,12},max}},
                  [{var,{973,16},'Sz1'},{var,{973,21},'Sz2'}]}},
          {debug_line,974,414},
          {match,
              {974,5},
              {var,{974,5},'Exact'},
              {op,{974,17},'or',{var,{974,13},'Ex1'},{var,{974,20},'Ex2'}}},
          {debug_line,975,415},
          {'case',
              {975,5},
              {call,
                  {975,10},
                  {atom,{975,10},glb_elements},
                  [{var,{975,23},'Es1'},{var,{975,28},'Es2'}]},
              [{clause,
                   {976,9},
                   [{atom,{976,9},none}],
                   [],
                   [{debug_line,977,416},{atom,{977,13},none}]},
               {clause,
                   {978,9},
                   [{var,{978,9},'Es'}],
                   [],
                   [{debug_line,979,417},
                    {tuple,
                        {979,13},
                        [{atom,{979,13},t_tuple},
                         {var,{979,27},'Size'},
                         {var,{979,38},'Exact'},
                         {var,{979,53},'Es'}]}]}]}]}]}.
{function,
    {982,1},
    glb_elements,2,
    [{clause,
         {982,1},
         [{var,{982,1},'_'},{var,{982,1},'_'}],
         [[{call,
               {982,1},
               {remote,
                   {982,1},
                   {atom,{982,1},fake},
                   {atom,{982,1},is_beam_bif_info}},
               []}]],
         [{debug_line,982,418},{atom,{982,1},ignore}]},
     {clause,
         {982,1},
         [{var,{982,14},'Es1'},{var,{982,19},'Es2'}],
         [],
         [{debug_line,983,419},
          {match,
              {983,5},
              {var,{983,5},'Keys'},
              {call,
                  {983,12},
                  {remote,
                      {983,12},
                      {atom,{983,12},lists},
                      {atom,{983,12},usort}},
                  [{block,0,
                       [{op,{983,33},
                            '++',
                            {call,
                                {983,18},
                                {remote,
                                    {983,22},
                                    {atom,{983,18},maps},
                                    {atom,{983,23},keys}},
                                [{var,{983,28},'Es1'}]},
                            {call,
                                {983,36},
                                {remote,
                                    {983,40},
                                    {atom,{983,36},maps},
                                    {atom,{983,41},keys}},
                                [{var,{983,46},'Es2'}]}}]}]}},
          {debug_line,984,420},
          {call,
              {984,5},
              {atom,{984,5},glb_elements_1},
              [{var,{984,20},'Keys'},
               {var,{984,26},'Es1'},
               {var,{984,31},'Es2'},
               {block,0,[{map,{984,36},[]}]}]}]}]}.
{function,
 {986,1},
 glb_elements_1,4,
 [{clause,
   {986,1},
   [{var,{986,1},'_'},{var,{986,1},'_'},{var,{986,1},'_'},{var,{986,1},'_'}],
   [[{call,
      {986,1},
      {remote,{986,1},{atom,{986,1},fake},{atom,{986,1},is_beam_bif_info}},
      []}]],
   [{debug_line,986,421},{atom,{986,1},ignore}]},
  {clause,
   {986,1},
   [{cons,{986,16},{var,{986,17},'Key'},{var,{986,23},'Keys'}},
    {var,{986,30},'Es1'},
    {var,{986,35},'Es2'},
    {var,{986,40},'Acc'}],
   [],
   [{debug_line,987,422},
    {'case',
     {987,5},
     {tuple,{987,10},[{var,{987,11},'Es1'},{var,{987,16},'Es2'}]},
     [{clause,
       {988,9},
       [{tuple,
         {988,9},
         [{map,
           {988,10},
           [{map_field_exact,
             {988,17},
             {var,{988,13},'Key'},
             {var,{988,20},'Type1'}}]},
          {map,
           {988,29},
           [{map_field_exact,
             {988,36},
             {var,{988,32},'Key'},
             {var,{988,39},'Type2'}}]}]}],
       [],
       [{debug_line,990,423},
        {'case',
         {990,13},
         {call,
          {990,18},
          {atom,{990,18},meet},
          [{var,{990,23},'Type1'},{var,{990,30},'Type2'}]},
         [{clause,
           {991,17},
           [{atom,{991,17},none}],
           [],
           [{debug_line,991,424},{atom,{991,25},none}]},
          {clause,
           {992,17},
           [{var,{992,17},'Type'}],
           [],
           [{debug_line,992,425},
            {call,
             {992,25},
             {atom,{992,25},glb_elements_1},
             [{var,{992,40},'Keys'},
              {var,{992,46},'Es1'},
              {var,{992,51},'Es2'},
              {block,0,
               [{map,
                 {992,59},
                 {var,{992,56},'Acc'},
                 [{map_field_assoc,
                   {992,66},
                   {var,{992,62},'Key'},
                   {var,{992,69},'Type'}}]}]}]}]}]}]},
      {clause,
       {994,9},
       [{tuple,
         {994,9},
         [{map,
           {994,10},
           [{map_field_exact,
             {994,17},
             {var,{994,13},'Key'},
             {var,{994,20},'Type1'}}]},
          {var,{994,29},'_'}]}],
       [],
       [{debug_line,995,426},
        {call,
         {995,13},
         {atom,{995,13},glb_elements_1},
         [{var,{995,28},'Keys'},
          {var,{995,34},'Es1'},
          {var,{995,39},'Es2'},
          {block,0,
           [{map,
             {995,47},
             {var,{995,44},'Acc'},
             [{map_field_assoc,
               {995,54},
               {var,{995,50},'Key'},
               {var,{995,57},'Type1'}}]}]}]}]},
      {clause,
       {996,9},
       [{tuple,
         {996,9},
         [{var,{996,10},'_'},
          {map,
           {996,13},
           [{map_field_exact,
             {996,20},
             {var,{996,16},'Key'},
             {var,{996,23},'Type2'}}]}]}],
       [],
       [{debug_line,997,427},
        {call,
         {997,13},
         {atom,{997,13},glb_elements_1},
         [{var,{997,28},'Keys'},
          {var,{997,34},'Es1'},
          {var,{997,39},'Es2'},
          {block,0,
           [{map,
             {997,47},
             {var,{997,44},'Acc'},
             [{map_field_assoc,
               {997,54},
               {var,{997,50},'Key'},
               {var,{997,57},'Type2'}}]}]}]}]}]}]},
  {clause,
   {999,1},
   [{nil,{999,16}},
    {var,{999,20},'_Es1'},
    {var,{999,26},'_Es2'},
    {var,{999,32},'Acc'}],
   [],
   [{debug_line,1000,428},{var,{1000,5},'Acc'}]}]}.
{attribute,{1015,2},
           spec,
           {{lub,2},
            [{type,{1015,10},
                   'fun',
                   [{type,{1015,10},
                          product,
                          [{user_type,{1015,11},normal_type,[]},
                           {user_type,{1015,26},normal_type,[]}]},
                    {user_type,{1015,44},normal_type,[]}]}]}}.
{function,
 {1017,1},
 lub,2,
 [{clause,
   {1017,1},
   [{var,{1017,1},'_'},{var,{1017,1},'_'}],
   [[{call,
      {1017,1},
      {remote,{1017,1},{atom,{1017,1},fake},{atom,{1017,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1017,429},{atom,{1017,1},ignore}]},
  {clause,
   {1017,1},
   [{var,{1017,5},'T'},{var,{1017,8},'T'}],
   [],
   [{debug_line,1018,430},
    {call,
     {1018,5},
     {atom,{1018,5},verified_normal_type},
     [{var,{1018,26},'T'}]}]},
  {clause,
   {1019,1},
   [{atom,{1019,5},none},{var,{1019,11},'T'}],
   [],
   [{debug_line,1020,431},
    {call,
     {1020,5},
     {atom,{1020,5},verified_normal_type},
     [{var,{1020,26},'T'}]}]},
  {clause,
   {1021,1},
   [{var,{1021,5},'T'},{atom,{1021,8},none}],
   [],
   [{debug_line,1022,432},
    {call,
     {1022,5},
     {atom,{1022,5},verified_normal_type},
     [{var,{1022,26},'T'}]}]},
  {clause,
   {1023,1},
   [{atom,{1023,5},any},{var,{1023,10},'_'}],
   [],
   [{debug_line,1024,433},{atom,{1024,5},any}]},
  {clause,
   {1025,1},
   [{var,{1025,5},'_'},{atom,{1025,8},any}],
   [],
   [{debug_line,1026,434},{atom,{1026,5},any}]},
  {clause,
   {1027,1},
   [{tuple,
     {1027,5},
     [{atom,{1027,5},t_atom},
      {match,
       {1027,22},
       {cons,{1027,22},{var,{1027,23},'_'},{var,{1027,25},'_'}},
       {var,{1027,28},'Set1'}}]},
    {tuple,
     {1027,35},
     [{atom,{1027,35},t_atom},
      {match,
       {1027,52},
       {cons,{1027,52},{var,{1027,53},'_'},{var,{1027,55},'_'}},
       {var,{1027,58},'Set2'}}]}],
   [],
   [{debug_line,1028,435},
    {match,
     {1028,5},
     {var,{1028,5},'Set'},
     {call,
      {1028,11},
      {remote,{1028,18},{atom,{1028,11},ordsets},{atom,{1028,19},union}},
      [{var,{1028,25},'Set1'},{var,{1028,31},'Set2'}]}},
    {debug_line,1029,436},
    {'case',
     {1029,5},
     {call,
      {1029,10},
      {remote,{1029,17},{atom,{1029,10},ordsets},{atom,{1029,18},size}},
      [{var,{1029,23},'Set'}]},
     [{clause,
       {1030,9},
       [{var,{1030,9},'Size'}],
       [[{op,{1030,24},'=<',{var,{1030,19},'Size'},{integer,{1030,28},5}}]],
       [{debug_line,1031,437},
        {tuple,{1031,13},[{atom,{1031,13},t_atom},{var,{1031,30},'Set'}]}]},
      {clause,
       {1032,9},
       [{var,{1032,9},'_Size'}],
       [],
       [{debug_line,1033,438},
        {tuple,{1033,13},[{atom,{1033,13},t_atom},{atom,{1033,30},any}]}]}]}]},
  {clause,
   {1035,1},
   [{match,
     {1035,5},
     {tuple,{1035,5},[{atom,{1035,5},t_atom},{atom,{1035,22},any}]},
     {var,{1035,27},'T'}},
    {tuple,
     {1035,30},
     [{atom,{1035,30},t_atom},
      {cons,{1035,47},{var,{1035,48},'_'},{var,{1035,50},'_'}}]}],
   [],
   [{debug_line,1035,439},{var,{1035,58},'T'}]},
  {clause,
   {1036,1},
   [{tuple,
     {1036,5},
     [{atom,{1036,5},t_atom},
      {cons,{1036,22},{var,{1036,23},'_'},{var,{1036,25},'_'}}]},
    {match,
     {1036,30},
     {tuple,{1036,30},[{atom,{1036,30},t_atom},{atom,{1036,47},any}]},
     {var,{1036,52},'T'}}],
   [],
   [{debug_line,1036,440},{var,{1036,58},'T'}]},
  {clause,
   {1037,1},
   [{tuple,
     {1037,5},
     [{atom,{1037,5},t_bitstring},{var,{1037,28},'U1'},{var,{1037,42},'A1'}]},
    {tuple,
     {1038,5},
     [{atom,{1038,5},t_bitstring},{var,{1038,28},'U2'},{var,{1038,42},'A2'}]}],
   [],
   [{debug_line,1039,441},
    {tuple,
     {1039,5},
     [{atom,{1039,5},t_bitstring},
      {call,
       {1039,28},
       {atom,{1039,28},gcd},
       [{var,{1039,32},'U1'},{var,{1039,36},'U2'}]},
      {op,{1039,54},'and',{var,{1039,51},'A1'},{var,{1039,58},'A2'}}]}]},
  {clause,
   {1040,1},
   [{tuple,
     {1040,5},
     [{atom,{1040,5},t_bitstring},{var,{1040,28},'U1'},{var,{1040,5},'_'}]},
    {tuple,{1040,33},[{atom,{1040,33},t_bs_context},{var,{1040,57},'U2'}]}],
   [],
   [{debug_line,1041,442},
    {tuple,
     {1041,5},
     [{atom,{1041,5},t_bs_matchable},
      {call,
       {1041,31},
       {atom,{1041,31},gcd},
       [{var,{1041,35},'U1'},{var,{1041,39},'U2'}]}]}]},
  {clause,
   {1042,1},
   [{tuple,
     {1042,5},
     [{atom,{1042,5},t_bitstring},{var,{1042,28},'UnitA'},{var,{1042,5},'_'}]},
    {tuple,
     {1042,36},
     [{atom,{1042,36},t_bs_matchable},{var,{1042,62},'UnitB'}]}],
   [],
   [{debug_line,1043,443},
    {call,
     {1043,5},
     {atom,{1043,5},lub_bs_matchable},
     [{var,{1043,22},'UnitA'},{var,{1043,29},'UnitB'}]}]},
  {clause,
   {1044,1},
   [{tuple,{1044,5},[{atom,{1044,5},t_bs_context},{var,{1044,29},'UnitA'}]},
    {tuple,{1044,37},[{atom,{1044,37},t_bs_context},{var,{1044,61},'UnitB'}]}],
   [],
   [{debug_line,1045,444},
    {tuple,
     {1045,5},
     [{atom,{1045,5},t_bs_context},
      {call,
       {1045,29},
       {atom,{1045,29},gcd},
       [{var,{1045,33},'UnitA'},{var,{1045,40},'UnitB'}]}]}]},
  {clause,
   {1046,1},
   [{tuple,{1046,5},[{atom,{1046,5},t_bs_context},{var,{1046,29},'U1'}]},
    {tuple,
     {1046,34},
     [{atom,{1046,34},t_bitstring},{var,{1046,57},'U2'},{var,{1046,34},'_'}]}],
   [],
   [{debug_line,1047,445},
    {tuple,
     {1047,5},
     [{atom,{1047,5},t_bs_matchable},
      {call,
       {1047,31},
       {atom,{1047,31},gcd},
       [{var,{1047,35},'U1'},{var,{1047,39},'U2'}]}]}]},
  {clause,
   {1048,1},
   [{tuple,{1048,5},[{atom,{1048,5},t_bs_context},{var,{1048,29},'UnitA'}]},
    {tuple,
     {1048,37},
     [{atom,{1048,37},t_bs_matchable},{var,{1048,63},'UnitB'}]}],
   [],
   [{debug_line,1049,446},
    {call,
     {1049,5},
     {atom,{1049,5},lub_bs_matchable},
     [{var,{1049,22},'UnitA'},{var,{1049,29},'UnitB'}]}]},
  {clause,
   {1050,1},
   [{tuple,{1050,5},[{atom,{1050,5},t_bs_matchable},{var,{1050,31},'UnitA'}]},
    {tuple,
     {1050,39},
     [{atom,{1050,39},t_bs_matchable},{var,{1050,65},'UnitB'}]}],
   [],
   [{debug_line,1051,447},
    {call,
     {1051,5},
     {atom,{1051,5},lub_bs_matchable},
     [{var,{1051,22},'UnitA'},{var,{1051,29},'UnitB'}]}]},
  {clause,
   {1052,1},
   [{tuple,{1052,5},[{atom,{1052,5},t_bs_matchable},{var,{1052,31},'UnitA'}]},
    {tuple,
     {1052,39},
     [{atom,{1052,39},t_bitstring},
      {var,{1052,62},'UnitB'},
      {var,{1052,39},'_'}]}],
   [],
   [{debug_line,1053,448},
    {call,
     {1053,5},
     {atom,{1053,5},lub_bs_matchable},
     [{var,{1053,22},'UnitA'},{var,{1053,29},'UnitB'}]}]},
  {clause,
   {1054,1},
   [{tuple,{1054,5},[{atom,{1054,5},t_bs_matchable},{var,{1054,31},'UnitA'}]},
    {tuple,{1054,39},[{atom,{1054,39},t_bs_context},{var,{1054,63},'UnitB'}]}],
   [],
   [{debug_line,1055,449},
    {call,
     {1055,5},
     {atom,{1055,5},lub_bs_matchable},
     [{var,{1055,22},'UnitA'},{var,{1055,29},'UnitB'}]}]},
  {clause,
   {1056,1},
   [{tuple,
     {1056,5},
     [{atom,{1056,5},t_cons},{var,{1056,18},'TypeA'},{var,{1056,35},'TermA'}]},
    {tuple,
     {1057,5},
     [{atom,{1057,5},t_cons},
      {var,{1057,18},'TypeB'},
      {var,{1057,35},'TermB'}]}],
   [],
   [{debug_line,1059,450},
    {tuple,
     {1059,5},
     [{atom,{1059,5},t_cons},
      {call,
       {1059,18},
       {atom,{1059,18},join},
       [{var,{1059,23},'TypeA'},{var,{1059,29},'TypeB'}]},
      {call,
       {1059,47},
       {atom,{1059,47},join},
       [{var,{1059,52},'TermA'},{var,{1059,59},'TermB'}]}]}]},
  {clause,
   {1060,1},
   [{tuple,
     {1060,5},
     [{atom,{1060,5},t_cons},{var,{1060,18},'TypeA'},{var,{1060,35},'TermA'}]},
    {tuple,
     {1061,5},
     [{atom,{1061,5},t_list},
      {var,{1061,18},'TypeB'},
      {var,{1061,35},'TermB'}]}],
   [],
   [{debug_line,1062,451},
    {tuple,
     {1062,5},
     [{atom,{1062,5},t_list},
      {call,
       {1062,18},
       {atom,{1062,18},join},
       [{var,{1062,23},'TypeA'},{var,{1062,29},'TypeB'}]},
      {call,
       {1062,47},
       {atom,{1062,47},join},
       [{var,{1062,52},'TermA'},{var,{1062,59},'TermB'}]}]}]},
  {clause,
   {1063,1},
   [{tuple,
     {1063,5},
     [{atom,{1063,5},t_cons},{var,{1063,18},'Type'},{var,{1063,34},'Term'}]},
    {atom,{1063,41},nil}],
   [],
   [{debug_line,1064,452},
    {tuple,
     {1064,5},
     [{atom,{1064,5},t_list},{var,{1064,18},'Type'},{var,{1064,34},'Term'}]}]},
  {clause,
   {1065,1},
   [{tuple,{1065,5},[{atom,{1065,5},t_float},{var,{1065,23},'R1'}]},
    {tuple,{1065,28},[{atom,{1065,28},t_float},{var,{1065,46},'R2'}]}],
   [],
   [{debug_line,1066,453},
    {call,
     {1066,5},
     {atom,{1066,5},float_from_range},
     [{block,0,
       [{call,
         {1066,22},
         {atom,{1066,22},lub_ranges},
         [{var,{1066,33},'R1'},{var,{1066,37},'R2'}]}]}]}]},
  {clause,
   {1067,1},
   [{tuple,{1067,5},[{atom,{1067,5},t_float},{var,{1067,23},'R1'}]},
    {tuple,{1067,28},[{atom,{1067,28},t_integer},{var,{1067,48},'R2'}]}],
   [],
   [{debug_line,1068,454},
    {call,
     {1068,5},
     {atom,{1068,5},number_from_range},
     [{block,0,
       [{call,
         {1068,23},
         {atom,{1068,23},lub_ranges},
         [{var,{1068,34},'R1'},{var,{1068,38},'R2'}]}]}]}]},
  {clause,
   {1069,1},
   [{tuple,{1069,5},[{atom,{1069,5},t_float},{var,{1069,23},'R1'}]},
    {tuple,{1069,28},[{atom,{1069,28},t_number},{var,{1069,47},'R2'}]}],
   [],
   [{debug_line,1070,455},
    {call,
     {1070,5},
     {atom,{1070,5},number_from_range},
     [{block,0,
       [{call,
         {1070,23},
         {atom,{1070,23},lub_ranges},
         [{var,{1070,34},'R1'},{var,{1070,38},'R2'}]}]}]}]},
  {clause,
   {1071,1},
   [{tuple,
     {1071,5},
     [{atom,{1071,5},t_fun},
      {var,{1071,18},'SameArity'},
      {var,{1071,35},'SameTarget'},
      {var,{1071,51},'TypeA'}]},
    {tuple,
     {1072,5},
     [{atom,{1072,5},t_fun},
      {var,{1072,18},'SameArity'},
      {var,{1072,35},'SameTarget'},
      {var,{1072,51},'TypeB'}]}],
   [],
   [{debug_line,1073,456},
    {tuple,
     {1073,5},
     [{atom,{1073,5},t_fun},
      {var,{1073,18},'SameArity'},
      {var,{1073,35},'SameTarget'},
      {call,
       {1073,51},
       {atom,{1073,51},join},
       [{var,{1073,56},'TypeA'},{var,{1073,63},'TypeB'}]}]}]},
  {clause,
   {1074,1},
   [{tuple,
     {1074,5},
     [{atom,{1074,5},t_fun},
      {var,{1074,18},'SameArity'},
      {var,{1074,5},'_'},
      {var,{1074,33},'TypeA'}]},
    {tuple,
     {1074,41},
     [{atom,{1074,41},t_fun},
      {var,{1074,54},'SameArity'},
      {var,{1074,41},'_'},
      {var,{1074,69},'TypeB'}]}],
   [],
   [{debug_line,1075,457},
    {tuple,
     {1075,5},
     [{atom,{1075,5},t_fun},
      {var,{1075,18},'SameArity'},
      {atom,{1075,5},any},
      {call,
       {1075,33},
       {atom,{1075,33},join},
       [{var,{1075,38},'TypeA'},{var,{1075,45},'TypeB'}]}]}]},
  {clause,
   {1076,1},
   [{tuple,
     {1076,5},
     [{atom,{1076,5},t_fun},
      {var,{1076,5},'_'},
      {var,{1076,5},'_'},
      {var,{1076,17},'TypeA'}]},
    {tuple,
     {1076,25},
     [{atom,{1076,25},t_fun},
      {var,{1076,25},'_'},
      {var,{1076,25},'_'},
      {var,{1076,37},'TypeB'}]}],
   [],
   [{debug_line,1077,458},
    {tuple,
     {1077,5},
     [{atom,{1077,5},t_fun},
      {atom,{1077,5},any},
      {atom,{1077,5},any},
      {call,
       {1077,17},
       {atom,{1077,17},join},
       [{var,{1077,22},'TypeA'},{var,{1077,29},'TypeB'}]}]}]},
  {clause,
   {1078,1},
   [{tuple,{1078,5},[{atom,{1078,5},t_integer},{var,{1078,25},'R1'}]},
    {tuple,{1078,30},[{atom,{1078,30},t_integer},{var,{1078,50},'R2'}]}],
   [],
   [{debug_line,1079,459},
    {call,
     {1079,5},
     {atom,{1079,5},integer_from_range},
     [{block,0,
       [{call,
         {1079,24},
         {atom,{1079,24},lub_ranges},
         [{var,{1079,35},'R1'},{var,{1079,39},'R2'}]}]}]}]},
  {clause,
   {1080,1},
   [{tuple,{1080,5},[{atom,{1080,5},t_integer},{var,{1080,25},'R1'}]},
    {tuple,{1080,30},[{atom,{1080,30},t_float},{var,{1080,48},'R2'}]}],
   [],
   [{debug_line,1081,460},
    {call,
     {1081,5},
     {atom,{1081,5},number_from_range},
     [{block,0,
       [{call,
         {1081,23},
         {atom,{1081,23},lub_ranges},
         [{var,{1081,34},'R1'},{var,{1081,38},'R2'}]}]}]}]},
  {clause,
   {1082,1},
   [{tuple,{1082,5},[{atom,{1082,5},t_integer},{var,{1082,25},'R1'}]},
    {tuple,{1082,30},[{atom,{1082,30},t_number},{var,{1082,49},'R2'}]}],
   [],
   [{debug_line,1083,461},
    {call,
     {1083,5},
     {atom,{1083,5},number_from_range},
     [{block,0,
       [{call,
         {1083,23},
         {atom,{1083,23},lub_ranges},
         [{var,{1083,34},'R1'},{var,{1083,38},'R2'}]}]}]}]},
  {clause,
   {1084,1},
   [{tuple,
     {1084,5},
     [{atom,{1084,5},t_list},{var,{1084,18},'TypeA'},{var,{1084,35},'TermA'}]},
    {tuple,
     {1085,5},
     [{atom,{1085,5},t_list},
      {var,{1085,18},'TypeB'},
      {var,{1085,35},'TermB'}]}],
   [],
   [{debug_line,1086,462},
    {tuple,
     {1086,5},
     [{atom,{1086,5},t_list},
      {call,
       {1086,18},
       {atom,{1086,18},join},
       [{var,{1086,23},'TypeA'},{var,{1086,30},'TypeB'}]},
      {call,
       {1086,48},
       {atom,{1086,48},join},
       [{var,{1086,53},'TermA'},{var,{1086,60},'TermB'}]}]}]},
  {clause,
   {1087,1},
   [{match,
     {1087,5},
     {tuple,
      {1087,5},
      [{atom,{1087,5},t_list},{var,{1087,5},'_'},{var,{1087,5},'_'}]},
     {var,{1087,15},'A'}},
    {match,
     {1087,18},
     {tuple,
      {1087,18},
      [{atom,{1087,18},t_cons},{var,{1087,18},'_'},{var,{1087,18},'_'}]},
     {var,{1087,28},'B'}}],
   [],
   [{debug_line,1088,463},
    {call,
     {1088,5},
     {atom,{1088,5},lub},
     [{var,{1088,9},'B'},{var,{1088,12},'A'}]}]},
  {clause,
   {1089,1},
   [{match,{1089,5},{atom,{1089,5},nil},{var,{1089,9},'A'}},
    {match,
     {1089,12},
     {tuple,
      {1089,12},
      [{atom,{1089,12},t_cons},{var,{1089,12},'_'},{var,{1089,12},'_'}]},
     {var,{1089,22},'B'}}],
   [],
   [{debug_line,1090,464},
    {call,
     {1090,5},
     {atom,{1090,5},lub},
     [{var,{1090,9},'B'},{var,{1090,12},'A'}]}]},
  {clause,
   {1091,1},
   [{atom,{1091,5},nil},
    {match,
     {1091,10},
     {tuple,
      {1091,10},
      [{atom,{1091,10},t_list},{var,{1091,10},'_'},{var,{1091,10},'_'}]},
     {var,{1091,20},'T'}}],
   [],
   [{debug_line,1092,465},{var,{1092,5},'T'}]},
  {clause,
   {1093,1},
   [{match,
     {1093,5},
     {tuple,
      {1093,5},
      [{atom,{1093,5},t_list},{var,{1093,5},'_'},{var,{1093,5},'_'}]},
     {var,{1093,15},'T'}},
    {atom,{1093,18},nil}],
   [],
   [{debug_line,1094,466},{var,{1094,5},'T'}]},
  {clause,
   {1095,1},
   [{tuple,{1095,5},[{atom,{1095,5},t_number},{var,{1095,24},'R1'}]},
    {tuple,{1095,29},[{atom,{1095,29},t_number},{var,{1095,48},'R2'}]}],
   [],
   [{debug_line,1096,467},
    {call,
     {1096,5},
     {atom,{1096,5},number_from_range},
     [{block,0,
       [{call,
         {1096,23},
         {atom,{1096,23},lub_ranges},
         [{var,{1096,34},'R1'},{var,{1096,38},'R2'}]}]}]}]},
  {clause,
   {1097,1},
   [{tuple,{1097,5},[{atom,{1097,5},t_number},{var,{1097,24},'R1'}]},
    {tuple,{1097,29},[{atom,{1097,29},t_integer},{var,{1097,49},'R2'}]}],
   [],
   [{debug_line,1098,468},
    {call,
     {1098,5},
     {atom,{1098,5},number_from_range},
     [{block,0,
       [{call,
         {1098,23},
         {atom,{1098,23},lub_ranges},
         [{var,{1098,34},'R1'},{var,{1098,38},'R2'}]}]}]}]},
  {clause,
   {1099,1},
   [{tuple,{1099,5},[{atom,{1099,5},t_number},{var,{1099,24},'R1'}]},
    {tuple,{1099,29},[{atom,{1099,29},t_float},{var,{1099,47},'R2'}]}],
   [],
   [{debug_line,1100,469},
    {call,
     {1100,5},
     {atom,{1100,5},number_from_range},
     [{block,0,
       [{call,
         {1100,23},
         {atom,{1100,23},lub_ranges},
         [{var,{1100,34},'R1'},{var,{1100,38},'R2'}]}]}]}]},
  {clause,
   {1101,1},
   [{tuple,
     {1101,5},
     [{atom,{1101,5},t_map},
      {var,{1101,22},'SKeyA'},
      {var,{1101,40},'SValueA'}]},
    {tuple,
     {1102,5},
     [{atom,{1102,5},t_map},
      {var,{1102,22},'SKeyB'},
      {var,{1102,40},'SValueB'}]}],
   [],
   [{debug_line,1104,470},
    {match,
     {1104,5},
     {var,{1104,5},'SKey'},
     {call,
      {1104,12},
      {atom,{1104,12},join},
      [{var,{1104,17},'SKeyA'},{var,{1104,24},'SKeyB'}]}},
    {debug_line,1105,471},
    {match,
     {1105,5},
     {var,{1105,5},'SValue'},
     {call,
      {1105,14},
      {atom,{1105,14},join},
      [{var,{1105,19},'SValueA'},{var,{1105,28},'SValueB'}]}},
    {debug_line,1106,472},
    {tuple,
     {1106,5},
     [{atom,{1106,5},t_map},
      {var,{1106,22},'SKey'},
      {var,{1106,39},'SValue'}]}]},
  {clause,
   {1107,1},
   [{tuple,
     {1107,5},
     [{atom,{1107,5},t_tuple},
      {var,{1107,19},'Sz'},
      {var,{1107,28},'ExactA'},
      {var,{1107,44},'EsA'}]},
    {tuple,
     {1108,5},
     [{atom,{1108,5},t_tuple},
      {var,{1108,19},'Sz'},
      {var,{1108,28},'ExactB'},
      {var,{1108,44},'EsB'}]}],
   [],
   [{debug_line,1109,473},
    {match,
     {1109,5},
     {var,{1109,5},'Exact'},
     {op,{1109,20},'and',{var,{1109,13},'ExactA'},{var,{1109,24},'ExactB'}}},
    {debug_line,1110,474},
    {match,
     {1110,5},
     {var,{1110,5},'Es'},
     {call,
      {1110,10},
      {atom,{1110,10},lub_tuple_elements},
      [{var,{1110,29},'Sz'},{var,{1110,33},'EsA'},{var,{1110,38},'EsB'}]}},
    {debug_line,1111,475},
    {tuple,
     {1111,5},
     [{atom,{1111,5},t_tuple},
      {var,{1111,19},'Sz'},
      {var,{1111,28},'Exact'},
      {var,{1111,43},'Es'}]}]},
  {clause,
   {1112,1},
   [{tuple,
     {1112,5},
     [{atom,{1112,5},t_tuple},
      {var,{1112,19},'SzA'},
      {var,{1112,5},'_'},
      {var,{1112,32},'EsA'}]},
    {tuple,
     {1112,38},
     [{atom,{1112,38},t_tuple},
      {var,{1112,52},'SzB'},
      {var,{1112,38},'_'},
      {var,{1112,65},'EsB'}]}],
   [],
   [{debug_line,1113,476},
    {match,
     {1113,5},
     {var,{1113,5},'Sz'},
     {call,
      {1113,10},
      {remote,{1113,10},{atom,{1113,10},erlang},{atom,{1113,10},min}},
      [{var,{1113,14},'SzA'},{var,{1113,19},'SzB'}]}},
    {debug_line,1114,477},
    {match,
     {1114,5},
     {var,{1114,5},'Es'},
     {call,
      {1114,10},
      {atom,{1114,10},lub_tuple_elements},
      [{var,{1114,29},'Sz'},{var,{1114,33},'EsA'},{var,{1114,38},'EsB'}]}},
    {debug_line,1115,478},
    {tuple,
     {1115,5},
     [{atom,{1115,5},t_tuple},
      {var,{1115,19},'Sz'},
      {atom,{1115,5},false},
      {var,{1115,31},'Es'}]}]},
  {clause,
   {1116,1},
   [{var,{1116,5},'T1'},{var,{1116,9},'T2'}],
   [],
   [{debug_line,1118,479},
    {'case',
     {1118,5},
     {'case',
      {1118,10},
      {call,{1118,10},{atom,{1118,10},is_identifier},[{var,{1118,24},'T1'}]},
      [{clause,
        {1118,10},
        [{atom,{1118,10},true}],
        [],
        [{call,
          {1118,36},
          {atom,{1118,36},is_identifier},
          [{var,{1118,50},'T2'}]}]},
       {clause,{1118,10},[{atom,{1118,10},false}],[],[{atom,{1118,10},false}]},
       {clause,
        [{generated,true},{location,{1118,10}}],
        [{var,{1118,10},cov1}],
        [],
        [{call,
          {1118,10},
          {remote,{1118,10},{atom,{1118,10},erlang},{atom,{1118,10},error}},
          [{block,0,
            [{tuple,
              {1118,10},
              [{atom,{1118,10},badarg},{var,{1118,10},cov1}]}]}]}]}]},
     [{clause,
       {1119,9},
       [{atom,{1119,9},true}],
       [],
       [{debug_line,1120,480},{atom,{1120,13},identifier}]},
      {clause,
       {1121,9},
       [{atom,{1121,9},false}],
       [],
       [{debug_line,1122,481},
        {'case',
         {1122,13},
         {'case',
          {1122,18},
          {call,{1122,18},{atom,{1122,18},is_other},[{var,{1122,27},'T1'}]},
          [{clause,
            {1122,18},
            [{atom,{1122,18},true}],
            [],
            [{call,
              {1122,39},
              {atom,{1122,39},is_other},
              [{var,{1122,48},'T2'}]}]},
           {clause,
            {1122,18},
            [{atom,{1122,18},false}],
            [],
            [{atom,{1122,18},false}]},
           {clause,
            [{generated,true},{location,{1122,18}}],
            [{var,{1122,18},cov2}],
            [],
            [{call,
              {1122,18},
              {remote,
               {1122,18},
               {atom,{1122,18},erlang},
               {atom,{1122,18},error}},
              [{block,0,
                [{tuple,
                  {1122,18},
                  [{atom,{1122,18},badarg},{var,{1122,18},cov2}]}]}]}]}]},
         [{clause,
           {1123,17},
           [{atom,{1123,17},true}],
           [],
           [{debug_line,1123,482},{atom,{1123,25},other}]},
          {clause,
           {1124,17},
           [{atom,{1124,17},false}],
           [],
           [{debug_line,1124,483},{atom,{1124,26},any}]}]}]}]}]}]}.
{function,
    {1128,1},
    is_other,1,
    [{clause,
         {1128,1},
         [{var,{1128,1},'_'}],
         [[{call,
               {1128,1},
               {remote,
                   {1128,1},
                   {atom,{1128,1},fake},
                   {atom,{1128,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1128,484},{atom,{1128,1},ignore}]},
     {clause,
         {1128,1},
         [{var,{1128,10},'Type'}],
         [],
         [{debug_line,1129,485},
          {match,
              {1129,5},
              {var,{1129,5},'AnyMinusOther'},
              {tuple,
                  {1129,21},
                  [{atom,{1129,21},t_union},
                   {tuple,
                       {1129,35},
                       [{atom,{1129,35},t_atom},{atom,{1129,35},any}]},
                   {tuple,
                       {1130,35},
                       [{atom,{1130,35},t_list},
                        {atom,{1130,35},any},
                        {atom,{1130,35},any}]},
                   {tuple,
                       {1131,37},
                       [{atom,{1131,37},t_number},{atom,{1131,37},any}]},
                   {tuple,
                       {1132,40},
                       [{atom,{1132,40},t_tuple},
                        {integer,{1132,40},0},
                        {atom,{1132,40},false},
                        {map,{1132,40},[]}]},
                   {atom,{1133,36},none}]}},
          {debug_line,1134,486},
          {op,{1134,31},
              '=:=',
              {call,
                  {1134,5},
                  {atom,{1134,5},meet},
                  [{var,{1134,10},'AnyMinusOther'},{var,{1134,25},'Type'}]},
              {atom,{1134,35},none}}]}]}.
{function,{1136,1},
          is_identifier,1,
          [{clause,{1136,1},
                   [{var,{1136,1},'_'}],
                   [[{call,{1136,1},
                           {remote,{1136,1},
                                   {atom,{1136,1},fake},
                                   {atom,{1136,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1136,487},{atom,{1136,1},ignore}]},
           {clause,{1136,1},
                   [{atom,{1136,15},identifier}],
                   [],
                   [{debug_line,1136,488},{atom,{1136,30},true}]},
           {clause,{1137,1},
                   [{atom,{1137,15},pid}],
                   [],
                   [{debug_line,1137,489},{atom,{1137,23},true}]},
           {clause,{1138,1},
                   [{atom,{1138,15},port}],
                   [],
                   [{debug_line,1138,490},{atom,{1138,24},true}]},
           {clause,{1139,1},
                   [{atom,{1139,15},reference}],
                   [],
                   [{debug_line,1139,491},{atom,{1139,29},true}]},
           {clause,{1140,1},
                   [{var,{1140,15},'_'}],
                   [],
                   [{debug_line,1140,492},{atom,{1140,21},false}]}]}.
{function,{1142,1},
          lub_ranges,2,
          [{clause,{1142,1},
                   [{var,{1142,1},'_'},{var,{1142,1},'_'}],
                   [[{call,{1142,1},
                           {remote,{1142,1},
                                   {atom,{1142,1},fake},
                                   {atom,{1142,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1142,493},{atom,{1142,1},ignore}]},
           {clause,{1142,1},
                   [{tuple,{1142,12},
                           [{var,{1142,13},'MinA'},{var,{1142,18},'MaxA'}]},
                    {tuple,{1142,25},
                           [{var,{1142,26},'MinB'},{var,{1142,31},'MaxB'}]}],
                   [],
                   [{debug_line,1143,494},
                    {tuple,{1143,5},
                           [{call,{1143,6},
                                  {atom,{1143,6},inf_min},
                                  [{var,{1143,14},'MinA'},
                                   {var,{1143,20},'MinB'}]},
                            {call,{1143,27},
                                  {atom,{1143,27},inf_max},
                                  [{var,{1143,35},'MaxA'},
                                   {var,{1143,41},'MaxB'}]}]}]},
           {clause,{1144,1},
                   [{var,{1144,12},'_'},{var,{1144,15},'_'}],
                   [],
                   [{debug_line,1145,495},{atom,{1145,5},any}]}]}.
{function,
    {1148,1},
    number_to_float_range,1,
    [{clause,
         {1148,1},
         [{var,{1148,1},'_'}],
         [[{call,
               {1148,1},
               {remote,
                   {1148,1},
                   {atom,{1148,1},fake},
                   {atom,{1148,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1148,496},{atom,{1148,1},ignore}]},
     {clause,
         {1148,1},
         [{tuple,{1148,23},[{var,{1148,24},'Min'},{integer,{1148,29},0}]}],
         [],
         [{debug_line,1149,497},
          {call,
              {1149,5},
              {atom,{1149,5},number_to_float_range},
              [{block,0,
                   [{tuple,
                        {1149,27},
                        [{var,{1149,28},'Min'},
                         {op,{1149,33},'+',{float,{1149,34},0.0}}]}]}]}]},
     {clause,
         {1150,1},
         [{tuple,{1150,23},[{integer,{1150,24},0},{var,{1150,27},'Max'}]}],
         [],
         [{debug_line,1151,498},
          {call,
              {1151,5},
              {atom,{1151,5},number_to_float_range},
              [{block,0,
                   [{tuple,
                        {1151,27},
                        [{op,{1151,28},'-',{float,{1151,29},0.0}},
                         {var,{1151,34},'Max'}]}]}]}]},
     {clause,
         {1152,1},
         [{var,{1152,23},'Other'}],
         [],
         [{debug_line,1153,499},{var,{1153,5},'Other'}]}]}.
{function,{1155,1},
          lub_bs_matchable,2,
          [{clause,{1155,1},
                   [{var,{1155,1},'_'},{var,{1155,1},'_'}],
                   [[{call,{1155,1},
                           {remote,{1155,1},
                                   {atom,{1155,1},fake},
                                   {atom,{1155,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1155,500},{atom,{1155,1},ignore}]},
           {clause,{1155,1},
                   [{var,{1155,18},'UnitA'},{var,{1155,25},'UnitB'}],
                   [],
                   [{debug_line,1156,501},
                    {tuple,{1156,5},
                           [{atom,{1156,5},t_bs_matchable},
                            {call,{1156,31},
                                  {atom,{1156,31},gcd},
                                  [{var,{1156,35},'UnitA'},
                                   {var,{1156,42},'UnitB'}]}]}]}]}.
{function,
    {1158,1},
    lub_tuple_elements,3,
    [{clause,
         {1158,1},
         [{var,{1158,1},'_'},{var,{1158,1},'_'},{var,{1158,1},'_'}],
         [[{call,
               {1158,1},
               {remote,
                   {1158,1},
                   {atom,{1158,1},fake},
                   {atom,{1158,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1158,502},{atom,{1158,1},ignore}]},
     {clause,
         {1158,1},
         [{var,{1158,20},'MinSize'},
          {var,{1158,29},'EsA'},
          {var,{1158,34},'EsB'}],
         [],
         [{debug_line,1159,503},
          {match,
              {1159,5},
              {var,{1159,5},'Es0'},
              {call,
                  {1159,11},
                  {atom,{1159,11},lub_elements},
                  [{var,{1159,24},'EsA'},{var,{1159,29},'EsB'}]}},
          {debug_line,1160,504},
          {mc,{1160,5},
              {map_field_assoc,
                  {1160,13},
                  {block,0,[{var,{1160,7},'Index'}]},
                  {block,0,[{var,{1160,16},'Type'}]}},
              [{block,0,[{atom,{1160,41},true}]},
               {m_generate,
                   {1160,38},
                   {map_field_exact,
                       {1160,30},
                       {var,{1160,24},'Index'},
                       {var,{1160,33},'Type'}},
                   {var,{1160,41},'Es0'}},
               {block,0,[{atom,{1160,52},true}]},
               {op,{1160,52},
                   '=<',
                   {var,{1160,46},'Index'},
                   {var,{1160,55},'MinSize'}}]}]}]}.
{function,
    {1162,1},
    lub_elements,2,
    [{clause,
         {1162,1},
         [{var,{1162,1},'_'},{var,{1162,1},'_'}],
         [[{call,
               {1162,1},
               {remote,
                   {1162,1},
                   {atom,{1162,1},fake},
                   {atom,{1162,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1162,505},{atom,{1162,1},ignore}]},
     {clause,
         {1162,1},
         [{var,{1162,14},'Es1'},{var,{1162,19},'Es2'}],
         [],
         [{debug_line,1163,506},
          {match,
              {1163,5},
              {var,{1163,5},'Keys'},
              {'if',
                  {1163,12},
                  [{clause,
                       {1164,16},
                       [],
                       [[{op,{1164,30},
                             '=<',
                             {call,
                                 {1164,16},
                                 {remote,
                                     {1164,16},
                                     {atom,{1164,16},erlang},
                                     {atom,{1164,16},map_size}},
                                 [{var,{1164,25},'Es1'}]},
                             {call,
                                 {1164,33},
                                 {remote,
                                     {1164,33},
                                     {atom,{1164,33},erlang},
                                     {atom,{1164,33},map_size}},
                                 [{var,{1164,42},'Es2'}]}}]],
                       [{debug_line,1164,507},
                        {call,
                            {1164,50},
                            {remote,
                                {1164,54},
                                {atom,{1164,50},maps},
                                {atom,{1164,55},keys}},
                            [{var,{1164,60},'Es1'}]}]},
                   {clause,
                       {1165,16},
                       [],
                       [[{op,{1165,30},
                             '>',
                             {call,
                                 {1165,16},
                                 {remote,
                                     {1165,16},
                                     {atom,{1165,16},erlang},
                                     {atom,{1165,16},map_size}},
                                 [{var,{1165,25},'Es1'}]},
                             {call,
                                 {1165,32},
                                 {remote,
                                     {1165,32},
                                     {atom,{1165,32},erlang},
                                     {atom,{1165,32},map_size}},
                                 [{var,{1165,41},'Es2'}]}}]],
                       [{debug_line,1165,508},
                        {call,
                            {1165,49},
                            {remote,
                                {1165,53},
                                {atom,{1165,49},maps},
                                {atom,{1165,54},keys}},
                            [{var,{1165,59},'Es2'}]}]}]}},
          {debug_line,1167,509},
          {call,
              {1167,5},
              {atom,{1167,5},lub_elements_1},
              [{var,{1167,20},'Keys'},
               {var,{1167,26},'Es1'},
               {var,{1167,31},'Es2'},
               {block,0,[{map,{1167,36},[]}]}]}]}]}.
{function,
    {1169,1},
    lub_elements_1,4,
    [{clause,
         {1169,1},
         [{var,{1169,1},'_'},
          {var,{1169,1},'_'},
          {var,{1169,1},'_'},
          {var,{1169,1},'_'}],
         [[{call,
               {1169,1},
               {remote,
                   {1169,1},
                   {atom,{1169,1},fake},
                   {atom,{1169,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1169,510},{atom,{1169,1},ignore}]},
     {clause,
         {1169,1},
         [{cons,{1169,16},{var,{1169,17},'Key'},{var,{1169,23},'Keys'}},
          {var,{1169,30},'Es1'},
          {var,{1169,35},'Es2'},
          {var,{1169,40},'Acc0'}],
         [],
         [{debug_line,1170,511},
          {'case',
              {1170,5},
              {tuple,{1170,10},[{var,{1170,11},'Es1'},{var,{1170,16},'Es2'}]},
              [{clause,
                   {1171,9},
                   [{tuple,
                        {1171,9},
                        [{map,
                             {1171,10},
                             [{map_field_exact,
                                  {1171,17},
                                  {var,{1171,13},'Key'},
                                  {var,{1171,20},'Type1'}}]},
                         {map,
                             {1171,29},
                             [{map_field_exact,
                                  {1171,36},
                                  {var,{1171,32},'Key'},
                                  {var,{1171,39},'Type2'}}]}]}],
                   [],
                   [{debug_line,1173,512},
                    {match,
                        {1173,13},
                        {var,{1173,13},'Acc'},
                        {call,
                            {1173,19},
                            {atom,{1173,19},set_tuple_element},
                            [{var,{1173,37},'Key'},
                             {block,0,
                                 [{call,
                                      {1173,42},
                                      {atom,{1173,42},join},
                                      [{var,{1173,47},'Type1'},
                                       {var,{1173,54},'Type2'}]}]},
                             {var,{1173,62},'Acc0'}]}},
                    {debug_line,1174,513},
                    {call,
                        {1174,13},
                        {atom,{1174,13},lub_elements_1},
                        [{var,{1174,28},'Keys'},
                         {var,{1174,34},'Es1'},
                         {var,{1174,39},'Es2'},
                         {var,{1174,44},'Acc'}]}]},
               {clause,
                   {1175,9},
                   [{tuple,{1175,9},[{map,{1175,10},[]},{map,{1175,15},[]}]}],
                   [],
                   [{debug_line,1176,514},
                    {call,
                        {1176,13},
                        {atom,{1176,13},lub_elements_1},
                        [{var,{1176,28},'Keys'},
                         {var,{1176,34},'Es1'},
                         {var,{1176,39},'Es2'},
                         {var,{1176,44},'Acc0'}]}]}]}]},
     {clause,
         {1178,1},
         [{nil,{1178,16}},
          {var,{1178,20},'_Es1'},
          {var,{1178,26},'_Es2'},
          {var,{1178,32},'Acc'}],
         [],
         [{debug_line,1179,515},{var,{1179,5},'Acc'}]}]}.
{function,
    {1183,1},
    gcd,2,
    [{clause,
         {1183,1},
         [{var,{1183,1},'_'},{var,{1183,1},'_'}],
         [[{call,
               {1183,1},
               {remote,
                   {1183,1},
                   {atom,{1183,1},fake},
                   {atom,{1183,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1183,516},{atom,{1183,1},ignore}]},
     {clause,
         {1183,1},
         [{var,{1183,5},'A'},{var,{1183,8},'B'}],
         [],
         [{debug_line,1184,517},
          {'case',
              {1184,5},
              {op,{1184,12},'rem',{var,{1184,10},'A'},{var,{1184,16},'B'}},
              [{clause,
                   {1185,9},
                   [{integer,{1185,9},0}],
                   [],
                   [{debug_line,1185,518},{var,{1185,14},'B'}]},
               {clause,
                   {1186,9},
                   [{var,{1186,9},'X'}],
                   [],
                   [{debug_line,1186,519},
                    {call,
                        {1186,14},
                        {atom,{1186,14},gcd},
                        [{var,{1186,18},'B'},{var,{1186,21},'X'}]}]}]}]}]}.
{function,
    {1198,1},
    float_from_range,1,
    [{clause,
         {1198,1},
         [{var,{1198,1},'_'}],
         [[{call,
               {1198,1},
               {remote,
                   {1198,1},
                   {atom,{1198,1},fake},
                   {atom,{1198,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1198,520},{atom,{1198,1},ignore}]},
     {clause,
         {1198,1},
         [{atom,{1198,18},none}],
         [],
         [{debug_line,1199,521},{atom,{1199,5},none}]},
     {clause,
         {1200,1},
         [{atom,{1200,18},any}],
         [],
         [{debug_line,1201,522},
          {tuple,{1201,5},[{atom,{1201,5},t_float},{atom,{1201,5},any}]}]},
     {clause,
         {1202,1},
         [{tuple,{1202,18},[{var,{1202,19},'Min0'},{var,{1202,25},'Max0'}]}],
         [],
         [{debug_line,1203,523},
          {match,
              {1203,5},
              {atom,{1203,5},true},
              {call,
                  {1203,12},
                  {atom,{1203,12},inf_le},
                  [{var,{1203,19},'Min0'},{var,{1203,25},'Max0'}]}},
          {debug_line,1204,524},
          {'case',
              {1204,5},
              {tuple,
                  {1204,10},
                  [{call,
                       {1204,11},
                       {atom,{1204,11},safe_float},
                       [{var,{1204,22},'Min0'}]},
                   {call,
                       {1204,29},
                       {atom,{1204,29},safe_float},
                       [{var,{1204,40},'Max0'}]}]},
              [{clause,
                   {1205,9},
                   [{tuple,
                        {1205,9},
                        [{atom,{1205,10},'-inf'},{atom,{1205,17},'+inf'}]}],
                   [],
                   [{debug_line,1206,525},
                    {tuple,
                        {1206,13},
                        [{atom,{1206,13},t_float},{atom,{1206,13},any}]}]},
               {clause,
                   {1207,9},
                   [{tuple,
                        {1207,9},
                        [{var,{1207,10},'Min'},{var,{1207,15},'Max'}]}],
                   [],
                   [{debug_line,1208,526},
                    {tuple,
                        {1208,13},
                        [{atom,{1208,13},t_float},
                         {tuple,
                             {1208,31},
                             [{var,{1208,32},'Min'},
                              {var,{1208,37},'Max'}]}]}]}]}]}]}.
{function,
    {1211,1},
    safe_float,1,
    [{clause,
         {1211,1},
         [{var,{1211,1},'_'}],
         [[{call,
               {1211,1},
               {remote,
                   {1211,1},
                   {atom,{1211,1},fake},
                   {atom,{1211,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1211,527},{atom,{1211,1},ignore}]},
     {clause,
         {1211,1},
         [{var,{1211,12},'N'}],
         [[{call,
               {1211,20},
               {remote,
                   {1211,20},
                   {atom,{1211,20},erlang},
                   {atom,{1211,20},is_number}},
               [{var,{1211,30},'N'}]}]],
         [{debug_line,1212,528},
          {'try',
              {1212,5},
              [{debug_line,1213,529},
               {call,
                   {1213,9},
                   {remote,
                       {1213,9},
                       {atom,{1213,9},erlang},
                       {atom,{1213,9},float}},
                   [{var,{1213,15},'N'}]}],
              [],
              [{clause,
                   {1215,9},
                   [{tuple,
                        {1215,9},
                        [{atom,{1215,9},error},
                         {var,{1215,15},'_'},
                         {var,{1215,15},'_'}]}],
                   [[{op,{1215,24},
                         '<',
                         {var,{1215,22},'N'},
                         {integer,{1215,26},0}}]],
                   [{debug_line,1215,530},{atom,{1215,31},'-inf'}]},
               {clause,
                   {1216,9},
                   [{tuple,
                        {1216,9},
                        [{atom,{1216,9},error},
                         {var,{1216,15},'_'},
                         {var,{1216,15},'_'}]}],
                   [[{op,{1216,24},
                         '>',
                         {var,{1216,22},'N'},
                         {integer,{1216,26},0}}]],
                   [{debug_line,1216,531},{atom,{1216,31},'+inf'}]}],
              []}]},
     {clause,
         {1218,1},
         [{match,{1218,12},{atom,{1218,12},'-inf'},{var,{1218,19},'NegInf'}}],
         [],
         [{debug_line,1218,532},{var,{1218,30},'NegInf'}]},
     {clause,
         {1219,1},
         [{match,{1219,12},{atom,{1219,12},'+inf'},{var,{1219,19},'PosInf'}}],
         [],
         [{debug_line,1219,533},{var,{1219,30},'PosInf'}]}]}.
{function,
    {1221,1},
    integer_from_range,1,
    [{clause,
         {1221,1},
         [{var,{1221,1},'_'}],
         [[{call,
               {1221,1},
               {remote,
                   {1221,1},
                   {atom,{1221,1},fake},
                   {atom,{1221,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1221,534},{atom,{1221,1},ignore}]},
     {clause,
         {1221,1},
         [{atom,{1221,20},none}],
         [],
         [{debug_line,1222,535},{atom,{1222,5},none}]},
     {clause,
         {1223,1},
         [{atom,{1223,20},any}],
         [],
         [{debug_line,1224,536},
          {tuple,{1224,5},[{atom,{1224,5},t_integer},{atom,{1224,5},any}]}]},
     {clause,
         {1225,1},
         [{tuple,{1225,20},[{atom,{1225,21},'-inf'},{atom,{1225,28},'+inf'}]}],
         [],
         [{debug_line,1226,537},
          {tuple,{1226,5},[{atom,{1226,5},t_integer},{atom,{1226,5},any}]}]},
     {clause,
         {1227,1},
         [{tuple,{1227,20},[{atom,{1227,21},'-inf'},{var,{1227,28},'Max'}]}],
         [],
         [{debug_line,1228,538},
          {tuple,
              {1228,5},
              [{atom,{1228,5},t_integer},
               {tuple,
                   {1228,25},
                   [{atom,{1228,26},'-inf'},
                    {call,
                        {1228,33},
                        {remote,
                            {1228,33},
                            {atom,{1228,33},erlang},
                            {atom,{1228,33},ceil}},
                        [{var,{1228,38},'Max'}]}]}]}]},
     {clause,
         {1229,1},
         [{tuple,{1229,20},[{var,{1229,21},'Min'},{atom,{1229,25},'+inf'}]}],
         [],
         [{debug_line,1230,539},
          {tuple,
              {1230,5},
              [{atom,{1230,5},t_integer},
               {tuple,
                   {1230,25},
                   [{call,
                        {1230,26},
                        {remote,
                            {1230,26},
                            {atom,{1230,26},erlang},
                            {atom,{1230,26},floor}},
                        [{var,{1230,32},'Min'}]},
                    {atom,{1230,37},'+inf'}]}]}]},
     {clause,
         {1231,1},
         [{tuple,{1231,20},[{var,{1231,21},'Min'},{var,{1231,25},'Max'}]}],
         [],
         [{debug_line,1232,540},
          {tuple,
              {1232,5},
              [{atom,{1232,5},t_integer},
               {tuple,
                   {1232,25},
                   [{call,
                        {1232,26},
                        {remote,
                            {1232,26},
                            {atom,{1232,26},erlang},
                            {atom,{1232,26},floor}},
                        [{var,{1232,32},'Min'}]},
                    {call,
                        {1232,37},
                        {remote,
                            {1232,37},
                            {atom,{1232,37},erlang},
                            {atom,{1232,37},ceil}},
                        [{var,{1232,42},'Max'}]}]}]}]}]}.
{function,
    {1234,1},
    number_from_range,1,
    [{clause,
         {1234,1},
         [{var,{1234,1},'_'}],
         [[{call,
               {1234,1},
               {remote,
                   {1234,1},
                   {atom,{1234,1},fake},
                   {atom,{1234,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1234,541},{atom,{1234,1},ignore}]},
     {clause,
         {1234,1},
         [{var,{1234,19},'N'}],
         [],
         [{debug_line,1235,542},
          {'case',
              {1235,5},
              {call,
                  {1235,10},
                  {atom,{1235,10},integer_from_range},
                  [{var,{1235,29},'N'}]},
              [{clause,
                   {1236,9},
                   [{tuple,
                        {1236,9},
                        [{atom,{1236,9},t_integer},{var,{1236,29},'R'}]}],
                   [],
                   [{debug_line,1237,543},
                    {tuple,
                        {1237,13},
                        [{atom,{1237,13},t_number},{var,{1237,32},'R'}]}]},
               {clause,
                   {1238,9},
                   [{atom,{1238,9},none}],
                   [],
                   [{debug_line,1239,544},{atom,{1239,13},none}]}]}]}]}.
{function,
    {1242,1},
    inf_le,2,
    [{clause,
         {1242,1},
         [{var,{1242,1},'_'},{var,{1242,1},'_'}],
         [[{call,
               {1242,1},
               {remote,
                   {1242,1},
                   {atom,{1242,1},fake},
                   {atom,{1242,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1242,545},{atom,{1242,1},ignore}]},
     {clause,
         {1242,1},
         [{atom,{1242,8},'-inf'},{var,{1242,16},'_'}],
         [],
         [{debug_line,1243,546},{atom,{1243,5},true}]},
     {clause,
         {1244,1},
         [{var,{1244,8},'A'},{var,{1244,11},'B'}],
         [[{call,
               {1244,19},
               {remote,
                   {1244,19},
                   {atom,{1244,19},erlang},
                   {atom,{1244,19},is_float}},
               [{var,{1244,28},'A'}]},
           {call,
               {1244,32},
               {remote,
                   {1244,32},
                   {atom,{1244,32},erlang},
                   {atom,{1244,32},is_float}},
               [{var,{1244,41},'B'}]}]],
         [{debug_line,1247,547},
          {call,
              {1247,5},
              {atom,{1247,5},total_compare},
              [{var,{1247,19},'A'},
               {var,{1247,22},'B'},
               {block,0,
                   [{'fun',
                        {1247,25},
                        {function,
                            {atom,{1247,29},erlang},
                            {atom,{1247,36},'=<'},
                            {integer,{1247,41},2}}}]}]}]},
     {clause,
         {1248,1},
         [{var,{1248,8},'A'},{var,{1248,11},'B'}],
         [],
         [{debug_line,1249,548},
          {op,{1249,7},'=<',{var,{1249,5},'A'},{var,{1249,10},'B'}}]}]}.
{function,
    {1251,1},
    inf_ge,2,
    [{clause,
         {1251,1},
         [{var,{1251,1},'_'},{var,{1251,1},'_'}],
         [[{call,
               {1251,1},
               {remote,
                   {1251,1},
                   {atom,{1251,1},fake},
                   {atom,{1251,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1251,549},{atom,{1251,1},ignore}]},
     {clause,
         {1251,1},
         [{var,{1251,8},'_'},{atom,{1251,11},'-inf'}],
         [],
         [{debug_line,1252,550},{atom,{1252,5},true}]},
     {clause,
         {1253,1},
         [{atom,{1253,8},'-inf'},{var,{1253,16},'_'}],
         [],
         [{debug_line,1254,551},{atom,{1254,5},false}]},
     {clause,
         {1255,1},
         [{var,{1255,8},'A'},{var,{1255,11},'B'}],
         [[{call,
               {1255,19},
               {remote,
                   {1255,19},
                   {atom,{1255,19},erlang},
                   {atom,{1255,19},is_float}},
               [{var,{1255,28},'A'}]},
           {call,
               {1255,32},
               {remote,
                   {1255,32},
                   {atom,{1255,32},erlang},
                   {atom,{1255,32},is_float}},
               [{var,{1255,41},'B'}]}]],
         [{debug_line,1256,552},
          {call,
              {1256,5},
              {atom,{1256,5},total_compare},
              [{var,{1256,19},'A'},
               {var,{1256,22},'B'},
               {block,0,
                   [{'fun',
                        {1256,25},
                        {function,
                            {atom,{1256,29},erlang},
                            {atom,{1256,36},'>='},
                            {integer,{1256,41},2}}}]}]}]},
     {clause,
         {1257,1},
         [{var,{1257,8},'A'},{var,{1257,11},'B'}],
         [],
         [{debug_line,1258,553},
          {op,{1258,7},'>=',{var,{1258,5},'A'},{var,{1258,10},'B'}}]}]}.
{function,
    {1260,1},
    inf_min,2,
    [{clause,
         {1260,1},
         [{var,{1260,1},'_'},{var,{1260,1},'_'}],
         [[{call,
               {1260,1},
               {remote,
                   {1260,1},
                   {atom,{1260,1},fake},
                   {atom,{1260,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1260,554},{atom,{1260,1},ignore}]},
     {clause,
         {1260,1},
         [{var,{1260,9},'A'},{var,{1260,12},'B'}],
         [[{op,{1260,22},'=:=',{var,{1260,20},'A'},{atom,{1260,26},'-inf'}}],
          [{op,{1260,36},'=:=',{var,{1260,34},'B'},{atom,{1260,40},'-inf'}}]],
         [{debug_line,1261,555},{atom,{1261,5},'-inf'}]},
     {clause,
         {1262,1},
         [{var,{1262,9},'A'},{var,{1262,12},'B'}],
         [[{call,
               {1262,20},
               {remote,
                   {1262,20},
                   {atom,{1262,20},erlang},
                   {atom,{1262,20},is_float}},
               [{var,{1262,29},'A'}]},
           {call,
               {1262,33},
               {remote,
                   {1262,33},
                   {atom,{1262,33},erlang},
                   {atom,{1262,33},is_float}},
               [{var,{1262,42},'B'}]}]],
         [{debug_line,1263,556},
          {'case',
              {1263,5},
              {call,
                  {1263,10},
                  {atom,{1263,10},total_compare},
                  [{var,{1263,24},'A'},
                   {var,{1263,27},'B'},
                   {block,0,
                       [{'fun',
                            {1263,30},
                            {function,
                                {atom,{1263,34},erlang},
                                {atom,{1263,41},'=<'},
                                {integer,{1263,46},2}}}]}]},
              [{clause,
                   {1264,9},
                   [{atom,{1264,9},true}],
                   [],
                   [{debug_line,1264,557},{var,{1264,17},'A'}]},
               {clause,
                   {1265,9},
                   [{atom,{1265,9},false}],
                   [],
                   [{debug_line,1265,558},{var,{1265,18},'B'}]}]}]},
     {clause,
         {1267,1},
         [{var,{1267,9},'A'},{var,{1267,12},'B'}],
         [],
         [{debug_line,1268,559},
          {call,
              {1268,5},
              {remote,{1268,5},{atom,{1268,5},erlang},{atom,{1268,5},min}},
              [{var,{1268,9},'A'},{var,{1268,12},'B'}]}]}]}.
{function,
    {1270,1},
    inf_max,2,
    [{clause,
         {1270,1},
         [{var,{1270,1},'_'},{var,{1270,1},'_'}],
         [[{call,
               {1270,1},
               {remote,
                   {1270,1},
                   {atom,{1270,1},fake},
                   {atom,{1270,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1270,560},{atom,{1270,1},ignore}]},
     {clause,
         {1270,1},
         [{atom,{1270,9},'-inf'},{var,{1270,17},'B'}],
         [],
         [{debug_line,1271,561},{var,{1271,5},'B'}]},
     {clause,
         {1272,1},
         [{var,{1272,9},'A'},{atom,{1272,12},'-inf'}],
         [],
         [{debug_line,1273,562},{var,{1273,5},'A'}]},
     {clause,
         {1274,1},
         [{var,{1274,9},'A'},{var,{1274,12},'B'}],
         [[{call,
               {1274,20},
               {remote,
                   {1274,20},
                   {atom,{1274,20},erlang},
                   {atom,{1274,20},is_float}},
               [{var,{1274,29},'A'}]},
           {call,
               {1274,33},
               {remote,
                   {1274,33},
                   {atom,{1274,33},erlang},
                   {atom,{1274,33},is_float}},
               [{var,{1274,42},'B'}]}]],
         [{debug_line,1275,563},
          {'case',
              {1275,5},
              {call,
                  {1275,10},
                  {atom,{1275,10},total_compare},
                  [{var,{1275,24},'A'},
                   {var,{1275,27},'B'},
                   {block,0,
                       [{'fun',
                            {1275,30},
                            {function,
                                {atom,{1275,34},erlang},
                                {atom,{1275,41},'>='},
                                {integer,{1275,46},2}}}]}]},
              [{clause,
                   {1276,9},
                   [{atom,{1276,9},true}],
                   [],
                   [{debug_line,1276,564},{var,{1276,17},'A'}]},
               {clause,
                   {1277,9},
                   [{atom,{1277,9},false}],
                   [],
                   [{debug_line,1277,565},{var,{1277,18},'B'}]}]}]},
     {clause,
         {1279,1},
         [{var,{1279,9},'A'},{var,{1279,12},'B'}],
         [],
         [{debug_line,1280,566},
          {call,
              {1280,5},
              {remote,{1280,5},{atom,{1280,5},erlang},{atom,{1280,5},max}},
              [{var,{1280,9},'A'},{var,{1280,12},'B'}]}]}]}.
{function,
    {1282,1},
    total_compare,3,
    [{clause,
         {1282,1},
         [{var,{1282,1},'_'},{var,{1282,1},'_'},{var,{1282,1},'_'}],
         [[{call,
               {1282,1},
               {remote,
                   {1282,1},
                   {atom,{1282,1},fake},
                   {atom,{1282,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1282,567},{atom,{1282,1},ignore}]},
     {clause,
         {1282,1},
         [{var,{1282,15},'A'},{var,{1282,18},'B'},{var,{1282,21},'Order'}],
         [],
         [{debug_line,1283,568},
          {call,
              {1283,5},
              {var,{1283,5},'Order'},
              [{block,0,
                   [{call,
                        {1283,11},
                        {remote,
                            {1283,24},
                            {atom,{1283,11},erts_internal},
                            {atom,{1283,25},cmp_term}},
                        [{var,{1283,34},'A'},{var,{1283,37},'B'}]}]},
               {integer,{1283,41},0}]}]}]}.
{function,
    {1287,1},
    record_key,1,
    [{clause,
         {1287,1},
         [{var,{1287,1},'_'}],
         [[{call,
               {1287,1},
               {remote,
                   {1287,1},
                   {atom,{1287,1},fake},
                   {atom,{1287,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1287,569},{atom,{1287,1},ignore}]},
     {clause,
         {1287,1},
         [{tuple,
              {1287,12},
              [{atom,{1287,12},t_tuple},
               {var,{1287,37},'Size'},
               {atom,{1287,27},true},
               {map,
                   {1287,51},
                   [{map_field_exact,
                        {1287,56},
                        {integer,{1287,54},1},
                        {var,{1287,59},'Tag'}}]}]}],
         [],
         [{debug_line,1288,570},
          {'case',
              {1288,5},
              {call,
                  {1288,10},
                  {atom,{1288,10},is_singleton_type},
                  [{var,{1288,28},'Tag'}]},
              [{clause,
                   {1289,9},
                   [{atom,{1289,9},true}],
                   [],
                   [{debug_line,1289,571},
                    {tuple,
                        {1289,17},
                        [{var,{1289,18},'Size'},{var,{1289,24},'Tag'}]}]},
               {clause,
                   {1290,9},
                   [{atom,{1290,9},false}],
                   [],
                   [{debug_line,1290,572},{atom,{1290,18},none}]}]}]},
     {clause,
         {1292,1},
         [{var,{1292,12},'_'}],
         [],
         [{debug_line,1293,573},{atom,{1293,5},none}]}]}.
{function,
    {1295,1},
    new_tuple_set,1,
    [{clause,
         {1295,1},
         [{var,{1295,1},'_'}],
         [[{call,
               {1295,1},
               {remote,
                   {1295,1},
                   {atom,{1295,1},fake},
                   {atom,{1295,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1295,574},{atom,{1295,1},ignore}]},
     {clause,
         {1295,1},
         [{var,{1295,15},'T'}],
         [],
         [{debug_line,1296,575},
          {'case',
              {1296,5},
              {call,
                  {1296,10},
                  {atom,{1296,10},record_key},
                  [{var,{1296,21},'T'}]},
              [{clause,
                   {1297,9},
                   [{atom,{1297,9},none}],
                   [],
                   [{debug_line,1297,576},{var,{1297,17},'T'}]},
               {clause,
                   {1298,9},
                   [{var,{1298,9},'Key'}],
                   [],
                   [{debug_line,1298,577},
                    {cons,
                        {1298,16},
                        {tuple,
                            {1298,17},
                            [{var,{1298,18},'Key'},{var,{1298,23},'T'}]},
                        {nil,{1298,25}}}]}]}]}]}.
{function,
    {1303,1},
    shrink_union,1,
    [{clause,
         {1303,1},
         [{var,{1303,1},'_'}],
         [[{call,
               {1303,1},
               {remote,
                   {1303,1},
                   {atom,{1303,1},fake},
                   {atom,{1303,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1303,578},{atom,{1303,1},ignore}]},
     {clause,
         {1303,1},
         [{tuple,
              {1303,14},
              [{atom,{1303,14},t_union},
               {var,{1303,28},'Atom'},
               {atom,{1303,38},none},
               {atom,{1303,50},none},
               {atom,{1304,33},none},
               {atom,{1304,44},none}]}],
         [],
         [{debug_line,1305,579},{var,{1305,5},'Atom'}]},
     {clause,
         {1306,1},
         [{tuple,
              {1306,14},
              [{atom,{1306,14},t_union},
               {atom,{1306,28},none},
               {var,{1306,38},'List'},
               {atom,{1306,50},none},
               {atom,{1307,33},none},
               {atom,{1307,44},none}]}],
         [],
         [{debug_line,1308,580},{var,{1308,5},'List'}]},
     {clause,
         {1309,1},
         [{tuple,
              {1309,14},
              [{atom,{1309,14},t_union},
               {atom,{1309,28},none},
               {atom,{1309,38},none},
               {var,{1309,50},'Number'},
               {atom,{1310,33},none},
               {atom,{1310,44},none}]}],
         [],
         [{debug_line,1311,581},{var,{1311,5},'Number'}]},
     {clause,
         {1312,1},
         [{tuple,
              {1312,14},
              [{atom,{1312,14},t_union},
               {atom,{1312,28},none},
               {atom,{1312,38},none},
               {atom,{1312,50},none},
               {match,
                   {1313,33},
                   {tuple,
                       {1313,33},
                       [{atom,{1313,33},t_tuple},
                        {var,{1313,33},'_'},
                        {var,{1313,33},'_'},
                        {var,{1313,33},'_'}]},
                   {var,{1313,44},'Tuple'}},
               {atom,{1313,56},none}]}],
         [],
         [{debug_line,1314,582},{var,{1314,5},'Tuple'}]},
     {clause,
         {1315,1},
         [{tuple,
              {1315,14},
              [{atom,{1315,14},t_union},
               {atom,{1315,28},none},
               {atom,{1315,38},none},
               {atom,{1315,50},none},
               {cons,
                   {1316,33},
                   {tuple,
                       {1316,34},
                       [{var,{1316,35},'_Key'},{var,{1316,41},'Record'}]},
                   {nil,{1316,48}}},
               {atom,{1316,56},none}]}],
         [],
         [{debug_line,1317,583},
          {match,
              {1317,5},
              {tuple,
                  {1317,5},
                  [{atom,{1317,5},t_tuple},
                   {var,{1317,5},'_'},
                   {var,{1317,5},'_'},
                   {var,{1317,5},'_'}]},
              {var,{1317,18},'Record'}}]},
     {clause,
         {1318,1},
         [{tuple,
              {1318,14},
              [{atom,{1318,14},t_union},
               {atom,{1318,28},none},
               {atom,{1318,38},none},
               {atom,{1318,50},none},
               {atom,{1319,33},none},
               {var,{1319,44},'Other'}]}],
         [],
         [{debug_line,1320,584},{var,{1320,5},'Other'}]},
     {clause,
         {1321,1},
         [{tuple,
              {1321,14},
              [{atom,{1321,14},t_union},
               {tuple,
                   {1321,28},
                   [{atom,{1321,28},t_atom},{atom,{1321,45},any}]},
               {tuple,
                   {1322,28},
                   [{atom,{1322,28},t_list},
                    {atom,{1322,41},any},
                    {atom,{1322,56},any}]},
               {tuple,
                   {1323,30},
                   [{atom,{1323,30},t_number},{atom,{1323,49},any}]},
               {tuple,
                   {1324,33},
                   [{atom,{1324,33},t_tuple},
                    {integer,{1324,47},0},
                    {atom,{1324,55},false},
                    {var,{1324,33},'_'}]},
               {atom,{1325,29},other}]}],
         [],
         [{debug_line,1326,585},{atom,{1326,5},any}]},
     {clause,
         {1327,1},
         [{match,
              {1327,14},
              {tuple,
                  {1327,14},
                  [{atom,{1327,14},t_union},
                   {var,{1327,14},'_'},
                   {var,{1327,14},'_'},
                   {var,{1327,14},'_'},
                   {var,{1327,14},'_'},
                   {var,{1327,14},'_'}]},
              {var,{1327,25},'T'}}],
         [],
         [{debug_line,1328,586},{var,{1328,5},'T'}]}]}.
{attribute,{1332,2},
           spec,
           {{verified_type,1},
            [{type,{1332,20},
                   bounded_fun,
                   [{type,{1332,20},
                          'fun',
                          [{type,{1332,20},product,[{var,{1332,21},'T'}]},
                           {var,{1332,27},'T'}]},
                    [{type,{1333,7},
                           constraint,
                           [{atom,{1333,7},is_subtype},
                            [{var,{1333,7},'T'},
                             {user_type,{1333,12},type,[]}]]}]]}]}}.
{function,{1335,1},
          verified_type,1,
          [{clause,{1335,1},
                   [{var,{1335,1},'_'}],
                   [[{call,{1335,1},
                           {remote,{1335,1},
                                   {atom,{1335,1},fake},
                                   {atom,{1335,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1335,587},{atom,{1335,1},ignore}]},
           {clause,{1335,1},
                   [{match,{1335,15},
                           {tuple,{1335,15},
                                  [{atom,{1335,15},t_union},
                                   {var,{1335,29},'Atom'},
                                   {var,{1336,29},'List'},
                                   {var,{1337,31},'Number'},
                                   {var,{1338,34},'TSet'},
                                   {var,{1339,30},'Other'}]},
                           {var,{1339,37},'T'}}],
                   [],
                   [{debug_line,1340,588},
                    {match,{1340,5},
                           {var,{1340,5},'_'},
                           {call,{1340,9},
                                 {atom,{1340,9},verified_normal_type},
                                 [{var,{1340,30},'Atom'}]}},
                    {debug_line,1341,589},
                    {match,{1341,5},
                           {var,{1341,5},'_'},
                           {call,{1341,9},
                                 {atom,{1341,9},verified_normal_type},
                                 [{var,{1341,30},'List'}]}},
                    {debug_line,1342,590},
                    {match,{1342,5},
                           {var,{1342,5},'_'},
                           {call,{1342,9},
                                 {atom,{1342,9},verified_normal_type},
                                 [{var,{1342,30},'Number'}]}},
                    {debug_line,1343,591},
                    {match,{1343,5},
                           {var,{1343,5},'_'},
                           {call,{1343,9},
                                 {atom,{1343,9},verify_tuple_set},
                                 [{var,{1343,26},'TSet'}]}},
                    {debug_line,1344,592},
                    {match,{1344,5},
                           {var,{1344,5},'_'},
                           {call,{1344,9},
                                 {atom,{1344,9},verified_normal_type},
                                 [{var,{1344,30},'Other'}]}},
                    {debug_line,1345,593},
                    {var,{1345,5},'T'}]},
           {clause,{1346,1},
                   [{var,{1346,15},'T'}],
                   [],
                   [{debug_line,1347,594},
                    {call,{1347,5},
                          {atom,{1347,5},verified_normal_type},
                          [{var,{1347,26},'T'}]}]}]}.
{function,{1349,1},
          verify_tuple_set,1,
          [{clause,{1349,1},
                   [{var,{1349,1},'_'}],
                   [[{call,{1349,1},
                           {remote,{1349,1},
                                   {atom,{1349,1},fake},
                                   {atom,{1349,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1349,595},{atom,{1349,1},ignore}]},
           {clause,{1349,1},
                   [{match,{1349,18},
                           {cons,{1349,18},
                                 {var,{1349,19},'_'},
                                 {var,{1349,21},'_'}},
                           {var,{1349,24},'T'}}],
                   [],
                   [{debug_line,1350,596},
                    {match,{1350,5},
                           {var,{1350,5},'_'},
                           {call,{1350,9},
                                 {atom,{1350,9},verify_tuple_set_1},
                                 [{var,{1350,28},'T'},{integer,{1350,31},0}]}},
                    {debug_line,1351,597},
                    {var,{1351,5},'T'}]},
           {clause,{1352,1},
                   [{match,{1352,18},
                           {tuple,{1352,18},
                                  [{atom,{1352,18},t_tuple},
                                   {var,{1352,18},'_'},
                                   {var,{1352,18},'_'},
                                   {var,{1352,18},'_'}]},
                           {var,{1352,29},'T'}}],
                   [],
                   [{debug_line,1353,598},
                    {match,{1353,5},
                           {atom,{1353,5},none},
                           {call,{1353,12},
                                 {atom,{1353,12},record_key},
                                 [{var,{1353,23},'T'}]}},
                    {debug_line,1354,599},
                    {var,{1354,5},'T'}]},
           {clause,{1355,1},
                   [{match,{1355,18},
                           {atom,{1355,18},none},
                           {var,{1355,23},'T'}}],
                   [],
                   [{debug_line,1356,600},{var,{1356,5},'T'}]}]}.
{function,
    {1358,1},
    verify_tuple_set_1,2,
    [{clause,
         {1358,1},
         [{var,{1358,1},'_'},{var,{1358,1},'_'}],
         [[{call,
               {1358,1},
               {remote,
                   {1358,1},
                   {atom,{1358,1},fake},
                   {atom,{1358,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1358,601},{atom,{1358,1},ignore}]},
     {clause,
         {1358,1},
         [{cons,
              {1358,20},
              {tuple,
                  {1358,21},
                  [{var,{1358,22},'_Tag'},{var,{1358,28},'Record'}]},
              {var,{1358,38},'Records'}},
          {var,{1358,48},'Size'}],
         [],
         [{debug_line,1359,602},
          {match,
              {1359,5},
              {atom,{1359,5},true},
              {op,{1359,17},
                  '=<',
                  {var,{1359,12},'Size'},
                  {integer,{1359,21},12}}},
          {debug_line,1360,603},
          {match,
              {1360,5},
              {var,{1360,5},'_'},
              {call,
                  {1360,9},
                  {atom,{1360,9},verified_normal_type},
                  [{var,{1360,30},'Record'}]}},
          {debug_line,1361,604},
          {call,
              {1361,5},
              {atom,{1361,5},verify_tuple_set_1},
              [{var,{1361,24},'Records'},
               {block,0,
                   [{op,{1361,38},
                        '+',
                        {var,{1361,33},'Size'},
                        {integer,{1361,40},1}}]}]}]},
     {clause,
         {1362,1},
         [{nil,{1362,20}},{var,{1362,24},'_Size'}],
         [],
         [{debug_line,1363,605},{atom,{1363,5},ok}]}]}.
{attribute,{1365,2},
           spec,
           {{verified_normal_type,1},
            [{type,{1365,27},
                   bounded_fun,
                   [{type,{1365,27},
                          'fun',
                          [{type,{1365,27},product,[{var,{1365,28},'T'}]},
                           {var,{1365,34},'T'}]},
                    [{type,{1366,7},
                           constraint,
                           [{atom,{1366,7},is_subtype},
                            [{var,{1366,7},'T'},
                             {user_type,{1366,12},normal_type,[]}]]}]]}]}}.
{function,
    {1368,1},
    verified_normal_type,1,
    [{clause,
         {1368,1},
         [{var,{1368,1},'_'}],
         [[{call,
               {1368,1},
               {remote,
                   {1368,1},
                   {atom,{1368,1},fake},
                   {atom,{1368,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1368,606},{atom,{1368,1},ignore}]},
     {clause,
         {1368,1},
         [{match,{1368,22},{atom,{1368,22},any},{var,{1368,26},'T'}}],
         [],
         [{debug_line,1368,607},{var,{1368,32},'T'}]},
     {clause,
         {1369,1},
         [{match,{1369,22},{atom,{1369,22},none},{var,{1369,27},'T'}}],
         [],
         [{debug_line,1369,608},{var,{1369,33},'T'}]},
     {clause,
         {1370,1},
         [{match,
              {1370,22},
              {tuple,{1370,22},[{atom,{1370,22},t_atom},{atom,{1370,39},any}]},
              {var,{1370,44},'T'}}],
         [],
         [{debug_line,1370,609},{var,{1370,50},'T'}]},
     {clause,
         {1371,1},
         [{match,
              {1371,22},
              {tuple,
                  {1371,22},
                  [{atom,{1371,22},t_atom},
                   {cons,{1371,39},{var,{1371,40},'_'},{var,{1371,42},'_'}}]},
              {var,{1371,46},'T'}}],
         [],
         [{debug_line,1371,610},{var,{1371,52},'T'}]},
     {clause,
         {1372,1},
         [{match,
              {1372,22},
              {tuple,
                  {1372,22},
                  [{atom,{1372,22},t_bitstring},
                   {var,{1372,45},'U'},
                   {var,{1372,22},'_'}]},
              {var,{1372,48},'T'}}],
         [[{call,
               {1373,8},
               {remote,
                   {1373,8},
                   {atom,{1373,8},erlang},
                   {atom,{1373,8},is_integer}},
               [{var,{1373,19},'U'}]},
           {op,{1373,25},'>=',{var,{1373,23},'U'},{integer,{1373,28},1}}]],
         [{debug_line,1374,611},{var,{1374,5},'T'}]},
     {clause,
         {1375,1},
         [{match,
              {1375,22},
              {tuple,
                  {1375,22},
                  [{atom,{1375,22},t_bs_context},{var,{1375,46},'U'}]},
              {var,{1375,49},'T'}}],
         [[{call,
               {1376,8},
               {remote,
                   {1376,8},
                   {atom,{1376,8},erlang},
                   {atom,{1376,8},is_integer}},
               [{var,{1376,19},'U'}]},
           {op,{1376,25},'>=',{var,{1376,23},'U'},{integer,{1376,28},1}}]],
         [{debug_line,1377,612},{var,{1377,5},'T'}]},
     {clause,
         {1378,1},
         [{match,
              {1378,22},
              {tuple,
                  {1378,22},
                  [{atom,{1378,22},t_bs_matchable},{var,{1378,48},'U'}]},
              {var,{1378,51},'T'}}],
         [[{call,
               {1379,8},
               {remote,
                   {1379,8},
                   {atom,{1379,8},erlang},
                   {atom,{1379,8},is_integer}},
               [{var,{1379,19},'U'}]},
           {op,{1379,25},'>=',{var,{1379,23},'U'},{integer,{1379,28},1}}]],
         [{debug_line,1380,613},{var,{1380,5},'T'}]},
     {clause,
         {1381,1},
         [{match,
              {1381,22},
              {tuple,
                  {1381,22},
                  [{atom,{1381,22},t_cons},
                   {var,{1381,35},'Type'},
                   {var,{1381,51},'Term'}]},
              {var,{1381,57},'T'}}],
         [],
         [{debug_line,1382,614},
          {match,
              {1382,5},
              {var,{1382,5},'_'},
              {call,
                  {1382,9},
                  {atom,{1382,9},verified_type},
                  [{var,{1382,23},'Type'}]}},
          {debug_line,1383,615},
          {match,
              {1383,5},
              {var,{1383,5},'_'},
              {call,
                  {1383,9},
                  {atom,{1383,9},verified_type},
                  [{var,{1383,23},'Term'}]}},
          {debug_line,1384,616},
          {var,{1384,5},'T'}]},
     {clause,
         {1385,1},
         [{match,
              {1385,22},
              {tuple,
                  {1385,22},
                  [{atom,{1385,22},t_fun},
                   {var,{1385,35},'Arity'},
                   {tuple,
                       {1386,36},
                       [{var,{1386,37},'Name'},{var,{1386,42},'TotalArity'}]},
                   {var,{1387,34},'ReturnType'}]},
              {var,{1387,46},'T'}}],
         [[{call,
               {1388,8},
               {remote,
                   {1388,8},
                   {atom,{1388,8},erlang},
                   {atom,{1388,8},is_integer}},
               [{var,{1388,19},'Arity'}]},
           {call,
               {1389,8},
               {remote,
                   {1389,8},
                   {atom,{1389,8},erlang},
                   {atom,{1389,8},is_atom}},
               [{var,{1389,16},'Name'}]},
           {call,
               {1390,8},
               {remote,
                   {1390,8},
                   {atom,{1390,8},erlang},
                   {atom,{1390,8},is_integer}},
               [{var,{1390,19},'TotalArity'}]},
           {op,{1391,19},
               '>=',
               {var,{1391,8},'TotalArity'},
               {var,{1391,22},'Arity'}}]],
         [{debug_line,1392,617},
          {match,
              {1392,5},
              {var,{1392,5},'_'},
              {call,
                  {1392,9},
                  {atom,{1392,9},verified_type},
                  [{var,{1392,23},'ReturnType'}]}},
          {debug_line,1393,618},
          {var,{1393,5},'T'}]},
     {clause,
         {1394,1},
         [{match,
              {1394,22},
              {tuple,
                  {1394,22},
                  [{atom,{1394,22},t_fun},
                   {var,{1394,35},'Arity'},
                   {atom,{1395,36},any},
                   {var,{1396,34},'ReturnType'}]},
              {var,{1396,46},'T'}}],
         [[{op,{1397,14},'=:=',{var,{1397,8},'Arity'},{atom,{1397,18},any}}],
          [{call,
               {1397,23},
               {remote,
                   {1397,23},
                   {atom,{1397,23},erlang},
                   {atom,{1397,23},is_integer}},
               [{var,{1397,34},'Arity'}]}]],
         [{debug_line,1398,619},
          {match,
              {1398,5},
              {var,{1398,5},'_'},
              {call,
                  {1398,9},
                  {atom,{1398,9},verified_type},
                  [{var,{1398,23},'ReturnType'}]}},
          {debug_line,1399,620},
          {var,{1399,5},'T'}]},
     {clause,
         {1400,1},
         [{match,
              {1400,22},
              {tuple,{1400,22},[{atom,{1400,22},t_float},{var,{1400,22},'_'}]},
              {var,{1400,33},'T'}}],
         [],
         [{debug_line,1400,621},{var,{1400,39},'T'}]},
     {clause,
         {1401,1},
         [{match,
              {1401,22},
              {tuple,
                  {1401,22},
                  [{atom,{1401,22},t_integer},{atom,{1401,42},any}]},
              {var,{1401,47},'T'}}],
         [],
         [{debug_line,1401,622},{var,{1401,53},'T'}]},
     {clause,
         {1402,1},
         [{match,
              {1402,22},
              {tuple,
                  {1402,22},
                  [{atom,{1402,22},t_integer},
                   {tuple,
                       {1402,42},
                       [{atom,{1402,43},'-inf'},{var,{1402,50},'Max'}]}]},
              {var,{1402,56},'T'}}],
         [[{call,
               {1403,8},
               {remote,
                   {1403,8},
                   {atom,{1403,8},erlang},
                   {atom,{1403,8},is_integer}},
               [{var,{1403,19},'Max'}]}]],
         [{debug_line,1404,623},{var,{1404,5},'T'}]},
     {clause,
         {1405,1},
         [{match,
              {1405,22},
              {tuple,
                  {1405,22},
                  [{atom,{1405,22},t_integer},
                   {tuple,
                       {1405,42},
                       [{var,{1405,43},'Min'},{atom,{1405,47},'+inf'}]}]},
              {var,{1405,56},'T'}}],
         [[{call,
               {1406,8},
               {remote,
                   {1406,8},
                   {atom,{1406,8},erlang},
                   {atom,{1406,8},is_integer}},
               [{var,{1406,19},'Min'}]}]],
         [{debug_line,1407,624},{var,{1407,5},'T'}]},
     {clause,
         {1408,1},
         [{match,
              {1408,22},
              {tuple,
                  {1408,22},
                  [{atom,{1408,22},t_integer},
                   {tuple,
                       {1408,42},
                       [{var,{1408,43},'Min'},{var,{1408,47},'Max'}]}]},
              {var,{1408,53},'T'}}],
         [[{call,
               {1409,8},
               {remote,
                   {1409,8},
                   {atom,{1409,8},erlang},
                   {atom,{1409,8},is_integer}},
               [{var,{1409,19},'Min'}]},
           {call,
               {1409,25},
               {remote,
                   {1409,25},
                   {atom,{1409,25},erlang},
                   {atom,{1409,25},is_integer}},
               [{var,{1409,36},'Max'}]},
           {op,{1409,46},'=<',{var,{1409,42},'Min'},{var,{1409,49},'Max'}}]],
         [{debug_line,1410,625},{var,{1410,5},'T'}]},
     {clause,
         {1411,1},
         [{match,
              {1411,22},
              {tuple,
                  {1411,22},
                  [{atom,{1411,22},t_list},
                   {var,{1411,35},'Type'},
                   {var,{1411,51},'Term'}]},
              {var,{1411,57},'T'}}],
         [],
         [{debug_line,1412,626},
          {match,
              {1412,5},
              {var,{1412,5},'_'},
              {call,
                  {1412,9},
                  {atom,{1412,9},verified_type},
                  [{var,{1412,23},'Type'}]}},
          {debug_line,1413,627},
          {match,
              {1413,5},
              {var,{1413,5},'_'},
              {call,
                  {1413,9},
                  {atom,{1413,9},verified_type},
                  [{var,{1413,23},'Term'}]}},
          {debug_line,1414,628},
          {var,{1414,5},'T'}]},
     {clause,
         {1415,1},
         [{match,
              {1415,22},
              {tuple,
                  {1415,22},
                  [{atom,{1415,22},t_map},
                   {var,{1415,22},'_'},
                   {var,{1415,22},'_'}]},
              {var,{1415,31},'T'}}],
         [],
         [{debug_line,1415,629},{var,{1415,37},'T'}]},
     {clause,
         {1416,1},
         [{match,{1416,22},{atom,{1416,22},nil},{var,{1416,26},'T'}}],
         [],
         [{debug_line,1416,630},{var,{1416,32},'T'}]},
     {clause,
         {1417,1},
         [{match,
              {1417,22},
              {tuple,
                  {1417,22},
                  [{atom,{1417,22},t_number},{var,{1417,22},'_'}]},
              {var,{1417,34},'T'}}],
         [],
         [{debug_line,1417,631},{var,{1417,40},'T'}]},
     {clause,
         {1418,1},
         [{match,{1418,22},{atom,{1418,22},other},{var,{1418,28},'T'}}],
         [],
         [{debug_line,1418,632},{var,{1418,34},'T'}]},
     {clause,
         {1419,1},
         [{match,{1419,22},{atom,{1419,22},pid},{var,{1419,26},'T'}}],
         [],
         [{debug_line,1419,633},{var,{1419,32},'T'}]},
     {clause,
         {1420,1},
         [{match,{1420,22},{atom,{1420,22},port},{var,{1420,27},'T'}}],
         [],
         [{debug_line,1420,634},{var,{1420,33},'T'}]},
     {clause,
         {1421,1},
         [{match,{1421,22},{atom,{1421,22},reference},{var,{1421,32},'T'}}],
         [],
         [{debug_line,1421,635},{var,{1421,38},'T'}]},
     {clause,
         {1422,1},
         [{match,{1422,22},{atom,{1422,22},identifier},{var,{1422,33},'T'}}],
         [],
         [{debug_line,1422,636},{var,{1422,39},'T'}]},
     {clause,
         {1423,1},
         [{match,
              {1423,22},
              {tuple,
                  {1423,22},
                  [{atom,{1423,22},t_tuple},
                   {var,{1423,36},'Size'},
                   {var,{1423,22},'_'},
                   {var,{1423,50},'Es'}]},
              {var,{1423,54},'T'}}],
         [],
         [{debug_line,1428,637},
          {match,
              {1428,5},
              {var,{1428,5},'_'},
              {lc,{1428,9},
                  {block,0,
                      [{call,
                           {1428,10},
                           {atom,{1428,10},verified_type},
                           [{var,{1428,24},'Element'}]}]},
                  [{block,0,[{debug_line,1429,638},{atom,{1429,33},true}]},
                   {m_generate,
                       {1429,30},
                       {map_field_exact,
                           {1429,19},
                           {var,{1429,13},'Index'},
                           {var,{1429,22},'Element'}},
                       {var,{1429,33},'Es'}},
                   {block,0,[{debug_line,1430,639},{atom,{1430,13},true}]},
                   {call,
                       {1430,13},
                       {remote,
                           {1430,13},
                           {atom,{1430,13},erlang},
                           {atom,{1430,13},is_integer}},
                       [{var,{1430,24},'Index'}]},
                   {block,0,[{atom,{1430,34},true}]},
                   {op,{1430,34},
                       '=<',
                       {integer,{1430,32},1},
                       {var,{1430,37},'Index'}},
                   {block,0,[{atom,{1430,50},true}]},
                   {op,{1430,50},
                       '=<',
                       {var,{1430,44},'Index'},
                       {var,{1430,53},'Size'}},
                   {block,0,[{debug_line,1431,640},{atom,{1431,19},true}]},
                   {op,{1431,19},
                       '=<',
                       {var,{1431,13},'Index'},
                       {integer,{1431,23},12}},
                   {block,0,[{debug_line,1432,641},{atom,{1432,21},true}]},
                   {op,{1432,21},
                       '=/=',
                       {var,{1432,13},'Element'},
                       {atom,{1432,25},any}},
                   {block,0,[{atom,{1432,38},true}]},
                   {op,{1432,38},
                       '=/=',
                       {var,{1432,30},'Element'},
                       {atom,{1432,42},none}}]}},
          {debug_line,1433,642},
          {var,{1433,5},'T'}]}]}.
{attribute,{1467,2},
           spec,
           {{convert_ext,2},
            [{type,{1467,18},
                   'fun',
                   [{type,{1467,18},
                          product,
                          [{type,{1467,19},pos_integer,[]},
                           {type,{1467,34},binary,[]}]},
                    {type,{1467,47},
                          union,
                          [{type,{1467,47},binary,[]},
                           {atom,{1467,58},none}]}]}]}}.
{function,
 {1468,1},
 convert_ext,2,
 [{clause,
   {1468,1},
   [{var,{1468,1},'_'},{var,{1468,1},'_'}],
   [[{call,
      {1468,1},
      {remote,{1468,1},{atom,{1468,1},fake},{atom,{1468,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1468,643},{atom,{1468,1},ignore}]},
  {clause,
   {1468,1},
   [{integer,{1468,14},3},{var,{1468,37},'Types'}],
   [],
   [{debug_line,1469,644},{var,{1469,5},'Types'}]},
  {clause,
   {1470,1},
   [{integer,{1470,14},2},{var,{1470,37},'Types'}],
   [],
   [{debug_line,1471,645},
    {call,
     {1471,5},
     {atom,{1471,5},convert_ext},
     [{integer,{1471,18},3},
      {block,0,
       [{call,
         {1471,41},
         {atom,{1471,41},convert_ext_26},
         [{var,{1471,56},'Types'},{block,0,[{bin,{1471,63},[]}]}]}]}]}]},
  {clause,
   {1472,1},
   [{integer,{1472,14},1},{var,{1472,37},'Types0'}],
   [],
   [{debug_line,1473,646},
    {match,
     {1473,5},
     {var,{1473,5},'NumberMask'},
     {op,
      {1473,36},
      'bor',
      {op,{1473,20},'bsl',{integer,{1473,20},1},{integer,{1473,20},3}},
      {op,{1473,41},'bsl',{integer,{1473,41},1},{integer,{1473,41},5}}}},
    {debug_line,1474,647},
    {match,
     {1474,5},
     {var,{1474,5},'Types'},
     {bc,
      {1474,13},
      {block,0,
       [{'case',
         {1474,16},
         {op,{1474,25},'=<',{var,{1474,21},'Min'},{var,{1474,28},'Max'}},
         [{clause,
           {1475,20},
           [{atom,{1475,20},true}],
           [],
           [{debug_line,1476,648},
            {match,
             {1476,24},
             {atom,{1476,24},true},
             {op,
              {1476,33},
              '=/=',
              {integer,{1476,31},0},
              {op,
               {1476,48},
               'band',
               {var,{1476,38},'TypeBits0'},
               {var,{1476,53},'NumberMask'}}}},
            {debug_line,1477,649},
            {match,
             {1477,24},
             {var,{1477,24},'TypeBits'},
             {op,
              {1477,45},
              'bor',
              {var,{1477,35},'TypeBits0'},
              {op,
               {1479,62},
               'bsl',
               {op,
                {1478,57},
                'bor',
                {op,
                 {1478,31},
                 'bsl',
                 {integer,{1478,31},1},
                 {integer,{1478,31},12}},
                {op,
                 {1479,35},
                 'bsl',
                 {integer,{1479,35},1},
                 {integer,{1479,35},13}}},
               {integer,{1479,66},1}}}},
            {debug_line,1480,650},
            {bin,
             {1480,24},
             [{bin_element,
               {1480,26},
               {var,{1480,26},'TypeBits'},
               {integer,{1480,35},16},
               default},
              {bin_element,
               {1480,38},
               {var,{1480,38},'Min'},
               {integer,{1480,42},64},
               [signed]},
              {bin_element,
               {1480,52},
               {var,{1480,52},'Max'},
               {integer,{1480,56},64},
               [signed]}]}]},
          {clause,
           {1481,20},
           [{atom,{1481,20},false}],
           [],
           [{debug_line,1482,651},
            {bin,
             {1482,24},
             [{bin_element,
               {1482,26},
               {var,{1482,26},'TypeBits0'},
               {integer,{1482,36},16},
               default}]}]}]}]},
      [{block,0,[{debug_line,1483,652},{atom,{1483,72},true}]},
       {b_generate_strict,
        {1483,68},
        {bin,
         {1483,23},
         [{bin_element,
           {1483,25},
           {var,{1483,25},'TypeBits0'},
           {integer,{1483,35},16},
           default},
          {bin_element,
           {1483,38},
           {var,{1483,38},'Min'},
           {integer,{1483,42},64},
           [signed]},
          {bin_element,
           {1483,52},
           {var,{1483,52},'Max'},
           {integer,{1483,56},64},
           [signed]}]},
        {var,{1483,72},'Types0'}}]}},
    {debug_line,1484,653},
    {call,
     {1484,5},
     {atom,{1484,5},convert_ext},
     [{integer,{1484,18},2},{var,{1484,41},'Types'}]}]},
  {clause,
   {1485,1},
   [{var,{1485,13},'_Version'},{var,{1485,23},'_Types'}],
   [],
   [{debug_line,1486,654},{atom,{1486,5},none}]}]}.
{function,
 {1488,1},
 convert_ext_26,2,
 [{clause,
   {1488,1},
   [{var,{1488,1},'_'},{var,{1488,1},'_'}],
   [[{call,
      {1488,1},
      {remote,{1488,1},{atom,{1488,1},fake},{atom,{1488,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1488,655},{atom,{1488,1},ignore}]},
  {clause,
   {1488,1},
   [{bin,
     {1488,16},
     [{bin_element,
       {1488,18},
       {var,{1488,18},'TypeBits0'},
       {integer,{1488,28},16},
       [big]},
      {bin_element,{1488,35},{var,{1488,35},'More'},default,[binary]}]},
    {var,{1488,50},'Types'}],
   [],
   [{debug_line,1489,656},
    {match,
     {1489,5},
     {atom,{1489,5},true},
     {op,{1489,22},'=/=',{var,{1489,12},'TypeBits0'},{integer,{1489,26},0}}},
    {debug_line,1494,657},
    {match,
     {1494,5},
     {var,{1494,5},'TypeBits'},
     {op,
      {1494,35},
      'bor',
      {op,{1494,27},'band',{var,{1494,17},'TypeBits0'},{integer,{1494,32},3}},
      {op,
       {1494,66},
       'bsr',
       {op,
        {1494,51},
        'band',
        {var,{1494,41},'TypeBits0'},
        {op,{1494,57},'bnot',{integer,{1494,62},3}}},
       {integer,{1494,70},1}}}},
    {debug_line,1496,658},
    {match,
     {1496,5},
     {var,{1496,5},'Res'},
     {call,
      {1496,11},
      {remote,{1496,11},{atom,{1496,11},lists},{atom,{1496,11},foldl}},
      [{block,0,
        [{'fun',
          {1496,17},
          {clauses,
           [{clause,
             {1496,20},
             [{tuple,{1496,21},[{var,{1496,22},'Id'},{var,{1496,26},'Type'}]},
              {var,{1496,33},'Acc'}],
             [],
             [{debug_line,1497,659},
              {call,
               {1497,25},
               {atom,{1497,25},decode_ext_bits},
               [{var,{1497,41},'TypeBits'},
                {var,{1497,51},'Id'},
                {var,{1497,55},'Type'},
                {var,{1497,61},'Acc'}]}]}]}}]},
       {atom,{1498,22},none},
       {block,0,
        [{debug_line,1498,660},
         {call,{1498,28},{atom,{1498,28},ext_type_mapping},[]}]}]}},
    {debug_line,1499,661},
    {match,
     {1499,5},
     {tuple,
      {1499,5},
      [{cons,
        {1499,6},
        {var,{1499,7},'Min'},
        {cons,
         {1499,12},
         {var,{1499,12},'Max'},
         {cons,{1499,17},{var,{1499,17},'Unit'},{nil,{1499,21}}}}},
       {var,{1499,24},'Rest'}]},
     {call,
      {1499,32},
      {atom,{1499,32},decode_extra},
      [{var,{1499,45},'TypeBits'},{var,{1499,55},'More'}]}},
    {debug_line,1500,662},
    {match,
     {1500,5},
     {var,{1500,5},'R'},
     {'case',
      {1500,9},
      {tuple,{1500,14},[{var,{1500,15},'Min'},{var,{1500,19},'Max'}]},
      [{clause,
        {1501,13},
        [{tuple,{1501,13},[{atom,{1501,14},'-inf'},{atom,{1501,21},'+inf'}]}],
        [],
        [{debug_line,1501,663},{atom,{1501,32},any}]},
       {clause,
        {1502,13},
        [{var,{1502,13},'R0'}],
        [],
        [{debug_line,1502,664},{var,{1502,19},'R0'}]}]}},
    {debug_line,1505,665},
    {match,
     {1505,5},
     {var,{1505,5},'Encoded'},
     {call,
      {1505,15},
      {atom,{1505,15},encode_ext},
      [{block,0,
        [{call,
          {1505,26},
          {atom,{1505,26},decode_fix},
          [{var,{1505,37},'Res'},
           {var,{1505,42},'R'},
           {var,{1505,45},'Unit'}]}]}]}},
    {debug_line,1506,666},
    {call,
     {1506,5},
     {atom,{1506,5},convert_ext_26},
     [{var,{1506,20},'Rest'},
      {block,0,
       [{bin,
         {1506,26},
         [{bin_element,{1506,28},{var,{1506,28},'Types'},default,[bits]},
          {bin_element,
           {1506,40},
           {var,{1506,40},'Encoded'},
           default,
           [bits]}]}]}]}]},
  {clause,
   {1507,1},
   [{bin,{1507,16},[]},{var,{1507,22},'Types'}],
   [],
   [{debug_line,1508,667},{var,{1508,5},'Types'}]}]}.
{function,
 {1510,1},
 ext_type_mapping,0,
 [{clause,
   {1510,1},
   [],
   [[{call,
      {1510,1},
      {remote,{1510,1},{atom,{1510,1},fake},{atom,{1510,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1510,668},{atom,{1510,1},ignore}]},
  {clause,
   {1510,1},
   [],[],
   [{debug_line,1511,669},
    {cons,
     {1511,5},
     {tuple,
      {1511,6},
      [{op,{1511,8},'bsl',{integer,{1511,8},1},{integer,{1511,8},0}},
       {tuple,{1511,33},[{atom,{1511,33},t_atom},{atom,{1511,33},any}]}]},
     {cons,
      {1512,6},
      {tuple,
       {1512,6},
       [{op,{1512,8},'bsl',{integer,{1512,8},1},{integer,{1512,8},1}},
        {tuple,
         {1512,33},
         [{atom,{1512,33},t_bs_matchable},{integer,{1512,33},1}]}]},
      {cons,
       {1513,6},
       {tuple,
        {1513,6},
        [{op,{1513,8},'bsl',{integer,{1513,8},1},{integer,{1513,8},2}},
         {tuple,
          {1513,33},
          [{atom,{1513,33},t_cons},
           {atom,{1513,33},any},
           {atom,{1513,33},any}]}]},
       {cons,
        {1514,6},
        {tuple,
         {1514,6},
         [{op,{1514,8},'bsl',{integer,{1514,8},1},{integer,{1514,8},3}},
          {tuple,{1514,33},[{atom,{1514,33},t_float},{atom,{1514,33},any}]}]},
        {cons,
         {1515,6},
         {tuple,
          {1515,6},
          [{op,{1515,8},'bsl',{integer,{1515,8},1},{integer,{1515,8},4}},
           {tuple,
            {1515,33},
            [{atom,{1515,33},t_fun},
             {atom,{1515,33},any},
             {atom,{1515,33},any},
             {atom,{1515,33},any}]}]},
         {cons,
          {1516,6},
          {tuple,
           {1516,6},
           [{op,{1516,8},'bsl',{integer,{1516,8},1},{integer,{1516,8},5}},
            {tuple,
             {1516,33},
             [{atom,{1516,33},t_integer},{atom,{1516,33},any}]}]},
          {cons,
           {1517,6},
           {tuple,
            {1517,6},
            [{op,{1517,8},'bsl',{integer,{1517,8},1},{integer,{1517,8},6}},
             {tuple,
              {1517,33},
              [{atom,{1517,33},t_map},
               {atom,{1517,33},any},
               {atom,{1517,33},any}]}]},
           {cons,
            {1518,6},
            {tuple,
             {1518,6},
             [{op,{1518,8},'bsl',{integer,{1518,8},1},{integer,{1518,8},7}},
              {atom,{1518,33},nil}]},
            {cons,
             {1519,6},
             {tuple,
              {1519,6},
              [{op,{1519,8},'bsl',{integer,{1519,8},1},{integer,{1519,8},8}},
               {atom,{1519,33},pid}]},
             {cons,
              {1520,6},
              {tuple,
               {1520,6},
               [{op,{1520,8},'bsl',{integer,{1520,8},1},{integer,{1520,8},9}},
                {atom,{1520,33},port}]},
              {cons,
               {1521,6},
               {tuple,
                {1521,6},
                [{op,
                  {1521,8},
                  'bsl',
                  {integer,{1521,8},1},
                  {integer,{1521,8},10}},
                 {atom,{1521,33},reference}]},
               {cons,
                {1522,6},
                {tuple,
                 {1522,6},
                 [{op,
                   {1522,8},
                   'bsl',
                   {integer,{1522,8},1},
                   {integer,{1522,8},11}},
                  {tuple,
                   {1522,33},
                   [{atom,{1522,33},t_tuple},
                    {integer,{1522,33},0},
                    {atom,{1522,33},false},
                    {map,{1522,33},[]}]}]},
                {nil,{1522,44}}}}}}}}}}}}}}]}]}.
{attribute,{1524,2},
           spec,
           {{decode_ext,1},
            [{type,{1524,17},
                   'fun',
                   [{type,{1524,17},product,[{type,{1524,18},binary,[]}]},
                    {type,{1524,31},
                          union,
                          [{type,{1524,31},
                                 tuple,
                                 [{user_type,{1524,32},type,[]},
                                  {type,{1524,39},binary,[]}]},
                           {atom,{1524,51},done}]}]}]}}.
{function,
 {1525,1},
 decode_ext,1,
 [{clause,
   {1525,1},
   [{var,{1525,1},'_'}],
   [[{call,
      {1525,1},
      {remote,{1525,1},{atom,{1525,1},fake},{atom,{1525,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1525,670},{atom,{1525,1},ignore}]},
  {clause,
   {1525,1},
   [{bin,
     {1525,12},
     [{bin_element,
       {1525,14},
       {var,{1525,14},'TypeBits'},
       {integer,{1525,23},16},
       [big]},
      {bin_element,{1525,30},{var,{1525,30},'More'},default,[binary]}]}],
   [],
   [{debug_line,1526,671},
    {match,
     {1526,5},
     {atom,{1526,5},true},
     {op,{1526,21},'=/=',{var,{1526,12},'TypeBits'},{integer,{1526,25},0}}},
    {debug_line,1527,672},
    {match,
     {1527,5},
     {var,{1527,5},'Res'},
     {call,
      {1527,11},
      {remote,{1527,11},{atom,{1527,11},lists},{atom,{1527,11},foldl}},
      [{block,0,
        [{'fun',
          {1527,17},
          {clauses,
           [{clause,
             {1527,20},
             [{tuple,{1527,21},[{var,{1527,22},'Id'},{var,{1527,26},'Type'}]},
              {var,{1527,33},'Acc'}],
             [],
             [{debug_line,1528,673},
              {call,
               {1528,25},
               {atom,{1528,25},decode_ext_bits},
               [{var,{1528,41},'TypeBits'},
                {var,{1528,51},'Id'},
                {var,{1528,55},'Type'},
                {var,{1528,61},'Acc'}]}]}]}}]},
       {atom,{1529,22},none},
       {block,0,
        [{debug_line,1529,674},
         {call,{1529,28},{atom,{1529,28},ext_type_mapping},[]}]}]}},
    {debug_line,1530,675},
    {match,
     {1530,5},
     {tuple,
      {1530,5},
      [{cons,
        {1530,6},
        {var,{1530,7},'Min'},
        {cons,
         {1530,11},
         {var,{1530,11},'Max'},
         {cons,{1530,15},{var,{1530,15},'Unit'},{nil,{1530,19}}}}},
       {var,{1530,21},'Extra'}]},
     {call,
      {1530,30},
      {atom,{1530,30},decode_extra},
      [{var,{1530,43},'TypeBits'},{var,{1530,53},'More'}]}},
    {debug_line,1531,676},
    {match,
     {1531,5},
     {var,{1531,5},'R'},
     {'case',
      {1531,9},
      {tuple,{1531,14},[{var,{1531,15},'Min'},{var,{1531,19},'Max'}]},
      [{clause,
        {1532,13},
        [{tuple,{1532,13},[{atom,{1532,14},'-inf'},{atom,{1532,21},'+inf'}]}],
        [],
        [{debug_line,1532,677},{atom,{1532,32},any}]},
       {clause,
        {1533,13},
        [{var,{1533,13},'R0'}],
        [],
        [{debug_line,1533,678},{var,{1533,19},'R0'}]}]}},
    {debug_line,1535,679},
    {tuple,
     {1535,5},
     [{call,
       {1535,6},
       {atom,{1535,6},decode_fix},
       [{var,{1535,17},'Res'},{var,{1535,22},'R'},{var,{1535,25},'Unit'}]},
      {var,{1535,31},'Extra'}]}]},
  {clause,
   {1536,1},
   [{bin,{1536,12},[]}],
   [],
   [{debug_line,1537,680},{atom,{1537,5},done}]}]}.
{function,
    {1539,1},
    decode_ext_bits,4,
    [{clause,
         {1539,1},
         [{var,{1539,1},'_'},
          {var,{1539,1},'_'},
          {var,{1539,1},'_'},
          {var,{1539,1},'_'}],
         [[{call,
               {1539,1},
               {remote,
                   {1539,1},
                   {atom,{1539,1},fake},
                   {atom,{1539,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1539,681},{atom,{1539,1},ignore}]},
     {clause,
         {1539,1},
         [{var,{1539,17},'Input'},
          {var,{1539,24},'TypeBit'},
          {var,{1539,33},'Type'},
          {var,{1539,39},'Acc'}],
         [],
         [{debug_line,1540,682},
          {'case',
              {1540,5},
              {op,{1540,16},
                  'band',
                  {var,{1540,10},'Input'},
                  {var,{1540,21},'TypeBit'}},
              [{clause,
                   {1541,9},
                   [{integer,{1541,9},0}],
                   [],
                   [{debug_line,1541,683},{var,{1541,14},'Acc'}]},
               {clause,
                   {1542,9},
                   [{var,{1542,9},'_'}],
                   [],
                   [{debug_line,1542,684},
                    {call,
                        {1542,14},
                        {atom,{1542,14},join},
                        [{var,{1542,19},'Type'},
                         {var,{1542,25},'Acc'}]}]}]}]}]}.
{function,
 {1545,1},
 decode_extra,2,
 [{clause,
   {1545,1},
   [{var,{1545,1},'_'},{var,{1545,1},'_'}],
   [[{call,
      {1545,1},
      {remote,{1545,1},{atom,{1545,1},fake},{atom,{1545,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1545,685},{atom,{1545,1},ignore}]},
  {clause,
   {1545,1},
   [{var,{1545,14},'TypeBits'},{var,{1545,24},'Extra'}],
   [],
   [{debug_line,1546,686},
    {match,
     {1546,5},
     {var,{1546,5},'L'},
     {cons,
      {1546,9},
      {tuple,
       {1546,10},
       [{op,{1546,12},'bsl',{integer,{1546,12},1},{integer,{1546,12},12}},
        {integer,{1546,39},64},
        {atom,{1546,43},signed},
        {atom,{1546,51},'-inf'}]},
      {cons,
       {1547,10},
       {tuple,
        {1547,10},
        [{op,{1547,12},'bsl',{integer,{1547,12},1},{integer,{1547,12},13}},
         {integer,{1547,39},64},
         {atom,{1547,43},signed},
         {atom,{1547,51},'+inf'}]},
       {cons,
        {1548,10},
        {tuple,
         {1548,10},
         [{op,{1548,12},'bsl',{integer,{1548,12},1},{integer,{1548,12},14}},
          {integer,{1548,32},8},
          {atom,{1548,35},unsigned},
          {integer,{1548,45},1}]},
        {nil,{1548,47}}}}}},
    {debug_line,1549,687},
    {call,
     {1549,5},
     {remote,{1549,5},{atom,{1549,5},lists},{atom,{1549,5},mapfoldl}},
     [{block,0,
       [{'fun',
         {1549,14},
         {clauses,
          [{clause,
            {1549,17},
            [{tuple,
              {1549,18},
              [{var,{1549,19},'Bit'},
               {var,{1549,23},'Size'},
               {var,{1549,28},'Spec'},
               {var,{1549,33},'Default'}]},
             {var,{1549,43},'Acc0'}],
            [],
            [{debug_line,1550,688},
             {'case',
              {1550,22},
              {tuple,
               {1550,27},
               [{op,
                 {1550,37},
                 'band',
                 {var,{1550,28},'TypeBits'},
                 {var,{1550,42},'Bit'}},
                {var,{1550,47},'Spec'},
                {var,{1550,53},'Acc0'}]},
              [{clause,
                {1551,26},
                [{tuple,
                  {1551,26},
                  [{var,{1551,27},'Bit'},
                   {atom,{1551,32},unsigned},
                   {bin,
                    {1551,42},
                    [{bin_element,
                      {1551,44},
                      {var,{1551,44},'Value'},
                      {var,{1551,50},'Size'},
                      [unsigned]},
                     {bin_element,
                      {1551,64},
                      {var,{1551,64},'Acc'},
                      default,
                      [binary]}]}]}],
                [],
                [{debug_line,1552,689},
                 {tuple,
                  {1552,30},
                  [{var,{1552,31},'Value'},{var,{1552,38},'Acc'}]}]},
               {clause,
                {1553,26},
                [{tuple,
                  {1553,26},
                  [{var,{1553,27},'Bit'},
                   {atom,{1553,32},signed},
                   {bin,
                    {1553,40},
                    [{bin_element,
                      {1553,42},
                      {var,{1553,42},'Value'},
                      {var,{1553,48},'Size'},
                      [signed]},
                     {bin_element,
                      {1553,60},
                      {var,{1553,60},'Acc'},
                      default,
                      [binary]}]}]}],
                [],
                [{debug_line,1554,690},
                 {tuple,
                  {1554,30},
                  [{var,{1554,31},'Value'},{var,{1554,38},'Acc'}]}]},
               {clause,
                {1555,26},
                [{tuple,
                  {1555,26},
                  [{integer,{1555,27},0},
                   {var,{1555,30},'_Spec'},
                   {bin,
                    {1555,37},
                    [{bin_element,
                      {1555,39},
                      {var,{1555,39},'_'},
                      default,
                      [binary]}]}]}],
                [],
                [{debug_line,1556,691},
                 {tuple,
                  {1556,30},
                  [{var,{1556,31},'Default'},
                   {var,{1556,39},'Acc0'}]}]}]}]}]}}]},
      {var,{1558,19},'Extra'},
      {var,{1558,26},'L'}]}]}]}.
{function,
 {1560,1},
 decode_fix,3,
 [{clause,
   {1560,1},
   [{var,{1560,1},'_'},{var,{1560,1},'_'},{var,{1560,1},'_'}],
   [[{call,
      {1560,1},
      {remote,{1560,1},{atom,{1560,1},fake},{atom,{1560,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1560,692},{atom,{1560,1},ignore}]},
  {clause,
   {1560,1},
   [{tuple,{1560,12},[{atom,{1560,12},t_integer},{var,{1560,12},'_'}]},
    {var,{1560,26},'Range'},
    {var,{1560,33},'_Unit'}],
   [],
   [{debug_line,1561,693},
    {tuple,{1561,5},[{atom,{1561,5},t_integer},{var,{1561,25},'Range'}]}]},
  {clause,
   {1562,1},
   [{tuple,{1562,12},[{atom,{1562,12},t_number},{var,{1562,12},'_'}]},
    {var,{1562,25},'Range'},
    {var,{1562,32},'_Unit'}],
   [],
   [{debug_line,1563,694},
    {tuple,{1563,5},[{atom,{1563,5},t_number},{var,{1563,24},'Range'}]}]},
  {clause,
   {1564,1},
   [{tuple,
     {1564,12},
     [{atom,{1564,12},t_bitstring},{var,{1564,12},'_'},{var,{1564,12},'_'}]},
    {var,{1564,28},'_Range'},
    {var,{1564,36},'Unit'}],
   [],
   [{debug_line,1565,695},
    {tuple,
     {1565,5},
     [{atom,{1565,5},t_bitstring},
      {op,{1565,32},'+',{var,{1565,28},'Unit'},{integer,{1565,33},1}},
      {atom,{1565,5},false}]}]},
  {clause,
   {1566,1},
   [{match,
     {1566,12},
     {tuple,
      {1566,12},
      [{atom,{1566,12},t_union},
       {var,{1566,12},'_'},
       {var,{1566,12},'_'},
       {var,{1566,12},'_'},
       {var,{1566,12},'_'},
       {var,{1566,12},'_'}]},
     {var,{1566,23},'Type0'}},
    {var,{1566,30},'Range'},
    {var,{1566,37},'Unit'}],
   [],
   [{debug_line,1567,696},
    {match,
     {1567,5},
     {var,{1567,5},'Type1'},
     {'case',
      {1567,13},
      {call,
       {1567,18},
       {atom,{1567,18},meet},
       [{var,{1567,23},'Type0'},
        {block,0,
         [{tuple,
           {1567,30},
           [{atom,{1567,30},t_integer},{atom,{1567,30},any}]}]}]},
      [{clause,
        {1568,17},
        [{tuple,{1568,17},[{atom,{1568,17},t_integer},{var,{1568,17},'_'}]}],
        [],
        [{debug_line,1569,697},
         {block,
          {1569,21},
          [{match,
            {1569,35},
            {var,{1569,35},rec34},
            {tuple,
             {1569,42},
             [{atom,{1569,42},t_integer},{var,{1569,62},'Range'}]}},
           {match,{1569,21},{var,{1569,21},rec35},{var,{1569,21},'Type0'}},
           {'case',
            {1569,35},
            {var,{1569,21},rec35},
            [{clause,
              {1569,35},
              [{tuple,
                {1569,35},
                [{atom,{1569,35},t_union},
                 {var,{1569,35},'_'},
                 {var,{1569,35},'_'},
                 {var,{1569,35},'_'},
                 {var,{1569,35},'_'},
                 {var,{1569,35},'_'}]}],
              [],
              [{call,
                {1569,35},
                {remote,
                 {1569,35},
                 {atom,{1569,35},erlang},
                 {atom,{1569,35},setelement}},
                [{integer,{1569,35},4},
                 {var,{1569,21},rec35},
                 {var,{1569,35},rec34}]}]},
             {clause,
              [{generated,true},{location,{1569,35}}],
              [{var,[{generated,true},{location,{1569,35}}],'_'}],
              [],
              [{call,
                [{generated,true},{location,{1569,35}}],
                {remote,
                 [{generated,true},{location,{1569,35}}],
                 {atom,[{generated,true},{location,{1569,35}}],erlang},
                 {atom,[{generated,true},{location,{1569,35}}],error}},
                [{tuple,
                  [{generated,true},{location,{1569,35}}],
                  [{atom,[{generated,true},{location,{1569,35}}],badrecord},
                   {var,{1569,21},rec35}]}]}]}]}]}]},
       {clause,
        {1570,17},
        [{var,{1570,17},'_'}],
        [],
        [{debug_line,1571,698},{var,{1571,21},'Type0'}]}]}},
    {debug_line,1573,699},
    {'case',
     {1573,5},
     {call,
      {1573,10},
      {atom,{1573,10},meet},
      [{var,{1573,15},'Type1'},
       {block,0,
        [{tuple,
          {1573,22},
          [{atom,{1573,22},t_bitstring},
           {integer,{1573,22},1},
           {atom,{1573,22},false}]}]}]},
     [{clause,
       {1574,9},
       [{tuple,
         {1574,9},
         [{atom,{1574,9},t_bitstring},{var,{1574,9},'_'},{var,{1574,9},'_'}]}],
       [],
       [{debug_line,1575,700},
        {block,
         {1575,13},
         [{match,
           {1575,27},
           {var,{1575,27},rec36},
           {tuple,
            {1575,33},
            [{atom,{1575,33},t_bitstring},
             {var,{1575,56},'Unit'},
             {atom,{1575,33},false}]}},
          {match,{1575,13},{var,{1575,13},rec37},{var,{1575,13},'Type1'}},
          {'case',
           {1575,27},
           {var,{1575,13},rec37},
           [{clause,
             {1575,27},
             [{tuple,
               {1575,27},
               [{atom,{1575,27},t_union},
                {var,{1575,27},'_'},
                {var,{1575,27},'_'},
                {var,{1575,27},'_'},
                {var,{1575,27},'_'},
                {var,{1575,27},'_'}]}],
             [],
             [{call,
               {1575,27},
               {remote,
                {1575,27},
                {atom,{1575,27},erlang},
                {atom,{1575,27},setelement}},
               [{integer,{1575,27},6},
                {var,{1575,13},rec37},
                {var,{1575,27},rec36}]}]},
            {clause,
             [{generated,true},{location,{1575,27}}],
             [{var,[{generated,true},{location,{1575,27}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{1575,27}}],
               {remote,
                [{generated,true},{location,{1575,27}}],
                {atom,[{generated,true},{location,{1575,27}}],erlang},
                {atom,[{generated,true},{location,{1575,27}}],error}},
               [{tuple,
                 [{generated,true},{location,{1575,27}}],
                 [{atom,[{generated,true},{location,{1575,27}}],badrecord},
                  {var,{1575,13},rec37}]}]}]}]}]}]},
      {clause,
       {1576,9},
       [{var,{1576,9},'_'}],
       [],
       [{debug_line,1577,701},{var,{1577,13},'Type1'}]}]}]},
  {clause,
   {1579,1},
   [{var,{1579,12},'Type'},{var,{1579,18},'_'},{var,{1579,21},'_'}],
   [],
   [{debug_line,1580,702},{var,{1580,5},'Type'}]}]}.
{attribute,{1582,2},
           spec,
           {{encode_ext,1},
            [{type,{1582,17},
                   'fun',
                   [{type,{1582,17},product,[{user_type,{1582,18},type,[]}]},
                    {type,{1582,29},binary,[]}]}]}}.
{function,
 {1583,1},
 encode_ext,1,
 [{clause,
   {1583,1},
   [{var,{1583,1},'_'}],
   [[{call,
      {1583,1},
      {remote,{1583,1},{atom,{1583,1},fake},{atom,{1583,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1583,703},{atom,{1583,1},ignore}]},
  {clause,
   {1583,1},
   [{var,{1583,12},'Input'}],
   [],
   [{debug_line,1584,704},
    {match,
     {1584,5},
     {var,{1584,5},'TypeBits0'},
     {call,
      {1584,17},
      {remote,{1584,17},{atom,{1584,17},lists},{atom,{1584,17},foldl}},
      [{block,0,
        [{'fun',
          {1584,23},
          {clauses,
           [{clause,
             {1584,26},
             [{tuple,{1584,27},[{var,{1584,28},'Id'},{var,{1584,32},'Type'}]},
              {var,{1584,39},'Acc'}],
             [],
             [{debug_line,1585,705},
              {call,
               {1585,31},
               {atom,{1585,31},encode_ext_bits},
               [{var,{1585,47},'Input'},
                {var,{1585,54},'Id'},
                {var,{1585,58},'Type'},
                {var,{1585,64},'Acc'}]}]}]}}]},
       {integer,{1586,28},0},
       {block,0,
        [{debug_line,1586,706},
         {call,{1586,31},{atom,{1586,31},ext_type_mapping},[]}]}]}},
    {debug_line,1587,707},
    {match,
     {1587,5},
     {tuple,{1587,5},[{var,{1587,6},'TypeBits1'},{var,{1587,16},'Extra'}]},
     {call,{1587,25},{atom,{1587,25},encode_extra},[{var,{1587,38},'Input'}]}},
    {debug_line,1588,708},
    {match,
     {1588,5},
     {var,{1588,5},'TypeBits'},
     {op,
      {1588,26},
      'bor',
      {var,{1588,16},'TypeBits0'},
      {var,{1588,30},'TypeBits1'}}},
    {debug_line,1589,709},
    {match,
     {1589,5},
     {atom,{1589,5},true},
     {op,{1589,21},'=/=',{var,{1589,12},'TypeBits'},{integer,{1589,25},0}}},
    {debug_line,1590,710},
    {bin,
     {1590,5},
     [{bin_element,
       {1590,7},
       {var,{1590,7},'TypeBits'},
       {integer,{1590,16},16},
       default},
      {bin_element,{1590,19},{var,{1590,19},'Extra'},default,[binary]}]}]}]}.
{function,
    {1592,1},
    encode_ext_bits,4,
    [{clause,
         {1592,1},
         [{var,{1592,1},'_'},
          {var,{1592,1},'_'},
          {var,{1592,1},'_'},
          {var,{1592,1},'_'}],
         [[{call,
               {1592,1},
               {remote,
                   {1592,1},
                   {atom,{1592,1},fake},
                   {atom,{1592,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1592,711},{atom,{1592,1},ignore}]},
     {clause,
         {1592,1},
         [{var,{1592,17},'Input'},
          {var,{1592,24},'TypeBit'},
          {var,{1592,33},'Type'},
          {var,{1592,39},'Acc'}],
         [],
         [{debug_line,1593,712},
          {'case',
              {1593,5},
              {call,
                  {1593,10},
                  {atom,{1593,10},meet},
                  [{var,{1593,15},'Input'},{var,{1593,22},'Type'}]},
              [{clause,
                   {1594,9},
                   [{atom,{1594,9},none}],
                   [],
                   [{debug_line,1594,713},{var,{1594,17},'Acc'}]},
               {clause,
                   {1595,9},
                   [{var,{1595,9},'_'}],
                   [],
                   [{debug_line,1595,714},
                    {op,{1595,18},
                        'bor',
                        {var,{1595,14},'Acc'},
                        {var,{1595,22},'TypeBit'}}]}]}]}]}.
{function,
    {1598,1},
    encode_extra,1,
    [{clause,
         {1598,1},
         [{var,{1598,1},'_'}],
         [[{call,
               {1598,1},
               {remote,
                   {1598,1},
                   {atom,{1598,1},fake},
                   {atom,{1598,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1598,715},{atom,{1598,1},ignore}]},
     {clause,
         {1598,1},
         [{var,{1598,14},'Input'}],
         [],
         [{debug_line,1599,716},
          {match,
              {1599,5},
              {tuple,
                  {1599,5},
                  [{var,{1599,6},'TypeBits0'},{var,{1599,16},'Extra0'}]},
              {call,
                  {1599,26},
                  {atom,{1599,26},encode_range},
                  [{var,{1599,39},'Input'}]}},
          {debug_line,1600,717},
          {match,
              {1600,5},
              {tuple,
                  {1600,5},
                  [{var,{1600,6},'TypeBits1'},{var,{1600,16},'Extra1'}]},
              {call,
                  {1600,26},
                  {atom,{1600,26},encode_unit},
                  [{var,{1600,38},'Input'}]}},
          {debug_line,1601,718},
          {tuple,
              {1601,5},
              [{op,{1601,16},
                   'bor',
                   {var,{1601,6},'TypeBits0'},
                   {var,{1601,20},'TypeBits1'}},
               {bin,
                   {1601,30},
                   [{bin_element,
                        {1601,32},
                        {var,{1601,32},'Extra0'},
                        default,
                        [binary]},
                    {bin_element,
                        {1601,46},
                        {var,{1601,46},'Extra1'},
                        default,
                        [binary]}]}]}]}]}.
{function,{1603,1},
          encode_range,1,
          [{clause,{1603,1},
                   [{var,{1603,1},'_'}],
                   [[{call,{1603,1},
                           {remote,{1603,1},
                                   {atom,{1603,1},fake},
                                   {atom,{1603,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1603,719},{atom,{1603,1},ignore}]},
           {clause,{1603,1},
                   [{tuple,{1603,14},
                           [{atom,{1603,14},t_integer},
                            {tuple,{1603,34},
                                   [{var,{1603,35},'Min'},
                                    {var,{1603,39},'Max'}]}]}],
                   [],
                   [{debug_line,1604,720},
                    {call,{1604,5},
                          {atom,{1604,5},encode_range},
                          [{var,{1604,18},'Min'},{var,{1604,23},'Max'}]}]},
           {clause,{1605,1},
                   [{tuple,{1605,14},
                           [{atom,{1605,14},t_number},
                            {tuple,{1605,33},
                                   [{var,{1605,34},'Min'},
                                    {var,{1605,38},'Max'}]}]}],
                   [],
                   [{debug_line,1606,721},
                    {call,{1606,5},
                          {atom,{1606,5},encode_range},
                          [{var,{1606,18},'Min'},{var,{1606,23},'Max'}]}]},
           {clause,{1607,1},
                   [{tuple,{1607,14},
                           [{atom,{1607,14},t_union},
                            {var,{1607,14},'_'},
                            {var,{1607,14},'_'},
                            {var,{1607,30},'N'},
                            {var,{1607,14},'_'},
                            {var,{1607,14},'_'}]}],
                   [],
                   [{debug_line,1608,722},
                    {call,{1608,5},
                          {atom,{1608,5},encode_range},
                          [{var,{1608,18},'N'}]}]},
           {clause,{1609,1},
                   [{var,{1609,14},'_'}],
                   [],
                   [{debug_line,1610,723},
                    {tuple,{1610,5},
                           [{integer,{1610,6},0},{bin,{1610,8},[]}]}]}]}.
{function,
    {1612,1},
    encode_range,2,
    [{clause,
         {1612,1},
         [{var,{1612,1},'_'},{var,{1612,1},'_'}],
         [[{call,
               {1612,1},
               {remote,
                   {1612,1},
                   {atom,{1612,1},fake},
                   {atom,{1612,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1612,724},{atom,{1612,1},ignore}]},
     {clause,
         {1612,1},
         [{var,{1612,14},'Min'},{var,{1612,19},'Max'}],
         [],
         [{debug_line,1613,725},
          {'case',
              {1613,5},
              {call,
                  {1613,10},
                  {atom,{1613,10},is_small},
                  [{var,{1613,19},'Min'}]},
              [{clause,
                   {1614,9},
                   [{atom,{1614,9},true}],
                   [],
                   [{debug_line,1615,726},
                    {call,
                        {1615,13},
                        {atom,{1615,13},encode_range},
                        [{var,{1615,26},'Max'},
                         {block,0,
                             [{op,{1615,32},
                                  'bsl',
                                  {integer,{1615,32},1},
                                  {integer,{1615,32},12}}]},
                         {block,0,
                             [{bin,
                                  {1615,59},
                                  [{bin_element,
                                       {1615,61},
                                       {var,{1615,61},'Min'},
                                       {integer,{1615,65},64},
                                       default}]}]}]}]},
               {clause,
                   {1616,9},
                   [{atom,{1616,9},false}],
                   [],
                   [{debug_line,1617,727},
                    {call,
                        {1617,13},
                        {atom,{1617,13},encode_range},
                        [{var,{1617,26},'Max'},
                         {integer,{1617,31},0},
                         {block,0,[{bin,{1617,34},[]}]}]}]}]}]}]}.
{function,
    {1620,1},
    encode_range,3,
    [{clause,
         {1620,1},
         [{var,{1620,1},'_'},{var,{1620,1},'_'},{var,{1620,1},'_'}],
         [[{call,
               {1620,1},
               {remote,
                   {1620,1},
                   {atom,{1620,1},fake},
                   {atom,{1620,1},is_beam_bif_info}},
               []}]],
         [{debug_line,1620,728},{atom,{1620,1},ignore}]},
     {clause,
         {1620,1},
         [{var,{1620,14},'Max'},
          {var,{1620,19},'TypeBits'},
          {var,{1620,29},'Extra'}],
         [],
         [{debug_line,1621,729},
          {'case',
              {1621,5},
              {call,
                  {1621,10},
                  {atom,{1621,10},is_small},
                  [{var,{1621,19},'Max'}]},
              [{clause,
                   {1622,9},
                   [{atom,{1622,9},true}],
                   [],
                   [{debug_line,1623,730},
                    {tuple,
                        {1623,13},
                        [{op,{1623,23},
                             'bor',
                             {var,{1623,14},'TypeBits'},
                             {op,{1623,28},
                                 'bsl',
                                 {integer,{1623,28},1},
                                 {integer,{1623,28},13}}},
                         {bin,
                             {1624,14},
                             [{bin_element,
                                  {1624,16},
                                  {var,{1624,16},'Extra'},
                                  default,
                                  [binary]},
                              {bin_element,
                                  {1624,29},
                                  {var,{1624,29},'Max'},
                                  {integer,{1624,33},64},
                                  default}]}]}]},
               {clause,
                   {1625,9},
                   [{atom,{1625,9},false}],
                   [],
                   [{debug_line,1626,731},
                    {tuple,
                        {1626,13},
                        [{var,{1626,14},'TypeBits'},
                         {var,{1626,23},'Extra'}]}]}]}]}]}.
{function,
 {1629,1},
 encode_unit,1,
 [{clause,
   {1629,1},
   [{var,{1629,1},'_'}],
   [[{call,
      {1629,1},
      {remote,{1629,1},{atom,{1629,1},fake},{atom,{1629,1},is_beam_bif_info}},
      []}]],
   [{debug_line,1629,732},{atom,{1629,1},ignore}]},
  {clause,
   {1629,1},
   [{tuple,
     {1629,13},
     [{atom,{1629,13},t_bitstring},
      {var,{1629,36},'Unit'},
      {var,{1629,13},'_'}]}],
   [],
   [{debug_line,1630,733},
    {match,
     {1630,5},
     {atom,{1630,5},true},
     {'case',
      {1630,12},
      {call,
       {1630,12},
       {remote,{1630,12},{atom,{1630,12},erlang},{atom,{1630,12},is_integer}},
       [{var,{1630,23},'Unit'}]},
      [{clause,
        {1630,12},
        [{atom,{1630,12},true}],
        [],
        [{'case',
          {1630,39},
          {op,{1630,39},'<',{integer,{1630,37},0},{var,{1630,41},'Unit'}},
          [{clause,
            {1630,39},
            [{atom,{1630,39},true}],
            [],
            [{op,
              {1630,59},
              '=<',
              {var,{1630,54},'Unit'},
              {integer,{1630,62},256}}]},
           {clause,
            {1630,39},
            [{atom,{1630,39},false}],
            [],
            [{atom,{1630,39},false}]},
           {clause,
            [{generated,true},{location,{1630,39}}],
            [{var,{1630,39},cov1}],
            [],
            [{call,
              {1630,39},
              {remote,
               {1630,39},
               {atom,{1630,39},erlang},
               {atom,{1630,39},error}},
              [{block,0,
                [{tuple,
                  {1630,39},
                  [{atom,{1630,39},badarg},{var,{1630,39},cov1}]}]}]}]}]}]},
       {clause,{1630,12},[{atom,{1630,12},false}],[],[{atom,{1630,12},false}]},
       {clause,
        [{generated,true},{location,{1630,12}}],
        [{var,{1630,12},cov2}],
        [],
        [{call,
          {1630,12},
          {remote,{1630,12},{atom,{1630,12},erlang},{atom,{1630,12},error}},
          [{block,0,
            [{tuple,
              {1630,12},
              [{atom,{1630,12},badarg},{var,{1630,12},cov2}]}]}]}]}]}},
    {debug_line,1631,734},
    {tuple,
     {1631,5},
     [{op,{1631,7},'bsl',{integer,{1631,7},1},{integer,{1631,7},14}},
      {bin,
       {1631,26},
       [{bin_element,
         {1631,29},
         {op,{1631,33},'-',{var,{1631,29},'Unit'},{integer,{1631,34},1}},
         {integer,{1631,37},8},
         default}]}]}]},
  {clause,
   {1632,1},
   [{tuple,
     {1632,13},
     [{atom,{1632,13},t_union},
      {var,{1632,13},'_'},
      {var,{1632,13},'_'},
      {var,{1632,13},'_'},
      {var,{1632,13},'_'},
      {var,{1632,28},'Other'}]}],
   [],
   [{debug_line,1633,735},
    {call,{1633,5},{atom,{1633,5},encode_unit},[{var,{1633,17},'Other'}]}]},
  {clause,
   {1634,1},
   [{var,{1634,13},'_'}],
   [],
   [{debug_line,1635,736},
    {tuple,{1635,5},[{integer,{1635,6},0},{bin,{1635,8},[]}]}]}]}.
{function,{1640,1},
          is_small,1,
          [{clause,{1640,1},
                   [{var,{1640,1},'_'}],
                   [[{call,{1640,1},
                           {remote,{1640,1},
                                   {atom,{1640,1},fake},
                                   {atom,{1640,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,1640,737},{atom,{1640,1},ignore}]},
           {clause,{1640,1},
                   [{var,{1640,10},'N'}],
                   [[{call,{1640,18},
                           {remote,{1640,18},
                                   {atom,{1640,18},erlang},
                                   {atom,{1640,18},is_integer}},
                           [{var,{1640,29},'N'}]},
                     {op,{1640,50},
                         'andalso',
                         {op,{1640,45},
                             '=<',
                             {op,{1640,33},
                                 '-',
                                 {op,{1640,37},
                                     'bsl',
                                     {integer,{1640,35},1},
                                     {integer,{1640,41},59}}},
                             {var,{1640,48},'N'}},
                         {op,{1640,60},
                             '=<',
                             {var,{1640,58},'N'},
                             {op,{1640,74},
                                 '-',
                                 {op,{1640,66},
                                     'bsl',
                                     {integer,{1640,64},1},
                                     {integer,{1640,70},59}},
                                 {integer,{1640,76},1}}}}]],
                   [{debug_line,1641,738},{atom,{1641,5},true}]},
           {clause,{1642,1},
                   [{var,{1642,10},'_'}],
                   [],
                   [{debug_line,1643,739},{atom,{1643,5},false}]}]}.
{eof,{1644,1}}.
