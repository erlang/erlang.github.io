{attribute,{1,1},file,{"misc_SUITE.erl",1}}.
{attribute,{20,2},module,misc_SUITE}.
{attribute,{22,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {init_per_testcase,2},
            {end_per_testcase,2},
            {tobias,1},
            {empty_string,1},
            {md5,1},
            {silly_coverage,1},
            {confused_literals,1},
            {integer_encoding,0},
            {integer_encoding,1},
            {override_bif,1}]}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,54,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{30,1},file,{"misc_SUITE.erl",30}}.
{attribute,{33,2},compile,{no_auto_import,[{abs,1}]}}.
{attribute,{34,2},compile,{no_auto_import,[{binary_part,3}]}}.
{attribute,{35,2},compile,{no_auto_import,[{binary_part,2}]}}.
{attribute,{36,2},import,{test_lib,[{binary_part,2}]}}.
{attribute,{39,2},compile,{no_auto_import,[{byte_size,1}]}}.
{attribute,{40,2},import,{erlang,[{byte_size,1}]}}.
{attribute,{43,2},
           callback,
           {{must_define_this_one,0},
            [{type,{43,31},
                   'fun',
                   [{type,{43,31},product,[]},{atom,{43,37},ok}]}]}}.
{attribute,{44,2},
           callback,
           {{do_something_strange,1},
            [{type,{44,31},
                   'fun',
                   [{type,{44,31},product,[{type,{44,32},atom,[]}]},
                    {atom,{44,43},ok}]}]}}.
{attribute,{45,2},optional_callbacks,[{do_something_strange,1}]}.
{attribute,{46,2},optional_callbacks,[ignore_me]}.
{attribute,{50,2},
           opaque,
           {misc_SUITE_test_cases,{type,{50,36},list,[{type,{50,37},atom,[]}]},
                                  []}}.
{attribute,{53,2},nifs,[{all,0}]}.
{function,{55,1},
          init_per_testcase,2,
          [{clause,{55,1},
                   [{var,{55,1},'_'},{var,{55,1},'_'}],
                   [[{call,{55,1},
                           {remote,{55,1},
                                   {atom,{55,1},fake},
                                   {atom,{55,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,55,1},{atom,{55,1},ignore}]},
           {clause,{55,1},
                   [{var,{55,19},'Case'},{var,{55,25},'Config'}],
                   [[{call,{55,38},
                           {remote,{55,38},
                                   {atom,{55,38},erlang},
                                   {atom,{55,38},is_atom}},
                           [{var,{55,46},'Case'}]},
                     {call,{55,53},
                           {remote,{55,53},
                                   {atom,{55,53},erlang},
                                   {atom,{55,53},is_list}},
                           [{var,{55,61},'Config'}]}]],
                   [{debug_line,56,2},{var,{56,5},'Config'}]}]}.
{function,{58,1},
          end_per_testcase,2,
          [{clause,{58,1},
                   [{var,{58,1},'_'},{var,{58,1},'_'}],
                   [[{call,{58,1},
                           {remote,{58,1},
                                   {atom,{58,1},fake},
                                   {atom,{58,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,58,3},{atom,{58,1},ignore}]},
           {clause,{58,1},
                   [{var,{58,18},'Case'},{var,{58,24},'Config'}],
                   [[{call,{58,37},
                           {remote,{58,37},
                                   {atom,{58,37},erlang},
                                   {atom,{58,37},is_atom}},
                           [{var,{58,45},'Case'}]},
                     {call,{58,52},
                           {remote,{58,52},
                                   {atom,{58,52},erlang},
                                   {atom,{58,52},is_list}},
                           [{var,{58,60},'Config'}]}]],
                   [{debug_line,59,4},{atom,{59,5},ok}]}]}.
{function,
    {61,1},
    suite,0,
    [{clause,
         {61,1},
         [],
         [[{call,
               {61,1},
               {remote,
                   {61,1},
                   {atom,{61,1},fake},
                   {atom,{61,1},is_beam_bif_info}},
               []}]],
         [{debug_line,61,5},{atom,{61,1},ignore}]},
     {clause,
         {61,1},
         [],[],
         [{debug_line,62,6},
          {cons,
              {62,5},
              {tuple,
                  {62,6},
                  [{atom,{62,7},ct_hooks},
                   {cons,
                       {62,16},
                       {atom,{62,17},ts_install_cth},
                       {nil,{62,31}}}]},
              {cons,
                  {63,6},
                  {tuple,
                      {63,6},
                      [{atom,{63,7},timetrap},
                       {tuple,
                           {63,16},
                           [{atom,{63,17},minutes},{integer,{63,25},10}]}]},
                  {nil,{63,29}}}}]}]}.
{attribute,{65,2},
           spec,
           {{all,0},
            [{type,{65,10},
                   'fun',
                   [{type,{65,10},product,[]},
                    {user_type,{65,16},misc_SUITE_test_cases,[]}]}]}}.
{function,{66,1},
          all,0,
          [{clause,{66,1},
                   [],
                   [[{call,{66,1},
                           {remote,{66,1},
                                   {atom,{66,1},fake},
                                   {atom,{66,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,66,7},{atom,{66,1},ignore}]},
           {clause,{66,1},
                   [],[],
                   [{debug_line,67,8},
                    {op,{67,18},
                        '++',
                        {call,{67,5},{atom,{67,5},slow_group},[]},
                        {cons,{67,21},
                              {tuple,{67,22},
                                     [{atom,{67,23},group},{atom,{67,29},p}]},
                              {nil,{67,31}}}}]}]}.
{function,
    {69,1},
    groups,0,
    [{clause,
         {69,1},
         [],
         [[{call,
               {69,1},
               {remote,
                   {69,1},
                   {atom,{69,1},fake},
                   {atom,{69,1},is_beam_bif_info}},
               []}]],
         [{debug_line,69,9},{atom,{69,1},ignore}]},
     {clause,
         {69,1},
         [],[],
         [{debug_line,70,10},
          {cons,
              {70,5},
              {tuple,
                  {70,6},
                  [{atom,{70,7},p},
                   {cons,{70,9},{atom,{70,10},parallel},{nil,{70,18}}},
                   {cons,
                       {71,7},
                       {atom,{71,8},tobias},
                       {cons,
                           {71,15},
                           {atom,{71,15},empty_string},
                           {cons,
                               {71,28},
                               {atom,{71,28},silly_coverage},
                               {cons,
                                   {72,8},
                                   {atom,{72,8},confused_literals},
                                   {cons,
                                       {72,26},
                                       {atom,{72,26},override_bif},
                                       {nil,{72,38}}}}}}}]},
              {cons,
                  {73,6},
                  {tuple,
                      {73,6},
                      [{atom,{73,7},slow},
                       {cons,{73,12},{atom,{73,13},parallel},{nil,{73,21}}},
                       {cons,
                           {73,23},
                           {atom,{73,24},integer_encoding},
                           {cons,{73,41},{atom,{73,41},md5},{nil,{73,44}}}}]},
                  {nil,{73,46}}}}]}]}.
{function,
    {75,1},
    init_per_suite,1,
    [{clause,
         {75,1},
         [{var,{75,1},'_'}],
         [[{call,
               {75,1},
               {remote,
                   {75,1},
                   {atom,{75,1},fake},
                   {atom,{75,1},is_beam_bif_info}},
               []}]],
         [{debug_line,75,11},{atom,{75,1},ignore}]},
     {clause,
         {75,1},
         [{var,{75,16},'Config'}],
         [],
         [{debug_line,76,12},
          {call,
              {76,5},
              {remote,{76,13},{atom,{76,5},test_lib},{atom,{76,14},recompile}},
              [{atom,{76,25},misc_SUITE}]},
          {debug_line,77,13},
          {'if',
              {77,5},
              [{clause,
                   {78,9},
                   [],
                   [[{call,
                         {78,9},
                         {remote,
                             {78,9},
                             {atom,{78,9},erlang},
                             {atom,{78,9},is_atom}},
                         [{var,{78,17},'Config'}]}]],
                   [{debug_line,80,14},
                    {match,
                        {80,13},
                        {var,{80,13},'_'},
                        {call,
                            {80,17},
                            {remote,
                                {80,23},
                                {atom,{80,17},erlang},
                                {atom,{80,24},load_nif}},
                            [{block,0,[{string,{80,33},"no_real_nif"}]},
                             {integer,{80,48},42}]}}]},
               {clause,
                   {81,9},
                   [],
                   [[{atom,{81,9},true}]],
                   [{debug_line,82,15},{atom,{82,13},ok}]}]},
          {debug_line,84,16},
          {var,{84,5},'Config'}]}]}.
{function,{86,1},
          end_per_suite,1,
          [{clause,{86,1},
                   [{var,{86,1},'_'}],
                   [[{call,{86,1},
                           {remote,{86,1},
                                   {atom,{86,1},fake},
                                   {atom,{86,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,86,17},{atom,{86,1},ignore}]},
           {clause,{86,1},
                   [{var,{86,15},'_Config'}],
                   [],
                   [{debug_line,87,18},{atom,{87,5},ok}]}]}.
{function,{89,1},
          init_per_group,2,
          [{clause,{89,1},
                   [{var,{89,1},'_'},{var,{89,1},'_'}],
                   [[{call,{89,1},
                           {remote,{89,1},
                                   {atom,{89,1},fake},
                                   {atom,{89,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,89,19},{atom,{89,1},ignore}]},
           {clause,{89,1},
                   [{var,{89,16},'_GroupName'},{var,{89,28},'Config'}],
                   [],
                   [{debug_line,90,20},{var,{90,5},'Config'}]}]}.
{function,{92,1},
          end_per_group,2,
          [{clause,{92,1},
                   [{var,{92,1},'_'},{var,{92,1},'_'}],
                   [[{call,{92,1},
                           {remote,{92,1},
                                   {atom,{92,1},fake},
                                   {atom,{92,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,92,21},{atom,{92,1},ignore}]},
           {clause,{92,1},
                   [{var,{92,15},'_GroupName'},{var,{92,27},'Config'}],
                   [],
                   [{debug_line,93,22},{var,{93,5},'Config'}]}]}.
{function,
    {95,1},
    slow_group,0,
    [{clause,
         {95,1},
         [],
         [[{call,
               {95,1},
               {remote,
                   {95,1},
                   {atom,{95,1},fake},
                   {atom,{95,1},is_beam_bif_info}},
               []}]],
         [{debug_line,95,23},{atom,{95,1},ignore}]},
     {clause,
         {95,1},
         [],[],
         [{debug_line,96,24},
          {'case',
              {96,5},
              {atom,{96,11},misc_SUITE},
              [{clause,
                   {97,2},
                   [{atom,{97,2},misc_SUITE}],
                   [],
                   [{debug_line,99,25},
                    {cons,
                        {99,13},
                        {tuple,
                            {99,14},
                            [{atom,{99,15},group},{atom,{99,21},slow}]},
                        {nil,{99,26}}}]},
               {clause,
                   {100,9},
                   [{var,{100,9},'_'}],
                   [],
                   [{debug_line,102,26},{nil,{102,13}}]}]}]}]}.
{function,{108,1},
          abs,1,
          [{clause,{108,1},
                   [{var,{108,1},'_'}],
                   [[{call,{108,1},
                           {remote,{108,1},
                                   {atom,{108,1},fake},
                                   {atom,{108,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,108,27},{atom,{108,1},ignore}]},
           {clause,{108,1},
                   [{var,{108,5},'_N'}],
                   [],
                   [{debug_line,109,28},{atom,{109,5},dummy_abs}]}]}.
{function,{111,1},
          binary_part,3,
          [{clause,{111,1},
                   [{var,{111,1},'_'},{var,{111,1},'_'},{var,{111,1},'_'}],
                   [[{call,{111,1},
                           {remote,{111,1},
                                   {atom,{111,1},fake},
                                   {atom,{111,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,111,29},{atom,{111,1},ignore}]},
           {clause,{111,1},
                   [{var,{111,13},'_'},{var,{111,15},'_'},{var,{111,17},'_'}],
                   [],
                   [{debug_line,112,30},{atom,{112,5},dummy_bp}]}]}.
{function,
 {115,1},
 override_bif,1,
 [{clause,
   {115,1},
   [{var,{115,1},'_'}],
   [[{call,
      {115,1},
      {remote,{115,1},{atom,{115,1},fake},{atom,{115,1},is_beam_bif_info}},
      []}]],
   [{debug_line,115,31},{atom,{115,1},ignore}]},
  {clause,
   {115,1},
   [{var,{115,14},'Config'}],
   [[{call,
      {115,27},
      {remote,{115,27},{atom,{115,27},erlang},{atom,{115,27},is_list}},
      [{var,{115,35},'Config'}]}]],
   [{debug_line,116,32},
    {match,
     {116,5},
     {atom,{116,5},dummy_abs},
     {call,{116,17},{atom,{116,17},abs},[{integer,{116,21},1}]}},
    {debug_line,117,33},
    {match,
     {117,5},
     {atom,{117,5},dummy_bp},
     {call,
      {117,16},
      {atom,{117,16},binary_part},
      [{block,0,
        [{bin,
          {117,28},
          [{bin_element,
            {117,30},
            {string,{117,30},"hello"},
            default,default}]}]},
       {integer,{117,40},1},
       {integer,{117,42},1}]}},
    {debug_line,118,34},
    {match,
     {118,5},
     {atom,{118,5},dummy},
     {call,
      {118,13},
      {remote,{118,13},{atom,{118,13},test_lib},{atom,{118,13},binary_part}},
      [{block,0,
        [{bin,
          {118,25},
          [{bin_element,
            {118,27},
            {string,{118,27},"hello"},
            default,default}]}]},
       {block,0,
        [{tuple,{118,37},[{integer,{118,38},1},{integer,{118,40},1}]}]}]}},
    {debug_line,119,35},
    {match,
     {119,5},
     {integer,{119,5},1},
     {call,
      {119,9},
      {remote,{119,15},{atom,{119,9},erlang},{atom,{119,16},abs}},
      [{integer,{119,20},1}]}},
    {debug_line,120,36},
    {match,
     {120,5},
     {bin,
      {120,5},
      [{bin_element,{120,7},{string,{120,7},"e"},default,default}]},
     {call,
      {120,15},
      {remote,{120,21},{atom,{120,15},erlang},{atom,{120,22},binary_part}},
      [{block,0,
        [{bin,
          {120,34},
          [{bin_element,
            {120,36},
            {string,{120,36},"hello"},
            default,default}]}]},
       {integer,{120,46},1},
       {integer,{120,48},1}]}},
    {debug_line,121,37},
    {match,
     {121,5},
     {bin,
      {121,5},
      [{bin_element,{121,7},{string,{121,7},"e"},default,default}]},
     {call,
      {121,15},
      {remote,{121,21},{atom,{121,15},erlang},{atom,{121,22},binary_part}},
      [{block,0,
        [{bin,
          {121,34},
          [{bin_element,
            {121,36},
            {string,{121,36},"hello"},
            default,default}]}]},
       {block,0,
        [{tuple,{121,46},[{integer,{121,47},1},{integer,{121,49},1}]}]}]}},
    {debug_line,122,38},
    {match,
     {122,5},
     {var,{122,5},'F'},
     {'fun',
      {122,9},
      {clauses,
       [{clause,
         {122,12},
         [{var,{122,13},'X'}],
         [[{op,
            {122,34},
            '=:=',
            {call,
             {122,21},
             {remote,
              {122,21},
              {atom,{122,21},erlang},
              {atom,{122,21},byte_size}},
             [{var,{122,31},'X'}]},
            {integer,{122,38},4}}]],
         [{debug_line,123,39},{atom,{123,3},four}]},
        {clause,
         {124,5},
         [{var,{124,6},'X'}],
         [],
         [{debug_line,125,40},
          {call,
           {125,3},
           {remote,{125,3},{atom,{125,3},erlang},{atom,{125,3},byte_size}},
           [{var,{125,13},'X'}]}]}]}}},
    {debug_line,127,41},
    {match,
     {127,5},
     {atom,{127,5},four},
     {call,
      {127,12},
      {var,{127,12},'F'},
      [{block,0,
        [{bin,
          {127,14},
          [{bin_element,{127,16},{integer,{127,16},1},default,default},
           {bin_element,{127,18},{integer,{127,18},2},default,default},
           {bin_element,{127,20},{integer,{127,20},3},default,default},
           {bin_element,{127,22},{integer,{127,22},4},default,default}]}]}]}},
    {debug_line,128,42},
    {match,
     {128,5},
     {integer,{128,5},5},
     {call,
      {128,9},
      {var,{128,9},'F'},
      [{block,0,
        [{bin,
          {128,11},
          [{bin_element,{128,13},{integer,{128,13},1},default,default},
           {bin_element,{128,15},{integer,{128,15},2},default,default},
           {bin_element,{128,17},{integer,{128,17},3},default,default},
           {bin_element,{128,19},{integer,{128,19},4},default,default},
           {bin_element,{128,21},{integer,{128,21},5},default,default}]}]}]}},
    {debug_line,129,43},
    {atom,{129,5},ok}]}]}.
{function,
    {133,1},
    tobias,1,
    [{clause,
         {133,1},
         [{var,{133,1},'_'}],
         [[{call,
               {133,1},
               {remote,
                   {133,1},
                   {atom,{133,1},fake},
                   {atom,{133,1},is_beam_bif_info}},
               []}]],
         [{debug_line,133,44},{atom,{133,1},ignore}]},
     {clause,
         {133,1},
         [{var,{133,8},'Config'}],
         [[{call,
               {133,21},
               {remote,
                   {133,21},
                   {atom,{133,21},erlang},
                   {atom,{133,21},is_list}},
               [{var,{133,29},'Config'}]}]],
         [{debug_line,134,45},
          {match,
              {134,5},
              {integer,{134,5},1},
              {call,
                  {134,9},
                  {atom,{134,9},tobias_1},
                  [{block,0,
                       [{cons,
                            {134,18},
                            {integer,{134,19},1},
                            {cons,
                                {134,21},
                                {integer,{134,21},2},
                                {cons,
                                    {134,23},
                                    {integer,{134,23},3},
                                    {nil,{134,24}}}}}]}]}},
          {debug_line,135,46},
          {atom,{135,5},ok}]}]}.
{function,{137,1},
          tobias_1,1,
          [{clause,{137,1},
                   [{var,{137,1},'_'}],
                   [[{call,{137,1},
                           {remote,{137,1},
                                   {atom,{137,1},fake},
                                   {atom,{137,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,137,47},{atom,{137,1},ignore}]},
           {clause,{137,1},
                   [{cons,{137,10},{var,{137,11},'H'},{var,{137,13},'_T'}}],
                   [],
                   [{debug_line,140,48},
                    {call,{140,5},
                          {atom,{140,5},tobias_2},
                          [{integer,{140,14},0},{integer,{140,17},0}]},
                    {debug_line,141,49},
                    {var,{141,5},'H'}]}]}.
{function,{143,1},
          tobias_2,2,
          [{clause,{143,1},
                   [{var,{143,1},'_'},{var,{143,1},'_'}],
                   [[{call,{143,1},
                           {remote,{143,1},
                                   {atom,{143,1},fake},
                                   {atom,{143,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,143,50},{atom,{143,1},ignore}]},
           {clause,{143,1},
                   [{var,{143,10},'_'},{var,{143,13},'_'}],
                   [],
                   [{debug_line,144,51},{integer,{144,5},2}]}]}.
{attribute,{152,2},
           record,
           {r,[{record_field,{152,13},
                             {atom,{152,13},s},
                             {string,{152,17},[]}}]}}.
{function,
    {154,1},
    empty_string,1,
    [{clause,
         {154,1},
         [{var,{154,1},'_'}],
         [[{call,
               {154,1},
               {remote,
                   {154,1},
                   {atom,{154,1},fake},
                   {atom,{154,1},is_beam_bif_info}},
               []}]],
         [{debug_line,154,52},{atom,{154,1},ignore}]},
     {clause,
         {154,1},
         [{var,{154,14},'Config'}],
         [[{call,
               {154,27},
               {remote,
                   {154,27},
                   {atom,{154,27},erlang},
                   {atom,{154,27},is_list}},
               [{var,{154,35},'Config'}]}]],
         [{debug_line,155,53},
          {match,
              {155,5},
              {tuple,{155,5},[{atom,{155,5},r},{string,{155,10},"x"}]},
              {call,
                  {155,17},
                  {atom,{155,17},empty_string_1},
                  [{block,0,
                       [{tuple,
                            {155,32},
                            [{atom,{155,32},r},{string,{155,32},[]}]}]}]}},
          {debug_line,156,54},
          {atom,{156,5},ok}]}]}.
{function,
 {158,1},
 empty_string_1,1,
 [{clause,
   {158,1},
   [{var,{158,1},'_'}],
   [[{call,
      {158,1},
      {remote,{158,1},{atom,{158,1},fake},{atom,{158,1},is_beam_bif_info}},
      []}]],
   [{debug_line,158,55},{atom,{158,1},ignore}]},
  {clause,
   {158,1},
   [{var,{158,16},'T'}],
   [],
   [{debug_line,159,56},
    {'case',
     {159,5},
     {var,{159,10},'T'},
     [{clause,
       {160,2},
       [{tuple,{160,2},[{atom,{160,2},r},{string,{160,9},[]}]}],
       [],
       [{debug_line,160,57},
        {block,
         {160,16},
         [{match,{160,16},{var,{160,16},rec0},{var,{160,16},'T'}},
          {'case',
           {160,21},
           {var,{160,16},rec0},
           [{clause,
             {160,21},
             [{tuple,{160,21},[{atom,{160,21},r},{var,{160,21},'_'}]}],
             [],
             [{call,
               {160,21},
               {remote,
                {160,21},
                {atom,{160,21},erlang},
                {atom,{160,21},setelement}},
               [{integer,{160,21},2},
                {var,{160,16},rec0},
                {string,{160,25},"x"}]}]},
            {clause,
             [{generated,true},{location,{160,21}}],
             [{var,[{generated,true},{location,{160,21}}],'_'}],
             [],
             [{call,
               [{generated,true},{location,{160,21}}],
               {remote,
                [{generated,true},{location,{160,21}}],
                {atom,[{generated,true},{location,{160,21}}],erlang},
                {atom,[{generated,true},{location,{160,21}}],error}},
               [{tuple,
                 [{generated,true},{location,{160,21}}],
                 [{atom,[{generated,true},{location,{160,21}}],badrecord},
                  {var,{160,16},rec0}]}]}]}]}]}]}]}]}]}.
{function,
    {163,1},
    md5,1,
    [{clause,
         {163,1},
         [{var,{163,1},'_'}],
         [[{call,
               {163,1},
               {remote,
                   {163,1},
                   {atom,{163,1},fake},
                   {atom,{163,1},is_beam_bif_info}},
               []}]],
         [{debug_line,163,58},{atom,{163,1},ignore}]},
     {clause,
         {163,1},
         [{var,{163,5},'Config'}],
         [[{call,
               {163,18},
               {remote,
                   {163,18},
                   {atom,{163,18},erlang},
                   {atom,{163,18},is_list}},
               [{var,{163,26},'Config'}]}]],
         [{debug_line,164,59},
          {match,
              {164,5},
              {var,{164,5},'Dir'},
              {call,
                  {164,11},
                  {remote,
                      {164,19},
                      {atom,{164,11},filename},
                      {atom,{164,20},dirname}},
                  [{block,0,
                       [{call,
                            {164,28},
                            {remote,
                                {164,32},
                                {atom,{164,28},code},
                                {atom,{164,33},which}},
                            [{atom,{164,40},misc_SUITE}]}]}]}},
          {debug_line,165,60},
          {match,
              {165,5},
              {var,{165,5},'Beams'},
              {call,
                  {165,13},
                  {remote,
                      {165,20},
                      {atom,{165,13},filelib},
                      {atom,{165,21},wildcard}},
                  [{block,0,
                       [{call,
                            {165,30},
                            {remote,
                                {165,38},
                                {atom,{165,30},filename},
                                {atom,{165,39},join}},
                            [{var,{165,44},'Dir'},
                             {block,0,[{string,{165,49},"*.beam"}]}]}]}]}},
          {debug_line,166,61},
          {call,
              {166,5},
              {remote,{166,7},{atom,{166,5},io},{atom,{166,8},format}},
              [{block,0,[{string,{166,15},"Found ~w beam files"}]},
               {block,0,
                   [{cons,
                        {166,38},
                        {call,
                            {166,39},
                            {remote,
                                {166,39},
                                {atom,{166,39},erlang},
                                {atom,{166,39},length}},
                            [{var,{166,46},'Beams'}]},
                        {nil,{166,52}}}]}]},
          {debug_line,167,62},
          {call,
              {167,5},
              {remote,{167,10},{atom,{167,5},lists},{atom,{167,11},foreach}},
              [{block,0,[{'fun',{167,19},{function,md5_1,1}}]},
               {var,{167,32},'Beams'}]}]}]}.
{function,
    {169,1},
    md5_1,1,
    [{clause,
         {169,1},
         [{var,{169,1},'_'}],
         [[{call,
               {169,1},
               {remote,
                   {169,1},
                   {atom,{169,1},fake},
                   {atom,{169,1},is_beam_bif_info}},
               []}]],
         [{debug_line,169,63},{atom,{169,1},ignore}]},
     {clause,
         {169,1},
         [{var,{169,7},'Beam'}],
         [],
         [{debug_line,170,64},
          {match,
              {170,5},
              {tuple,
                  {170,5},
                  [{atom,{170,6},ok},
                   {tuple,
                       {170,9},
                       [{var,{170,10},'Mod'},
                        {cons,
                            {170,14},
                            {var,{170,15},'Vsn'},
                            {nil,{170,18}}}]}]},
              {call,
                  {170,24},
                  {remote,
                      {170,32},
                      {atom,{170,24},beam_lib},
                      {atom,{170,33},version}},
                  [{var,{170,41},'Beam'}]}},
          {debug_line,171,65},
          {match,
              {171,5},
              {tuple,{171,5},[{atom,{171,6},ok},{var,{171,9},'Code'}]},
              {call,
                  {171,17},
                  {remote,
                      {171,21},
                      {atom,{171,17},file},
                      {atom,{171,22},read_file}},
                  [{var,{171,32},'Beam'}]}},
          {debug_line,172,66},
          {match,
              {172,5},
              {tuple,
                  {172,5},
                  [{var,{172,6},'Mod'},
                   {bin,
                       {172,10},
                       [{bin_element,
                            {172,12},
                            {var,{172,12},'Vsn'},
                            {integer,{172,16},128},
                            default}]}]},
              {tuple,
                  {172,25},
                  [{var,{172,26},'Mod'},
                   {call,
                       {172,30},
                       {remote,
                           {172,34},
                           {atom,{172,30},code},
                           {atom,{172,35},module_md5}},
                       [{var,{172,46},'Code'}]}]}}]}]}.
{function,
 {176,1},
 silly_coverage,1,
 [{clause,
   {176,1},
   [{var,{176,1},'_'}],
   [[{call,
      {176,1},
      {remote,{176,1},{atom,{176,1},fake},{atom,{176,1},is_beam_bif_info}},
      []}]],
   [{debug_line,176,67},{atom,{176,1},ignore}]},
  {clause,
   {176,1},
   [{var,{176,16},'Config'}],
   [[{call,
      {176,29},
      {remote,{176,29},{atom,{176,29},erlang},{atom,{176,29},is_list}},
      [{var,{176,37},'Config'}]}]],
   [{debug_line,178,68},
    {match,
     {178,5},
     {var,{178,5},'BadAbstr'},
     {cons,
      {178,16},
      {tuple,
       {178,17},
       [{atom,{178,18},attribute},
        {integer,{178,28},0},
        {atom,{178,30},module},
        {atom,{178,37},bad_module}]},
      {cons,
       {179,17},
       {tuple,
        {179,17},
        [{atom,{179,18},function},
         {integer,{179,27},0},
         {atom,{179,29},foo},
         {integer,{179,33},2},
         {cons,{179,35},{atom,{179,36},bad_clauses},{nil,{179,47}}}]},
       {nil,{179,49}}}}},
    {debug_line,180,69},
    {call,
     {180,5},
     {atom,{180,5},expect_error},
     [{block,0,
       [{'fun',
         {180,18},
         {clauses,
          [{clause,
            {180,21},
            [],[],
            [{call,
              {180,27},
              {remote,{180,34},{atom,{180,27},v3_core},{atom,{180,35},module}},
              [{var,{180,42},'BadAbstr'},{nil,{180,52}}]}]}]}}]}]},
    {debug_line,183,70},
    {match,
     {183,5},
     {var,{183,5},'BadCoreErlang'},
     {tuple,
      {183,21},
      [{atom,{183,22},c_module},
       {nil,{183,31}},
       {tuple,
        {184,8},
        [{atom,{184,9},c_literal},{nil,{184,19}},{atom,{184,22},name}]},
       {nil,{184,28}},
       {nil,{184,31}},
       {cons,
        {185,8},
        {tuple,
         {185,9},
         [{tuple,
           {185,10},
           [{atom,{185,11},c_var},
            {nil,{185,17}},
            {tuple,{185,20},[{atom,{185,21},foo},{integer,{185,25},2}]}]},
          {atom,{185,29},seriously_bad_body}]},
        {nil,{185,48}}}]}},
    {debug_line,186,71},
    {call,
     {186,5},
     {atom,{186,5},expect_error},
     [{block,0,
       [{'fun',
         {186,18},
         {clauses,
          [{clause,
            {186,21},
            [],[],
            [{call,
              {186,27},
              {remote,
               {186,40},
               {atom,{186,27},sys_core_fold},
               {atom,{186,41},module}},
              [{var,{186,48},'BadCoreErlang'},{nil,{186,63}}]}]}]}}]}]},
    {debug_line,187,72},
    {call,
     {187,5},
     {atom,{187,5},expect_error},
     [{block,0,
       [{'fun',
         {187,18},
         {clauses,
          [{clause,
            {187,21},
            [],[],
            [{call,
              {187,27},
              {remote,
               {187,41},
               {atom,{187,27},sys_core_alias},
               {atom,{187,42},module}},
              [{var,{187,49},'BadCoreErlang'},{nil,{187,64}}]}]}]}}]}]},
    {debug_line,188,73},
    {call,
     {188,5},
     {atom,{188,5},expect_error},
     [{block,0,
       [{'fun',
         {188,18},
         {clauses,
          [{clause,
            {188,21},
            [],[],
            [{call,
              {188,27},
              {remote,
               {188,39},
               {atom,{188,27},sys_core_bsm},
               {atom,{188,40},module}},
              [{var,{188,47},'BadCoreErlang'},{nil,{188,62}}]}]}]}}]}]},
    {debug_line,189,74},
    {call,
     {189,5},
     {atom,{189,5},expect_error},
     [{block,0,
       [{'fun',
         {189,18},
         {clauses,
          [{clause,
            {189,21},
            [],[],
            [{call,
              {189,27},
              {remote,
               {189,43},
               {atom,{189,27},beam_core_to_ssa},
               {atom,{189,44},module}},
              [{var,{189,51},'BadCoreErlang'},{nil,{189,66}}]}]}]}}]}]},
    {debug_line,197,75},
    {match,
     {197,5},
     {var,{197,5},'BadSSA'},
     {tuple,
      {197,14},
      [{atom,{197,15},b_module},
       {map,{197,24},[]},
       {atom,{197,28},a},
       {atom,{197,30},b},
       {atom,{197,32},c},
       {cons,
        {198,15},
        {tuple,
         {198,16},
         [{atom,{198,17},b_function},
          {map,
           {198,28},
           [{map_field_assoc,
             {198,39},
             {atom,{198,30},func_info},
             {tuple,
              {198,41},
              [{atom,{198,42},mod},
               {atom,{198,46},foo},
               {integer,{198,50},0}]}}]},
          {atom,{198,54},args},
          {atom,{198,59},bad_blocks},
          {integer,{198,70},0}]},
        {nil,{198,72}}}]}},
    {debug_line,199,76},
    {call,
     {199,5},
     {atom,{199,5},expect_error},
     [{block,0,
       [{'fun',
         {199,18},
         {clauses,
          [{clause,
            {199,21},
            [],[],
            [{call,
              {199,27},
              {remote,
               {199,40},
               {atom,{199,27},beam_ssa_lint},
               {atom,{199,41},module}},
              [{var,{199,48},'BadSSA'},{nil,{199,56}}]}]}]}}]}]},
    {debug_line,200,77},
    {call,
     {200,5},
     {atom,{200,5},expect_error},
     [{block,0,
       [{'fun',
         {200,18},
         {clauses,
          [{clause,
            {200,21},
            [],[],
            [{call,
              {200,27},
              {remote,
               {200,40},
               {atom,{200,27},beam_ssa_bool},
               {atom,{200,41},module}},
              [{var,{200,48},'BadSSA'},{nil,{200,56}}]}]}]}}]}]},
    {debug_line,201,78},
    {call,
     {201,5},
     {atom,{201,5},expect_error},
     [{block,0,
       [{'fun',
         {201,18},
         {clauses,
          [{clause,
            {201,21},
            [],[],
            [{call,
              {201,27},
              {remote,
               {201,40},
               {atom,{201,27},beam_ssa_recv},
               {atom,{201,41},module}},
              [{var,{201,48},'BadSSA'},{nil,{201,56}}]}]}]}}]}]},
    {debug_line,202,79},
    {call,
     {202,5},
     {atom,{202,5},expect_error},
     [{block,0,
       [{'fun',
         {202,18},
         {clauses,
          [{clause,
            {202,21},
            [],[],
            [{call,
              {202,27},
              {remote,
               {202,41},
               {atom,{202,27},beam_ssa_share},
               {atom,{202,42},module}},
              [{var,{202,49},'BadSSA'},{nil,{202,57}}]}]}]}}]}]},
    {debug_line,203,80},
    {call,
     {203,5},
     {atom,{203,5},expect_error},
     [{block,0,
       [{'fun',
         {203,18},
         {clauses,
          [{clause,
            {203,21},
            [],[],
            [{call,
              {203,27},
              {remote,
               {203,47},
               {atom,{203,27},beam_ssa_pre_codegen},
               {atom,{203,48},module}},
              [{var,{203,55},'BadSSA'},{nil,{203,63}}]}]}]}}]}]},
    {debug_line,204,81},
    {call,
     {204,5},
     {atom,{204,5},expect_error},
     [{block,0,
       [{'fun',
         {204,18},
         {clauses,
          [{clause,
            {204,21},
            [],[],
            [{call,
              {204,27},
              {remote,
               {204,43},
               {atom,{204,27},beam_ssa_codegen},
               {atom,{204,44},module}},
              [{var,{204,51},'BadSSA'},{nil,{204,59}}]}]}]}}]}]},
    {debug_line,207,82},
    {match,
     {207,5},
     {var,{207,5},'BadSSABlocks'},
     {map,
      {207,20},
      [{map_field_assoc,
        {207,24},
        {integer,{207,22},0},
        {tuple,
         {207,27},
         [{atom,{207,28},b_blk},
          {map,{207,34},[]},
          {cons,{207,38},{atom,{207,39},bad_code},{nil,{207,47}}},
          {tuple,
           {207,49},
           [{atom,{207,50},b_ret},
            {map,{207,56},[]},
            {atom,{207,60},arg}]}]}}]}},
    {debug_line,208,83},
    {match,
     {208,5},
     {var,{208,5},'BadSSAOpt'},
     {tuple,
      {208,17},
      [{atom,{208,18},b_module},
       {map,{208,27},[]},
       {atom,{208,31},a},
       {nil,{208,33}},
       {nil,{208,36}},
       {cons,
        {209,18},
        {tuple,
         {209,19},
         [{atom,{209,20},b_function},
          {map,
           {209,31},
           [{map_field_assoc,
             {209,42},
             {atom,{209,33},func_info},
             {tuple,
              {209,44},
              [{atom,{209,45},mod},
               {atom,{209,49},foo},
               {integer,{209,53},0}]}}]},
          {nil,{209,57}},
          {var,{210,20},'BadSSABlocks'},
          {integer,{210,33},0}]},
        {nil,{210,35}}}]}},
    {debug_line,211,84},
    {call,
     {211,5},
     {atom,{211,5},expect_error},
     [{block,0,
       [{'fun',
         {211,18},
         {clauses,
          [{clause,
            {211,21},
            [],[],
            [{call,
              {211,27},
              {remote,
               {211,39},
               {atom,{211,27},beam_ssa_opt},
               {atom,{211,40},module}},
              [{var,{211,47},'BadSSAOpt'},{nil,{211,58}}]}]}]}}]}]},
    {debug_line,214,85},
    {call,
     {214,5},
     {atom,{214,5},cover_beam_ssa_bc_size},
     [{integer,{214,28},1}]},
    {debug_line,217,86},
    {match,
     {217,5},
     {tuple,
      {217,5},
      [{atom,{217,6},error},
       {cons,
        {217,12},
        {tuple,{217,13},[{var,{217,14},'_'},{var,{217,16},'Errors'}]},
        {nil,{217,23}}}]},
     {call,
      {217,28},
      {remote,{217,41},{atom,{217,28},beam_ssa_lint},{atom,{217,42},module}},
      [{block,0,[{call,{217,49},{atom,{217,49},bad_ssa_lint_input},[]}]},
       {nil,{217,71}}]}},
    {debug_line,218,87},
    {match,
     {218,5},
     {var,{218,5},'_'},
     {lc,
      {218,9},
      {block,0,
       [{call,
         {218,10},
         {remote,{218,12},{atom,{218,10},io},{atom,{218,13},put_chars}},
         [{block,0,
           [{call,
             {218,23},
             {remote,
              {218,26},
              {var,{218,23},'Mod'},
              {atom,{218,27},format_error}},
             [{var,{218,40},'Reason'}]}]}]}]},
      [{block,0,[{debug_line,219,88},{atom,{219,29},true}]},
       {generate,
        {219,26},
        {tuple,{219,13},[{var,{219,14},'Mod'},{var,{219,18},'Reason'}]},
        {var,{219,29},'Errors'}}]}},
    {debug_line,222,89},
    {match,
     {222,5},
     {var,{222,5},'PPAnno'},
     {map,
      {222,14},
      [{map_field_assoc,
        {222,25},
        {atom,{222,16},func_info},
        {tuple,
         {222,27},
         [{atom,{222,28},mod},{atom,{222,32},foo},{integer,{222,36},0}]}},
       {map_field_assoc,
        {222,49},
        {atom,{222,39},other_anno},
        {atom,{222,51},value}},
       {map_field_assoc,
        {222,65},
        {atom,{222,57},map_anno},
        {map,
         {222,67},
         [{map_field_assoc,{222,70},{atom,{222,69},k},{atom,{222,72},v}}]}}]}},
    {debug_line,223,90},
    {match,
     {223,5},
     {var,{223,5},'PPBlocks'},
     {map,
      {223,16},
      [{map_field_assoc,
        {223,19},
        {integer,{223,18},0},
        {tuple,
         {223,21},
         [{atom,{223,22},b_blk},
          {map,{223,28},[]},
          {nil,{223,32}},
          {tuple,
           {223,35},
           [{atom,{223,36},b_ret},
            {map,{223,42},[]},
            {tuple,
             {223,46},
             [{atom,{223,47},b_literal},{integer,{223,57},42}]}]}]}}]}},
    {debug_line,224,91},
    {match,
     {224,5},
     {var,{224,5},'PP'},
     {tuple,
      {224,10},
      [{atom,{224,11},b_function},
       {var,{224,22},'PPAnno'},
       {nil,{224,29}},
       {var,{224,32},'PPBlocks'},
       {integer,{224,41},0}]}},
    {debug_line,225,92},
    {call,
     {225,5},
     {remote,{225,7},{atom,{225,5},io},{atom,{225,8},put_chars}},
     [{block,0,
       [{call,
         {225,18},
         {remote,
          {225,29},
          {atom,{225,18},beam_ssa_pp},
          {atom,{225,30},format_function}},
         [{var,{225,46},'PP'}]}]}]},
    {debug_line,228,93},
    {match,
     {228,5},
     {var,{228,5},'BeamAInput'},
     {tuple,
      {228,18},
      [{atom,{228,20},misc_SUITE},
       {cons,
        {228,27},
        {tuple,{228,28},[{atom,{228,29},foo},{integer,{228,33},0}]},
        {nil,{228,35}}},
       {nil,{228,37}},
       {cons,
        {229,5},
        {tuple,
         {229,6},
         [{atom,{229,7},function},
          {atom,{229,16},foo},
          {integer,{229,20},0},
          {integer,{229,22},2},
          {cons,
           {230,7},
           {tuple,{230,8},[{atom,{230,9},label},{integer,{230,15},1}]},
           {cons,
            {231,8},
            {tuple,
             {231,8},
             [{atom,{231,9},func_info},
              {tuple,
               {231,19},
               [{atom,{231,20},atom},{atom,{231,26},misc_SUITE}]},
              {tuple,{231,34},[{atom,{231,35},atom},{atom,{231,40},foo}]},
              {integer,{231,45},0}]},
            {cons,
             {232,8},
             {tuple,{232,8},[{atom,{232,9},label},{integer,{232,15},2}]},
             {atom,{232,18},non_proper_list}}}}]},
        {nil,{232,35}}},
       {integer,{232,37},99}]}},
    {debug_line,233,94},
    {call,
     {233,5},
     {atom,{233,5},expect_error},
     [{block,0,
       [{'fun',
         {233,18},
         {clauses,
          [{clause,
            {233,21},
            [],[],
            [{call,
              {233,27},
              {remote,{233,33},{atom,{233,27},beam_a},{atom,{233,34},module}},
              [{var,{233,41},'BeamAInput'},{nil,{233,53}}]}]}]}}]}]},
    {debug_line,236,95},
    {match,
     {236,5},
     {var,{236,5},'BlockInput'},
     {tuple,
      {236,18},
      [{atom,{236,20},misc_SUITE},
       {cons,
        {236,27},
        {tuple,{236,28},[{atom,{236,29},foo},{integer,{236,33},0}]},
        {nil,{236,35}}},
       {nil,{236,37}},
       {cons,
        {237,5},
        {tuple,
         {237,6},
         [{atom,{237,7},function},
          {atom,{237,16},foo},
          {integer,{237,20},0},
          {integer,{237,22},2},
          {cons,
           {238,7},
           {tuple,{238,8},[{atom,{238,9},label},{integer,{238,15},1}]},
           {cons,
            {239,8},
            {tuple,
             {239,8},
             [{atom,{239,9},func_info},
              {tuple,
               {239,19},
               [{atom,{239,20},atom},{atom,{239,26},misc_SUITE}]},
              {tuple,{239,34},[{atom,{239,35},atom},{atom,{239,40},foo}]},
              {integer,{239,45},0}]},
            {cons,
             {240,8},
             {tuple,{240,8},[{atom,{240,9},label},{integer,{240,15},2}]},
             {atom,{240,18},non_proper_list}}}}]},
        {nil,{240,35}}},
       {integer,{240,37},99}]}},
    {debug_line,241,96},
    {call,
     {241,5},
     {atom,{241,5},expect_error},
     [{block,0,
       [{'fun',
         {241,18},
         {clauses,
          [{clause,
            {241,21},
            [],[],
            [{call,
              {241,27},
              {remote,
               {241,37},
               {atom,{241,27},beam_block},
               {atom,{241,38},module}},
              [{var,{241,45},'BlockInput'},{nil,{241,57}}]}]}]}}]}]},
    {debug_line,244,97},
    {match,{244,5},{var,{244,5},'JumpInput'},{var,{244,17},'BlockInput'}},
    {debug_line,245,98},
    {call,
     {245,5},
     {atom,{245,5},expect_error},
     [{block,0,
       [{'fun',
         {245,18},
         {clauses,
          [{clause,
            {245,21},
            [],[],
            [{call,
              {245,27},
              {remote,
               {245,36},
               {atom,{245,27},beam_jump},
               {atom,{245,37},module}},
              [{var,{245,44},'JumpInput'},{nil,{245,55}}]}]}]}}]}]},
    {debug_line,248,99},
    {match,
     {248,5},
     {var,{248,5},'CleanInput'},
     {tuple,
      {248,18},
      [{atom,{248,20},misc_SUITE},
       {cons,
        {248,27},
        {tuple,{248,28},[{atom,{248,29},foo},{integer,{248,33},0}]},
        {nil,{248,35}}},
       {nil,{248,37}},
       {cons,
        {249,5},
        {tuple,
         {249,6},
         [{atom,{249,7},function},
          {atom,{249,16},foo},
          {integer,{249,20},0},
          {integer,{249,22},2},
          {cons,
           {250,7},
           {tuple,{250,8},[{atom,{250,9},label},{integer,{250,15},1}]},
           {cons,
            {251,8},
            {tuple,
             {251,8},
             [{atom,{251,9},func_info},
              {tuple,
               {251,19},
               [{atom,{251,20},atom},{atom,{251,26},misc_SUITE}]},
              {tuple,{251,34},[{atom,{251,35},atom},{atom,{251,40},foo}]},
              {integer,{251,45},0}]},
            {cons,
             {252,8},
             {tuple,{252,8},[{atom,{252,9},label},{integer,{252,15},2}]},
             {cons,
              {253,8},
              {tuple,
               {253,8},
               [{atom,{253,9},jump},
                {tuple,{253,14},[{atom,{253,15},f},{integer,{253,17},42}]}]},
              {nil,{253,21}}}}}}]},
        {nil,{253,23}}},
       {integer,{253,25},99}]}},
    {debug_line,254,100},
    {call,
     {254,5},
     {atom,{254,5},expect_error},
     [{block,0,
       [{'fun',
         {254,18},
         {clauses,
          [{clause,
            {254,21},
            [],[],
            [{call,
              {254,27},
              {remote,
               {254,37},
               {atom,{254,27},beam_clean},
               {atom,{254,38},module}},
              [{var,{254,45},'CleanInput'},{nil,{254,57}}]}]}]}}]}]},
    {debug_line,257,101},
    {match,{257,5},{var,{257,5},'TrimInput'},{var,{257,17},'BlockInput'}},
    {debug_line,258,102},
    {call,
     {258,5},
     {atom,{258,5},expect_error},
     [{block,0,
       [{'fun',
         {258,18},
         {clauses,
          [{clause,
            {258,21},
            [],[],
            [{call,
              {258,27},
              {remote,
               {258,36},
               {atom,{258,27},beam_trim},
               {atom,{258,37},module}},
              [{var,{258,44},'TrimInput'},{nil,{258,55}}]}]}]}}]}]},
    {debug_line,260,103},
    {match,
     {260,5},
     {var,{260,5},'BeamZInput'},
     {tuple,
      {260,18},
      [{atom,{260,20},misc_SUITE},
       {cons,
        {260,27},
        {tuple,{260,28},[{atom,{260,29},foo},{integer,{260,33},0}]},
        {nil,{260,35}}},
       {nil,{260,37}},
       {cons,
        {261,5},
        {tuple,
         {261,6},
         [{atom,{261,7},function},
          {atom,{261,16},foo},
          {integer,{261,20},0},
          {integer,{261,22},2},
          {cons,
           {262,7},
           {tuple,{262,8},[{atom,{262,9},label},{integer,{262,15},1}]},
           {cons,
            {263,8},
            {tuple,
             {263,8},
             [{atom,{263,9},func_info},
              {tuple,
               {263,19},
               [{atom,{263,20},atom},{atom,{263,26},misc_SUITE}]},
              {tuple,{263,34},[{atom,{263,35},atom},{atom,{263,40},foo}]},
              {integer,{263,45},0}]},
            {cons,
             {264,8},
             {tuple,{264,8},[{atom,{264,9},label},{integer,{264,15},2}]},
             {atom,{264,18},non_proper_list}}}}]},
        {nil,{264,35}}},
       {integer,{264,37},99}]}},
    {debug_line,265,104},
    {call,
     {265,5},
     {atom,{265,5},expect_error},
     [{block,0,
       [{'fun',
         {265,18},
         {clauses,
          [{clause,
            {265,21},
            [],[],
            [{call,
              {265,27},
              {remote,{265,33},{atom,{265,27},beam_z},{atom,{265,34},module}},
              [{var,{265,41},'BeamZInput'},{nil,{265,53}}]}]}]}}]}]},
    {debug_line,268,105},
    {match,
     {268,5},
     {var,{268,5},'BeamValInput'},
     {tuple,
      {268,20},
      [{atom,{268,22},misc_SUITE},
       {cons,
        {268,29},
        {tuple,{268,30},[{atom,{268,31},foo},{integer,{268,35},0}]},
        {nil,{268,37}}},
       {nil,{268,39}},
       {cons,
        {269,7},
        {tuple,
         {269,8},
         [{atom,{269,9},function},
          {atom,{269,18},foo},
          {integer,{269,22},0},
          {integer,{269,24},2},
          {cons,
           {270,9},
           {tuple,{270,10},[{atom,{270,11},label},{integer,{270,17},1}]},
           {cons,
            {271,10},
            {tuple,
             {271,10},
             [{atom,{271,11},func_info},
              {tuple,
               {271,21},
               [{atom,{271,22},atom},{atom,{271,28},misc_SUITE}]},
              {tuple,{271,36},[{atom,{271,37},atom},{atom,{271,42},foo}]},
              {integer,{271,47},0}]},
            {cons,
             {272,10},
             {tuple,{272,10},[{atom,{272,11},label},{integer,{272,17},2}]},
             {atom,{272,20},non_proper_list}}}}]},
        {nil,{272,37}}},
       {integer,{272,39},99}]}},
    {debug_line,273,106},
    {call,
     {273,5},
     {atom,{273,5},expect_error},
     [{block,0,
       [{'fun',
         {273,18},
         {clauses,
          [{clause,
            {273,21},
            [],[],
            [{call,
              {273,27},
              {remote,
               {273,41},
               {atom,{273,27},beam_validator},
               {atom,{273,42},validate}},
              [{var,{273,51},'BeamValInput'},{atom,{273,65},strong}]}]}]}}]}]},
    {debug_line,275,107},
    {atom,{275,5},ok}]}]}.
{function,
 {277,1},
 cover_beam_ssa_bc_size,1,
 [{clause,
   {277,1},
   [{var,{277,1},'_'}],
   [[{call,
      {277,1},
      {remote,{277,1},{atom,{277,1},fake},{atom,{277,1},is_beam_bif_info}},
      []}]],
   [{debug_line,277,108},{atom,{277,1},ignore}]},
  {clause,
   {277,1},
   [{integer,{277,24},20}],
   [],
   [{debug_line,278,109},{atom,{278,5},ok}]},
  {clause,
   {279,1},
   [{var,{279,24},'N'}],
   [],
   [{debug_line,280,110},
    {match,
     {280,5},
     {var,{280,5},'BcSizeKey'},
     {tuple,
      {280,17},
      [{atom,{280,18},b_local},
       {tuple,{280,26},[{atom,{280,27},b_literal},{atom,{280,37},name}]},
       {integer,{280,43},1}]}},
    {debug_line,282,111},
    {match,
     {282,5},
     {var,{282,5},'OptSt'},
     {call,
      {282,13},
      {remote,{282,19},{atom,{282,13},erlang},{atom,{282,20},make_tuple}},
      [{var,{282,31},'N'},
       {block,0,[{map,{282,34},[]}]},
       {block,0,
        [{cons,
          {282,39},
          {tuple,{282,40},[{integer,{282,41},1},{atom,{282,43},opt_st}]},
          {nil,{282,50}}}]}]}},
    {debug_line,283,112},
    {call,
     {283,5},
     {atom,{283,5},expect_error},
     [{block,0,
       [{'fun',
         {283,18},
         {clauses,
          [{clause,
            {283,21},
            [],[],
            [{call,
              {283,27},
              {remote,
               {283,43},
               {atom,{283,27},beam_ssa_bc_size},
               {atom,{283,44},opt}},
              [{block,0,
                [{map,
                  {283,48},
                  [{map_field_assoc,
                    {283,60},
                    {var,{283,50},'BcSizeKey'},
                    {var,{283,63},'OptSt'}}]}]}]}]}]}}]}]},
    {debug_line,284,113},
    {call,
     {284,5},
     {atom,{284,5},cover_beam_ssa_bc_size},
     [{block,0,
       [{op,{284,30},'+',{var,{284,28},'N'},{integer,{284,32},1}}]}]}]}]}.
{function,
 {286,1},
 bad_ssa_lint_input,0,
 [{clause,
   {286,1},
   [],
   [[{call,
      {286,1},
      {remote,{286,1},{atom,{286,1},fake},{atom,{286,1},is_beam_bif_info}},
      []}]],
   [{debug_line,286,114},{atom,{286,1},ignore}]},
  {clause,
   {286,1},
   [],[],
   [{debug_line,287,115},
    {match,
     {287,5},
     {var,{287,5},'Ret'},
     {tuple,{287,11},[{atom,{287,12},b_var},{integer,{287,18},100}]}},
    {debug_line,288,116},
    {tuple,
     {288,5},
     [{atom,{288,6},b_module},
      {map,{288,15},[]},
      {atom,{288,19},t},
      {cons,
       {289,6},
       {tuple,{289,7},[{atom,{289,8},a},{integer,{289,10},1}]},
       {cons,
        {289,13},
        {tuple,{289,13},[{atom,{289,14},b},{integer,{289,16},1}]},
        {cons,
         {289,19},
         {tuple,{289,19},[{atom,{289,20},c},{integer,{289,22},1}]},
         {cons,
          {289,25},
          {tuple,{289,25},[{atom,{289,26},module_info},{integer,{289,38},0}]},
          {cons,
           {289,41},
           {tuple,{289,41},[{atom,{289,42},module_info},{integer,{289,54},1}]},
           {nil,{289,56}}}}}}},
      {nil,{290,6}},
      {cons,
       {291,6},
       {tuple,
        {291,7},
        [{atom,{291,8},b_function},
         {map,
          {292,8},
          [{map_field_assoc,
            {292,20},
            {atom,{292,10},func_info},
            {tuple,
             {292,23},
             [{atom,{292,24},t},{atom,{292,26},a},{integer,{292,28},1}]}},
           {map_field_assoc,
            {292,40},
            {atom,{292,31},location},
            {tuple,
             {292,43},
             [{string,{292,44},"t.erl"},{integer,{292,52},4}]}}]},
         {cons,
          {293,8},
          {tuple,{293,9},[{atom,{293,10},b_var},{integer,{293,16},0}]},
          {nil,{293,18}}},
         {map,
          {294,8},
          [{map_field_assoc,
            {294,12},
            {integer,{294,10},0},
            {tuple,
             {294,15},
             [{atom,{294,16},b_blk},
              {map,{294,22},[]},
              {nil,{294,26}},
              {tuple,
               {294,29},
               [{atom,{294,30},b_ret},
                {map,{294,36},[]},
                {tuple,
                 {294,40},
                 [{atom,{294,41},b_var},
                  {atom,{294,47},'@undefined_var'}]}]}]}}]},
         {integer,{295,8},3}]},
       {cons,
        {296,7},
        {tuple,
         {296,7},
         [{atom,{296,8},b_function},
          {map,
           {297,8},
           [{map_field_assoc,
             {297,20},
             {atom,{297,10},func_info},
             {tuple,
              {297,23},
              [{atom,{297,24},t},{atom,{297,26},b},{integer,{297,28},1}]}},
            {map_field_assoc,
             {297,40},
             {atom,{297,31},location},
             {tuple,
              {297,43},
              [{string,{297,44},"t.erl"},{integer,{297,52},5}]}}]},
          {cons,
           {298,8},
           {tuple,{298,9},[{atom,{298,10},b_var},{integer,{298,16},0}]},
           {nil,{298,18}}},
          {map,
           {299,8},
           [{map_field_assoc,
             {299,12},
             {integer,{299,10},0},
             {tuple,
              {300,14},
              [{atom,{300,15},b_blk},
               {map,{300,21},[]},
               {cons,
                {301,15},
                {tuple,
                 {301,16},
                 [{atom,{301,17},b_set},
                  {map,{301,23},[]},
                  {tuple,
                   {301,27},
                   [{atom,{301,28},b_var},{atom,{301,34},'@first_var'}]},
                  {atom,{301,48},first_op},
                  {nil,{301,57}}]},
                {cons,
                 {302,16},
                 {tuple,
                  {302,16},
                  [{atom,{302,17},b_set},
                   {map,{302,23},[]},
                   {tuple,
                    {302,27},
                    [{atom,{302,28},b_var},{atom,{302,34},'@second_var'}]},
                   {atom,{302,49},second_op},
                   {nil,{302,59}}]},
                 {cons,
                  {303,16},
                  {tuple,
                   {303,16},
                   [{atom,{303,17},b_set},
                    {map,{303,23},[]},
                    {tuple,
                     {303,27},
                     [{atom,{303,28},b_var},{atom,{303,34},'@ret'}]},
                    {atom,{303,42},succeeded},
                    {cons,
                     {303,52},
                     {tuple,
                      {303,53},
                      [{atom,{303,54},b_var},{atom,{303,60},'@first_var'}]},
                     {nil,{303,73}}}]},
                  {nil,{303,75}}}}},
               {tuple,
                {304,15},
                [{atom,{304,16},b_ret},
                 {map,{304,22},[]},
                 {tuple,
                  {304,26},
                  [{atom,{304,27},b_var},{atom,{304,33},'@ret'}]}]}]}}]},
          {integer,{305,8},3}]},
        {cons,
         {306,7},
         {tuple,
          {306,7},
          [{atom,{306,8},b_function},
           {map,
            {307,8},
            [{map_field_assoc,
              {307,20},
              {atom,{307,10},func_info},
              {tuple,
               {307,23},
               [{atom,{307,24},t},{atom,{307,26},c},{integer,{307,28},1}]}},
             {map_field_assoc,
              {307,40},
              {atom,{307,31},location},
              {tuple,
               {307,43},
               [{string,{307,44},"t.erl"},{integer,{307,52},6}]}}]},
           {cons,
            {308,8},
            {tuple,{308,9},[{atom,{308,10},b_var},{integer,{308,16},0}]},
            {nil,{308,18}}},
           {map,
            {309,8},
            [{map_field_assoc,
              {309,12},
              {integer,{309,10},0},
              {tuple,
               {310,14},
               [{atom,{310,15},b_blk},
                {map,{310,21},[]},
                {cons,
                 {311,15},
                 {tuple,
                  {311,16},
                  [{atom,{311,17},b_set},
                   {map,{311,23},[]},
                   {tuple,
                    {311,27},
                    [{atom,{311,28},b_var},{atom,{311,34},'@first_var'}]},
                   {atom,{311,48},first_op},
                   {nil,{311,57}}]},
                 {cons,
                  {312,16},
                  {tuple,
                   {312,16},
                   [{atom,{312,17},b_set},
                    {map,{312,23},[]},
                    {tuple,
                     {312,27},
                     [{atom,{312,28},b_var},{atom,{312,34},'@ret'}]},
                    {atom,{312,42},succeeded},
                    {cons,
                     {312,52},
                     {tuple,
                      {312,53},
                      [{atom,{312,54},b_var},{atom,{312,60},'@first_var'}]},
                     {nil,{312,73}}}]},
                  {cons,
                   {313,16},
                   {tuple,
                    {313,16},
                    [{atom,{313,17},b_set},
                     {map,{313,23},[]},
                     {tuple,
                      {313,27},
                      [{atom,{313,28},b_var},{atom,{313,34},'@second_var'}]},
                     {atom,{313,49},second_op},
                     {nil,{313,59}}]},
                   {nil,{313,62}}}}},
                {tuple,
                 {314,15},
                 [{atom,{314,16},b_ret},
                  {map,{314,22},[]},
                  {tuple,
                   {314,26},
                   [{atom,{314,27},b_var},{atom,{314,33},'@ret'}]}]}]}}]},
           {integer,{315,8},3}]},
         {cons,
          {316,7},
          {tuple,
           {316,7},
           [{atom,{316,8},b_function},
            {map,
             {317,8},
             [{map_field_assoc,
               {317,20},
               {atom,{317,10},func_info},
               {tuple,
                {317,23},
                [{atom,{317,24},t},
                 {atom,{317,26},module_info},
                 {integer,{317,38},0}]}}]},
            {nil,{318,8}},
            {map,
             {319,8},
             [{map_field_assoc,
               {319,12},
               {integer,{319,10},0},
               {tuple,
                {320,14},
                [{atom,{320,15},b_blk},
                 {map,{320,21},[]},
                 {cons,
                  {321,15},
                  {tuple,
                   {321,16},
                   [{atom,{321,17},b_set},
                    {map,{321,23},[]},
                    {var,{322,17},'Ret'},
                    {atom,{323,17},call},
                    {cons,
                     {324,17},
                     {tuple,
                      {324,18},
                      [{atom,{324,19},b_remote},
                       {tuple,
                        {325,19},
                        [{atom,{325,20},b_literal},{atom,{325,30},erlang}]},
                       {tuple,
                        {326,19},
                        [{atom,{326,20},b_literal},
                         {atom,{326,30},get_module_info}]},
                       {integer,{327,19},1}]},
                     {cons,
                      {328,18},
                      {tuple,
                       {328,18},
                       [{atom,{328,19},b_var},
                        {atom,{328,25},'@unknown_variable'}]},
                      {nil,{328,45}}}}]},
                  {nil,{328,47}}},
                 {tuple,
                  {329,15},
                  [{atom,{329,16},b_ret},
                   {map,{329,22},[]},
                   {var,{329,26},'Ret'}]}]}}]},
            {integer,{330,8},4}]},
          {nil,{330,10}}}}}}]}]}]}.
{function,
 {332,1},
 expect_error,1,
 [{clause,
   {332,1},
   [{var,{332,1},'_'}],
   [[{call,
      {332,1},
      {remote,{332,1},{atom,{332,1},fake},{atom,{332,1},is_beam_bif_info}},
      []}]],
   [{debug_line,332,117},{atom,{332,1},ignore}]},
  {clause,
   {332,1},
   [{var,{332,14},'Fun'}],
   [],
   [{debug_line,333,118},
    {'try',
     {333,5},
     [{call,{333,9},{var,{333,9},'Fun'},[]}],
     [{clause,
       {334,2},
       [{var,{334,2},'Any'}],
       [],
       [{debug_line,335,119},
        {call,
         {335,6},
         {remote,{335,8},{atom,{335,6},io},{atom,{335,9},format}},
         [{block,0,[{string,{335,16},"~p"}]},
          {block,0,[{cons,{335,22},{var,{335,23},'Any'},{nil,{335,26}}}]}]},
        {debug_line,336,120},
        {call,
         {336,6},
         {remote,{336,8},{atom,{336,6},ct},{atom,{336,9},fail}},
         [{atom,{336,14},call_was_supposed_to_fail}]}]}],
     [{clause,
       {338,2},
       [{tuple,
         {338,2},
         [{var,{338,2},'Class'},{var,{338,8},'Reason'},{var,{338,15},'Stk'}]}],
       [],
       [{debug_line,339,121},
        {call,
         {339,6},
         {remote,{339,8},{atom,{339,6},io},{atom,{339,9},format}},
         [{block,0,[{string,{339,16},"~p:~p\n~p\n"}]},
          {block,0,
           [{cons,
             {339,31},
             {var,{339,32},'Class'},
             {cons,
              {339,38},
              {var,{339,38},'Reason'},
              {cons,{339,45},{var,{339,45},'Stk'},{nil,{339,48}}}}}]}]},
        {debug_line,340,122},
        {'case',
         {340,6},
         {tuple,{340,11},[{var,{340,12},'Class'},{var,{340,18},'Reason'}]},
         [{clause,
           {341,3},
           [{tuple,{341,3},[{atom,{341,4},error},{atom,{341,10},undef}]}],
           [],
           [{debug_line,342,123},
            {call,
             {342,7},
             {remote,{342,9},{atom,{342,7},ct},{atom,{342,10},fail}},
             [{atom,{342,15},not_supposed_to_fail_with_undef}]}]},
          {clause,
           {343,3},
           [{tuple,{343,3},[{var,{343,4},'_'},{var,{343,6},'_'}]}],
           [],
           [{debug_line,344,124},{atom,{344,7},ok}]}]}]}],
     []}]}]}.
{function,{348,1},
          confused_literals,1,
          [{clause,{348,1},
                   [{var,{348,1},'_'}],
                   [[{call,{348,1},
                           {remote,{348,1},
                                   {atom,{348,1},fake},
                                   {atom,{348,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,348,125},{atom,{348,1},ignore}]},
           {clause,{348,1},
                   [{var,{348,19},'Config'}],
                   [[{call,{348,32},
                           {remote,{348,32},
                                   {atom,{348,32},erlang},
                                   {atom,{348,32},is_list}},
                           [{var,{348,40},'Config'}]}]],
                   [{debug_line,349,126},
                    {match,{349,5},
                           {tuple,{349,5},
                                  [{integer,{349,6},0},
                                   {atom,{349,8},infinity}]},
                           {call,{349,20},
                                 {atom,{349,20},confused_literals_1},
                                 [{atom,{349,40},int}]}},
                    {debug_line,350,127},
                    {match,{350,5},
                           {tuple,{350,5},
                                  [{float,{350,6},0.0},
                                   {atom,{350,10},infinity}]},
                           {call,{350,22},
                                 {atom,{350,22},confused_literals_1},
                                 [{atom,{350,42},float}]}},
                    {debug_line,351,128},
                    {atom,{351,5},ok}]}]}.
{function,{353,1},
          confused_literals_1,1,
          [{clause,{353,1},
                   [{var,{353,1},'_'}],
                   [[{call,{353,1},
                           {remote,{353,1},
                                   {atom,{353,1},fake},
                                   {atom,{353,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,353,129},{atom,{353,1},ignore}]},
           {clause,{353,1},
                   [{atom,{353,21},int}],
                   [],
                   [{debug_line,353,130},
                    {tuple,{353,29},
                           [{integer,{353,30},0},{atom,{353,32},infinity}]}]},
           {clause,{354,1},
                   [{atom,{354,21},float}],
                   [],
                   [{debug_line,354,131},
                    {tuple,{354,31},
                           [{float,{354,32},0.0},
                            {atom,{354,36},infinity}]}]}]}.
{function,
    {356,1},
    integer_encoding,0,
    [{clause,
         {356,1},
         [],
         [[{call,
               {356,1},
               {remote,
                   {356,1},
                   {atom,{356,1},fake},
                   {atom,{356,1},is_beam_bif_info}},
               []}]],
         [{debug_line,356,132},{atom,{356,1},ignore}]},
     {clause,
         {356,1},
         [],[],
         [{debug_line,357,133},
          {cons,
              {357,5},
              {tuple,
                  {357,6},
                  [{atom,{357,7},timetrap},
                   {tuple,
                       {357,16},
                       [{atom,{357,17},minutes},{integer,{357,25},4}]}]},
              {nil,{357,28}}}]}]}.
{function,
    {359,1},
    integer_encoding,1,
    [{clause,
         {359,1},
         [{var,{359,1},'_'}],
         [[{call,
               {359,1},
               {remote,
                   {359,1},
                   {atom,{359,1},fake},
                   {atom,{359,1},is_beam_bif_info}},
               []}]],
         [{debug_line,359,134},{atom,{359,1},ignore}]},
     {clause,
         {359,1},
         [{var,{359,18},'Config'}],
         [[{call,
               {359,31},
               {remote,
                   {359,31},
                   {atom,{359,31},erlang},
                   {atom,{359,31},is_list}},
               [{var,{359,39},'Config'}]}]],
         [{debug_line,360,135},
          {match,
              {360,5},
              {var,{360,5},'PrivDir'},
              {call,
                  {360,15},
                  {remote,
                      {360,24},
                      {atom,{360,15},proplists},
                      {atom,{360,25},get_value}},
                  [{atom,{360,35},priv_dir},{var,{360,45},'Config'}]}},
          {debug_line,361,136},
          {match,
              {361,5},
              {var,{361,5},'SrcFile'},
              {call,
                  {361,15},
                  {remote,
                      {361,23},
                      {atom,{361,15},filename},
                      {atom,{361,24},join}},
                  [{var,{361,29},'PrivDir'},
                   {block,0,
                       [{string,
                            {361,38},
                            "misc_SUITE_integer_encoding.erl"}]}]}},
          {debug_line,362,137},
          {match,
              {362,5},
              {var,{362,5},'DataFile'},
              {call,
                  {362,16},
                  {remote,
                      {362,24},
                      {atom,{362,16},filename},
                      {atom,{362,25},join}},
                  [{var,{362,30},'PrivDir'},
                   {block,0,[{string,{362,39},"integer_encoding.data"}]}]}},
          {debug_line,363,138},
          {match,
              {363,5},
              {var,{363,5},'Mod'},
              {atom,{363,11},misc_SUITE_integer_encoding}},
          {debug_line,366,139},
          {match,
              {366,5},
              {tuple,{366,5},[{atom,{366,6},ok},{var,{366,9},'Src'}]},
              {call,
                  {366,16},
                  {remote,{366,20},{atom,{366,16},file},{atom,{366,21},open}},
                  [{var,{366,26},'SrcFile'},
                   {block,0,
                       [{cons,
                            {366,35},
                            {atom,{366,36},write},
                            {nil,{366,41}}}]}]}},
          {debug_line,367,140},
          {match,
              {367,5},
              {tuple,{367,5},[{atom,{367,6},ok},{var,{367,9},'Data'}]},
              {call,
                  {367,17},
                  {remote,{367,21},{atom,{367,17},file},{atom,{367,22},open}},
                  [{var,{367,27},'DataFile'},
                   {block,0,
                       [{cons,
                            {367,37},
                            {atom,{367,38},write},
                            {nil,{367,43}}}]}]}},
          {debug_line,368,141},
          {call,
              {368,5},
              {remote,{368,7},{atom,{368,5},io},{atom,{368,8},format}},
              [{var,{368,15},'Src'},
               {block,0,[{string,{368,20},"-module(~s).\n"}]},
               {block,0,
                   [{cons,{368,38},{var,{368,39},'Mod'},{nil,{368,42}}}]}]},
          {debug_line,369,142},
          {call,
              {369,5},
              {remote,{369,7},{atom,{369,5},io},{atom,{369,8},put_chars}},
              [{var,{369,18},'Src'},
               {block,0,[{string,{369,23},"-export([t/1]).\n"}]}]},
          {debug_line,370,143},
          {call,
              {370,5},
              {remote,{370,7},{atom,{370,5},io},{atom,{370,8},put_chars}},
              [{var,{370,18},'Src'},
               {block,0,[{string,{370,23},"t(Last) ->[\n"}]}]},
          {debug_line,371,144},
          {call,
              {371,5},
              {remote,{371,7},{atom,{371,5},io},{atom,{371,8},put_chars}},
              [{var,{371,18},'Data'},{block,0,[{string,{371,24},"[\n"}]}]},
          {debug_line,373,145},
          {call,
              {373,5},
              {atom,{373,5},do_integer_encoding},
              [{integer,{373,25},137},
               {integer,{373,30},0},
               {var,{373,33},'Src'},
               {var,{373,38},'Data'}]},
          {debug_line,374,146},
          {match,
              {374,5},
              {var,{374,5},'_'},
              {lc,{374,9},
                  {block,
                      {374,10},
                      [{debug_line,375,147},
                       {match,
                           {375,7},
                           {var,{375,7},'B'},
                           {op,{375,13},
                               'bsl',
                               {integer,{375,11},1},
                               {var,{375,17},'I'}}},
                       {debug_line,376,148},
                       {call,
                           {376,7},
                           {atom,{376,7},do_integer_encoding},
                           [{block,0,
                                [{op,{376,29},
                                     '-',
                                     {op,{376,27},'-',{var,{376,28},'B'}},
                                     {integer,{376,30},1}}]},
                            {var,{376,33},'Src'},
                            {var,{376,38},'Data'}]},
                       {debug_line,377,149},
                       {call,
                           {377,7},
                           {atom,{377,7},do_integer_encoding},
                           [{block,0,[{op,{377,27},'-',{var,{377,28},'B'}}]},
                            {var,{377,31},'Src'},
                            {var,{377,36},'Data'}]},
                       {debug_line,378,150},
                       {call,
                           {378,7},
                           {atom,{378,7},do_integer_encoding},
                           [{block,0,
                                [{op,{378,29},
                                     '+',
                                     {op,{378,27},'-',{var,{378,28},'B'}},
                                     {integer,{378,30},1}}]},
                            {var,{378,33},'Src'},
                            {var,{378,38},'Data'}]},
                       {debug_line,379,151},
                       {call,
                           {379,7},
                           {atom,{379,7},do_integer_encoding},
                           [{block,0,
                                [{op,{379,28},
                                     '-',
                                     {var,{379,27},'B'},
                                     {integer,{379,29},1}}]},
                            {var,{379,32},'Src'},
                            {var,{379,37},'Data'}]},
                       {debug_line,380,152},
                       {call,
                           {380,7},
                           {atom,{380,7},do_integer_encoding},
                           [{var,{380,27},'B'},
                            {var,{380,30},'Src'},
                            {var,{380,35},'Data'}]},
                       {debug_line,381,153},
                       {call,
                           {381,7},
                           {atom,{381,7},do_integer_encoding},
                           [{block,0,
                                [{op,{381,28},
                                     '+',
                                     {var,{381,27},'B'},
                                     {integer,{381,29},1}}]},
                            {var,{381,32},'Src'},
                            {var,{381,37},'Data'}]}]},
                  [{block,0,[{debug_line,382,154},{atom,{382,15},true}]},
                   {generate,
                       {382,12},
                       {var,{382,10},'I'},
                       {call,
                           {382,15},
                           {remote,
                               {382,20},
                               {atom,{382,15},lists},
                               {atom,{382,21},seq}},
                           [{integer,{382,25},1},{integer,{382,28},130}]}}]}},
          {debug_line,383,155},
          {call,
              {383,5},
              {remote,{383,7},{atom,{383,5},io},{atom,{383,8},put_chars}},
              [{var,{383,18},'Src'},
               {block,0,[{string,{383,23},"Last].\n\n"}]}]},
          {debug_line,384,156},
          {match,
              {384,5},
              {atom,{384,5},ok},
              {call,
                  {384,10},
                  {remote,{384,14},{atom,{384,10},file},{atom,{384,15},close}},
                  [{var,{384,21},'Src'}]}},
          {debug_line,385,157},
          {call,
              {385,5},
              {remote,{385,7},{atom,{385,5},io},{atom,{385,8},put_chars}},
              [{var,{385,18},'Data'},{block,0,[{string,{385,24},"0].\n\n"}]}]},
          {debug_line,386,158},
          {match,
              {386,5},
              {atom,{386,5},ok},
              {call,
                  {386,10},
                  {remote,{386,14},{atom,{386,10},file},{atom,{386,15},close}},
                  [{var,{386,21},'Data'}]}},
          {debug_line,389,159},
          {match,
              {389,5},
              {var,{389,5},'SrcRoot'},
              {call,
                  {389,15},
                  {remote,
                      {389,23},
                      {atom,{389,15},filename},
                      {atom,{389,24},rootname}},
                  [{var,{389,33},'SrcFile'}]}},
          {debug_line,390,160},
          {match,
              {390,5},
              {tuple,
                  {390,5},
                  [{atom,{390,6},ok},
                   {var,{390,9},'Mod'},
                   {var,{390,13},'Binary'}]},
              {call,
                  {390,23},
                  {remote,
                      {390,30},
                      {atom,{390,23},compile},
                      {atom,{390,31},file}},
                  [{var,{390,36},'SrcRoot'},
                   {block,0,
                       [{cons,
                            {390,45},
                            {atom,{390,46},binary},
                            {cons,
                                {390,53},
                                {atom,{390,53},report},
                                {nil,{390,59}}}}]}]}},
          {debug_line,391,161},
          {match,
              {391,5},
              {tuple,{391,5},[{atom,{391,6},module},{var,{391,13},'Mod'}]},
              {call,
                  {391,20},
                  {remote,
                      {391,24},
                      {atom,{391,20},code},
                      {atom,{391,25},load_binary}},
                  [{var,{391,37},'Mod'},
                   {var,{391,42},'SrcRoot'},
                   {var,{391,51},'Binary'}]}},
          {debug_line,394,162},
          {match,
              {394,5},
              {var,{394,5},'List'},
              {call,
                  {394,12},
                  {remote,{394,15},{var,{394,12},'Mod'},{atom,{394,16},t}},
                  [{integer,{394,18},0}]}},
          {debug_line,395,163},
          {match,
              {395,5},
              {tuple,
                  {395,5},
                  [{atom,{395,6},ok},
                   {cons,{395,9},{var,{395,10},'List'},{nil,{395,14}}}]},
              {call,
                  {395,19},
                  {remote,
                      {395,23},
                      {atom,{395,19},file},
                      {atom,{395,24},consult}},
                  [{var,{395,32},'DataFile'}]}},
          {debug_line,398,164},
          {call,
              {398,5},
              {remote,{398,9},{atom,{398,5},file},{atom,{398,10},delete}},
              [{var,{398,17},'SrcFile'}]},
          {debug_line,399,165},
          {call,
              {399,5},
              {remote,{399,9},{atom,{399,5},file},{atom,{399,10},delete}},
              [{var,{399,17},'DataFile'}]},
          {debug_line,400,166},
          {atom,{400,5},ok}]}]}.
{function,
    {402,1},
    do_integer_encoding,4,
    [{clause,
         {402,1},
         [{var,{402,1},'_'},
          {var,{402,1},'_'},
          {var,{402,1},'_'},
          {var,{402,1},'_'}],
         [[{call,
               {402,1},
               {remote,
                   {402,1},
                   {atom,{402,1},fake},
                   {atom,{402,1},is_beam_bif_info}},
               []}]],
         [{debug_line,402,167},{atom,{402,1},ignore}]},
     {clause,
         {402,1},
         [{integer,{402,21},0},
          {var,{402,24},'_'},
          {var,{402,27},'_'},
          {var,{402,30},'_'}],
         [],
         [{debug_line,402,168},{atom,{402,36},ok}]},
     {clause,
         {403,1},
         [{var,{403,21},'N'},
          {var,{403,24},'I0'},
          {var,{403,28},'Src'},
          {var,{403,33},'Data'}],
         [],
         [{debug_line,404,169},
          {match,
              {404,5},
              {var,{404,5},'I1'},
              {op,{404,21},
                  'bor',
                  {op,{404,14},'bsl',{var,{404,11},'I0'},{integer,{404,18},5}},
                  {op,{404,43},
                      '-',
                      {call,
                          {404,26},
                          {remote,
                              {404,30},
                              {atom,{404,26},rand},
                              {atom,{404,31},uniform}},
                          [{integer,{404,39},32}]},
                      {integer,{404,45},1}}}},
          {debug_line,405,170},
          {call,
              {405,5},
              {atom,{405,5},do_integer_encoding},
              [{var,{405,25},'I1'},
               {var,{405,29},'Src'},
               {var,{405,34},'Data'}]},
          {debug_line,406,171},
          {match,
              {406,5},
              {var,{406,5},'I2'},
              {op,{406,10},
                  '-',
                  {op,{406,15},
                      'bxor',
                      {var,{406,12},'I1'},
                      {op,{406,38},
                          '-',
                          {call,
                              {406,21},
                              {remote,
                                  {406,25},
                                  {atom,{406,21},rand},
                                  {atom,{406,26},uniform}},
                              [{integer,{406,34},32}]},
                          {integer,{406,40},1}}}}},
          {debug_line,407,172},
          {call,
              {407,5},
              {atom,{407,5},do_integer_encoding},
              [{var,{407,25},'I2'},
               {var,{407,29},'Src'},
               {var,{407,34},'Data'}]},
          {debug_line,408,173},
          {call,
              {408,5},
              {atom,{408,5},do_integer_encoding},
              [{block,0,
                   [{op,{408,26},
                        '-',
                        {var,{408,25},'N'},
                        {integer,{408,27},1}}]},
               {var,{408,30},'I1'},
               {var,{408,34},'Src'},
               {var,{408,39},'Data'}]}]}]}.
{function,
    {410,1},
    do_integer_encoding,3,
    [{clause,
         {410,1},
         [{var,{410,1},'_'},{var,{410,1},'_'},{var,{410,1},'_'}],
         [[{call,
               {410,1},
               {remote,
                   {410,1},
                   {atom,{410,1},fake},
                   {atom,{410,1},is_beam_bif_info}},
               []}]],
         [{debug_line,410,174},{atom,{410,1},ignore}]},
     {clause,
         {410,1},
         [{var,{410,21},'I'},{var,{410,24},'Src'},{var,{410,29},'Data'}],
         [],
         [{debug_line,411,175},
          {match,
              {411,5},
              {var,{411,5},'Str'},
              {call,
                  {411,11},
                  {remote,
                      {411,11},
                      {atom,{411,11},erlang},
                      {atom,{411,11},integer_to_list}},
                  [{var,{411,27},'I'}]}},
          {debug_line,412,176},
          {call,
              {412,5},
              {remote,{412,7},{atom,{412,5},io},{atom,{412,8},put_chars}},
              [{var,{412,18},'Src'},
               {block,0,
                   [{cons,
                        {412,23},
                        {var,{412,24},'Str'},
                        {cons,
                            {412,28},
                            {string,{412,28},",\n"},
                            {nil,{412,33}}}}]}]},
          {debug_line,413,177},
          {call,
              {413,5},
              {remote,{413,7},{atom,{413,5},io},{atom,{413,8},put_chars}},
              [{var,{413,18},'Data'},
               {block,0,
                   [{cons,
                        {413,24},
                        {var,{413,25},'Str'},
                        {cons,
                            {413,29},
                            {string,{413,29},",\n"},
                            {nil,{413,34}}}}]}]}]}]}.
{eof,{414,1}}.
