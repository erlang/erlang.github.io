{attribute,{1,1},file,{"beam_ssa_ss.erl",1}}.
{attribute,{29,2},module,beam_ssa_ss}.
{attribute,{32,2},compile,{inline,[{add_edge,4},{add_vertex,3}]}}.
{attribute,{34,2},
           export,
           [{add_var,3},
            {derive_from,3},
            {embed_in,3},
            {extract,4},
            {forward_status,2},
            {get_status,2},
            {initialize_in_args,1},
            {meet_in_args,1},
            {merge,2},
            {merge_in_args,3},
            {new,0},
            {new,3},
            {phi,4},
            {prune,3},
            {prune_by_add,2},
            {set_call_result,4},
            {set_status,3},
            {size,1},
            {variables,1}]}.
{attribute,{1,1},file,{"beam_ssa.hrl",1}}.
{attribute,
    {21,2},
    record,
    {b_module,
        [{typed_record_field,
             {record_field,{21,20},{atom,{21,20},anno},{map,{21,25},[]}},
             {remote_type,
                 {21,32},
                 [{atom,{21,32},beam_ssa},{atom,{21,41},anno},[]]}},
         {typed_record_field,
             {record_field,{22,20},{atom,{22,20},name}},
             {type,{22,28},module,[]}},
         {typed_record_field,
             {record_field,{23,20},{atom,{23,20},exports}},
             {type,
                 {23,31},
                 list,
                 [{type,
                      {23,32},
                      tuple,
                      [{type,{23,33},atom,[]},{type,{23,40},arity,[]}]}]}},
         {typed_record_field,
             {record_field,{24,20},{atom,{24,20},attributes}},
             {type,{24,34},list,[]}},
         {typed_record_field,
             {record_field,{25,20},{atom,{25,20},body}},
             {type,
                 {25,28},
                 list,
                 [{remote_type,
                      {25,29},
                      [{atom,{25,29},beam_ssa},
                       {atom,{25,38},b_function},
                       []]}]}}]}}.
{attribute,
    {26,2},
    record,
    {b_function,
        [{typed_record_field,
             {record_field,{26,22},{atom,{26,22},anno},{map,{26,27},[]}},
             {remote_type,
                 {26,34},
                 [{atom,{26,34},beam_ssa},{atom,{26,43},anno},[]]}},
         {typed_record_field,
             {record_field,{27,22},{atom,{27,22},args}},
             {type,
                 {27,30},
                 list,
                 [{remote_type,
                      {27,31},
                      [{atom,{27,31},beam_ssa},{atom,{27,40},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{28,22},{atom,{28,22},bs}},
             {type,
                 {28,28},
                 map,
                 [{type,
                      {28,46},
                      map_field_exact,
                      [{remote_type,
                           {28,30},
                           [{atom,{28,30},beam_ssa},{atom,{28,39},label},[]]},
                       {remote_type,
                           {28,48},
                           [{atom,{28,48},beam_ssa},
                            {atom,{28,57},b_blk},
                            []]}]}]}},
         {typed_record_field,
             {record_field,{29,22},{atom,{29,22},cnt}},
             {remote_type,
                 {29,29},
                 [{atom,{29,29},beam_ssa},{atom,{29,38},label},[]]}}]}}.
{attribute,
    {31,2},
    record,
    {b_blk,
        [{typed_record_field,
             {record_field,{31,17},{atom,{31,17},anno},{map,{31,22},[]}},
             {remote_type,
                 {31,29},
                 [{atom,{31,29},beam_ssa},{atom,{31,38},anno},[]]}},
         {typed_record_field,
             {record_field,{32,17},{atom,{32,17},is}},
             {type,
                 {32,23},
                 list,
                 [{remote_type,
                      {32,24},
                      [{atom,{32,24},beam_ssa},{atom,{32,33},b_set},[]]}]}},
         {typed_record_field,
             {record_field,{33,17},{atom,{33,17},last}},
             {remote_type,
                 {33,25},
                 [{atom,{33,25},beam_ssa},{atom,{33,34},terminator},[]]}}]}}.
{attribute,
    {34,2},
    record,
    {b_set,
        [{typed_record_field,
             {record_field,{34,17},{atom,{34,17},anno},{map,{34,22},[]}},
             {remote_type,
                 {34,29},
                 [{atom,{34,29},beam_ssa},{atom,{34,38},anno},[]]}},
         {typed_record_field,
             {record_field,{35,17},{atom,{35,17},dst},{atom,{35,21},none}},
             {type,
                 {35,29},
                 union,
                 [{atom,{35,29},none},
                  {remote_type,
                      {35,36},
                      [{atom,{35,36},beam_ssa},{atom,{35,45},b_var},[]]}]}},
         {typed_record_field,
             {record_field,{36,17},{atom,{36,17},op}},
             {remote_type,
                 {36,23},
                 [{atom,{36,23},beam_ssa},{atom,{36,32},op},[]]}},
         {typed_record_field,
             {record_field,{37,17},{atom,{37,17},args},{nil,{37,22}}},
             {type,
                 {37,28},
                 list,
                 [{remote_type,
                      {37,29},
                      [{atom,{37,29},beam_ssa},
                       {atom,{37,38},argument},
                       []]}]}}]}}.
{attribute,
    {40,2},
    record,
    {b_ret,
        [{typed_record_field,
             {record_field,{40,17},{atom,{40,17},anno},{map,{40,22},[]}},
             {remote_type,
                 {40,29},
                 [{atom,{40,29},beam_ssa},{atom,{40,38},anno},[]]}},
         {typed_record_field,
             {record_field,{41,17},{atom,{41,17},arg}},
             {remote_type,
                 {41,24},
                 [{atom,{41,24},beam_ssa},{atom,{41,33},value},[]]}}]}}.
{attribute,
    {43,2},
    record,
    {b_br,
        [{record_field,{43,16},{atom,{43,16},anno},{map,{43,21},[]}},
         {typed_record_field,
             {record_field,{44,16},{atom,{44,16},bool}},
             {remote_type,
                 {44,24},
                 [{atom,{44,24},beam_ssa},{atom,{44,33},value},[]]}},
         {typed_record_field,
             {record_field,{45,16},{atom,{45,16},succ}},
             {remote_type,
                 {45,24},
                 [{atom,{45,24},beam_ssa},{atom,{45,33},label},[]]}},
         {typed_record_field,
             {record_field,{46,16},{atom,{46,16},fail}},
             {remote_type,
                 {46,24},
                 [{atom,{46,24},beam_ssa},{atom,{46,33},label},[]]}}]}}.
{attribute,
    {48,2},
    record,
    {b_switch,
        [{typed_record_field,
             {record_field,{48,20},{atom,{48,20},anno},{map,{48,25},[]}},
             {remote_type,
                 {48,32},
                 [{atom,{48,32},beam_ssa},{atom,{48,41},anno},[]]}},
         {typed_record_field,
             {record_field,{49,20},{atom,{49,20},arg}},
             {remote_type,
                 {49,27},
                 [{atom,{49,27},beam_ssa},{atom,{49,36},value},[]]}},
         {typed_record_field,
             {record_field,{50,20},{atom,{50,20},fail}},
             {remote_type,
                 {50,28},
                 [{atom,{50,28},beam_ssa},{atom,{50,37},label},[]]}},
         {typed_record_field,
             {record_field,{51,20},{atom,{51,20},list}},
             {type,
                 {51,28},
                 list,
                 [{type,
                      {51,29},
                      tuple,
                      [{remote_type,
                           {51,30},
                           [{atom,{51,30},beam_ssa},
                            {atom,{51,39},b_literal},
                            []]},
                       {remote_type,
                           {51,51},
                           [{atom,{51,51},beam_ssa},
                            {atom,{51,60},label},
                            []]}]}]}}]}}.
{attribute,
    {54,2},
    record,
    {b_var,
        [{typed_record_field,
             {record_field,{54,17},{atom,{54,17},name}},
             {remote_type,
                 {54,25},
                 [{atom,{54,25},beam_ssa},{atom,{54,34},var_name},[]]}}]}}.
{attribute,
    {56,2},
    record,
    {b_literal,
        [{typed_record_field,
             {record_field,{56,21},{atom,{56,21},val}},
             {remote_type,
                 {56,28},
                 [{atom,{56,28},beam_ssa},
                  {atom,{56,37},literal_value},
                  []]}}]}}.
{attribute,
    {58,2},
    record,
    {b_remote,
        [{typed_record_field,
             {record_field,{58,20},{atom,{58,20},mod}},
             {remote_type,
                 {58,29},
                 [{atom,{58,29},beam_ssa},{atom,{58,38},value},[]]}},
         {typed_record_field,
             {record_field,{59,20},{atom,{59,20},name}},
             {remote_type,
                 {59,29},
                 [{atom,{59,29},beam_ssa},{atom,{59,38},value},[]]}},
         {typed_record_field,
             {record_field,{60,20},{atom,{60,20},arity}},
             {type,{60,29},non_neg_integer,[]}}]}}.
{attribute,
    {62,2},
    record,
    {b_local,
        [{typed_record_field,
             {record_field,{62,19},{atom,{62,19},name}},
             {remote_type,
                 {62,28},
                 [{atom,{62,28},beam_ssa},{atom,{62,37},b_literal},[]]}},
         {typed_record_field,
             {record_field,{63,19},{atom,{63,19},arity}},
             {type,{63,28},non_neg_integer,[]}}]}}.
{attribute,{55,1},file,{"beam_ssa_ss.erl",55}}.
{attribute,{1,1},file,{"beam_types.hrl",1}}.
{attribute,{91,2},
           type,
           {float_range,{type,{91,24},
                              union,
                              [{atom,{91,24},any},
                               {type,{91,32},
                                     tuple,
                                     [{atom,{91,33},'-inf'},
                                      {type,{91,40},float,[]}]},
                               {type,{91,51},
                                     tuple,
                                     [{type,{91,52},float,[]},
                                      {atom,{91,60},'+inf'}]}]},
                        []}}.
{attribute,
    {93,2},
    record,
    {t_atom,
        [{typed_record_field,
             {record_field,{93,18},{atom,{93,18},elements},{atom,{93,27},any}},
             {type,
                 {93,34},
                 union,
                 [{atom,{93,34},any},
                  {remote_type,
                      {93,42},
                      [{atom,{93,42},ordsets},
                       {atom,{93,50},ordset},
                       [{type,{93,57},atom,[]}]]}]}}]}}.
{attribute,
    {94,2},
    record,
    {t_bitstring,
        [{typed_record_field,
             {record_field,
                 {94,23},
                 {atom,{94,23},size_unit},
                 {integer,{94,33},1}},
             {type,{94,38},pos_integer,[]}},
         {typed_record_field,
             {record_field,
                 {99,23},
                 {atom,{99,23},appendable},
                 {atom,{99,34},false}},
             {type,{99,43},boolean,[]}}]}}.
{attribute,
    {100,2},
    record,
    {t_bs_context,
        [{typed_record_field,
             {record_field,
                 {100,24},
                 {atom,{100,24},tail_unit},
                 {integer,{100,34},1}},
             {type,{100,39},pos_integer,[]}}]}}.
{attribute,
    {101,2},
    record,
    {t_bs_matchable,
        [{typed_record_field,
             {record_field,
                 {101,26},
                 {atom,{101,26},tail_unit},
                 {integer,{101,36},1}},
             {type,{101,41},pos_integer,[]}}]}}.
{attribute,
    {102,2},
    record,
    {t_float,
        [{typed_record_field,
             {record_field,
                 {102,19},
                 {atom,{102,19},elements},
                 {atom,{102,28},any}},
             {user_type,{102,35},float_range,[]}}]}}.
{attribute,
    {103,2},
    record,
    {t_fun,
        [{typed_record_field,
             {record_field,{103,17},{atom,{103,17},arity},{atom,{103,23},any}},
             {type,
                 {103,30},
                 union,
                 [{type,{103,30},arity,[]},{atom,{103,40},any}]}},
         {typed_record_field,
             {record_field,
                 {104,17},
                 {atom,{104,17},target},
                 {atom,{104,24},any}},
             {type,
                 {104,31},
                 union,
                 [{type,
                      {104,31},
                      tuple,
                      [{type,{104,32},atom,[]},
                       {type,{104,40},non_neg_integer,[]}]},
                  {atom,{104,61},any}]}},
         {typed_record_field,
             {record_field,{105,17},{atom,{105,17},type},{atom,{105,22},any}},
             {user_type,{105,29},type,[]}}]}}.
{attribute,
    {106,2},
    record,
    {t_integer,
        [{typed_record_field,
             {record_field,
                 {106,21},
                 {atom,{106,21},elements},
                 {atom,{106,30},any}},
             {type,
                 {106,37},
                 union,
                 [{atom,{106,37},any},
                  {remote_type,
                      {106,45},
                      [{atom,{106,45},beam_bounds},
                       {atom,{106,57},range},
                       []]}]}}]}}.
{attribute,
    {107,2},
    record,
    {t_number,
        [{typed_record_field,
             {record_field,
                 {107,20},
                 {atom,{107,20},elements},
                 {atom,{107,29},any}},
             {type,
                 {107,36},
                 union,
                 [{atom,{107,36},any},
                  {remote_type,
                      {107,44},
                      [{atom,{107,44},beam_bounds},
                       {atom,{107,56},range},
                       []]}]}}]}}.
{attribute,
    {113,2},
    record,
    {t_map,
        [{typed_record_field,
             {record_field,
                 {113,17},
                 {atom,{113,17},super_key},
                 {atom,{113,27},any}},
             {user_type,{113,34},type,[]}},
         {typed_record_field,
             {record_field,
                 {114,17},
                 {atom,{114,17},super_value},
                 {atom,{114,29},any}},
             {user_type,{114,36},type,[]}}]}}.
{attribute,
    {122,2},
    record,
    {t_cons,
        [{typed_record_field,
             {record_field,{122,18},{atom,{122,18},type},{atom,{122,23},any}},
             {user_type,{122,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {122,38},
                 {atom,{122,38},terminator},
                 {atom,{122,49},any}},
             {user_type,{122,56},type,[]}}]}}.
{attribute,
    {123,2},
    record,
    {t_list,
        [{typed_record_field,
             {record_field,{123,18},{atom,{123,18},type},{atom,{123,23},any}},
             {user_type,{123,30},type,[]}},
         {typed_record_field,
             {record_field,
                 {123,38},
                 {atom,{123,38},terminator},
                 {atom,{123,49},any}},
             {user_type,{123,56},type,[]}}]}}.
{attribute,
    {125,2},
    record,
    {t_tuple,
        [{typed_record_field,
             {record_field,{125,19},{atom,{125,19},size},{integer,{125,24},0}},
             {type,{125,29},integer,[]}},
         {typed_record_field,
             {record_field,
                 {126,19},
                 {atom,{126,19},exact},
                 {atom,{126,25},false}},
             {type,{126,34},boolean,[]}},
         {typed_record_field,
             {record_field,
                 {127,19},
                 {atom,{127,19},elements},
                 {map,{127,28},[]}},
             {user_type,{127,35},tuple_elements,[]}}]}}.
{attribute,
    {146,2},
    type,
    {tuple_elements,
        {type,
            {146,27},
            map,
            [{type,
                 {146,51},
                 map_field_assoc,
                 [{ann_type,
                      {146,30},
                      [{var,{146,30},'Key'},{type,{146,37},pos_integer,[]}]},
                  {user_type,{146,54},type,[]}]}]},
        []}}.
{attribute,{148,2},
           type,
           {normal_type,{type,{148,24},
                              union,
                              [{atom,{148,24},any},
                               {atom,{148,32},none},
                               {type,{149,24},
                                     record,
                                     [{atom,{149,25},t_number}]},
                               {type,{149,38},
                                     record,
                                     [{atom,{149,39},t_float}]},
                               {type,{149,51},
                                     record,
                                     [{atom,{149,52},t_integer}]},
                               {type,{150,24},record,[{atom,{150,25},t_atom}]},
                               {type,{151,24},
                                     record,
                                     [{atom,{151,25},t_bitstring}]},
                               {type,{151,41},
                                     record,
                                     [{atom,{151,42},t_bs_context}]},
                               {type,{151,59},
                                     record,
                                     [{atom,{151,60},t_bs_matchable}]},
                               {type,{152,24},record,[{atom,{152,25},t_fun}]},
                               {type,{153,24},record,[{atom,{153,25},t_list}]},
                               {type,{153,36},record,[{atom,{153,37},t_cons}]},
                               {atom,{153,48},nil},
                               {atom,{154,24},other},
                               {type,{155,24},record,[{atom,{155,25},t_map}]},
                               {atom,{156,24},identifier},
                               {atom,{157,24},pid},
                               {atom,{158,24},port},
                               {atom,{159,24},reference},
                               {type,{160,24},
                                     record,
                                     [{atom,{160,25},t_tuple}]}]},
                        []}}.
{attribute,{162,2},
           type,
           {other_type,{type,{162,23},
                             union,
                             [{atom,{162,23},none},
                              {type,{162,32},record,[{atom,{162,33},t_fun}]},
                              {type,{162,43},record,[{atom,{162,44},t_map}]},
                              {atom,{163,23},pid},
                              {atom,{163,31},port},
                              {atom,{163,40},reference},
                              {atom,{163,54},identifier},
                              {type,{164,23},
                                    record,
                                    [{atom,{164,24},t_bitstring}]},
                              {type,{164,40},
                                    record,
                                    [{atom,{164,41},t_bs_context}]},
                              {type,{165,23},
                                    record,
                                    [{atom,{165,24},t_bs_matchable}]}]},
                       []}}.
{attribute,
    {167,2},
    type,
    {record_key,
        {type,
            {167,23},
            tuple,
            [{ann_type,
                 {167,24},
                 [{var,{167,24},'Arity'},{type,{167,33},integer,[]}]},
             {ann_type,
                 {167,44},
                 [{var,{167,44},'Tag'},{user_type,{167,51},normal_type,[]}]}]},
        []}}.
{attribute,
    {168,2},
    type,
    {record_set,
        {remote_type,
            {168,23},
            [{atom,{168,23},ordsets},
             {atom,{168,31},ordset},
             [{type,
                  {168,38},
                  tuple,
                  [{user_type,{168,39},record_key,[]},
                   {type,{168,53},record,[{atom,{168,54},t_tuple}]}]}]]},
        []}}.
{attribute,{169,2},
           type,
           {tuple_set,{type,{169,22},
                            union,
                            [{type,{169,22},record,[{atom,{169,23},t_tuple}]},
                             {user_type,{169,35},record_set,[]}]},
                      []}}.
{attribute,
    {173,2},
    record,
    {t_union,
        [{typed_record_field,
             {record_field,{173,19},{atom,{173,19},atom},{atom,{173,24},none}},
             {type,
                 {173,32},
                 union,
                 [{atom,{173,32},none},
                  {type,{173,41},record,[{atom,{173,42},t_atom}]}]}},
         {typed_record_field,
             {record_field,{174,19},{atom,{174,19},list},{atom,{174,24},none}},
             {type,
                 {174,32},
                 union,
                 [{atom,{174,32},none},
                  {type,{174,41},record,[{atom,{174,42},t_list}]},
                  {type,{174,53},record,[{atom,{174,54},t_cons}]},
                  {atom,{174,65},nil}]}},
         {typed_record_field,
             {record_field,
                 {175,19},
                 {atom,{175,19},number},
                 {atom,{175,26},none}},
             {type,
                 {175,34},
                 union,
                 [{atom,{175,34},none},
                  {type,{175,43},record,[{atom,{175,44},t_number}]},
                  {type,{175,57},record,[{atom,{175,58},t_float}]},
                  {type,{175,70},record,[{atom,{175,71},t_integer}]}]}},
         {typed_record_field,
             {record_field,
                 {176,19},
                 {atom,{176,19},tuple_set},
                 {atom,{176,29},none}},
             {type,
                 {176,37},
                 union,
                 [{atom,{176,37},none},{user_type,{176,46},tuple_set,[]}]}},
         {typed_record_field,
             {record_field,
                 {177,19},
                 {atom,{177,19},other},
                 {atom,{177,25},none}},
             {type,
                 {177,33},
                 union,
                 [{atom,{177,33},other},
                  {user_type,{177,43},other_type,[]}]}}]}}.
{attribute,{179,2},
           type,
           {type,{type,{179,17},
                       union,
                       [{type,{179,17},record,[{atom,{179,18},t_union}]},
                        {user_type,{179,30},normal_type,[]}]},
                 []}}.
{attribute,{56,1},file,{"beam_ssa_ss.erl",56}}.
{attribute,{1,1},file,{"beam_ssa_alias_debug.hrl",1}}.
{attribute,{57,1},file,{"beam_ssa_ss.erl",57}}.
{attribute,{62,2},import,{lists,[{foldl,3}]}}.
{attribute,{83,2},type,{sharing_state,{type,{83,26},any,[]},[]}}.
{attribute,{84,2},
           type,
           {sharing_status,{type,{84,27},
                                 union,
                                 [{atom,{84,27},unique},
                                  {atom,{84,38},aliased},
                                  {atom,{84,50},no_info}]},
                           []}}.
{attribute,{85,2},
           type,
           {element,{type,{85,20},
                          union,
                          [{atom,{85,20},hd},
                           {atom,{85,27},tl},
                           {type,{85,34},non_neg_integer,[]}]},
                    []}}.
{attribute,
    {87,2},
    spec,
    {{add_var,3},
     [{type,
          {87,14},
          'fun',
          [{type,
               {87,14},
               product,
               [{remote_type,
                    {87,15},
                    [{atom,{87,15},beam_ssa},{atom,{87,24},b_var},[]]},
                {user_type,{87,33},sharing_status,[]},
                {user_type,{87,51},sharing_state,[]}]},
           {user_type,{88,11},sharing_state,[]}]}]}}.
{function,{89,1},
          add_var,3,
          [{clause,{89,1},
                   [{var,{89,1},'_'},{var,{89,1},'_'},{var,{89,1},'_'}],
                   [[{call,{89,1},
                           {remote,{89,1},
                                   {atom,{89,1},fake},
                                   {atom,{89,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,89,1},{atom,{89,1},ignore}]},
           {clause,{89,1},
                   [{var,{89,9},'V'},
                    {var,{89,12},'Status'},
                    {var,{89,20},'State'}],
                   [],
                   [{debug_line,90,2},
                    {atom,{90,6},skip},
                    {debug_line,91,3},
                    {call,{91,19},
                          {atom,{91,19},add_vertex},
                          [{var,{91,30},'State'},
                           {var,{91,37},'V'},
                           {var,{91,40},'Status'}]}]}]}.
{function,{93,1},
          add_vertex,3,
          [{clause,{93,1},
                   [{var,{93,1},'_'},{var,{93,1},'_'},{var,{93,1},'_'}],
                   [[{call,{93,1},
                           {remote,{93,1},
                                   {atom,{93,1},fake},
                                   {atom,{93,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,93,4},{atom,{93,1},ignore}]},
           {clause,{93,1},
                   [{var,{93,12},'State'},
                    {var,{93,19},'V'},
                    {var,{93,22},'Status'}],
                   [],
                   [{debug_line,94,5},
                    {atom,{94,6},skip},
                    {debug_line,99,6},
                    {call,{99,5},
                          {remote,{99,17},
                                  {atom,{99,5},beam_digraph},
                                  {atom,{99,18},add_vertex}},
                          [{var,{99,29},'State'},
                           {var,{99,36},'V'},
                           {var,{99,39},'Status'}]}]}]}.
{function,{101,1},
          add_edge,4,
          [{clause,{101,1},
                   [{var,{101,1},'_'},
                    {var,{101,1},'_'},
                    {var,{101,1},'_'},
                    {var,{101,1},'_'}],
                   [[{call,{101,1},
                           {remote,{101,1},
                                   {atom,{101,1},fake},
                                   {atom,{101,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,101,7},{atom,{101,1},ignore}]},
           {clause,{101,1},
                   [{var,{101,10},'State'},
                    {var,{101,17},'Src'},
                    {var,{101,22},'Dst'},
                    {var,{101,27},'Lbl'}],
                   [],
                   [{debug_line,102,8},
                    {atom,{102,6},skip},
                    {debug_line,120,9},
                    {call,{120,5},
                          {remote,{120,17},
                                  {atom,{120,5},beam_digraph},
                                  {atom,{120,18},add_edge}},
                          [{var,{120,27},'State'},
                           {var,{120,34},'Src'},
                           {var,{120,39},'Dst'},
                           {var,{120,44},'Lbl'}]}]}]}.
{attribute,
    {122,2},
    spec,
    {{derive_from,3},
     [{type,
          {122,18},
          'fun',
          [{type,
               {122,18},
               product,
               [{remote_type,
                    {122,19},
                    [{atom,{122,19},beam_ssa},{atom,{122,28},b_var},[]]},
                {remote_type,
                    {122,37},
                    [{atom,{122,37},beam_ssa},{atom,{122,46},b_var},[]]},
                {user_type,{122,55},sharing_state,[]}]},
           {user_type,{123,11},sharing_state,[]}]}]}}.
{function,
 {124,1},
 derive_from,3,
 [{clause,
   {124,1},
   [{var,{124,1},'_'},{var,{124,1},'_'},{var,{124,1},'_'}],
   [[{call,
      {124,1},
      {remote,{124,1},{atom,{124,1},fake},{atom,{124,1},is_beam_bif_info}},
      []}]],
   [{debug_line,124,10},{atom,{124,1},ignore}]},
  {clause,
   {124,1},
   [{var,{124,13},'Dst'},{var,{124,18},'Src'},{var,{124,23},'State'}],
   [],
   [{debug_line,125,11},
    {atom,{125,6},skip},
    {debug_line,126,12},
    {var,{126,19},'State'},
    {debug_line,127,13},
    {'case',
     {127,5},
     {tuple,
      {127,10},
      [{call,
        {127,11},
        {remote,{127,23},{atom,{127,11},beam_digraph},{atom,{127,24},vertex}},
        [{var,{127,31},'State'},{var,{127,38},'Dst'},{atom,{127,43},unique}]},
       {call,
        {128,11},
        {remote,{128,23},{atom,{128,11},beam_digraph},{atom,{128,24},vertex}},
        [{var,{128,31},'State'},{var,{128,38},'Src'},{atom,{128,43},plain}]}]},
     [{clause,
       {129,9},
       [{tuple,{129,9},[{var,{129,10},'_'},{atom,{129,12},plain}]}],
       [],
       [{debug_line,130,14},{var,{130,13},'State'}]},
      {clause,
       {131,9},
       [{tuple,{131,9},[{atom,{131,10},aliased},{var,{131,18},'_'}]}],
       [],
       [{debug_line,133,15},{var,{133,13},'State'}]},
      {clause,
       {134,9},
       [{tuple,{134,9},[{var,{134,10},'_'},{atom,{134,12},aliased}]}],
       [],
       [{debug_line,136,16},
        {call,
         {136,27},
         {atom,{136,27},set_status},
         [{var,{136,38},'Dst'},
          {atom,{136,43},aliased},
          {var,{136,52},'State'}]}]},
      {clause,
       {137,9},
       [{tuple,{137,9},[{var,{137,10},'_'},{var,{137,12},'_'}]}],
       [],
       [{debug_line,138,17},
        {'case',
         {138,13},
         {call,
          {138,18},
          {atom,{138,18},has_out_edges},
          [{var,{138,32},'Src'},{var,{138,37},'State'}]},
         [{clause,
           {139,17},
           [{atom,{139,17},true}],
           [],
           [{debug_line,142,18},
            {call,
             {142,35},
             {atom,{142,35},set_status},
             [{var,{142,46},'Src'},
              {atom,{142,51},aliased},
              {block,0,
               [{debug_line,143,19},
                {call,
                 {143,46},
                 {atom,{143,46},set_status},
                 [{var,{143,57},'Dst'},
                  {atom,{143,62},aliased},
                  {var,{143,71},'State'}]}]}]}]},
          {clause,
           {144,17},
           [{atom,{144,17},false}],
           [],
           [{debug_line,147,20},
            {match,
             {147,21},
             {var,{147,21},'State1'},
             {'case',
              {147,30},
              {call,
               {147,35},
               {remote,
                {147,47},
                {atom,{147,35},beam_digraph},
                {atom,{147,48},has_vertex}},
               [{var,{147,59},'State'},{var,{147,66},'Dst'}]},
              [{clause,
                {148,34},
                [{atom,{148,34},true}],
                [],
                [{debug_line,149,21},{var,{149,38},'State'}]},
               {clause,
                {150,34},
                [{atom,{150,34},false}],
                [],
                [{debug_line,151,22},
                 {call,
                  {151,38},
                  {remote,
                   {151,49},
                   {atom,{151,38},beam_ssa_ss},
                   {atom,{151,50},add_var}},
                  [{var,{151,58},'Dst'},
                   {atom,{151,63},unique},
                   {var,{151,71},'State'}]}]}]}},
            {debug_line,153,23},
            {call,
             {153,35},
             {atom,{153,35},add_edge},
             [{var,{153,44},'State1'},
              {var,{153,52},'Src'},
              {var,{153,57},'Dst'},
              {atom,{153,62},embed}]}]}]}]}]}]}]}.
{attribute,
    {157,2},
    spec,
    {{embed_in,3},
     [{type,
          {157,15},
          'fun',
          [{type,
               {157,15},
               product,
               [{remote_type,
                    {157,16},
                    [{atom,{157,16},beam_ssa},{atom,{157,25},b_var},[]]},
                {type,
                    {157,34},
                    list,
                    [{type,
                         {157,35},
                         tuple,
                         [{user_type,{157,36},element,[]},
                          {remote_type,
                              {157,46},
                              [{atom,{157,46},beam_ssa},
                               {atom,{157,55},b_var},
                               []]}]}]},
                {user_type,{158,16},sharing_state,[]}]},
           {user_type,{158,36},sharing_state,[]}]}]}}.
{function,
    {159,1},
    embed_in,3,
    [{clause,
         {159,1},
         [{var,{159,1},'_'},{var,{159,1},'_'},{var,{159,1},'_'}],
         [[{call,
               {159,1},
               {remote,
                   {159,1},
                   {atom,{159,1},fake},
                   {atom,{159,1},is_beam_bif_info}},
               []}]],
         [{debug_line,159,24},{atom,{159,1},ignore}]},
     {clause,
         {159,1},
         [{var,{159,10},'Dst'},
          {var,{159,15},'Elements'},
          {var,{159,25},'State0'}],
         [],
         [{debug_line,160,25},
          {atom,{160,6},skip},
          {debug_line,161,26},
          {var,{161,19},'State0'},
          {debug_line,162,27},
          {atom,{162,6},skip},
          {debug_line,163,28},
          {call,
              {163,5},
              {remote,{163,5},{atom,{163,5},lists},{atom,{163,5},foldl}},
              [{block,0,
                   [{'fun',
                        {163,11},
                        {clauses,
                            [{clause,
                                 {163,14},
                                 [{tuple,
                                      {163,15},
                                      [{var,{163,16},'Element'},
                                       {var,{163,24},'Src'}]},
                                  {var,{163,30},'Acc'}],
                                 [],
                                 [{debug_line,164,29},
                                  {call,
                                      {164,19},
                                      {atom,{164,19},add_embedding},
                                      [{var,{164,33},'Dst'},
                                       {var,{164,38},'Src'},
                                       {var,{164,43},'Element'},
                                       {var,{164,52},'Acc'}]}]}]}}]},
               {var,{165,16},'State0'},
               {var,{165,24},'Elements'}]}]}]}.
{function,
 {167,1},
 add_embedding,4,
 [{clause,
   {167,1},
   [{var,{167,1},'_'},{var,{167,1},'_'},{var,{167,1},'_'},{var,{167,1},'_'}],
   [[{call,
      {167,1},
      {remote,{167,1},{atom,{167,1},fake},{atom,{167,1},is_beam_bif_info}},
      []}]],
   [{debug_line,167,30},{atom,{167,1},ignore}]},
  {clause,
   {167,1},
   [{var,{167,15},'Dst'},
    {var,{167,20},'Src'},
    {var,{167,25},'Element'},
    {var,{167,34},'State0'}],
   [],
   [{debug_line,168,31},
    {atom,{168,6},skip},
    {debug_line,172,32},
    {match,
     {172,5},
     {var,{172,5},'State1'},
     {'case',
      {172,14},
      {var,{172,19},'Src'},
      [{clause,
        {173,18},
        [{atom,{173,18},plain}],
        [],
        [{debug_line,174,33},
         {call,
          {174,22},
          {remote,
           {174,34},
           {atom,{174,22},beam_digraph},
           {atom,{174,35},add_vertex}},
          [{var,{174,46},'State0'},
           {var,{174,54},'Src'},
           {atom,{174,59},unique}]}]},
       {clause,
        {175,18},
        [{tuple,{175,18},[{atom,{175,18},b_literal},{var,{175,18},'_'}]}],
        [],
        [{debug_line,176,34},
         {call,
          {176,22},
          {remote,
           {176,34},
           {atom,{176,22},beam_digraph},
           {atom,{176,35},add_vertex}},
          [{var,{176,46},'State0'},
           {var,{176,54},'Src'},
           {atom,{176,59},unique}]}]},
       {clause,
        {177,18},
        [{var,{177,18},'_'}],
        [],
        [{debug_line,178,35},
         {'case',
          {178,22},
          {call,
           {178,27},
           {remote,
            {178,39},
            {atom,{178,27},beam_digraph},
            {atom,{178,40},has_vertex}},
           [{var,{178,51},'State0'},{var,{178,59},'Src'}]},
          [{clause,
            {179,26},
            [{atom,{179,26},true}],
            [],
            [{debug_line,180,36},{var,{180,30},'State0'}]},
           {clause,
            {181,26},
            [{atom,{181,26},false}],
            [],
            [{debug_line,182,37},
             {call,
              {182,30},
              {remote,
               {182,42},
               {atom,{182,30},beam_digraph},
               {atom,{182,43},add_vertex}},
              [{var,{182,54},'State0'},
               {var,{182,62},'Src'},
               {atom,{182,67},unique}]}]}]}]}]}},
    {debug_line,188,38},
    {atom,{188,6},skip},
    {debug_line,193,39},
    {match,
     {193,5},
     {var,{193,5},'State'},
     {call,
      {193,27},
      {atom,{193,27},add_edge},
      [{var,{193,36},'State1'},
       {var,{193,44},'Src'},
       {var,{193,49},'Dst'},
       {block,0,
        [{tuple,
          {193,54},
          [{atom,{193,55},embed},{var,{193,61},'Element'}]}]}]}},
    {debug_line,197,40},
    {'case',
     {197,5},
     {call,
      {197,10},
      {remote,{197,22},{atom,{197,10},beam_digraph},{atom,{197,23},out_edges}},
      [{var,{197,33},'State'},{var,{197,40},'Src'}]},
     [{clause,
       {198,9},
       [{cons,{198,9},{var,{198,10},'_'},{nil,{198,11}}}],
       [],
       [{debug_line,199,41},{var,{199,13},'State'}]},
      {clause,
       {200,9},
       [{var,{200,9},'_'}],
       [[{op,{200,20},'=/=',{var,{200,16},'Src'},{atom,{200,24},plain}}]],
       [{debug_line,201,42},
        {'case',
         {201,13},
         {var,{201,18},'Src'},
         [{clause,
           {202,17},
           [{tuple,{202,17},[{atom,{202,17},b_literal},{var,{202,17},'_'}]}],
           [],
           [{debug_line,203,43},{var,{203,21},'State'}]},
          {clause,
           {204,17},
           [{var,{204,17},'_'}],
           [],
           [{debug_line,205,44},
            {call,
             {205,21},
             {atom,{205,21},set_status},
             [{var,{205,32},'Src'},
              {atom,{205,37},aliased},
              {var,{205,46},'State'}]}]}]}]},
      {clause,
       {207,9},
       [{var,{207,9},'_'}],
       [[{op,{207,20},'=:=',{var,{207,16},'Src'},{atom,{207,24},plain}}]],
       [{debug_line,208,45},{var,{208,13},'State'}]}]}]}]}.
{attribute,
    {211,2},
    spec,
    {{extract,4},
     [{type,
          {211,14},
          'fun',
          [{type,
               {211,14},
               product,
               [{remote_type,
                    {211,15},
                    [{atom,{211,15},beam_ssa},{atom,{211,24},b_var},[]]},
                {remote_type,
                    {211,33},
                    [{atom,{211,33},beam_ssa},{atom,{211,42},b_var},[]]},
                {user_type,{211,51},element,[]},
                {user_type,{212,15},sharing_state,[]}]},
           {user_type,{212,35},sharing_state,[]}]}]}}.
{function,
    {213,1},
    extract,4,
    [{clause,
         {213,1},
         [{var,{213,1},'_'},
          {var,{213,1},'_'},
          {var,{213,1},'_'},
          {var,{213,1},'_'}],
         [[{call,
               {213,1},
               {remote,
                   {213,1},
                   {atom,{213,1},fake},
                   {atom,{213,1},is_beam_bif_info}},
               []}]],
         [{debug_line,213,46},{atom,{213,1},ignore}]},
     {clause,
         {213,1},
         [{var,{213,9},'Dst'},
          {var,{213,14},'Src'},
          {var,{213,19},'Element'},
          {var,{213,28},'State'}],
         [],
         [{debug_line,214,47},
          {atom,{214,6},skip},
          {debug_line,215,48},
          {var,{215,19},'State'},
          {debug_line,216,49},
          {'case',
              {216,5},
              {call,
                  {216,10},
                  {remote,
                      {216,22},
                      {atom,{216,10},beam_digraph},
                      {atom,{216,23},vertex}},
                  [{var,{216,30},'State'},
                   {var,{216,37},'Src'},
                   {atom,{216,42},plain}]},
              [{clause,
                   {217,9},
                   [{atom,{217,9},aliased}],
                   [],
                   [{debug_line,219,50},
                    {call,
                        {219,27},
                        {atom,{219,27},set_status},
                        [{var,{219,38},'Dst'},
                         {atom,{219,43},aliased},
                         {var,{219,52},'State'}]}]},
               {clause,
                   {220,9},
                   [{atom,{220,9},unique}],
                   [],
                   [{debug_line,222,51},
                    {match,
                        {222,13},
                        {var,{222,13},'OutEdges'},
                        {call,
                            {222,24},
                            {remote,
                                {222,36},
                                {atom,{222,24},beam_digraph},
                                {atom,{222,37},out_edges}},
                            [{var,{222,47},'State'},{var,{222,54},'Src'}]}},
                    {debug_line,223,52},
                    {atom,{223,14},skip},
                    {debug_line,225,53},
                    {atom,{225,14},skip},
                    {debug_line,227,54},
                    {call,
                        {227,13},
                        {atom,{227,13},extract_element},
                        [{var,{227,29},'Dst'},
                         {var,{227,34},'Src'},
                         {var,{227,39},'Element'},
                         {var,{227,48},'OutEdges'},
                         {var,{227,58},'State'}]}]},
               {clause,
                   {228,9},
                   [{atom,{228,9},no_info}],
                   [],
                   [{debug_line,229,55},
                    {call,
                        {229,27},
                        {atom,{229,27},set_status},
                        [{var,{229,38},'Dst'},
                         {atom,{229,43},no_info},
                         {var,{229,52},'State'}]}]},
               {clause,
                   {230,9},
                   [{atom,{230,9},plain}],
                   [],
                   [{debug_line,235,56},
                    {call,
                        {235,27},
                        {atom,{235,27},set_status},
                        [{var,{235,38},'Dst'},
                         {atom,{235,43},aliased},
                         {var,{235,52},'State'}]}]}]}]}]}.
{function,
    {241,1},
    extract_element,5,
    [{clause,
         {241,1},
         [{var,{241,1},'_'},
          {var,{241,1},'_'},
          {var,{241,1},'_'},
          {var,{241,1},'_'},
          {var,{241,1},'_'}],
         [[{call,
               {241,1},
               {remote,
                   {241,1},
                   {atom,{241,1},fake},
                   {atom,{241,1},is_beam_bif_info}},
               []}]],
         [{debug_line,241,57},{atom,{241,1},ignore}]},
     {clause,
         {241,1},
         [{var,{241,17},'Dst'},
          {var,{241,22},'_Src'},
          {var,{241,28},'Element'},
          {cons,
              {241,37},
              {tuple,
                  {241,38},
                  [{var,{241,39},'_'},
                   {var,{241,41},'Old'},
                   {tuple,
                       {241,45},
                       [{atom,{241,46},extract},{var,{241,54},'Element'}]}]},
              {var,{241,64},'_'}},
          {var,{241,68},'State'}],
         [],
         [{debug_line,244,58},
          {call,
              {244,19},
              {atom,{244,19},set_status},
              [{var,{244,30},'Old'},
               {atom,{244,35},aliased},
               {block,0,
                   [{call,
                        {244,44},
                        {atom,{244,44},set_status},
                        [{var,{244,55},'Dst'},
                         {atom,{244,60},aliased},
                         {var,{244,69},'State'}]}]}]}]},
     {clause,
         {245,1},
         [{var,{245,17},'Dst'},
          {var,{245,22},'Src'},
          {var,{245,27},'Element'},
          {cons,
              {245,36},
              {tuple,
                  {245,37},
                  [{var,{245,38},'_'},
                   {var,{245,40},'_'},
                   {tuple,
                       {245,42},
                       [{atom,{245,43},extract},{var,{245,51},'_'}]}]},
              {var,{245,55},'Rest'}},
          {var,{245,62},'State'}],
         [],
         [{debug_line,247,59},
          {call,
              {247,5},
              {atom,{247,5},extract_element},
              [{var,{247,21},'Dst'},
               {var,{247,26},'Src'},
               {var,{247,31},'Element'},
               {var,{247,40},'Rest'},
               {var,{247,46},'State'}]}]},
     {clause,
         {248,1},
         [{var,{248,17},'Dst'},
          {var,{248,22},'Src'},
          {var,{248,27},'Element'},
          {nil,{248,36}},
          {var,{248,40},'State0'}],
         [],
         [{debug_line,252,60},
          {atom,{252,6},skip},
          {debug_line,253,61},
          {match,
              {253,5},
              {var,{253,5},'State1'},
              {call,
                  {253,14},
                  {remote,
                      {253,25},
                      {atom,{253,14},beam_ssa_ss},
                      {atom,{253,26},add_var}},
                  [{var,{253,34},'Dst'},
                   {atom,{253,39},unique},
                   {var,{253,47},'State0'}]}},
          {debug_line,254,62},
          {match,
              {254,5},
              {var,{254,5},'State'},
              {call,
                  {254,27},
                  {atom,{254,27},add_edge},
                  [{var,{254,36},'State1'},
                   {var,{254,44},'Src'},
                   {var,{254,49},'Dst'},
                   {block,0,
                       [{tuple,
                            {254,54},
                            [{atom,{254,55},extract},
                             {var,{254,63},'Element'}]}]}]}},
          {debug_line,255,63},
          {call,
              {255,5},
              {atom,{255,5},extract_status_for_element},
              [{var,{255,32},'Element'},
               {var,{255,41},'Src'},
               {var,{255,46},'Dst'},
               {var,{255,51},'State'}]}]}]}.
{function,
 {257,1},
 extract_status_for_element,4,
 [{clause,
   {257,1},
   [{var,{257,1},'_'},{var,{257,1},'_'},{var,{257,1},'_'},{var,{257,1},'_'}],
   [[{call,
      {257,1},
      {remote,{257,1},{atom,{257,1},fake},{atom,{257,1},is_beam_bif_info}},
      []}]],
   [{debug_line,257,64},{atom,{257,1},ignore}]},
  {clause,
   {257,1},
   [{var,{257,28},'Element'},
    {var,{257,37},'Src'},
    {var,{257,42},'Dst'},
    {var,{257,47},'State0'}],
   [],
   [{debug_line,258,65},
    {atom,{258,6},skip},
    {debug_line,259,66},
    {match,
     {259,5},
     {var,{259,5},'InEdges'},
     {call,
      {259,15},
      {remote,{259,27},{atom,{259,15},beam_digraph},{atom,{259,28},in_edges}},
      [{var,{259,37},'State0'},{var,{259,45},'Src'}]}},
    {debug_line,260,67},
    {atom,{260,6},skip},
    {debug_line,261,68},
    {match,
     {261,5},
     {var,{261,5},'Embeddings'},
     {lc,
      {261,18},
      {block,0,[{var,{261,19},'Var'}]},
      [{block,0,[{atom,{261,48},true}]},
       {generate,
        {261,45},
        {tuple,
         {261,26},
         [{var,{261,27},'Var'},
          {var,{261,31},'_'},
          {tuple,{261,33},[{atom,{261,34},embed},{var,{261,40},'SE'}]}]},
        {var,{261,48},'InEdges'}},
       {block,0,[{atom,{261,65},true}]},
       {op,{261,65},'=:=',{var,{261,57},'Element'},{var,{261,69},'SE'}}]}},
    {debug_line,262,69},
    {match,
     {262,5},
     {var,{262,5},'Extracts'},
     {lc,
      {262,16},
      {block,0,[{var,{262,17},'Ex'}]},
      [{block,0,[{atom,{262,47},true}]},
       {generate,
        {262,44},
        {match,
         {262,23},
         {tuple,
          {262,23},
          [{var,{262,24},'_'},
           {var,{262,26},'_'},
           {tuple,{262,28},[{atom,{262,29},extract},{var,{262,37},'_'}]}]},
         {var,{262,41},'Ex'}},
        {var,{262,47},'InEdges'}}]}},
    {debug_line,263,70},
    {'case',
     {263,5},
     {tuple,{263,10},[{var,{263,11},'Embeddings'},{var,{263,22},'Extracts'}]},
     [{clause,
       {264,9},
       [{tuple,{264,9},[{nil,{264,10}},{nil,{264,13}}]}],
       [],
       [{debug_line,266,71},
        {atom,{266,14},skip},
        {debug_line,267,72},
        {atom,{267,14},skip},
        {debug_line,268,73},
        {call,
         {268,27},
         {atom,{268,27},set_status},
         [{var,{268,38},'Dst'},
          {atom,{268,43},aliased},
          {var,{268,52},'State0'}]}]},
      {clause,
       {269,9},
       [{tuple,
         {269,9},
         [{cons,{269,10},{var,{269,11},'Var'},{nil,{269,14}}},
          {nil,{269,16}}]}],
       [],
       [{debug_line,271,74},
        {atom,{271,14},skip},
        {debug_line,272,75},
        {atom,{272,14},skip},
        {debug_line,273,76},
        {atom,{273,14},skip},
        {debug_line,274,77},
        {atom,{274,14},skip},
        {debug_line,275,78},
        {match,
         {275,13},
         {var,{275,13},'State'},
         {call,
          {275,21},
          {atom,{275,21},set_status},
          [{var,{275,32},'Dst'},
           {block,0,
            [{call,
              {275,37},
              {remote,
               {275,49},
               {atom,{275,37},beam_digraph},
               {atom,{275,50},vertex}},
              [{var,{275,57},'State0'},
               {var,{275,65},'Var'},
               {atom,{275,70},unique}]}]},
           {var,{276,32},'State0'}]}},
        {debug_line,277,79},
        {atom,{277,14},skip},
        {debug_line,278,80},
        {var,{278,27},'State'}]},
      {clause,
       {279,9},
       [{tuple,
         {279,9},
         [{nil,{279,10}},
          {cons,
           {279,14},
           {tuple,
            {279,15},
            [{var,{279,16},'Aggregate'},
             {var,{279,26},'_Dst'},
             {tuple,{279,31},[{atom,{279,32},extract},{var,{279,40},'E'}]}]},
           {nil,{279,43}}}]}],
       [],
       [{debug_line,281,81},
        {match,
         {281,13},
         {var,{281,13},'S'},
         {call,
          {281,17},
          {atom,{281,17},get_status_of_extracted_element},
          [{var,{281,49},'Aggregate'},
           {block,0,
            [{cons,
              {281,60},
              {var,{281,61},'E'},
              {cons,{281,63},{var,{281,63},'Element'},{nil,{281,70}}}}]},
           {var,{281,73},'State0'}]}},
        {debug_line,282,82},
        {atom,{282,14},skip},
        {debug_line,283,83},
        {call,
         {283,27},
         {atom,{283,27},set_status},
         [{var,{283,38},'Dst'},
          {var,{283,43},'S'},
          {var,{283,46},'State0'}]}]}]}]}]}.
{function,
    {287,1},
    get_status_of_extracted_element,3,
    [{clause,
         {287,1},
         [{var,{287,1},'_'},{var,{287,1},'_'},{var,{287,1},'_'}],
         [[{call,
               {287,1},
               {remote,
                   {287,1},
                   {atom,{287,1},fake},
                   {atom,{287,1},is_beam_bif_info}},
               []}]],
         [{debug_line,287,84},{atom,{287,1},ignore}]},
     {clause,
         {287,1},
         [{var,{287,33},'Aggregate'},
          {match,
              {287,44},
              {cons,{287,44},{var,{287,45},'First'},{var,{287,51},'Rest'}},
              {var,{287,57},'Elements'}},
          {var,{287,67},'State'}],
         [],
         [{debug_line,288,85},
          {atom,{288,6},skip},
          {debug_line,293,86},
          {atom,{293,6},skip},
          {debug_line,294,87},
          {atom,{294,6},skip},
          {debug_line,295,88},
          {match,
              {295,5},
              {var,{295,5},'InEdges'},
              {call,
                  {295,15},
                  {remote,
                      {295,27},
                      {atom,{295,15},beam_digraph},
                      {atom,{295,28},in_edges}},
                  [{var,{295,37},'State'},{var,{295,44},'Aggregate'}]}},
          {debug_line,296,89},
          {match,
              {296,5},
              {var,{296,5},'Embeddings'},
              {lc,{296,18},
                  {block,0,[{var,{296,19},'Src'}]},
                  [{block,0,[{atom,{296,47},true}]},
                   {generate,
                       {296,44},
                       {tuple,
                           {296,26},
                           [{var,{296,27},'Src'},
                            {var,{296,31},'_'},
                            {tuple,
                                {296,33},
                                [{atom,{296,34},embed},{var,{296,40},'E'}]}]},
                       {var,{296,47},'InEdges'}},
                   {block,0,[{atom,{296,62},true}]},
                   {op,{296,62},
                       '=:=',
                       {var,{296,56},'First'},
                       {var,{296,66},'E'}}]}},
          {debug_line,297,90},
          {match,
              {297,5},
              {var,{297,5},'Extracts'},
              {lc,{297,16},
                  {block,0,
                      [{tuple,
                           {297,17},
                           [{var,{297,18},'Src'},{var,{297,22},'E'}]}]},
                  [{block,0,[{atom,{297,51},true}]},
                   {generate,
                       {297,48},
                       {tuple,
                           {297,28},
                           [{var,{297,29},'Src'},
                            {var,{297,33},'_'},
                            {tuple,
                                {297,35},
                                [{atom,{297,36},extract},
                                 {var,{297,44},'E'}]}]},
                       {var,{297,51},'InEdges'}}]}},
          {debug_line,298,91},
          {atom,{298,6},skip},
          {debug_line,299,92},
          {atom,{299,6},skip},
          {debug_line,300,93},
          {'case',
              {300,5},
              {tuple,
                  {300,10},
                  [{var,{300,11},'Embeddings'},{var,{300,22},'Extracts'}]},
              [{clause,
                   {301,9},
                   [{tuple,
                        {301,9},
                        [{cons,
                             {301,10},
                             {var,{301,11},'Embedding'},
                             {nil,{301,20}}},
                         {nil,{301,22}}]}],
                   [],
                   [{debug_line,302,94},
                    {call,
                        {302,13},
                        {atom,{302,13},get_status_of_extracted_element},
                        [{var,{302,45},'Embedding'},
                         {var,{302,56},'Rest'},
                         {var,{302,62},'State'}]}]},
               {clause,
                   {303,9},
                   [{tuple,
                        {303,9},
                        [{nil,{303,10}},
                         {cons,
                             {303,13},
                             {tuple,
                                 {303,14},
                                 [{var,{303,15},'Extract'},
                                  {var,{303,23},'E'}]},
                             {nil,{303,25}}}]}],
                   [],
                   [{debug_line,304,95},
                    {call,
                        {304,13},
                        {atom,{304,13},get_status_of_extracted_element},
                        [{var,{304,45},'Extract'},
                         {block,0,
                             [{cons,
                                  {304,54},
                                  {var,{304,55},'E'},
                                  {var,{304,57},'Elements'}}]},
                         {var,{304,68},'State'}]}]},
               {clause,
                   {305,9},
                   [{tuple,{305,9},[{nil,{305,10}},{nil,{305,13}}]}],
                   [],
                   [{debug_line,306,96},{atom,{306,13},aliased}]}]}]},
     {clause,
         {308,1},
         [{var,{308,33},'Aggregate'},{nil,{308,44}},{var,{308,48},'State'}],
         [],
         [{debug_line,309,97},
          {atom,{309,6},skip},
          {debug_line,310,98},
          {match,
              {310,5},
              {var,{310,5},'S'},
              {call,
                  {310,9},
                  {remote,
                      {310,21},
                      {atom,{310,9},beam_digraph},
                      {atom,{310,22},vertex}},
                  [{var,{310,29},'State'},
                   {var,{310,36},'Aggregate'},
                   {atom,{310,47},unique}]}},
          {debug_line,311,99},
          {atom,{311,6},skip},
          {debug_line,312,100},
          {var,{312,5},'S'}]}]}.
{attribute,{316,2},
           spec,
           {{forward_status,2},
            [{type,{316,21},
                   'fun',
                   [{type,{316,21},
                          product,
                          [{user_type,{316,22},sharing_state,[]},
                           {user_type,{316,39},sharing_state,[]}]},
                    {user_type,{316,59},sharing_state,[]}]}]}}.
{function,
 {317,1},
 forward_status,2,
 [{clause,
   {317,1},
   [{var,{317,1},'_'},{var,{317,1},'_'}],
   [[{call,
      {317,1},
      {remote,{317,1},{atom,{317,1},fake},{atom,{317,1},is_beam_bif_info}},
      []}]],
   [{debug_line,317,101},{atom,{317,1},ignore}]},
  {clause,
   {317,1},
   [{var,{317,16},'Main'},{var,{317,22},'Other'}],
   [],
   [{debug_line,318,102},
    {atom,{318,6},skip},
    {debug_line,319,103},
    {var,{319,19},'Main'},
    {debug_line,320,104},
    {var,{320,19},'Other'},
    {debug_line,321,105},
    {match,
     {321,5},
     {var,{321,5},'R'},
     {call,
      {321,9},
      {remote,{321,21},{atom,{321,9},beam_digraph},{atom,{321,22},foldv}},
      [{var,{322,11},'Main'},
       {block,0,
        [{debug_line,323,106},
         {'fun',
          {323,11},
          {clauses,
           [{clause,
             {323,14},
             [{match,
               {323,15},
               {tuple,{323,15},[{atom,{323,15},b_var},{var,{323,15},'_'}]},
               {var,{323,24},'V'}},
              {var,{323,27},'S'},
              {var,{323,30},'Acc'}],
             [[{op,
                {323,42},
                '=/=',
                {var,{323,40},'S'},
                {atom,{323,46},aliased}}]],
             [{debug_line,324,107},
              {'maybe',
               {324,19},
               [{debug_line,325,108},
                {maybe_match,
                 {325,28},
                 {atom,{325,23},true},
                 {call,
                  {325,31},
                  {remote,
                   {325,43},
                   {atom,{325,31},beam_digraph},
                   {atom,{325,44},has_vertex}},
                  [{var,{325,55},'Other'},{var,{325,62},'V'}]}},
                {debug_line,326,109},
                {maybe_match,
                 {326,31},
                 {atom,{326,23},aliased},
                 {call,
                  {326,34},
                  {atom,{326,34},get_status},
                  [{var,{326,45},'V'},{var,{326,48},'Other'}]}},
                {debug_line,327,110},
                {call,
                 {327,23},
                 {atom,{327,23},set_status},
                 [{var,{327,34},'V'},
                  {atom,{327,37},aliased},
                  {var,{327,46},'Acc'}]}],
               {'else',
                {328,19},
                [{clause,
                  {329,23},
                  [{var,{329,23},'_'}],
                  [],
                  [{debug_line,330,111},{var,{330,27},'Acc'}]}]}}]},
            {clause,
             {332,14},
             [{var,{332,15},'_'},{var,{332,18},'_'},{var,{332,21},'Acc'}],
             [],
             [{debug_line,333,112},{var,{333,19},'Acc'}]}]}}]},
       {var,{334,16},'Main'}]}},
    {debug_line,335,113},
    {var,{335,19},'R'}]}]}.
{attribute,
    {338,2},
    spec,
    {{get_status,2},
     [{type,
          {338,17},
          'fun',
          [{type,
               {338,17},
               product,
               [{remote_type,
                    {338,18},
                    [{atom,{338,18},beam_ssa},{atom,{338,27},b_var},[]]},
                {user_type,{338,36},sharing_state,[]}]},
           {user_type,{339,11},sharing_status,[]}]}]}}.
{function,{340,1},
          get_status,2,
          [{clause,{340,1},
                   [{var,{340,1},'_'},{var,{340,1},'_'}],
                   [[{call,{340,1},
                           {remote,{340,1},
                                   {atom,{340,1},fake},
                                   {atom,{340,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,340,114},{atom,{340,1},ignore}]},
           {clause,{340,1},
                   [{match,{340,12},
                           {var,{340,12},'V'},
                           {tuple,{340,14},
                                  [{atom,{340,14},b_var},{var,{340,14},'_'}]}},
                    {var,{340,24},'State'}],
                   [],
                   [{debug_line,341,115},
                    {call,{341,5},
                          {remote,{341,17},
                                  {atom,{341,5},beam_digraph},
                                  {atom,{341,18},vertex}},
                          [{var,{341,25},'State'},
                           {var,{341,32},'V'},
                           {atom,{341,35},unique}]}]}]}.
{attribute,{343,2},
           spec,
           {{merge,2},
            [{type,{343,12},
                   'fun',
                   [{type,{343,12},
                          product,
                          [{user_type,{343,13},sharing_state,[]},
                           {user_type,{343,30},sharing_state,[]}]},
                    {user_type,{343,50},sharing_state,[]}]}]}}.
{function,
    {344,1},
    merge,2,
    [{clause,
         {344,1},
         [{var,{344,1},'_'},{var,{344,1},'_'}],
         [[{call,
               {344,1},
               {remote,
                   {344,1},
                   {atom,{344,1},fake},
                   {atom,{344,1},is_beam_bif_info}},
               []}]],
         [{debug_line,344,116},{atom,{344,1},ignore}]},
     {clause,
         {344,1},
         [{var,{344,7},'StateA'},{var,{344,15},'StateB'}],
         [],
         [{debug_line,345,117},
          {atom,{345,6},skip},
          {debug_line,346,118},
          {var,{346,19},'StateA'},
          {debug_line,347,119},
          {var,{347,19},'StateB'},
          {debug_line,348,120},
          {match,
              {348,5},
              {var,{348,5},'SizeA'},
              {call,
                  {348,13},
                  {remote,
                      {348,25},
                      {atom,{348,13},beam_digraph},
                      {atom,{348,26},no_vertices}},
                  [{var,{348,38},'StateA'}]}},
          {debug_line,349,121},
          {match,
              {349,5},
              {var,{349,5},'SizeB'},
              {call,
                  {349,13},
                  {remote,
                      {349,25},
                      {atom,{349,13},beam_digraph},
                      {atom,{349,26},no_vertices}},
                  [{var,{349,38},'StateB'}]}},
          {debug_line,351,122},
          {match,
              {351,5},
              {tuple,{351,5},[{var,{351,6},'Small'},{var,{351,12},'Large'}]},
              {'if',
                  {351,21},
                  [{clause,
                       {351,24},
                       [],
                       [[{op,{351,30},
                             '<',
                             {var,{351,24},'SizeA'},
                             {var,{351,32},'SizeB'}}]],
                       [{debug_line,352,123},
                        {tuple,
                            {352,29},
                            [{var,{352,30},'StateA'},
                             {var,{352,37},'StateB'}]}]},
                   {clause,
                       {353,24},
                       [],
                       [[{atom,{353,24},true}]],
                       [{debug_line,354,124},
                        {tuple,
                            {354,29},
                            [{var,{354,30},'StateB'},
                             {var,{354,37},'StateA'}]}]}]}},
          {debug_line,356,125},
          {atom,{356,6},skip},
          {debug_line,357,126},
          {atom,{357,6},skip},
          {debug_line,358,127},
          {atom,{358,6},skip},
          {debug_line,359,128},
          {atom,{359,6},skip},
          {debug_line,360,129},
          {atom,{360,6},skip},
          {debug_line,361,130},
          {match,
              {361,5},
              {var,{361,5},'R'},
              {call,
                  {361,9},
                  {atom,{361,9},merge},
                  [{var,{361,15},'Large'},
                   {var,{361,22},'Small'},
                   {block,0,
                       [{call,
                            {361,29},
                            {remote,
                                {361,41},
                                {atom,{361,29},beam_digraph},
                                {atom,{361,42},vertices}},
                            [{var,{361,51},'Small'}]}]},
                   {block,0,
                       [{debug_line,362,131},
                        {call,
                            {362,15},
                            {remote,
                                {362,19},
                                {atom,{362,15},sets},
                                {atom,{362,20},new}},
                            []}]},
                   {block,0,
                       [{call,
                            {362,27},
                            {remote,
                                {362,31},
                                {atom,{362,27},sets},
                                {atom,{362,32},new}},
                            []}]}]}},
          {debug_line,363,132},
          {var,{363,19},'R'}]}]}.
{function,
    {365,1},
    merge,5,
    [{clause,
         {365,1},
         [{var,{365,1},'_'},
          {var,{365,1},'_'},
          {var,{365,1},'_'},
          {var,{365,1},'_'},
          {var,{365,1},'_'}],
         [[{call,
               {365,1},
               {remote,
                   {365,1},
                   {atom,{365,1},fake},
                   {atom,{365,1},is_beam_bif_info}},
               []}]],
         [{debug_line,365,133},{atom,{365,1},ignore}]},
     {clause,
         {365,1},
         [{var,{365,7},'Dest'},
          {var,{365,13},'Source'},
          {cons,
              {365,21},
              {tuple,{365,22},[{var,{365,23},'V'},{var,{365,25},'VStatus'}]},
              {var,{365,34},'Vertices'}},
          {var,{365,45},'Edges0'},
          {var,{365,53},'Forced'}],
         [],
         [{debug_line,367,134},
          {match,
              {367,5},
              {var,{367,5},'Edges'},
              {call,
                  {367,13},
                  {atom,{367,13},accumulate_edges},
                  [{var,{367,30},'V'},
                   {var,{367,33},'Source'},
                   {var,{367,41},'Edges0'}]}},
          {debug_line,368,135},
          {match,
              {368,5},
              {var,{368,5},'DestStatus'},
              {call,
                  {368,18},
                  {remote,
                      {368,30},
                      {atom,{368,18},beam_digraph},
                      {atom,{368,31},vertex}},
                  [{var,{368,38},'Dest'},
                   {var,{368,44},'V'},
                   {atom,{368,47},false}]}},
          {debug_line,369,136},
          {'case',
              {369,5},
              {tuple,
                  {369,10},
                  [{var,{369,11},'DestStatus'},{var,{369,22},'VStatus'}]},
              [{clause,
                   {370,9},
                   [{tuple,
                        {370,9},
                        [{var,{370,10},'Status'},{var,{370,17},'Status'}]}],
                   [],
                   [{debug_line,372,137},
                    {call,
                        {372,13},
                        {atom,{372,13},merge},
                        [{var,{372,19},'Dest'},
                         {var,{372,25},'Source'},
                         {var,{372,33},'Vertices'},
                         {var,{372,43},'Edges'},
                         {var,{372,50},'Forced'}]}]},
               {clause,
                   {373,9},
                   [{tuple,
                        {373,9},
                        [{atom,{373,10},false},{var,{373,16},'Status'}]}],
                   [],
                   [{debug_line,375,138},
                    {call,
                        {375,13},
                        {atom,{375,13},merge},
                        [{block,0,
                             [{call,
                                  {375,19},
                                  {atom,{375,19},add_vertex},
                                  [{var,{375,30},'Dest'},
                                   {var,{375,36},'V'},
                                   {var,{375,39},'Status'}]}]},
                         {var,{376,19},'Source'},
                         {var,{376,27},'Vertices'},
                         {var,{376,37},'Edges'},
                         {var,{376,44},'Forced'}]}]},
               {clause,
                   {377,9},
                   [{tuple,
                        {377,9},
                        [{atom,{377,10},unique},{atom,{377,17},aliased}]}],
                   [],
                   [{debug_line,379,139},
                    {call,
                        {379,13},
                        {atom,{379,13},merge},
                        [{block,0,
                             [{call,
                                  {379,19},
                                  {atom,{379,19},set_status},
                                  [{var,{379,30},'V'},
                                   {atom,{379,33},aliased},
                                   {var,{379,42},'Dest'}]}]},
                         {var,{379,49},'Source'},
                         {var,{380,19},'Vertices'},
                         {var,{380,29},'Edges'},
                         {var,{380,36},'Forced'}]}]},
               {clause,
                   {381,9},
                   [{tuple,
                        {381,9},
                        [{atom,{381,10},aliased},{atom,{381,18},unique}]}],
                   [],
                   [{debug_line,384,140},
                    {call,
                        {384,13},
                        {atom,{384,13},merge},
                        [{var,{384,19},'Dest'},
                         {var,{384,25},'Source'},
                         {var,{384,33},'Vertices'},
                         {var,{384,43},'Edges'},
                         {block,0,
                             [{call,
                                  {384,50},
                                  {remote,
                                      {384,54},
                                      {atom,{384,50},sets},
                                      {atom,{384,55},add_element}},
                                  [{var,{384,67},'V'},
                                   {var,{384,70},'Forced'}]}]}]}]},
               {clause,
                   {385,9},
                   [{tuple,
                        {385,9},
                        [{atom,{385,10},aliased},{atom,{385,18},no_info}]}],
                   [],
                   [{debug_line,387,141},
                    {call,
                        {387,13},
                        {atom,{387,13},merge},
                        [{var,{387,19},'Dest'},
                         {var,{387,25},'Source'},
                         {var,{387,33},'Vertices'},
                         {var,{387,43},'Edges'},
                         {var,{387,50},'Forced'}]}]},
               {clause,
                   {388,9},
                   [{tuple,
                        {388,9},
                        [{atom,{388,10},no_info},{atom,{388,18},aliased}]}],
                   [],
                   [{debug_line,390,142},
                    {call,
                        {390,13},
                        {atom,{390,13},merge},
                        [{block,0,
                             [{call,
                                  {390,19},
                                  {atom,{390,19},set_status},
                                  [{var,{390,30},'V'},
                                   {atom,{390,33},aliased},
                                   {var,{390,42},'Dest'}]}]},
                         {var,{390,49},'Source'},
                         {var,{391,19},'Vertices'},
                         {var,{391,29},'Edges'},
                         {var,{391,36},'Forced'}]}]}]}]},
     {clause,
         {393,1},
         [{var,{393,7},'Dest0'},
          {var,{393,14},'_Source'},
          {nil,{393,23}},
          {var,{393,27},'Edges'},
          {var,{393,34},'Forced'}],
         [],
         [{debug_line,394,143},
          {call,
              {394,5},
              {atom,{394,5},merge1},
              [{var,{394,12},'Dest0'},
               {var,{394,19},'_Source'},
               {block,0,
                   [{call,
                        {394,28},
                        {remote,
                            {394,32},
                            {atom,{394,28},sets},
                            {atom,{394,33},to_list}},
                        [{var,{394,41},'Edges'}]}]},
               {block,0,
                   [{debug_line,395,144},
                    {call,
                        {395,12},
                        {remote,
                            {395,16},
                            {atom,{395,12},sets},
                            {atom,{395,17},new}},
                        []}]},
               {var,{395,24},'Forced'}]}]}]}.
{function,
 {397,1},
 merge1,5,
 [{clause,
   {397,1},
   [{var,{397,1},'_'},
    {var,{397,1},'_'},
    {var,{397,1},'_'},
    {var,{397,1},'_'},
    {var,{397,1},'_'}],
   [[{call,
      {397,1},
      {remote,{397,1},{atom,{397,1},fake},{atom,{397,1},is_beam_bif_info}},
      []}]],
   [{debug_line,397,145},{atom,{397,1},ignore}]},
  {clause,
   {397,1},
   [{var,{397,8},'Dest0'},
    {var,{397,15},'Source'},
    {cons,
     {397,23},
     {tuple,
      {397,24},
      [{atom,{397,25},plain},{var,{397,31},'To'},{var,{397,34},'Lbl'}]},
     {var,{397,39},'Edges'}},
    {var,{397,47},'Fixups'},
    {var,{397,55},'Forced'}],
   [],
   [{debug_line,398,146},
    {atom,{398,6},skip},
    {debug_line,399,147},
    {match,
     {399,5},
     {var,{399,5},'Dest'},
     {call,
      {399,12},
      {atom,{399,12},add_edge},
      [{var,{399,21},'Dest0'},
       {atom,{399,28},plain},
       {var,{399,35},'To'},
       {var,{399,39},'Lbl'}]}},
    {debug_line,400,148},
    {call,
     {400,5},
     {atom,{400,5},merge1},
     [{var,{400,12},'Dest'},
      {var,{400,18},'Source'},
      {var,{400,26},'Edges'},
      {var,{400,33},'Fixups'},
      {var,{400,41},'Forced'}]}]},
  {clause,
   {401,1},
   [{var,{401,8},'Dest0'},
    {var,{401,15},'Source'},
    {cons,
     {401,23},
     {match,
      {401,24},
      {tuple,
       {401,24},
       [{var,{401,25},'From'},{var,{401,30},'To'},{var,{401,33},'Lbl'}]},
      {var,{401,38},'Edge'}},
     {var,{401,43},'Edges'}},
    {var,{401,51},'Fixups'},
    {var,{401,59},'Forced'}],
   [],
   [{debug_line,402,149},
    {atom,{402,6},skip},
    {debug_line,403,150},
    {match,
     {403,5},
     {var,{403,5},'OutEdges'},
     {call,
      {403,16},
      {remote,{403,28},{atom,{403,16},beam_digraph},{atom,{403,29},out_edges}},
      [{var,{403,39},'Dest0'},{var,{403,46},'From'}]}},
    {debug_line,404,151},
    {'case',
     {404,5},
     {tuple,
      {404,10},
      [{call,
        {404,11},
        {remote,{404,18},{atom,{404,11},ordsets},{atom,{404,19},is_element}},
        [{var,{404,30},'Edge'},{var,{404,36},'OutEdges'}]},
       {call,
        {404,46},
        {remote,{404,53},{atom,{404,46},ordsets},{atom,{404,54},is_empty}},
        [{var,{404,63},'OutEdges'}]}]},
     [{clause,
       {405,9},
       [{tuple,{405,9},[{atom,{405,10},true},{var,{405,15},'_'}]}],
       [],
       [{debug_line,406,152},
        {atom,{406,14},skip},
        {debug_line,407,153},
        {call,
         {407,13},
         {atom,{407,13},merge1},
         [{var,{407,20},'Dest0'},
          {var,{407,27},'Source'},
          {var,{407,35},'Edges'},
          {var,{407,42},'Fixups'},
          {var,{407,50},'Forced'}]}]},
      {clause,
       {408,9},
       [{tuple,{408,9},[{atom,{408,10},false},{atom,{408,16},true}]}],
       [],
       [{debug_line,409,154},
        {atom,{409,14},skip},
        {debug_line,410,155},
        {match,
         {410,13},
         {var,{410,13},'Dest'},
         {call,
          {410,20},
          {atom,{410,20},add_edge},
          [{var,{410,29},'Dest0'},
           {var,{410,36},'From'},
           {var,{410,42},'To'},
           {var,{410,46},'Lbl'}]}},
        {debug_line,411,156},
        {call,
         {411,13},
         {atom,{411,13},merge1},
         [{var,{411,20},'Dest'},
          {var,{411,26},'Source'},
          {var,{411,34},'Edges'},
          {var,{411,41},'Fixups'},
          {var,{411,49},'Forced'}]}]},
      {clause,
       {412,9},
       [{tuple,{412,9},[{atom,{412,10},false},{atom,{412,16},false}]}],
       [],
       [{debug_line,413,157},
        {atom,{413,14},skip},
        {debug_line,414,158},
        {atom,{414,14},skip},
        {debug_line,415,159},
        {'case',
         {415,13},
         {call,
          {415,18},
          {remote,{415,23},{atom,{415,18},lists},{atom,{415,24},keyfind}},
          [{var,{415,32},'Lbl'},
           {integer,{415,37},3},
           {var,{415,40},'OutEdges'}]},
         [{clause,
           {416,17},
           [{atom,{416,17},false}],
           [],
           [{debug_line,417,160},
            {atom,{417,22},skip},
            {debug_line,418,161},
            {match,
             {418,21},
             {var,{418,21},'Dest'},
             {call,
              {418,28},
              {atom,{418,28},add_edge},
              [{var,{418,37},'Dest0'},
               {var,{418,44},'From'},
               {var,{418,50},'To'},
               {var,{418,54},'Lbl'}]}},
            {debug_line,419,162},
            {call,
             {419,21},
             {atom,{419,21},merge1},
             [{var,{419,28},'Dest'},
              {var,{419,34},'Source'},
              {var,{419,42},'Edges'},
              {var,{419,49},'Fixups'},
              {var,{419,57},'Forced'}]}]},
          {clause,
           {420,17},
           [{var,{420,17},'_'}],
           [],
           [{debug_line,421,163},
            {atom,{421,22},skip},
            {debug_line,423,164},
            {match,
             {423,21},
             {var,{423,21},'Dest'},
             {call,
              {423,28},
              {atom,{423,28},add_edge},
              [{var,{423,37},'Dest0'},
               {var,{423,44},'From'},
               {var,{423,50},'To'},
               {var,{423,54},'Lbl'}]}},
            {debug_line,424,165},
            {call,
             {424,21},
             {atom,{424,21},merge1},
             [{var,{424,28},'Dest'},
              {var,{424,34},'Source'},
              {var,{424,42},'Edges'},
              {block,0,
               [{debug_line,425,166},
                {call,
                 {425,28},
                 {remote,
                  {425,32},
                  {atom,{425,28},sets},
                  {atom,{425,33},add_element}},
                 [{block,0,
                   [{tuple,
                     {425,45},
                     [{atom,{425,46},alias},
                      {var,{425,52},'From'},
                      {var,{425,57},'Lbl'}]}]},
                  {var,{425,63},'Fixups'}]}]},
              {var,{425,72},'Forced'}]}]}]}]}]}]},
  {clause,
   {428,1},
   [{var,{428,8},'Dest'},
    {var,{428,14},'_Source'},
    {nil,{428,23}},
    {var,{428,27},'Fixups'},
    {var,{428,35},'Forced'}],
   [],
   [{debug_line,429,167},
    {call,
     {429,5},
     {atom,{429,5},merge2},
     [{var,{429,12},'Dest'},
      {var,{429,18},'_Source'},
      {block,0,
       [{call,
         {429,27},
         {remote,{429,31},{atom,{429,27},sets},{atom,{429,32},to_list}},
         [{var,{429,40},'Fixups'}]}]},
      {var,{429,49},'Forced'}]}]}]}.
{function,
 {431,1},
 merge2,4,
 [{clause,
   {431,1},
   [{var,{431,1},'_'},{var,{431,1},'_'},{var,{431,1},'_'},{var,{431,1},'_'}],
   [[{call,
      {431,1},
      {remote,{431,1},{atom,{431,1},fake},{atom,{431,1},is_beam_bif_info}},
      []}]],
   [{debug_line,431,168},{atom,{431,1},ignore}]},
  {clause,
   {431,1},
   [{var,{431,8},'Dest0'},
    {var,{431,15},'_Source'},
    {cons,
     {431,24},
     {tuple,
      {431,25},
      [{atom,{431,26},alias},{var,{431,32},'From'},{var,{431,37},'Lbl'}]},
     {var,{431,42},'Fixups'}},
    {var,{431,51},'Forced'}],
   [],
   [{debug_line,432,169},
    {match,
     {432,5},
     {var,{432,5},'OutEdges'},
     {call,
      {432,16},
      {remote,{432,28},{atom,{432,16},beam_digraph},{atom,{432,29},out_edges}},
      [{var,{432,39},'Dest0'},{var,{432,46},'From'}]}},
    {debug_line,433,170},
    {match,
     {433,5},
     {var,{433,5},'Dest'},
     {call,
      {433,12},
      {remote,{433,12},{atom,{433,12},lists},{atom,{433,12},foldl}},
      [{block,0,
        [{'fun',
          {433,18},
          {clauses,
           [{clause,
             {433,21},
             [{tuple,
               {433,22},
               [{tuple,{433,23},[{atom,{433,23},b_var},{var,{433,23},'_'}]},
                {var,{433,32},'To'},
                {var,{433,35},'L'}]},
              {var,{433,39},'Acc'}],
             [[{op,{433,51},'=:=',{var,{433,49},'L'},{var,{433,55},'Lbl'}}]],
             [{debug_line,434,171},
              {call,
               {434,26},
               {atom,{434,26},set_status},
               [{var,{434,37},'To'},
                {atom,{434,41},aliased},
                {var,{434,50},'Acc'}]}]},
            {clause,
             {435,21},
             [{var,{435,22},'_'},{var,{435,25},'Acc'}],
             [],
             [{debug_line,436,172},{var,{436,26},'Acc'}]}]}}]},
       {var,{437,23},'Dest0'},
       {var,{437,30},'OutEdges'}]}},
    {debug_line,438,173},
    {call,
     {438,5},
     {atom,{438,5},merge2},
     [{var,{438,12},'Dest'},
      {var,{438,18},'_Source'},
      {var,{438,27},'Fixups'},
      {var,{438,35},'Forced'}]}]},
  {clause,
   {439,1},
   [{var,{439,8},'Dest0'},
    {var,{439,15},'_Source'},
    {nil,{439,24}},
    {var,{439,28},'Forced'}],
   [],
   [{debug_line,440,174},
    {match,
     {440,5},
     {var,{440,5},'Dest'},
     {call,
      {440,12},
      {remote,{440,12},{atom,{440,12},lists},{atom,{440,12},foldl}},
      [{block,0,[{'fun',{440,18},{function,set_alias,2}}]},
       {var,{441,18},'Dest0'},
       {block,0,
        [{debug_line,442,175},
         {lc,
          {442,18},
          {block,0,
           [{call,
             {442,19},
             {atom,{442,19},get_alias_edges},
             [{var,{442,35},'V'},{var,{442,38},'Dest0'}]}]},
          [{block,0,[{atom,{442,53},true}]},
           {generate,
            {442,50},
            {var,{442,48},'V'},
            {call,
             {442,53},
             {remote,{442,57},{atom,{442,53},sets},{atom,{442,58},to_list}},
             [{var,{442,66},'Forced'}]}}]}]}]}},
    {debug_line,443,176},
    {var,{443,19},'Dest'}]}]}.
{function,
    {445,1},
    accumulate_edges,3,
    [{clause,
         {445,1},
         [{var,{445,1},'_'},{var,{445,1},'_'},{var,{445,1},'_'}],
         [[{call,
               {445,1},
               {remote,
                   {445,1},
                   {atom,{445,1},fake},
                   {atom,{445,1},is_beam_bif_info}},
               []}]],
         [{debug_line,445,177},{atom,{445,1},ignore}]},
     {clause,
         {445,1},
         [{var,{445,18},'V'},{var,{445,21},'State'},{var,{445,28},'Edges0'}],
         [],
         [{debug_line,446,178},
          {match,
              {446,5},
              {var,{446,5},'InEdges'},
              {call,
                  {446,15},
                  {remote,
                      {446,27},
                      {atom,{446,15},beam_digraph},
                      {atom,{446,28},in_edges}},
                  [{var,{446,37},'State'},{var,{446,44},'V'}]}},
          {debug_line,447,179},
          {match,
              {447,5},
              {var,{447,5},'OutEdges'},
              {call,
                  {447,16},
                  {remote,
                      {447,28},
                      {atom,{447,16},beam_digraph},
                      {atom,{447,29},out_edges}},
                  [{var,{447,39},'State'},{var,{447,46},'V'}]}},
          {debug_line,448,180},
          {call,
              {448,5},
              {remote,{448,5},{atom,{448,5},lists},{atom,{448,5},foldl}},
              [{block,0,
                   [{'fun',
                        {448,11},
                        {function,
                            {atom,{448,15},sets},
                            {atom,{448,20},add_element},
                            {integer,{448,32},2}}}]},
               {block,0,
                   [{debug_line,449,181},
                    {call,
                        {449,11},
                        {remote,
                            {449,11},
                            {atom,{449,11},lists},
                            {atom,{449,11},foldl}},
                        [{block,0,
                             [{'fun',
                                  {449,17},
                                  {function,
                                      {atom,{449,21},sets},
                                      {atom,{449,26},add_element},
                                      {integer,{449,38},2}}}]},
                         {var,{449,41},'Edges0'},
                         {var,{449,49},'InEdges'}]}]},
               {var,{450,11},'OutEdges'}]}]}]}.
{attribute,{452,2},
           spec,
           {{new,0},
            [{type,{452,10},
                   'fun',
                   [{type,{452,10},product,[]},
                    {user_type,{452,16},sharing_state,[]}]}]}}.
{function,{453,1},
          new,0,
          [{clause,{453,1},
                   [],
                   [[{call,{453,1},
                           {remote,{453,1},
                                   {atom,{453,1},fake},
                                   {atom,{453,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,453,182},{atom,{453,1},ignore}]},
           {clause,{453,1},
                   [],[],
                   [{debug_line,454,183},
                    {call,{454,5},
                          {remote,{454,17},
                                  {atom,{454,5},beam_digraph},
                                  {atom,{454,18},new}},
                          []}]}]}.
{attribute,
    {456,2},
    spec,
    {{phi,4},
     [{type,
          {456,10},
          'fun',
          [{type,
               {456,10},
               product,
               [{remote_type,
                    {456,11},
                    [{atom,{456,11},beam_ssa},{atom,{456,20},b_var},[]]},
                {type,
                    {456,29},
                    list,
                    [{remote_type,
                         {456,30},
                         [{atom,{456,30},beam_ssa},
                          {atom,{456,39},b_var},
                          []]}]},
                {user_type,{457,11},sharing_state,[]},
                {type,{457,28},non_neg_integer,[]}]},
           {user_type,{458,13},sharing_state,[]}]}]}}.
{function,
 {459,1},
 phi,4,
 [{clause,
   {459,1},
   [{var,{459,1},'_'},{var,{459,1},'_'},{var,{459,1},'_'},{var,{459,1},'_'}],
   [[{call,
      {459,1},
      {remote,{459,1},{atom,{459,1},fake},{atom,{459,1},is_beam_bif_info}},
      []}]],
   [{debug_line,459,184},{atom,{459,1},ignore}]},
  {clause,
   {459,1},
   [{var,{459,5},'Dst'},
    {var,{459,10},'Args'},
    {var,{459,16},'State0'},
    {var,{459,24},'Cnt'}],
   [],
   [{debug_line,460,185},
    {var,{460,19},'State0'},
    {debug_line,461,186},
    {atom,{461,6},skip},
    {debug_line,462,187},
    {atom,{462,6},skip},
    {debug_line,463,188},
    {atom,{463,6},skip},
    {debug_line,464,189},
    {match,
     {464,5},
     {var,{464,5},'Structure'},
     {call,
      {464,17},
      {remote,{464,17},{atom,{464,17},lists},{atom,{464,17},foldl}},
      [{block,0,
        [{'fun',
          {464,23},
          {clauses,
           [{clause,
             {464,26},
             [{var,{464,27},'Arg'},{var,{464,32},'Acc'}],
             [],
             [{debug_line,465,190},
              {call,
               {465,31},
               {atom,{465,31},merge_in_arg},
               [{var,{465,44},'Arg'},
                {var,{465,49},'Acc'},
                {integer,{465,55},4},
                {var,{465,73},'State0'}]}]}]}}]},
       {atom,{466,28},no_info},
       {var,{466,37},'Args'}]}},
    {debug_line,467,191},
    {atom,{467,6},skip},
    {debug_line,468,192},
    {call,
     {468,5},
     {atom,{468,5},new},
     [{block,0,[{cons,{468,9},{var,{468,10},'Dst'},{nil,{468,13}}}]},
      {block,0,[{cons,{468,16},{var,{468,17},'Structure'},{nil,{468,26}}}]},
      {var,{468,29},'Cnt'},
      {var,{468,34},'State0'}]}]}]}.
{attribute,
    {474,2},
    spec,
    {{prune,3},
     [{type,
          {474,12},
          'fun',
          [{type,
               {474,12},
               product,
               [{remote_type,
                    {474,13},
                    [{atom,{474,13},sets},
                     {atom,{474,18},set},
                     [{remote_type,
                          {474,22},
                          [{atom,{474,22},beam_ssa},
                           {atom,{474,31},b_var},
                           []]}]]},
                {remote_type,
                    {475,13},
                    [{atom,{475,13},sets},
                     {atom,{475,18},set},
                     [{remote_type,
                          {475,22},
                          [{atom,{475,22},beam_ssa},
                           {atom,{475,31},b_var},
                           []]}]]},
                {user_type,{476,13},sharing_state,[]}]},
           {user_type,{476,33},sharing_state,[]}]}]}}.
{function,
 {477,1},
 prune,3,
 [{clause,
   {477,1},
   [{var,{477,1},'_'},{var,{477,1},'_'},{var,{477,1},'_'}],
   [[{call,
      {477,1},
      {remote,{477,1},{atom,{477,1},fake},{atom,{477,1},is_beam_bif_info}},
      []}]],
   [{debug_line,477,193},{atom,{477,1},ignore}]},
  {clause,
   {477,1},
   [{var,{477,7},'LiveVars'},{var,{477,17},'Killed'},{var,{477,25},'State'}],
   [],
   [{debug_line,478,194},
    {var,{478,19},'State'},
    {debug_line,479,195},
    {atom,{479,6},skip},
    {debug_line,480,196},
    {atom,{480,6},skip},
    {debug_line,481,197},
    {atom,{481,6},skip},
    {debug_line,482,198},
    {'case',
     {482,5},
     {call,
      {482,10},
      {remote,{482,14},{atom,{482,10},sets},{atom,{482,15},is_empty}},
      [{var,{482,24},'LiveVars'}]},
     [{clause,
       {483,9},
       [{atom,{483,9},false}],
       [],
       [{debug_line,484,199},
        {match,
         {484,13},
         {var,{484,13},'Work'},
         {lc,
          {484,20},
          {block,0,
           [{tuple,{484,21},[{integer,{484,23},30},{var,{484,38},'K'}]}]},
          [{block,0,[{atom,{484,49},true}]},
           {generate,
            {484,46},
            {var,{484,44},'K'},
            {call,
             {484,49},
             {remote,{484,53},{atom,{484,49},sets},{atom,{484,54},to_list}},
             [{var,{484,62},'Killed'}]}}]}},
        {debug_line,485,200},
        {match,
         {485,13},
         {var,{485,13},'R'},
         {call,
          {485,17},
          {atom,{485,17},prune},
          [{var,{485,23},'Work'},
           {var,{485,29},'Killed'},
           {var,{485,37},'LiveVars'},
           {var,{485,47},'State'}]}},
        {debug_line,486,201},
        {atom,{486,14},skip},
        {debug_line,487,202},
        {var,{487,27},'R'}]},
      {clause,
       {488,9},
       [{atom,{488,9},true}],
       [],
       [{debug_line,489,203},
        {match,
         {489,13},
         {var,{489,13},'R'},
         {call,{489,17},{atom,{489,17},new},[]}},
        {debug_line,490,204},
        {atom,{490,14},skip},
        {debug_line,491,205},
        {var,{491,13},'R'}]}]}]}]}.
{function,
 {494,1},
 prune,4,
 [{clause,
   {494,1},
   [{var,{494,1},'_'},{var,{494,1},'_'},{var,{494,1},'_'},{var,{494,1},'_'}],
   [[{call,
      {494,1},
      {remote,{494,1},{atom,{494,1},fake},{atom,{494,1},is_beam_bif_info}},
      []}]],
   [{debug_line,494,206},{atom,{494,1},ignore}]},
  {clause,
   {494,1},
   [{cons,
     {494,7},
     {tuple,{494,8},[{integer,{494,9},0},{var,{494,11},'_'}]},
     {var,{494,14},'_'}},
    {var,{494,18},'_'},
    {var,{494,21},'_'},
    {var,{494,24},'_'}],
   [],
   [{debug_line,495,207},
    {call,
     {495,5},
     {remote,{495,5},{atom,{495,5},erlang},{atom,{495,5},throw}},
     [{atom,{495,11},too_deep}]}]},
  {clause,
   {496,1},
   [{cons,
     {496,7},
     {tuple,{496,8},[{var,{496,9},'Depth'},{var,{496,15},'V'}]},
     {var,{496,18},'Work'}},
    {var,{496,25},'Killed'},
    {var,{496,33},'LiveVars'},
    {var,{496,43},'State0'}],
   [],
   [{debug_line,497,208},
    {'case',
     {497,5},
     {call,
      {497,10},
      {atom,{497,10},is_safe_to_prune},
      [{var,{497,27},'V'},{var,{497,30},'LiveVars'},{var,{497,40},'State0'}]},
     [{clause,
       {498,9},
       [{atom,{498,9},true}],
       [],
       [{debug_line,499,209},
        {match,
         {499,13},
         {var,{499,13},'State'},
         {call,
          {499,21},
          {remote,
           {499,33},
           {atom,{499,21},beam_digraph},
           {atom,{499,34},del_vertex}},
          [{var,{499,45},'State0'},{var,{499,53},'V'}]}},
        {debug_line,500,210},
        {match,
         {500,13},
         {var,{500,13},'Ins'},
         {lc,
          {500,19},
          {block,0,
           [{tuple,
             {500,20},
             [{op,{500,27},'-',{var,{500,21},'Depth'},{integer,{500,29},1}},
              {var,{500,32},'I'}]}]},
          [{block,0,[{debug_line,501,211},{atom,{501,28},true}]},
           {generate,
            {501,25},
            {var,{501,23},'I'},
            {call,
             {501,28},
             {remote,
              {501,40},
              {atom,{501,28},beam_digraph},
              {atom,{501,41},in_neighbours}},
             [{var,{501,55},'State0'},{var,{501,63},'V'}]}}]}},
        {debug_line,502,212},
        {call,
         {502,13},
         {atom,{502,13},prune},
         [{block,0,
           [{op,{502,22},'++',{var,{502,19},'Ins'},{var,{502,24},'Work'}}]},
          {var,{502,30},'Killed'},
          {var,{502,38},'LiveVars'},
          {var,{502,48},'State'}]}]},
      {clause,
       {503,9},
       [{atom,{503,9},false}],
       [],
       [{debug_line,504,213},
        {call,
         {504,13},
         {atom,{504,13},prune},
         [{var,{504,19},'Work'},
          {var,{504,25},'Killed'},
          {var,{504,33},'LiveVars'},
          {var,{504,43},'State0'}]}]}]}]},
  {clause,
   {506,1},
   [{nil,{506,7}},
    {var,{506,11},'_Killed'},
    {var,{506,20},'_LiveVars'},
    {var,{506,31},'State'}],
   [],
   [{debug_line,507,214},{var,{507,5},'State'}]}]}.
{function,
 {509,1},
 is_safe_to_prune,3,
 [{clause,
   {509,1},
   [{var,{509,1},'_'},{var,{509,1},'_'},{var,{509,1},'_'}],
   [[{call,
      {509,1},
      {remote,{509,1},{atom,{509,1},fake},{atom,{509,1},is_beam_bif_info}},
      []}]],
   [{debug_line,509,215},{atom,{509,1},ignore}]},
  {clause,
   {509,1},
   [{var,{509,18},'V'},{var,{509,21},'LiveVars'},{var,{509,31},'State'}],
   [],
   [{debug_line,510,216},
    {'case',
     {510,5},
     {call,
      {510,10},
      {remote,{510,14},{atom,{510,10},sets},{atom,{510,15},is_element}},
      [{var,{510,26},'V'},{var,{510,29},'LiveVars'}]},
     [{clause,
       {511,9},
       [{atom,{511,9},true}],
       [],
       [{debug_line,512,217},{atom,{512,13},false}]},
      {clause,
       {513,9},
       [{atom,{513,9},false}],
       [],
       [{debug_line,515,218},
        {'case',
         {515,13},
         {call,
          {515,18},
          {remote,
           {515,30},
           {atom,{515,18},beam_digraph},
           {atom,{515,31},out_neighbours}},
          [{var,{515,46},'State'},{var,{515,53},'V'}]},
         [{clause,
           {516,17},
           [{nil,{516,17}}],
           [],
           [{debug_line,517,219},{atom,{517,21},true}]},
          {clause,
           {518,17},
           [{var,{518,17},'Outs'}],
           [],
           [{debug_line,519,220},
            {call,
             {519,21},
             {remote,{519,26},{atom,{519,21},lists},{atom,{519,27},all}},
             [{block,0,
               [{'fun',
                 {519,31},
                 {clauses,
                  [{clause,
                    {519,34},
                    [{var,{519,35},'X'}],
                    [],
                    [{debug_line,520,221},
                     {call,
                      {520,39},
                      {atom,{520,39},is_safe_to_prune},
                      [{var,{520,56},'X'},
                       {var,{520,59},'LiveVars'},
                       {var,{520,69},'State'}]}]}]}}]},
              {var,{521,36},'Outs'}]}]}]}]}]}]}]}.
{attribute,
    {532,2},
    spec,
    {{prune_by_add,2},
     [{type,
          {532,19},
          'fun',
          [{type,
               {532,19},
               product,
               [{remote_type,
                    {532,20},
                    [{atom,{532,20},sets},
                     {atom,{532,25},set},
                     [{remote_type,
                          {532,29},
                          [{atom,{532,29},beam_ssa},
                           {atom,{532,38},b_var},
                           []]}]]},
                {user_type,{532,48},sharing_state,[]}]},
           {user_type,{533,22},sharing_state,[]}]}]}}.
{function,
 {534,1},
 prune_by_add,2,
 [{clause,
   {534,1},
   [{var,{534,1},'_'},{var,{534,1},'_'}],
   [[{call,
      {534,1},
      {remote,{534,1},{atom,{534,1},fake},{atom,{534,1},is_beam_bif_info}},
      []}]],
   [{debug_line,534,222},{atom,{534,1},ignore}]},
  {clause,
   {534,1},
   [{var,{534,14},'LiveVars'},{var,{534,24},'State'}],
   [],
   [{debug_line,535,223},
    {var,{535,19},'State'},
    {debug_line,536,224},
    {atom,{536,6},skip},
    {debug_line,537,225},
    {atom,{537,6},skip},
    {debug_line,538,226},
    {atom,{538,6},skip},
    {debug_line,539,227},
    {match,
     {539,5},
     {var,{539,5},'R'},
     {call,
      {539,9},
      {atom,{539,9},prune_by_add},
      [{block,0,
        [{lc,
          {539,22},
          {block,0,
           [{tuple,{539,23},[{integer,{539,24},0},{var,{539,26},'V'}]}]},
          [{block,0,[{atom,{539,37},true}]},
           {generate,
            {539,34},
            {var,{539,32},'V'},
            {call,
             {539,37},
             {remote,{539,41},{atom,{539,37},sets},{atom,{539,42},to_list}},
             [{var,{539,50},'LiveVars'}]}},
           {block,0,[{debug_line,540,228},{atom,{540,32},true}]},
           {call,
            {540,32},
            {remote,
             {540,44},
             {atom,{540,32},beam_digraph},
             {atom,{540,45},has_vertex}},
            [{var,{540,56},'State'},{var,{540,63},'V'}]}]}]},
       {nil,{541,22}},
       {block,0,[{debug_line,541,229},{call,{541,26},{atom,{541,26},new},[]}]},
       {var,{541,33},'State'}]}},
    {debug_line,542,230},
    {atom,{542,6},skip},
    {debug_line,543,231},
    {var,{543,19},'R'}]}]}.
{function,
 {545,1},
 prune_by_add,4,
 [{clause,
   {545,1},
   [{var,{545,1},'_'},{var,{545,1},'_'},{var,{545,1},'_'},{var,{545,1},'_'}],
   [[{call,
      {545,1},
      {remote,{545,1},{atom,{545,1},fake},{atom,{545,1},is_beam_bif_info}},
      []}]],
   [{debug_line,545,232},{atom,{545,1},ignore}]},
  {clause,
   {545,1},
   [{cons,
     {545,14},
     {tuple,{545,15},[{var,{545,16},'Depth0'},{var,{545,23},'V'}]},
     {var,{545,26},'Wanted'}},
    {var,{545,35},'Edges'},
    {var,{545,42},'New0'},
    {var,{545,48},'Old'}],
   [],
   [{debug_line,546,233},
    {atom,{546,6},skip},
    {debug_line,547,234},
    {atom,{547,6},skip},
    {debug_line,548,235},
    {atom,{548,6},skip},
    {debug_line,549,236},
    {'case',
     {549,5},
     {call,
      {549,10},
      {remote,
       {549,22},
       {atom,{549,10},beam_digraph},
       {atom,{549,23},has_vertex}},
      [{var,{549,34},'New0'},{var,{549,40},'V'}]},
     [{clause,
       {550,9},
       [{atom,{550,9},true}],
       [],
       [{debug_line,552,237},
        {call,
         {552,13},
         {atom,{552,13},prune_by_add},
         [{var,{552,26},'Wanted'},
          {var,{552,34},'Edges'},
          {var,{552,41},'New0'},
          {var,{552,47},'Old'}]}]},
      {clause,
       {553,9},
       [{atom,{553,9},false}],
       [[{op,{553,27},'<',{var,{553,20},'Depth0'},{integer,{553,30},30}}]],
       [{debug_line,555,238},
        {match,
         {555,13},
         {var,{555,13},'New'},
         {call,
          {555,19},
          {atom,{555,19},add_vertex},
          [{var,{555,30},'New0'},
           {var,{555,36},'V'},
           {block,0,
            [{call,
              {555,39},
              {remote,
               {555,51},
               {atom,{555,39},beam_digraph},
               {atom,{555,52},vertex}},
              [{var,{555,59},'Old'},{var,{555,64},'V'}]}]}]}},
        {debug_line,557,239},
        {match,
         {557,13},
         {var,{557,13},'InEdges'},
         {call,
          {557,23},
          {remote,
           {557,35},
           {atom,{557,23},beam_digraph},
           {atom,{557,36},in_edges}},
          [{var,{557,45},'Old'},{var,{557,50},'V'}]}},
        {debug_line,558,240},
        {match,
         {558,13},
         {var,{558,13},'Depth'},
         {op,{558,28},'+',{var,{558,21},'Depth0'},{integer,{558,30},1}}},
        {debug_line,559,241},
        {match,
         {559,13},
         {var,{559,13},'InNodes'},
         {lc,
          {559,23},
          {block,0,
           [{tuple,{559,24},[{var,{559,25},'Depth'},{var,{559,32},'From'}]}]},
          [{block,0,[{atom,{559,56},true}]},
           {generate_strict,
            {559,52},
            {tuple,
             {559,41},
             [{var,{559,42},'From'},{var,{559,47},'_'},{var,{559,49},'_'}]},
            {var,{559,56},'InEdges'}}]}},
        {debug_line,560,242},
        {call,
         {560,13},
         {atom,{560,13},prune_by_add},
         [{block,0,
           [{op,
             {560,34},
             '++',
             {var,{560,26},'InNodes'},
             {var,{560,37},'Wanted'}}]},
          {block,0,
           [{op,
             {560,53},
             '++',
             {var,{560,45},'InEdges'},
             {var,{560,56},'Edges'}}]},
          {var,{560,63},'New'},
          {var,{560,68},'Old'}]}]},
      {clause,
       {561,9},
       [{atom,{561,9},false}],
       [],
       [{debug_line,570,243},
        {call,
         {570,13},
         {remote,{570,13},{atom,{570,13},erlang},{atom,{570,13},throw}},
         [{atom,{570,19},too_deep}]}]}]}]},
  {clause,
   {572,1},
   [{nil,{572,14}},
    {var,{572,18},'Edges'},
    {var,{572,25},'New0'},
    {var,{572,31},'_Old'}],
   [],
   [{debug_line,573,244},
    {call,
     {573,5},
     {remote,{573,5},{atom,{573,5},lists},{atom,{573,5},foldl}},
     [{block,0,
       [{'fun',
         {573,11},
         {clauses,
          [{clause,
            {573,14},
            [{tuple,
              {573,15},
              [{var,{573,16},'Src'},
               {var,{573,20},'Dst'},
               {var,{573,24},'Lbl'}]},
             {var,{573,30},'New'}],
            [],
            [{debug_line,574,245},
             {call,
              {574,19},
              {atom,{574,19},add_edge},
              [{var,{574,28},'New'},
               {var,{574,33},'Src'},
               {var,{574,38},'Dst'},
               {var,{574,43},'Lbl'}]}]}]}}]},
      {var,{575,16},'New0'},
      {var,{575,22},'Edges'}]}]}]}.
{attribute,
    {577,2},
    spec,
    {{set_call_result,4},
     [{type,
          {577,22},
          'fun',
          [{type,
               {577,22},
               product,
               [{remote_type,
                    {577,23},
                    [{atom,{577,23},beam_ssa},{atom,{577,32},b_var},[]]},
                {user_type,{577,41},call_in_arg_status,[]},
                {user_type,{578,23},sharing_state,[]},
                {type,{578,40},non_neg_integer,[]}]},
           {type,
               {579,11},
               tuple,
               [{user_type,{579,12},sharing_state,[]},
                {type,{579,28},non_neg_integer,[]}]}]}]}}.
{function,
 {580,1},
 set_call_result,4,
 [{clause,
   {580,1},
   [{var,{580,1},'_'},{var,{580,1},'_'},{var,{580,1},'_'},{var,{580,1},'_'}],
   [[{call,
      {580,1},
      {remote,{580,1},{atom,{580,1},fake},{atom,{580,1},is_beam_bif_info}},
      []}]],
   [{debug_line,580,246},{atom,{580,1},ignore}]},
  {clause,
   {580,1},
   [{var,{580,17},'Dst'},
    {atom,{580,22},aliased},
    {var,{580,31},'SS0'},
    {var,{580,36},'Cnt0'}],
   [],
   [{debug_line,581,247},
    {tuple,
     {581,5},
     [{call,
       {581,6},
       {atom,{581,6},set_alias},
       [{block,0,[{cons,{581,16},{var,{581,17},'Dst'},{nil,{581,20}}}]},
        {var,{581,23},'SS0'}]},
      {var,{581,29},'Cnt0'}]}]},
  {clause,
   {582,1},
   [{var,{582,17},'_Dst'},
    {atom,{582,23},unique},
    {var,{582,31},'SS0'},
    {var,{582,36},'Cnt0'}],
   [],
   [{debug_line,583,248},
    {tuple,{583,5},[{var,{583,6},'SS0'},{var,{583,11},'Cnt0'}]}]},
  {clause,
   {584,1},
   [{var,{584,17},'_Dst'},
    {atom,{584,23},no_info},
    {var,{584,32},'SS0'},
    {var,{584,37},'Cnt0'}],
   [],
   [{debug_line,585,249},
    {tuple,{585,5},[{var,{585,6},'SS0'},{var,{585,11},'Cnt0'}]}]},
  {clause,
   {586,1},
   [{var,{586,17},'Dst'},
    {tuple,{586,22},[{atom,{586,23},unique},{var,{586,30},'Elements'}]},
    {var,{586,41},'SS0'},
    {var,{586,46},'Cnt0'}],
   [],
   [{debug_line,587,250},
    {call,
     {587,5},
     {remote,{587,9},{atom,{587,5},maps},{atom,{587,10},fold}},
     [{block,0,
       [{'fun',
         {587,15},
         {clauses,
          [{clause,
            {587,18},
            [{var,{587,19},'Idx'},
             {var,{587,24},'Element'},
             {tuple,{587,33},[{var,{587,34},'SS'},{var,{587,37},'Cnt'}]}],
            [],
            [{debug_line,588,251},
             {match,
              {588,23},
              {var,{588,23},'V'},
              {tuple,{588,27},[{atom,{588,27},b_var},{var,{588,39},'Cnt'}]}},
             {debug_line,589,252},
             {match,
              {589,23},
              {var,{589,23},'SS1'},
              {call,
               {589,29},
               {atom,{589,29},add_var},
               [{var,{589,37},'V'},
                {atom,{589,40},unique},
                {var,{589,48},'SS'}]}},
             {debug_line,590,253},
             {atom,{590,24},skip},
             {debug_line,595,254},
             {match,
              {595,23},
              {var,{595,23},'SS2'},
              {call,
               {595,29},
               {remote,
                {595,41},
                {atom,{595,29},beam_digraph},
                {atom,{595,42},add_edge}},
               [{var,{595,51},'SS1'},
                {var,{595,56},'V'},
                {var,{595,59},'Dst'},
                {block,0,
                 [{tuple,
                   {595,64},
                   [{atom,{595,65},embed},{var,{595,71},'Idx'}]}]}]}},
             {debug_line,596,255},
             {call,
              {596,23},
              {atom,{596,23},set_call_result},
              [{var,{596,39},'V'},
               {var,{596,42},'Element'},
               {var,{596,51},'SS2'},
               {block,0,
                [{op,
                  {596,59},
                  '+',
                  {var,{596,56},'Cnt'},
                  {integer,{596,60},1}}]}]}]}]}}]},
      {block,0,
       [{debug_line,597,256},
        {tuple,{597,20},[{var,{597,21},'SS0'},{var,{597,25},'Cnt0'}]}]},
      {var,{597,32},'Elements'}]}]}]}.
{attribute,
    {599,2},
    spec,
    {{set_status,3},
     [{type,
          {599,17},
          'fun',
          [{type,
               {599,17},
               product,
               [{remote_type,
                    {599,18},
                    [{atom,{599,18},beam_ssa},{atom,{599,27},b_var},[]]},
                {user_type,{599,36},sharing_status,[]},
                {user_type,{599,54},sharing_state,[]}]},
           {user_type,{600,11},sharing_state,[]}]}]}}.
{function,
    {601,1},
    set_status,3,
    [{clause,
         {601,1},
         [{var,{601,1},'_'},{var,{601,1},'_'},{var,{601,1},'_'}],
         [[{call,
               {601,1},
               {remote,
                   {601,1},
                   {atom,{601,1},fake},
                   {atom,{601,1},is_beam_bif_info}},
               []}]],
         [{debug_line,601,257},{atom,{601,1},ignore}]},
     {clause,
         {601,1},
         [{match,
              {601,12},
              {tuple,{601,12},[{atom,{601,12},b_var},{var,{601,12},'_'}]},
              {var,{601,21},'V'}},
          {var,{601,24},'Status'},
          {var,{601,32},'State0'}],
         [],
         [{debug_line,618,258},
          {atom,{618,6},skip},
          {debug_line,619,259},
          {'case',
              {619,5},
              {call,
                  {619,10},
                  {remote,
                      {619,22},
                      {atom,{619,10},beam_digraph},
                      {atom,{619,23},vertex}},
                  [{var,{619,30},'State0'},
                   {var,{619,38},'V'},
                   {atom,{619,41},unique}]},
              [{clause,
                   {620,9},
                   [{var,{620,9},'Status'}],
                   [],
                   [{debug_line,622,260},{var,{622,13},'State0'}]},
               {clause,
                   {623,9},
                   [{atom,{623,9},unique}],
                   [[{op,{623,28},
                         '=:=',
                         {var,{623,21},'Status'},
                         {atom,{623,32},aliased}}]],
                   [{debug_line,624,261},
                    {match,
                        {624,13},
                        {var,{624,13},'State'},
                        {call,
                            {624,21},
                            {atom,{624,21},add_vertex},
                            [{var,{624,32},'State0'},
                             {var,{624,40},'V'},
                             {var,{624,43},'Status'}]}},
                    {debug_line,625,262},
                    {call,
                        {625,13},
                        {atom,{625,13},set_alias},
                        [{block,0,
                             [{call,
                                  {625,23},
                                  {atom,{625,23},get_alias_edges},
                                  [{var,{625,39},'V'},
                                   {var,{625,42},'State'}]}]},
                         {var,{625,50},'State'}]}]},
               {clause,
                   {626,9},
                   [{atom,{626,9},no_info}],
                   [[{op,{626,29},
                         '=/=',
                         {var,{626,22},'Status'},
                         {atom,{626,33},no_info}}]],
                   [{debug_line,627,263},
                    {call,
                        {627,13},
                        {atom,{627,13},add_vertex},
                        [{var,{627,24},'State0'},
                         {var,{627,32},'V'},
                         {var,{627,35},'Status'}]}]},
               {clause,
                   {628,9},
                   [{atom,{628,9},unique}],
                   [[{op,{628,28},
                         '=:=',
                         {var,{628,21},'Status'},
                         {atom,{628,32},no_info}}]],
                   [{debug_line,630,264},
                    {call,
                        {630,13},
                        {atom,{630,13},add_vertex},
                        [{var,{630,24},'State0'},
                         {var,{630,32},'V'},
                         {var,{630,35},'Status'}]}]}]}]}]}.
{function,
    {633,1},
    set_alias,2,
    [{clause,
         {633,1},
         [{var,{633,1},'_'},{var,{633,1},'_'}],
         [[{call,
               {633,1},
               {remote,
                   {633,1},
                   {atom,{633,1},fake},
                   {atom,{633,1},is_beam_bif_info}},
               []}]],
         [{debug_line,633,265},{atom,{633,1},ignore}]},
     {clause,
         {633,1},
         [{cons,
              {633,11},
              {match,
                  {633,12},
                  {tuple,{633,12},[{atom,{633,12},b_var},{var,{633,12},'_'}]},
                  {var,{633,21},'V'}},
              {var,{633,23},'Vars'}},
          {var,{633,30},'State0'}],
         [],
         [{debug_line,635,266},
          {'case',
              {635,5},
              {call,
                  {635,10},
                  {remote,
                      {635,22},
                      {atom,{635,10},beam_digraph},
                      {atom,{635,23},vertex}},
                  [{var,{635,30},'State0'},
                   {var,{635,38},'V'},
                   {atom,{635,41},unique}]},
              [{clause,
                   {636,9},
                   [{atom,{636,9},aliased}],
                   [],
                   [{debug_line,637,267},
                    {call,
                        {637,13},
                        {atom,{637,13},set_alias},
                        [{var,{637,23},'Vars'},{var,{637,29},'State0'}]}]},
               {clause,
                   {638,9},
                   [{var,{638,9},'_'}],
                   [],
                   [{debug_line,639,268},
                    {match,
                        {639,13},
                        {var,{639,13},'State'},
                        {call,
                            {639,21},
                            {atom,{639,21},add_vertex},
                            [{var,{639,32},'State0'},
                             {var,{639,40},'V'},
                             {atom,{639,43},aliased}]}},
                    {debug_line,640,269},
                    {call,
                        {640,13},
                        {atom,{640,13},set_alias},
                        [{block,0,
                             [{op,{640,49},
                                  '++',
                                  {call,
                                      {640,23},
                                      {atom,{640,23},get_alias_edges},
                                      [{var,{640,39},'V'},
                                       {var,{640,42},'State'}]},
                                  {var,{640,52},'Vars'}}]},
                         {var,{640,58},'State'}]}]}]}]},
     {clause,
         {642,1},
         [{nil,{642,11}},{var,{642,15},'State'}],
         [],
         [{debug_line,643,270},{var,{643,5},'State'}]}]}.
{function,
    {645,1},
    get_alias_edges,2,
    [{clause,
         {645,1},
         [{var,{645,1},'_'},{var,{645,1},'_'}],
         [[{call,
               {645,1},
               {remote,
                   {645,1},
                   {atom,{645,1},fake},
                   {atom,{645,1},is_beam_bif_info}},
               []}]],
         [{debug_line,645,271},{atom,{645,1},ignore}]},
     {clause,
         {645,1},
         [{var,{645,17},'V'},{var,{645,20},'State'}],
         [],
         [{debug_line,646,272},
          {match,
              {646,5},
              {var,{646,5},'OutEdges'},
              {lc,{646,16},
                  {block,0,[{var,{646,17},'To'}]},
                  [{block,0,[{debug_line,647,273},{atom,{647,42},true}]},
                   {generate,
                       {647,39},
                       {tuple,
                           {647,20},
                           [{tuple,
                                {647,21},
                                [{atom,{647,21},b_var},{var,{647,21},'_'}]},
                            {var,{647,30},'To'},
                            {var,{647,33},'Kind'}]},
                       {call,
                           {647,42},
                           {remote,
                               {647,54},
                               {atom,{647,42},beam_digraph},
                               {atom,{647,55},out_edges}},
                           [{var,{647,65},'State'},{var,{647,72},'V'}]}},
                   {block,0,[{debug_line,648,276},{atom,{648,20},true}]},
                   {'case',
                       {648,20},
                       {var,{648,25},'Kind'},
                       [{clause,
                            {649,24},
                            [{tuple,
                                 {649,24},
                                 [{atom,{649,25},embed},{var,{649,31},'_'}]}],
                            [],
                            [{debug_line,649,274},{atom,{649,37},false}]},
                        {clause,
                            {650,24},
                            [{var,{650,24},'_'}],
                            [],
                            [{debug_line,650,275},{atom,{650,29},true}]}]}]}},
          {debug_line,652,277},
          {match,
              {652,5},
              {var,{652,5},'EmbedEdges'},
              {lc,{652,18},
                  {block,0,[{var,{652,19},'Src'}]},
                  [{block,0,[{debug_line,653,278},{atom,{653,46},true}]},
                   {generate,
                       {653,43},
                       {tuple,
                           {653,22},
                           [{match,
                                {653,23},
                                {tuple,
                                    {653,23},
                                    [{atom,{653,23},b_var},
                                     {var,{653,23},'_'}]},
                                {var,{653,32},'Src'}},
                            {var,{653,36},'_'},
                            {var,{653,38},'Lbl'}]},
                       {call,
                           {653,46},
                           {remote,
                               {653,58},
                               {atom,{653,46},beam_digraph},
                               {atom,{653,59},in_edges}},
                           [{var,{653,68},'State'},{var,{653,75},'V'}]}},
                   {block,0,[{debug_line,654,282},{atom,{654,22},true}]},
                   {'case',
                       {654,22},
                       {var,{654,27},'Lbl'},
                       [{clause,
                            {655,26},
                            [{atom,{655,26},embed}],
                            [],
                            [{debug_line,655,279},{atom,{655,35},true}]},
                        {clause,
                            {656,26},
                            [{tuple,
                                 {656,26},
                                 [{atom,{656,27},embed},{var,{656,33},'_'}]}],
                            [],
                            [{debug_line,656,280},{atom,{656,39},true}]},
                        {clause,
                            {657,26},
                            [{var,{657,26},'_'}],
                            [],
                            [{debug_line,657,281},{atom,{657,31},false}]}]}]}},
          {debug_line,659,283},
          {op,{659,16},
              '++',
              {var,{659,5},'EmbedEdges'},
              {var,{659,19},'OutEdges'}}]}]}.
{attribute,{661,2},
           spec,
           {{size,1},
            [{type,{661,11},
                   'fun',
                   [{type,{661,11},
                          product,
                          [{user_type,{661,12},sharing_state,[]}]},
                    {type,{661,32},non_neg_integer,[]}]}]}}.
{function,{662,1},
          size,1,
          [{clause,{662,1},
                   [{var,{662,1},'_'}],
                   [[{call,{662,1},
                           {remote,{662,1},
                                   {atom,{662,1},fake},
                                   {atom,{662,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,662,284},{atom,{662,1},ignore}]},
           {clause,{662,1},
                   [{var,{662,6},'State'}],
                   [],
                   [{debug_line,663,285},
                    {call,{663,5},
                          {remote,{663,17},
                                  {atom,{663,5},beam_digraph},
                                  {atom,{663,18},no_vertices}},
                          [{var,{663,30},'State'}]}]}]}.
{attribute,
    {665,2},
    spec,
    {{variables,1},
     [{type,
          {665,16},
          'fun',
          [{type,{665,16},product,[{user_type,{665,17},sharing_state,[]}]},
           {type,
               {665,37},
               list,
               [{remote_type,
                    {665,38},
                    [{atom,{665,38},beam_ssa},
                     {atom,{665,47},b_var},
                     []]}]}]}]}}.
{function,
    {666,1},
    variables,1,
    [{clause,
         {666,1},
         [{var,{666,1},'_'}],
         [[{call,
               {666,1},
               {remote,
                   {666,1},
                   {atom,{666,1},fake},
                   {atom,{666,1},is_beam_bif_info}},
               []}]],
         [{debug_line,666,286},{atom,{666,1},ignore}]},
     {clause,
         {666,1},
         [{var,{666,11},'State'}],
         [],
         [{debug_line,667,287},
          {lc,{667,5},
              {block,0,[{var,{667,6},'V'}]},
              [{block,0,[{atom,{667,24},true}]},
               {generate_strict,
                   {667,20},
                   {tuple,{667,11},[{var,{667,12},'V'},{var,{667,14},'_Lbl'}]},
                   {call,
                       {667,24},
                       {remote,
                           {667,36},
                           {atom,{667,24},beam_digraph},
                           {atom,{667,37},vertices}},
                       [{var,{667,46},'State'}]}}]}]}]}.
{attribute,
    {669,2},
    type,
    {call_in_arg_status,
        {type,
            {669,31},
            union,
            [{atom,{669,31},no_info},
             {atom,{670,31},unique},
             {atom,{671,31},aliased},
             {type,
                 {672,31},
                 tuple,
                 [{atom,{672,32},unique},{type,{672,40},term,[]}]}]},
        []}}.
{attribute,
    {673,2},
    type,
    {call_in_arg_info,
        {type,{673,29},list,[{user_type,{673,30},call_in_arg_status,[]}]},
        []}}.
{attribute,
    {674,2},
    spec,
    {{initialize_in_args,1},
     [{type,
          {674,25},
          'fun',
          [{type,
               {674,25},
               product,
               [{type,
                    {674,26},
                    list,
                    [{type,
                         {674,27},
                         union,
                         [{atom,{674,27},unique},{atom,{674,38},aliased}]}]}]},
           {user_type,{674,53},call_in_arg_info,[]}]}]}}.
{function,{675,1},
          initialize_in_args,1,
          [{clause,{675,1},
                   [{var,{675,1},'_'}],
                   [[{call,{675,1},
                           {remote,{675,1},
                                   {atom,{675,1},fake},
                                   {atom,{675,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,675,288},{atom,{675,1},ignore}]},
           {clause,{675,1},
                   [{var,{675,20},'ArgInfo'}],
                   [],
                   [{debug_line,676,289},{var,{676,5},'ArgInfo'}]}]}.
{attribute,
    {678,2},
    spec,
    {{meet_in_args,1},
     [{type,
          {678,19},
          'fun',
          [{type,
               {678,19},
               product,
               [{type,
                    {678,20},
                    list,
                    [{user_type,{678,21},call_in_arg_status,[]}]}]},
           {user_type,{678,47},call_in_arg_status,[]}]}]}}.
{function,
    {679,1},
    meet_in_args,1,
    [{clause,
         {679,1},
         [{var,{679,1},'_'}],
         [[{call,
               {679,1},
               {remote,
                   {679,1},
                   {atom,{679,1},fake},
                   {atom,{679,1},is_beam_bif_info}},
               []}]],
         [{debug_line,679,290},{atom,{679,1},ignore}]},
     {clause,
         {679,1},
         [{var,{679,14},'Args'}],
         [],
         [{debug_line,680,291},
          {atom,{680,6},skip},
          {debug_line,681,292},
          {'case',
              {681,5},
              {var,{681,10},'Args'},
              [{clause,
                   {682,9},
                   [{cons,{682,9},{var,{682,10},'Arg'},{nil,{682,13}}}],
                   [],
                   [{debug_line,683,293},{var,{683,13},'Arg'}]},
               {clause,
                   {684,9},
                   [{cons,{684,9},{var,{684,10},'Arg'},{var,{684,14},'Rest'}}],
                   [],
                   [{debug_line,685,294},
                    {call,
                        {685,13},
                        {atom,{685,13},meet_in_args},
                        [{var,{685,26},'Arg'},{var,{685,31},'Rest'}]}]}]}]}]}.
{function,
    {688,1},
    meet_in_args,2,
    [{clause,
         {688,1},
         [{var,{688,1},'_'},{var,{688,1},'_'}],
         [[{call,
               {688,1},
               {remote,
                   {688,1},
                   {atom,{688,1},fake},
                   {atom,{688,1},is_beam_bif_info}},
               []}]],
         [{debug_line,688,295},{atom,{688,1},ignore}]},
     {clause,
         {688,1},
         [{atom,{688,14},aliased},{var,{688,23},'_'}],
         [],
         [{debug_line,689,296},{atom,{689,5},aliased}]},
     {clause,
         {690,1},
         [{var,{690,14},'_Status'},
          {cons,{690,23},{atom,{690,24},aliased},{var,{690,32},'_Rest'}}],
         [],
         [{debug_line,691,297},{atom,{691,5},aliased}]},
     {clause,
         {692,1},
         [{atom,{692,14},unique},
          {cons,{692,22},{atom,{692,23},unique},{var,{692,30},'Rest'}}],
         [],
         [{debug_line,693,298},
          {call,
              {693,5},
              {atom,{693,5},meet_in_args},
              [{atom,{693,18},unique},{var,{693,26},'Rest'}]}]},
     {clause,
         {694,1},
         [{tuple,{694,14},[{atom,{694,15},unique},{var,{694,22},'A'}]},
          {cons,
              {694,26},
              {tuple,{694,27},[{atom,{694,28},unique},{var,{694,35},'B'}]},
              {var,{694,38},'Rest'}}],
         [],
         [{debug_line,695,299},
          {call,
              {695,5},
              {atom,{695,5},meet_in_args},
              [{block,0,
                   [{tuple,
                        {695,18},
                        [{atom,{695,19},unique},
                         {call,
                             {695,26},
                             {atom,{695,26},meet_in_args_elems},
                             [{var,{695,45},'A'},{var,{695,48},'B'}]}]}]},
               {var,{695,53},'Rest'}]}]},
     {clause,
         {696,1},
         [{match,
              {696,14},
              {tuple,{696,14},[{atom,{696,15},unique},{var,{696,22},'_'}]},
              {var,{696,25},'A'}},
          {cons,{696,28},{atom,{696,29},unique},{var,{696,36},'Rest'}}],
         [],
         [{debug_line,697,300},
          {call,
              {697,5},
              {atom,{697,5},meet_in_args},
              [{var,{697,18},'A'},{var,{697,21},'Rest'}]}]},
     {clause,
         {698,1},
         [{atom,{698,14},unique},
          {cons,
              {698,22},
              {match,
                  {698,23},
                  {tuple,{698,23},[{atom,{698,24},unique},{var,{698,31},'_'}]},
                  {var,{698,34},'U'}},
              {var,{698,36},'Rest'}}],
         [],
         [{debug_line,699,301},
          {call,
              {699,5},
              {atom,{699,5},meet_in_args},
              [{var,{699,18},'U'},{var,{699,21},'Rest'}]}]},
     {clause,
         {700,1},
         [{atom,{700,14},no_info},
          {cons,{700,23},{var,{700,24},'Status'},{var,{700,31},'Rest'}}],
         [],
         [{debug_line,701,302},
          {call,
              {701,5},
              {atom,{701,5},meet_in_args},
              [{var,{701,18},'Status'},{var,{701,26},'Rest'}]}]},
     {clause,
         {702,1},
         [{var,{702,14},'Status'},
          {cons,{702,22},{atom,{702,23},no_info},{var,{702,31},'Rest'}}],
         [],
         [{debug_line,703,303},
          {call,
              {703,5},
              {atom,{703,5},meet_in_args},
              [{var,{703,18},'Status'},{var,{703,26},'Rest'}]}]},
     {clause,
         {704,1},
         [{var,{704,14},'Status'},{nil,{704,22}}],
         [],
         [{debug_line,705,304},
          {atom,{705,6},skip},
          {debug_line,706,305},
          {var,{706,5},'Status'}]}]}.
{function,
    {708,1},
    meet_in_args_elems,2,
    [{clause,
         {708,1},
         [{var,{708,1},'_'},{var,{708,1},'_'}],
         [[{call,
               {708,1},
               {remote,
                   {708,1},
                   {atom,{708,1},fake},
                   {atom,{708,1},is_beam_bif_info}},
               []}]],
         [{debug_line,708,306},{atom,{708,1},ignore}]},
     {clause,
         {708,1},
         [{var,{708,20},'A'},{var,{708,23},'B'}],
         [],
         [{debug_line,709,307},
          {match,
              {709,5},
              {var,{709,5},'SizeA'},
              {call,
                  {709,13},
                  {remote,
                      {709,13},
                      {atom,{709,13},erlang},
                      {atom,{709,13},map_size}},
                  [{var,{709,22},'A'}]}},
          {debug_line,710,308},
          {match,
              {710,5},
              {var,{710,5},'SizeB'},
              {call,
                  {710,13},
                  {remote,
                      {710,13},
                      {atom,{710,13},erlang},
                      {atom,{710,13},map_size}},
                  [{var,{710,22},'B'}]}},
          {debug_line,711,309},
          {'if',
              {711,5},
              [{clause,
                   {711,8},
                   [],
                   [[{op,{711,14},
                         '<',
                         {var,{711,8},'SizeA'},
                         {var,{711,16},'SizeB'}}]],
                   [{debug_line,712,310},
                    {call,
                        {712,13},
                        {atom,{712,13},meet_in_args_elems1},
                        [{var,{712,33},'A'},{var,{712,36},'B'}]}]},
               {clause,
                   {713,8},
                   [],
                   [[{atom,{713,8},true}]],
                   [{debug_line,714,311},
                    {call,
                        {714,13},
                        {atom,{714,13},meet_in_args_elems1},
                        [{var,{714,33},'B'},{var,{714,36},'A'}]}]}]}]}]}.
{function,
    {717,1},
    meet_in_args_elems1,2,
    [{clause,
         {717,1},
         [{var,{717,1},'_'},{var,{717,1},'_'}],
         [[{call,
               {717,1},
               {remote,
                   {717,1},
                   {atom,{717,1},fake},
                   {atom,{717,1},is_beam_bif_info}},
               []}]],
         [{debug_line,717,312},{atom,{717,1},ignore}]},
     {clause,
         {717,1},
         [{var,{717,21},'Small'},{var,{717,28},'Large'}],
         [],
         [{debug_line,718,313},
          {call,
              {718,5},
              {atom,{718,5},meet_in_args_elems1},
              [{block,0,
                   [{call,
                        {718,25},
                        {remote,
                            {718,29},
                            {atom,{718,25},maps},
                            {atom,{718,30},to_list}},
                        [{var,{718,38},'Small'}]}]},
               {var,{718,46},'Large'},
               {block,0,[{map,{718,53},[]}]}]}]}]}.
{function,
 {720,1},
 meet_in_args_elems1,3,
 [{clause,
   {720,1},
   [{var,{720,1},'_'},{var,{720,1},'_'},{var,{720,1},'_'}],
   [[{call,
      {720,1},
      {remote,{720,1},{atom,{720,1},fake},{atom,{720,1},is_beam_bif_info}},
      []}]],
   [{debug_line,720,314},{atom,{720,1},ignore}]},
  {clause,
   {720,1},
   [{cons,
     {720,21},
     {tuple,{720,22},[{var,{720,23},'E'},{var,{720,25},'Status0'}]},
     {var,{720,34},'Elems'}},
    {var,{720,42},'Large0'},
    {var,{720,50},'Result0'}],
   [],
   [{debug_line,721,315},
    {match,
     {721,5},
     {tuple,{721,5},[{var,{721,6},'Status'},{var,{721,13},'Large'}]},
     {'case',
      {721,22},
      {var,{721,27},'Large0'},
      [{clause,
        {722,26},
        [{map,
          {722,26},
          [{map_field_exact,
            {722,29},
            {var,{722,28},'E'},
            {var,{722,31},'OtherStatus'}}]}],
        [],
        [{debug_line,723,316},
         {tuple,
          {723,30},
          [{call,
            {723,31},
            {atom,{723,31},meet_in_args},
            [{var,{723,44},'Status0'},
             {block,0,
              [{cons,{723,53},{var,{723,54},'OtherStatus'},{nil,{723,65}}}]}]},
           {call,
            {724,31},
            {remote,{724,35},{atom,{724,31},maps},{atom,{724,36},remove}},
            [{var,{724,43},'E'},{var,{724,45},'Large0'}]}]}]},
       {clause,
        {725,26},
        [{map,{725,26},[]}],
        [],
        [{debug_line,726,317},
         {tuple,
          {726,30},
          [{var,{726,31},'Status0'},{var,{726,39},'Large0'}]}]}]}},
    {debug_line,728,318},
    {match,
     {728,5},
     {var,{728,5},'Result'},
     {map,
      {728,21},
      {var,{728,14},'Result0'},
      [{map_field_assoc,
        {728,24},
        {var,{728,23},'E'},
        {var,{728,26},'Status'}}]}},
    {debug_line,729,319},
    {call,
     {729,5},
     {atom,{729,5},meet_in_args_elems1},
     [{var,{729,25},'Elems'},
      {var,{729,32},'Large'},
      {var,{729,39},'Result'}]}]},
  {clause,
   {730,1},
   [{nil,{730,21}},{var,{730,25},'Large'},{var,{730,32},'Result'}],
   [],
   [{debug_line,731,320},
    {call,
     {731,5},
     {remote,{731,9},{atom,{731,5},maps},{atom,{731,10},merge}},
     [{var,{731,16},'Large'},{var,{731,23},'Result'}]}]}]}.
{attribute,
    {733,2},
    spec,
    {{merge_in_args,3},
     [{type,
          {733,20},
          'fun',
          [{type,
               {733,20},
               product,
               [{type,
                    {733,21},
                    list,
                    [{remote_type,
                         {733,22},
                         [{atom,{733,22},beam_ssa},
                          {atom,{733,31},b_var},
                          []]}]},
                {user_type,{733,41},call_in_arg_info,[]},
                {user_type,{733,61},sharing_state,[]}]},
           {user_type,{734,23},call_in_arg_info,[]}]}]}}.
{function,{735,1},
          merge_in_args,3,
          [{clause,{735,1},
                   [{var,{735,1},'_'},{var,{735,1},'_'},{var,{735,1},'_'}],
                   [[{call,{735,1},
                           {remote,{735,1},
                                   {atom,{735,1},fake},
                                   {atom,{735,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,735,321},{atom,{735,1},ignore}]},
           {clause,{735,1},
                   [{cons,{735,15},{var,{735,16},'Arg'},{var,{735,20},'Args'}},
                    {cons,{735,27},
                          {var,{735,28},'ArgStatus'},
                          {var,{735,38},'Status'}},
                    {var,{735,47},'State'}],
                   [],
                   [{debug_line,736,322},
                    {atom,{736,6},skip},
                    {debug_line,738,323},
                    {match,{738,5},
                           {var,{738,5},'Info'},
                           {call,{738,12},
                                 {atom,{738,12},merge_in_arg},
                                 [{var,{738,25},'Arg'},
                                  {var,{738,30},'ArgStatus'},
                                  {integer,{738,42},4},
                                  {var,{738,60},'State'}]}},
                    {debug_line,739,324},
                    {cons,{739,5},
                          {var,{739,6},'Info'},
                          {call,{739,11},
                                {atom,{739,11},merge_in_args},
                                [{var,{739,25},'Args'},
                                 {var,{739,31},'Status'},
                                 {var,{739,39},'State'}]}}]},
           {clause,{740,1},
                   [{nil,{740,15}},{nil,{740,19}},{var,{740,23},'_State'}],
                   [],
                   [{debug_line,741,325},{nil,{741,5}}]}]}.
{function,
 {743,1},
 merge_in_arg,4,
 [{clause,
   {743,1},
   [{var,{743,1},'_'},{var,{743,1},'_'},{var,{743,1},'_'},{var,{743,1},'_'}],
   [[{call,
      {743,1},
      {remote,{743,1},{atom,{743,1},fake},{atom,{743,1},is_beam_bif_info}},
      []}]],
   [{debug_line,743,326},{atom,{743,1},ignore}]},
  {clause,
   {743,1},
   [{var,{743,14},'_'},
    {atom,{743,17},aliased},
    {var,{743,26},'_'},
    {var,{743,29},'_State'}],
   [],
   [{debug_line,744,327},{atom,{744,5},aliased}]},
  {clause,
   {745,1},
   [{atom,{745,14},plain},
    {var,{745,21},'_'},
    {var,{745,24},'_'},
    {var,{745,27},'_State'}],
   [],
   [{debug_line,746,328},{atom,{746,5},unique}]},
  {clause,
   {747,1},
   [{match,
     {747,14},
     {tuple,{747,14},[{atom,{747,14},b_var},{var,{747,14},'_'}]},
     {var,{747,23},'V'}},
    {var,{747,26},'Status'},
    {integer,{747,34},0},
    {var,{747,37},'State'}],
   [],
   [{debug_line,750,329},
    {'case',
     {750,5},
     {tuple,
      {750,10},
      [{var,{750,11},'Status'},
       {call,
        {750,19},
        {atom,{750,19},get_status},
        [{var,{750,30},'V'},{var,{750,33},'State'}]}]},
     [{clause,
       {751,9},
       [{tuple,{751,9},[{var,{751,10},'S'},{var,{751,12},'S'}]}],
       [],
       [{debug_line,752,330},{var,{752,13},'S'}]},
      {clause,
       {753,9},
       [{tuple,{753,9},[{atom,{753,10},no_info},{var,{753,18},'S'}]}],
       [],
       [{debug_line,754,331},{var,{754,13},'S'}]},
      {clause,
       {755,9},
       [{tuple,{755,9},[{var,{755,10},'S'},{atom,{755,12},no_info}]}],
       [],
       [{debug_line,756,332},{var,{756,13},'S'}]},
      {clause,
       {757,9},
       [{tuple,{757,9},[{var,{757,10},'_'},{atom,{757,12},aliased}]}],
       [],
       [{debug_line,758,333},{atom,{758,13},aliased}]}]}]},
  {clause,
   {760,1},
   [{match,
     {760,14},
     {tuple,{760,14},[{atom,{760,14},b_var},{var,{760,14},'_'}]},
     {var,{760,23},'V'}},
    {atom,{760,26},unique},
    {var,{760,34},'_Cutoff'},
    {var,{760,43},'State'}],
   [],
   [{debug_line,761,334},
    {'case',
     {761,5},
     {call,
      {761,10},
      {remote,{761,22},{atom,{761,10},beam_digraph},{atom,{761,23},vertex}},
      [{var,{761,30},'State'},{var,{761,37},'V'},{atom,{761,40},unique}]},
     [{clause,
       {762,9},
       [{atom,{762,9},no_info}],
       [],
       [{debug_line,763,335},{atom,{763,13},unique}]},
      {clause,
       {764,9},
       [{var,{764,9},'S'}],
       [],
       [{debug_line,765,336},{var,{765,13},'S'}]}]}]},
  {clause,
   {767,1},
   [{match,
     {767,14},
     {tuple,{767,14},[{atom,{767,14},b_var},{var,{767,14},'_'}]},
     {var,{767,23},'V'}},
    {var,{767,26},'Status'},
    {var,{767,34},'Cutoff'},
    {var,{767,42},'State'}],
   [],
   [{debug_line,768,337},
    {'case',
     {768,5},
     {call,
      {768,10},
      {remote,{768,22},{atom,{768,10},beam_digraph},{atom,{768,23},vertex}},
      [{var,{768,30},'State'},{var,{768,37},'V'},{atom,{768,40},unique}]},
     [{clause,
       {769,9},
       [{atom,{769,9},aliased}],
       [],
       [{debug_line,770,338},{atom,{770,13},aliased}]},
      {clause,
       {771,9},
       [{atom,{771,9},unique}],
       [],
       [{debug_line,772,339},
        {match,
         {772,13},
         {var,{772,13},'InEdges'},
         {call,
          {772,23},
          {remote,
           {772,35},
           {atom,{772,23},beam_digraph},
           {atom,{772,36},in_edges}},
          [{var,{772,45},'State'},{var,{772,52},'V'}]}},
        {debug_line,773,340},
        {match,
         {773,13},
         {var,{773,13},'Elements'},
         {'case',
          {773,24},
          {var,{773,29},'Status'},
          [{clause,
            {774,28},
            [{tuple,{774,28},[{atom,{774,29},unique},{var,{774,36},'Es'}]}],
            [],
            [{debug_line,774,341},{var,{774,43},'Es'}]},
           {clause,
            {775,28},
            [{atom,{775,28},no_info}],
            [],
            [{debug_line,775,342},{map,{775,39},[]}]}]}},
        {debug_line,777,343},
        {call,
         {777,13},
         {atom,{777,13},merge_elements},
         [{var,{777,28},'InEdges'},
          {var,{777,37},'Elements'},
          {var,{777,47},'Cutoff'},
          {var,{777,55},'State'}]}]},
      {clause,
       {778,9},
       [{atom,{778,9},no_info}],
       [],
       [{debug_line,779,344},{var,{779,13},'Status'}]}]}]},
  {clause,
   {781,1},
   [{tuple,{781,14},[{atom,{781,14},b_literal},{var,{781,14},'_'}]},
    {var,{781,28},'Status'},
    {integer,{781,36},0},
    {var,{781,39},'_State'}],
   [],
   [{debug_line,785,345},{var,{785,5},'Status'}]},
  {clause,
   {786,1},
   [{tuple,
     {786,14},
     [{atom,{786,14},b_literal},
      {cons,{786,29},{var,{786,30},'Hd'},{var,{786,33},'Tl'}}]},
    {var,{786,39},'Status'},
    {var,{786,47},'Cutoff'},
    {var,{786,55},'State'}],
   [],
   [{debug_line,787,346},
    {match,
     {787,5},
     {tuple,
      {787,5},
      [{var,{787,6},'HdS'},{var,{787,10},'TlS'},{var,{787,14},'Elements0'}]},
     {'case',
      {787,27},
      {var,{787,32},'Status'},
      [{clause,
        {788,31},
        [{tuple,
          {788,31},
          [{atom,{788,32},unique},
           {match,
            {788,39},
            {map,
             {788,39},
             [{map_field_exact,
               {788,43},
               {atom,{788,41},hd},
               {var,{788,45},'HdS0'}},
              {map_field_exact,
               {788,52},
               {atom,{788,50},tl},
               {var,{788,54},'TlS0'}}]},
            {var,{788,60},'All'}}]}],
        [],
        [{debug_line,789,347},
         {tuple,
          {789,35},
          [{var,{789,36},'HdS0'},
           {var,{789,41},'TlS0'},
           {var,{789,46},'All'}]}]},
       {clause,
        {790,31},
        [{tuple,
          {790,31},
          [{atom,{790,32},unique},{var,{790,39},'TupleElems'}]}],
        [],
        [{debug_line,791,348},
         {tuple,
          {791,35},
          [{atom,{791,36},no_info},
           {atom,{791,44},no_info},
           {var,{791,52},'TupleElems'}]}]},
       {clause,
        {792,31},
        [{atom,{792,31},unique}],
        [],
        [{debug_line,792,349},
         {tuple,
          {792,41},
          [{atom,{792,42},unique},{atom,{792,49},unique},{map,{792,56},[]}]}]},
       {clause,
        {793,31},
        [{atom,{793,31},no_info}],
        [],
        [{debug_line,793,350},
         {tuple,
          {793,42},
          [{atom,{793,43},no_info},
           {atom,{793,51},no_info},
           {map,{793,59},[]}]}]}]}},
    {debug_line,795,351},
    {match,
     {795,5},
     {var,{795,5},'Elements'},
     {map,
      {796,18},
      {var,{796,9},'Elements0'},
      [{map_field_assoc,
        {796,22},
        {atom,{796,20},hd},
        {call,
         {796,24},
         {atom,{796,24},merge_in_arg},
         [{block,0,
           [{debug_line,796,352},
            {tuple,{796,37},[{atom,{796,37},b_literal},{var,{796,52},'Hd'}]}]},
          {var,{796,57},'HdS'},
          {block,0,
           [{op,{796,68},'-',{var,{796,62},'Cutoff'},{integer,{796,69},1}}]},
          {var,{796,72},'State'}]}},
       {map_field_assoc,
        {797,22},
        {atom,{797,20},tl},
        {call,
         {797,24},
         {atom,{797,24},merge_in_arg},
         [{block,0,
           [{debug_line,797,353},
            {tuple,{797,37},[{atom,{797,37},b_literal},{var,{797,52},'Tl'}]}]},
          {var,{797,57},'TlS'},
          {block,0,
           [{op,{797,68},'-',{var,{797,62},'Cutoff'},{integer,{797,69},1}}]},
          {var,{797,72},'State'}]}}]}},
    {debug_line,798,354},
    {tuple,{798,5},[{atom,{798,6},unique},{var,{798,13},'Elements'}]}]},
  {clause,
   {799,1},
   [{tuple,{799,14},[{atom,{799,14},b_literal},{nil,{799,29}}]},
    {var,{799,34},'Status'},
    {var,{799,42},'_'},
    {var,{799,45},'_State'}],
   [],
   [{debug_line,800,355},{var,{800,5},'Status'}]},
  {clause,
   {801,1},
   [{tuple,{801,14},[{atom,{801,14},b_literal},{var,{801,29},'T'}]},
    {atom,{801,33},unique},
    {var,{801,41},'_Cutoff'},
    {var,{801,50},'_State'}],
   [[{call,
      {801,63},
      {remote,{801,63},{atom,{801,63},erlang},{atom,{801,63},is_tuple}},
      [{var,{801,72},'T'}]}]],
   [{debug_line,804,356},{atom,{804,5},unique}]},
  {clause,
   {805,1},
   [{tuple,{805,14},[{atom,{805,14},b_literal},{var,{805,29},'T'}]},
    {var,{805,33},'Status'},
    {var,{805,41},'Cutoff'},
    {var,{805,49},'State'}],
   [[{call,
      {805,61},
      {remote,{805,61},{atom,{805,61},erlang},{atom,{805,61},is_tuple}},
      [{var,{805,70},'T'}]}]],
   [{debug_line,806,357},
    {match,
     {806,5},
     {var,{806,5},'SrcElements'},
     {call,
      {806,19},
      {remote,{806,19},{atom,{806,19},erlang},{atom,{806,19},tuple_to_list}},
      [{var,{806,33},'T'}]}},
    {debug_line,807,358},
    {match,
     {807,5},
     {var,{807,5},'OrigElements'},
     {'case',
      {807,20},
      {var,{807,25},'Status'},
      [{clause,
        {808,24},
        [{tuple,
          {808,24},
          [{atom,{808,25},unique},{var,{808,32},'TupleElems'}]}],
        [],
        [{debug_line,809,359},{var,{809,28},'TupleElems'}]},
       {clause,
        {810,24},
        [{atom,{810,24},no_info}],
        [],
        [{debug_line,810,360},{map,{810,35},[]}]}]}},
    {debug_line,812,361},
    {match,
     {812,5},
     {var,{812,5},'Elements'},
     {call,
      {812,16},
      {atom,{812,16},merge_tuple_elems},
      [{var,{812,34},'SrcElements'},
       {var,{812,47},'OrigElements'},
       {var,{812,61},'Cutoff'},
       {var,{812,69},'State'}]}},
    {debug_line,813,362},
    {tuple,{813,5},[{atom,{813,6},unique},{var,{813,13},'Elements'}]}]},
  {clause,
   {814,1},
   [{tuple,{814,14},[{atom,{814,14},b_literal},{var,{814,29},'_Lit'}]},
    {tuple,{814,36},[{atom,{814,37},unique},{var,{814,44},'_'}]},
    {var,{814,48},'_Cutoff'},
    {var,{814,57},'_State'}],
   [],
   [{debug_line,815,363},
    {atom,{815,6},skip},
    {debug_line,817,364},
    {atom,{817,5},unique}]},
  {clause,
   {818,1},
   [{tuple,{818,14},[{atom,{818,14},b_literal},{var,{818,29},'_Lit'}]},
    {atom,{818,36},no_info},
    {var,{818,45},'_'},
    {var,{818,48},'_State'}],
   [],
   [{debug_line,819,365},
    {atom,{819,6},skip},
    {debug_line,821,366},
    {atom,{821,5},unique}]},
  {clause,
   {822,1},
   [{tuple,{822,14},[{atom,{822,14},b_literal},{var,{822,29},'_Lit'}]},
    {atom,{822,36},unique},
    {var,{822,44},'_'},
    {var,{822,47},'_State'}],
   [],
   [{debug_line,823,367},
    {atom,{823,6},skip},
    {debug_line,825,368},
    {atom,{825,5},unique}]}]}.
{function,
    {827,1},
    merge_tuple_elems,4,
    [{clause,
         {827,1},
         [{var,{827,1},'_'},
          {var,{827,1},'_'},
          {var,{827,1},'_'},
          {var,{827,1},'_'}],
         [[{call,
               {827,1},
               {remote,
                   {827,1},
                   {atom,{827,1},fake},
                   {atom,{827,1},is_beam_bif_info}},
               []}]],
         [{debug_line,827,369},{atom,{827,1},ignore}]},
     {clause,
         {827,1},
         [{var,{827,19},'SrcElements'},
          {var,{827,32},'OrigElements'},
          {var,{827,46},'Cutoff'},
          {var,{827,54},'State'}],
         [],
         [{debug_line,828,370},
          {call,
              {828,5},
              {atom,{828,5},merge_tuple_elems},
              [{var,{828,23},'SrcElements'},
               {integer,{828,36},0},
               {var,{828,39},'OrigElements'},
               {block,0,
                   [{op,{828,59},
                        '-',
                        {var,{828,53},'Cutoff'},
                        {integer,{828,60},1}}]},
               {var,{828,63},'State'}]}]}]}.
{function,
    {830,1},
    merge_tuple_elems,5,
    [{clause,
         {830,1},
         [{var,{830,1},'_'},
          {var,{830,1},'_'},
          {var,{830,1},'_'},
          {var,{830,1},'_'},
          {var,{830,1},'_'}],
         [[{call,
               {830,1},
               {remote,
                   {830,1},
                   {atom,{830,1},fake},
                   {atom,{830,1},is_beam_bif_info}},
               []}]],
         [{debug_line,830,371},{atom,{830,1},ignore}]},
     {clause,
         {830,1},
         [{cons,{830,19},{var,{830,20},'S'},{var,{830,22},'SrcElements'}},
          {var,{830,36},'Idx'},
          {var,{830,41},'OrigElements0'},
          {var,{830,56},'Cutoff'},
          {var,{830,64},'State'}],
         [],
         [{debug_line,831,372},
          {'case',
              {831,5},
              {var,{831,10},'OrigElements0'},
              [{clause,
                   {832,9},
                   [{map,
                        {832,9},
                        [{map_field_exact,
                             {832,14},
                             {var,{832,11},'Idx'},
                             {var,{832,16},'Status'}}]}],
                   [],
                   [{debug_line,833,373},
                    {match,
                        {833,13},
                        {var,{833,13},'E'},
                        {call,
                            {833,17},
                            {atom,{833,17},merge_in_arg},
                            [{block,0,
                                 [{tuple,
                                      {833,30},
                                      [{atom,{833,30},b_literal},
                                       {var,{833,45},'S'}]}]},
                             {var,{833,49},'Status'},
                             {var,{833,57},'Cutoff'},
                             {var,{833,65},'State'}]}},
                    {debug_line,834,374},
                    {match,
                        {834,13},
                        {var,{834,13},'OrigElements'},
                        {map,
                            {834,41},
                            {var,{834,28},'OrigElements0'},
                            [{map_field_assoc,
                                 {834,46},
                                 {var,{834,43},'Idx'},
                                 {var,{834,48},'E'}}]}},
                    {debug_line,835,375},
                    {call,
                        {835,13},
                        {atom,{835,13},merge_tuple_elems},
                        [{var,{835,31},'SrcElements'},
                         {block,0,
                             [{op,{835,47},
                                  '+',
                                  {var,{835,44},'Idx'},
                                  {integer,{835,48},1}}]},
                         {var,{835,51},'OrigElements'},
                         {var,{835,65},'Cutoff'},
                         {var,{835,73},'State'}]}]},
               {clause,
                   {836,9},
                   [{map,{836,9},[]}],
                   [],
                   [{debug_line,837,376},
                    {match,
                        {837,13},
                        {var,{837,13},'E'},
                        {call,
                            {837,17},
                            {atom,{837,17},merge_in_arg},
                            [{block,0,
                                 [{tuple,
                                      {837,30},
                                      [{atom,{837,30},b_literal},
                                       {var,{837,45},'S'}]}]},
                             {atom,{837,49},no_info},
                             {var,{837,58},'Cutoff'},
                             {var,{837,66},'State'}]}},
                    {debug_line,838,377},
                    {match,
                        {838,13},
                        {var,{838,13},'OrigElements'},
                        {map,
                            {838,41},
                            {var,{838,28},'OrigElements0'},
                            [{map_field_assoc,
                                 {838,46},
                                 {var,{838,43},'Idx'},
                                 {var,{838,48},'E'}}]}},
                    {debug_line,839,378},
                    {call,
                        {839,13},
                        {atom,{839,13},merge_tuple_elems},
                        [{var,{839,31},'SrcElements'},
                         {block,0,
                             [{op,{839,47},
                                  '+',
                                  {var,{839,44},'Idx'},
                                  {integer,{839,48},1}}]},
                         {var,{839,51},'OrigElements'},
                         {var,{839,65},'Cutoff'},
                         {var,{839,73},'State'}]}]}]}]},
     {clause,
         {841,1},
         [{nil,{841,19}},
          {var,{841,23},'_'},
          {var,{841,26},'Elements'},
          {var,{841,36},'_'},
          {var,{841,39},'_'}],
         [],
         [{debug_line,842,379},{var,{842,5},'Elements'}]}]}.
{function,
    {844,1},
    merge_elements,4,
    [{clause,
         {844,1},
         [{var,{844,1},'_'},
          {var,{844,1},'_'},
          {var,{844,1},'_'},
          {var,{844,1},'_'}],
         [[{call,
               {844,1},
               {remote,
                   {844,1},
                   {atom,{844,1},fake},
                   {atom,{844,1},is_beam_bif_info}},
               []}]],
         [{debug_line,844,380},{atom,{844,1},ignore}]},
     {clause,
         {844,1},
         [{nil,{844,16}},
          {var,{844,20},'Elements'},
          {var,{844,30},'_'},
          {var,{844,33},'_State'}],
         [[{op,{844,65},
               '=:=',
               {call,
                   {844,46},
                   {remote,
                       {844,46},
                       {atom,{844,46},erlang},
                       {atom,{844,46},map_size}},
                   [{var,{844,55},'Elements'}]},
               {integer,{844,69},0}}]],
         [{debug_line,845,381},{atom,{845,5},unique}]},
     {clause,
         {846,1},
         [{nil,{846,16}},
          {var,{846,20},'Elements'},
          {var,{846,30},'_'},
          {var,{846,33},'_State'}],
         [[{call,
               {846,46},
               {remote,{846,46},{atom,{846,46},erlang},{atom,{846,46},is_map}},
               [{var,{846,53},'Elements'}]}]],
         [{debug_line,847,382},
          {tuple,{847,5},[{atom,{847,6},unique},{var,{847,13},'Elements'}]}]},
     {clause,
         {848,1},
         [{nil,{848,16}},
          {atom,{848,20},no_info},
          {var,{848,29},'_'},
          {var,{848,32},'_State'}],
         [],
         [{debug_line,851,383},{atom,{851,5},unique}]},
     {clause,
         {852,1},
         [{cons,
              {852,16},
              {tuple,
                  {852,17},
                  [{var,{852,18},'Src'},
                   {var,{852,22},'_'},
                   {tuple,
                       {852,24},
                       [{atom,{852,25},embed},{var,{852,31},'Idx'}]}]},
              {var,{852,37},'Rest'}},
          {var,{852,44},'Elements0'},
          {var,{852,55},'Cutoff'},
          {var,{852,63},'State'}],
         [[{call,
               {853,7},
               {remote,{853,7},{atom,{853,7},erlang},{atom,{853,7},is_map}},
               [{var,{853,14},'Elements0'}]}]],
         [{debug_line,854,384},
          {match,
              {854,5},
              {var,{854,5},'Old'},
              {call,
                  {854,11},
                  {remote,{854,15},{atom,{854,11},maps},{atom,{854,16},get}},
                  [{var,{854,20},'Idx'},
                   {var,{854,25},'Elements0'},
                   {atom,{854,36},no_info}]}},
          {debug_line,855,385},
          {match,
              {855,5},
              {var,{855,5},'New'},
              {call,
                  {855,11},
                  {atom,{855,11},merge_in_arg},
                  [{var,{855,24},'Src'},
                   {var,{855,29},'Old'},
                   {block,0,
                       [{op,{855,40},
                            '-',
                            {var,{855,34},'Cutoff'},
                            {integer,{855,41},1}}]},
                   {var,{855,44},'State'}]}},
          {debug_line,856,386},
          {match,
              {856,5},
              {var,{856,5},'Elements'},
              {map,
                  {856,25},
                  {var,{856,16},'Elements0'},
                  [{map_field_assoc,
                       {856,30},
                       {var,{856,27},'Idx'},
                       {var,{856,32},'New'}}]}},
          {debug_line,857,387},
          {call,
              {857,5},
              {atom,{857,5},merge_elements},
              [{var,{857,20},'Rest'},
               {var,{857,26},'Elements'},
               {var,{857,36},'Cutoff'},
               {var,{857,44},'State'}]}]},
     {clause,
         {858,1},
         [{cons,
              {858,16},
              {tuple,
                  {858,17},
                  [{var,{858,18},'_Src'},
                   {var,{858,23},'_'},
                   {atom,{858,25},embed}]},
              {var,{858,32},'Rest'}},
          {var,{858,39},'_Elements0'},
          {var,{858,51},'Cutoff'},
          {var,{858,59},'State'}],
         [],
         [{debug_line,862,388},
          {atom,{862,6},skip},
          {debug_line,864,389},
          {call,
              {864,5},
              {atom,{864,5},merge_elements},
              [{var,{864,20},'Rest'},
               {atom,{864,26},no_info},
               {var,{864,35},'Cutoff'},
               {var,{864,43},'State'}]}]},
     {clause,
         {865,1},
         [{cons,
              {865,16},
              {tuple,
                  {865,17},
                  [{var,{865,18},'Src'},
                   {var,{865,22},'V'},
                   {tuple,
                       {865,24},
                       [{atom,{865,25},extract},{var,{865,33},'E'}]}]},
              {nil,{865,36}}},
          {var,{865,39},'Elements'},
          {var,{865,49},'Cutoff'},
          {var,{865,57},'State'}],
         [],
         [{debug_line,866,390},
          {atom,{866,6},skip},
          {debug_line,867,391},
          {match,
              {867,5},
              {var,{867,5},'InEdges'},
              {call,
                  {867,15},
                  {remote,
                      {867,27},
                      {atom,{867,15},beam_digraph},
                      {atom,{867,28},in_edges}},
                  [{var,{867,37},'State'},{var,{867,44},'Src'}]}},
          {debug_line,868,392},
          {'case',
              {868,5},
              {lc,{868,10},
                  {block,0,[{var,{868,11},'Other'}]},
                  [{block,0,[{atom,{868,48},true}]},
                   {generate,
                       {868,45},
                       {tuple,
                           {868,20},
                           [{var,{868,21},'Other'},
                            {var,{868,27},'_'},
                            {tuple,
                                {868,29},
                                [{atom,{868,30},embed},
                                 {var,{868,36},'EdgeOp'}]}]},
                       {var,{868,48},'InEdges'}},
                   {block,0,[{atom,{868,64},true}]},
                   {op,{868,64},
                       '=:=',
                       {var,{868,57},'EdgeOp'},
                       {var,{868,68},'E'}}]},
              [{clause,
                   {869,9},
                   [{cons,{869,9},{var,{869,10},'Next'},{nil,{869,14}}}],
                   [],
                   [{debug_line,870,393},
                    {atom,{870,14},skip},
                    {debug_line,871,394},
                    {call,
                        {871,13},
                        {atom,{871,13},merge_in_arg},
                        [{var,{871,26},'Next'},
                         {block,0,
                             [{tuple,
                                  {871,32},
                                  [{atom,{871,33},unique},
                                   {var,{871,40},'Elements'}]}]},
                         {var,{871,51},'Cutoff'},
                         {var,{871,59},'State'}]}]},
               {clause,
                   {872,9},
                   [{nil,{872,9}}],
                   [],
                   [{debug_line,873,395},
                    {call,
                        {873,13},
                        {atom,{873,13},get_status},
                        [{var,{873,24},'V'},{var,{873,27},'State'}]}]}]}]}]}.
{attribute,
    {876,2},
    spec,
    {{new,3},
     [{type,
          {876,10},
          'fun',
          [{type,
               {876,10},
               product,
               [{type,
                    {876,11},
                    list,
                    [{remote_type,
                         {876,12},
                         [{atom,{876,12},beam_ssa},
                          {atom,{876,21},b_var},
                          []]}]},
                {user_type,{876,31},call_in_arg_info,[]},
                {type,{876,51},non_neg_integer,[]}]},
           {user_type,{877,11},sharing_state,[]}]}]}}.
{function,
    {878,1},
    new,3,
    [{clause,
         {878,1},
         [{var,{878,1},'_'},{var,{878,1},'_'},{var,{878,1},'_'}],
         [[{call,
               {878,1},
               {remote,
                   {878,1},
                   {atom,{878,1},fake},
                   {atom,{878,1},is_beam_bif_info}},
               []}]],
         [{debug_line,878,396},{atom,{878,1},ignore}]},
     {clause,
         {878,1},
         [{var,{878,5},'Args'},{var,{878,11},'ArgsInfo'},{var,{878,21},'Cnt'}],
         [],
         [{debug_line,879,397},
          {atom,{879,6},skip},
          {debug_line,880,398},
          {match,
              {880,5},
              {var,{880,5},'R'},
              {match,
                  {880,9},
                  {tuple,{880,9},[{var,{880,10},'SS'},{var,{880,13},'_'}]},
                  {call,
                      {880,18},
                      {atom,{880,18},new},
                      [{var,{880,22},'Args'},
                       {var,{880,28},'ArgsInfo'},
                       {var,{880,38},'Cnt'},
                       {block,0,[{call,{880,43},{atom,{880,43},new},[]}]}]}}},
          {debug_line,881,399},
          {var,{881,19},'SS'},
          {debug_line,882,400},
          {var,{882,5},'R'}]}]}.
{function,
    {884,1},
    new,4,
    [{clause,
         {884,1},
         [{var,{884,1},'_'},
          {var,{884,1},'_'},
          {var,{884,1},'_'},
          {var,{884,1},'_'}],
         [[{call,
               {884,1},
               {remote,
                   {884,1},
                   {atom,{884,1},fake},
                   {atom,{884,1},is_beam_bif_info}},
               []}]],
         [{debug_line,884,401},{atom,{884,1},ignore}]},
     {clause,
         {884,1},
         [{cons,{884,5},{var,{884,6},'A'},{var,{884,8},'As'}},
          {cons,{884,13},{var,{884,14},'S'},{var,{884,16},'Stats'}},
          {var,{884,24},'Cnt'},
          {var,{884,29},'SS'}],
         [[{op,{885,10},'=:=',{var,{885,8},'S'},{atom,{885,14},aliased}}],
          [{op,{885,25},'=:=',{var,{885,23},'S'},{atom,{885,29},unique}}],
          [{op,{885,39},'=:=',{var,{885,37},'S'},{atom,{885,43},no_info}}]],
         [{debug_line,886,402},
          {call,
              {886,5},
              {atom,{886,5},new},
              [{var,{886,9},'As'},
               {var,{886,13},'Stats'},
               {var,{886,20},'Cnt'},
               {block,0,
                   [{call,
                        {886,25},
                        {atom,{886,25},add_var},
                        [{var,{886,33},'A'},
                         {var,{886,36},'S'},
                         {var,{886,39},'SS'}]}]}]}]},
     {clause,
         {887,1},
         [{cons,{887,5},{var,{887,6},'A'},{var,{887,8},'As'}},
          {cons,
              {887,13},
              {tuple,
                  {887,14},
                  [{atom,{887,15},unique},{var,{887,22},'Elements'}]},
              {var,{887,32},'Stats'}},
          {var,{887,40},'Cnt0'},
          {var,{887,46},'SS0'}],
         [],
         [{debug_line,888,403},
          {match,
              {888,5},
              {var,{888,5},'SS1'},
              {call,
                  {888,11},
                  {atom,{888,11},add_var},
                  [{var,{888,19},'A'},
                   {atom,{888,22},unique},
                   {var,{888,30},'SS0'}]}},
          {debug_line,889,404},
          {match,
              {889,5},
              {tuple,{889,5},[{var,{889,6},'SS'},{var,{889,9},'Cnt'}]},
              {call,
                  {889,16},
                  {atom,{889,16},init_elements},
                  [{var,{889,30},'Elements'},
                   {var,{889,40},'A'},
                   {var,{889,43},'Cnt0'},
                   {var,{889,49},'SS1'}]}},
          {debug_line,890,405},
          {call,
              {890,5},
              {atom,{890,5},new},
              [{var,{890,9},'As'},
               {var,{890,13},'Stats'},
               {var,{890,20},'Cnt'},
               {var,{890,25},'SS'}]}]},
     {clause,
         {891,1},
         [{nil,{891,5}},
          {nil,{891,9}},
          {var,{891,13},'Cnt'},
          {var,{891,18},'SS'}],
         [],
         [{debug_line,892,406},
          {tuple,{892,5},[{var,{892,6},'SS'},{var,{892,9},'Cnt'}]}]}]}.
{function,
    {894,1},
    init_elements,4,
    [{clause,
         {894,1},
         [{var,{894,1},'_'},
          {var,{894,1},'_'},
          {var,{894,1},'_'},
          {var,{894,1},'_'}],
         [[{call,
               {894,1},
               {remote,
                   {894,1},
                   {atom,{894,1},fake},
                   {atom,{894,1},is_beam_bif_info}},
               []}]],
         [{debug_line,894,407},{atom,{894,1},ignore}]},
     {clause,
         {894,1},
         [{var,{894,15},'Elements'},
          {var,{894,25},'V'},
          {var,{894,28},'Cnt0'},
          {var,{894,34},'SS0'}],
         [],
         [{debug_line,895,408},
          {call,
              {895,5},
              {remote,{895,9},{atom,{895,5},maps},{atom,{895,10},fold}},
              [{block,0,
                   [{'fun',
                        {895,15},
                        {clauses,
                            [{clause,
                                 {895,18},
                                 [{var,{895,19},'Idx'},
                                  {var,{895,24},'Status'},
                                  {tuple,
                                      {895,32},
                                      [{var,{895,33},'SS'},
                                       {var,{895,36},'Cnt'}]}],
                                 [],
                                 [{debug_line,896,409},
                                  {call,
                                      {896,23},
                                      {atom,{896,23},init_element},
                                      [{var,{896,36},'Idx'},
                                       {var,{896,41},'Status'},
                                       {var,{896,49},'V'},
                                       {var,{896,52},'Cnt'},
                                       {var,{896,57},'SS'}]}]}]}}]},
               {block,0,
                   [{debug_line,897,410},
                    {tuple,
                        {897,20},
                        [{var,{897,21},'SS0'},{var,{897,25},'Cnt0'}]}]},
               {var,{897,32},'Elements'}]}]}]}.
{function,
    {899,1},
    init_element,5,
    [{clause,
         {899,1},
         [{var,{899,1},'_'},
          {var,{899,1},'_'},
          {var,{899,1},'_'},
          {var,{899,1},'_'},
          {var,{899,1},'_'}],
         [[{call,
               {899,1},
               {remote,
                   {899,1},
                   {atom,{899,1},fake},
                   {atom,{899,1},is_beam_bif_info}},
               []}]],
         [{debug_line,899,411},{atom,{899,1},ignore}]},
     {clause,
         {899,1},
         [{var,{899,14},'Idx'},
          {var,{899,19},'Status'},
          {var,{899,27},'Child'},
          {var,{899,34},'Cnt0'},
          {var,{899,40},'SS0'}],
         [],
         [{debug_line,900,412},
          {match,
              {900,5},
              {var,{900,5},'ElemV'},
              {tuple,{900,13},[{atom,{900,13},b_var},{var,{900,25},'Cnt0'}]}},
          {debug_line,901,413},
          {match,
              {901,5},
              {tuple,{901,5},[{var,{901,6},'SS1'},{var,{901,10},'Cnt'}]},
              {call,
                  {901,17},
                  {atom,{901,17},new},
                  [{block,0,
                       [{cons,
                            {901,21},
                            {var,{901,22},'ElemV'},
                            {nil,{901,27}}}]},
                   {block,0,
                       [{cons,
                            {901,30},
                            {var,{901,31},'Status'},
                            {nil,{901,37}}}]},
                   {block,0,
                       [{op,{901,44},
                            '+',
                            {var,{901,40},'Cnt0'},
                            {integer,{901,45},1}}]},
                   {var,{901,48},'SS0'}]}},
          {debug_line,902,414},
          {atom,{902,6},skip},
          {debug_line,907,415},
          {match,
              {907,5},
              {var,{907,5},'SS'},
              {call,
                  {907,10},
                  {remote,
                      {907,22},
                      {atom,{907,10},beam_digraph},
                      {atom,{907,23},add_edge}},
                  [{var,{907,32},'SS1'},
                   {var,{907,37},'ElemV'},
                   {var,{907,44},'Child'},
                   {block,0,
                       [{tuple,
                            {907,51},
                            [{atom,{907,52},embed},{var,{907,58},'Idx'}]}]}]}},
          {debug_line,908,416},
          {tuple,{908,5},[{var,{908,6},'SS'},{var,{908,9},'Cnt'}]}]}]}.
{attribute,
    {912,2},
    spec,
    {{has_out_edges,2},
     [{type,
          {912,20},
          'fun',
          [{type,
               {912,20},
               product,
               [{remote_type,
                    {912,21},
                    [{atom,{912,21},beam_ssa},{atom,{912,30},b_var},[]]},
                {user_type,{912,39},sharing_state,[]}]},
           {type,{912,59},boolean,[]}]}]}}.
{function,{913,1},
          has_out_edges,2,
          [{clause,{913,1},
                   [{var,{913,1},'_'},{var,{913,1},'_'}],
                   [[{call,{913,1},
                           {remote,{913,1},
                                   {atom,{913,1},fake},
                                   {atom,{913,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,913,417},{atom,{913,1},ignore}]},
           {clause,{913,1},
                   [{var,{913,15},'V'},{var,{913,18},'State'}],
                   [],
                   [{debug_line,914,418},
                    {op,{914,38},
                        '=/=',
                        {call,{914,5},
                              {remote,{914,17},
                                      {atom,{914,5},beam_digraph},
                                      {atom,{914,18},out_edges}},
                              [{var,{914,28},'State'},{var,{914,35},'V'}]},
                        {nil,{914,42}}}]}]}.
{eof,{1069,1}}.
