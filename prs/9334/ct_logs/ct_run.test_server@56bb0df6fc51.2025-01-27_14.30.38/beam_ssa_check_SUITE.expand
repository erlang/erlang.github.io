{attribute,{1,1},file,{"beam_ssa_check_SUITE.erl",1}}.
{attribute,{20,2},module,beam_ssa_check_SUITE}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,99,111,109,109,
             111,110,95,116,101,115,116,45,49,46,50,55,46,54,47,105,110,99,
             108,117,100,101,47,99,116,46,104,114,108],
            1}}.
{attribute,{25,1},file,{"beam_ssa_check_SUITE.erl",25}}.
{attribute,{1,1},
           file,
           {[47,98,117,105,108,100,114,111,111,116,47,111,116,112,47,69,114,
             108,97,110,103,32,8709,8868,8478,47,108,105,98,47,115,116,100,
             108,105,98,45,54,46,50,47,105,110,99,108,117,100,101,47,101,114,
             108,95,99,111,109,112,105,108,101,46,104,114,108],
            1}}.
{attribute,
    {23,2},
    record,
    {options,
        [{typed_record_field,
             {record_field,{24,4},{atom,{24,4},includes},{nil,{24,13}}},
             {type,
                 {24,19},
                 list,
                 [{remote_type,
                      {24,20},
                      [{atom,{24,20},file},{atom,{24,25},filename},[]]}]}},
         {typed_record_field,
             {record_field,{26,4},{atom,{26,4},outdir},{string,{26,11},"."}},
             {remote_type,
                 {26,19},
                 [{atom,{26,19},file},{atom,{26,24},filename},[]]}},
         {typed_record_field,
             {record_field,
                 {28,4},
                 {atom,{28,4},output_type},
                 {atom,{28,16},undefined}},
             {type,{28,29},atom,[]}},
         {typed_record_field,
             {record_field,{29,4},{atom,{29,4},defines},{nil,{29,12}}},
             {type,
                 {29,19},
                 list,
                 [{type,
                      {29,20},
                      union,
                      [{type,{29,20},atom,[]},
                       {type,
                           {29,29},
                           tuple,
                           [{type,{29,30},atom,[]},{var,{29,37},'_'}]}]}]}},
         {typed_record_field,
             {record_field,{33,4},{atom,{33,4},warning},{integer,{33,12},1}},
             {type,{33,19},non_neg_integer,[]}},
         {typed_record_field,
             {record_field,{36,4},{atom,{36,4},verbose},{atom,{36,12},false}},
             {type,{36,21},boolean,[]}},
         {record_field,{37,4},{atom,{37,4},optimize},{integer,{37,13},999}},
         {typed_record_field,
             {record_field,{38,4},{atom,{38,4},specific},{nil,{38,13}}},
             {type,{38,19},list,[{var,{38,20},'_'}]}},
         {typed_record_field,
             {record_field,{39,4},{atom,{39,4},outfile},{string,{39,12},[]}},
             {remote_type,
                 {39,19},
                 [{atom,{39,19},file},{atom,{39,24},filename},[]]}},
         {typed_record_field,
             {record_field,{41,4},{atom,{41,4},cwd}},
             {remote_type,
                 {41,17},
                 [{atom,{41,17},file},{atom,{41,22},filename},[]]}}]}}.
{attribute,{26,1},file,{"beam_ssa_check_SUITE.erl",26}}.
{attribute,{27,2},
           export,
           [{all,0},
            {suite,0},
            {groups,0},
            {init_per_suite,1},
            {end_per_suite,1},
            {init_per_group,2},
            {end_per_group,2},
            {alias_checks,1},
            {annotation_checks,1},
            {appendable_checks,1},
            {bs_size_unit_checks,1},
            {no_reuse_hint_checks,1},
            {no_type_info_checks,1},
            {private_append_checks,1},
            {ret_annotation_checks,1},
            {sanity_checks,1},
            {tuple_inplace_checks,1},
            {non_throwing_bifs,1}]}.
{function,
    {43,1},
    suite,0,
    [{clause,
         {43,1},
         [],
         [[{call,
               {43,1},
               {remote,
                   {43,1},
                   {atom,{43,1},fake},
                   {atom,{43,1},is_beam_bif_info}},
               []}]],
         [{debug_line,43,1},{atom,{43,1},ignore}]},
     {clause,
         {43,1},
         [],[],
         [{debug_line,43,2},
          {cons,
              {43,12},
              {tuple,
                  {43,13},
                  [{atom,{43,14},ct_hooks},
                   {cons,
                       {43,23},
                       {atom,{43,24},ts_install_cth},
                       {nil,{43,38}}}]},
              {nil,{43,40}}}]}]}.
{function,
    {45,1},
    all,0,
    [{clause,
         {45,1},
         [],
         [[{call,
               {45,1},
               {remote,
                   {45,1},
                   {atom,{45,1},fake},
                   {atom,{45,1},is_beam_bif_info}},
               []}]],
         [{debug_line,45,3},{atom,{45,1},ignore}]},
     {clause,
         {45,1},
         [],[],
         [{debug_line,46,4},
          {cons,
              {46,5},
              {tuple,
                  {46,6},
                  [{atom,{46,7},group},{atom,{46,13},post_ssa_opt_dynamic}]},
              {cons,
                  {46,35},
                  {tuple,
                      {46,35},
                      [{atom,{46,36},group},
                       {atom,{46,42},post_ssa_opt_static}]},
                  {nil,{46,62}}}}]}]}.
{function,
 {48,1},
 groups,0,
 [{clause,
   {48,1},
   [],
   [[{call,
      {48,1},
      {remote,{48,1},{atom,{48,1},fake},{atom,{48,1},is_beam_bif_info}},
      []}]],
   [{debug_line,48,5},{atom,{48,1},ignore}]},
  {clause,
   {48,1},
   [],[],
   [{debug_line,49,6},
    {cons,
     {49,5},
     {tuple,
      {49,6},
      [{atom,{49,7},post_ssa_opt_static},
       {call,
        {49,27},
        {remote,{49,35},{atom,{49,27},test_lib},{atom,{49,36},parallel}},
        []},
       {cons,
        {50,7},
        {atom,{50,8},alias_checks},
        {cons,
         {51,8},
         {atom,{51,8},annotation_checks},
         {cons,
          {52,8},
          {atom,{52,8},appendable_checks},
          {cons,
           {53,8},
           {atom,{53,8},no_reuse_hint_checks},
           {cons,
            {54,8},
            {atom,{54,8},no_type_info_checks},
            {cons,
             {55,8},
             {atom,{55,8},private_append_checks},
             {cons,
              {56,8},
              {atom,{56,8},ret_annotation_checks},
              {cons,
               {57,8},
               {atom,{57,8},sanity_checks},
               {cons,
                {58,8},
                {atom,{58,8},tuple_inplace_checks},
                {cons,
                 {59,8},
                 {atom,{59,8},non_throwing_bifs},
                 {nil,{59,25}}}}}}}}}}}}]},
     {cons,
      {60,6},
      {tuple,
       {60,6},
       [{atom,{60,7},post_ssa_opt_dynamic},
        {call,
         {60,28},
         {remote,{60,36},{atom,{60,28},test_lib},{atom,{60,37},parallel}},
         []},
        {cons,{61,7},{atom,{61,8},bs_size_unit_checks},{nil,{61,27}}}]},
      {nil,{61,29}}}}]}]}.
{function,{63,1},
          init_per_suite,1,
          [{clause,{63,1},
                   [{var,{63,1},'_'}],
                   [[{call,{63,1},
                           {remote,{63,1},
                                   {atom,{63,1},fake},
                                   {atom,{63,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,63,7},{atom,{63,1},ignore}]},
           {clause,{63,1},
                   [{var,{63,16},'Config'}],
                   [],
                   [{debug_line,64,8},
                    {call,{64,5},
                          {remote,{64,13},
                                  {atom,{64,5},test_lib},
                                  {atom,{64,14},recompile}},
                          [{atom,{64,25},beam_ssa_check_SUITE}]},
                    {debug_line,65,9},
                    {var,{65,5},'Config'}]}]}.
{function,{67,1},
          end_per_suite,1,
          [{clause,{67,1},
                   [{var,{67,1},'_'}],
                   [[{call,{67,1},
                           {remote,{67,1},
                                   {atom,{67,1},fake},
                                   {atom,{67,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,67,10},{atom,{67,1},ignore}]},
           {clause,{67,1},
                   [{var,{67,15},'_Config'}],
                   [],
                   [{debug_line,68,11},{atom,{68,5},ok}]}]}.
{function,
    {70,1},
    init_per_group,2,
    [{clause,
         {70,1},
         [{var,{70,1},'_'},{var,{70,1},'_'}],
         [[{call,
               {70,1},
               {remote,
                   {70,1},
                   {atom,{70,1},fake},
                   {atom,{70,1},is_beam_bif_info}},
               []}]],
         [{debug_line,70,12},{atom,{70,1},ignore}]},
     {clause,
         {70,1},
         [{atom,{70,16},post_ssa_opt_dynamic},{var,{70,38},'Config'}],
         [],
         [{debug_line,71,13},
          {match,
              {71,5},
              {var,{71,5},'TargetDir'},
              {call,
                  {71,17},
                  {atom,{71,17},dynamic_workdir},
                  [{var,{71,33},'Config'}]}},
          {debug_line,72,14},
          {call,
              {72,5},
              {remote,{72,7},{atom,{72,5},ct},{atom,{72,8},log}},
              [{block,0,
                   [{string,
                        {72,12},
                        "Creating working directory for generated test cases: ~p~n"}]},
               {block,0,
                   [{debug_line,73,15},
                    {cons,{73,12},{var,{73,13},'TargetDir'},{nil,{73,22}}}]}]},
          {debug_line,74,16},
          {match,
              {74,5},
              {atom,{74,5},ok},
              {call,
                  {74,10},
                  {remote,{74,14},{atom,{74,10},file},{atom,{74,15},make_dir}},
                  [{var,{74,24},'TargetDir'}]}},
          {debug_line,75,17},
          {var,{75,5},'Config'}]},
     {clause,
         {76,1},
         [{var,{76,16},'_GroupName'},{var,{76,28},'Config'}],
         [],
         [{debug_line,77,18},{var,{77,5},'Config'}]}]}.
{function,
    {79,1},
    end_per_group,2,
    [{clause,
         {79,1},
         [{var,{79,1},'_'},{var,{79,1},'_'}],
         [[{call,
               {79,1},
               {remote,
                   {79,1},
                   {atom,{79,1},fake},
                   {atom,{79,1},is_beam_bif_info}},
               []}]],
         [{debug_line,79,19},{atom,{79,1},ignore}]},
     {clause,
         {79,1},
         [{atom,{79,15},post_ssa_opt_dynamic},{var,{79,37},'Config'}],
         [],
         [{debug_line,80,20},
          {match,
              {80,5},
              {var,{80,5},'PrivDir'},
              {call,
                  {80,15},
                  {remote,
                      {80,24},
                      {atom,{80,15},proplists},
                      {atom,{80,25},get_value}},
                  [{atom,{80,35},priv_dir},{var,{80,45},'Config'}]}},
          {debug_line,81,21},
          {match,
              {81,5},
              {var,{81,5},'TargetDir'},
              {call,
                  {81,17},
                  {remote,{81,25},{atom,{81,17},filename},{atom,{81,26},join}},
                  [{var,{81,31},'PrivDir'},
                   {block,0,[{string,{81,40},"dynamic"}]}]}},
          {debug_line,82,22},
          {'case',
              {82,5},
              {call,
                  {82,10},
                  {remote,
                      {82,19},
                      {atom,{82,10},proplists},
                      {atom,{82,20},get_bool}},
                  [{atom,{82,29},keep_generated},{var,{82,45},'Config'}]},
              [{clause,
                   {83,9},
                   [{atom,{83,9},false}],
                   [],
                   [{debug_line,84,23},
                    {call,
                        {84,13},
                        {remote,{84,15},{atom,{84,13},ct},{atom,{84,16},log}},
                        [{block,0,
                             [{string,
                                  {84,20},
                                  "Removing working directory for generated test cases: ~p~n"}]},
                         {block,0,
                             [{debug_line,85,24},
                              {cons,
                                  {85,20},
                                  {var,{85,21},'TargetDir'},
                                  {nil,{85,30}}}]}]},
                    {debug_line,86,25},
                    {call,
                        {86,13},
                        {remote,
                            {86,17},
                            {atom,{86,13},file},
                            {atom,{86,18},del_dir_r}},
                        [{var,{86,28},'TargetDir'}]}]},
               {clause,
                   {87,9},
                   [{atom,{87,9},true}],
                   [],
                   [{debug_line,88,26},{var,{88,13},'Config'}]}]}]},
     {clause,
         {90,1},
         [{var,{90,15},'_GroupName'},{var,{90,27},'Config'}],
         [],
         [{debug_line,91,27},{var,{91,5},'Config'}]}]}.
{function,{93,1},
          alias_checks,1,
          [{clause,{93,1},
                   [{var,{93,1},'_'}],
                   [[{call,{93,1},
                           {remote,{93,1},
                                   {atom,{93,1},fake},
                                   {atom,{93,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,93,28},{atom,{93,1},ignore}]},
           {clause,{93,1},
                   [{var,{93,14},'Config'}],
                   [[{call,{93,27},
                           {remote,{93,27},
                                   {atom,{93,27},erlang},
                                   {atom,{93,27},is_list}},
                           [{var,{93,35},'Config'}]}]],
                   [{debug_line,94,29},
                    {call,{94,5},
                          {atom,{94,5},run_post_ssa_opt},
                          [{atom,{94,22},alias},{var,{94,29},'Config'}]},
                    {debug_line,95,30},
                    {call,{95,5},
                          {atom,{95,5},run_post_ssa_opt},
                          [{atom,{95,22},alias_non_convergence},
                           {var,{95,45},'Config'}]},
                    {debug_line,96,31},
                    {call,{96,5},
                          {atom,{96,5},run_post_ssa_opt},
                          [{atom,{96,22},alias_chain},{var,{96,35},'Config'}]},
                    {debug_line,97,32},
                    {call,{97,5},
                          {atom,{97,5},run_post_ssa_opt},
                          [{atom,{97,22},ss_depth_limit},
                           {var,{97,38},'Config'}]}]}]}.
{function,{99,1},
          annotation_checks,1,
          [{clause,{99,1},
                   [{var,{99,1},'_'}],
                   [[{call,{99,1},
                           {remote,{99,1},
                                   {atom,{99,1},fake},
                                   {atom,{99,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,99,33},{atom,{99,1},ignore}]},
           {clause,{99,1},
                   [{var,{99,19},'Config'}],
                   [[{call,{99,32},
                           {remote,{99,32},
                                   {atom,{99,32},erlang},
                                   {atom,{99,32},is_list}},
                           [{var,{99,40},'Config'}]}]],
                   [{debug_line,100,34},
                    {call,{100,5},
                          {atom,{100,5},run_post_ssa_opt},
                          [{atom,{100,22},annotations},
                           {var,{100,35},'Config'}]}]}]}.
{function,{102,1},
          appendable_checks,1,
          [{clause,{102,1},
                   [{var,{102,1},'_'}],
                   [[{call,{102,1},
                           {remote,{102,1},
                                   {atom,{102,1},fake},
                                   {atom,{102,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,102,35},{atom,{102,1},ignore}]},
           {clause,{102,1},
                   [{var,{102,19},'Config'}],
                   [[{call,{102,32},
                           {remote,{102,32},
                                   {atom,{102,32},erlang},
                                   {atom,{102,32},is_list}},
                           [{var,{102,40},'Config'}]}]],
                   [{debug_line,103,36},
                    {call,{103,5},
                          {atom,{103,5},run_post_ssa_opt},
                          [{atom,{103,22},appendable},
                           {var,{103,34},'Config'}]}]}]}.
{function,{105,1},
          bs_size_unit_checks,1,
          [{clause,{105,1},
                   [{var,{105,1},'_'}],
                   [[{call,{105,1},
                           {remote,{105,1},
                                   {atom,{105,1},fake},
                                   {atom,{105,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,105,37},{atom,{105,1},ignore}]},
           {clause,{105,1},
                   [{var,{105,21},'Config'}],
                   [[{call,{105,34},
                           {remote,{105,34},
                                   {atom,{105,34},erlang},
                                   {atom,{105,34},is_list}},
                           [{var,{105,42},'Config'}]}]],
                   [{debug_line,106,38},
                    {call,{106,5},
                          {atom,{106,5},gen_and_run_post_ssa_opt},
                          [{atom,{106,30},bs_size_unit_checks},
                           {var,{106,51},'Config'}]}]}]}.
{function,{108,1},
          no_reuse_hint_checks,1,
          [{clause,{108,1},
                   [{var,{108,1},'_'}],
                   [[{call,{108,1},
                           {remote,{108,1},
                                   {atom,{108,1},fake},
                                   {atom,{108,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,108,39},{atom,{108,1},ignore}]},
           {clause,{108,1},
                   [{var,{108,22},'Config'}],
                   [[{call,{108,35},
                           {remote,{108,35},
                                   {atom,{108,35},erlang},
                                   {atom,{108,35},is_list}},
                           [{var,{108,43},'Config'}]}]],
                   [{debug_line,109,40},
                    {call,{109,5},
                          {atom,{109,5},run_post_ssa_opt},
                          [{atom,{109,22},no_reuse_hint},
                           {var,{109,37},'Config'}]}]}]}.
{function,{111,1},
          no_type_info_checks,1,
          [{clause,{111,1},
                   [{var,{111,1},'_'}],
                   [[{call,{111,1},
                           {remote,{111,1},
                                   {atom,{111,1},fake},
                                   {atom,{111,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,111,41},{atom,{111,1},ignore}]},
           {clause,{111,1},
                   [{var,{111,21},'Config'}],
                   [[{call,{111,34},
                           {remote,{111,34},
                                   {atom,{111,34},erlang},
                                   {atom,{111,34},is_list}},
                           [{var,{111,42},'Config'}]}]],
                   [{debug_line,112,42},
                    {call,{112,5},
                          {atom,{112,5},run_post_ssa_opt},
                          [{atom,{112,22},no_type_info},
                           {var,{112,36},'Config'}]}]}]}.
{function,{114,1},
          private_append_checks,1,
          [{clause,{114,1},
                   [{var,{114,1},'_'}],
                   [[{call,{114,1},
                           {remote,{114,1},
                                   {atom,{114,1},fake},
                                   {atom,{114,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,114,43},{atom,{114,1},ignore}]},
           {clause,{114,1},
                   [{var,{114,23},'Config'}],
                   [[{call,{114,36},
                           {remote,{114,36},
                                   {atom,{114,36},erlang},
                                   {atom,{114,36},is_list}},
                           [{var,{114,44},'Config'}]}]],
                   [{debug_line,115,44},
                    {call,{115,5},
                          {atom,{115,5},run_post_ssa_opt},
                          [{atom,{115,22},private_append},
                           {var,{115,38},'Config'}]}]}]}.
{function,{117,1},
          tuple_inplace_checks,1,
          [{clause,{117,1},
                   [{var,{117,1},'_'}],
                   [[{call,{117,1},
                           {remote,{117,1},
                                   {atom,{117,1},fake},
                                   {atom,{117,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,117,45},{atom,{117,1},ignore}]},
           {clause,{117,1},
                   [{var,{117,22},'Config'}],
                   [[{call,{117,35},
                           {remote,{117,35},
                                   {atom,{117,35},erlang},
                                   {atom,{117,35},is_list}},
                           [{var,{117,43},'Config'}]}]],
                   [{debug_line,118,46},
                    {call,{118,5},
                          {atom,{118,5},run_post_ssa_opt},
                          [{atom,{118,22},tuple_inplace_checks},
                           {var,{118,44},'Config'}]},
                    {debug_line,119,47},
                    {call,{119,5},
                          {atom,{119,5},run_post_ssa_opt},
                          [{atom,{119,22},tuple_inplace_abort0},
                           {var,{119,44},'Config'}]},
                    {debug_line,120,48},
                    {call,{120,5},
                          {atom,{120,5},run_post_ssa_opt},
                          [{atom,{120,22},tuple_inplace_abort1},
                           {var,{120,44},'Config'}]},
                    {debug_line,121,49},
                    {call,{121,5},
                          {atom,{121,5},run_post_ssa_opt},
                          [{atom,{121,22},tuple_inplace_abort2},
                           {var,{121,44},'Config'}]},
                    {debug_line,122,50},
                    {call,{122,5},
                          {atom,{122,5},run_post_ssa_opt},
                          [{atom,{122,22},tuple_inplace_abort3},
                           {var,{122,44},'Config'}]}]}]}.
{function,{124,1},
          ret_annotation_checks,1,
          [{clause,{124,1},
                   [{var,{124,1},'_'}],
                   [[{call,{124,1},
                           {remote,{124,1},
                                   {atom,{124,1},fake},
                                   {atom,{124,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,124,51},{atom,{124,1},ignore}]},
           {clause,{124,1},
                   [{var,{124,23},'Config'}],
                   [[{call,{124,36},
                           {remote,{124,36},
                                   {atom,{124,36},erlang},
                                   {atom,{124,36},is_list}},
                           [{var,{124,44},'Config'}]}]],
                   [{debug_line,125,52},
                    {call,{125,5},
                          {atom,{125,5},run_post_ssa_opt},
                          [{atom,{125,22},ret_annotation},
                           {var,{125,38},'Config'}]}]}]}.
{function,{127,1},
          sanity_checks,1,
          [{clause,{127,1},
                   [{var,{127,1},'_'}],
                   [[{call,{127,1},
                           {remote,{127,1},
                                   {atom,{127,1},fake},
                                   {atom,{127,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,127,53},{atom,{127,1},ignore}]},
           {clause,{127,1},
                   [{var,{127,15},'Config'}],
                   [[{call,{127,28},
                           {remote,{127,28},
                                   {atom,{127,28},erlang},
                                   {atom,{127,28},is_list}},
                           [{var,{127,36},'Config'}]}]],
                   [{debug_line,128,54},
                    {call,{128,5},
                          {atom,{128,5},run_post_ssa_opt},
                          [{atom,{128,22},sanity_checks},
                           {var,{128,37},'Config'}]}]}]}.
{function,{130,1},
          non_throwing_bifs,1,
          [{clause,{130,1},
                   [{var,{130,1},'_'}],
                   [[{call,{130,1},
                           {remote,{130,1},
                                   {atom,{130,1},fake},
                                   {atom,{130,1},is_beam_bif_info}},
                           []}]],
                   [{debug_line,130,55},{atom,{130,1},ignore}]},
           {clause,{130,1},
                   [{var,{130,19},'Config'}],
                   [[{call,{130,32},
                           {remote,{130,32},
                                   {atom,{130,32},erlang},
                                   {atom,{130,32},is_list}},
                           [{var,{130,40},'Config'}]}]],
                   [{debug_line,131,56},
                    {call,{131,5},
                          {atom,{131,5},run_post_ssa_opt},
                          [{atom,{131,22},non_throwing_bifs},
                           {var,{131,41},'Config'}]}]}]}.
{function,
    {133,1},
    dynamic_workdir,1,
    [{clause,
         {133,1},
         [{var,{133,1},'_'}],
         [[{call,
               {133,1},
               {remote,
                   {133,1},
                   {atom,{133,1},fake},
                   {atom,{133,1},is_beam_bif_info}},
               []}]],
         [{debug_line,133,57},{atom,{133,1},ignore}]},
     {clause,
         {133,1},
         [{var,{133,17},'Config'}],
         [],
         [{debug_line,134,58},
          {match,
              {134,5},
              {var,{134,5},'PrivDir'},
              {call,
                  {134,15},
                  {remote,
                      {134,24},
                      {atom,{134,15},proplists},
                      {atom,{134,25},get_value}},
                  [{atom,{134,35},priv_dir},{var,{134,45},'Config'}]}},
          {debug_line,135,59},
          {call,
              {135,5},
              {remote,{135,13},{atom,{135,5},filename},{atom,{135,14},join}},
              [{var,{135,19},'PrivDir'},
               {block,0,[{string,{135,28},"dynamic"}]}]}]}]}.
{function,
    {137,1},
    run_post_ssa_opt,2,
    [{clause,
         {137,1},
         [{var,{137,1},'_'},{var,{137,1},'_'}],
         [[{call,
               {137,1},
               {remote,
                   {137,1},
                   {atom,{137,1},fake},
                   {atom,{137,1},is_beam_bif_info}},
               []}]],
         [{debug_line,137,60},{atom,{137,1},ignore}]},
     {clause,
         {137,1},
         [{var,{137,18},'Module'},{var,{137,26},'Config'}],
         [],
         [{debug_line,138,61},
          {match,
              {138,5},
              {var,{138,5},'File'},
              {op,{138,33},
                  '++',
                  {call,
                      {138,12},
                      {remote,
                          {138,12},
                          {atom,{138,12},erlang},
                          {atom,{138,12},atom_to_list}},
                      [{var,{138,25},'Module'}]},
                  {string,{138,36},".erl"}}},
          {debug_line,140,62},
          {match,
              {140,5},
              {var,{140,5},'DataDir'},
              {call,
                  {140,15},
                  {remote,
                      {140,24},
                      {atom,{140,15},proplists},
                      {atom,{140,25},get_value}},
                  [{atom,{140,35},data_dir},{var,{140,45},'Config'}]}},
          {debug_line,141,63},
          {match,
              {141,5},
              {var,{141,5},'Source'},
              {call,
                  {141,14},
                  {remote,
                      {141,22},
                      {atom,{141,14},filename},
                      {atom,{141,23},join}},
                  [{var,{141,28},'DataDir'},{var,{141,37},'File'}]}},
          {debug_line,142,64},
          {call,
              {142,5},
              {atom,{142,5},run_checks},
              [{var,{142,16},'Source'},
               {atom,{142,24},post_ssa_opt},
               {var,{142,38},'Config'}]}]}]}.
{function,
    {144,1},
    run_checks,3,
    [{clause,
         {144,1},
         [{var,{144,1},'_'},{var,{144,1},'_'},{var,{144,1},'_'}],
         [[{call,
               {144,1},
               {remote,
                   {144,1},
                   {atom,{144,1},fake},
                   {atom,{144,1},is_beam_bif_info}},
               []}]],
         [{debug_line,144,65},{atom,{144,1},ignore}]},
     {clause,
         {144,1},
         [{var,{144,12},'SourceFile'},
          {var,{144,24},'Pass'},
          {var,{144,30},'_Config'}],
         [],
         [{debug_line,145,66},
          {match,
              {145,5},
              {var,{145,5},'Flags'},
              {cons,
                  {145,13},
                  {atom,{145,14},binary},
                  {cons,
                      {145,22},
                      {atom,{145,22},deterministic},
                      {cons,
                          {145,37},
                          {tuple,
                              {145,37},
                              [{atom,{145,38},check_ssa},
                               {var,{145,48},'Pass'}]},
                          {cons,
                              {145,55},
                              {atom,{145,55},report_errors},
                              {nil,{145,68}}}}}}},
          {debug_line,146,67},
          {'case',
              {146,5},
              {call,
                  {146,10},
                  {remote,
                      {146,17},
                      {atom,{146,10},compile},
                      {atom,{146,18},file}},
                  [{var,{146,23},'SourceFile'},{var,{146,35},'Flags'}]},
              [{clause,
                   {147,9},
                   [{tuple,
                        {147,9},
                        [{atom,{147,10},ok},
                         {var,{147,13},'_'},
                         {var,{147,15},'_'}]}],
                   [],
                   [{debug_line,147,68},{atom,{147,21},ok}]},
               {clause,
                   {148,9},
                   [{atom,{148,9},error}],
                   [],
                   [{debug_line,148,69},
                    {call,
                        {148,18},
                        {remote,
                            {148,20},
                            {atom,{148,18},ct},
                            {atom,{148,21},fail}},
                        [{block,0,
                             [{tuple,
                                  {148,26},
                                  [{atom,{148,27},unexpected_error},
                                   {string,
                                       {148,45},
                                       "SSA check failed"}]}]}]}]}]}]}]}.
{function,
    {151,1},
    gen_and_run_post_ssa_opt,2,
    [{clause,
         {151,1},
         [{var,{151,1},'_'},{var,{151,1},'_'}],
         [[{call,
               {151,1},
               {remote,
                   {151,1},
                   {atom,{151,1},fake},
                   {atom,{151,1},is_beam_bif_info}},
               []}]],
         [{debug_line,151,70},{atom,{151,1},ignore}]},
     {clause,
         {151,1},
         [{var,{151,26},'Base'},{var,{151,32},'Config'}],
         [],
         [{debug_line,152,71},
          {match,
              {152,5},
              {var,{152,5},'BaseStr'},
              {call,
                  {152,15},
                  {remote,
                      {152,15},
                      {atom,{152,15},erlang},
                      {atom,{152,15},atom_to_list}},
                  [{var,{152,28},'Base'}]}},
          {debug_line,153,72},
          {match,
              {153,5},
              {var,{153,5},'GenFilenameBase'},
              {op,{153,30},
                  '++',
                  {string,{153,23},"gen_"},
                  {var,{153,33},'BaseStr'}}},
          {debug_line,154,73},
          {match,
              {154,5},
              {var,{154,5},'GenModule'},
              {call,
                  {154,17},
                  {remote,
                      {154,17},
                      {atom,{154,17},erlang},
                      {atom,{154,17},list_to_atom}},
                  [{var,{154,30},'GenFilenameBase'}]}},
          {debug_line,155,74},
          {match,
              {155,5},
              {var,{155,5},'GenFilename'},
              {call,
                  {155,19},
                  {remote,
                      {155,27},
                      {atom,{155,19},filename},
                      {atom,{155,28},join}},
                  [{block,0,
                       [{call,
                            {155,33},
                            {remote,
                                {155,42},
                                {atom,{155,33},proplists},
                                {atom,{155,43},get_value}},
                            [{atom,{155,53},data_dir},
                             {var,{155,63},'Config'}]}]},
                   {block,0,
                       [{debug_line,156,75},
                        {op,{156,49},
                            '++',
                            {var,{156,33},'GenFilenameBase'},
                            {string,{156,52},".erl"}}]}]}},
          {debug_line,157,76},
          {call,
              {157,5},
              {remote,{157,7},{atom,{157,5},ct},{atom,{157,8},log}},
              [{block,0,[{string,{157,12},"Compiling generator ~s~n"}]},
               {block,0,
                   [{cons,
                        {157,40},
                        {var,{157,41},'GenFilename'},
                        {nil,{157,52}}}]}]},
          {debug_line,158,77},
          {match,
              {158,5},
              {tuple,
                  {158,5},
                  [{atom,{158,6},ok},
                   {var,{158,9},'GenModule'},
                   {var,{158,19},'GenCode'}]},
              {call,
                  {158,30},
                  {remote,
                      {158,37},
                      {atom,{158,30},compile},
                      {atom,{158,38},file}},
                  [{var,{158,43},'GenFilename'},
                   {block,0,
                       [{cons,
                            {158,56},
                            {atom,{158,57},binary},
                            {nil,{158,63}}}]}]}},
          {debug_line,159,78},
          {match,
              {159,5},
              {tuple,
                  {159,5},
                  [{atom,{159,6},module},{var,{159,13},'GenModule'}]},
              {call,
                  {159,26},
                  {remote,
                      {159,30},
                      {atom,{159,26},code},
                      {atom,{159,31},load_binary}},
                  [{var,{159,43},'GenModule'},
                   {var,{159,54},'GenFilename'},
                   {var,{159,67},'GenCode'}]}},
          {debug_line,160,79},
          {match,
              {160,5},
              {var,{160,5},'TargetFileName'},
              {call,
                  {160,22},
                  {remote,
                      {160,30},
                      {atom,{160,22},filename},
                      {atom,{160,31},join}},
                  [{block,0,
                       [{call,
                            {160,36},
                            {atom,{160,36},dynamic_workdir},
                            [{var,{160,52},'Config'}]}]},
                   {block,0,
                       [{op,{160,69},
                            '++',
                            {var,{160,61},'BaseStr'},
                            {string,{160,72},".erl"}}]}]}},
          {debug_line,161,80},
          {call,
              {161,5},
              {remote,{161,7},{atom,{161,5},ct},{atom,{161,8},log}},
              [{block,0,[{string,{161,12},"Generating ~s~n"}]},
               {block,0,
                   [{cons,
                        {161,31},
                        {var,{161,32},'TargetFileName'},
                        {nil,{161,46}}}]}]},
          {debug_line,162,81},
          {match,
              {162,5},
              {atom,{162,5},ok},
              {call,
                  {162,10},
                  {remote,
                      {162,19},
                      {var,{162,10},'GenModule'},
                      {atom,{162,20},generate}},
                  [{var,{162,29},'TargetFileName'},{var,{162,45},'Config'}]}},
          {debug_line,163,82},
          {call,
              {163,5},
              {atom,{163,5},run_checks},
              [{var,{163,16},'TargetFileName'},
               {atom,{163,32},post_ssa_opt},
               {var,{163,46},'Config'}]}]}]}.
{eof,{164,1}}.
