module apply_SUITE.
exports [{all,0},
         {bar,1},
         {baz,2},
         {end_per_group,2},
         {end_per_suite,1},
         {foo,0},
         {fun_apply,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {involved,1},
         {mfa,1},
         {module_info,0},
         {module_info,1},
         {suite,0}].
attributes [].

%% apply_SUITE.erl:30
%% Counter = 4
%% bs_ensure_opt: true
function `apply_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% apply_SUITE.erl:32
%% Counter = 4
%% bs_ensure_opt: true
function `apply_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% apply_SUITE.erl:35
%% Counter = 7
%% bs_ensure_opt: true
function `apply_SUITE`:`groups`() {
0:
  %% apply_SUITE.erl:36
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[mfa,fun_apply,involved]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list('fun_apply' | 'involved' | 'mfa')}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list('fun_apply' | 'involved' | 'mfa')})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% apply_SUITE.erl:42
%% Counter = 6
%% bs_ensure_opt: true
function `apply_SUITE`:`init_per_suite`(_0) {
0:
  %% apply_SUITE.erl:43
  _2 = call (`test_lib`:`recompile`/1), `apply_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% apply_SUITE.erl:46
%% Counter = 4
%% bs_ensure_opt: true
function `apply_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% apply_SUITE.erl:49
%% Counter = 4
%% bs_ensure_opt: true
function `apply_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% apply_SUITE.erl:52
%% Counter = 4
%% bs_ensure_opt: true
function `apply_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% apply_SUITE.erl:60
%% Counter = 677
%% bs_ensure_opt: true
function `apply_SUITE`:`mfa`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _334 = bif:is_list _0
  br _334, ^582, ^333

582:
  %% apply_SUITE.erl:61
  _5 = call (`apply_SUITE`:`foo`/0)

  %% Aliased:
  %%    _5
  _335 = succeeded:body _5
  br _335, ^335, ^1

335:
  %% apply_SUITE.erl:61
  %% Argument types:
  %%    (`'-mfa/1-fun-0-'`/1) => fun((_))
  %% Aliased:
  %%    _5
  _237 = call (`'-mfa/1-fun-0-'`/1), _5

  %% Aliased:
  %%    _237
  _336 = succeeded:body _237
  br _336, ^336, ^1

336:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _237
  _579 = bif:'=:=' _237, `ok`
  br _579, ^583, ^338

583:
  %% apply_SUITE.erl:62
  _11 = call (`apply_SUITE`:`bar`/1), `[a,b]`

  %% Aliased:
  %%    _11
  _339 = succeeded:body _11
  br _339, ^339, ^1

339:
  %% apply_SUITE.erl:62
  %% Argument types:
  %%    (`'-mfa/1-fun-1-'`/1) => fun((_))
  %% Aliased:
  %%    _11
  _238 = call (`'-mfa/1-fun-1-'`/1), _11

  %% Aliased:
  %%    _238
  _340 = succeeded:body _238
  br _340, ^340, ^1

340:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _238
  _576 = bif:'=:=' _238, `{[a,b]}`
  br _576, ^584, ^342

584:
  %% apply_SUITE.erl:63
  _17 = call (`apply_SUITE`:`baz`/2), `39`, `{a}`

  %% Aliased:
  %%    _17
  _343 = succeeded:body _17
  br _343, ^343, ^1

343:
  %% apply_SUITE.erl:63
  %% Argument types:
  %%    (`'-mfa/1-fun-2-'`/1) => fun((_))
  %% Aliased:
  %%    _17
  _239 = call (`'-mfa/1-fun-2-'`/1), _17

  %% Aliased:
  %%    _239
  _344 = succeeded:body _239
  br _344, ^344, ^1

344:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _574 = bif:'=:=' _239, `{39,{a}}`
  br _574, ^574, ^346

574:
  %% apply_SUITE.erl:65
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  Mod = call (`id`/1), `apply_SUITE`

  %% Aliased:
  %%    Mod
  _347 = succeeded:body Mod
  br _347, ^585, ^1

585:
  %% apply_SUITE.erl:66
  _24 = call (Mod:`foo`/0)

  %% Aliased:
  %%    _24
  _348 = succeeded:body _24
  br _348, ^348, ^1

348:
  %% apply_SUITE.erl:66
  %% Argument types:
  %%    (`'-mfa/1-fun-3-'`/2) => fun((_))
  %% Aliased:
  %%    _24, 
  %%    Mod
  _240 = call (`'-mfa/1-fun-3-'`/2), _24, Mod

  %% Aliased:
  %%    _240
  _349 = succeeded:body _240
  br _349, ^349, ^1

349:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _240
  _572 = bif:'=:=' _240, `ok`
  br _572, ^586, ^351

586:
  %% apply_SUITE.erl:67
  _30 = call (Mod:`bar`/1), `[a,b]`

  %% Aliased:
  %%    _30
  _352 = succeeded:body _30
  br _352, ^352, ^1

352:
  %% apply_SUITE.erl:67
  %% Argument types:
  %%    (`'-mfa/1-fun-4-'`/2) => fun((_))
  %% Aliased:
  %%    _30, 
  %%    Mod
  _241 = call (`'-mfa/1-fun-4-'`/2), _30, Mod

  %% Aliased:
  %%    _241
  _353 = succeeded:body _241
  br _353, ^353, ^1

353:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _241
  _569 = bif:'=:=' _241, `{[a,b]}`
  br _569, ^587, ^355

587:
  %% apply_SUITE.erl:68
  _36 = call (Mod:`baz`/2), `39`, `{a}`

  %% Aliased:
  %%    _36
  _356 = succeeded:body _36
  br _356, ^356, ^1

356:
  %% apply_SUITE.erl:68
  %% Argument types:
  %%    (`'-mfa/1-fun-5-'`/2) => fun((_))
  %% Aliased:
  %%    _36, 
  %%    Mod
  _242 = call (`'-mfa/1-fun-5-'`/2), _36, Mod

  %% Aliased:
  %%    _242
  _357 = succeeded:body _242
  br _357, ^357, ^1

357:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _242
  _567 = bif:'=:=' _242, `{39,{a}}`
  br _567, ^588, ^359

588:
  %% apply_SUITE.erl:70
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _43 = call (`id`/1), `foo`

  %% Aliased:
  %%    _43
  _360 = succeeded:body _43
  br _360, ^360, ^1

360:
  %% apply_SUITE.erl:70
  _44 = call (`apply_SUITE`:_43/0)

  %% Aliased:
  %%    _44
  _361 = succeeded:body _44
  br _361, ^361, ^1

361:
  %% apply_SUITE.erl:70
  %% Argument types:
  %%    (`'-mfa/1-fun-6-'`/1) => fun((_))
  %% Aliased:
  %%    _44
  _243 = call (`'-mfa/1-fun-6-'`/1), _44

  %% Aliased:
  %%    _243
  _362 = succeeded:body _243
  br _362, ^362, ^1

362:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _243
  _565 = bif:'=:=' _243, `ok`
  br _565, ^589, ^364

589:
  %% apply_SUITE.erl:71
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _51 = call (`id`/1), `bar`

  %% Aliased:
  %%    _51
  _365 = succeeded:body _51
  br _365, ^365, ^1

365:
  %% apply_SUITE.erl:71
  _52 = call (`apply_SUITE`:_51/1), `[a,b]`

  %% Aliased:
  %%    _52
  _366 = succeeded:body _52
  br _366, ^366, ^1

366:
  %% apply_SUITE.erl:71
  %% Argument types:
  %%    (`'-mfa/1-fun-7-'`/1) => fun((_))
  %% Aliased:
  %%    _52
  _244 = call (`'-mfa/1-fun-7-'`/1), _52

  %% Aliased:
  %%    _244
  _367 = succeeded:body _244
  br _367, ^367, ^1

367:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _244
  _562 = bif:'=:=' _244, `{[a,b]}`
  br _562, ^590, ^369

590:
  %% apply_SUITE.erl:72
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _59 = call (`id`/1), `baz`

  %% Aliased:
  %%    _59
  _370 = succeeded:body _59
  br _370, ^370, ^1

370:
  %% apply_SUITE.erl:72
  _60 = call (`apply_SUITE`:_59/2), `39`, `{a}`

  %% Aliased:
  %%    _60
  _371 = succeeded:body _60
  br _371, ^371, ^1

371:
  %% apply_SUITE.erl:72
  %% Argument types:
  %%    (`'-mfa/1-fun-8-'`/1) => fun((_))
  %% Aliased:
  %%    _60
  _245 = call (`'-mfa/1-fun-8-'`/1), _60

  %% Aliased:
  %%    _245
  _372 = succeeded:body _245
  br _372, ^372, ^1

372:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _560 = bif:'=:=' _245, `{39,{a}}`
  br _560, ^591, ^374

591:
  %% apply_SUITE.erl:74
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _67 = call (`id`/1), `foo`

  %% Aliased:
  %%    _67
  _375 = succeeded:body _67
  br _375, ^375, ^1

375:
  %% apply_SUITE.erl:74
  _68 = call (Mod:_67/0)

  %% Aliased:
  %%    _68
  _376 = succeeded:body _68
  br _376, ^376, ^1

376:
  %% apply_SUITE.erl:74
  %% Argument types:
  %%    (`'-mfa/1-fun-9-'`/2) => fun((_))
  %% Aliased:
  %%    _68, 
  %%    Mod
  _246 = call (`'-mfa/1-fun-9-'`/2), _68, Mod

  %% Aliased:
  %%    _246
  _377 = succeeded:body _246
  br _377, ^377, ^1

377:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _246
  _558 = bif:'=:=' _246, `ok`
  br _558, ^592, ^379

592:
  %% apply_SUITE.erl:75
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _75 = call (`id`/1), `bar`

  %% Aliased:
  %%    _75
  _380 = succeeded:body _75
  br _380, ^380, ^1

380:
  %% apply_SUITE.erl:75
  _76 = call (Mod:_75/1), `[a,b]`

  %% Aliased:
  %%    _76
  _381 = succeeded:body _76
  br _381, ^381, ^1

381:
  %% apply_SUITE.erl:75
  %% Argument types:
  %%    (`'-mfa/1-fun-10-'`/2) => fun((_))
  %% Aliased:
  %%    _76, 
  %%    Mod
  _247 = call (`'-mfa/1-fun-10-'`/2), _76, Mod

  %% Aliased:
  %%    _247
  _382 = succeeded:body _247
  br _382, ^382, ^1

382:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _247
  _555 = bif:'=:=' _247, `{[a,b]}`
  br _555, ^593, ^384

593:
  %% apply_SUITE.erl:76
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _83 = call (`id`/1), `baz`

  %% Aliased:
  %%    _83
  _385 = succeeded:body _83
  br _385, ^385, ^1

385:
  %% apply_SUITE.erl:76
  _84 = call (Mod:_83/2), `39`, `{a}`

  %% Aliased:
  %%    _84
  _386 = succeeded:body _84
  br _386, ^386, ^1

386:
  %% apply_SUITE.erl:76
  %% Argument types:
  %%    (`'-mfa/1-fun-11-'`/2) => fun((_))
  %% Aliased:
  %%    _84, 
  %%    Mod
  _248 = call (`'-mfa/1-fun-11-'`/2), _84, Mod

  %% Aliased:
  %%    _248
  _387 = succeeded:body _248
  br _387, ^387, ^1

387:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _248
  _553 = bif:'=:=' _248, `{39,{a}}`
  br _553, ^669, ^389

669:
  br ^673

673:
  _393 = new_try_tag `'catch'`
  br _393, ^594, ^392

594:
  %% apply_SUITE.erl:78
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _91 = call (`id`/1), `bazzzzzz`

  %% Aliased:
  %%    _91
  _395 = succeeded:body _91
  br _395, ^395, ^392

395:
  %% apply_SUITE.erl:78
  _92 = call (Mod:_91/2), `a`, `b`

  %% Aliased:
  %%    _92
  _396 = succeeded:body _92
  br _396, ^396, ^392

396:
  %% apply_SUITE.erl:78
  %% Argument types:
  %%    (`'-mfa/1-fun-12-'`/2) => fun((_))
  %% Aliased:
  %%    _92, 
  %%    Mod
  _283 = call (`'-mfa/1-fun-12-'`/2), _92, Mod

  %% Aliased:
  %%    _283
  _397 = succeeded:body _283
  br _397, ^397, ^392

397:
  br ^390

392:
  %% Unique:
  %%    _393
  _400 = landingpad `'catch'`, _393

  %% Aliased:
  %%    _400
  _398 = extract _400, `0`
  br ^390

390:
  _401 = phi { _398, ^392 }, { _283, ^397 }

  %% Aliased:
  %%    _401
  %% Unique:
  %%    _393
  _93 = catch_end _393, _401

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _549 = is_tagged_tuple _93, `2`, `'EXIT'`
  br _549, ^670, ^403

670:
  br ^674

674:
  _407 = new_try_tag `'catch'`
  br _407, ^595, ^406

595:
  %% apply_SUITE.erl:79
  _99 = call (`erlang`:`apply`/3), `{}`, `baz`, `[a,b]`

  %% Aliased:
  %%    _99
  _409 = succeeded:body _99
  br _409, ^409, ^406

409:
  %% apply_SUITE.erl:79
  %% Argument types:
  %%    (`'-mfa/1-fun-13-'`/1) => fun((_))
  %% Aliased:
  %%    _99
  _286 = call (`'-mfa/1-fun-13-'`/1), _99

  %% Aliased:
  %%    _286
  _410 = succeeded:body _286
  br _410, ^410, ^406

410:
  br ^404

406:
  %% Unique:
  %%    _407
  _413 = landingpad `'catch'`, _407

  %% Aliased:
  %%    _413
  _411 = extract _413, `0`
  br ^404

404:
  _414 = phi { _411, ^406 }, { _286, ^410 }

  %% Aliased:
  %%    _414
  %% Unique:
  %%    _407
  _100 = catch_end _407, _414

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _542 = is_tagged_tuple _100, `2`, `'EXIT'`
  br _542, ^671, ^416

671:
  br ^675

675:
  _420 = new_try_tag `'catch'`
  br _420, ^596, ^419

596:
  %% apply_SUITE.erl:80
  _106 = call (`erlang`:`apply`/3), `apply_SUITE`, `[]`, `[a,b]`

  %% Aliased:
  %%    _106
  _422 = succeeded:body _106
  br _422, ^422, ^419

422:
  %% apply_SUITE.erl:80
  %% Argument types:
  %%    (`'-mfa/1-fun-14-'`/1) => fun((_))
  %% Aliased:
  %%    _106
  _289 = call (`'-mfa/1-fun-14-'`/1), _106

  %% Aliased:
  %%    _289
  _423 = succeeded:body _289
  br _423, ^423, ^419

423:
  br ^417

419:
  %% Unique:
  %%    _420
  _426 = landingpad `'catch'`, _420

  %% Aliased:
  %%    _426
  _424 = extract _426, `0`
  br ^417

417:
  _427 = phi { _424, ^419 }, { _289, ^423 }

  %% Aliased:
  %%    _427
  %% Unique:
  %%    _420
  _107 = catch_end _420, _427

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _535 = is_tagged_tuple _107, `2`, `'EXIT'`
  br _535, ^672, ^429

672:
  br ^676

676:
  _433 = new_try_tag `'catch'`
  br _433, ^431, ^432

431:
  %% apply_SUITE.erl:81
  %% Result type:
  %%    none()
  _291 = call (`bad_literal_call`/1), `1`

  %% Aliased:
  %%    _291
  _435 = succeeded:body _291
  br ^432

432:
  %% Unique:
  %%    _433
  _438 = landingpad `'catch'`, _433

  %% Aliased:
  %%    _438
  _436 = extract _438, `0`
  br ^430

430:
  %% Aliased:
  %%    _436
  %% Unique:
  %%    _433
  _109 = catch_end _433, _436

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _528 = is_tagged_tuple _109, `2`, `'EXIT'`
  br _528, ^525, ^441

525:
  %% apply_SUITE.erl:83
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _111 = call (`id`/1), `[]`

  %% Aliased:
  %%    _111
  _442 = succeeded:body _111
  br _442, ^442, ^1

442:
  %% apply_SUITE.erl:83
  %% Aliased:
  %%    _111, 
  %%    Mod
  _257 = call (`erlang`:`apply`/3), Mod, `foo`, _111

  %% Aliased:
  %%    _257
  _443 = succeeded:body _257
  br _443, ^443, ^1

443:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _257
  _523 = bif:'=:=' _257, `ok`
  br _523, ^522, ^445

522:
  %% apply_SUITE.erl:84
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _113 = call (`id`/1), `[[a,b|c]]`

  %% Aliased:
  %%    _113
  _446 = succeeded:body _113
  br _446, ^446, ^1

446:
  %% apply_SUITE.erl:84
  %% Aliased:
  %%    _113, 
  %%    Mod
  _258 = call (`erlang`:`apply`/3), Mod, `bar`, _113

  %% Aliased:
  %%    _258
  _447 = succeeded:body _258
  br _447, ^447, ^1

447:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _258
  _520 = bif:'=:=' _258, `{[a,b|c]}`
  br _520, ^520, ^449

520:
  %% apply_SUITE.erl:85
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _115 = call (`id`/1), `[[xx],{a}]`

  %% Aliased:
  %%    _115
  _450 = succeeded:body _115
  br _450, ^450, ^1

450:
  %% apply_SUITE.erl:85
  %% Aliased:
  %%    _115
  _259 = call (`erlang`:`apply`/3), `apply_SUITE`, `baz`, _115

  %% Aliased:
  %%    _259
  _451 = succeeded:body _259
  br _451, ^451, ^1

451:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _259
  _518 = bif:'=:=' _259, `{[xx],{a}}`
  br _518, ^518, ^453

518:
  %% apply_SUITE.erl:87
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  Erlang = call (`id`/1), `erlang`

  %% Aliased:
  %%    Erlang
  _454 = succeeded:body Erlang
  br _454, ^454, ^1

454:
  %% apply_SUITE.erl:88
  %% Argument types:
  %%    
  Self = bif:self

  %% apply_SUITE.erl:89
  _123 = call (Erlang:`self`/0)

  %% Aliased:
  %%    _123
  _455 = succeeded:body _123
  br _455, ^455, ^1

455:
  %% apply_SUITE.erl:89
  %% Argument types:
  %%    (`'-mfa/1-fun-15-'`/2) => fun((_))
  %% Aliased:
  %%    _123, 
  %%    Erlang
  _260 = call (`'-mfa/1-fun-15-'`/2), _123, Erlang

  %% Aliased:
  %%    _260
  _456 = succeeded:body _260
  br _456, ^456, ^1

456:
  %% Argument types:
  %%    Self => pid()
  %% Aliased:
  %%    _260
  %% Unique:
  %%    Self
  _459 = bif:'=:=' _260, Self
  br _459, ^599, ^458

599:
  %% apply_SUITE.erl:90
  _131 = call (Erlang:`abs`/1), `-42.0`

  %% Aliased:
  %%    _131
  _460 = succeeded:body _131
  br _460, ^460, ^1

460:
  %% apply_SUITE.erl:90
  %% Argument types:
  %%    (`'-mfa/1-fun-16-'`/2) => fun((_))
  %% Aliased:
  %%    _131, 
  %%    Erlang
  _261 = call (`'-mfa/1-fun-16-'`/2), _131, Erlang

  %% Aliased:
  %%    _261
  _461 = succeeded:body _261
  br _461, ^461, ^1

461:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _261
  _515 = bif:'=:=' _261, `42.0`
  br _515, ^600, ^463

600:
  %% apply_SUITE.erl:91
  _137 = call (Erlang:`element`/2), `2`, `{a,b,c}`

  %% Aliased:
  %%    _137
  _464 = succeeded:body _137
  br _464, ^464, ^1

464:
  %% apply_SUITE.erl:91
  %% Argument types:
  %%    (`'-mfa/1-fun-17-'`/2) => fun((_))
  %% Aliased:
  %%    _137, 
  %%    Erlang
  _262 = call (`'-mfa/1-fun-17-'`/2), _137, Erlang

  %% Aliased:
  %%    _262
  _465 = succeeded:body _262
  br _465, ^465, ^1

465:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _262
  _512 = bif:'=:=' _262, `b`
  br _512, ^601, ^467

601:
  %% apply_SUITE.erl:92
  _145 = call (Erlang:`is_function`/1), `fun erlang:list_to_binary/1`

  %% Aliased:
  %%    _145
  _468 = succeeded:body _145
  br _468, ^468, ^1

468:
  %% apply_SUITE.erl:92
  %% Argument types:
  %%    (`'-mfa/1-fun-18-'`/2) => fun((_))
  %% Aliased:
  %%    _145, 
  %%    Erlang
  _263 = call (`'-mfa/1-fun-18-'`/2), _145, Erlang

  %% Aliased:
  %%    _263
  _469 = succeeded:body _263
  br _469, ^469, ^1

469:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _263
  _509 = bif:'=:=' _263, `true`
  br _509, ^602, ^471

602:
  %% Result type:
  %%    'ok'
  _152 = make_fun (`'-mfa/1-fun-21-'`/0)

  %% apply_SUITE.erl:93
  %% Aliased:
  %%    _152
  _153 = call (Erlang:`is_function`/1), _152

  %% Aliased:
  %%    _153
  _472 = succeeded:body _153
  br _472, ^472, ^1

472:
  %% apply_SUITE.erl:93
  %% Argument types:
  %%    (`'-mfa/1-fun-20-'`/2) => fun((_))
  %% Aliased:
  %%    _153, 
  %%    Erlang
  _264 = call (`'-mfa/1-fun-20-'`/2), _153, Erlang

  %% Aliased:
  %%    _264
  _473 = succeeded:body _264
  br _473, ^473, ^1

473:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _506 = bif:'=:=' _264, `true`
  br _506, ^604, ^475

604:
  %% apply_SUITE.erl:94
  _159 = call (Erlang:`is_function`/1), `blurf`

  %% Aliased:
  %%    _159
  _476 = succeeded:body _159
  br _476, ^476, ^1

476:
  %% apply_SUITE.erl:94
  %% Argument types:
  %%    (`'-mfa/1-fun-22-'`/2) => fun((_))
  %% Aliased:
  %%    _159, 
  %%    Erlang
  _265 = call (`'-mfa/1-fun-22-'`/2), _159, Erlang

  %% Aliased:
  %%    _265
  _477 = succeeded:body _265
  br _477, ^477, ^1

477:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _265
  _503 = bif:'=:=' _265, `false`
  br _503, ^605, ^479

605:
  %% apply_SUITE.erl:95
  _167 = call (Erlang:`is_function`/2), `fun erlang:list_to_binary/1`, `1`

  %% Aliased:
  %%    _167
  _480 = succeeded:body _167
  br _480, ^480, ^1

480:
  %% apply_SUITE.erl:95
  %% Argument types:
  %%    (`'-mfa/1-fun-23-'`/2) => fun((_))
  %% Aliased:
  %%    _167, 
  %%    Erlang
  _266 = call (`'-mfa/1-fun-23-'`/2), _167, Erlang

  %% Aliased:
  %%    _266
  _481 = succeeded:body _266
  br _481, ^481, ^1

481:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _266
  _500 = bif:'=:=' _266, `true`
  br _500, ^606, ^483

606:
  %% Result type:
  %%    'ok'
  _174 = make_fun (`'-mfa/1-fun-26-'`/0)

  %% apply_SUITE.erl:96
  %% Aliased:
  %%    _174
  _175 = call (Erlang:`is_function`/2), _174, `0`

  %% Aliased:
  %%    _175
  _484 = succeeded:body _175
  br _484, ^484, ^1

484:
  %% apply_SUITE.erl:96
  %% Argument types:
  %%    (`'-mfa/1-fun-25-'`/2) => fun((_))
  %% Aliased:
  %%    _175, 
  %%    Erlang
  _267 = call (`'-mfa/1-fun-25-'`/2), _175, Erlang

  %% Aliased:
  %%    _267
  _485 = succeeded:body _267
  br _485, ^485, ^1

485:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _497 = bif:'=:=' _267, `true`
  br _497, ^608, ^487

608:
  %% apply_SUITE.erl:97
  _181 = call (Erlang:`is_function`/2), `blurf`, `0`

  %% Aliased:
  %%    _181
  _488 = succeeded:body _181
  br _488, ^488, ^1

488:
  %% apply_SUITE.erl:97
  %% Argument types:
  %%    (`'-mfa/1-fun-27-'`/2) => fun((_))
  %% Aliased:
  %%    _181, 
  %%    Erlang
  _268 = call (`'-mfa/1-fun-27-'`/2), _181, Erlang

  %% Aliased:
  %%    _268
  _489 = succeeded:body _268
  br _489, ^489, ^1

489:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _268
  _494 = bif:'=:=' _268, `false`
  br _494, ^493, ^491

493:
  %% apply_SUITE.erl:99
  _301 = call (Mod:`foo`/0)

  %% Aliased:
  %%    _301
  _492 = succeeded:body _301
  br _492, ^492, ^1

492:
  %% Aliased:
  %%    _301
  ret _301

491:
  %% apply_SUITE.erl:97
  %% Aliased:
  %%    _268
  _302 = match_fail `badmatch`, _268

  %% Unique:
  %%    _302
  _495 = succeeded:body _302
  br ^1

487:
  %% apply_SUITE.erl:96
  %% Aliased:
  %%    _267
  _303 = match_fail `badmatch`, _267

  %% Unique:
  %%    _303
  _498 = succeeded:body _303
  br ^1

483:
  %% apply_SUITE.erl:95
  %% Aliased:
  %%    _266
  _304 = match_fail `badmatch`, _266

  %% Unique:
  %%    _304
  _501 = succeeded:body _304
  br ^1

479:
  %% apply_SUITE.erl:94
  %% Aliased:
  %%    _265
  _305 = match_fail `badmatch`, _265

  %% Unique:
  %%    _305
  _504 = succeeded:body _305
  br ^1

475:
  %% apply_SUITE.erl:93
  %% Aliased:
  %%    _264
  _306 = match_fail `badmatch`, _264

  %% Unique:
  %%    _306
  _507 = succeeded:body _306
  br ^1

471:
  %% apply_SUITE.erl:92
  %% Aliased:
  %%    _263
  _307 = match_fail `badmatch`, _263

  %% Unique:
  %%    _307
  _510 = succeeded:body _307
  br ^1

467:
  %% apply_SUITE.erl:91
  %% Aliased:
  %%    _262
  _308 = match_fail `badmatch`, _262

  %% Unique:
  %%    _308
  _513 = succeeded:body _308
  br ^1

463:
  %% apply_SUITE.erl:90
  %% Aliased:
  %%    _261
  _309 = match_fail `badmatch`, _261

  %% Unique:
  %%    _309
  _516 = succeeded:body _309
  br ^1

458:
  %% apply_SUITE.erl:89
  %% Aliased:
  %%    _260
  _310 = match_fail `badmatch`, _260

  %% Unique:
  %%    _310
  _517 = succeeded:body _310
  br ^1

453:
  %% apply_SUITE.erl:85
  %% Aliased:
  %%    _259
  _311 = match_fail `badmatch`, _259

  %% Unique:
  %%    _311
  _519 = succeeded:body _311
  br ^1

449:
  %% apply_SUITE.erl:84
  %% Aliased:
  %%    _258
  _312 = match_fail `badmatch`, _258

  %% Unique:
  %%    _312
  _521 = succeeded:body _312
  br ^1

445:
  %% apply_SUITE.erl:83
  %% Aliased:
  %%    _257
  _313 = match_fail `badmatch`, _257

  %% Unique:
  %%    _313
  _524 = succeeded:body _313
  br ^1

441:
  %% apply_SUITE.erl:81
  %% Aliased:
  %%    _109
  _314 = match_fail `badmatch`, _109

  %% Unique:
  %%    _314
  _531 = succeeded:body _314
  br ^1

429:
  %% apply_SUITE.erl:80
  %% Aliased:
  %%    _107
  _315 = match_fail `badmatch`, _107

  %% Unique:
  %%    _315
  _538 = succeeded:body _315
  br ^1

416:
  %% apply_SUITE.erl:79
  %% Aliased:
  %%    _100
  _316 = match_fail `badmatch`, _100

  %% Unique:
  %%    _316
  _545 = succeeded:body _316
  br ^1

403:
  %% apply_SUITE.erl:78
  %% Aliased:
  %%    _93
  _317 = match_fail `badmatch`, _93

  %% Unique:
  %%    _317
  _552 = succeeded:body _317
  br ^1

389:
  %% apply_SUITE.erl:76
  %% Aliased:
  %%    _248
  _318 = match_fail `badmatch`, _248

  %% Unique:
  %%    _318
  _554 = succeeded:body _318
  br ^1

384:
  %% apply_SUITE.erl:75
  %% Aliased:
  %%    _247
  _319 = match_fail `badmatch`, _247

  %% Unique:
  %%    _319
  _556 = succeeded:body _319
  br ^1

379:
  %% apply_SUITE.erl:74
  %% Aliased:
  %%    _246
  _320 = match_fail `badmatch`, _246

  %% Unique:
  %%    _320
  _559 = succeeded:body _320
  br ^1

374:
  %% apply_SUITE.erl:72
  %% Aliased:
  %%    _245
  _321 = match_fail `badmatch`, _245

  %% Unique:
  %%    _321
  _561 = succeeded:body _321
  br ^1

369:
  %% apply_SUITE.erl:71
  %% Aliased:
  %%    _244
  _322 = match_fail `badmatch`, _244

  %% Unique:
  %%    _322
  _563 = succeeded:body _322
  br ^1

364:
  %% apply_SUITE.erl:70
  %% Aliased:
  %%    _243
  _323 = match_fail `badmatch`, _243

  %% Unique:
  %%    _323
  _566 = succeeded:body _323
  br ^1

359:
  %% apply_SUITE.erl:68
  %% Aliased:
  %%    _242
  _324 = match_fail `badmatch`, _242

  %% Unique:
  %%    _324
  _568 = succeeded:body _324
  br ^1

355:
  %% apply_SUITE.erl:67
  %% Aliased:
  %%    _241
  _325 = match_fail `badmatch`, _241

  %% Unique:
  %%    _325
  _570 = succeeded:body _325
  br ^1

351:
  %% apply_SUITE.erl:66
  %% Aliased:
  %%    _240
  _326 = match_fail `badmatch`, _240

  %% Unique:
  %%    _326
  _573 = succeeded:body _326
  br ^1

346:
  %% apply_SUITE.erl:63
  %% Aliased:
  %%    _239
  _327 = match_fail `badmatch`, _239

  %% Unique:
  %%    _327
  _575 = succeeded:body _327
  br ^1

342:
  %% apply_SUITE.erl:62
  %% Aliased:
  %%    _238
  _328 = match_fail `badmatch`, _238

  %% Unique:
  %%    _328
  _577 = succeeded:body _328
  br ^1

338:
  %% apply_SUITE.erl:61
  %% Aliased:
  %%    _237
  _329 = match_fail `badmatch`, _237

  %% Unique:
  %%    _329
  _580 = succeeded:body _329
  br ^1

333:
  %% apply_SUITE.erl:60
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-mfa/1-',1}}
  _330 = match_fail `function_clause`, _0

  %% Unique:
  %%    _330
  _581 = succeeded:body _330
  br ^1

1:
  _331 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _331
}

%% apply_SUITE.erl:105
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
function `apply_SUITE`:`bad_literal_call`(_0) {
0:
  %% apply_SUITE.erl:106
  _2 = call (`1`:`foo`/0)

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% apply_SUITE.erl:108
%% Counter = 4
%% bs_ensure_opt: true
function `apply_SUITE`:`foo`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% apply_SUITE.erl:111
%% Counter = 5
%% bs_ensure_opt: true
function `apply_SUITE`:`bar`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple _0
  %% Result type:
  %%    {any()}
  %% Unique:
  %%    _2
  ret _2
}

%% apply_SUITE.erl:114
%% Counter = 5
%% bs_ensure_opt: true
function `apply_SUITE`:`baz`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = put_tuple _0, _1
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _2
  ret _2
}

%% apply_SUITE.erl:121
%% Counter = 283
%% bs_ensure_opt: true
function `apply_SUITE`:`fun_apply`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _194 = bif:is_list _0
  br _194, ^194, ^193

194:
  %% apply_SUITE.erl:122
  %% Argument types:
  %%    
  Self = bif:self

  %% apply_SUITE.erl:124
  %% Result type:
  %%    pid()
  %% Argument types:
  %%    (`'-fun_apply/1-fun-1-'`/1) => fun((_) -> pid())
  %%    Self => pid()
  %% Unique:
  %%    Self
  _151 = call (`'-fun_apply/1-fun-1-'`/1), Self

  %% Unique:
  %%    _151
  _195 = succeeded:body _151
  br _195, ^195, ^1

195:
  %% Argument types:
  %%    _151 => pid()
  %%    Self => pid()
  %% Unique:
  %%    _151, 
  %%    Self
  _198 = bif:'=:=' _151, Self
  br _198, ^270, ^197

270:
  %% Result type:
  %%    pid()
  _16 = make_fun (`'-fun_apply/1-fun-5-'`/0)

  %% apply_SUITE.erl:125
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _16
  _17 = call (`id`/1), _16

  %% Aliased:
  %%    _17
  _199 = succeeded:body _17
  br _199, ^199, ^1

199:
  %% apply_SUITE.erl:125
  %% Argument types:
  %%    _17 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _17
  _18 = call _17

  %% Aliased:
  %%    _18
  _200 = succeeded:body _18
  br _200, ^200, ^1

200:
  %% apply_SUITE.erl:125
  %% Argument types:
  %%    (`'-fun_apply/1-fun-4-'`/1) => fun((_))
  %% Aliased:
  %%    _18
  _152 = call (`'-fun_apply/1-fun-4-'`/1), _18

  %% Aliased:
  %%    _152
  _201 = succeeded:body _152
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    Self => pid()
  %% Aliased:
  %%    _152
  %% Unique:
  %%    Self
  _204 = bif:'=:=' _152, Self
  br _204, ^272, ^203

272:
  %% apply_SUITE.erl:126
  _26 = call (`apply_SUITE`:`foo`/0)

  %% Aliased:
  %%    _26
  _205 = succeeded:body _26
  br _205, ^205, ^1

205:
  %% apply_SUITE.erl:126
  %% Argument types:
  %%    (`'-fun_apply/1-fun-6-'`/1) => fun((_))
  %% Aliased:
  %%    _26
  _153 = call (`'-fun_apply/1-fun-6-'`/1), _26

  %% Aliased:
  %%    _153
  _206 = succeeded:body _153
  br _206, ^206, ^1

206:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _263 = bif:'=:=' _153, `ok`
  br _263, ^273, ^208

273:
  %% apply_SUITE.erl:127
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _35 = call (`id`/1), `fun apply_SUITE:foo/0`

  %% Aliased:
  %%    _35
  _209 = succeeded:body _35
  br _209, ^209, ^1

209:
  %% apply_SUITE.erl:127
  %% Argument types:
  %%    _35 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _35
  _36 = call _35

  %% Aliased:
  %%    _36
  _210 = succeeded:body _36
  br _210, ^210, ^1

210:
  %% apply_SUITE.erl:127
  %% Argument types:
  %%    (`'-fun_apply/1-fun-7-'`/1) => fun((_))
  %% Aliased:
  %%    _36
  _154 = call (`'-fun_apply/1-fun-7-'`/1), _36

  %% Aliased:
  %%    _154
  _211 = succeeded:body _154
  br _211, ^211, ^1

211:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _154
  _260 = bif:'=:=' _154, `ok`
  br _260, ^274, ^213

274:
  %% apply_SUITE.erl:129
  %% Result type:
  %%    -42
  %% Argument types:
  %%    (`'-fun_apply/1-fun-9-'`/1) => fun((_) -> -42)
  _155 = call (`'-fun_apply/1-fun-9-'`/1), `-42`

  %% Unique:
  %%    _155
  _214 = succeeded:body _155
  br _214, ^275, ^1

275:
  %% Result type:
  %%    nonempty_improper_list(any(), any())
  _60 = make_fun (`'-fun_apply/1-fun-13-'`/1)

  %% apply_SUITE.erl:130
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _60
  _61 = call (`id`/1), _60

  %% Aliased:
  %%    _61
  _217 = succeeded:body _61
  br _217, ^217, ^1

217:
  %% apply_SUITE.erl:130
  %% Argument types:
  %%    _61 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _61
  _62 = call _61, `[yy]`

  %% Aliased:
  %%    _62
  _218 = succeeded:body _62
  br _218, ^218, ^1

218:
  %% apply_SUITE.erl:130
  %% Argument types:
  %%    (`'-fun_apply/1-fun-12-'`/1) => fun((_))
  %% Aliased:
  %%    _62
  _156 = call (`'-fun_apply/1-fun-12-'`/1), _62

  %% Aliased:
  %%    _156
  _219 = succeeded:body _156
  br _219, ^219, ^1

219:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _156
  _254 = bif:'=:=' _156, `[x,yy]`
  br _254, ^277, ^221

277:
  %% apply_SUITE.erl:131
  _70 = call (`apply_SUITE`:`bar`/1), `[a|b]`

  %% Aliased:
  %%    _70
  _222 = succeeded:body _70
  br _222, ^222, ^1

222:
  %% apply_SUITE.erl:131
  %% Argument types:
  %%    (`'-fun_apply/1-fun-14-'`/1) => fun((_))
  %% Aliased:
  %%    _70
  _157 = call (`'-fun_apply/1-fun-14-'`/1), _70

  %% Aliased:
  %%    _157
  _223 = succeeded:body _157
  br _223, ^223, ^1

223:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _252 = bif:'=:=' _157, `{[a|b]}`
  br _252, ^278, ^225

278:
  %% apply_SUITE.erl:132
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _79 = call (`id`/1), `fun apply_SUITE:bar/1`

  %% Aliased:
  %%    _79
  _226 = succeeded:body _79
  br _226, ^226, ^1

226:
  %% apply_SUITE.erl:132
  %% Argument types:
  %%    _79 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _79
  _80 = call _79, `[a|b]`

  %% Aliased:
  %%    _80
  _227 = succeeded:body _80
  br _227, ^227, ^1

227:
  %% apply_SUITE.erl:132
  %% Argument types:
  %%    (`'-fun_apply/1-fun-15-'`/1) => fun((_))
  %% Aliased:
  %%    _80
  _158 = call (`'-fun_apply/1-fun-15-'`/1), _80

  %% Aliased:
  %%    _158
  _228 = succeeded:body _158
  br _228, ^228, ^1

228:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _158
  _250 = bif:'=:=' _158, `{[a|b]}`
  br _250, ^279, ^230

279:
  %% apply_SUITE.erl:134
  %% Result type:
  %%    {'a', 'b'}
  %% Argument types:
  %%    (`'-fun_apply/1-fun-17-'`/1) => fun((_) -> {'a', 'b'})
  _159 = call (`'-fun_apply/1-fun-17-'`/1), `{a,b}`

  %% Unique:
  %%    _159
  _231 = succeeded:body _159
  br _231, ^280, ^1

280:
  %% Result type:
  %%    {any(), any()}
  _112 = make_fun (`'-fun_apply/1-fun-21-'`/2)

  %% apply_SUITE.erl:135
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _112
  _113 = call (`id`/1), _112

  %% Aliased:
  %%    _113
  _234 = succeeded:body _113
  br _234, ^234, ^1

234:
  %% apply_SUITE.erl:135
  %% Argument types:
  %%    _113 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _113
  _114 = call _113, `a`, `[b]`

  %% Aliased:
  %%    _114
  _235 = succeeded:body _114
  br _235, ^235, ^1

235:
  %% apply_SUITE.erl:135
  %% Argument types:
  %%    (`'-fun_apply/1-fun-20-'`/1) => fun((_))
  %% Aliased:
  %%    _114
  _160 = call (`'-fun_apply/1-fun-20-'`/1), _114

  %% Aliased:
  %%    _160
  _236 = succeeded:body _160
  br _236, ^236, ^1

236:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _160
  _246 = bif:'=:=' _160, `{a,[b]}`
  br _246, ^282, ^238

282:
  %% apply_SUITE.erl:136
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _123 = call (`id`/1), `fun apply_SUITE:baz/2`

  %% Aliased:
  %%    _123
  _239 = succeeded:body _123
  br _239, ^239, ^1

239:
  %% apply_SUITE.erl:136
  %% Argument types:
  %%    _123 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _123
  _124 = call _123, `42`, `{a}`

  %% Aliased:
  %%    _124
  _240 = succeeded:body _124
  br _240, ^240, ^1

240:
  %% apply_SUITE.erl:136
  %% Argument types:
  %%    (`'-fun_apply/1-fun-22-'`/1) => fun((_))
  %% Aliased:
  %%    _124
  _161 = call (`'-fun_apply/1-fun-22-'`/1), _124

  %% Aliased:
  %%    _161
  _241 = succeeded:body _161
  br _241, ^241, ^1

241:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _244 = bif:'=:=' _161, `{42,{a}}`
  br _244, ^244, ^243

244:
  %% Result type:
  %%    'ok'
  ret `ok`

243:
  %% apply_SUITE.erl:136
  %% Aliased:
  %%    _161
  _179 = match_fail `badmatch`, _161

  %% Unique:
  %%    _179
  _245 = succeeded:body _179
  br ^1

238:
  %% apply_SUITE.erl:135
  %% Aliased:
  %%    _160
  _180 = match_fail `badmatch`, _160

  %% Unique:
  %%    _180
  _247 = succeeded:body _180
  br ^1

230:
  %% apply_SUITE.erl:132
  %% Aliased:
  %%    _158
  _182 = match_fail `badmatch`, _158

  %% Unique:
  %%    _182
  _251 = succeeded:body _182
  br ^1

225:
  %% apply_SUITE.erl:131
  %% Aliased:
  %%    _157
  _183 = match_fail `badmatch`, _157

  %% Unique:
  %%    _183
  _253 = succeeded:body _183
  br ^1

221:
  %% apply_SUITE.erl:130
  %% Aliased:
  %%    _156
  _184 = match_fail `badmatch`, _156

  %% Unique:
  %%    _184
  _255 = succeeded:body _184
  br ^1

213:
  %% apply_SUITE.erl:127
  %% Aliased:
  %%    _154
  _186 = match_fail `badmatch`, _154

  %% Unique:
  %%    _186
  _261 = succeeded:body _186
  br ^1

208:
  %% apply_SUITE.erl:126
  %% Aliased:
  %%    _153
  _187 = match_fail `badmatch`, _153

  %% Unique:
  %%    _187
  _264 = succeeded:body _187
  br ^1

203:
  %% apply_SUITE.erl:125
  %% Aliased:
  %%    _152
  _188 = match_fail `badmatch`, _152

  %% Unique:
  %%    _188
  _265 = succeeded:body _188
  br ^1

197:
  %% apply_SUITE.erl:124
  %% Unique:
  %%    _151
  _189 = match_fail `badmatch`, _151

  %% Unique:
  %%    _189
  _266 = succeeded:body _189
  br ^1

193:
  %% apply_SUITE.erl:121
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-fun_apply/1-',1}}
  _190 = match_fail `function_clause`, _0

  %% Unique:
  %%    _190
  _267 = succeeded:body _190
  br ^1

1:
  _191 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _191
}

%% apply_SUITE.erl:140
%% Counter = 29
%% bs_ensure_opt: true
function `apply_SUITE`:`involved`(_0) {
0:
  %% apply_SUITE.erl:141
  %% Argument types:
  %%    
  _1 = bif:self

  %% apply_SUITE.erl:141
  %% Unique:
  %%    _1
  _7 = call (`erlang`:`'!'`/2), _1, `message`

  %% Aliased:
  %%    _7
  _13 = succeeded:body _7
  br _13, ^13, ^1

13:
  %% apply_SUITE.erl:142
  %% Result type:
  %%    'error' | 'ok'
  _5 = call (`involved_1`/0)

  %% Unique:
  %%    _5
  _14 = succeeded:body _5
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    _5 => 'error' | 'ok'
  %% Unique:
  %%    _5
  _25 = bif:'=:=' _5, `ok`
  br _25, ^24, ^16

24:
  %% apply_SUITE.erl:144
  %% Argument types:
  %%    
  _3 = bif:self

  %% apply_SUITE.erl:144
  %% Unique:
  %%    _3
  _8 = call (`erlang`:`'!'`/2), _3, `message`

  %% Aliased:
  %%    _8
  _17 = succeeded:body _8
  br _17, ^17, ^1

17:
  %% apply_SUITE.erl:145
  %% Result type:
  %%    'error'
  _6 = call (`involved_2`/0)

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^21, ^1

21:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% apply_SUITE.erl:142
  _10 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _10
  _26 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% apply_SUITE.erl:148
%% Counter = 61
%% bs_ensure_opt: true
function `apply_SUITE`:`involved_1`() {
0:
  br ^60

60:
  _26 = new_try_tag `'try'`
  br _26, ^25, ^23

25:
  br ^13

13:
  %% apply_SUITE.erl:150
  _10 = peek_message `none`

  %% Aliased:
  %%    _10
  _36 = succeeded:guard _10
  br _36, ^34, ^35

34:
  _18 = remove_message

  %% Unique:
  %%    _26
  _43 = kill_try_tag _26
  %% Result type:
  %%    'ok'
  ret `ok`

35:
  _29 = wait_timeout `infinity`

  %% Unique:
  %%    _29
  _30 = succeeded:body _29
  br _30, ^33, ^23

33:
  br ^13

23:
  %% Unique:
  %%    _26
  _41 = landingpad `'try'`, _26

  %% Unique:
  %%    _26
  _42 = kill_try_tag _26
  %% Result type:
  %%    'error'
  ret `error`
}

%% apply_SUITE.erl:162
%% Counter = 65
%% bs_ensure_opt: true
function `apply_SUITE`:`involved_2`() {
0:
  br ^64

64:
  _28 = new_try_tag `'try'`
  br _28, ^27, ^25

27:
  br ^13

13:
  %% apply_SUITE.erl:164
  _10 = peek_message `none`

  %% Aliased:
  %%    _10
  _39 = succeeded:guard _10
  br _39, ^37, ^38

37:
  _19 = remove_message

  %% apply_SUITE.erl:166
  _20 = call `fun erlang:atom_to_list/1`

  %% Aliased:
  %%    _20
  _31 = succeeded:body _20
  br ^25

38:
  _32 = wait_timeout `infinity`

  %% Unique:
  %%    _32
  _33 = succeeded:body _32
  br _33, ^36, ^25

36:
  br ^13

25:
  %% Unique:
  %%    _28
  _44 = landingpad `'try'`, _28

  %% Unique:
  %%    _28
  _45 = kill_try_tag _28
  %% Result type:
  %%    'error'
  ret `error`
}

%% apply_SUITE.erl:176
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _0
  ret _0
}

%% Counter = 6
%% bs_ensure_opt: true
function `apply_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `apply_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `apply_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `apply_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% apply_SUITE.erl:136
%% Counter = 187
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-22-'`(_119) {
0:
  %% apply_SUITE.erl:136
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _117 = call (`id`/1), `fun apply_SUITE:baz/2`

  %% Aliased:
  %%    _117
  _181 = succeeded:body _117
  br _181, ^181, ^1

181:
  %% apply_SUITE.erl:136
  %% Argument types:
  %%    _117 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _117
  _149 = call _117, `42`, `{a}`

  %% Aliased:
  %%    _149
  _182 = succeeded:body _149
  br _182, ^182, ^1

182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119, 
  %%    _149
  _185 = bif:'=:=' _149, _119
  br _185, ^185, ^184

185:
  %% Aliased:
  %%    _149
  ret _149

184:
  %% apply_SUITE.erl:136
  %% Aliased:
  %%    _149
  _178 = match_fail `badmatch`, _149

  %% Unique:
  %%    _178
  _186 = succeeded:body _178
  br ^1

1:
  _179 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _179
}

%% apply_SUITE.erl:135
%% Counter = 180
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-21-'`(_109, _108) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _108, 
  %%    _109
  _177 = put_tuple _109, _108
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _177
  ret _177
}

%% apply_SUITE.erl:135
%% Counter = 186
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-20-'`(_105) {
0:
  %% Result type:
  %%    {any(), any()}
  _102 = make_fun (`'-fun_apply/1-fun-19-'`/2)

  %% apply_SUITE.erl:135
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _102
  _103 = call (`id`/1), _102

  %% Aliased:
  %%    _103
  _179 = succeeded:body _103
  br _179, ^179, ^1

179:
  %% apply_SUITE.erl:135
  %% Argument types:
  %%    _103 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _103
  _147 = call _103, `a`, `[b]`

  %% Aliased:
  %%    _147
  _180 = succeeded:body _147
  br _180, ^180, ^1

180:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _105, 
  %%    _147
  _183 = bif:'=:=' _147, _105
  br _183, ^183, ^182

183:
  %% Aliased:
  %%    _147
  ret _147

182:
  %% apply_SUITE.erl:135
  %% Aliased:
  %%    _147
  _176 = match_fail `badmatch`, _147

  %% Unique:
  %%    _176
  _184 = succeeded:body _176
  br ^1

1:
  _177 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _177
}

%% apply_SUITE.erl:135
%% Counter = 178
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-19-'`(_99, _98) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98, 
  %%    _99
  _175 = put_tuple _99, _98
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _175
  ret _175
}

%% apply_SUITE.erl:134
%% Counter = 180
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-17-'`(_88) {
0:
  %% Argument types:
  %%    
  %% Unique:
  %%    _88
  _178 = bif:'=:=' _88, `{a,b}`
  br _178, ^178, ^177

178:
  %% Result type:
  %%    {'a', 'b'}
  ret `{a,b}`

177:
  %% apply_SUITE.erl:134
  _174 = match_fail `badmatch`, `{a,b}`

  %% Unique:
  %%    _174
  _179 = succeeded:body _174
  br ^1

1:
  _175 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _175
}

%% apply_SUITE.erl:132
%% Counter = 182
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-15-'`(_75) {
0:
  %% apply_SUITE.erl:132
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _73 = call (`id`/1), `fun apply_SUITE:bar/1`

  %% Aliased:
  %%    _73
  _176 = succeeded:body _73
  br _176, ^176, ^1

176:
  %% apply_SUITE.erl:132
  %% Argument types:
  %%    _73 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _73
  _143 = call _73, `[a|b]`

  %% Aliased:
  %%    _143
  _177 = succeeded:body _143
  br _177, ^177, ^1

177:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _75, 
  %%    _143
  _180 = bif:'=:=' _143, _75
  br _180, ^180, ^179

180:
  %% Aliased:
  %%    _143
  ret _143

179:
  %% apply_SUITE.erl:132
  %% Aliased:
  %%    _143
  _173 = match_fail `badmatch`, _143

  %% Unique:
  %%    _173
  _181 = succeeded:body _173
  br ^1

1:
  _174 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _174
}

%% apply_SUITE.erl:131
%% Counter = 180
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-14-'`(_66) {
0:
  %% apply_SUITE.erl:131
  _141 = call (`apply_SUITE`:`bar`/1), `[a|b]`

  %% Aliased:
  %%    _141
  _175 = succeeded:body _141
  br _175, ^175, ^1

175:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66, 
  %%    _141
  _178 = bif:'=:=' _141, _66
  br _178, ^178, ^177

178:
  %% Aliased:
  %%    _141
  ret _141

177:
  %% apply_SUITE.erl:131
  %% Aliased:
  %%    _141
  _172 = match_fail `badmatch`, _141

  %% Unique:
  %%    _172
  _179 = succeeded:body _172
  br ^1

1:
  _173 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _173
}

%% apply_SUITE.erl:130
%% Counter = 174
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-13-'`(_58) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _171 = put_list `x`, _58
  %% Result type:
  %%    nonempty_improper_list(any(), any())
  %% Unique:
  %%    _171
  ret _171
}

%% apply_SUITE.erl:130
%% Counter = 180
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-12-'`(_55) {
0:
  %% Result type:
  %%    nonempty_improper_list(any(), any())
  _52 = make_fun (`'-fun_apply/1-fun-11-'`/1)

  %% apply_SUITE.erl:130
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _52
  _53 = call (`id`/1), _52

  %% Aliased:
  %%    _53
  _173 = succeeded:body _53
  br _173, ^173, ^1

173:
  %% apply_SUITE.erl:130
  %% Argument types:
  %%    _53 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _53
  _139 = call _53, `[yy]`

  %% Aliased:
  %%    _139
  _174 = succeeded:body _139
  br _174, ^174, ^1

174:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55, 
  %%    _139
  _177 = bif:'=:=' _139, _55
  br _177, ^177, ^176

177:
  %% Aliased:
  %%    _139
  ret _139

176:
  %% apply_SUITE.erl:130
  %% Aliased:
  %%    _139
  _170 = match_fail `badmatch`, _139

  %% Unique:
  %%    _170
  _178 = succeeded:body _170
  br ^1

1:
  _171 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _171
}

%% apply_SUITE.erl:130
%% Counter = 172
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-11-'`(_50) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _169 = put_list `x`, _50
  %% Result type:
  %%    nonempty_improper_list(any(), any())
  %% Unique:
  %%    _169
  ret _169
}

%% apply_SUITE.erl:129
%% Counter = 174
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-9-'`(_42) {
0:
  %% Argument types:
  %%    
  %% Unique:
  %%    _42
  _172 = bif:'=:=' _42, `-42`
  br _172, ^172, ^171

172:
  %% Result type:
  %%    -42
  ret `-42`

171:
  %% apply_SUITE.erl:129
  _168 = match_fail `badmatch`, `-42`

  %% Unique:
  %%    _168
  _173 = succeeded:body _168
  br ^1

1:
  _169 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _169
}

%% apply_SUITE.erl:127
%% Counter = 176
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-7-'`(_31) {
0:
  %% apply_SUITE.erl:127
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _29 = call (`id`/1), `fun apply_SUITE:foo/0`

  %% Aliased:
  %%    _29
  _170 = succeeded:body _29
  br _170, ^170, ^1

170:
  %% apply_SUITE.erl:127
  %% Argument types:
  %%    _29 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _29
  _135 = call _29

  %% Aliased:
  %%    _135
  _171 = succeeded:body _135
  br _171, ^171, ^1

171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31, 
  %%    _135
  _174 = bif:'=:=' _135, _31
  br _174, ^174, ^173

174:
  %% Aliased:
  %%    _135
  ret _135

173:
  %% apply_SUITE.erl:127
  %% Aliased:
  %%    _135
  _167 = match_fail `badmatch`, _135

  %% Unique:
  %%    _167
  _175 = succeeded:body _167
  br ^1

1:
  _168 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _168
}

%% apply_SUITE.erl:126
%% Counter = 174
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-6-'`(_22) {
0:
  %% apply_SUITE.erl:126
  _133 = call (`apply_SUITE`:`foo`/0)

  %% Aliased:
  %%    _133
  _169 = succeeded:body _133
  br _169, ^169, ^1

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22, 
  %%    _133
  _172 = bif:'=:=' _133, _22
  br _172, ^172, ^171

172:
  %% Aliased:
  %%    _133
  ret _133

171:
  %% apply_SUITE.erl:126
  %% Aliased:
  %%    _133
  _166 = match_fail `badmatch`, _133

  %% Unique:
  %%    _166
  _173 = succeeded:body _166
  br ^1

1:
  _167 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _167
}

%% apply_SUITE.erl:125
%% Counter = 168
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-5-'`() {
0:
  %% apply_SUITE.erl:125
  %% Argument types:
  %%    
  _165 = bif:self
  %% Result type:
  %%    pid()
  %% Unique:
  %%    _165
  ret _165
}

%% apply_SUITE.erl:125
%% Counter = 174
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-4-'`(_13) {
0:
  %% Result type:
  %%    pid()
  _10 = make_fun (`'-fun_apply/1-fun-3-'`/0)

  %% apply_SUITE.erl:125
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _10
  _11 = call (`id`/1), _10

  %% Aliased:
  %%    _11
  _167 = succeeded:body _11
  br _167, ^167, ^1

167:
  %% apply_SUITE.erl:125
  %% Argument types:
  %%    _11 => atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  %% Aliased:
  %%    _11
  _130 = call _11

  %% Aliased:
  %%    _130
  _168 = succeeded:body _130
  br _168, ^168, ^1

168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13, 
  %%    _130
  _171 = bif:'=:=' _130, _13
  br _171, ^171, ^170

171:
  %% Aliased:
  %%    _130
  ret _130

170:
  %% apply_SUITE.erl:125
  %% Aliased:
  %%    _130
  _164 = match_fail `badmatch`, _130

  %% Unique:
  %%    _164
  _172 = succeeded:body _164
  br ^1

1:
  _165 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _165
}

%% apply_SUITE.erl:125
%% Counter = 166
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-3-'`() {
0:
  %% apply_SUITE.erl:125
  %% Argument types:
  %%    
  _163 = bif:self
  %% Result type:
  %%    pid()
  %% Unique:
  %%    _163
  ret _163
}

%% apply_SUITE.erl:124
%% Counter = 169
%% bs_ensure_opt: true
function `apply_SUITE`:`'-fun_apply/1-fun-1-'`(_4) {
0:
  %% apply_SUITE.erl:124
  %% Argument types:
  %%    
  _127 = bif:self

  %% Argument types:
  %%    _127 => pid()
  %% Aliased:
  %%    _4
  %% Unique:
  %%    _127
  _167 = bif:'=:=' _127, _4
  br _167, ^167, ^166

167:
  %% Result type:
  %%    pid()
  %% Unique:
  %%    _127
  ret _127

166:
  %% apply_SUITE.erl:124
  %% Unique:
  %%    _127
  _162 = match_fail `badmatch`, _127

  %% Unique:
  %%    _162
  _168 = succeeded:body _162
  br ^1

1:
  _163 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _163
}

%% apply_SUITE.erl:97
%% Counter = 308
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-27-'`(_178, Erlang) {
0:
  %% apply_SUITE.erl:97
  _235 = call (Erlang:`is_function`/2), `blurf`, `0`

  %% Aliased:
  %%    _235
  _303 = succeeded:body _235
  br _303, ^303, ^1

303:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _178, 
  %%    _235
  _306 = bif:'=:=' _235, _178
  br _306, ^306, ^305

306:
  %% Aliased:
  %%    _235
  ret _235

305:
  %% apply_SUITE.erl:97
  %% Aliased:
  %%    _235
  _300 = match_fail `badmatch`, _235

  %% Unique:
  %%    _300
  _307 = succeeded:body _300
  br ^1

1:
  _301 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _301
}

%% apply_SUITE.erl:96
%% Counter = 302
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-26-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% apply_SUITE.erl:96
%% Counter = 308
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-25-'`(_171, Erlang) {
0:
  %% Result type:
  %%    'ok'
  _169 = make_fun (`'-mfa/1-fun-24-'`/0)

  %% apply_SUITE.erl:96
  %% Aliased:
  %%    _169
  _233 = call (Erlang:`is_function`/2), _169, `0`

  %% Aliased:
  %%    _233
  _302 = succeeded:body _233
  br _302, ^302, ^1

302:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _171, 
  %%    _233
  _305 = bif:'=:=' _233, _171
  br _305, ^305, ^304

305:
  %% Aliased:
  %%    _233
  ret _233

304:
  %% apply_SUITE.erl:96
  %% Aliased:
  %%    _233
  _299 = match_fail `badmatch`, _233

  %% Unique:
  %%    _299
  _306 = succeeded:body _299
  br ^1

1:
  _300 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _300
}

%% apply_SUITE.erl:96
%% Counter = 301
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-24-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% apply_SUITE.erl:95
%% Counter = 306
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-23-'`(_163, Erlang) {
0:
  %% apply_SUITE.erl:95
  _231 = call (Erlang:`is_function`/2), `fun erlang:list_to_binary/1`, `1`

  %% Aliased:
  %%    _231
  _301 = succeeded:body _231
  br _301, ^301, ^1

301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163, 
  %%    _231
  _304 = bif:'=:=' _231, _163
  br _304, ^304, ^303

304:
  %% Aliased:
  %%    _231
  ret _231

303:
  %% apply_SUITE.erl:95
  %% Aliased:
  %%    _231
  _298 = match_fail `badmatch`, _231

  %% Unique:
  %%    _298
  _305 = succeeded:body _298
  br ^1

1:
  _299 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _299
}

%% apply_SUITE.erl:94
%% Counter = 305
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-22-'`(_156, Erlang) {
0:
  %% apply_SUITE.erl:94
  _229 = call (Erlang:`is_function`/1), `blurf`

  %% Aliased:
  %%    _229
  _300 = succeeded:body _229
  br _300, ^300, ^1

300:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _156, 
  %%    _229
  _303 = bif:'=:=' _229, _156
  br _303, ^303, ^302

303:
  %% Aliased:
  %%    _229
  ret _229

302:
  %% apply_SUITE.erl:94
  %% Aliased:
  %%    _229
  _297 = match_fail `badmatch`, _229

  %% Unique:
  %%    _297
  _304 = succeeded:body _297
  br ^1

1:
  _298 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _298
}

%% apply_SUITE.erl:93
%% Counter = 299
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-21-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% apply_SUITE.erl:93
%% Counter = 305
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-20-'`(_149, Erlang) {
0:
  %% Result type:
  %%    'ok'
  _147 = make_fun (`'-mfa/1-fun-19-'`/0)

  %% apply_SUITE.erl:93
  %% Aliased:
  %%    _147
  _227 = call (Erlang:`is_function`/1), _147

  %% Aliased:
  %%    _227
  _299 = succeeded:body _227
  br _299, ^299, ^1

299:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149, 
  %%    _227
  _302 = bif:'=:=' _227, _149
  br _302, ^302, ^301

302:
  %% Aliased:
  %%    _227
  ret _227

301:
  %% apply_SUITE.erl:93
  %% Aliased:
  %%    _227
  _296 = match_fail `badmatch`, _227

  %% Unique:
  %%    _296
  _303 = succeeded:body _296
  br ^1

1:
  _297 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _297
}

%% apply_SUITE.erl:93
%% Counter = 298
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-19-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% apply_SUITE.erl:92
%% Counter = 303
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-18-'`(_141, Erlang) {
0:
  %% apply_SUITE.erl:92
  _225 = call (Erlang:`is_function`/1), `fun erlang:list_to_binary/1`

  %% Aliased:
  %%    _225
  _298 = succeeded:body _225
  br _298, ^298, ^1

298:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141, 
  %%    _225
  _301 = bif:'=:=' _225, _141
  br _301, ^301, ^300

301:
  %% Aliased:
  %%    _225
  ret _225

300:
  %% apply_SUITE.erl:92
  %% Aliased:
  %%    _225
  _295 = match_fail `badmatch`, _225

  %% Unique:
  %%    _295
  _302 = succeeded:body _295
  br ^1

1:
  _296 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _296
}

%% apply_SUITE.erl:91
%% Counter = 302
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-17-'`(_134, Erlang) {
0:
  %% apply_SUITE.erl:91
  _223 = call (Erlang:`element`/2), `2`, `{a,b,c}`

  %% Aliased:
  %%    _223
  _297 = succeeded:body _223
  br _297, ^297, ^1

297:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _134, 
  %%    _223
  _300 = bif:'=:=' _223, _134
  br _300, ^300, ^299

300:
  %% Aliased:
  %%    _223
  ret _223

299:
  %% apply_SUITE.erl:91
  %% Aliased:
  %%    _223
  _294 = match_fail `badmatch`, _223

  %% Unique:
  %%    _294
  _301 = succeeded:body _294
  br ^1

1:
  _295 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _295
}

%% apply_SUITE.erl:90
%% Counter = 301
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-16-'`(_127, Erlang) {
0:
  %% apply_SUITE.erl:90
  _221 = call (Erlang:`abs`/1), `-42.0`

  %% Aliased:
  %%    _221
  _296 = succeeded:body _221
  br _296, ^296, ^1

296:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127, 
  %%    _221
  _299 = bif:'=:=' _221, _127
  br _299, ^299, ^298

299:
  %% Aliased:
  %%    _221
  ret _221

298:
  %% apply_SUITE.erl:90
  %% Aliased:
  %%    _221
  _293 = match_fail `badmatch`, _221

  %% Unique:
  %%    _293
  _300 = succeeded:body _293
  br ^1

1:
  _294 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _294
}

%% apply_SUITE.erl:89
%% Counter = 300
%% bs_ensure_opt: true
%% Parameters
%%    Erlang =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-15-'`(_120, Erlang) {
0:
  %% apply_SUITE.erl:89
  _218 = call (Erlang:`self`/0)

  %% Aliased:
  %%    _218
  _295 = succeeded:body _218
  br _295, ^295, ^1

295:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120, 
  %%    _218
  _298 = bif:'=:=' _218, _120
  br _298, ^298, ^297

298:
  %% Aliased:
  %%    _218
  ret _218

297:
  %% apply_SUITE.erl:89
  %% Aliased:
  %%    _218
  _292 = match_fail `badmatch`, _218

  %% Unique:
  %%    _292
  _299 = succeeded:body _292
  br ^1

1:
  _293 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _293
}

%% apply_SUITE.erl:80
%% Counter = 296
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-14-'`(_103) {
0:
  %% apply_SUITE.erl:80
  _214 = call (`erlang`:`apply`/3), `apply_SUITE`, `[]`, `[a,b]`

  %% Aliased:
  %%    _214
  _291 = succeeded:body _214
  br _291, ^291, ^1

291:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _103, 
  %%    _214
  _294 = bif:'=:=' _214, _103
  br _294, ^294, ^293

294:
  %% Aliased:
  %%    _214
  ret _214

293:
  %% apply_SUITE.erl:80
  %% Aliased:
  %%    _214
  _288 = match_fail `badmatch`, _214

  %% Unique:
  %%    _288
  _295 = succeeded:body _288
  br ^1

1:
  _289 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _289
}

%% apply_SUITE.erl:79
%% Counter = 293
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-13-'`(_96) {
0:
  %% apply_SUITE.erl:79
  _211 = call (`erlang`:`apply`/3), `{}`, `baz`, `[a,b]`

  %% Aliased:
  %%    _211
  _288 = succeeded:body _211
  br _288, ^288, ^1

288:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96, 
  %%    _211
  _291 = bif:'=:=' _211, _96
  br _291, ^291, ^290

291:
  %% Aliased:
  %%    _211
  ret _211

290:
  %% apply_SUITE.erl:79
  %% Aliased:
  %%    _211
  _285 = match_fail `badmatch`, _211

  %% Unique:
  %%    _285
  _292 = succeeded:body _285
  br ^1

1:
  _286 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _286
}

%% apply_SUITE.erl:78
%% Counter = 291
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-12-'`(_88, Mod) {
0:
  %% apply_SUITE.erl:78
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _86 = call (`id`/1), `bazzzzzz`

  %% Aliased:
  %%    _86
  _285 = succeeded:body _86
  br _285, ^285, ^1

285:
  %% apply_SUITE.erl:78
  _208 = call (Mod:_86/2), `a`, `b`

  %% Aliased:
  %%    _208
  _286 = succeeded:body _208
  br _286, ^286, ^1

286:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88, 
  %%    _208
  _289 = bif:'=:=' _208, _88
  br _289, ^289, ^288

289:
  %% Aliased:
  %%    _208
  ret _208

288:
  %% apply_SUITE.erl:78
  %% Aliased:
  %%    _208
  _282 = match_fail `badmatch`, _208

  %% Unique:
  %%    _282
  _290 = succeeded:body _282
  br ^1

1:
  _283 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _283
}

%% apply_SUITE.erl:76
%% Counter = 289
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-11-'`(_80, Mod) {
0:
  %% apply_SUITE.erl:76
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _78 = call (`id`/1), `baz`

  %% Aliased:
  %%    _78
  _283 = succeeded:body _78
  br _283, ^283, ^1

283:
  %% apply_SUITE.erl:76
  _206 = call (Mod:_78/2), `39`, `{a}`

  %% Aliased:
  %%    _206
  _284 = succeeded:body _206
  br _284, ^284, ^1

284:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80, 
  %%    _206
  _287 = bif:'=:=' _206, _80
  br _287, ^287, ^286

287:
  %% Aliased:
  %%    _206
  ret _206

286:
  %% apply_SUITE.erl:76
  %% Aliased:
  %%    _206
  _280 = match_fail `badmatch`, _206

  %% Unique:
  %%    _280
  _288 = succeeded:body _280
  br ^1

1:
  _281 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _281
}

%% apply_SUITE.erl:75
%% Counter = 288
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-10-'`(_72, Mod) {
0:
  %% apply_SUITE.erl:75
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _70 = call (`id`/1), `bar`

  %% Aliased:
  %%    _70
  _282 = succeeded:body _70
  br _282, ^282, ^1

282:
  %% apply_SUITE.erl:75
  _204 = call (Mod:_70/1), `[a,b]`

  %% Aliased:
  %%    _204
  _283 = succeeded:body _204
  br _283, ^283, ^1

283:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72, 
  %%    _204
  _286 = bif:'=:=' _204, _72
  br _286, ^286, ^285

286:
  %% Aliased:
  %%    _204
  ret _204

285:
  %% apply_SUITE.erl:75
  %% Aliased:
  %%    _204
  _279 = match_fail `badmatch`, _204

  %% Unique:
  %%    _279
  _287 = succeeded:body _279
  br ^1

1:
  _280 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _280
}

%% apply_SUITE.erl:74
%% Counter = 287
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-9-'`(_64, Mod) {
0:
  %% apply_SUITE.erl:74
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _62 = call (`id`/1), `foo`

  %% Aliased:
  %%    _62
  _281 = succeeded:body _62
  br _281, ^281, ^1

281:
  %% apply_SUITE.erl:74
  _202 = call (Mod:_62/0)

  %% Aliased:
  %%    _202
  _282 = succeeded:body _202
  br _282, ^282, ^1

282:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64, 
  %%    _202
  _285 = bif:'=:=' _202, _64
  br _285, ^285, ^284

285:
  %% Aliased:
  %%    _202
  ret _202

284:
  %% apply_SUITE.erl:74
  %% Aliased:
  %%    _202
  _278 = match_fail `badmatch`, _202

  %% Unique:
  %%    _278
  _286 = succeeded:body _278
  br ^1

1:
  _279 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _279
}

%% apply_SUITE.erl:72
%% Counter = 286
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-8-'`(_56) {
0:
  %% apply_SUITE.erl:72
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _54 = call (`id`/1), `baz`

  %% Aliased:
  %%    _54
  _280 = succeeded:body _54
  br _280, ^280, ^1

280:
  %% apply_SUITE.erl:72
  _200 = call (`apply_SUITE`:_54/2), `39`, `{a}`

  %% Aliased:
  %%    _200
  _281 = succeeded:body _200
  br _281, ^281, ^1

281:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56, 
  %%    _200
  _284 = bif:'=:=' _200, _56
  br _284, ^284, ^283

284:
  %% Aliased:
  %%    _200
  ret _200

283:
  %% apply_SUITE.erl:72
  %% Aliased:
  %%    _200
  _277 = match_fail `badmatch`, _200

  %% Unique:
  %%    _277
  _285 = succeeded:body _277
  br ^1

1:
  _278 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _278
}

%% apply_SUITE.erl:71
%% Counter = 285
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-7-'`(_48) {
0:
  %% apply_SUITE.erl:71
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _46 = call (`id`/1), `bar`

  %% Aliased:
  %%    _46
  _279 = succeeded:body _46
  br _279, ^279, ^1

279:
  %% apply_SUITE.erl:71
  _198 = call (`apply_SUITE`:_46/1), `[a,b]`

  %% Aliased:
  %%    _198
  _280 = succeeded:body _198
  br _280, ^280, ^1

280:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _48, 
  %%    _198
  _283 = bif:'=:=' _198, _48
  br _283, ^283, ^282

283:
  %% Aliased:
  %%    _198
  ret _198

282:
  %% apply_SUITE.erl:71
  %% Aliased:
  %%    _198
  _276 = match_fail `badmatch`, _198

  %% Unique:
  %%    _276
  _284 = succeeded:body _276
  br ^1

1:
  _277 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _277
}

%% apply_SUITE.erl:70
%% Counter = 284
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-6-'`(_40) {
0:
  %% apply_SUITE.erl:70
  %% Result type:
  %%    atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
  _38 = call (`id`/1), `foo`

  %% Aliased:
  %%    _38
  _278 = succeeded:body _38
  br _278, ^278, ^1

278:
  %% apply_SUITE.erl:70
  _196 = call (`apply_SUITE`:_38/0)

  %% Aliased:
  %%    _196
  _279 = succeeded:body _196
  br _279, ^279, ^1

279:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40, 
  %%    _196
  _282 = bif:'=:=' _196, _40
  br _282, ^282, ^281

282:
  %% Aliased:
  %%    _196
  ret _196

281:
  %% apply_SUITE.erl:70
  %% Aliased:
  %%    _196
  _275 = match_fail `badmatch`, _196

  %% Unique:
  %%    _275
  _283 = succeeded:body _275
  br ^1

1:
  _276 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _276
}

%% apply_SUITE.erl:68
%% Counter = 282
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-5-'`(_33, Mod) {
0:
  %% apply_SUITE.erl:68
  _194 = call (Mod:`baz`/2), `39`, `{a}`

  %% Aliased:
  %%    _194
  _277 = succeeded:body _194
  br _277, ^277, ^1

277:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33, 
  %%    _194
  _280 = bif:'=:=' _194, _33
  br _280, ^280, ^279

280:
  %% Aliased:
  %%    _194
  ret _194

279:
  %% apply_SUITE.erl:68
  %% Aliased:
  %%    _194
  _274 = match_fail `badmatch`, _194

  %% Unique:
  %%    _274
  _281 = succeeded:body _274
  br ^1

1:
  _275 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _275
}

%% apply_SUITE.erl:67
%% Counter = 281
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-4-'`(_27, Mod) {
0:
  %% apply_SUITE.erl:67
  _192 = call (Mod:`bar`/1), `[a,b]`

  %% Aliased:
  %%    _192
  _276 = succeeded:body _192
  br _276, ^276, ^1

276:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27, 
  %%    _192
  _279 = bif:'=:=' _192, _27
  br _279, ^279, ^278

279:
  %% Aliased:
  %%    _192
  ret _192

278:
  %% apply_SUITE.erl:67
  %% Aliased:
  %%    _192
  _273 = match_fail `badmatch`, _192

  %% Unique:
  %%    _273
  _280 = succeeded:body _273
  br ^1

1:
  _274 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _274
}

%% apply_SUITE.erl:66
%% Counter = 280
%% bs_ensure_opt: true
%% Parameters
%%    Mod =>
%%     atom() | list(nonempty_improper_list('a' | 'b' | 'xx', 'c' | nil()) | {'a'}) | fun()
function `apply_SUITE`:`'-mfa/1-fun-3-'`(_21, Mod) {
0:
  %% apply_SUITE.erl:66
  _190 = call (Mod:`foo`/0)

  %% Aliased:
  %%    _190
  _275 = succeeded:body _190
  br _275, ^275, ^1

275:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21, 
  %%    _190
  _278 = bif:'=:=' _190, _21
  br _278, ^278, ^277

278:
  %% Aliased:
  %%    _190
  ret _190

277:
  %% apply_SUITE.erl:66
  %% Aliased:
  %%    _190
  _272 = match_fail `badmatch`, _190

  %% Unique:
  %%    _272
  _279 = succeeded:body _272
  br ^1

1:
  _273 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _273
}

%% apply_SUITE.erl:63
%% Counter = 279
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-2-'`(_14) {
0:
  %% apply_SUITE.erl:63
  _188 = call (`apply_SUITE`:`baz`/2), `39`, `{a}`

  %% Aliased:
  %%    _188
  _274 = succeeded:body _188
  br _274, ^274, ^1

274:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14, 
  %%    _188
  _277 = bif:'=:=' _188, _14
  br _277, ^277, ^276

277:
  %% Aliased:
  %%    _188
  ret _188

276:
  %% apply_SUITE.erl:63
  %% Aliased:
  %%    _188
  _271 = match_fail `badmatch`, _188

  %% Unique:
  %%    _271
  _278 = succeeded:body _271
  br ^1

1:
  _272 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _272
}

%% apply_SUITE.erl:62
%% Counter = 278
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-1-'`(_8) {
0:
  %% apply_SUITE.erl:62
  _186 = call (`apply_SUITE`:`bar`/1), `[a,b]`

  %% Aliased:
  %%    _186
  _273 = succeeded:body _186
  br _273, ^273, ^1

273:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8, 
  %%    _186
  _276 = bif:'=:=' _186, _8
  br _276, ^276, ^275

276:
  %% Aliased:
  %%    _186
  ret _186

275:
  %% apply_SUITE.erl:62
  %% Aliased:
  %%    _186
  _270 = match_fail `badmatch`, _186

  %% Unique:
  %%    _270
  _277 = succeeded:body _270
  br ^1

1:
  _271 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _271
}

%% apply_SUITE.erl:61
%% Counter = 277
%% bs_ensure_opt: true
function `apply_SUITE`:`'-mfa/1-fun-0-'`(_2) {
0:
  %% apply_SUITE.erl:61
  _184 = call (`apply_SUITE`:`foo`/0)

  %% Aliased:
  %%    _184
  _272 = succeeded:body _184
  br _272, ^272, ^1

272:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _184
  _275 = bif:'=:=' _184, _2
  br _275, ^275, ^274

275:
  %% Aliased:
  %%    _184
  ret _184

274:
  %% apply_SUITE.erl:61
  %% Aliased:
  %%    _184
  _269 = match_fail `badmatch`, _184

  %% Unique:
  %%    _269
  _276 = succeeded:body _269
  br ^1

1:
  _270 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _270
}
