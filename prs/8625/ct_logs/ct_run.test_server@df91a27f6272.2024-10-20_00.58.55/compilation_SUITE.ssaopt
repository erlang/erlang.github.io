module compilation_SUITE.
exports [{all,0},
         {beam_compiler_10,1},
         {beam_compiler_11,1},
         {beam_compiler_4,1},
         {beam_compiler_6,1},
         {beam_compiler_7,1},
         {beam_compiler_8,1},
         {beam_compiler_9,1},
         {compiler_1,1},
         {const_list_256,1},
         {convopts,1},
         {end_per_group,2},
         {end_per_suite,1},
         {groups,0},
         {infinite_loop,0},
         {infinite_loop,1},
         {init_per_group,2},
         {init_per_suite,1},
         {live_var,1},
         {module_info,0},
         {module_info,1},
         {on_load,1},
         {on_load_inline,1},
         {opt_crash,1},
         {otp_2330,1},
         {otp_2380,1},
         {otp_4790,1},
         {otp_5151,1},
         {otp_5235,1},
         {otp_5404,1},
         {otp_5436,1},
         {otp_5481,1},
         {otp_5553,1},
         {otp_5632,1},
         {otp_5714,1},
         {otp_5872,1},
         {otp_6121,1},
         {otp_7202,1},
         {otp_8949_a,1},
         {redundant_case,1},
         {self_compile,1},
         {self_compile_old_inliner,1},
         {split_cases,1},
         {string_table,1},
         {suite,0},
         {use_nifs,1},
         {vsn_1,1},
         {vsn_2,1},
         {vsn_3,1}].
attributes [].

%% compilation_SUITE.erl:66
%% Counter = 4
%% bs_ensure_opt: true
function `compilation_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')} | {'timetrap', {'minutes', 10}})
  ret `[{ct_hooks,[ts_install_cth]},{timetrap,{minutes,10}}]`
}

%% compilation_SUITE.erl:70
%% Counter = 4
%% bs_ensure_opt: true
function `compilation_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list('self_compile' | 'self_compile_old_inliner' | {'group', 'p'})
  ret `[self_compile_old_inliner,self_compile,{group,p}]`
}

%% compilation_SUITE.erl:74
%% Counter = 8
%% bs_ensure_opt: true
function `compilation_SUITE`:`groups`() {
0:
  %% compilation_SUITE.erl:76
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _7 = succeeded:body _0
  br _7, ^7, ^1

7:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[compiler_1,beam_compiler_4,beam_compiler_6,beam_compiler_7,beam_compiler_8,
  beam_compiler_9,beam_compiler_10,beam_compiler_11,otp_2330,
  {group,vsn},
  otp_2380,otp_4790,const_list_256,live_var,convopts,redundant_case,otp_5151,
  otp_5235,opt_crash,otp_5404,otp_5436,otp_5481,otp_5553,otp_5632,otp_5714,
  otp_5872,otp_6121,otp_7202,on_load,on_load_inline,string_table,otp_8949_a,
  split_cases,infinite_loop,use_nifs]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list(atom() | {'group', 'vsn'})}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`

  %% Argument types:
  %%    _3 => nonempty_list({'p', any(), nonempty_list(atom() | {'group', 'vsn'})})
  %% Unique:
  %%    _3
  _4 = put_list `{vsn,[parallel],[vsn_1,vsn_2,vsn_3]}`, _3
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list(atom() | {'group', 'vsn'})} | {'vsn', nonempty_list('parallel'), nonempty_list('vsn_1' | 'vsn_2' | 'vsn_3')})
  %% Unique:
  %%    _4
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% compilation_SUITE.erl:93
%% Counter = 6
%% bs_ensure_opt: true
function `compilation_SUITE`:`init_per_suite`(_0) {
0:
  %% compilation_SUITE.erl:94
  _2 = call (`test_lib`:`recompile`/1), `compilation_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compilation_SUITE.erl:97
%% Counter = 4
%% bs_ensure_opt: true
function `compilation_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% compilation_SUITE.erl:100
%% Counter = 4
%% bs_ensure_opt: true
function `compilation_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% compilation_SUITE.erl:103
%% Counter = 4
%% bs_ensure_opt: true
function `compilation_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% compilation_SUITE.erl:109
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`compiler_1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:109
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `compiler_1`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:109
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-compiler_1/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:111
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_4`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:111
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `beam_compiler_4`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:111
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_4/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:112
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_6`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:112
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `beam_compiler_6`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:112
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_6/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:113
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_8`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:113
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `beam_compiler_8`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:113
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_8/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:114
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_9`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:114
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `beam_compiler_9`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:114
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_9/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:115
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_10`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:115
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `beam_compiler_10`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:115
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_10/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:116
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_11`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:116
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `beam_compiler_11`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:116
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_11/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:118
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_2330`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:118
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_2330`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:118
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_2330/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:119
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_2380`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:119
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_2380`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:119
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_2380/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:120
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_4790`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:120
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_4790`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:120
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_4790/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:121
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5235`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:121
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5235`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:121
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5235/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:123
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`const_list_256`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:123
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `const_list_256`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:123
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-const_list_256/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:125
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5151`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:125
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5151`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:125
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5151/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:127
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`live_var`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:127
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `live_var`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:127
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-live_var/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:128
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`opt_crash`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:128
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `opt_crash`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:128
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-opt_crash/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:130
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5404`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:130
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5404`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:130
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5404/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:131
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5436`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:131
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5436`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:131
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5436/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:132
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5481`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:132
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5481`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:132
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5481/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:133
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5553`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:133
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5553`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:133
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5553/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:134
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5632`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:134
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5632`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:134
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5632/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:135
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5714`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:135
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5714`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:135
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5714/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:136
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_5872`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:136
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_5872`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:136
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_5872/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:137
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_6121`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:137
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_6121`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:137
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_6121/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:138
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`convopts`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:138
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `convopts`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:138
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-convopts/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:139
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_7202`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:139
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `otp_7202`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:139
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_7202/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:140
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`on_load`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:140
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `on_load`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:140
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-on_load/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:141
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`on_load_inline`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:141
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `on_load_inline`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:141
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-on_load_inline/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:143
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`use_nifs`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:143
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `use_nifs`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:143
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-use_nifs/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:145
%% Counter = 4
%% bs_ensure_opt: true
function `compilation_SUITE`:`infinite_loop`() {
0:
  %% Result type:
  %%    nonempty_list({'timetrap', {'minutes', 1}})
  ret `[{timetrap,{minutes,1}}]`
}

%% compilation_SUITE.erl:146
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`infinite_loop`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:146
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_it`/2), `infinite_loop`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:146
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-infinite_loop/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:149
%% Counter = 17
%% bs_ensure_opt: true
function `compilation_SUITE`:`beam_compiler_7`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% compilation_SUITE.erl:150
  %% Result type:
  %%    'done'
  _3 = call (`empty`/2), `2`, `false`

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^13, ^1

13:
  %% Result type:
  %%    'done'
  %% Unique:
  %%    _3
  ret _3

8:
  %% compilation_SUITE.erl:149
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-beam_compiler_7/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compilation_SUITE.erl:152
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..2
%%    _1 =>
%%     'false' | 'true'
function `compilation_SUITE`:`empty`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => '-inf'..2
  %% Unique:
  %%    _0
  _12 = bif:'>' _0, `0`
  br _12, ^12, ^11

12:
  %% compilation_SUITE.erl:154
  %% Argument types:
  %%    _0 => 1..2
  %% Unique:
  %%    _0
  _3 = bif:'-' _0, `1`

  %% compilation_SUITE.erl:154
  %% Argument types:
  %%    _1 => 'false' | 'true'
  %% Unique:
  %%    _1
  _2 = bif:'not' _1

  %% compilation_SUITE.erl:154
  %% Result type:
  %%    'done'
  %% Unique:
  %%    _2, 
  %%    _3
  _8 = call (`empty`/2), _3, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Result type:
  %%    'done'
  %% Unique:
  %%    _8
  ret _8

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9

11:
  %% Result type:
  %%    'done'
  ret `done`
}

%% compilation_SUITE.erl:158
%% Counter = 62
%% bs_ensure_opt: true
function `compilation_SUITE`:`redundant_case`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _24 = bif:is_list _0
  br _24, ^24, ^23

24:
  %% compilation_SUITE.erl:159
  %% Result type:
  %%    'd'
  _8 = call (`redundant_case_1`/1), `1`

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br _25, ^58, ^1

58:
  %% compilation_SUITE.erl:160
  %% Result type:
  %%    'd'
  _9 = call (`redundant_case_1`/1), `2`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br _28, ^55, ^1

55:
  %% compilation_SUITE.erl:161
  %% Result type:
  %%    'd'
  _10 = call (`redundant_case_1`/1), `3`

  %% Unique:
  %%    _10
  _31 = succeeded:body _10
  br _31, ^52, ^1

52:
  %% compilation_SUITE.erl:162
  %% Result type:
  %%    'd'
  _11 = call (`redundant_case_1`/1), `4`

  %% Unique:
  %%    _11
  _34 = succeeded:body _11
  br _34, ^49, ^1

49:
  %% compilation_SUITE.erl:163
  %% Result type:
  %%    'd'
  _12 = call (`redundant_case_1`/1), `5`

  %% Unique:
  %%    _12
  _37 = succeeded:body _12
  br _37, ^46, ^1

46:
  %% compilation_SUITE.erl:164
  %% Result type:
  %%    'd'
  _13 = call (`redundant_case_1`/1), `{glurf,glarf}`

  %% Unique:
  %%    _13
  _40 = succeeded:body _13
  br _40, ^43, ^1

43:
  %% Result type:
  %%    'ok'
  ret `ok`

23:
  %% compilation_SUITE.erl:158
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-redundant_case/1-',1}}
  _20 = match_fail `function_clause`, _0

  %% Unique:
  %%    _20
  _61 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% compilation_SUITE.erl:169
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..5 | {'glurf', 'glarf'}
function `compilation_SUITE`:`redundant_case_1`(_0) {
0:
  %% Result type:
  %%    'd'
  ret `d`
}

%% compilation_SUITE.erl:175
%% Counter = 174
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom()
%%    _1 =>
%%     maybe_improper_list(any(), any())
function `compilation_SUITE`:`try_it`(_0, _1) {
0:
  %% compilation_SUITE.erl:178
  %% Aliased:
  %%    _1
  _5 = call (`proplists`:`get_value`/2), `data_dir`, _1

  %% Aliased:
  %%    _5
  _86 = succeeded:body _5
  br _86, ^86, ^1

86:
  %% compilation_SUITE.erl:179
  %% Aliased:
  %%    _0
  _4 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _4
  _87 = succeeded:body _4
  br _87, ^87, ^1

87:
  %% compilation_SUITE.erl:178
  %% Aliased:
  %%    _4, 
  %%    _5
  Src = call (`filename`:`join`/2), _5, _4

  %% Aliased:
  %%    Src
  _88 = succeeded:body Src
  br _88, ^88, ^1

88:
  %% compilation_SUITE.erl:180
  %% Aliased:
  %%    _1
  Out = call (`proplists`:`get_value`/2), `priv_dir`, _1

  %% Aliased:
  %%    Out
  _89 = succeeded:body Out
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _25 = put_list Src, `[]`

  %% compilation_SUITE.erl:181
  %% Unique:
  %%    _25
  _64 = call (`io`:`format`/2), `"Compiling: ~s\n"`, _25

  %% Aliased:
  %%    _64
  _90 = succeeded:body _64
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _26 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _26 => {'outdir', any()}
  %% Unique:
  %%    _26
  _27 = put_list _26, `[report,bin_opt_info,recv_opt_info]`

  %% Argument types:
  %%    _27 => nonempty_list('bin_opt_info' | 'recv_opt_info' | 'report' | {'outdir', any()})
  %% Unique:
  %%    _27
  _28 = put_list `ssalint`, _27

  %% Argument types:
  %%    _28 => nonempty_list('bin_opt_info' | 'recv_opt_info' | 'report' | 'ssalint' | {'outdir', any()})
  %% Unique:
  %%    _28
  _29 = put_list `clint`, _28

  %% Argument types:
  %%    _29 => nonempty_list('bin_opt_info' | 'clint' | 'recv_opt_info' | 'report' | 'ssalint' | {'outdir', any()})
  %% Unique:
  %%    _29
  _30 = put_list `clint0`, _29

  %% compilation_SUITE.erl:182
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _30
  CompRc0 = call (`compile`:`file`/2), Src, _30

  %% Aliased:
  %%    CompRc0
  _91 = succeeded:body CompRc0
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc0
  _31 = put_list CompRc0, `[]`

  %% compilation_SUITE.erl:184
  %% Unique:
  %%    _31
  _65 = call (`io`:`format`/2), `"Result: ~p\n"`, _31

  %% Aliased:
  %%    _65
  _92 = succeeded:body _65
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc0
  _155 = is_tagged_tuple CompRc0, `2`, `ok`
  br _155, ^152, ^94

152:
  %% compilation_SUITE.erl:187
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    Out
  _66 = call (`load_and_call`/2), Out, _0

  %% Unique:
  %%    _66
  _95 = succeeded:body _66
  br _95, ^95, ^1

95:
  %% compilation_SUITE.erl:189
  _67 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _67
  _96 = succeeded:body _67
  br _96, ^96, ^1

96:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _34 = put_list Src, `[]`

  %% compilation_SUITE.erl:190
  %% Unique:
  %%    _34
  _68 = call (`io`:`format`/2), `"Compiling (without optimization): ~s\n"`, _34

  %% Aliased:
  %%    _68
  _97 = succeeded:body _68
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _35 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _35 => {'outdir', any()}
  %% Unique:
  %%    _35
  _36 = put_list _35, `[report]`

  %% Argument types:
  %%    _36 => nonempty_list('report' | {'outdir', any()})
  %% Unique:
  %%    _36
  _37 = put_list `no_postopt`, _36

  %% Argument types:
  %%    _37 => nonempty_list('no_postopt' | 'report' | {'outdir', any()})
  %% Unique:
  %%    _37
  _38 = put_list `no_copt`, _37

  %% compilation_SUITE.erl:191
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _38
  CompRc1 = call (`compile`:`file`/2), Src, _38

  %% Aliased:
  %%    CompRc1
  _98 = succeeded:body CompRc1
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc1
  _39 = put_list CompRc1, `[]`

  %% compilation_SUITE.erl:195
  %% Unique:
  %%    _39
  _69 = call (`io`:`format`/2), `"Result: ~p\n"`, _39

  %% Aliased:
  %%    _69
  _99 = succeeded:body _69
  br _99, ^99, ^1

99:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc1
  _148 = is_tagged_tuple CompRc1, `2`, `ok`
  br _148, ^145, ^101

145:
  %% Argument types:
  %%    CompRc1 => {'ok', any()}
  %% Aliased:
  %%    CompRc1
  _40 = get_tuple_element CompRc1, `1`

  %% Argument types:
  %%    CompRc0 => {'ok', any()}
  %% Aliased:
  %%    CompRc0
  _32 = get_tuple_element CompRc0, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32, 
  %%    _40
  _102 = bif:'=:=' _40, _32
  br _102, ^102, ^101

102:
  %% compilation_SUITE.erl:197
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    Out
  _70 = call (`load_and_call`/2), Out, _0

  %% Unique:
  %%    _70
  _103 = succeeded:body _70
  br _103, ^103, ^1

103:
  %% compilation_SUITE.erl:199
  _71 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _71
  _104 = succeeded:body _71
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _42 = put_list Src, `[]`

  %% compilation_SUITE.erl:200
  %% Unique:
  %%    _42
  _72 = call (`io`:`format`/2), `"Compiling (with old inliner): ~s\n"`, _42

  %% Aliased:
  %%    _72
  _105 = succeeded:body _72
  br _105, ^105, ^1

105:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _43 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _43 => {'outdir', any()}
  %% Unique:
  %%    _43
  _44 = put_list _43, `[report,bin_opt_info,recv_opt_info,{inline,1000}]`

  %% Argument types:
  %%    _44 => nonempty_list('bin_opt_info' | 'recv_opt_info' | 'report' | {'inline', 1000} | {'outdir', any()})
  %% Unique:
  %%    _44
  _45 = put_list `ssalint`, _44

  %% Argument types:
  %%    _45 => nonempty_list('bin_opt_info' | 'recv_opt_info' | 'report' | 'ssalint' | {'inline', 1000} | {'outdir', any()})
  %% Unique:
  %%    _45
  _46 = put_list `clint`, _45

  %% compilation_SUITE.erl:201
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _46
  CompRc2 = call (`compile`:`file`/2), Src, _46

  %% Aliased:
  %%    CompRc2
  _106 = succeeded:body CompRc2
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc2
  _47 = put_list CompRc2, `[]`

  %% compilation_SUITE.erl:204
  %% Unique:
  %%    _47
  _73 = call (`io`:`format`/2), `"Result: ~p\n"`, _47

  %% Aliased:
  %%    _73
  _107 = succeeded:body _73
  br _107, ^107, ^1

107:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc2
  _141 = is_tagged_tuple CompRc2, `2`, `ok`
  br _141, ^138, ^109

138:
  %% Argument types:
  %%    CompRc2 => {'ok', any()}
  %% Aliased:
  %%    CompRc2
  _48 = get_tuple_element CompRc2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32, 
  %%    _48
  _110 = bif:'=:=' _48, _32
  br _110, ^110, ^109

110:
  %% compilation_SUITE.erl:206
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    Out
  _74 = call (`load_and_call`/2), Out, _0

  %% Unique:
  %%    _74
  _111 = succeeded:body _74
  br _111, ^111, ^1

111:
  %% compilation_SUITE.erl:208
  _75 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _75
  _112 = succeeded:body _75
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _50 = put_list Src, `[]`

  %% compilation_SUITE.erl:209
  %% Unique:
  %%    _50
  _76 = call (`io`:`format`/2), `"Compiling (from assembly): ~s\n"`, _50

  %% Aliased:
  %%    _76
  _113 = succeeded:body _76
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _51 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _51 => {'outdir', any()}
  %% Unique:
  %%    _51
  _52 = put_list _51, `[report]`

  %% Argument types:
  %%    _52 => nonempty_list('report' | {'outdir', any()})
  %% Unique:
  %%    _52
  _53 = put_list `to_asm`, _52

  %% compilation_SUITE.erl:210
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _53
  _54 = call (`compile`:`file`/2), Src, _53

  %% Aliased:
  %%    _54
  _114 = succeeded:body _54
  br _114, ^114, ^1

114:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _134 = is_tagged_tuple _54, `2`, `ok`
  br _134, ^131, ^116

131:
  %% Argument types:
  %%    _0 => atom()
  %% Unique:
  %%    _0
  _57 = put_list _0, `[".S"]`

  %% compilation_SUITE.erl:211
  %% Unique:
  %%    _57
  _15 = call (`lists`:`concat`/1), _57

  %% Aliased:
  %%    _15
  _117 = succeeded:body _15
  br _117, ^117, ^1

117:
  %% compilation_SUITE.erl:211
  %% Aliased:
  %%    _15, 
  %%    Out
  Asm = call (`filename`:`join`/2), Out, _15

  %% Aliased:
  %%    Asm
  _118 = succeeded:body Asm
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _58 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _58 => {'outdir', any()}
  %% Unique:
  %%    _58
  _59 = put_list _58, `[report]`

  %% Argument types:
  %%    _59 => nonempty_list('report' | {'outdir', any()})
  %% Unique:
  %%    _59
  _60 = put_list `from_asm`, _59

  %% compilation_SUITE.erl:212
  %% Aliased:
  %%    Asm
  %% Unique:
  %%    _60
  CompRc3 = call (`compile`:`file`/2), Asm, _60

  %% Aliased:
  %%    CompRc3
  _119 = succeeded:body CompRc3
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc3
  _61 = put_list CompRc3, `[]`

  %% compilation_SUITE.erl:213
  %% Unique:
  %%    _61
  _77 = call (`io`:`format`/2), `"Result: ~p\n"`, _61

  %% Aliased:
  %%    _77
  _120 = succeeded:body _77
  br _120, ^120, ^1

120:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CompRc3
  _127 = is_tagged_tuple CompRc3, `2`, `ok`
  br _127, ^124, ^122

124:
  %% compilation_SUITE.erl:215
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    Out
  _78 = call (`load_and_call`/2), Out, _0

  %% Unique:
  %%    _78
  _123 = succeeded:body _78
  br _123, ^173, ^1

173:
  ret _78

122:
  %% compilation_SUITE.erl:214
  %% Aliased:
  %%    CompRc3
  _79 = match_fail `badmatch`, CompRc3

  %% Unique:
  %%    _79
  _130 = succeeded:body _79
  br ^1

116:
  %% compilation_SUITE.erl:210
  %% Aliased:
  %%    _54
  _80 = match_fail `badmatch`, _54

  %% Unique:
  %%    _80
  _137 = succeeded:body _80
  br ^1

109:
  %% compilation_SUITE.erl:205
  %% Aliased:
  %%    CompRc2
  _81 = match_fail `badmatch`, CompRc2

  %% Unique:
  %%    _81
  _144 = succeeded:body _81
  br ^1

101:
  %% compilation_SUITE.erl:196
  %% Aliased:
  %%    CompRc1
  _82 = match_fail `badmatch`, CompRc1

  %% Unique:
  %%    _82
  _151 = succeeded:body _82
  br ^1

94:
  %% compilation_SUITE.erl:185
  %% Aliased:
  %%    CompRc0
  _83 = match_fail `badmatch`, CompRc0

  %% Unique:
  %%    _83
  _158 = succeeded:body _83
  br ^1

1:
  _84 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _84
}

%% compilation_SUITE.erl:219
%% Counter = 52
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     atom()
function `compilation_SUITE`:`load_and_call`(_0, _1) {
0:
  %% compilation_SUITE.erl:220
  _15 = call (`io`:`format`/2), `"Loading...\n"`, `[]`

  %% Aliased:
  %%    _15
  _26 = succeeded:body _15
  br _26, ^26, ^1

26:
  %% compilation_SUITE.erl:221
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = call (`filename`:`join`/2), _0, _1

  %% Aliased:
  %%    _2
  _27 = succeeded:body _2
  br _27, ^27, ^1

27:
  %% compilation_SUITE.erl:221
  %% Aliased:
  %%    _2
  _11 = call (`code`:`load_abs`/1), _2

  %% Aliased:
  %%    _11
  _28 = succeeded:body _11
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _47 = is_tagged_tuple _11, `2`, `module`
  br _47, ^44, ^30

44:
  %% Argument types:
  %%    _11 => {'module', any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`

  %% Argument types:
  %%    _1 => atom()
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _1
  _31 = bif:'=:=' _12, _1
  br _31, ^31, ^30

31:
  %% compilation_SUITE.erl:223
  _16 = call (`io`:`format`/2), `"Calling...\n"`, `[]`

  %% Aliased:
  %%    _16
  _32 = succeeded:body _16
  br _32, ^32, ^1

32:
  %% compilation_SUITE.erl:225
  CallRc = call (_1:_1/0)

  %% Aliased:
  %%    CallRc
  _33 = succeeded:body CallRc
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CallRc
  _14 = put_list CallRc, `[]`

  %% compilation_SUITE.erl:226
  %% Unique:
  %%    _14
  _17 = call (`io`:`format`/2), `"Got value: ~p\n"`, _14

  %% Aliased:
  %%    _17
  _34 = succeeded:body _17
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    CallRc
  _42 = bif:'=:=' CallRc, `ok`
  br _42, ^41, ^36

41:
  %% compilation_SUITE.erl:231
  %% Aliased:
  %%    _1
  _18 = call (`test_lib`:`smoke_disasm`/1), _1

  %% Aliased:
  %%    _18
  _37 = succeeded:body _18
  br _37, ^37, ^1

37:
  %% compilation_SUITE.erl:233
  %% Aliased:
  %%    _1
  _19 = call (`code`:`delete`/1), _1

  %% Aliased:
  %%    _19
  _38 = succeeded:body _19
  br _38, ^38, ^1

38:
  %% compilation_SUITE.erl:234
  %% Aliased:
  %%    _1
  _20 = call (`code`:`purge`/1), _1

  %% Aliased:
  %%    _20
  _39 = succeeded:body _20
  br _39, ^39, ^1

39:
  %% compilation_SUITE.erl:240
  _21 = call (`erlang`:`process_flag`/2), `trap_exit`, `false`

  %% Aliased:
  %%    _21
  _40 = succeeded:body _21
  br _40, ^40, ^1

40:
  %% Result type:
  %%    'ok'
  ret `ok`

36:
  %% compilation_SUITE.erl:228
  %% Aliased:
  %%    CallRc
  _22 = match_fail `badmatch`, CallRc

  %% Unique:
  %%    _22
  _43 = succeeded:body _22
  br ^1

30:
  %% compilation_SUITE.erl:221
  %% Aliased:
  %%    _11
  _23 = match_fail `badmatch`, _11

  %% Unique:
  %%    _23
  _50 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% compilation_SUITE.erl:245
%% Counter = 46
%% bs_ensure_opt: true
function `compilation_SUITE`:`vsn_1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _23 = bif:is_list _0
  br _23, ^23, ^22

23:
  %% compilation_SUITE.erl:248
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _24 = succeeded:body _2
  br _24, ^24, ^1

24:
  %% compilation_SUITE.erl:248
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _2
  _14 = call (`compile_load`/3), `vsn_1`, _2, _0

  %% Unique:
  %%    _14
  _25 = succeeded:body _14
  br _25, ^25, ^1

25:
  %% compilation_SUITE.erl:249
  Vsn1 = call (`get_vsn`/1), `vsn_1`

  %% Aliased:
  %%    Vsn1
  _26 = succeeded:body Vsn1
  br _26, ^26, ^1

26:
  %% compilation_SUITE.erl:250
  _15 = call (`timer`:`sleep`/1), `1000`

  %% Aliased:
  %%    _15
  _27 = succeeded:body _15
  br _27, ^27, ^1

27:
  %% compilation_SUITE.erl:252
  %% Aliased:
  %%    _0
  _4 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _4
  _28 = succeeded:body _4
  br _28, ^28, ^1

28:
  %% compilation_SUITE.erl:252
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _4
  _16 = call (`compile_load`/3), `vsn_1`, _4, _0

  %% Unique:
  %%    _16
  _29 = succeeded:body _16
  br _29, ^29, ^1

29:
  %% compilation_SUITE.erl:253
  Vsn2 = call (`get_vsn`/1), `vsn_1`

  %% Aliased:
  %%    Vsn2
  _30 = succeeded:body Vsn2
  br _30, ^30, ^1

30:
  %% compilation_SUITE.erl:255
  %% Aliased:
  %%    _0
  _6 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _6
  _31 = succeeded:body _6
  br _31, ^31, ^1

31:
  %% compilation_SUITE.erl:255
  %% Aliased:
  %%    _6
  _7 = call (`filename`:`join`/2), _6, `"other"`

  %% Aliased:
  %%    _7
  _32 = succeeded:body _7
  br _32, ^32, ^1

32:
  %% compilation_SUITE.erl:255
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _7
  _17 = call (`compile_load`/3), `vsn_1`, _7, _0

  %% Unique:
  %%    _17
  _33 = succeeded:body _17
  br _33, ^33, ^1

33:
  %% compilation_SUITE.erl:258
  Vsn3 = call (`get_vsn`/1), `vsn_1`

  %% Aliased:
  %%    Vsn3
  _34 = succeeded:body Vsn3
  br _34, ^34, ^1

34:
  %% compilation_SUITE.erl:260
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn1, 
  %%    Vsn2
  _9 = bif:'==' Vsn1, Vsn2
  br _9, ^43, ^36

43:
  %% compilation_SUITE.erl:260
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn2, 
  %%    Vsn3
  _10 = bif:'==' Vsn2, Vsn3
  br _10, ^35, ^36

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn1, 
  %%    Vsn2, 
  %%    Vsn3
  _13 = put_tuple `vsn`, Vsn1, Vsn2, Vsn3

  %% compilation_SUITE.erl:263
  %% Unique:
  %%    _13
  _18 = call (`ct`:`fail`/1), _13

  %% Aliased:
  %%    _18
  _39 = succeeded:body _18
  br _39, ^35, ^1

35:
  %% Result type:
  %%    'ok'
  ret `ok`

22:
  %% compilation_SUITE.erl:245
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-vsn_1/1-',1}}
  _19 = match_fail `function_clause`, _0

  %% Unique:
  %%    _19
  _40 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% compilation_SUITE.erl:268
%% Counter = 24
%% bs_ensure_opt: true
function `compilation_SUITE`:`vsn_2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _14 = bif:is_list _0
  br _14, ^14, ^13

14:
  %% compilation_SUITE.erl:271
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _15 = succeeded:body _2
  br _15, ^15, ^1

15:
  %% compilation_SUITE.erl:271
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _2
  _8 = call (`compile_load`/3), `vsn_2`, _2, _0

  %% Unique:
  %%    _8
  _16 = succeeded:body _8
  br _16, ^16, ^1

16:
  %% compilation_SUITE.erl:272
  Vsn = call (`get_vsn`/1), `vsn_2`

  %% Aliased:
  %%    Vsn
  _17 = succeeded:body Vsn
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn
  _20 = bif:'=:=' Vsn, `"\""`
  br _20, ^18, ^19

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn
  _7 = put_tuple `vsn`, Vsn

  %% compilation_SUITE.erl:277
  %% Unique:
  %%    _7
  _9 = call (`ct`:`fail`/1), _7

  %% Aliased:
  %%    _9
  _21 = succeeded:body _9
  br _21, ^18, ^1

18:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% compilation_SUITE.erl:268
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-vsn_2/1-',1}}
  _10 = match_fail `function_clause`, _0

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% compilation_SUITE.erl:282
%% Counter = 30
%% bs_ensure_opt: true
function `compilation_SUITE`:`vsn_3`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _16 = bif:is_list _0
  br _16, ^16, ^15

16:
  %% compilation_SUITE.erl:285
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _17 = succeeded:body _2
  br _17, ^17, ^1

17:
  %% compilation_SUITE.erl:285
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _2
  _9 = call (`compile_load`/3), `vsn_3`, _2, _0

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% compilation_SUITE.erl:286
  Vsn1 = call (`get_vsn`/1), `vsn_3`

  %% Aliased:
  %%    Vsn1
  _19 = succeeded:body Vsn1
  br _19, ^19, ^1

19:
  %% compilation_SUITE.erl:288
  %% Aliased:
  %%    _0
  _4 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _4
  _20 = succeeded:body _4
  br _20, ^20, ^1

20:
  %% compilation_SUITE.erl:288
  %% Aliased:
  %%    _4
  _5 = call (`filename`:`join`/2), _4, `"other"`

  %% Aliased:
  %%    _5
  _21 = succeeded:body _5
  br _21, ^21, ^1

21:
  %% compilation_SUITE.erl:288
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0, 
  %%    _5
  _10 = call (`compile_load`/3), `vsn_3`, _5, _0

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% compilation_SUITE.erl:291
  Vsn2 = call (`get_vsn`/1), `vsn_3`

  %% Aliased:
  %%    Vsn2
  _23 = succeeded:body Vsn2
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn1, 
  %%    Vsn2
  _26 = bif:'==' Vsn1, Vsn2
  br _26, ^25, ^24

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Vsn1, 
  %%    Vsn2
  _8 = put_tuple `vsn`, Vsn1, Vsn2

  %% compilation_SUITE.erl:296
  %% Unique:
  %%    _8
  _11 = call (`ct`:`fail`/1), _8

  %% Aliased:
  %%    _11
  _27 = succeeded:body _11
  br _27, ^24, ^1

24:
  %% Result type:
  %%    'ok'
  ret `ok`

15:
  %% compilation_SUITE.erl:282
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-vsn_3/1-',1}}
  _12 = match_fail `function_clause`, _0

  %% Unique:
  %%    _12
  _28 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compilation_SUITE.erl:300
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'vsn_1' | 'vsn_2' | 'vsn_3'
function `compilation_SUITE`:`get_vsn`(_0) {
0:
  %% compilation_SUITE.erl:301
  _1 = call (_0:`module_info`/1), `attributes`

  %% Aliased:
  %%    _1
  _9 = succeeded:body _1
  br _9, ^9, ^1

9:
  %% compilation_SUITE.erl:301
  %% Aliased:
  %%    _1
  _3 = call (`lists`:`keyfind`/3), `vsn`, `1`, _1

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => 'false' | {'vsn', ...}
  %% Aliased:
  %%    _3
  %% Anno: #{constraints => tuple_arity}
  _16 = is_tagged_tuple _3, `2`, `vsn`
  br _16, ^13, ^12

13:
  %% Argument types:
  %%    _3 => {'vsn', any()}
  %% Aliased:
  %%    _3
  _4 = get_tuple_element _3, `1`
  %% Aliased:
  %%    _4
  ret _4

12:
  %% compilation_SUITE.erl:301
  %% Aliased:
  %%    _3
  _6 = match_fail `badmatch`, _3

  %% Unique:
  %%    _6
  _19 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% compilation_SUITE.erl:304
%% Counter = 58
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'vsn_1' | 'vsn_2' | 'vsn_3'
%%    _2 =>
%%     maybe_improper_list(any(), any())
function `compilation_SUITE`:`compile_load`(_0, _1, _2) {
0:
  %% compilation_SUITE.erl:305
  %% Aliased:
  %%    _0
  _3 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _3
  _29 = succeeded:body _3
  br _29, ^29, ^1

29:
  %% compilation_SUITE.erl:305
  %% Aliased:
  %%    _1, 
  %%    _3
  Src = call (`filename`:`join`/2), _1, _3

  %% Aliased:
  %%    Src
  _30 = succeeded:body Src
  br _30, ^30, ^1

30:
  %% compilation_SUITE.erl:306
  %% Aliased:
  %%    _2
  Out = call (`proplists`:`get_value`/2), `priv_dir`, _2

  %% Aliased:
  %%    Out
  _31 = succeeded:body Out
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _16 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _16 => {'outdir', any()}
  %% Unique:
  %%    _16
  _17 = put_list _16, `[]`

  %% compilation_SUITE.erl:307
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _17
  _18 = call (`compile`:`file`/2), Src, _17

  %% Aliased:
  %%    _18
  _32 = succeeded:body _18
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _53 = is_tagged_tuple _18, `2`, `ok`
  br _53, ^50, ^34

50:
  %% Argument types:
  %%    _18 => {'ok', any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `1`

  %% Argument types:
  %%    _0 => 'vsn_1' | 'vsn_2' | 'vsn_3'
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _0
  _35 = bif:'=:=' _19, _0
  br _35, ^35, ^34

35:
  %% compilation_SUITE.erl:309
  %% Aliased:
  %%    _0
  _24 = call (`code`:`purge`/1), _0

  %% Aliased:
  %%    _24
  _36 = succeeded:body _24
  br _36, ^36, ^1

36:
  %% compilation_SUITE.erl:311
  %% Aliased:
  %%    _0
  _8 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _8
  _37 = succeeded:body _8
  br _37, ^37, ^1

37:
  %% compilation_SUITE.erl:311
  %% Aliased:
  %%    _8, 
  %%    Out
  _9 = call (`filename`:`join`/2), Out, _8

  %% Aliased:
  %%    _9
  _38 = succeeded:body _9
  br _38, ^38, ^1

38:
  %% compilation_SUITE.erl:311
  %% Aliased:
  %%    _9
  _21 = call (`code`:`load_abs`/1), _9

  %% Aliased:
  %%    _21
  _39 = succeeded:body _21
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _46 = is_tagged_tuple _21, `2`, `module`
  br _46, ^43, ^41

43:
  %% Argument types:
  %%    _21 => {'module', any()}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `1`

  %% Argument types:
  %%    _0 => 'vsn_1' | 'vsn_2' | 'vsn_3'
  %% Aliased:
  %%    _22
  %% Unique:
  %%    _0
  _42 = bif:'=:=' _22, _0
  br _42, ^42, ^41

42:
  %% Result type:
  %%    'ok'
  ret `ok`

41:
  %% compilation_SUITE.erl:310
  %% Aliased:
  %%    _21
  _25 = match_fail `badmatch`, _21

  %% Unique:
  %%    _25
  _49 = succeeded:body _25
  br ^1

34:
  %% compilation_SUITE.erl:308
  %% Aliased:
  %%    _18
  _26 = match_fail `badmatch`, _18

  %% Unique:
  %%    _26
  _56 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% compilation_SUITE.erl:314
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`self_compile`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:315
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`self_compile_1`/3), _0, `"new"`, `[inline]`

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:314
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-self_compile/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:317
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`self_compile_old_inliner`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% compilation_SUITE.erl:320
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`self_compile_1`/3), _0, `"old"`, `[verbose,{inline,500}]`

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% compilation_SUITE.erl:317
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-self_compile_old_inliner/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:322
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     maybe_improper_list(any(), any())
%%    _1 =>
%%     nonempty_list(100..119)
%%    _2 =>
%%     nonempty_list('inline' | 'verbose' | {'inline', 500})
function `compilation_SUITE`:`self_compile_1`(_0, _1, _2) {
0:
  %% compilation_SUITE.erl:323
  _9 = call (`ct`:`timetrap`/1), `{minutes,40}`

  %% Aliased:
  %%    _9
  _15 = succeeded:body _9
  br _15, ^15, ^1

15:
  %% compilation_SUITE.erl:325
  %% Aliased:
  %%    _0
  Priv = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    Priv
  _16 = succeeded:body Priv
  br _16, ^16, ^1

16:
  %% compilation_SUITE.erl:326
  Version = call (`compiler_version`/0)

  %% Aliased:
  %%    Version
  _17 = succeeded:body Version
  br _17, ^17, ^1

17:
  %% compilation_SUITE.erl:329
  %% Aliased:
  %%    _1
  _5 = call (`erlang`:`'++'`/2), _1, `"compiler_a"`

  %% compilation_SUITE.erl:329
  %% Aliased:
  %%    _5, 
  %%    Priv
  CompA = call (`make_compiler_dir`/2), Priv, _5

  %% Aliased:
  %%    CompA
  _19 = succeeded:body CompA
  br _19, ^19, ^1

19:
  %% compilation_SUITE.erl:330
  %% Aliased:
  %%    Version
  VsnA = call (`erlang`:`'++'`/2), Version, `".0"`

  %% Aliased:
  %%    VsnA
  _20 = succeeded:body VsnA
  br _20, ^20, ^1

20:
  %% compilation_SUITE.erl:331
  _8 = call (`compiler_src`/0)

  %% Aliased:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% compilation_SUITE.erl:331
  %% Aliased:
  %%    _2, 
  %%    _8, 
  %%    CompA, 
  %%    VsnA
  _10 = call (`compile_compiler`/4), _8, CompA, VsnA, _2

  %% Aliased:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% compilation_SUITE.erl:335
  %% Aliased:
  %%    _1
  CompilerB = call (`erlang`:`'++'`/2), _1, `"compiler_b"`

  %% compilation_SUITE.erl:336
  %% Aliased:
  %%    CompilerB, 
  %%    Priv
  CompB = call (`make_compiler_dir`/2), Priv, CompilerB

  %% Aliased:
  %%    CompB
  _24 = succeeded:body CompB
  br _24, ^24, ^1

24:
  %% compilation_SUITE.erl:337
  %% Aliased:
  %%    VsnA
  VsnB = call (`erlang`:`'++'`/2), VsnA, `".0"`

  %% compilation_SUITE.erl:338
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2, 
  %%    CompA, 
  %%    CompB, 
  %%    VsnB
  _11 = call (`self_compile_node`/4), CompA, CompB, VsnB, _2

  %% Unique:
  %%    _11
  _26 = succeeded:body _11
  br _26, ^26, ^1

26:
  %% compilation_SUITE.erl:342
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    CompA, 
  %%    CompB
  _12 = call (`compare_compilers`/2), CompA, CompB

  %% Unique:
  %%    _12
  _27 = succeeded:body _12
  br _27, ^28, ^1

28:
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% compilation_SUITE.erl:346
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     list(any())
%%    _3 =>
%%     nonempty_list('inline' | 'verbose' | {'inline', 500})
function `compilation_SUITE`:`self_compile_node`(_0, _1, _2, _3) {
0:
  %% compilation_SUITE.erl:347
  _14 = call (`ct`:`timetrap`/1), `{minutes,15}`

  %% Aliased:
  %%    _14
  _19 = succeeded:body _14
  br _19, ^19, ^1

19:
  %% compilation_SUITE.erl:348
  _5 = call (`code`:`which`/1), `compilation_SUITE`

  %% Aliased:
  %%    _5
  _20 = succeeded:body _5
  br _20, ^20, ^1

20:
  %% compilation_SUITE.erl:348
  %% Aliased:
  %%    _5
  _6 = call (`filename`:`dirname`/1), _5

  %% Aliased:
  %%    _6
  _21 = succeeded:body _6
  br _21, ^21, ^1

21:
  %% compilation_SUITE.erl:349
  %% Aliased:
  %%    _0
  _4 = call (`erlang`:`'++'`/2), `" -pa "`, _0

  %% compilation_SUITE.erl:348
  %% Aliased:
  %%    _4, 
  %%    _6
  _7 = call (`erlang`:`'++'`/2), _6, _4

  %% Aliased:
  %%    _7
  _23 = succeeded:body _7
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _11 = put_list `32`, _7

  %% Argument types:
  %%    _11 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _11
  _12 = put_list `97`, _11

  %% Argument types:
  %%    _12 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _12
  _13 = put_list `112`, _12

  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _13
  Pa = put_list `45`, _13

  %% compilation_SUITE.erl:350
  Files = call (`compiler_src`/0)

  %% Aliased:
  %%    Files
  _24 = succeeded:body Files
  br _24, ^24, ^1

24:
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3, 
  %%    Files
  _10 = make_fun (`'-self_compile_node/4-fun-0-'`/4), _1, _2, _3, Files

  %% compilation_SUITE.erl:356
  %% Aliased:
  %%    _10
  %% Unique:
  %%    Pa
  _16 = call (`test_server`:`run_on_shielded_node`/2), _10, Pa

  %% Aliased:
  %%    _16
  _25 = succeeded:body _16
  br _25, ^25, ^1

25:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% compilation_SUITE.erl:363
%% Counter = 55
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     list(any())
%%    _3 =>
%%     nonempty_list('inline' | 'verbose' | {'inline', 500})
function `compilation_SUITE`:`compile_compiler`(_0, _1, _2, _3) {
0:
  %% compilation_SUITE.erl:364
  _4 = call (`code`:`which`/1), `compile`

  %% Aliased:
  %%    _4
  _43 = succeeded:body _4
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _20 = put_list _4, `[]`

  %% compilation_SUITE.erl:364
  %% Unique:
  %%    _20
  _38 = call (`io`:`format`/2), `"~ts"`, _20

  %% Aliased:
  %%    _38
  _44 = succeeded:body _38
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _21 = put_list _1, `[]`

  %% Argument types:
  %%    _2 => list(any())
  %%    _21 => nonempty_list(any())
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _21
  _22 = put_list _2, _21

  %% compilation_SUITE.erl:365
  %% Unique:
  %%    _22
  _39 = call (`io`:`format`/2), `"Compiling ~s into ~ts"`, _22

  %% Aliased:
  %%    _39
  _45 = succeeded:body _39
  br _45, ^45, ^1

45:
  %% compilation_SUITE.erl:371
  %% Aliased:
  %%    _2
  _7 = call (`erlang`:`'++'`/2), _2, `"\""`

  %% Argument types:
  %%    _7 => list(any())
  %% Aliased:
  %%    _7
  _8 = put_list `34`, _7

  %% compilation_SUITE.erl:373
  _5 = call (`code`:`lib_dir`/1), `stdlib`

  %% Aliased:
  %%    _5
  _47 = succeeded:body _5
  br _47, ^47, ^1

47:
  %% compilation_SUITE.erl:373
  %% Aliased:
  %%    _5
  _6 = call (`filename`:`join`/2), _5, `"include"`

  %% Aliased:
  %%    _6
  _48 = succeeded:body _6
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _23 = put_tuple `i`, _6

  %% Argument types:
  %%    _23 => {'i', any()}
  %%    _3 => nonempty_list('inline' | 'verbose' | {'inline', 500})
  %% Aliased:
  %%    _3, 
  %%    _23
  _24 = put_list _23, _3

  %% Argument types:
  %%    _24 => nonempty_list('inline' | 'verbose' | {'i', any()} | {'inline', 500})
  %% Aliased:
  %%    _24
  _25 = put_list `nowarn_shadow_vars`, _24

  %% Argument types:
  %%    _8 => nonempty_list(any())
  %% Aliased:
  %%    _8
  _26 = put_tuple `d`, `'COMPILER_VSN'`, _8

  %% Argument types:
  %%    _26 => {'d', ''COMPILER_VSN'', nonempty_list(any())}
  %%    _25 => nonempty_list('inline' | 'nowarn_shadow_vars' | 'verbose' | {'i', any()} | {'inline', 500})
  %% Aliased:
  %%    _25, 
  %%    _26
  _27 = put_list _26, _25

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _28 = put_tuple `outdir`, _1

  %% Argument types:
  %%    _28 => {'outdir', any()}
  %%    _27 => nonempty_list('inline' | 'nowarn_shadow_vars' | 'verbose' | {'i', any()} | {'inline', 500} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _27, 
  %%    _28
  _29 = put_list _28, _27

  %% Argument types:
  %%    _29 => nonempty_list('inline' | 'nowarn_shadow_vars' | 'verbose' | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _29
  _30 = put_list `recv_opt_info`, _29

  %% Argument types:
  %%    _30 => nonempty_list('inline' | 'nowarn_shadow_vars' | 'recv_opt_info' | 'verbose' | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _30
  _31 = put_list `bin_opt_info`, _30

  %% Argument types:
  %%    _31 => nonempty_list('bin_opt_info' | 'inline' | 'nowarn_shadow_vars' | 'recv_opt_info' | 'verbose' | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _31
  _32 = put_list `ssalint`, _31

  %% Argument types:
  %%    _32 => nonempty_list(atom() | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _32
  _33 = put_list `clint`, _32

  %% Argument types:
  %%    _33 => nonempty_list(atom() | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _33
  _34 = put_list `clint0`, _33

  %% Argument types:
  %%    _34 => nonempty_list(atom() | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
  %% Aliased:
  %%    _34
  Opts = put_list `report`, _34

  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Opts
  _13 = make_fun (`'-compile_compiler/4-fun-0-'`/2), Opts

  %% compilation_SUITE.erl:374
  %% Aliased:
  %%    _0, 
  %%    _13
  _40 = call (`test_lib`:`p_run`/2), _13, _0

  %% Aliased:
  %%    _40
  _49 = succeeded:body _40
  br _49, ^49, ^1

49:
  %% Aliased:
  %%    _40
  ret _40

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% compilation_SUITE.erl:381
%% Counter = 10
%% bs_ensure_opt: true
function `compilation_SUITE`:`compiler_src`() {
0:
  %% compilation_SUITE.erl:382
  _0 = call (`code`:`lib_dir`/1), `compiler`

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_list _0, `["src","*.erl"]`

  %% compilation_SUITE.erl:382
  %% Unique:
  %%    _2
  _1 = call (`filename`:`join`/1), _2

  %% Aliased:
  %%    _1
  _7 = succeeded:body _1
  br _7, ^7, ^1

7:
  %% compilation_SUITE.erl:382
  %% Aliased:
  %%    _1
  _3 = call (`filelib`:`wildcard`/1), _1

  %% Aliased:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  %% Aliased:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% compilation_SUITE.erl:384
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(95..119)
function `compilation_SUITE`:`make_compiler_dir`(_0, _1) {
0:
  %% compilation_SUITE.erl:385
  %% Aliased:
  %%    _0, 
  %%    _1
  Dir = call (`filename`:`join`/2), _0, _1

  %% Aliased:
  %%    Dir
  _8 = succeeded:body Dir
  br _8, ^8, ^1

8:
  %% compilation_SUITE.erl:386
  %% Aliased:
  %%    Dir
  _4 = call (`file`:`make_dir`/1), Dir

  %% Aliased:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _13 = bif:'=:=' _4, `ok`
  br _13, ^12, ^11

12:
  %% Aliased:
  %%    Dir
  ret Dir

11:
  %% compilation_SUITE.erl:386
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _14 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compilation_SUITE.erl:389
%% Counter = 19
%% bs_ensure_opt: true
function `compilation_SUITE`:`compiler_version`() {
0:
  %% compilation_SUITE.erl:391
  _0 = call (`compile`:`module_info`/1), `compile`

  %% Aliased:
  %%    _0
  _8 = succeeded:body _0
  br _8, ^8, ^1

8:
  %% compilation_SUITE.erl:390
  %% Aliased:
  %%    _0
  _2 = call (`lists`:`keyfind`/3), `version`, `1`, _0

  %% Aliased:
  %%    _2
  _9 = succeeded:body _2
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _2 => 'false' | {'version', ...}
  %% Aliased:
  %%    _2
  %% Anno: #{constraints => tuple_arity}
  _15 = is_tagged_tuple _2, `2`, `version`
  br _15, ^12, ^11

12:
  %% Argument types:
  %%    _2 => {'version', any()}
  %% Aliased:
  %%    _2
  _3 = get_tuple_element _2, `1`
  %% Aliased:
  %%    _3
  ret _3

11:
  %% compilation_SUITE.erl:390
  %% Aliased:
  %%    _2
  _5 = match_fail `badmatch`, _2

  %% Unique:
  %%    _5
  _18 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compilation_SUITE.erl:394
%% Counter = 46
%% bs_ensure_opt: true
function `compilation_SUITE`:`compare_compilers`(_0, _1) {
0:
  %% compilation_SUITE.erl:395
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`beam_lib`:`cmp_dirs`/2), _0, _1

  %% Aliased:
  %%    _14
  _31 = succeeded:body _14
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _42 = bif:is_tuple _14
  br _42, ^42, ^33

42:
  %% Argument types:
  %%    _14 => {...}
  %% Aliased:
  %%    _14
  _43 = bif:tuple_size _14

  %% Argument types:
  %%    _43 => 0..16777215
  %% Unique:
  %%    _43
  _44 = bif:'=:=' _43, `3`
  br _44, ^41, ^33

41:
  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _17 = get_tuple_element _14, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _40 = bif:'=:=' _17, `[]`
  br _40, ^40, ^33

40:
  %% Argument types:
  %%    _14 => {nil(), any(), any()}
  %% Aliased:
  %%    _14
  _16 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _39 = bif:'=:=' _16, `[]`
  br _39, ^39, ^33

39:
  %% Argument types:
  %%    _14 => {nil(), nil(), any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `2`

  %% compilation_SUITE.erl:399
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _15
  _9 = call (`'-compare_compilers/2-lc$^0/1-0-'`/1), _15

  %% Unique:
  %%    _9
  _34 = succeeded:body _9
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _9 => list(any())
  %% Unique:
  %%    _9
  _37 = bif:'=:=' _9, `["beam_asm.beam"]`
  br _37, ^37, ^36

37:
  %% Result type:
  %%    'ok'
  ret `ok`

36:
  %% compilation_SUITE.erl:399
  %% Unique:
  %%    _9
  _27 = match_fail `badmatch`, _9

  %% Unique:
  %%    _27
  _38 = succeeded:body _27
  br ^1

33:
  %% compilation_SUITE.erl:395
  %% Aliased:
  %%    _14
  _28 = match_fail `badmatch`, _14

  %% Unique:
  %%    _28
  _45 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% compilation_SUITE.erl:404
%% Counter = 65
%% bs_ensure_opt: true
function `compilation_SUITE`:`string_table`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _26 = bif:is_list _0
  br _26, ^26, ^25

26:
  %% compilation_SUITE.erl:405
  %% Aliased:
  %%    _0
  DataDir = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    DataDir
  _27 = succeeded:body DataDir
  br _27, ^27, ^1

27:
  %% compilation_SUITE.erl:406
  %% Aliased:
  %%    DataDir
  File = call (`filename`:`join`/2), DataDir, `"string_table.erl"`

  %% Aliased:
  %%    File
  _28 = succeeded:body File
  br _28, ^28, ^1

28:
  %% compilation_SUITE.erl:407
  %% Aliased:
  %%    File
  _7 = call (`compile`:`file`/2), File, `[return,binary]`

  %% Aliased:
  %%    _7
  _29 = succeeded:body _7
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _60 = is_tagged_tuple _7, `4`, `ok`
  br _60, ^57, ^31

57:
  %% Argument types:
  %%    _7 => {'ok', any(), any(), any()}
  %% Aliased:
  %%    _7
  _10 = get_tuple_element _7, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _56 = bif:'=:=' _10, `string_table`
  br _56, ^55, ^31

55:
  %% Argument types:
  %%    _7 => {'ok', 'string_table', any(), any()}
  %% Aliased:
  %%    _7
  _8 = get_tuple_element _7, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _54 = bif:'=:=' _8, `[]`
  br _54, ^54, ^31

54:
  %% Argument types:
  %%    _7 => {'ok', 'string_table', any(), nil()}
  %% Aliased:
  %%    _7
  _9 = get_tuple_element _7, `2`

  %% compilation_SUITE.erl:408
  %% Aliased:
  %%    _9
  _12 = call (`beam_lib`:`chunks`/2), _9, `["StrT"]`

  %% Aliased:
  %%    _12
  _32 = succeeded:body _12
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _50 = is_tagged_tuple _12, `2`, `ok`
  br _50, ^47, ^34

47:
  %% Argument types:
  %%    _12 => {'ok', any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _44 = is_tagged_tuple _13, `2`, `string_table`
  br _44, ^41, ^34

41:
  %% Argument types:
  %%    _13 => {'string_table', any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `1`

  %% Aliased:
  %%    _15
  _40 = is_nonempty_list _15
  br _40, ^40, ^34

40:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _18 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _17 = get_tl _15

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _39 = bif:'=:=' _17, `[]`
  br _39, ^39, ^34

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _37 = bif:'=:=' _18, `{"StrT",<<"abcdefghiABCDEFGHI">>}`
  br _37, ^37, ^36

37:
  %% Result type:
  %%    'ok'
  ret `ok`

36:
  %% compilation_SUITE.erl:409
  %% Aliased:
  %%    _18
  _19 = match_fail `badmatch`, _18

  %% Unique:
  %%    _19
  _38 = succeeded:body _19
  br ^1

34:
  %% compilation_SUITE.erl:408
  %% Aliased:
  %%    _12
  _20 = match_fail `badmatch`, _12

  %% Unique:
  %%    _20
  _53 = succeeded:body _20
  br ^1

31:
  %% compilation_SUITE.erl:407
  %% Aliased:
  %%    _7
  _21 = match_fail `badmatch`, _7

  %% Unique:
  %%    _21
  _63 = succeeded:body _21
  br ^1

25:
  %% compilation_SUITE.erl:404
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-string_table/1-',1}}
  _22 = match_fail `function_clause`, _0

  %% Unique:
  %%    _22
  _64 = succeeded:body _22
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% compilation_SUITE.erl:412
%% Counter = 17
%% bs_ensure_opt: true
function `compilation_SUITE`:`otp_8949_a`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% compilation_SUITE.erl:413
  %% Result type:
  %%    'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  _3 = call (`do_otp_8949_a`/0)

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => 'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  %% Unique:
  %%    _3
  _14 = bif:'=:=' _3, `value`
  br _14, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% compilation_SUITE.erl:413
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _15 = succeeded:body _4
  br ^1

8:
  %% compilation_SUITE.erl:412
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_8949_a/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% compilation_SUITE.erl:419
%% Counter = 240
%% bs_ensure_opt: true
function `compilation_SUITE`:`do_otp_8949_a`() {
0:
  %% compilation_SUITE.erl:420
  %% Result type:
  %%    'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  _43 = call (`id`/1), `[{cs,undefined,[],1}]`

  %% Unique:
  %%    _43
  _79 = succeeded:body _43
  br _79, ^79, ^1

79:
  %% Unique:
  %%    _43
  _162 = is_nonempty_list _43
  br _162, ^162, ^81

162:
  %% Argument types:
  %%    _43 => nonempty_list({'cs', 'undefined', nil(), 1})
  %% Unique:
  %%    _43
  _44 = get_tl _43

  %% Argument types:
  %%    _44 => list({'cs', 'undefined', nil(), 1})
  %% Aliased:
  %%    _44
  _155 = bif:'=:=' _44, `[]`
  br _155, ^155, ^81

155:
  %% compilation_SUITE.erl:422
  %% Result type:
  %%    'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  SomeVar = call (`id`/1), `value`

  %% Unique:
  %%    SomeVar
  _82 = succeeded:body SomeVar
  br _82, ^101, ^1

101:
  %% compilation_SUITE.erl:425
  %% Result type:
  %%    'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  %% Unique:
  %%    SomeVar
  _74 = call (`id`/1), SomeVar

  %% Unique:
  %%    _74
  _102 = succeeded:body _74
  br _102, ^102, ^1

102:
  %% Result type:
  %%    'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  %% Unique:
  %%    _74
  ret _74

81:
  %% compilation_SUITE.erl:420
  %% Unique:
  %%    _43
  _76 = match_fail `case_clause`, _43

  %% Unique:
  %%    _76
  _163 = succeeded:body _76
  br ^1

1:
  _77 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _77
}

%% compilation_SUITE.erl:434
%% Counter = 65
%% bs_ensure_opt: true
function `compilation_SUITE`:`split_cases`(_0) {
0:
  %% compilation_SUITE.erl:435
  %% Result type:
  %%    'dummy1'
  _7 = call (`do_split_cases`/1), `x`

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br _18, ^63, ^1

63:
  br ^64

64:
  _24 = new_try_tag `'catch'`
  br _24, ^22, ^23

22:
  %% compilation_SUITE.erl:436
  %% Result type:
  %%    none()
  _13 = call (`do_split_cases`/1), `y`

  %% Aliased:
  %%    _13
  _26 = succeeded:body _13
  br ^23

23:
  %% Unique:
  %%    _24
  _29 = landingpad `'catch'`, _24

  %% Aliased:
  %%    _29
  _27 = extract _29, `0`
  br ^21

21:
  %% Aliased:
  %%    _27
  %% Unique:
  %%    _24
  _2 = catch_end _24, _27

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _41 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _41, ^38, ^32

38:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _8 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _35 = bif:is_tuple _8
  br _35, ^35, ^32

35:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _36 = bif:tuple_size _8

  %% Argument types:
  %%    _36 => 0..16777215
  %% Unique:
  %%    _36
  _37 = bif:'=:=' _36, `2`
  br _37, ^34, ^32

34:
  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _11 = get_tuple_element _8, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _33 = bif:'=:=' _11, `{badmatch,b}`
  br _33, ^33, ^32

33:
  %% Result type:
  %%    'ok'
  ret `ok`

32:
  %% compilation_SUITE.erl:436
  %% Aliased:
  %%    _2
  _14 = match_fail `badmatch`, _2

  %% Unique:
  %%    _14
  _44 = succeeded:body _14
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% compilation_SUITE.erl:439
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'x' | 'y'
function `compilation_SUITE`:`do_split_cases`(_0) {
0:
  %% Argument types:
  %%    _0 => 'x' | 'y'
  %% Unique:
  %%    _0
  _15 = bif:'=:=' _0, `x`
  br _15, ^14, ^13

14:
  %% Result type:
  %%    'dummy1'
  ret `dummy1`

13:
  %% compilation_SUITE.erl:445
  _9 = match_fail `badmatch`, `b`

  %% Unique:
  %%    _9
  _16 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% compilation_SUITE.erl:449
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'value' | nonempty_list({'cs', 'undefined', nil(), 1})
function `compilation_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    'value' | nonempty_list({'cs', 'undefined', nil(), 1})
  %% Unique:
  %%    _0
  ret _0
}

%% Counter = 6
%% bs_ensure_opt: true
function `compilation_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `compilation_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `compilation_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `compilation_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% compilation_SUITE.erl:399
%% Counter = 44
%% bs_ensure_opt: true
function `compilation_SUITE`:`'-compare_compilers/2-lc$^0/1-0-'`(_5) {
0:
  %% Aliased:
  %%    _5
  _39 = is_nonempty_list _5
  br _39, ^39, ^30

39:
  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _21 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _20 = get_tl _5

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _35 = bif:is_tuple _21
  br _35, ^35, ^31

35:
  %% Argument types:
  %%    _21 => {...}
  %% Aliased:
  %%    _21
  _36 = bif:tuple_size _21

  %% Argument types:
  %%    _36 => 0..16777215
  %% Unique:
  %%    _36
  _37 = bif:'=:=' _36, `2`
  br _37, ^42, ^31

42:
  %% Argument types:
  %%    _21 => {any(), any()}
  %% Aliased:
  %%    _21
  _23 = get_tuple_element _21, `0`

  %% compilation_SUITE.erl:399
  %% Aliased:
  %%    _23
  _7 = call (`filename`:`basename`/1), _23

  %% Aliased:
  %%    _7
  _32 = succeeded:body _7
  br _32, ^32, ^1

32:
  %% compilation_SUITE.erl:399
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _20
  _8 = call (`'-compare_compilers/2-lc$^0/1-0-'`/1), _20

  %% Unique:
  %%    _8
  _33 = succeeded:body _8
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _8 => list(any())
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _8
  _24 = put_list _7, _8
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _24
  ret _24

31:
  %% compilation_SUITE.erl:399
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _20
  _25 = call (`'-compare_compilers/2-lc$^0/1-0-'`/1), _20

  %% Unique:
  %%    _25
  _38 = succeeded:body _25
  br _38, ^38, ^1

38:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _25
  ret _25

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _40 = bif:'=:=' _5, `[]`
  br _40, ^40, ^29

40:
  %% Result type:
  %%    nil()
  ret `[]`

29:
  %% Argument types:
  %%    _5 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _19 = put_tuple `bad_generator`, _5

  %% compilation_SUITE.erl:399
  %% Unique:
  %%    _19
  _26 = call (`erlang`:`error`/1), _19

  %% Aliased:
  %%    _26
  _41 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% compilation_SUITE.erl:374
%% Counter = 51
%% bs_ensure_opt: true
%% Parameters
%%    Opts =>
%%     nonempty_list(atom() | {'i', any()} | {'inline', 500} | {'outdir', any()} | {'d', ''COMPILER_VSN'', nonempty_list(any())})
function `compilation_SUITE`:`'-compile_compiler/4-fun-0-'`(_11, Opts) {
0:
  %% compilation_SUITE.erl:375
  %% Aliased:
  %%    _11, 
  %%    Opts
  _35 = call (`compile`:`file`/2), _11, Opts

  %% Aliased:
  %%    _35
  _42 = succeeded:body _35
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _48 = is_tagged_tuple _35, `2`, `ok`
  br _48, ^45, ^44

45:
  %% Result type:
  %%    'ok'
  ret `ok`

44:
  %% Result type:
  %%    'error'
  ret `error`

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40
}

%% compilation_SUITE.erl:357
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _2 =>
%%     list(any())
%%    _3 =>
%%     nonempty_list('inline' | 'verbose' | {'inline', 500})
function `compilation_SUITE`:`'-self_compile_node/4-fun-0-'`(_1, _2, _3, Files) {
0:
  %% compilation_SUITE.erl:358
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3, 
  %%    Files
  _15 = call (`compile_compiler`/4), Files, _1, _2, _3

  %% Aliased:
  %%    _15
  _18 = succeeded:body _15
  br _18, ^18, ^1

18:
  %% Aliased:
  %%    _15
  ret _15

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}
