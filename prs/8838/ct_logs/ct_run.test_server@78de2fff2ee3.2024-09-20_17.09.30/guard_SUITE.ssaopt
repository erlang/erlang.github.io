module guard_SUITE.
exports [{all,0},
         {and_guard,1},
         {andalso_semi,1},
         {bad_constants,1},
         {bad_guards,1},
         {basic_andalso_orelse,1},
         {basic_not,1},
         {beam_bool_SUITE,1},
         {binary_part,1},
         {build_in_guard,1},
         {check_qlc_hrl,1},
         {comma,1},
         {complex_guard,1},
         {complex_not,1},
         {complex_or_guards,1},
         {complex_semicolon,1},
         {const_cond,1},
         {end_per_group,2},
         {end_per_suite,1},
         {gbif,1},
         {generated_combinations,1},
         {groups,0},
         {guard_in_catch,1},
         {init_per_group,2},
         {init_per_suite,1},
         {is_function_2,1},
         {literal_type_tests,1},
         {misc,1},
         {module_info,0},
         {module_info,1},
         {more_or_guards,1},
         {more_xor_guards,1},
         {nested_nots,1},
         {old_guard_tests,1},
         {or_guard,1},
         {rel_op_combinations,1},
         {rel_ops,1},
         {repeated_type_tests,1},
         {semicolon,1},
         {suite,0},
         {t_is_boolean,1},
         {t_tuple_size,1},
         {traverse_dcd,1},
         {tricky,1},
         {use_after_branch,1},
         {xor_guard,1}].
attributes [].

%% guard_SUITE.erl:46
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% guard_SUITE.erl:48
%% Counter = 7
%% bs_ensure_opt: true
function `guard_SUITE`:`all`() {
0:
  %% guard_SUITE.erl:49
  %% Result type:
  %%    nonempty_list({'group', 'slow'})
  _0 = call (`slow_group`/0)

  %% Unique:
  %%    _0
  _5 = succeeded:body _0
  br _5, ^5, ^1

5:
  %% guard_SUITE.erl:49
  %% Unique:
  %%    _0
  _2 = call (`erlang`:`'++'`/2), _0, `[{group,p}]`
  %% Result type:
  %%    nonempty_list({'group', 'p' | 'slow'})
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% guard_SUITE.erl:51
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nonempty_list({'p', nonempty_list('parallel'), nonempty_list(atom())} | {'slow', nil(), nonempty_list('generated_combinations' | 'literal_type_tests')})
  ret `[{p,[parallel],
     [misc,const_cond,basic_not,complex_not,nested_nots,semicolon,
      complex_semicolon,comma,or_guard,more_or_guards,complex_or_guards,
      and_guard,xor_guard,more_xor_guards,build_in_guard,old_guard_tests,
      complex_guard,gbif,t_is_boolean,is_function_2,tricky,rel_ops,
      rel_op_combinations,basic_andalso_orelse,traverse_dcd,check_qlc_hrl,
      andalso_semi,t_tuple_size,binary_part,bad_constants,bad_guards,
      guard_in_catch,beam_bool_SUITE,repeated_type_tests,use_after_branch]},
  {slow,[],[literal_type_tests,generated_combinations]}]`
}

%% guard_SUITE.erl:66
%% Counter = 6
%% bs_ensure_opt: true
function `guard_SUITE`:`init_per_suite`(_0) {
0:
  %% guard_SUITE.erl:67
  _2 = call (`test_lib`:`recompile`/1), `guard_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% guard_SUITE.erl:70
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:73
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% guard_SUITE.erl:76
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% guard_SUITE.erl:79
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`slow_group`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'slow'})
  ret `[{group,slow}]`
}

%% guard_SUITE.erl:89
%% Counter = 339
%% bs_ensure_opt: true
function `guard_SUITE`:`misc`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _120 = bif:is_list _0
  br _120, ^120, ^119

120:
  %% guard_SUITE.erl:90
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _55 = call (`id`/1), `42`

  %% Aliased:
  %%    _55
  _121 = succeeded:body _55
  br _121, ^122, ^1

122:
  %% Argument types:
  %%    _55 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _55
  _317 = bif:'=:=' _55, `42`
  br _317, ^316, ^128

316:
  %% guard_SUITE.erl:94
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _57 = call (`misc_1`/1), `[{{a,b,c}},{[4]},{[3]},{-2}]`

  %% Aliased:
  %%    _57
  _129 = succeeded:body _57
  br _129, ^129, ^1

129:
  %% Argument types:
  %%    _57 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _57
  _314 = bif:'=:=' _57, `{a,b,c}`
  br _314, ^314, ^131

314:
  %% guard_SUITE.erl:95
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _58 = call (`misc_1`/1), `[{{a,b,c}},{[4]},{[3]},{-3}]`

  %% Aliased:
  %%    _58
  _132 = succeeded:body _58
  br _132, ^132, ^1

132:
  %% Argument types:
  %%    _58 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _58
  _312 = bif:'=:=' _58, `none`
  br _312, ^311, ^134

311:
  %% guard_SUITE.erl:96
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _59 = call (`misc_1`/1), `[{{a,b,c}},{[4]},{[7]},{-2}]`

  %% Aliased:
  %%    _59
  _135 = succeeded:body _59
  br _135, ^135, ^1

135:
  %% Argument types:
  %%    _59 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _59
  _309 = bif:'=:=' _59, `none`
  br _309, ^308, ^137

308:
  %% guard_SUITE.erl:97
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _60 = call (`misc_1`/1), `[{{a,b,c}},{[4]},{[3]},{[1,2,3]}]`

  %% Aliased:
  %%    _60
  _138 = succeeded:body _60
  br _138, ^138, ^1

138:
  %% Argument types:
  %%    _60 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _60
  _306 = bif:'=:=' _60, `none`
  br _306, ^305, ^140

305:
  %% guard_SUITE.erl:99
  %% Result type:
  %%    {'ok', 'buf', bitstring(256,appendable)}
  _61 = call (`get_data`/3), `{o,true,raw}`, `0`, `buf`

  %% Unique:
  %%    _61
  _141 = succeeded:body _61
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    _61 => {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _61
  _303 = bif:'=:=' _61, `{ok,buf,<<>>}`
  br _303, ^303, ^143

303:
  %% guard_SUITE.erl:100
  %% Result type:
  %%    'error' | {'ok', 'buf', bitstring(256,appendable)}
  _62 = call (`get_data`/3), `{o,true,raw}`, `42`, `buf`

  %% Unique:
  %%    _62
  _144 = succeeded:body _62
  br _144, ^144, ^1

144:
  %% Argument types:
  %%    _62 => 'error' | {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _62
  _301 = bif:'=:=' _62, `{ok,buf,<<>>}`
  br _301, ^301, ^146

301:
  %% guard_SUITE.erl:101
  %% Result type:
  %%    {'ok', 'buf', bitstring(256,appendable)}
  _63 = call (`get_data`/3), `{o,false,raw}`, `0`, `buf`

  %% Unique:
  %%    _63
  _147 = succeeded:body _63
  br _147, ^147, ^1

147:
  %% Argument types:
  %%    _63 => {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _63
  _299 = bif:'=:=' _63, `{ok,buf,<<>>}`
  br _299, ^299, ^149

299:
  %% guard_SUITE.erl:102
  %% Result type:
  %%    'error' | {'ok', 'buf', bitstring(256,appendable)}
  _64 = call (`get_data`/3), `{o,false,raw}`, `42`, `buf`

  %% Unique:
  %%    _64
  _150 = succeeded:body _64
  br _150, ^150, ^1

150:
  %% Argument types:
  %%    _64 => 'error' | {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _64
  _297 = bif:'=:=' _64, `error`
  br _297, ^296, ^152

296:
  %% guard_SUITE.erl:103
  %% Result type:
  %%    {'ok', 'buf', bitstring(256,appendable)}
  _65 = call (`get_data`/3), `{o,true,0}`, `0`, `buf`

  %% Unique:
  %%    _65
  _153 = succeeded:body _65
  br _153, ^153, ^1

153:
  %% Argument types:
  %%    _65 => {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _65
  _294 = bif:'=:=' _65, `{ok,buf,<<>>}`
  br _294, ^294, ^155

294:
  %% guard_SUITE.erl:104
  %% Result type:
  %%    'error' | {'ok', 'buf', bitstring(256,appendable)}
  _66 = call (`get_data`/3), `{o,true,0}`, `42`, `buf`

  %% Unique:
  %%    _66
  _156 = succeeded:body _66
  br _156, ^156, ^1

156:
  %% Argument types:
  %%    _66 => 'error' | {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _66
  _292 = bif:'=:=' _66, `{ok,buf,<<>>}`
  br _292, ^292, ^158

292:
  %% guard_SUITE.erl:105
  %% Result type:
  %%    {'ok', 'buf', bitstring(256,appendable)}
  _67 = call (`get_data`/3), `{o,false,0}`, `0`, `buf`

  %% Unique:
  %%    _67
  _159 = succeeded:body _67
  br _159, ^159, ^1

159:
  %% Argument types:
  %%    _67 => {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _67
  _290 = bif:'=:=' _67, `{ok,buf,<<>>}`
  br _290, ^290, ^161

290:
  %% guard_SUITE.erl:106
  %% Result type:
  %%    'error' | {'ok', 'buf', bitstring(256,appendable)}
  _68 = call (`get_data`/3), `{o,false,0}`, `42`, `buf`

  %% Unique:
  %%    _68
  _162 = succeeded:body _68
  br _162, ^162, ^1

162:
  %% Argument types:
  %%    _68 => 'error' | {'ok', 'buf', bitstring(256,appendable)}
  %% Unique:
  %%    _68
  _288 = bif:'=:=' _68, `error`
  br _288, ^287, ^164

287:
  %% guard_SUITE.erl:108
  %% Result type:
  %%    'relief'
  _69 = call (`misc_2`/1), `0`

  %% Unique:
  %%    _69
  _165 = succeeded:body _69
  br _165, ^284, ^1

284:
  %% guard_SUITE.erl:109
  %% Result type:
  %%    'error'
  _70 = call (`misc_2`/1), `1`

  %% Unique:
  %%    _70
  _168 = succeeded:body _70
  br _168, ^281, ^1

281:
  %% guard_SUITE.erl:110
  %% Result type:
  %%    'error'
  _71 = call (`misc_2`/1), `true`

  %% Unique:
  %%    _71
  _171 = succeeded:body _71
  br _171, ^174, ^1

174:
  %% guard_SUITE.erl:117
  %% Result type:
  %%    'true'
  _72 = call (`misc_3`/2), `1`, `0`

  %% Unique:
  %%    _72
  _178 = succeeded:body _72
  br _178, ^275, ^1

275:
  %% guard_SUITE.erl:118
  %% Result type:
  %%    'false' | 'true'
  _73 = call (`misc_3`/2), `0`, `0`

  %% Unique:
  %%    _73
  _181 = succeeded:body _73
  br _181, ^181, ^1

181:
  br _73, ^272, ^183

272:
  %% guard_SUITE.erl:119
  %% Result type:
  %%    'false' | 'true'
  _74 = call (`misc_3`/2), `0`, `2`

  %% Unique:
  %%    _74
  _184 = succeeded:body _74
  br _184, ^184, ^1

184:
  br _74, ^186, ^269

186:
  %% guard_SUITE.erl:119
  _97 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _97
  _271 = succeeded:body _97
  br ^1

269:
  %% guard_SUITE.erl:123
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Zero = call (`id`/1), `0`

  %% Aliased:
  %%    Zero
  _187 = succeeded:body Zero
  br _187, ^187, ^1

187:
  %% guard_SUITE.erl:124
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  One = call (`id`/1), `1`

  %% Aliased:
  %%    One
  _188 = succeeded:body One
  br _188, ^188, ^1

188:
  %% guard_SUITE.erl:125
  %% Argument types:
  %%    Zero => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Zero
  _29 = bif:'==' Zero, `0`

  %% Argument types:
  %%    _29 => 'false' | 'true'
  %% Unique:
  %%    _29
  _191 = bif:'>' _29, `false`
  br _191, ^266, ^190

266:
  %% guard_SUITE.erl:126
  %% Argument types:
  %%    Zero => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Zero
  _33 = bif:'==' Zero, `0`

  %% guard_SUITE.erl:126
  %% Argument types:
  %%    One => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    One
  _32 = bif:'==' One, `1`

  %% Argument types:
  %%    _33 => 'false' | 'true'
  %%    _32 => 'false' | 'true'
  %% Unique:
  %%    _32, 
  %%    _33
  _197 = bif:'=:=' _33, _32
  br _197, ^263, ^196

263:
  %% guard_SUITE.erl:127
  %% Argument types:
  %%    Zero => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Zero
  _37 = bif:'==' Zero, `0`

  %% guard_SUITE.erl:127
  %% Argument types:
  %%    One => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    One
  _36 = bif:'==' One, `1`

  %% Argument types:
  %%    _37 => 'false' | 'true'
  %%    _36 => 'false' | 'true'
  %% Unique:
  %%    _36, 
  %%    _37
  _203 = bif:'=:=' _37, _36
  br _203, ^254, ^202

254:
  %% guard_SUITE.erl:130
  %% Argument types:
  %%    Zero => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Zero
  _48 = bif:is_integer Zero

  %% guard_SUITE.erl:130
  %% Argument types:
  %%    One => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    One
  _47 = bif:is_integer One

  %% Argument types:
  %%    _48 => 'false' | 'true'
  %%    _47 => 'false' | 'true'
  %% Unique:
  %%    _47, 
  %%    _48
  _222 = bif:'>=' _48, _47
  br _222, ^337, ^221

337:
  br ^338

338:
  _229 = new_try_tag `'catch'`
  br _229, ^227, ^228

227:
  %% guard_SUITE.erl:132
  %% Result type:
  %%    'ok'
  _89 = call (`misc_4`/0)

  %% Unique:
  %%    _89
  _231 = succeeded:body _89
  br _231, ^231, ^228

231:
  br ^226

228:
  %% Unique:
  %%    _229
  _234 = landingpad `'catch'`, _229

  %% Aliased:
  %%    _234
  _232 = extract _234, `0`
  br ^226

226:
  _235 = phi { _232, ^228 }, { `ok`, ^231 }

  %% Aliased:
  %%    _235
  %% Unique:
  %%    _229
  _51 = catch_end _229, _235

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _247 = is_tagged_tuple _51, `2`, `'EXIT'`
  br _247, ^244, ^237

244:
  %% Argument types:
  %%    _51 => {''EXIT'', any()}
  %% Aliased:
  %%    _51
  _78 = get_tuple_element _51, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _241 = is_tagged_tuple _78, `2`, `function_clause`
  br _241, ^238, ^237

238:
  %% Result type:
  %%    'ok'
  ret `ok`

237:
  %% guard_SUITE.erl:132
  %% Aliased:
  %%    _51
  _90 = match_fail `badmatch`, _51

  %% Unique:
  %%    _90
  _250 = succeeded:body _90
  br ^1

221:
  %% guard_SUITE.erl:130
  _87 = match_fail `if_clause`

  %% Unique:
  %%    _87
  _223 = succeeded:body _87
  br ^1

202:
  %% guard_SUITE.erl:127
  _85 = match_fail `if_clause`

  %% Unique:
  %%    _85
  _204 = succeeded:body _85
  br ^1

196:
  %% guard_SUITE.erl:126
  _84 = match_fail `if_clause`

  %% Unique:
  %%    _84
  _198 = succeeded:body _84
  br ^1

190:
  %% guard_SUITE.erl:125
  _83 = match_fail `if_clause`

  %% Unique:
  %%    _83
  _192 = succeeded:body _83
  br ^1

183:
  %% guard_SUITE.erl:118
  _98 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _98
  _274 = succeeded:body _98
  br ^1

164:
  %% guard_SUITE.erl:106
  %% Unique:
  %%    _68
  _103 = match_fail `badmatch`, _68

  %% Unique:
  %%    _103
  _289 = succeeded:body _103
  br ^1

161:
  %% guard_SUITE.erl:105
  %% Unique:
  %%    _67
  _104 = match_fail `badmatch`, _67

  %% Unique:
  %%    _104
  _291 = succeeded:body _104
  br ^1

158:
  %% guard_SUITE.erl:104
  %% Unique:
  %%    _66
  _105 = match_fail `badmatch`, _66

  %% Unique:
  %%    _105
  _293 = succeeded:body _105
  br ^1

155:
  %% guard_SUITE.erl:103
  %% Unique:
  %%    _65
  _106 = match_fail `badmatch`, _65

  %% Unique:
  %%    _106
  _295 = succeeded:body _106
  br ^1

152:
  %% guard_SUITE.erl:102
  %% Unique:
  %%    _64
  _107 = match_fail `badmatch`, _64

  %% Unique:
  %%    _107
  _298 = succeeded:body _107
  br ^1

149:
  %% guard_SUITE.erl:101
  %% Unique:
  %%    _63
  _108 = match_fail `badmatch`, _63

  %% Unique:
  %%    _108
  _300 = succeeded:body _108
  br ^1

146:
  %% guard_SUITE.erl:100
  %% Unique:
  %%    _62
  _109 = match_fail `badmatch`, _62

  %% Unique:
  %%    _109
  _302 = succeeded:body _109
  br ^1

143:
  %% guard_SUITE.erl:99
  %% Unique:
  %%    _61
  _110 = match_fail `badmatch`, _61

  %% Unique:
  %%    _110
  _304 = succeeded:body _110
  br ^1

140:
  %% guard_SUITE.erl:97
  %% Aliased:
  %%    _60
  _111 = match_fail `badmatch`, _60

  %% Unique:
  %%    _111
  _307 = succeeded:body _111
  br ^1

137:
  %% guard_SUITE.erl:96
  %% Aliased:
  %%    _59
  _112 = match_fail `badmatch`, _59

  %% Unique:
  %%    _112
  _310 = succeeded:body _112
  br ^1

134:
  %% guard_SUITE.erl:95
  %% Aliased:
  %%    _58
  _113 = match_fail `badmatch`, _58

  %% Unique:
  %%    _113
  _313 = succeeded:body _113
  br ^1

131:
  %% guard_SUITE.erl:94
  %% Aliased:
  %%    _57
  _114 = match_fail `badmatch`, _57

  %% Unique:
  %%    _114
  _315 = succeeded:body _114
  br ^1

128:
  %% guard_SUITE.erl:90
  %% Aliased:
  %%    _55
  _115 = match_fail `badmatch`, _55

  %% Unique:
  %%    _115
  _318 = succeeded:body _115
  br ^1

119:
  %% guard_SUITE.erl:89
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-misc/1-',1}}
  _116 = match_fail `function_clause`, _0

  %% Unique:
  %%    _116
  _319 = succeeded:body _116
  br ^1

1:
  _117 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _117
}

%% guard_SUITE.erl:136
%% Counter = 66
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
function `guard_SUITE`:`misc_1`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _0
  _7 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _0
  _6 = get_tl _0

  %% Unique:
  %%    _6
  _52 = is_nonempty_list _6
  br _52, ^52, ^26

52:
  %% Argument types:
  %%    _6 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _6
  _10 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _6
  _9 = get_tl _6

  %% Unique:
  %%    _9
  _47 = is_nonempty_list _9
  br _47, ^47, ^26

47:
  %% Argument types:
  %%    _9 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _9
  _13 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _9
  _12 = get_tl _9

  %% Aliased:
  %%    _12
  _42 = is_nonempty_list _12
  br _42, ^42, ^26

42:
  %% Argument types:
  %%    _12 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _12
  _16 = get_hd _12

  %% Argument types:
  %%    _12 => nonempty_list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _12
  _15 = get_tl _12

  %% Argument types:
  %%    _15 => list({nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _15
  _37 = bif:'=:=' _15, `[]`
  br _37, ^37, ^26

37:
  %% Argument types:
  %%    _13 => {nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}}
  %% Aliased:
  %%    _13
  _14 = get_tuple_element _13, `0`

  %% Argument types:
  %%    _10 => {nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}}
  %% Unique:
  %%    _10
  _11 = get_tuple_element _10, `0`

  %% guard_SUITE.erl:138
  %% Argument types:
  %%    _11 => nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}
  %%    _14 => nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}
  %% Aliased:
  %%    _11, 
  %%    _14
  _18 = bif:'>' _11, _14
  br _18, ^60, ^28

60:
  %% Argument types:
  %%    _16 => {nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}}
  %% Aliased:
  %%    _16
  _17 = get_tuple_element _16, `0`

  %% guard_SUITE.erl:138
  %% Argument types:
  %%    _17 => nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}
  %% Aliased:
  %%    _17
  _2 = bif:abs _17

  %% Unique:
  %%    _2
  _32 = succeeded:guard _2
  br _32, ^59, ^28

59:
  %% guard_SUITE.erl:138
  %% Argument types:
  %%    _2 => 0..3
  %% Unique:
  %%    _2
  _20 = bif:'=:=' _2, `2`
  br _20, ^35, ^28

35:
  %% Argument types:
  %%    _7 => {nonempty_list(1..7) | -3..-2 | {'a', 'b', 'c'}}
  %% Unique:
  %%    _7
  _8 = get_tuple_element _7, `0`

  %% guard_SUITE.erl:139
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _8
  _22 = call (`id`/1), _8

  %% Aliased:
  %%    _22
  _36 = succeeded:body _22
  br _36, ^36, ^1

36:
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _22
  ret _22

28:
  %% Result type:
  %%    'none'
  ret `none`

26:
  %% guard_SUITE.erl:136
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-misc_1/1-',1}}
  _23 = match_fail `function_clause`, _0

  %% Unique:
  %%    _23
  _58 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% guard_SUITE.erl:144
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'true' | 0..1
function `guard_SUITE`:`misc_2`(_0) {
0:
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `0`
  br _9, ^7, ^5

7:
  %% Result type:
  %%    'relief'
  ret `relief`

5:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:148
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..1
%%    _1 =>
%%     0..2
function `guard_SUITE`:`misc_3`(_0, _1) {
0:
  %% guard_SUITE.erl:151
  %% Argument types:
  %%    _0 => 0..1
  %% Unique:
  %%    _0
  _6 = bif:'>=' _0, `1`
  br _6, ^19, ^21

19:
  %% Result type:
  %%    'true'
  ret `true`

21:
  %% guard_SUITE.erl:151
  %% Argument types:
  %%    _1 => 0..2
  %% Unique:
  %%    _1
  _3 = bif:'>=' _1, `2`

  %% guard_SUITE.erl:151
  %% Argument types:
  %%    _3 => 'false' | 'true'
  %% Unique:
  %%    _3
  _8 = bif:'xor' _3, `true`
  ret _8
}

%% guard_SUITE.erl:155
%% Counter = 22
%% bs_ensure_opt: true
function `guard_SUITE`:`misc_4`() {
0:
  %% guard_SUITE.erl:155
  _1 = put_map `exact`, `#{}`, `ok`, `ok`

  %% Aliased:
  %%    _1
  _13 = succeeded:guard _1
  br _13, ^14, ^11

14:
  _21 = bs_init_writable `256`

  %% guard_SUITE.erl:155
  %% Result type:
  %%    bitstring(256,appendable)
  %% Argument types:
  %%    
  %% Anno: #{first_fragment_dies => false,unit => 256}
  _4 = bs_create_bin `private_append`, `[8,{segment,1}]`, _21, `all`

  %% Unique:
  %%    _4
  _18 = succeeded:guard _4
  br _18, ^18, ^11

18:
  %% Argument types:
  %%    _4 => bitstring(256,appendable)
  %% Unique:
  %%    _4
  _19 = bif:'>=' _4, `ok`
  br _19, ^19, ^11

19:
  %% Result type:
  %%    'ok'
  ret `ok`

11:
  %% guard_SUITE.erl:155
  %% Anno: #{inlined => {'-inlined-misc_4/0-',0}}
  _8 = match_fail `function_clause`

  %% Unique:
  %%    _8
  _20 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:158
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'o', 'false' | 'true', 'raw' | 0}
%%    _1 =>
%%     0..42
%%    _2 =>
%%     'buf'
function `guard_SUITE`:`get_data`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _0 => {'o', 'false' | 'true', 'raw' | 0}
  %% Unique:
  %%    _0
  _12 = get_tuple_element _0, `1`
  br _12, ^33, ^41

41:
  %% guard_SUITE.erl:161
  %% Argument types:
  %%    _1 => 0..42
  %% Unique:
  %%    _1
  _17 = bif:'=:=' _1, `0`
  br _17, ^33, ^27

33:
  %% Result type:
  %%    {'ok', 'buf', bitstring(256,appendable)}
  ret `{ok,buf,<<>>}`

27:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:167
%% Counter = 53
%% bs_ensure_opt: true
function `guard_SUITE`:`const_cond`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _21 = bif:is_list _0
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:168
  %% Result type:
  %%    'error' | 'ok'
  _7 = call (`const_cond`/2), `{}`, `0`

  %% Unique:
  %%    _7
  _22 = succeeded:body _7
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _7 => 'error' | 'ok'
  %% Unique:
  %%    _7
  _50 = bif:'=:=' _7, `ok`
  br _50, ^49, ^24

49:
  %% guard_SUITE.erl:169
  %% Result type:
  %%    'error' | 'ok'
  _8 = call (`const_cond`/2), `{a}`, `1`

  %% Unique:
  %%    _8
  _25 = succeeded:body _8
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _8 => 'error' | 'ok'
  %% Unique:
  %%    _8
  _47 = bif:'=:=' _8, `ok`
  br _47, ^46, ^27

46:
  %% guard_SUITE.erl:170
  %% Result type:
  %%    'error' | 'ok'
  _9 = call (`const_cond`/2), `{a,b}`, `3`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _9 => 'error' | 'ok'
  %% Unique:
  %%    _9
  _44 = bif:'=:=' _9, `error`
  br _44, ^43, ^30

43:
  %% guard_SUITE.erl:171
  %% Result type:
  %%    'error' | 'ok'
  _10 = call (`const_cond`/2), `{a}`, `0`

  %% Unique:
  %%    _10
  _31 = succeeded:body _10
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %% Unique:
  %%    _10
  _41 = bif:'=:=' _10, `error`
  br _41, ^40, ^33

40:
  %% guard_SUITE.erl:172
  %% Result type:
  %%    'error' | 'ok'
  _11 = call (`const_cond`/2), `{a,b}`, `1`

  %% Unique:
  %%    _11
  _34 = succeeded:body _11
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _11 => 'error' | 'ok'
  %% Unique:
  %%    _11
  _38 = bif:'=:=' _11, `error`
  br _38, ^37, ^36

37:
  %% Result type:
  %%    'ok'
  ret `ok`

36:
  %% guard_SUITE.erl:172
  _12 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _12
  _39 = succeeded:body _12
  br ^1

33:
  %% guard_SUITE.erl:171
  _13 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _13
  _42 = succeeded:body _13
  br ^1

30:
  %% guard_SUITE.erl:170
  _14 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _14
  _45 = succeeded:body _14
  br ^1

27:
  %% guard_SUITE.erl:169
  _15 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _15
  _48 = succeeded:body _15
  br ^1

24:
  %% guard_SUITE.erl:168
  _16 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _16
  _51 = succeeded:body _16
  br ^1

20:
  %% guard_SUITE.erl:167
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-const_cond/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _52 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% guard_SUITE.erl:175
%% Counter = 39
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {...}
%%    _1 =>
%%     0..3
function `guard_SUITE`:`const_cond`(_0, _1) {
0:
  %% guard_SUITE.erl:178
  %% Argument types:
  %%    _0 => {...}
  %% Unique:
  %%    _0
  _4 = bif:tuple_size _0

  %% guard_SUITE.erl:178
  %% Argument types:
  %%    _4 => 0..16777215
  %%    _1 => 0..3
  %% Unique:
  %%    _1, 
  %%    _4
  _5 = bif:'=:=' _4, _1
  br _5, ^27, ^21

27:
  %% Result type:
  %%    'ok'
  ret `ok`

21:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:183
%% Counter = 188
%% bs_ensure_opt: true
function `guard_SUITE`:`basic_not`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _130 = bif:is_list _0
  br _130, ^130, ^129

130:
  %% guard_SUITE.erl:184
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _131 = succeeded:body True
  br _131, ^131, ^1

131:
  %% guard_SUITE.erl:185
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _132 = succeeded:body False
  br _132, ^132, ^1

132:
  %% guard_SUITE.erl:186
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Glurf = call (`id`/1), `glurf`

  %% Aliased:
  %%    Glurf
  _133 = succeeded:body Glurf
  br _133, ^133, ^1

133:
  %% guard_SUITE.erl:187
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  A = call (`id`/1), `5`

  %% Aliased:
  %%    A
  _134 = succeeded:body A
  br _134, ^134, ^1

134:
  %% guard_SUITE.erl:188
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  B = call (`id`/1), `37.5`

  %% Aliased:
  %%    B
  _135 = succeeded:body B
  br _135, ^135, ^1

135:
  %% guard_SUITE.erl:189
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  C = call (`id`/1), `-1`

  %% Aliased:
  %%    C
  _136 = succeeded:body C
  br _136, ^136, ^1

136:
  %% guard_SUITE.erl:190
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  D = call (`id`/1), `5`

  %% Aliased:
  %%    D
  _137 = succeeded:body D
  br _137, ^137, ^1

137:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False, 
  %%    Glurf, 
  %%    True
  ATuple = put_tuple False, True, Glurf

  %% Result type:
  %%    'ok'
  _10 = make_fun (`'-basic_not/1-fun-0-'`/0)

  %% guard_SUITE.erl:193
  %% Aliased:
  %%    _10
  _98 = call (`check`/2), _10, `ok`

  %% Aliased:
  %%    _98
  _138 = succeeded:body _98
  br _138, ^138, ^1

138:
  %% Result type:
  %%    'error'
  _11 = make_fun (`'-basic_not/1-fun-1-'`/0)

  %% guard_SUITE.erl:194
  %% Aliased:
  %%    _11
  _99 = call (`check`/2), _11, `error`

  %% Aliased:
  %%    _99
  _139 = succeeded:body _99
  br _139, ^139, ^1

139:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _13 = make_fun (`'-basic_not/1-fun-2-'`/1), False

  %% guard_SUITE.erl:195
  %% Aliased:
  %%    _13
  _100 = call (`check`/2), _13, `ok`

  %% Aliased:
  %%    _100
  _140 = succeeded:body _100
  br _140, ^140, ^1

140:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    True
  _15 = make_fun (`'-basic_not/1-fun-3-'`/1), True

  %% guard_SUITE.erl:196
  %% Aliased:
  %%    _15
  _101 = call (`check`/2), _15, `error`

  %% Aliased:
  %%    _101
  _141 = succeeded:body _101
  br _141, ^141, ^1

141:
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    A, 
  %%    B
  _16 = make_fun (`'-basic_not/1-fun-4-'`/2), A, B

  %% guard_SUITE.erl:198
  %% Aliased:
  %%    _16
  _103 = call (`check`/2), _16, `lt`

  %% Aliased:
  %%    _103
  _142 = succeeded:body _103
  br _142, ^142, ^1

142:
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    A, 
  %%    C
  _17 = make_fun (`'-basic_not/1-fun-5-'`/2), A, C

  %% guard_SUITE.erl:199
  %% Aliased:
  %%    _17
  _105 = call (`check`/2), _17, `gt`

  %% Aliased:
  %%    _105
  _143 = succeeded:body _105
  br _143, ^143, ^1

143:
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    A, 
  %%    D
  _18 = make_fun (`'-basic_not/1-fun-6-'`/2), A, D

  %% guard_SUITE.erl:200
  %% Aliased:
  %%    _18
  _107 = call (`check`/2), _18, `eq`

  %% Aliased:
  %%    _107
  _144 = succeeded:body _107
  br _144, ^144, ^1

144:
  %% Result type:
  %%    'le'
  _22 = make_fun (`'-basic_not/1-fun-7-'`/0)

  %% guard_SUITE.erl:202
  %% Aliased:
  %%    _22
  _108 = call (`check`/2), _22, `le`

  %% Aliased:
  %%    _108
  _145 = succeeded:body _108
  br _145, ^145, ^1

145:
  %% Result type:
  %%    'ge'
  _29 = make_fun (`'-basic_not/1-fun-8-'`/0)

  %% guard_SUITE.erl:204
  %% Aliased:
  %%    _29
  _109 = call (`check`/2), _29, `ge`

  %% Aliased:
  %%    _109
  _146 = succeeded:body _109
  br _146, ^146, ^1

146:
  %% Result type:
  %%    'le'
  _33 = make_fun (`'-basic_not/1-fun-9-'`/0)

  %% guard_SUITE.erl:206
  %% Aliased:
  %%    _33
  _110 = call (`check`/2), _33, `le`

  %% Aliased:
  %%    _110
  _147 = succeeded:body _110
  br _147, ^147, ^1

147:
  %% Result type:
  %%    'eq' | 'ge' | 'le' | 'ne'
  %% Aliased:
  %%    A, 
  %%    B
  _37 = make_fun (`'-basic_not/1-fun-10-'`/2), A, B

  %% guard_SUITE.erl:209
  %% Aliased:
  %%    _37
  _111 = call (`check`/2), _37, `le`

  %% Aliased:
  %%    _111
  _148 = succeeded:body _111
  br _148, ^148, ^1

148:
  %% Result type:
  %%    'eq' | 'ge' | 'le' | 'ne'
  %% Aliased:
  %%    A, 
  %%    C
  _41 = make_fun (`'-basic_not/1-fun-11-'`/2), A, C

  %% guard_SUITE.erl:211
  %% Aliased:
  %%    _41
  _112 = call (`check`/2), _41, `ge`

  %% Aliased:
  %%    _112
  _149 = succeeded:body _112
  br _149, ^149, ^1

149:
  %% Result type:
  %%    'eq' | 'ge' | 'le' | 'ne'
  %% Aliased:
  %%    A, 
  %%    D
  _45 = make_fun (`'-basic_not/1-fun-12-'`/2), A, D

  %% guard_SUITE.erl:213
  %% Aliased:
  %%    _45
  _113 = call (`check`/2), _45, `le`

  %% Aliased:
  %%    _113
  _150 = succeeded:body _113
  br _150, ^150, ^1

150:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _48 = make_fun (`'-basic_not/1-fun-13-'`/1), ATuple

  %% guard_SUITE.erl:216
  %% Aliased:
  %%    _48
  _114 = call (`check`/2), _48, `ok`

  %% Aliased:
  %%    _114
  _151 = succeeded:body _114
  br _151, ^151, ^1

151:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _51 = make_fun (`'-basic_not/1-fun-14-'`/1), ATuple

  %% guard_SUITE.erl:217
  %% Aliased:
  %%    _51
  _115 = call (`check`/2), _51, `error`

  %% Aliased:
  %%    _115
  _152 = succeeded:body _115
  br _152, ^152, ^1

152:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _54 = make_fun (`'-basic_not/1-fun-15-'`/1), ATuple

  %% guard_SUITE.erl:218
  %% Aliased:
  %%    _54
  _116 = call (`check`/2), _54, `error`

  %% Aliased:
  %%    _116
  _153 = succeeded:body _116
  br _153, ^153, ^1

153:
  %% Result type:
  %%    'error'
  _56 = make_fun (`'-basic_not/1-fun-16-'`/0)

  %% guard_SUITE.erl:220
  %% Aliased:
  %%    _56
  _117 = call (`check`/2), _56, `error`

  %% Aliased:
  %%    _117
  _154 = succeeded:body _117
  br _154, ^154, ^1

154:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf
  _58 = make_fun (`'-basic_not/1-fun-17-'`/1), Glurf

  %% guard_SUITE.erl:221
  %% Aliased:
  %%    _58
  _118 = call (`check`/2), _58, `error`

  %% Aliased:
  %%    _118
  _155 = succeeded:body _118
  br _155, ^155, ^1

155:
  %% Result type:
  %%    'broken'
  _60 = make_fun (`'-basic_not/1-fun-18-'`/0)

  %% guard_SUITE.erl:223
  %% Aliased:
  %%    _60
  _119 = call (`check`/2), _60, `broken`

  %% Aliased:
  %%    _119
  _156 = succeeded:body _119
  br _156, ^156, ^1

156:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _68 = make_fun (`'-basic_not/1-fun-19-'`/1), True

  %% guard_SUITE.erl:225
  %% Aliased:
  %%    _68
  _121 = call (`check`/2), _68, `ok`

  %% Aliased:
  %%    _121
  _157 = succeeded:body _121
  br _157, ^157, ^1

157:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _76 = make_fun (`'-basic_not/1-fun-20-'`/2), False, True

  %% guard_SUITE.erl:226
  %% Aliased:
  %%    _76
  _122 = call (`check`/2), _76, `error`

  %% Aliased:
  %%    _122
  _158 = succeeded:body _122
  br _158, ^158, ^1

158:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    True
  _78 = make_fun (`'-basic_not/1-fun-21-'`/1), True

  %% guard_SUITE.erl:229
  %% Aliased:
  %%    _78
  _123 = call (`check`/2), _78, `error`

  %% Aliased:
  %%    _123
  _159 = succeeded:body _123
  br _159, ^159, ^1

159:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _80 = make_fun (`'-basic_not/1-fun-22-'`/1), False

  %% guard_SUITE.erl:230
  %% Aliased:
  %%    _80
  _124 = call (`check`/2), _80, `ok`

  %% Aliased:
  %%    _124
  _160 = succeeded:body _124
  br _160, ^160, ^1

160:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf
  _82 = make_fun (`'-basic_not/1-fun-23-'`/1), Glurf

  %% guard_SUITE.erl:231
  %% Aliased:
  %%    _82
  _125 = call (`check`/2), _82, `ok`

  %% Aliased:
  %%    _125
  _161 = succeeded:body _125
  br _161, ^161, ^1

161:
  %% Result type:
  %%    'ok'
  ret `ok`

129:
  %% guard_SUITE.erl:183
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-basic_not/1-',1}}
  _126 = match_fail `function_clause`, _0

  %% Unique:
  %%    _126
  _162 = succeeded:body _126
  br ^1

1:
  _127 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _127
}

%% guard_SUITE.erl:235
%% Counter = 239
%% bs_ensure_opt: true
function `guard_SUITE`:`complex_not`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _124 = bif:is_list _0
  br _124, ^124, ^123

124:
  %% guard_SUITE.erl:236
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  ATuple = call (`id`/1), `{false,true,gurka}`

  %% Aliased:
  %%    ATuple
  _125 = succeeded:body ATuple
  br _125, ^125, ^1

125:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _4 = make_fun (`'-complex_not/1-fun-0-'`/1), ATuple

  %% guard_SUITE.erl:237
  %% Aliased:
  %%    _4
  _94 = call (`check`/2), _4, `ok`

  %% Aliased:
  %%    _94
  _126 = succeeded:body _94
  br _126, ^126, ^1

126:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _7 = make_fun (`'-complex_not/1-fun-1-'`/1), ATuple

  %% guard_SUITE.erl:238
  %% Aliased:
  %%    _7
  _95 = call (`check`/2), _7, `error`

  %% Aliased:
  %%    _95
  _127 = succeeded:body _95
  br _127, ^127, ^1

127:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _10 = make_fun (`'-complex_not/1-fun-2-'`/1), ATuple

  %% guard_SUITE.erl:240
  %% Aliased:
  %%    _10
  _96 = call (`check`/2), _10, `error`

  %% Aliased:
  %%    _96
  _128 = succeeded:body _96
  br _128, ^128, ^1

128:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _13 = make_fun (`'-complex_not/1-fun-3-'`/1), ATuple

  %% guard_SUITE.erl:242
  %% Aliased:
  %%    _13
  _97 = call (`check`/2), _13, `ok`

  %% Aliased:
  %%    _97
  _129 = succeeded:body _97
  br _129, ^129, ^1

129:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _16 = make_fun (`'-complex_not/1-fun-4-'`/1), ATuple

  %% guard_SUITE.erl:245
  %% Aliased:
  %%    _16
  _98 = call (`check`/2), _16, `ok`

  %% Aliased:
  %%    _98
  _130 = succeeded:body _98
  br _130, ^130, ^1

130:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _19 = make_fun (`'-complex_not/1-fun-5-'`/1), ATuple

  %% guard_SUITE.erl:247
  %% Aliased:
  %%    _19
  _99 = call (`check`/2), _19, `error`

  %% Aliased:
  %%    _99
  _131 = succeeded:body _99
  br _131, ^131, ^1

131:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _29 = make_fun (`'-complex_not/1-fun-6-'`/1), ATuple

  %% guard_SUITE.erl:250
  %% Aliased:
  %%    _29
  _100 = call (`check`/2), _29, `error`

  %% Aliased:
  %%    _100
  _132 = succeeded:body _100
  br _132, ^132, ^1

132:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _34 = make_fun (`'-complex_not/1-fun-7-'`/1), ATuple

  %% guard_SUITE.erl:254
  %% Aliased:
  %%    _34
  _103 = call (`check`/2), _34, `error`

  %% Aliased:
  %%    _103
  _133 = succeeded:body _103
  br _133, ^133, ^1

133:
  %% guard_SUITE.erl:258
  %% Result type:
  %%    'error' | 'ok'
  _78 = call (`complex_not_1`/4), `1`, `1`, `1`, `a`

  %% Unique:
  %%    _78
  _134 = succeeded:body _78
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    _78 => 'error' | 'ok'
  %% Unique:
  %%    _78
  _228 = bif:'=:=' _78, `ok`
  br _228, ^227, ^136

227:
  %% guard_SUITE.erl:259
  %% Result type:
  %%    'error' | 'ok'
  _79 = call (`complex_not_1`/4), `1`, `1`, `1`, `[]`

  %% Unique:
  %%    _79
  _137 = succeeded:body _79
  br _137, ^137, ^1

137:
  %% Argument types:
  %%    _79 => 'error' | 'ok'
  %% Unique:
  %%    _79
  _225 = bif:'=:=' _79, `error`
  br _225, ^224, ^139

224:
  %% guard_SUITE.erl:260
  %% Result type:
  %%    'error' | 'ok'
  _80 = call (`complex_not_1`/4), `1`, `1`, `3`, `a`

  %% Unique:
  %%    _80
  _140 = succeeded:body _80
  br _140, ^140, ^1

140:
  %% Argument types:
  %%    _80 => 'error' | 'ok'
  %% Unique:
  %%    _80
  _222 = bif:'=:=' _80, `error`
  br _222, ^221, ^142

221:
  %% guard_SUITE.erl:261
  %% Result type:
  %%    'error' | 'ok'
  _81 = call (`complex_not_1`/4), `1`, `1`, `3`, `[]`

  %% Unique:
  %%    _81
  _143 = succeeded:body _81
  br _143, ^143, ^1

143:
  %% Argument types:
  %%    _81 => 'error' | 'ok'
  %% Unique:
  %%    _81
  _219 = bif:'=:=' _81, `error`
  br _219, ^218, ^145

218:
  %% guard_SUITE.erl:262
  %% Result type:
  %%    'error' | 'ok'
  _82 = call (`complex_not_1`/4), `1`, `2`, `1`, `a`

  %% Unique:
  %%    _82
  _146 = succeeded:body _82
  br _146, ^146, ^1

146:
  %% Argument types:
  %%    _82 => 'error' | 'ok'
  %% Unique:
  %%    _82
  _216 = bif:'=:=' _82, `error`
  br _216, ^215, ^148

215:
  %% guard_SUITE.erl:263
  %% Result type:
  %%    'error' | 'ok'
  _83 = call (`complex_not_1`/4), `1`, `2`, `1`, `[]`

  %% Unique:
  %%    _83
  _149 = succeeded:body _83
  br _149, ^149, ^1

149:
  %% Argument types:
  %%    _83 => 'error' | 'ok'
  %% Unique:
  %%    _83
  _213 = bif:'=:=' _83, `error`
  br _213, ^212, ^151

212:
  %% guard_SUITE.erl:264
  %% Result type:
  %%    'error' | 'ok'
  _84 = call (`complex_not_1`/4), `1`, `2`, `3`, `a`

  %% Unique:
  %%    _84
  _152 = succeeded:body _84
  br _152, ^152, ^1

152:
  %% Argument types:
  %%    _84 => 'error' | 'ok'
  %% Unique:
  %%    _84
  _210 = bif:'=:=' _84, `error`
  br _210, ^209, ^154

209:
  %% guard_SUITE.erl:265
  %% Result type:
  %%    'error' | 'ok'
  _85 = call (`complex_not_1`/4), `1`, `2`, `3`, `[]`

  %% Unique:
  %%    _85
  _155 = succeeded:body _85
  br _155, ^155, ^1

155:
  %% Argument types:
  %%    _85 => 'error' | 'ok'
  %% Unique:
  %%    _85
  _207 = bif:'=:=' _85, `error`
  br _207, ^206, ^157

206:
  %% guard_SUITE.erl:268
  %% Result type:
  %%    'error' | 'ok'
  _86 = call (`complex_not_2`/4), `1`, `2`, `0`, `x`

  %% Unique:
  %%    _86
  _158 = succeeded:body _86
  br _158, ^158, ^1

158:
  %% Argument types:
  %%    _86 => 'error' | 'ok'
  %% Unique:
  %%    _86
  _204 = bif:'=:=' _86, `ok`
  br _204, ^203, ^160

203:
  %% guard_SUITE.erl:269
  %% Result type:
  %%    'error' | 'ok'
  _87 = call (`complex_not_2`/4), `1`, `2`, `0`, `[]`

  %% Unique:
  %%    _87
  _161 = succeeded:body _87
  br _161, ^161, ^1

161:
  %% Argument types:
  %%    _87 => 'error' | 'ok'
  %% Unique:
  %%    _87
  _201 = bif:'=:=' _87, `error`
  br _201, ^200, ^163

200:
  %% guard_SUITE.erl:270
  %% Result type:
  %%    'error' | 'ok'
  _88 = call (`complex_not_2`/4), `1`, `2`, `3`, `x`

  %% Unique:
  %%    _88
  _164 = succeeded:body _88
  br _164, ^164, ^1

164:
  %% Argument types:
  %%    _88 => 'error' | 'ok'
  %% Unique:
  %%    _88
  _198 = bif:'=:=' _88, `error`
  br _198, ^197, ^166

197:
  %% guard_SUITE.erl:271
  %% Result type:
  %%    'error' | 'ok'
  _89 = call (`complex_not_2`/4), `1`, `2`, `3`, `[]`

  %% Unique:
  %%    _89
  _167 = succeeded:body _89
  br _167, ^167, ^1

167:
  %% Argument types:
  %%    _89 => 'error' | 'ok'
  %% Unique:
  %%    _89
  _195 = bif:'=:=' _89, `error`
  br _195, ^194, ^169

194:
  %% guard_SUITE.erl:272
  %% Result type:
  %%    'error' | 'ok'
  _90 = call (`complex_not_2`/4), `1`, `1`, `0`, `x`

  %% Unique:
  %%    _90
  _170 = succeeded:body _90
  br _170, ^170, ^1

170:
  %% Argument types:
  %%    _90 => 'error' | 'ok'
  %% Unique:
  %%    _90
  _192 = bif:'=:=' _90, `error`
  br _192, ^191, ^172

191:
  %% guard_SUITE.erl:273
  %% Result type:
  %%    'error' | 'ok'
  _91 = call (`complex_not_2`/4), `1`, `1`, `0`, `[]`

  %% Unique:
  %%    _91
  _173 = succeeded:body _91
  br _173, ^173, ^1

173:
  %% Argument types:
  %%    _91 => 'error' | 'ok'
  %% Unique:
  %%    _91
  _189 = bif:'=:=' _91, `error`
  br _189, ^188, ^175

188:
  %% guard_SUITE.erl:274
  %% Result type:
  %%    'error' | 'ok'
  _92 = call (`complex_not_2`/4), `1`, `1`, `3`, `x`

  %% Unique:
  %%    _92
  _176 = succeeded:body _92
  br _176, ^176, ^1

176:
  %% Argument types:
  %%    _92 => 'error' | 'ok'
  %% Unique:
  %%    _92
  _186 = bif:'=:=' _92, `error`
  br _186, ^185, ^178

185:
  %% guard_SUITE.erl:275
  %% Result type:
  %%    'error' | 'ok'
  _93 = call (`complex_not_2`/4), `1`, `1`, `3`, `[]`

  %% Unique:
  %%    _93
  _179 = succeeded:body _93
  br _179, ^179, ^1

179:
  %% Argument types:
  %%    _93 => 'error' | 'ok'
  %% Unique:
  %%    _93
  _183 = bif:'=:=' _93, `error`
  br _183, ^182, ^181

182:
  %% Result type:
  %%    'ok'
  ret `ok`

181:
  %% guard_SUITE.erl:275
  _104 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _104
  _184 = succeeded:body _104
  br ^1

178:
  %% guard_SUITE.erl:274
  _105 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _105
  _187 = succeeded:body _105
  br ^1

175:
  %% guard_SUITE.erl:273
  _106 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _106
  _190 = succeeded:body _106
  br ^1

172:
  %% guard_SUITE.erl:272
  _107 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _107
  _193 = succeeded:body _107
  br ^1

169:
  %% guard_SUITE.erl:271
  _108 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _108
  _196 = succeeded:body _108
  br ^1

166:
  %% guard_SUITE.erl:270
  _109 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _109
  _199 = succeeded:body _109
  br ^1

163:
  %% guard_SUITE.erl:269
  _110 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _110
  _202 = succeeded:body _110
  br ^1

160:
  %% guard_SUITE.erl:268
  _111 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _111
  _205 = succeeded:body _111
  br ^1

157:
  %% guard_SUITE.erl:265
  _112 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _112
  _208 = succeeded:body _112
  br ^1

154:
  %% guard_SUITE.erl:264
  _113 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _113
  _211 = succeeded:body _113
  br ^1

151:
  %% guard_SUITE.erl:263
  _114 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _114
  _214 = succeeded:body _114
  br ^1

148:
  %% guard_SUITE.erl:262
  _115 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _115
  _217 = succeeded:body _115
  br ^1

145:
  %% guard_SUITE.erl:261
  _116 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _116
  _220 = succeeded:body _116
  br ^1

142:
  %% guard_SUITE.erl:260
  _117 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _117
  _223 = succeeded:body _117
  br ^1

139:
  %% guard_SUITE.erl:259
  _118 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _118
  _226 = succeeded:body _118
  br ^1

136:
  %% guard_SUITE.erl:258
  _119 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _119
  _229 = succeeded:body _119
  br ^1

123:
  %% guard_SUITE.erl:235
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-complex_not/1-',1}}
  _120 = match_fail `function_clause`, _0

  %% Unique:
  %%    _120
  _230 = succeeded:body _120
  br ^1

1:
  _121 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _121
}

%% guard_SUITE.erl:279
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     1..2
%%    _2 =>
%%     1..3
%%    _3 =>
%%     'a' | nil()
function `guard_SUITE`:`complex_not_1`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:280
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3
  Res = call (`complex_not_1a`/4), _0, _1, _2, _3

  %% Unique:
  %%    Res
  _15 = succeeded:body Res
  br _15, ^15, ^1

15:
  %% guard_SUITE.erl:281
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3
  _10 = call (`complex_not_1b`/4), `1`, _1, _2, _3

  %% Unique:
  %%    _10
  _16 = succeeded:body _10
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _10, 
  %%    Res
  _19 = bif:'=:=' _10, Res
  br _19, ^19, ^18

19:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

18:
  %% guard_SUITE.erl:281
  %% Unique:
  %%    _10
  _12 = match_fail `badmatch`, _10

  %% Unique:
  %%    _12
  _20 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% guard_SUITE.erl:283
%% Counter = 56
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     1..2
%%    _2 =>
%%     1..3
%%    _3 =>
%%     'a' | nil()
function `guard_SUITE`:`complex_not_1a`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:284
  %% Argument types:
  %%    _1 => 1..2
  %% Unique:
  %%    _1
  _5 = bif:'<' `1`, _1
  br _5, ^30, ^48

48:
  %% guard_SUITE.erl:284
  %% Argument types:
  %%    _2 => 1..3
  %% Unique:
  %%    _2
  _7 = bif:'<' `1`, _2
  br _7, ^30, ^45

45:
  %% guard_SUITE.erl:284
  %% Argument types:
  %%    _3 => 'a' | nil()
  %% Aliased:
  %%    _3
  _8 = bif:'=:=' _3, `[]`
  br _8, ^30, ^43

30:
  %% Result type:
  %%    'error'
  ret `error`

43:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:289
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     1..2
%%    _2 =>
%%     1..3
%%    _3 =>
%%     'a' | nil()
function `guard_SUITE`:`complex_not_1b`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:290
  %% Argument types:
  %%    _1 => 1..2
  %% Unique:
  %%    _1
  _5 = bif:'>=' `1`, _1
  br _5, ^33, ^22

33:
  %% guard_SUITE.erl:290
  %% Argument types:
  %%    _2 => 1..3
  %% Unique:
  %%    _2
  _7 = bif:'>=' `1`, _2
  br _7, ^30, ^22

30:
  %% guard_SUITE.erl:290
  %% Argument types:
  %%    _3 => 'a' | nil()
  %% Aliased:
  %%    _3
  _9 = bif:'=:=' _3, `[]`
  br _9, ^22, ^27

27:
  %% Result type:
  %%    'ok'
  ret `ok`

22:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:295
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     1..2
%%    _2 =>
%%     0..3
%%    _3 =>
%%     'x' | nil()
function `guard_SUITE`:`complex_not_2`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:296
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3
  Res = call (`complex_not_2a`/4), _0, _1, _2, _3

  %% Unique:
  %%    Res
  _15 = succeeded:body Res
  br _15, ^15, ^1

15:
  %% guard_SUITE.erl:297
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _3
  _10 = call (`complex_not_2b`/4), `1`, _1, _2, _3

  %% Unique:
  %%    _10
  _16 = succeeded:body _10
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _10, 
  %%    Res
  _19 = bif:'=:=' _10, Res
  br _19, ^19, ^18

19:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

18:
  %% guard_SUITE.erl:297
  %% Unique:
  %%    _10
  _12 = match_fail `badmatch`, _10

  %% Unique:
  %%    _12
  _20 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% guard_SUITE.erl:299
%% Counter = 53
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     1..2
%%    _2 =>
%%     0..3
%%    _3 =>
%%     'x' | nil()
function `guard_SUITE`:`complex_not_2a`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:300
  %% Argument types:
  %%    _1 => 1..2
  %% Unique:
  %%    _1
  _19 = bif:'<' `1`, _1
  br _19, ^46, ^29

46:
  %% guard_SUITE.erl:300
  %% Argument types:
  %%    _2 => 0..3
  %% Unique:
  %%    _2
  _6 = bif:'<' `2`, _2
  br _6, ^29, ^43

43:
  %% guard_SUITE.erl:300
  %% Argument types:
  %%    _3 => 'x' | nil()
  %% Aliased:
  %%    _3
  _7 = bif:'=:=' _3, `[]`
  br _7, ^29, ^41

41:
  %% Result type:
  %%    'ok'
  ret `ok`

29:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:305
%% Counter = 34
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     1..2
%%    _2 =>
%%     0..3
%%    _3 =>
%%     'x' | nil()
function `guard_SUITE`:`complex_not_2b`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:306
  %% Argument types:
  %%    _1 => 1..2
  %% Unique:
  %%    _1
  _4 = bif:'<' `1`, _1
  br _4, ^31, ^21

31:
  %% guard_SUITE.erl:306
  %% Argument types:
  %%    _2 => 0..3
  %% Unique:
  %%    _2
  _6 = bif:'>=' `2`, _2
  br _6, ^32, ^21

32:
  %% guard_SUITE.erl:306
  %% Argument types:
  %%    _3 => 'x' | nil()
  %% Aliased:
  %%    _3
  _7 = bif:'=:=' _3, `[]`
  br _7, ^21, ^26

26:
  %% Result type:
  %%    'ok'
  ret `ok`

21:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:311
%% Counter = 152
%% bs_ensure_opt: true
function `guard_SUITE`:`nested_nots`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _54 = bif:is_list _0
  br _54, ^54, ^53

54:
  %% guard_SUITE.erl:312
  %% Result type:
  %%    'false' | 'true'
  _18 = call (`nested_not_1`/2), `0`, `0`

  %% Unique:
  %%    _18
  _55 = succeeded:body _18
  br _55, ^55, ^1

55:
  br _18, ^148, ^57

148:
  %% guard_SUITE.erl:313
  %% Result type:
  %%    'false' | 'true'
  _19 = call (`nested_not_1`/2), `0`, `1`

  %% Unique:
  %%    _19
  _58 = succeeded:body _19
  br _58, ^58, ^1

58:
  br _19, ^145, ^60

145:
  %% guard_SUITE.erl:314
  %% Result type:
  %%    'false' | 'true'
  _20 = call (`nested_not_1`/2), `a`, `b`

  %% Unique:
  %%    _20
  _61 = succeeded:body _20
  br _61, ^61, ^1

61:
  br _20, ^142, ^63

142:
  %% guard_SUITE.erl:315
  %% Result type:
  %%    'false' | 'true'
  _21 = call (`nested_not_1`/2), `10`, `0`

  %% Unique:
  %%    _21
  _64 = succeeded:body _21
  br _64, ^64, ^1

64:
  br _21, ^139, ^66

139:
  %% guard_SUITE.erl:316
  %% Result type:
  %%    'false' | 'true'
  _22 = call (`nested_not_1`/2), `z`, `a`

  %% Unique:
  %%    _22
  _67 = succeeded:body _22
  br _67, ^67, ^1

67:
  br _22, ^69, ^136

69:
  %% guard_SUITE.erl:316
  _45 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _45
  _138 = succeeded:body _45
  br ^1

136:
  %% guard_SUITE.erl:317
  %% Result type:
  %%    'false' | 'true'
  _23 = call (`nested_not_1`/2), `3.4`, `{anything,goes}`

  %% Unique:
  %%    _23
  _70 = succeeded:body _23
  br _70, ^70, ^1

70:
  br _23, ^72, ^133

72:
  %% guard_SUITE.erl:317
  _44 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _44
  _135 = succeeded:body _44
  br ^1

133:
  %% guard_SUITE.erl:318
  %% Result type:
  %%    'false' | 'true'
  _24 = call (`nested_not_1`/2), `3.4`, `atom`

  %% Unique:
  %%    _24
  _73 = succeeded:body _24
  br _73, ^73, ^1

73:
  br _24, ^75, ^130

75:
  %% guard_SUITE.erl:318
  _43 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _43
  _132 = succeeded:body _43
  br ^1

130:
  %% guard_SUITE.erl:319
  %% Result type:
  %%    'false' | 'true'
  _25 = call (`nested_not_1`/2), `3.0`, `[list]`

  %% Unique:
  %%    _25
  _76 = succeeded:body _25
  br _76, ^76, ^1

76:
  br _25, ^127, ^78

127:
  %% guard_SUITE.erl:321
  %% Result type:
  %%    'false' | 'true'
  _26 = call (`nested_not_2`/3), `false`, `false`, `42`

  %% Unique:
  %%    _26
  _79 = succeeded:body _26
  br _79, ^79, ^1

79:
  br _26, ^124, ^81

124:
  %% guard_SUITE.erl:322
  %% Result type:
  %%    'false' | 'true'
  _27 = call (`nested_not_2`/3), `false`, `true`, `42`

  %% Unique:
  %%    _27
  _82 = succeeded:body _27
  br _82, ^82, ^1

82:
  br _27, ^121, ^84

121:
  %% guard_SUITE.erl:323
  %% Result type:
  %%    'false' | 'true'
  _28 = call (`nested_not_2`/3), `true`, `false`, `42`

  %% Unique:
  %%    _28
  _85 = succeeded:body _28
  br _85, ^85, ^1

85:
  br _28, ^118, ^87

118:
  %% guard_SUITE.erl:324
  %% Result type:
  %%    'false' | 'true'
  _29 = call (`nested_not_2`/3), `true`, `true`, `42`

  %% Unique:
  %%    _29
  _88 = succeeded:body _29
  br _88, ^88, ^1

88:
  br _29, ^115, ^90

115:
  %% guard_SUITE.erl:325
  %% Result type:
  %%    'false' | 'true'
  _30 = call (`nested_not_2`/3), `false`, `false`, `atom`

  %% Unique:
  %%    _30
  _91 = succeeded:body _30
  br _91, ^91, ^1

91:
  br _30, ^112, ^93

112:
  %% guard_SUITE.erl:326
  %% Result type:
  %%    'false' | 'true'
  _31 = call (`nested_not_2`/3), `false`, `true`, `atom`

  %% Unique:
  %%    _31
  _94 = succeeded:body _31
  br _94, ^94, ^1

94:
  br _31, ^96, ^109

96:
  %% guard_SUITE.erl:326
  _36 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _36
  _111 = succeeded:body _36
  br ^1

109:
  %% guard_SUITE.erl:327
  %% Result type:
  %%    'false' | 'true'
  _32 = call (`nested_not_2`/3), `true`, `false`, `atom`

  %% Unique:
  %%    _32
  _97 = succeeded:body _32
  br _97, ^97, ^1

97:
  br _32, ^99, ^106

99:
  %% guard_SUITE.erl:327
  _35 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _35
  _108 = succeeded:body _35
  br ^1

106:
  %% guard_SUITE.erl:328
  %% Result type:
  %%    'false' | 'true'
  _33 = call (`nested_not_2`/3), `true`, `true`, `atom`

  %% Unique:
  %%    _33
  _100 = succeeded:body _33
  br _100, ^100, ^1

100:
  br _33, ^102, ^103

102:
  %% guard_SUITE.erl:328
  _34 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _34
  _105 = succeeded:body _34
  br ^1

103:
  %% Result type:
  %%    'ok'
  ret `ok`

93:
  %% guard_SUITE.erl:325
  _37 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _37
  _114 = succeeded:body _37
  br ^1

90:
  %% guard_SUITE.erl:324
  _38 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _38
  _117 = succeeded:body _38
  br ^1

87:
  %% guard_SUITE.erl:323
  _39 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _39
  _120 = succeeded:body _39
  br ^1

84:
  %% guard_SUITE.erl:322
  _40 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _40
  _123 = succeeded:body _40
  br ^1

81:
  %% guard_SUITE.erl:321
  _41 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _41
  _126 = succeeded:body _41
  br ^1

78:
  %% guard_SUITE.erl:319
  _42 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _42
  _129 = succeeded:body _42
  br ^1

66:
  %% guard_SUITE.erl:315
  _46 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _46
  _141 = succeeded:body _46
  br ^1

63:
  %% guard_SUITE.erl:314
  _47 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _47
  _144 = succeeded:body _47
  br ^1

60:
  %% guard_SUITE.erl:313
  _48 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _48
  _147 = succeeded:body _48
  br ^1

57:
  %% guard_SUITE.erl:312
  _49 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _49
  _150 = succeeded:body _49
  br ^1

53:
  %% guard_SUITE.erl:311
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-nested_nots/1-',1}}
  _50 = match_fail `function_clause`, _0

  %% Unique:
  %%    _50
  _151 = succeeded:body _50
  br ^1

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% guard_SUITE.erl:331
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'z' | number(0, 10)
%%    _1 =>
%%     'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
function `guard_SUITE`:`nested_not_1`(_0, _1) {
0:
  %% guard_SUITE.erl:332
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1
  Res = call (`nested_not_1a`/2), _0, _1

  %% Unique:
  %%    Res
  _11 = succeeded:body Res
  br _11, ^11, ^1

11:
  %% guard_SUITE.erl:333
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = call (`nested_not_1b`/2), _0, _1

  %% Unique:
  %%    _6
  _12 = succeeded:body _6
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    _6 => 'false' | 'true'
  %%    Res => 'false' | 'true'
  %% Unique:
  %%    _6, 
  %%    Res
  _15 = bif:'=:=' _6, Res
  br _15, ^15, ^14

15:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _6
  ret _6

14:
  %% guard_SUITE.erl:333
  %% Unique:
  %%    _6
  _8 = match_fail `badmatch`, _6

  %% Unique:
  %%    _8
  _16 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:335
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'z' | number(0, 10)
%%    _1 =>
%%     'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
function `guard_SUITE`:`nested_not_1a`(_0, _1) {
0:
  %% guard_SUITE.erl:335
  %% Argument types:
  %%    _0 => 'a' | 'z' | number(0, 10)
  %%    _1 => 'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = bif:'>' _0, _1

  %% guard_SUITE.erl:335
  %% Argument types:
  %%    _0 => 'a' | 'z' | number(0, 10)
  %% Aliased:
  %%    _0
  _3 = bif:is_atom _0

  %% guard_SUITE.erl:335
  %% Argument types:
  %%    _3 => 'false' | 'true'
  %% Unique:
  %%    _3
  _4 = bif:'not' _3

  %% guard_SUITE.erl:335
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %%    _4 => 'false' | 'true'
  %% Unique:
  %%    _2, 
  %%    _4
  _5 = bif:'or' _2, _4

  %% guard_SUITE.erl:336
  %% Argument types:
  %%    _1 => 'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
  %% Aliased:
  %%    _1
  _6 = bif:is_atom _1

  %% guard_SUITE.erl:336
  %% Argument types:
  %%    _0 => 'a' | 'z' | number(0, 10)
  %% Aliased:
  %%    _0
  _7 = bif:'==' _0, `3.4`

  %% guard_SUITE.erl:336
  %% Argument types:
  %%    _6 => 'false' | 'true'
  %%    _7 => 'false' | 'true'
  %% Unique:
  %%    _6, 
  %%    _7
  _8 = bif:'or' _6, _7

  %% guard_SUITE.erl:335
  %% Argument types:
  %%    _5 => 'false' | 'true'
  %%    _8 => 'false' | 'true'
  %% Unique:
  %%    _5, 
  %%    _8
  _9 = bif:'and' _5, _8
  br _9, ^17, ^24

17:
  %% Result type:
  %%    'false'
  ret `false`

24:
  %% Result type:
  %%    'true'
  ret `true`
}

%% guard_SUITE.erl:341
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'z' | number(0, 10)
%%    _1 =>
%%     'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
function `guard_SUITE`:`nested_not_1b`(_0, _1) {
0:
  %% guard_SUITE.erl:341
  %% Argument types:
  %%    _0 => 'a' | 'z' | number(0, 10)
  %%    _1 => 'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
  %% Aliased:
  %%    _0, 
  %%    _1
  _16 = bif:'>' _0, _1
  br _16, ^43, ^35

35:
  %% guard_SUITE.erl:341
  %% Argument types:
  %%    _0 => 'a' | 'z' | number(0, 10)
  %% Aliased:
  %%    _0
  _4 = bif:is_atom _0
  br _4, ^44, ^43

43:
  %% guard_SUITE.erl:342
  %% Argument types:
  %%    _1 => 'a' | 'atom' | 'b' | nonempty_list('list') | 0..1 | {'anything', 'goes'}
  %% Aliased:
  %%    _1
  _19 = bif:is_atom _1
  br _19, ^29, ^41

41:
  %% guard_SUITE.erl:342
  %% Argument types:
  %%    _0 => 'a' | 'z' | number(0, 10)
  %% Aliased:
  %%    _0
  _24 = bif:'==' _0, `3.4`
  br _24, ^29, ^44

29:
  %% Result type:
  %%    'false'
  ret `false`

44:
  %% Result type:
  %%    'true'
  ret `true`
}

%% guard_SUITE.erl:347
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
%%    _1 =>
%%     'false' | 'true'
%%    _2 =>
%%     'atom' | 42
function `guard_SUITE`:`nested_not_2`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:348
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  Res = call (`nested_not_2a`/4), _0, _1, _2, `true`

  %% Unique:
  %%    Res
  _13 = succeeded:body Res
  br _13, ^13, ^1

13:
  %% guard_SUITE.erl:349
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  _8 = call (`nested_not_2b`/4), _0, _1, _2, `true`

  %% Unique:
  %%    _8
  _14 = succeeded:body _8
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    _8 => 'false' | 'true'
  %%    Res => 'false' | 'true'
  %% Unique:
  %%    _8, 
  %%    Res
  _17 = bif:'=:=' _8, Res
  br _17, ^17, ^16

17:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _8
  ret _8

16:
  %% guard_SUITE.erl:349
  %% Unique:
  %%    _8
  _10 = match_fail `badmatch`, _8

  %% Unique:
  %%    _10
  _18 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% guard_SUITE.erl:351
%% Counter = 59
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
%%    _1 =>
%%     'false' | 'true'
%%    _2 =>
%%     'atom' | 42
%%    _3 =>
%%     'true'
function `guard_SUITE`:`nested_not_2a`(_0, _1, _2, _3) {
0:
  %% Argument types:
  %%    _0 => 'false' | 'true'
  %% Unique:
  %%    _0
  _5 = bif:'not' _0

  %% Argument types:
  %%    _1 => 'false' | 'true'
  %% Unique:
  %%    _1
  _6 = bif:'not' _1

  %% guard_SUITE.erl:352
  %% Argument types:
  %%    _5 => 'false' | 'true'
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _5, 
  %%    _6
  _7 = bif:'and' _5, _6

  %% guard_SUITE.erl:352
  %% Argument types:
  %%    _2 => 'atom' | 42
  %% Aliased:
  %%    _2
  _8 = bif:is_atom _2

  %% guard_SUITE.erl:352
  %% Argument types:
  %%    _8 => 'false' | 'true'
  %% Unique:
  %%    _8
  _9 = bif:'not' _8

  %% guard_SUITE.erl:352
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _9 => 'false' | 'true'
  %% Unique:
  %%    _7, 
  %%    _9
  _10 = bif:'or' _7, _9
  ret _10
}

%% guard_SUITE.erl:357
%% Counter = 55
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
%%    _1 =>
%%     'false' | 'true'
%%    _2 =>
%%     'atom' | 42
%%    _3 =>
%%     'true'
function `guard_SUITE`:`nested_not_2b`(_0, _1, _2, _3) {
0:
  br _0, ^51, ^45

45:
  br _1, ^51, ^54

51:
  %% guard_SUITE.erl:358
  %% Argument types:
  %%    _2 => 'atom' | 42
  %% Aliased:
  %%    _2
  _9 = bif:is_atom _2
  br _9, ^36, ^54

36:
  %% Result type:
  %%    'false'
  ret `false`

54:
  %% Result type:
  %%    'true'
  ret `true`
}

%% guard_SUITE.erl:363
%% Counter = 250
%% bs_ensure_opt: true
function `guard_SUITE`:`semicolon`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _200 = bif:is_list _0
  br _200, ^200, ^199

200:
  %% Result type:
  %%    'ok'
  _1 = make_fun (`'-semicolon/1-fun-0-'`/0)

  %% guard_SUITE.erl:367
  %% Aliased:
  %%    _1
  _136 = call (`check`/2), _1, `ok`

  %% Aliased:
  %%    _136
  _201 = succeeded:body _136
  br _201, ^201, ^1

201:
  %% Result type:
  %%    'ok'
  _2 = make_fun (`'-semicolon/1-fun-1-'`/0)

  %% guard_SUITE.erl:368
  %% Aliased:
  %%    _2
  _137 = call (`check`/2), _2, `ok`

  %% Aliased:
  %%    _137
  _202 = succeeded:body _137
  br _202, ^202, ^1

202:
  %% Result type:
  %%    'ok'
  _3 = make_fun (`'-semicolon/1-fun-2-'`/0)

  %% guard_SUITE.erl:369
  %% Aliased:
  %%    _3
  _138 = call (`check`/2), _3, `ok`

  %% Aliased:
  %%    _138
  _203 = succeeded:body _138
  br _203, ^203, ^1

203:
  %% Result type:
  %%    'error'
  _4 = make_fun (`'-semicolon/1-fun-3-'`/0)

  %% guard_SUITE.erl:370
  %% Aliased:
  %%    _4
  _139 = call (`check`/2), _4, `error`

  %% Aliased:
  %%    _139
  _204 = succeeded:body _139
  br _204, ^204, ^1

204:
  %% Result type:
  %%    'exit'
  _7 = make_fun (`'-semicolon/1-fun-4-'`/0)

  %% guard_SUITE.erl:371
  %% Aliased:
  %%    _7
  _143 = call (`check`/2), _7, `exit`

  %% Aliased:
  %%    _143
  _205 = succeeded:body _143
  br _205, ^205, ^1

205:
  %% guard_SUITE.erl:378
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _206 = succeeded:body True
  br _206, ^206, ^1

206:
  %% guard_SUITE.erl:379
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _207 = succeeded:body False
  br _207, ^207, ^1

207:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _12 = make_fun (`'-semicolon/1-fun-5-'`/2), False, True

  %% guard_SUITE.erl:381
  %% Aliased:
  %%    _12
  _145 = call (`check`/2), _12, `ok`

  %% Aliased:
  %%    _145
  _208 = succeeded:body _145
  br _208, ^208, ^1

208:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _15 = make_fun (`'-semicolon/1-fun-6-'`/2), False, True

  %% guard_SUITE.erl:382
  %% Aliased:
  %%    _15
  _147 = call (`check`/2), _15, `ok`

  %% Aliased:
  %%    _147
  _209 = succeeded:body _147
  br _209, ^209, ^1

209:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _18 = make_fun (`'-semicolon/1-fun-7-'`/1), True

  %% guard_SUITE.erl:383
  %% Aliased:
  %%    _18
  _149 = call (`check`/2), _18, `ok`

  %% Aliased:
  %%    _149
  _210 = succeeded:body _149
  br _210, ^210, ^1

210:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _21 = make_fun (`'-semicolon/1-fun-8-'`/1), False

  %% guard_SUITE.erl:384
  %% Aliased:
  %%    _21
  _150 = call (`check`/2), _21, `error`

  %% Aliased:
  %%    _150
  _211 = succeeded:body _150
  br _211, ^211, ^1

211:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    False
  _26 = make_fun (`'-semicolon/1-fun-9-'`/1), False

  %% guard_SUITE.erl:385
  %% Aliased:
  %%    _26
  _155 = call (`check`/2), _26, `exit`

  %% Aliased:
  %%    _155
  _212 = succeeded:body _155
  br _212, ^212, ^1

212:
  %% guard_SUITE.erl:391
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Glurf = call (`id`/1), `glurf`

  %% Aliased:
  %%    Glurf
  _213 = succeeded:body Glurf
  br _213, ^213, ^1

213:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _30 = make_fun (`'-semicolon/1-fun-10-'`/2), Glurf, True

  %% guard_SUITE.erl:394
  %% Aliased:
  %%    _30
  _157 = call (`check`/2), _30, `ok`

  %% Aliased:
  %%    _157
  _214 = succeeded:body _157
  br _214, ^214, ^1

214:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _33 = make_fun (`'-semicolon/1-fun-11-'`/2), Glurf, True

  %% guard_SUITE.erl:395
  %% Aliased:
  %%    _33
  _159 = call (`check`/2), _33, `ok`

  %% Aliased:
  %%    _159
  _215 = succeeded:body _159
  br _215, ^215, ^1

215:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf
  _36 = make_fun (`'-semicolon/1-fun-12-'`/1), Glurf

  %% guard_SUITE.erl:396
  %% Aliased:
  %%    _36
  _160 = call (`check`/2), _36, `error`

  %% Aliased:
  %%    _160
  _216 = succeeded:body _160
  br _216, ^216, ^1

216:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    Glurf
  _39 = make_fun (`'-semicolon/1-fun-13-'`/2), False, Glurf

  %% guard_SUITE.erl:397
  %% Aliased:
  %%    _39
  _161 = call (`check`/2), _39, `error`

  %% Aliased:
  %%    _161
  _217 = succeeded:body _161
  br _217, ^217, ^1

217:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    Glurf
  _42 = make_fun (`'-semicolon/1-fun-14-'`/2), False, Glurf

  %% guard_SUITE.erl:398
  %% Aliased:
  %%    _42
  _162 = call (`check`/2), _42, `error`

  %% Aliased:
  %%    _162
  _218 = succeeded:body _162
  br _218, ^218, ^1

218:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    Glurf
  _47 = make_fun (`'-semicolon/1-fun-15-'`/1), Glurf

  %% guard_SUITE.erl:399
  %% Aliased:
  %%    _47
  _167 = call (`check`/2), _47, `exit`

  %% Aliased:
  %%    _167
  _219 = succeeded:body _167
  br _219, ^219, ^1

219:
  %% guard_SUITE.erl:406
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  ATuple = call (`id`/1), `{false,true,gurka}`

  %% Aliased:
  %%    ATuple
  _220 = succeeded:body ATuple
  br _220, ^220, ^1

220:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _52 = make_fun (`'-semicolon/1-fun-16-'`/2), ATuple, True

  %% guard_SUITE.erl:408
  %% Aliased:
  %%    _52
  _171 = call (`check`/2), _52, `ok`

  %% Aliased:
  %%    _171
  _221 = succeeded:body _171
  br _221, ^221, ^1

221:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _56 = make_fun (`'-semicolon/1-fun-17-'`/2), ATuple, True

  %% guard_SUITE.erl:409
  %% Aliased:
  %%    _56
  _175 = call (`check`/2), _56, `ok`

  %% Aliased:
  %%    _175
  _222 = succeeded:body _175
  br _222, ^222, ^1

222:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _61 = make_fun (`'-semicolon/1-fun-18-'`/1), ATuple

  %% guard_SUITE.erl:410
  %% Aliased:
  %%    _61
  _180 = call (`check`/2), _61, `error`

  %% Aliased:
  %%    _180
  _223 = succeeded:body _180
  br _223, ^223, ^1

223:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _65 = make_fun (`'-semicolon/1-fun-19-'`/2), ATuple, False

  %% guard_SUITE.erl:412
  %% Aliased:
  %%    _65
  _183 = call (`check`/2), _65, `error`

  %% Aliased:
  %%    _183
  _224 = succeeded:body _183
  br _224, ^224, ^1

224:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _69 = make_fun (`'-semicolon/1-fun-20-'`/2), ATuple, False

  %% guard_SUITE.erl:414
  %% Aliased:
  %%    _69
  _186 = call (`check`/2), _69, `error`

  %% Aliased:
  %%    _186
  _225 = succeeded:body _186
  br _225, ^225, ^1

225:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    ATuple
  _76 = make_fun (`'-semicolon/1-fun-21-'`/1), ATuple

  %% guard_SUITE.erl:416
  %% Aliased:
  %%    _76
  _195 = call (`check`/2), _76, `exit`

  %% Aliased:
  %%    _195
  _226 = succeeded:body _195
  br _226, ^226, ^1

226:
  %% Result type:
  %%    'ok'
  ret `ok`

199:
  %% guard_SUITE.erl:363
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-semicolon/1-',1}}
  _196 = match_fail `function_clause`, _0

  %% Unique:
  %%    _196
  _227 = succeeded:body _196
  br ^1

1:
  _197 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _197
}

%% guard_SUITE.erl:425
%% Counter = 336
%% bs_ensure_opt: true
function `guard_SUITE`:`complex_semicolon`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _126 = bif:is_list _0
  br _126, ^126, ^125

126:
  %% guard_SUITE.erl:426
  %% Result type:
  %%    'ok'
  _49 = call (`csemi1`/2), `int`, `{blurf}`

  %% Unique:
  %%    _49
  _127 = succeeded:body _49
  br _127, ^321, ^1

321:
  %% guard_SUITE.erl:427
  %% Result type:
  %%    'ok'
  _50 = call (`csemi1`/2), `string`, `{blurf}`

  %% Unique:
  %%    _50
  _130 = succeeded:body _50
  br _130, ^318, ^1

318:
  %% guard_SUITE.erl:428
  %% Result type:
  %%    'error' | 'ok'
  _51 = call (`csemi1`/2), `float`, `[a]`

  %% Unique:
  %%    _51
  _133 = succeeded:body _51
  br _133, ^133, ^1

133:
  %% Argument types:
  %%    _51 => 'error' | 'ok'
  %% Unique:
  %%    _51
  _316 = bif:'=:=' _51, `ok`
  br _316, ^315, ^135

315:
  %% guard_SUITE.erl:429
  %% Result type:
  %%    'error'
  _52 = call (`csemi1`/2), `35`, `42`

  %% Unique:
  %%    _52
  _136 = succeeded:body _52
  br _136, ^312, ^1

312:
  %% guard_SUITE.erl:432
  %% Result type:
  %%    'error' | 'ok'
  _53 = call (`csemi2`/2), `{}`, `{a,b,c}`

  %% Unique:
  %%    _53
  _139 = succeeded:body _53
  br _139, ^139, ^1

139:
  %% Argument types:
  %%    _53 => 'error' | 'ok'
  %% Unique:
  %%    _53
  _310 = bif:'=:=' _53, `ok`
  br _310, ^309, ^141

309:
  %% guard_SUITE.erl:433
  %% Result type:
  %%    'error' | 'ok'
  _54 = call (`csemi2`/2), `{1,3.5}`, `{a,b,c}`

  %% Unique:
  %%    _54
  _142 = succeeded:body _54
  br _142, ^142, ^1

142:
  %% Argument types:
  %%    _54 => 'error' | 'ok'
  %% Unique:
  %%    _54
  _307 = bif:'=:=' _54, `ok`
  br _307, ^306, ^144

306:
  %% guard_SUITE.erl:434
  %% Result type:
  %%    'error' | 'ok'
  _55 = call (`csemi2`/2), `dum`, `{a,b,c}`

  %% Unique:
  %%    _55
  _145 = succeeded:body _55
  br _145, ^145, ^1

145:
  %% Argument types:
  %%    _55 => 'error' | 'ok'
  %% Unique:
  %%    _55
  _304 = bif:'=:=' _55, `ok`
  br _304, ^303, ^147

303:
  %% guard_SUITE.erl:436
  %% Result type:
  %%    'error' | 'ok'
  _56 = call (`csemi2`/2), `{45,-19.3}`, `{}`

  %% Unique:
  %%    _56
  _148 = succeeded:body _56
  br _148, ^148, ^1

148:
  %% Argument types:
  %%    _56 => 'error' | 'ok'
  %% Unique:
  %%    _56
  _301 = bif:'=:=' _56, `ok`
  br _301, ^300, ^150

300:
  %% guard_SUITE.erl:437
  %% Result type:
  %%    'error' | 'ok'
  _57 = call (`csemi2`/2), `{45,-19.3}`, `{dum}`

  %% Unique:
  %%    _57
  _151 = succeeded:body _57
  br _151, ^151, ^1

151:
  %% Argument types:
  %%    _57 => 'error' | 'ok'
  %% Unique:
  %%    _57
  _298 = bif:'=:=' _57, `ok`
  br _298, ^297, ^153

297:
  %% guard_SUITE.erl:438
  %% Result type:
  %%    'error' | 'ok'
  _58 = call (`csemi2`/2), `{45,-19.3}`, `{dum,dum}`

  %% Unique:
  %%    _58
  _154 = succeeded:body _58
  br _154, ^154, ^1

154:
  %% Argument types:
  %%    _58 => 'error' | 'ok'
  %% Unique:
  %%    _58
  _295 = bif:'=:=' _58, `ok`
  br _295, ^294, ^156

294:
  %% guard_SUITE.erl:440
  %% Result type:
  %%    'error' | 'ok'
  _59 = call (`csemi2`/2), `{45}`, `{dum}`

  %% Unique:
  %%    _59
  _157 = succeeded:body _59
  br _157, ^157, ^1

157:
  %% Argument types:
  %%    _59 => 'error' | 'ok'
  %% Unique:
  %%    _59
  _292 = bif:'=:=' _59, `error`
  br _292, ^291, ^159

291:
  %% guard_SUITE.erl:441
  %% Result type:
  %%    'error' | 'ok'
  _60 = call (`csemi2`/2), `[]`, `{dum}`

  %% Unique:
  %%    _60
  _160 = succeeded:body _60
  br _160, ^160, ^1

160:
  %% Argument types:
  %%    _60 => 'error' | 'ok'
  %% Unique:
  %%    _60
  _289 = bif:'=:=' _60, `error`
  br _289, ^288, ^162

288:
  %% guard_SUITE.erl:442
  %% Result type:
  %%    'error' | 'ok'
  _61 = call (`csemi2`/2), `{dum}`, `[]`

  %% Unique:
  %%    _61
  _163 = succeeded:body _61
  br _163, ^163, ^1

163:
  %% Argument types:
  %%    _61 => 'error' | 'ok'
  %% Unique:
  %%    _61
  _286 = bif:'=:=' _61, `error`
  br _286, ^285, ^165

285:
  %% guard_SUITE.erl:443
  %% Result type:
  %%    'error' | 'ok'
  _62 = call (`csemi2`/2), `[]`, `[]`

  %% Unique:
  %%    _62
  _166 = succeeded:body _62
  br _166, ^166, ^1

166:
  %% Argument types:
  %%    _62 => 'error' | 'ok'
  %% Unique:
  %%    _62
  _283 = bif:'=:=' _62, `error`
  br _283, ^282, ^168

282:
  %% Result type:
  %%    'error' | 'ok'
  _18 = make_fun (`csemi3a`/4)

  %% guard_SUITE.erl:446
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _18
  _80 = call (`csemi3`/1), _18

  %% Unique:
  %%    _80
  _169 = succeeded:body _80
  br _169, ^169, ^1

169:
  %% Result type:
  %%    'error' | 'ok'
  _19 = make_fun (`csemi3b`/4)

  %% guard_SUITE.erl:447
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _19
  _81 = call (`csemi3`/1), _19

  %% Unique:
  %%    _81
  _170 = succeeded:body _81
  br _170, ^170, ^1

170:
  %% Result type:
  %%    'error' | 'ok'
  _20 = make_fun (`csemi3c`/4)

  %% guard_SUITE.erl:448
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _20
  _82 = call (`csemi3`/1), _20

  %% Unique:
  %%    _82
  _171 = succeeded:body _82
  br _171, ^171, ^1

171:
  %% Result type:
  %%    'error' | 'ok'
  _21 = make_fun (`csemi4a`/4)

  %% guard_SUITE.erl:451
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _21
  _83 = call (`csemi4`/1), _21

  %% Unique:
  %%    _83
  _172 = succeeded:body _83
  br _172, ^172, ^1

172:
  %% Result type:
  %%    'error' | 'ok'
  _22 = make_fun (`csemi4b`/4)

  %% guard_SUITE.erl:452
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _22
  _84 = call (`csemi4`/1), _22

  %% Unique:
  %%    _84
  _173 = succeeded:body _84
  br _173, ^173, ^1

173:
  %% Result type:
  %%    'error' | 'ok'
  _23 = make_fun (`csemi4c`/4)

  %% guard_SUITE.erl:453
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _23
  _85 = call (`csemi4`/1), _23

  %% Unique:
  %%    _85
  _174 = succeeded:body _85
  br _174, ^174, ^1

174:
  %% Result type:
  %%    'error' | 'ok'
  _24 = make_fun (`csemi4d`/4)

  %% guard_SUITE.erl:454
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _24
  _86 = call (`csemi4`/1), _24

  %% Unique:
  %%    _86
  _175 = succeeded:body _86
  br _175, ^175, ^1

175:
  %% Result type:
  %%    'error' | 'ok'
  _25 = make_fun (`csemi4_orelse_a`/4)

  %% guard_SUITE.erl:457
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _25
  _87 = call (`csemi4_orelse`/1), _25

  %% Unique:
  %%    _87
  _176 = succeeded:body _87
  br _176, ^176, ^1

176:
  %% Result type:
  %%    'error' | 'ok'
  _26 = make_fun (`csemi4_orelse_b`/4)

  %% guard_SUITE.erl:458
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _26
  _88 = call (`csemi4_orelse`/1), _26

  %% Unique:
  %%    _88
  _177 = succeeded:body _88
  br _177, ^177, ^1

177:
  %% Result type:
  %%    'error' | 'ok'
  _27 = make_fun (`csemi4_orelse_c`/4)

  %% guard_SUITE.erl:459
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _27
  _89 = call (`csemi4_orelse`/1), _27

  %% Unique:
  %%    _89
  _178 = succeeded:body _89
  br _178, ^178, ^1

178:
  %% Result type:
  %%    'error' | 'ok'
  _28 = make_fun (`csemi4_orelse_d`/4)

  %% guard_SUITE.erl:460
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _28
  _90 = call (`csemi4_orelse`/1), _28

  %% Unique:
  %%    _90
  _179 = succeeded:body _90
  br _179, ^179, ^1

179:
  %% guard_SUITE.erl:463
  %% Result type:
  %%    'error' | 'ok'
  _63 = call (`csemi5`/2), `0`, `0`

  %% Unique:
  %%    _63
  _180 = succeeded:body _63
  br _180, ^180, ^1

180:
  %% Argument types:
  %%    _63 => 'error' | 'ok'
  %% Unique:
  %%    _63
  _280 = bif:'=:=' _63, `error`
  br _280, ^279, ^182

279:
  %% guard_SUITE.erl:464
  %% Result type:
  %%    'error' | 'ok'
  _64 = call (`csemi5`/2), `5`, `0`

  %% Unique:
  %%    _64
  _183 = succeeded:body _64
  br _183, ^183, ^1

183:
  %% Argument types:
  %%    _64 => 'error' | 'ok'
  %% Unique:
  %%    _64
  _277 = bif:'=:=' _64, `ok`
  br _277, ^276, ^185

276:
  %% guard_SUITE.erl:465
  %% Result type:
  %%    'error' | 'ok'
  _65 = call (`csemi5`/2), `4`, `-4`

  %% Unique:
  %%    _65
  _186 = succeeded:body _65
  br _186, ^186, ^1

186:
  %% Argument types:
  %%    _65 => 'error' | 'ok'
  %% Unique:
  %%    _65
  _274 = bif:'=:=' _65, `ok`
  br _274, ^273, ^188

273:
  %% guard_SUITE.erl:466
  %% Result type:
  %%    'error' | 'ok'
  _66 = call (`csemi5`/2), `10`, `-4`

  %% Unique:
  %%    _66
  _189 = succeeded:body _66
  br _189, ^189, ^1

189:
  %% Argument types:
  %%    _66 => 'error' | 'ok'
  %% Unique:
  %%    _66
  _271 = bif:'=:=' _66, `ok`
  br _271, ^270, ^191

270:
  %% guard_SUITE.erl:469
  %% Result type:
  %%    'error' | 'ok'
  _67 = call (`csemi6`/2), `{a}`, `0`

  %% Unique:
  %%    _67
  _192 = succeeded:body _67
  br _192, ^192, ^1

192:
  %% Argument types:
  %%    _67 => 'error' | 'ok'
  %% Unique:
  %%    _67
  _268 = bif:'=:=' _67, `error`
  br _268, ^267, ^194

267:
  %% guard_SUITE.erl:470
  %% Result type:
  %%    'error' | 'ok'
  _68 = call (`csemi6`/2), `{a,b}`, `0`

  %% Unique:
  %%    _68
  _195 = succeeded:body _68
  br _195, ^195, ^1

195:
  %% Argument types:
  %%    _68 => 'error' | 'ok'
  %% Unique:
  %%    _68
  _265 = bif:'=:=' _68, `ok`
  br _265, ^264, ^197

264:
  %% guard_SUITE.erl:471
  %% Result type:
  %%    'error' | 'ok'
  _69 = call (`csemi6`/2), `{}`, `3`

  %% Unique:
  %%    _69
  _198 = succeeded:body _69
  br _198, ^198, ^1

198:
  %% Argument types:
  %%    _69 => 'error' | 'ok'
  %% Unique:
  %%    _69
  _262 = bif:'=:=' _69, `ok`
  br _262, ^261, ^200

261:
  %% guard_SUITE.erl:472
  %% Result type:
  %%    'error' | 'ok'
  _70 = call (`csemi6`/2), `{a,b,c}`, `3`

  %% Unique:
  %%    _70
  _201 = succeeded:body _70
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    _70 => 'error' | 'ok'
  %% Unique:
  %%    _70
  _259 = bif:'=:=' _70, `ok`
  br _259, ^258, ^203

258:
  %% guard_SUITE.erl:475
  %% Result type:
  %%    'error' | 'ok'
  _71 = call (`csemi7`/3), `#{a => 1}`, `1`, `0`

  %% Unique:
  %%    _71
  _204 = succeeded:body _71
  br _204, ^204, ^1

204:
  %% Argument types:
  %%    _71 => 'error' | 'ok'
  %% Unique:
  %%    _71
  _256 = bif:'=:=' _71, `error`
  br _256, ^255, ^206

255:
  %% guard_SUITE.erl:476
  %% Result type:
  %%    'error' | 'ok'
  _72 = call (`csemi7`/3), `<<>>`, `1`, `0`

  %% Unique:
  %%    _72
  _207 = succeeded:body _72
  br _207, ^207, ^1

207:
  %% Argument types:
  %%    _72 => 'error' | 'ok'
  %% Unique:
  %%    _72
  _253 = bif:'=:=' _72, `error`
  br _253, ^252, ^209

252:
  %% guard_SUITE.erl:477
  %% Result type:
  %%    'error' | 'ok'
  _73 = call (`csemi7`/3), `#{a => 1}`, `3`, `0`

  %% Unique:
  %%    _73
  _210 = succeeded:body _73
  br _210, ^210, ^1

210:
  %% Argument types:
  %%    _73 => 'error' | 'ok'
  %% Unique:
  %%    _73
  _250 = bif:'=:=' _73, `ok`
  br _250, ^249, ^212

249:
  %% guard_SUITE.erl:478
  %% Result type:
  %%    'error' | 'ok'
  _74 = call (`csemi7`/3), `#{a => 1}`, `0`, `3`

  %% Unique:
  %%    _74
  _213 = succeeded:body _74
  br _213, ^213, ^1

213:
  %% Argument types:
  %%    _74 => 'error' | 'ok'
  %% Unique:
  %%    _74
  _247 = bif:'=:=' _74, `ok`
  br _247, ^246, ^215

246:
  %% guard_SUITE.erl:479
  %% Result type:
  %%    'error' | 'ok'
  _75 = call (`csemi7`/3), `#{a => 1}`, `3`, `3`

  %% Unique:
  %%    _75
  _216 = succeeded:body _75
  br _216, ^216, ^1

216:
  %% Argument types:
  %%    _75 => 'error' | 'ok'
  %% Unique:
  %%    _75
  _244 = bif:'=:=' _75, `ok`
  br _244, ^243, ^218

243:
  %% guard_SUITE.erl:480
  %% Result type:
  %%    'error' | 'ok'
  _76 = call (`csemi7`/3), `#{a => 1,b => 3}`, `0`, `0`

  %% Unique:
  %%    _76
  _219 = succeeded:body _76
  br _219, ^219, ^1

219:
  %% Argument types:
  %%    _76 => 'error' | 'ok'
  %% Unique:
  %%    _76
  _241 = bif:'=:=' _76, `ok`
  br _241, ^240, ^221

240:
  %% guard_SUITE.erl:483
  %% Result type:
  %%    'error' | 'ok'
  _77 = call (`csemi8`/1), `true`

  %% Unique:
  %%    _77
  _222 = succeeded:body _77
  br _222, ^222, ^1

222:
  %% Argument types:
  %%    _77 => 'error' | 'ok'
  %% Unique:
  %%    _77
  _238 = bif:'=:=' _77, `ok`
  br _238, ^237, ^224

237:
  %% guard_SUITE.erl:484
  %% Result type:
  %%    'error'
  _78 = call (`csemi8`/1), `false`

  %% Unique:
  %%    _78
  _225 = succeeded:body _78
  br _225, ^234, ^1

234:
  %% guard_SUITE.erl:485
  %% Result type:
  %%    'error'
  _79 = call (`csemi8`/1), `42`

  %% Unique:
  %%    _79
  _228 = succeeded:body _79
  br _228, ^231, ^1

231:
  %% Result type:
  %%    'ok'
  ret `ok`

224:
  %% guard_SUITE.erl:483
  _93 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _93
  _239 = succeeded:body _93
  br ^1

221:
  %% guard_SUITE.erl:480
  _94 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _94
  _242 = succeeded:body _94
  br ^1

218:
  %% guard_SUITE.erl:479
  _95 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _95
  _245 = succeeded:body _95
  br ^1

215:
  %% guard_SUITE.erl:478
  _96 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _96
  _248 = succeeded:body _96
  br ^1

212:
  %% guard_SUITE.erl:477
  _97 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _97
  _251 = succeeded:body _97
  br ^1

209:
  %% guard_SUITE.erl:476
  _98 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _98
  _254 = succeeded:body _98
  br ^1

206:
  %% guard_SUITE.erl:475
  _99 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _99
  _257 = succeeded:body _99
  br ^1

203:
  %% guard_SUITE.erl:472
  _100 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _100
  _260 = succeeded:body _100
  br ^1

200:
  %% guard_SUITE.erl:471
  _101 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _101
  _263 = succeeded:body _101
  br ^1

197:
  %% guard_SUITE.erl:470
  _102 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _102
  _266 = succeeded:body _102
  br ^1

194:
  %% guard_SUITE.erl:469
  _103 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _103
  _269 = succeeded:body _103
  br ^1

191:
  %% guard_SUITE.erl:466
  _104 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _104
  _272 = succeeded:body _104
  br ^1

188:
  %% guard_SUITE.erl:465
  _105 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _105
  _275 = succeeded:body _105
  br ^1

185:
  %% guard_SUITE.erl:464
  _106 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _106
  _278 = succeeded:body _106
  br ^1

182:
  %% guard_SUITE.erl:463
  _107 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _107
  _281 = succeeded:body _107
  br ^1

168:
  %% guard_SUITE.erl:443
  _108 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _108
  _284 = succeeded:body _108
  br ^1

165:
  %% guard_SUITE.erl:442
  _109 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _109
  _287 = succeeded:body _109
  br ^1

162:
  %% guard_SUITE.erl:441
  _110 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _110
  _290 = succeeded:body _110
  br ^1

159:
  %% guard_SUITE.erl:440
  _111 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _111
  _293 = succeeded:body _111
  br ^1

156:
  %% guard_SUITE.erl:438
  _112 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _112
  _296 = succeeded:body _112
  br ^1

153:
  %% guard_SUITE.erl:437
  _113 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _113
  _299 = succeeded:body _113
  br ^1

150:
  %% guard_SUITE.erl:436
  _114 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _114
  _302 = succeeded:body _114
  br ^1

147:
  %% guard_SUITE.erl:434
  _115 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _115
  _305 = succeeded:body _115
  br ^1

144:
  %% guard_SUITE.erl:433
  _116 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _116
  _308 = succeeded:body _116
  br ^1

141:
  %% guard_SUITE.erl:432
  _117 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _117
  _311 = succeeded:body _117
  br ^1

135:
  %% guard_SUITE.erl:428
  _119 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _119
  _317 = succeeded:body _119
  br ^1

125:
  %% guard_SUITE.erl:425
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-complex_semicolon/1-',1}}
  _122 = match_fail `function_clause`, _0

  %% Unique:
  %%    _122
  _324 = succeeded:body _122
  br ^1

1:
  _123 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _123
}

%% guard_SUITE.erl:489
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'float' | 'int' | 'string' | 35
%%    _1 =>
%%     nonempty_list('a') | 42 | {'blurf'}
function `guard_SUITE`:`csemi1`(_0, _1) {
0:
  %% guard_SUITE.erl:489
  %% Unique:
  %%    _1
  %% Anno: #{was_bif_is_list => true}
  _2 = is_nonempty_list _1
  br _2, ^26, ^22

26:
  %% Argument types:
  %%    
  switch _0, ^15, [
    { `float`, ^19 },
    { `int`, ^19 },
    { `string`, ^19 }
  ]

22:
  %% Argument types:
  %%    
  switch _0, ^15, [
    { `int`, ^19 },
    { `string`, ^19 }
  ]

19:
  %% Result type:
  %%    'ok'
  ret `ok`

15:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:493
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'dum' | nil() | {...}
%%    _1 =>
%%     nil() | {...}
function `guard_SUITE`:`csemi2`(_0, _1) {
0:
  %% guard_SUITE.erl:493
  %% Argument types:
  %%    _0 => 'dum' | nil() | {...}
  %% Unique:
  %%    _0
  _2 = bif:tuple_size _0

  %% Unique:
  %%    _2
  _23 = succeeded:guard _2
  br _23, ^33, ^38

33:
  %% guard_SUITE.erl:493
  %% Argument types:
  %%    _2 => 0..16777215
  %% Unique:
  %%    _2
  _15 = bif:'>' _2, `1`
  br _15, ^28, ^38

38:
  %% guard_SUITE.erl:493
  %% Argument types:
  %%    _1 => nil() | {...}
  %% Unique:
  %%    _1
  _4 = bif:tuple_size _1

  %% Unique:
  %%    _4
  _26 = succeeded:guard _4
  br _26, ^30, ^20

30:
  %% guard_SUITE.erl:493
  %% Argument types:
  %%    _4 => 0..16777215
  %% Unique:
  %%    _4
  _17 = bif:'>' _4, `2`
  br _17, ^28, ^20

28:
  %% Result type:
  %%    'ok'
  ret `ok`

20:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:496
%% Counter = 208
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _, _, _) -> 'error' | 'ok')
function `guard_SUITE`:`csemi3`(_0) {
0:
  %% guard_SUITE.erl:497
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _30 = call _0, `{}`, `{a,b,c}`, `[0]`, `[0]`

  %% Aliased:
  %%    _30
  _76 = succeeded:body _30
  br _76, ^76, ^1

76:
  %% Argument types:
  %%    _30 => 'error' | 'ok'
  %% Unique:
  %%    _30
  _206 = bif:'=:=' _30, `ok`
  br _206, ^205, ^78

205:
  %% guard_SUITE.erl:498
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _31 = call _0, `{1,3.5}`, `{a,b,c}`, `-1`, `-1`

  %% Aliased:
  %%    _31
  _79 = succeeded:body _31
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    _31 => 'error' | 'ok'
  %% Unique:
  %%    _31
  _203 = bif:'=:=' _31, `ok`
  br _203, ^202, ^81

202:
  %% guard_SUITE.erl:499
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _32 = call _0, `dum`, `{a,b,c}`, `0.0`, `0.0`

  %% Aliased:
  %%    _32
  _82 = succeeded:body _32
  br _82, ^82, ^1

82:
  %% Argument types:
  %%    _32 => 'error' | 'ok'
  %% Unique:
  %%    _32
  _200 = bif:'=:=' _32, `ok`
  br _200, ^199, ^84

199:
  %% guard_SUITE.erl:500
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _33 = call _0, `dum`, `{c}`, `b`, `a`

  %% Aliased:
  %%    _33
  _85 = succeeded:body _33
  br _85, ^85, ^1

85:
  %% Argument types:
  %%    _33 => 'error' | 'ok'
  %% Unique:
  %%    _33
  _197 = bif:'=:=' _33, `ok`
  br _197, ^196, ^87

196:
  %% guard_SUITE.erl:501
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _34 = call _0, `dum`, `<<1,2,3>>`, `0.0`, `0.0`

  %% Aliased:
  %%    _34
  _88 = succeeded:body _34
  br _88, ^88, ^1

88:
  %% Argument types:
  %%    _34 => 'error' | 'ok'
  %% Unique:
  %%    _34
  _194 = bif:'=:=' _34, `ok`
  br _194, ^193, ^90

193:
  %% guard_SUITE.erl:502
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _35 = call _0, `<<64,12,0,0,0,0,0,0>>`, `{a,b,c}`, `-1`, `-1`

  %% Aliased:
  %%    _35
  _91 = succeeded:body _35
  br _91, ^91, ^1

91:
  %% Argument types:
  %%    _35 => 'error' | 'ok'
  %% Unique:
  %%    _35
  _191 = bif:'=:=' _35, `ok`
  br _191, ^190, ^93

190:
  %% guard_SUITE.erl:504
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _36 = call _0, `{45,-19.3}`, `{}`, `[]`, `[]`

  %% Aliased:
  %%    _36
  _94 = succeeded:body _36
  br _94, ^94, ^1

94:
  %% Argument types:
  %%    _36 => 'error' | 'ok'
  %% Unique:
  %%    _36
  _188 = bif:'=:=' _36, `ok`
  br _188, ^187, ^96

187:
  %% guard_SUITE.erl:505
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _37 = call _0, `{45,-19.3}`, `{dum}`, `42`, `42`

  %% Aliased:
  %%    _37
  _97 = succeeded:body _37
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    _37 => 'error' | 'ok'
  %% Unique:
  %%    _37
  _185 = bif:'=:=' _37, `ok`
  br _185, ^184, ^99

184:
  %% guard_SUITE.erl:506
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _38 = call _0, `{45,-19.3}`, `{dum,dum}`, `33`, `33`

  %% Aliased:
  %%    _38
  _100 = succeeded:body _38
  br _100, ^100, ^1

100:
  %% Argument types:
  %%    _38 => 'error' | 'ok'
  %% Unique:
  %%    _38
  _182 = bif:'=:=' _38, `ok`
  br _182, ^181, ^102

181:
  %% guard_SUITE.erl:508
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _39 = call _0, `{45}`, `{dum}`, `1.0`, `0`

  %% Aliased:
  %%    _39
  _103 = succeeded:body _39
  br _103, ^103, ^1

103:
  %% Argument types:
  %%    _39 => 'error' | 'ok'
  %% Unique:
  %%    _39
  _179 = bif:'=:=' _39, `ok`
  br _179, ^178, ^105

178:
  %% guard_SUITE.erl:509
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _40 = call _0, `[a]`, `{dum}`, `1.0`, `0`

  %% Aliased:
  %%    _40
  _106 = succeeded:body _40
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    _40 => 'error' | 'ok'
  %% Unique:
  %%    _40
  _176 = bif:'=:=' _40, `ok`
  br _176, ^175, ^108

175:
  %% guard_SUITE.erl:510
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _41 = call _0, `{dum}`, `[]`, `1.0`, `0`

  %% Aliased:
  %%    _41
  _109 = succeeded:body _41
  br _109, ^109, ^1

109:
  %% Argument types:
  %%    _41 => 'error' | 'ok'
  %% Unique:
  %%    _41
  _173 = bif:'=:=' _41, `ok`
  br _173, ^172, ^111

172:
  %% guard_SUITE.erl:511
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _42 = call _0, `[]`, `[]`, `1.0`, `0`

  %% Aliased:
  %%    _42
  _112 = succeeded:body _42
  br _112, ^112, ^1

112:
  %% Argument types:
  %%    _42 => 'error' | 'ok'
  %% Unique:
  %%    _42
  _170 = bif:'=:=' _42, `ok`
  br _170, ^169, ^114

169:
  %% guard_SUITE.erl:512
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _43 = call _0, `blurf`, `{dum}`, `1.0`, `0`

  %% Aliased:
  %%    _43
  _115 = succeeded:body _43
  br _115, ^115, ^1

115:
  %% Argument types:
  %%    _43 => 'error' | 'ok'
  %% Unique:
  %%    _43
  _167 = bif:'=:=' _43, `ok`
  br _167, ^166, ^117

166:
  %% guard_SUITE.erl:513
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _44 = call _0, `{a}`, `blurf`, `1.0`, `0`

  %% Aliased:
  %%    _44
  _118 = succeeded:body _44
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    _44 => 'error' | 'ok'
  %% Unique:
  %%    _44
  _164 = bif:'=:=' _44, `ok`
  br _164, ^163, ^120

163:
  %% guard_SUITE.erl:514
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _45 = call _0, `[a]`, `[dum]`, `1.0`, `0`

  %% Aliased:
  %%    _45
  _121 = succeeded:body _45
  br _121, ^121, ^1

121:
  %% Argument types:
  %%    _45 => 'error' | 'ok'
  %% Unique:
  %%    _45
  _161 = bif:'=:=' _45, `ok`
  br _161, ^160, ^123

160:
  %% guard_SUITE.erl:515
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _46 = call _0, `{dum}`, `[]`, `1.0`, `0`

  %% Aliased:
  %%    _46
  _124 = succeeded:body _46
  br _124, ^124, ^1

124:
  %% Argument types:
  %%    _46 => 'error' | 'ok'
  %% Unique:
  %%    _46
  _158 = bif:'=:=' _46, `ok`
  br _158, ^157, ^126

157:
  %% guard_SUITE.erl:516
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _47 = call _0, `[]`, `[]`, `1.0`, `0`

  %% Aliased:
  %%    _47
  _127 = succeeded:body _47
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    _47 => 'error' | 'ok'
  %% Unique:
  %%    _47
  _155 = bif:'=:=' _47, `ok`
  br _155, ^154, ^129

154:
  %% guard_SUITE.erl:518
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _48 = call _0, `{45}`, `{dum}`, `0`, `0`

  %% Aliased:
  %%    _48
  _130 = succeeded:body _48
  br _130, ^130, ^1

130:
  %% Argument types:
  %%    _48 => 'error' | 'ok'
  %% Unique:
  %%    _48
  _152 = bif:'=:=' _48, `error`
  br _152, ^151, ^132

151:
  %% guard_SUITE.erl:519
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _49 = call _0, `[a]`, `{dum}`, `0`, `0`

  %% Aliased:
  %%    _49
  _133 = succeeded:body _49
  br _133, ^133, ^1

133:
  %% Argument types:
  %%    _49 => 'error' | 'ok'
  %% Unique:
  %%    _49
  _149 = bif:'=:=' _49, `error`
  br _149, ^148, ^135

148:
  %% guard_SUITE.erl:520
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _50 = call _0, `{dum}`, `[]`, `0`, `0`

  %% Aliased:
  %%    _50
  _136 = succeeded:body _50
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    _50 => 'error' | 'ok'
  %% Unique:
  %%    _50
  _146 = bif:'=:=' _50, `error`
  br _146, ^145, ^138

145:
  %% guard_SUITE.erl:521
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _51 = call _0, `[]`, `[]`, `0`, `0`

  %% Aliased:
  %%    _51
  _139 = succeeded:body _51
  br _139, ^139, ^1

139:
  %% Argument types:
  %%    _51 => 'error' | 'ok'
  %% Unique:
  %%    _51
  _143 = bif:'=:=' _51, `error`
  br _143, ^142, ^141

142:
  %% Result type:
  %%    'ok'
  ret `ok`

141:
  %% guard_SUITE.erl:521
  _52 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _52
  _144 = succeeded:body _52
  br ^1

138:
  %% guard_SUITE.erl:520
  _53 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _53
  _147 = succeeded:body _53
  br ^1

135:
  %% guard_SUITE.erl:519
  _54 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _54
  _150 = succeeded:body _54
  br ^1

132:
  %% guard_SUITE.erl:518
  _55 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _55
  _153 = succeeded:body _55
  br ^1

129:
  %% guard_SUITE.erl:516
  _56 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _56
  _156 = succeeded:body _56
  br ^1

126:
  %% guard_SUITE.erl:515
  _57 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _57
  _159 = succeeded:body _57
  br ^1

123:
  %% guard_SUITE.erl:514
  _58 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _58
  _162 = succeeded:body _58
  br ^1

120:
  %% guard_SUITE.erl:513
  _59 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _59
  _165 = succeeded:body _59
  br ^1

117:
  %% guard_SUITE.erl:512
  _60 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _60
  _168 = succeeded:body _60
  br ^1

114:
  %% guard_SUITE.erl:511
  _61 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _61
  _171 = succeeded:body _61
  br ^1

111:
  %% guard_SUITE.erl:510
  _62 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _62
  _174 = succeeded:body _62
  br ^1

108:
  %% guard_SUITE.erl:509
  _63 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _63
  _177 = succeeded:body _63
  br ^1

105:
  %% guard_SUITE.erl:508
  _64 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _64
  _180 = succeeded:body _64
  br ^1

102:
  %% guard_SUITE.erl:506
  _65 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _65
  _183 = succeeded:body _65
  br ^1

99:
  %% guard_SUITE.erl:505
  _66 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _66
  _186 = succeeded:body _66
  br ^1

96:
  %% guard_SUITE.erl:504
  _67 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _67
  _189 = succeeded:body _67
  br ^1

93:
  %% guard_SUITE.erl:502
  _68 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _68
  _192 = succeeded:body _68
  br ^1

90:
  %% guard_SUITE.erl:501
  _69 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _69
  _195 = succeeded:body _69
  br ^1

87:
  %% guard_SUITE.erl:500
  _70 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _70
  _198 = succeeded:body _70
  br ^1

84:
  %% guard_SUITE.erl:499
  _71 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _71
  _201 = succeeded:body _71
  br ^1

81:
  %% guard_SUITE.erl:498
  _72 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _72
  _204 = succeeded:body _72
  br ^1

78:
  %% guard_SUITE.erl:497
  _73 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _73
  _207 = succeeded:body _73
  br ^1

1:
  _74 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _74
}

%% guard_SUITE.erl:525
%% Counter = 52
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi3a`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:525
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _4 = bif:'>' _2, _3
  br _4, ^37, ^50

50:
  %% guard_SUITE.erl:525
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:size _0

  %% Unique:
  %%    _5
  _31 = succeeded:guard _5
  br _31, ^43, ^48

43:
  %% guard_SUITE.erl:525
  %% Argument types:
  %%    _5 => integer()
  %% Unique:
  %%    _5
  _23 = bif:'>' _5, `1`
  br _23, ^37, ^48

48:
  %% guard_SUITE.erl:525
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _7 = bif:size _1

  %% Unique:
  %%    _7
  _34 = succeeded:guard _7
  br _34, ^40, ^28

40:
  %% guard_SUITE.erl:525
  %% Argument types:
  %%    _7 => integer()
  %% Unique:
  %%    _7
  _25 = bif:'>' _7, `2`
  br _25, ^37, ^28

37:
  %% Result type:
  %%    'ok'
  ret `ok`

28:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:528
%% Counter = 52
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi3b`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:528
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _4 = bif:size _0

  %% Unique:
  %%    _4
  _31 = succeeded:guard _4
  br _31, ^43, ^48

43:
  %% guard_SUITE.erl:528
  %% Argument types:
  %%    _4 => integer()
  %% Unique:
  %%    _4
  _23 = bif:'>' _4, `1`
  br _23, ^37, ^48

48:
  %% guard_SUITE.erl:528
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _6 = bif:'>' _2, _3
  br _6, ^37, ^49

49:
  %% guard_SUITE.erl:528
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _7 = bif:size _1

  %% Unique:
  %%    _7
  _34 = succeeded:guard _7
  br _34, ^40, ^28

40:
  %% guard_SUITE.erl:528
  %% Argument types:
  %%    _7 => integer()
  %% Unique:
  %%    _7
  _25 = bif:'>' _7, `2`
  br _25, ^37, ^28

37:
  %% Result type:
  %%    'ok'
  ret `ok`

28:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:531
%% Counter = 52
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi3c`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:531
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _4 = bif:size _0

  %% Unique:
  %%    _4
  _31 = succeeded:guard _4
  br _31, ^43, ^49

43:
  %% guard_SUITE.erl:531
  %% Argument types:
  %%    _4 => integer()
  %% Unique:
  %%    _4
  _23 = bif:'>' _4, `1`
  br _23, ^37, ^49

49:
  %% guard_SUITE.erl:531
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _6 = bif:size _1

  %% Unique:
  %%    _6
  _34 = succeeded:guard _6
  br _34, ^40, ^47

40:
  %% guard_SUITE.erl:531
  %% Argument types:
  %%    _6 => integer()
  %% Unique:
  %%    _6
  _25 = bif:'>' _6, `2`
  br _25, ^37, ^47

47:
  %% guard_SUITE.erl:531
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _8 = bif:'>' _2, _3
  br _8, ^37, ^28

37:
  %% Result type:
  %%    'ok'
  ret `ok`

28:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:535
%% Counter = 84
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _, _, _) -> 'error' | 'ok')
function `guard_SUITE`:`csemi4`(_0) {
0:
  %% guard_SUITE.erl:536
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _10 = call _0, `{a,b}`, `2`, `{c,d}`, `2`

  %% Aliased:
  %%    _10
  _30 = succeeded:body _10
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %% Unique:
  %%    _10
  _82 = bif:'=:=' _10, `ok`
  br _82, ^81, ^32

81:
  %% guard_SUITE.erl:537
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _11 = call _0, `{1,2,3}`, `0`, `[]`, `0`

  %% Aliased:
  %%    _11
  _33 = succeeded:body _11
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _11 => 'error' | 'ok'
  %% Unique:
  %%    _11
  _79 = bif:'=:=' _11, `ok`
  br _79, ^78, ^35

78:
  %% guard_SUITE.erl:538
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _12 = call _0, `{}`, `2`, `blurf`, `0`

  %% Aliased:
  %%    _12
  _36 = succeeded:body _12
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _12 => 'error' | 'ok'
  %% Unique:
  %%    _12
  _76 = bif:'=:=' _12, `ok`
  br _76, ^75, ^38

75:
  %% guard_SUITE.erl:539
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _13 = call _0, `{}`, `2`, `{1}`, `2`

  %% Aliased:
  %%    _13
  _39 = succeeded:body _13
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    _13 => 'error' | 'ok'
  %% Unique:
  %%    _13
  _73 = bif:'=:=' _13, `ok`
  br _73, ^72, ^41

72:
  %% guard_SUITE.erl:541
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _14 = call _0, `[]`, `4`, `{}`, `0`

  %% Aliased:
  %%    _14
  _42 = succeeded:body _14
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    _14 => 'error' | 'ok'
  %% Unique:
  %%    _14
  _70 = bif:'=:=' _14, `error`
  br _70, ^69, ^44

69:
  %% guard_SUITE.erl:542
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _15 = call _0, `{}`, `0`, `[a,b]`, `4`

  %% Aliased:
  %%    _15
  _45 = succeeded:body _15
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    _15 => 'error' | 'ok'
  %% Unique:
  %%    _15
  _67 = bif:'=:=' _15, `error`
  br _67, ^66, ^47

66:
  %% guard_SUITE.erl:543
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _16 = call _0, `{}`, `0`, `[a,b]`, `0`

  %% Aliased:
  %%    _16
  _48 = succeeded:body _16
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _16 => 'error' | 'ok'
  %% Unique:
  %%    _16
  _64 = bif:'=:=' _16, `error`
  br _64, ^63, ^50

63:
  %% guard_SUITE.erl:544
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _17 = call _0, `[]`, `0`, `{}`, `0`

  %% Aliased:
  %%    _17
  _51 = succeeded:body _17
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    _17 => 'error' | 'ok'
  %% Unique:
  %%    _17
  _61 = bif:'=:=' _17, `error`
  br _61, ^60, ^53

60:
  %% guard_SUITE.erl:545
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _18 = call _0, `{}`, `0`, `{}`, `0`

  %% Aliased:
  %%    _18
  _54 = succeeded:body _18
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _18 => 'error' | 'ok'
  %% Unique:
  %%    _18
  _58 = bif:'=:=' _18, `error`
  br _58, ^57, ^56

57:
  %% Result type:
  %%    'ok'
  ret `ok`

56:
  %% guard_SUITE.erl:545
  _19 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _19
  _59 = succeeded:body _19
  br ^1

53:
  %% guard_SUITE.erl:544
  _20 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _20
  _62 = succeeded:body _20
  br ^1

50:
  %% guard_SUITE.erl:543
  _21 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _21
  _65 = succeeded:body _21
  br ^1

47:
  %% guard_SUITE.erl:542
  _22 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _22
  _68 = succeeded:body _22
  br ^1

44:
  %% guard_SUITE.erl:541
  _23 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _23
  _71 = succeeded:body _23
  br ^1

41:
  %% guard_SUITE.erl:539
  _24 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _24
  _74 = succeeded:body _24
  br ^1

38:
  %% guard_SUITE.erl:538
  _25 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _25
  _77 = succeeded:body _25
  br ^1

35:
  %% guard_SUITE.erl:537
  _26 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _26
  _80 = succeeded:body _26
  br ^1

32:
  %% guard_SUITE.erl:536
  _27 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _27
  _83 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% guard_SUITE.erl:549
%% Counter = 59
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4a`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:549
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _4 = bif:tuple_size _0

  %% Unique:
  %%    _4
  _33 = succeeded:guard _4
  br _33, ^47, ^56

47:
  %% guard_SUITE.erl:549
  %% Argument types:
  %%    _4 => 0..16777215
  %% Unique:
  %%    _4
  _5 = bif:'>' _4, `1`
  br _5, ^40, ^54

54:
  %% guard_SUITE.erl:549
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _6 = bif:'>' _1, `1`
  br _6, ^40, ^56

56:
  %% guard_SUITE.erl:550
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _8 = bif:tuple_size _2

  %% Unique:
  %%    _8
  _37 = succeeded:guard _8
  br _37, ^43, ^30

43:
  %% guard_SUITE.erl:550
  %% Argument types:
  %%    _8 => 0..16777215
  %% Unique:
  %%    _8
  _9 = bif:'>' _8, `1`
  br _9, ^40, ^51

51:
  %% guard_SUITE.erl:550
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _10 = bif:'>' _3, `1`
  br _10, ^40, ^30

40:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:553
%% Counter = 59
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4b`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:553
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _4 = bif:'>' _1, `1`

  %% guard_SUITE.erl:553
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _33 = succeeded:guard _5
  br _33, ^47, ^49

47:
  %% guard_SUITE.erl:553
  %% Argument types:
  %%    _5 => 0..16777215
  %% Unique:
  %%    _5
  _6 = bif:'>' _5, `1`

  %% guard_SUITE.erl:553
  %% Argument types:
  %%    _4 => 'false' | 'true'
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _4, 
  %%    _6
  _25 = bif:'or' _4, _6
  br ^48

49:
  br ^48

48:
  %% Anno: #{boolean_phi => true}
  _7 = phi { `false`, ^49 }, { _25, ^47 }

  %% guard_SUITE.erl:554
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _8 = bif:tuple_size _2

  %% Unique:
  %%    _8
  _37 = succeeded:guard _8
  br _37, ^43, ^45

43:
  %% guard_SUITE.erl:554
  %% Argument types:
  %%    _8 => 0..16777215
  %% Unique:
  %%    _8
  _9 = bif:'>' _8, `1`

  %% guard_SUITE.erl:554
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _10 = bif:'>' _3, `1`

  %% guard_SUITE.erl:554
  %% Argument types:
  %%    _9 => 'false' | 'true'
  %%    _10 => 'false' | 'true'
  %% Unique:
  %%    _9, 
  %%    _10
  _27 = bif:'or' _9, _10
  br ^44

45:
  br ^44

44:
  %% Anno: #{boolean_phi => true}
  _11 = phi { `false`, ^45 }, { _27, ^43 }

  %% guard_SUITE.erl:553
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _11 => 'false' | 'true'
  %% Unique:
  %%    _7, 
  %%    _11
  _23 = bif:'or' _7, _11
  br _23, ^40, ^30

40:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:557
%% Counter = 59
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4c`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:557
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _4 = bif:tuple_size _0

  %% Unique:
  %%    _4
  _33 = succeeded:guard _4
  br _33, ^47, ^55

47:
  %% guard_SUITE.erl:557
  %% Argument types:
  %%    _4 => 0..16777215
  %% Unique:
  %%    _4
  _5 = bif:'>' _4, `1`
  br _5, ^40, ^53

53:
  %% guard_SUITE.erl:557
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _6 = bif:'>' _1, `1`
  br _6, ^40, ^55

55:
  %% guard_SUITE.erl:558
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _8 = bif:'>' _3, `1`

  %% guard_SUITE.erl:558
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _9 = bif:tuple_size _2

  %% Unique:
  %%    _9
  _37 = succeeded:guard _9
  br _37, ^43, ^30

43:
  %% guard_SUITE.erl:558
  %% Argument types:
  %%    _9 => 0..16777215
  %% Unique:
  %%    _9
  _10 = bif:'>' _9, `1`

  %% guard_SUITE.erl:558
  %% Argument types:
  %%    _8 => 'false' | 'true'
  %%    _10 => 'false' | 'true'
  %% Unique:
  %%    _8, 
  %%    _10
  _27 = bif:'or' _8, _10
  br _27, ^40, ^30

40:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:561
%% Counter = 59
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4d`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:561
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _4 = bif:'>' _1, `1`

  %% guard_SUITE.erl:561
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _33 = succeeded:guard _5
  br _33, ^47, ^49

47:
  %% guard_SUITE.erl:561
  %% Argument types:
  %%    _5 => 0..16777215
  %% Unique:
  %%    _5
  _6 = bif:'>' _5, `1`

  %% guard_SUITE.erl:561
  %% Argument types:
  %%    _4 => 'false' | 'true'
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _4, 
  %%    _6
  _25 = bif:'or' _4, _6
  br ^48

49:
  br ^48

48:
  %% Anno: #{boolean_phi => true}
  _7 = phi { `false`, ^49 }, { _25, ^47 }

  %% guard_SUITE.erl:562
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _8 = bif:'>' _3, `1`

  %% guard_SUITE.erl:562
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _9 = bif:tuple_size _2

  %% Unique:
  %%    _9
  _37 = succeeded:guard _9
  br _37, ^43, ^45

43:
  %% guard_SUITE.erl:562
  %% Argument types:
  %%    _9 => 0..16777215
  %% Unique:
  %%    _9
  _10 = bif:'>' _9, `1`

  %% guard_SUITE.erl:562
  %% Argument types:
  %%    _8 => 'false' | 'true'
  %%    _10 => 'false' | 'true'
  %% Unique:
  %%    _8, 
  %%    _10
  _27 = bif:'or' _8, _10
  br ^44

45:
  br ^44

44:
  %% Anno: #{boolean_phi => true}
  _11 = phi { `false`, ^45 }, { _27, ^43 }

  %% guard_SUITE.erl:561
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _11 => 'false' | 'true'
  %% Unique:
  %%    _7, 
  %%    _11
  _23 = bif:'or' _7, _11
  br _23, ^40, ^30

40:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:566
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _, _, _) -> 'error' | 'ok')
function `guard_SUITE`:`csemi4_orelse`(_0) {
0:
  %% guard_SUITE.erl:567
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _6 = call _0, `{a,b}`, `2`, `{c,d}`, `2`

  %% Aliased:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _6 => 'error' | 'ok'
  %% Unique:
  %%    _6
  _46 = bif:'=:=' _6, `ok`
  br _46, ^45, ^20

45:
  %% guard_SUITE.erl:568
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _7 = call _0, `{1,2,3}`, `0`, `[]`, `0`

  %% Aliased:
  %%    _7
  _21 = succeeded:body _7
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    _7 => 'error' | 'ok'
  %% Unique:
  %%    _7
  _43 = bif:'=:=' _7, `ok`
  br _43, ^42, ^23

42:
  %% guard_SUITE.erl:569
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _8 = call _0, `{}`, `2`, `blurf`, `0`

  %% Aliased:
  %%    _8
  _24 = succeeded:body _8
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    _8 => 'error' | 'ok'
  %% Unique:
  %%    _8
  _40 = bif:'=:=' _8, `ok`
  br _40, ^39, ^26

39:
  %% guard_SUITE.erl:570
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _9 = call _0, `{}`, `2`, `{1}`, `2`

  %% Aliased:
  %%    _9
  _27 = succeeded:body _9
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _9 => 'error' | 'ok'
  %% Unique:
  %%    _9
  _37 = bif:'=:=' _9, `ok`
  br _37, ^36, ^29

36:
  %% guard_SUITE.erl:572
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    _0 => fun((_, _, _, _) -> 'error' | 'ok')
  %% Aliased:
  %%    _0
  _10 = call _0, `[]`, `1`, `{}`, `0`

  %% Aliased:
  %%    _10
  _30 = succeeded:body _10
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %% Unique:
  %%    _10
  _34 = bif:'=:=' _10, `error`
  br _34, ^33, ^32

33:
  %% Result type:
  %%    'ok'
  ret `ok`

32:
  %% guard_SUITE.erl:572
  _11 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _11
  _35 = succeeded:body _11
  br ^1

29:
  %% guard_SUITE.erl:570
  _12 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _12
  _38 = succeeded:body _12
  br ^1

26:
  %% guard_SUITE.erl:569
  _13 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _13
  _41 = succeeded:body _13
  br ^1

23:
  %% guard_SUITE.erl:568
  _14 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _14
  _44 = succeeded:body _14
  br ^1

20:
  %% guard_SUITE.erl:567
  _15 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _15
  _47 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% guard_SUITE.erl:576
%% Counter = 77
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4_orelse_a`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:576
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _43 = succeeded:guard _5
  br _43, ^67, ^74

67:
  %% guard_SUITE.erl:576
  %% Argument types:
  %%    _5 => 0..16777215
  %% Unique:
  %%    _5
  _22 = bif:'>' _5, `1`
  br _22, ^56, ^64

64:
  %% guard_SUITE.erl:576
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _31 = bif:'>' _1, `1`
  br _31, ^56, ^74

74:
  %% guard_SUITE.erl:577
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _10 = bif:tuple_size _2

  %% Unique:
  %%    _10
  _50 = succeeded:guard _10
  br _50, ^61, ^40

61:
  %% guard_SUITE.erl:577
  %% Argument types:
  %%    _10 => 0..16777215
  %% Unique:
  %%    _10
  _24 = bif:'>' _10, `1`
  br _24, ^56, ^58

58:
  %% guard_SUITE.erl:577
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _35 = bif:'>' _3, `1`
  br _35, ^56, ^40

56:
  %% Result type:
  %%    'ok'
  ret `ok`

40:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:580
%% Counter = 77
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4_orelse_b`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:580
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _22 = bif:'>' _1, `1`
  br _22, ^56, ^66

66:
  %% guard_SUITE.erl:580
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _45 = succeeded:guard _5
  br _45, ^64, ^74

64:
  %% guard_SUITE.erl:580
  %% Argument types:
  %%    _5 => 0..16777215
  %% Unique:
  %%    _5
  _31 = bif:'>' _5, `1`
  br _31, ^56, ^74

74:
  %% guard_SUITE.erl:581
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _10 = bif:tuple_size _2

  %% Unique:
  %%    _10
  _50 = succeeded:guard _10
  br _50, ^61, ^40

61:
  %% guard_SUITE.erl:581
  %% Argument types:
  %%    _10 => 0..16777215
  %% Unique:
  %%    _10
  _24 = bif:'>' _10, `1`
  br _24, ^56, ^58

58:
  %% guard_SUITE.erl:581
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _35 = bif:'>' _3, `1`
  br _35, ^56, ^40

56:
  %% Result type:
  %%    'ok'
  ret `ok`

40:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:584
%% Counter = 77
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4_orelse_c`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:584
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _43 = succeeded:guard _5
  br _43, ^67, ^75

67:
  %% guard_SUITE.erl:584
  %% Argument types:
  %%    _5 => 0..16777215
  %% Unique:
  %%    _5
  _22 = bif:'>' _5, `1`
  br _22, ^56, ^64

64:
  %% guard_SUITE.erl:584
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _31 = bif:'>' _1, `1`
  br _31, ^56, ^75

75:
  %% guard_SUITE.erl:585
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _24 = bif:'>' _3, `1`
  br _24, ^56, ^60

60:
  %% guard_SUITE.erl:585
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _10 = bif:tuple_size _2

  %% Unique:
  %%    _10
  _52 = succeeded:guard _10
  br _52, ^58, ^40

58:
  %% guard_SUITE.erl:585
  %% Argument types:
  %%    _10 => 0..16777215
  %% Unique:
  %%    _10
  _35 = bif:'>' _10, `1`
  br _35, ^56, ^40

56:
  %% Result type:
  %%    'ok'
  ret `ok`

40:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:588
%% Counter = 59
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi4_orelse_d`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:588
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _4 = bif:'>' _1, `1`

  %% guard_SUITE.erl:588
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _5 = bif:tuple_size _0

  %% Unique:
  %%    _5
  _33 = succeeded:guard _5
  br _33, ^47, ^49

47:
  %% guard_SUITE.erl:588
  %% Argument types:
  %%    _5 => 0..16777215
  %% Unique:
  %%    _5
  _6 = bif:'>' _5, `1`

  %% guard_SUITE.erl:588
  %% Argument types:
  %%    _4 => 'false' | 'true'
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _4, 
  %%    _6
  _25 = bif:'or' _4, _6
  br ^48

49:
  br ^48

48:
  %% Anno: #{boolean_phi => true}
  _7 = phi { `false`, ^49 }, { _25, ^47 }

  %% guard_SUITE.erl:589
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _8 = bif:'>' _3, `1`

  %% guard_SUITE.erl:589
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _9 = bif:tuple_size _2

  %% Unique:
  %%    _9
  _37 = succeeded:guard _9
  br _37, ^43, ^45

43:
  %% guard_SUITE.erl:589
  %% Argument types:
  %%    _9 => 0..16777215
  %% Unique:
  %%    _9
  _10 = bif:'>' _9, `1`

  %% guard_SUITE.erl:589
  %% Argument types:
  %%    _8 => 'false' | 'true'
  %%    _10 => 'false' | 'true'
  %% Unique:
  %%    _8, 
  %%    _10
  _27 = bif:'or' _8, _10
  br ^44

45:
  br ^44

44:
  %% Anno: #{boolean_phi => true}
  _11 = phi { `false`, ^45 }, { _27, ^43 }

  %% guard_SUITE.erl:588
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _11 => 'false' | 'true'
  %% Unique:
  %%    _7, 
  %%    _11
  _23 = bif:'or' _7, _11
  br _23, ^40, ^30

40:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:592
%% Counter = 47
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..10
%%    _1 =>
%%     -4..0
function `guard_SUITE`:`csemi5`(_0, _1) {
0:
  %% guard_SUITE.erl:592
  %% Argument types:
  %%    _0 => 0..10
  %%    _1 => -4..0
  %% Unique:
  %%    _0, 
  %%    _1
  _2 = bif:'+' _0, _1

  %% guard_SUITE.erl:592
  %% Argument types:
  %%    _2 => -4..10
  %% Unique:
  %%    _2
  _17 = bif:'>' _2, `1`
  br _17, ^31, ^44

44:
  %% guard_SUITE.erl:592
  %% Argument types:
  %%    _1 => -4..0
  %% Unique:
  %%    _1
  _5 = bif:abs _1

  %% Unique:
  %%    _5
  _29 = succeeded:guard _5
  br _29, ^33, ^22

33:
  %% guard_SUITE.erl:592
  %% Argument types:
  %%    _5 => 0..4
  %% Unique:
  %%    _5
  _19 = bif:'>' _5, `2`
  br _19, ^31, ^22

31:
  %% Result type:
  %%    'ok'
  ret `ok`

22:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:595
%% Counter = 47
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {...}
%%    _1 =>
%%     0..3
function `guard_SUITE`:`csemi6`(_0, _1) {
0:
  %% guard_SUITE.erl:595
  %% Argument types:
  %%    _0 => {...}
  %% Unique:
  %%    _0
  _2 = bif:tuple_size _0

  %% guard_SUITE.erl:595
  %% Argument types:
  %%    _2 => 0..16777215
  %% Unique:
  %%    _2
  _17 = bif:'>' _2, `1`
  br _17, ^31, ^44

44:
  %% guard_SUITE.erl:595
  %% Argument types:
  %%    _1 => 0..3
  %% Unique:
  %%    _1
  _5 = bif:abs _1

  %% Unique:
  %%    _5
  _29 = succeeded:guard _5
  br _29, ^33, ^22

33:
  %% guard_SUITE.erl:595
  %% Argument types:
  %%    _5 => 0..3
  %% Unique:
  %%    _5
  _19 = bif:'>' _5, `2`
  br _19, ^31, ^22

31:
  %% Result type:
  %%    'ok'
  ret `ok`

22:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:598
%% Counter = 56
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     other()
%%    _1 =>
%%     0..3
%%    _2 =>
%%     0..3
function `guard_SUITE`:`csemi7`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _0 => other()
  %% Unique:
  %%    _0
  _30 = bif:is_map _0
  br _30, ^45, ^53

45:
  %% guard_SUITE.erl:598
  %% Unique:
  %%    _0, 
  %%    _1
  _18 = put_map `exact`, _0, `a`, _1

  %% Unique:
  %%    _18
  _31 = succeeded:guard _18
  br _31, ^43, ^53

43:
  %% guard_SUITE.erl:598
  %% Argument types:
  %%    _18 => map()
  %% Unique:
  %%    _18
  _20 = bif:'>' _18, `#{a => 1}`
  br _20, ^37, ^53

53:
  %% guard_SUITE.erl:598
  %% Argument types:
  %%    _2 => 0..3
  %% Unique:
  %%    _2
  _5 = bif:abs _2

  %% Unique:
  %%    _5
  _35 = succeeded:guard _5
  br _35, ^39, ^25

39:
  %% guard_SUITE.erl:598
  %% Argument types:
  %%    _5 => 0..3
  %% Unique:
  %%    _5
  _22 = bif:'>' _5, `2`
  br _22, ^37, ^25

37:
  %% Result type:
  %%    'ok'
  ret `ok`

25:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:601
%% Counter = 23
%% bs_ensure_opt: true
function `guard_SUITE`:`csemi8`(_0) {
0:
  %% Argument types:
  %%    
  %% Unique:
  %%    _0
  _2 = bif:'=:=' _0, `true`
  br _2, ^16, ^13

16:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:608
%% Counter = 228
%% bs_ensure_opt: true
function `guard_SUITE`:`comma`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _182 = bif:is_list _0
  br _182, ^182, ^181

182:
  %% Result type:
  %%    'error'
  _1 = make_fun (`'-comma/1-fun-0-'`/0)

  %% guard_SUITE.erl:612
  %% Aliased:
  %%    _1
  _140 = call (`check`/2), _1, `error`

  %% Aliased:
  %%    _140
  _183 = succeeded:body _140
  br _183, ^183, ^1

183:
  %% Result type:
  %%    'error'
  _2 = make_fun (`'-comma/1-fun-1-'`/0)

  %% guard_SUITE.erl:613
  %% Aliased:
  %%    _2
  _141 = call (`check`/2), _2, `error`

  %% Aliased:
  %%    _141
  _184 = succeeded:body _141
  br _184, ^184, ^1

184:
  %% Result type:
  %%    'ok'
  _3 = make_fun (`'-comma/1-fun-2-'`/0)

  %% guard_SUITE.erl:614
  %% Aliased:
  %%    _3
  _142 = call (`check`/2), _3, `ok`

  %% Aliased:
  %%    _142
  _185 = succeeded:body _142
  br _185, ^185, ^1

185:
  %% Result type:
  %%    'error'
  _4 = make_fun (`'-comma/1-fun-3-'`/0)

  %% guard_SUITE.erl:615
  %% Aliased:
  %%    _4
  _143 = call (`check`/2), _4, `error`

  %% Aliased:
  %%    _143
  _186 = succeeded:body _143
  br _186, ^186, ^1

186:
  %% Result type:
  %%    'exit'
  _7 = make_fun (`'-comma/1-fun-4-'`/0)

  %% guard_SUITE.erl:616
  %% Aliased:
  %%    _7
  _147 = call (`check`/2), _7, `exit`

  %% Aliased:
  %%    _147
  _187 = succeeded:body _147
  br _187, ^187, ^1

187:
  %% guard_SUITE.erl:627
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _188 = succeeded:body True
  br _188, ^188, ^1

188:
  %% guard_SUITE.erl:628
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _189 = succeeded:body False
  br _189, ^189, ^1

189:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _12 = make_fun (`'-comma/1-fun-5-'`/2), False, True

  %% guard_SUITE.erl:630
  %% Aliased:
  %%    _12
  _148 = call (`check`/2), _12, `error`

  %% Aliased:
  %%    _148
  _190 = succeeded:body _148
  br _190, ^190, ^1

190:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _15 = make_fun (`'-comma/1-fun-6-'`/2), False, True

  %% guard_SUITE.erl:631
  %% Aliased:
  %%    _15
  _149 = call (`check`/2), _15, `error`

  %% Aliased:
  %%    _149
  _191 = succeeded:body _149
  br _191, ^191, ^1

191:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _18 = make_fun (`'-comma/1-fun-7-'`/1), True

  %% guard_SUITE.erl:632
  %% Aliased:
  %%    _18
  _151 = call (`check`/2), _18, `ok`

  %% Aliased:
  %%    _151
  _192 = succeeded:body _151
  br _192, ^192, ^1

192:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _21 = make_fun (`'-comma/1-fun-8-'`/1), False

  %% guard_SUITE.erl:633
  %% Aliased:
  %%    _21
  _152 = call (`check`/2), _21, `error`

  %% Aliased:
  %%    _152
  _193 = succeeded:body _152
  br _193, ^193, ^1

193:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    False, 
  %%    True
  _30 = make_fun (`'-comma/1-fun-9-'`/2), False, True

  %% guard_SUITE.erl:634
  %% Aliased:
  %%    _30
  _157 = call (`check`/2), _30, `exit`

  %% Aliased:
  %%    _157
  _194 = succeeded:body _157
  br _194, ^194, ^1

194:
  %% guard_SUITE.erl:645
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Glurf = call (`id`/1), `glurf`

  %% Aliased:
  %%    Glurf
  _195 = succeeded:body Glurf
  br _195, ^195, ^1

195:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _34 = make_fun (`'-comma/1-fun-10-'`/2), Glurf, True

  %% guard_SUITE.erl:647
  %% Aliased:
  %%    _34
  _158 = call (`check`/2), _34, `error`

  %% Aliased:
  %%    _158
  _196 = succeeded:body _158
  br _196, ^196, ^1

196:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _37 = make_fun (`'-comma/1-fun-11-'`/2), Glurf, True

  %% guard_SUITE.erl:648
  %% Aliased:
  %%    _37
  _159 = call (`check`/2), _37, `error`

  %% Aliased:
  %%    _159
  _197 = succeeded:body _159
  br _197, ^197, ^1

197:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _40 = make_fun (`'-comma/1-fun-12-'`/1), True

  %% guard_SUITE.erl:649
  %% Aliased:
  %%    _40
  _161 = call (`check`/2), _40, `ok`

  %% Aliased:
  %%    _161
  _198 = succeeded:body _161
  br _198, ^198, ^1

198:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf
  _43 = make_fun (`'-comma/1-fun-13-'`/1), Glurf

  %% guard_SUITE.erl:650
  %% Aliased:
  %%    _43
  _162 = call (`check`/2), _43, `error`

  %% Aliased:
  %%    _162
  _199 = succeeded:body _162
  br _199, ^199, ^1

199:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _52 = make_fun (`'-comma/1-fun-14-'`/2), Glurf, True

  %% guard_SUITE.erl:651
  %% Aliased:
  %%    _52
  _167 = call (`check`/2), _52, `exit`

  %% Aliased:
  %%    _167
  _200 = succeeded:body _167
  br _200, ^200, ^1

200:
  %% guard_SUITE.erl:661
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  ATuple = call (`id`/1), `{a,b,c}`

  %% Aliased:
  %%    ATuple
  _201 = succeeded:body ATuple
  br _201, ^201, ^1

201:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _57 = make_fun (`'-comma/1-fun-15-'`/2), ATuple, True

  %% guard_SUITE.erl:663
  %% Aliased:
  %%    _57
  _168 = call (`check`/2), _57, `error`

  %% Aliased:
  %%    _168
  _202 = succeeded:body _168
  br _202, ^202, ^1

202:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _61 = make_fun (`'-comma/1-fun-16-'`/2), ATuple, True

  %% guard_SUITE.erl:665
  %% Aliased:
  %%    _61
  _169 = call (`check`/2), _61, `error`

  %% Aliased:
  %%    _169
  _203 = succeeded:body _169
  br _203, ^203, ^1

203:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _64 = make_fun (`'-comma/1-fun-17-'`/1), True

  %% guard_SUITE.erl:667
  %% Aliased:
  %%    _64
  _171 = call (`check`/2), _64, `ok`

  %% Aliased:
  %%    _171
  _204 = succeeded:body _171
  br _204, ^204, ^1

204:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _69 = make_fun (`'-comma/1-fun-18-'`/1), ATuple

  %% guard_SUITE.erl:668
  %% Aliased:
  %%    _69
  _172 = call (`check`/2), _69, `error`

  %% Aliased:
  %%    _172
  _205 = succeeded:body _172
  br _205, ^205, ^1

205:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _82 = make_fun (`'-comma/1-fun-19-'`/2), ATuple, True

  %% guard_SUITE.erl:670
  %% Aliased:
  %%    _82
  _177 = call (`check`/2), _82, `exit`

  %% Aliased:
  %%    _177
  _206 = succeeded:body _177
  br _206, ^206, ^1

206:
  %% Result type:
  %%    'ok'
  ret `ok`

181:
  %% guard_SUITE.erl:608
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-comma/1-',1}}
  _178 = match_fail `function_clause`, _0

  %% Unique:
  %%    _178
  _207 = succeeded:body _178
  br ^1

1:
  _179 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _179
}

%% guard_SUITE.erl:681
%% Counter = 191
%% bs_ensure_opt: true
function `guard_SUITE`:`or_guard`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _154 = bif:is_list _0
  br _154, ^154, ^153

154:
  %% guard_SUITE.erl:682
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _155 = succeeded:body True
  br _155, ^155, ^1

155:
  %% guard_SUITE.erl:683
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _156 = succeeded:body False
  br _156, ^156, ^1

156:
  %% guard_SUITE.erl:684
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Glurf = call (`id`/1), `glurf`

  %% Aliased:
  %%    Glurf
  _157 = succeeded:body Glurf
  br _157, ^157, ^1

157:
  %% Result type:
  %%    'ok'
  _4 = make_fun (`'-or_guard/1-fun-0-'`/0)

  %% guard_SUITE.erl:687
  %% Aliased:
  %%    _4
  _124 = call (`check`/2), _4, `ok`

  %% Aliased:
  %%    _124
  _158 = succeeded:body _124
  br _158, ^158, ^1

158:
  %% Result type:
  %%    'ok'
  _5 = make_fun (`'-or_guard/1-fun-1-'`/0)

  %% guard_SUITE.erl:688
  %% Aliased:
  %%    _5
  _125 = call (`check`/2), _5, `ok`

  %% Aliased:
  %%    _125
  _159 = succeeded:body _125
  br _159, ^159, ^1

159:
  %% Result type:
  %%    'ok'
  _6 = make_fun (`'-or_guard/1-fun-2-'`/0)

  %% guard_SUITE.erl:689
  %% Aliased:
  %%    _6
  _126 = call (`check`/2), _6, `ok`

  %% Aliased:
  %%    _126
  _160 = succeeded:body _126
  br _160, ^160, ^1

160:
  %% Result type:
  %%    'error'
  _7 = make_fun (`'-or_guard/1-fun-3-'`/0)

  %% guard_SUITE.erl:690
  %% Aliased:
  %%    _7
  _127 = call (`check`/2), _7, `error`

  %% Aliased:
  %%    _127
  _161 = succeeded:body _127
  br _161, ^161, ^1

161:
  %% Result type:
  %%    'error'
  _11 = make_fun (`'-or_guard/1-fun-4-'`/0)

  %% guard_SUITE.erl:692
  %% Aliased:
  %%    _11
  _128 = call (`check`/2), _11, `error`

  %% Aliased:
  %%    _128
  _162 = succeeded:body _128
  br _162, ^162, ^1

162:
  %% Result type:
  %%    'error'
  _15 = make_fun (`'-or_guard/1-fun-5-'`/0)

  %% guard_SUITE.erl:693
  %% Aliased:
  %%    _15
  _129 = call (`check`/2), _15, `error`

  %% Aliased:
  %%    _129
  _163 = succeeded:body _129
  br _163, ^163, ^1

163:
  %% Result type:
  %%    'error'
  _22 = make_fun (`'-or_guard/1-fun-6-'`/0)

  %% guard_SUITE.erl:694
  %% Aliased:
  %%    _22
  _130 = call (`check`/2), _22, `error`

  %% Aliased:
  %%    _130
  _164 = succeeded:body _130
  br _164, ^164, ^1

164:
  %% Result type:
  %%    'exit'
  _25 = make_fun (`'-or_guard/1-fun-7-'`/0)

  %% guard_SUITE.erl:696
  %% Aliased:
  %%    _25
  _134 = call (`check`/2), _25, `exit`

  %% Aliased:
  %%    _134
  _165 = succeeded:body _134
  br _165, ^165, ^1

165:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _32 = make_fun (`'-or_guard/1-fun-8-'`/2), False, True

  %% guard_SUITE.erl:703
  %% Aliased:
  %%    _32
  _136 = call (`check`/2), _32, `ok`

  %% Aliased:
  %%    _136
  _166 = succeeded:body _136
  br _166, ^166, ^1

166:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _39 = make_fun (`'-or_guard/1-fun-9-'`/2), False, True

  %% guard_SUITE.erl:704
  %% Aliased:
  %%    _39
  _138 = call (`check`/2), _39, `ok`

  %% Aliased:
  %%    _138
  _167 = succeeded:body _138
  br _167, ^167, ^1

167:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _46 = make_fun (`'-or_guard/1-fun-10-'`/1), True

  %% guard_SUITE.erl:705
  %% Aliased:
  %%    _46
  _140 = call (`check`/2), _46, `ok`

  %% Aliased:
  %%    _140
  _168 = succeeded:body _140
  br _168, ^168, ^1

168:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _53 = make_fun (`'-or_guard/1-fun-11-'`/1), False

  %% guard_SUITE.erl:706
  %% Aliased:
  %%    _53
  _141 = call (`check`/2), _53, `error`

  %% Aliased:
  %%    _141
  _169 = succeeded:body _141
  br _169, ^169, ^1

169:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _60 = make_fun (`'-or_guard/1-fun-12-'`/2), Glurf, True

  %% guard_SUITE.erl:708
  %% Aliased:
  %%    _60
  _142 = call (`check`/2), _60, `error`

  %% Aliased:
  %%    _142
  _170 = succeeded:body _142
  br _170, ^170, ^1

170:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _67 = make_fun (`'-or_guard/1-fun-13-'`/2), Glurf, True

  %% guard_SUITE.erl:709
  %% Aliased:
  %%    _67
  _143 = call (`check`/2), _67, `error`

  %% Aliased:
  %%    _143
  _171 = succeeded:body _143
  br _171, ^171, ^1

171:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf
  _74 = make_fun (`'-or_guard/1-fun-14-'`/1), Glurf

  %% guard_SUITE.erl:710
  %% Aliased:
  %%    _74
  _144 = call (`check`/2), _74, `error`

  %% Aliased:
  %%    _144
  _172 = succeeded:body _144
  br _172, ^172, ^1

172:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    False
  _83 = make_fun (`'-or_guard/1-fun-15-'`/1), False

  %% guard_SUITE.erl:712
  %% Aliased:
  %%    _83
  _149 = call (`check`/2), _83, `exit`

  %% Aliased:
  %%    _149
  _173 = succeeded:body _149
  br _173, ^173, ^1

173:
  %% Result type:
  %%    'ok'
  ret `ok`

153:
  %% guard_SUITE.erl:681
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-or_guard/1-',1}}
  _150 = match_fail `function_clause`, _0

  %% Unique:
  %%    _150
  _174 = succeeded:body _150
  br ^1

1:
  _151 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _151
}

%% guard_SUITE.erl:719
%% Counter = 192
%% bs_ensure_opt: true
function `guard_SUITE`:`more_or_guards`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _165 = bif:is_list _0
  br _165, ^165, ^164

165:
  %% guard_SUITE.erl:720
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _166 = succeeded:body True
  br _166, ^166, ^1

166:
  %% guard_SUITE.erl:721
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _167 = succeeded:body False
  br _167, ^167, ^1

167:
  %% guard_SUITE.erl:722
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  ATuple = call (`id`/1), `{false,true,gurka}`

  %% Aliased:
  %%    ATuple
  _168 = succeeded:body ATuple
  br _168, ^168, ^1

168:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _11 = make_fun (`'-more_or_guards/1-fun-0-'`/2), ATuple, False

  %% guard_SUITE.erl:724
  %% Aliased:
  %%    _11
  _150 = call (`check`/2), _11, `error`

  %% Aliased:
  %%    _150
  _169 = succeeded:body _150
  br _169, ^169, ^1

169:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _19 = make_fun (`'-more_or_guards/1-fun-1-'`/2), ATuple, False

  %% guard_SUITE.erl:729
  %% Aliased:
  %%    _19
  _151 = call (`check`/2), _19, `error`

  %% Aliased:
  %%    _151
  _170 = succeeded:body _151
  br _170, ^170, ^1

170:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _28 = make_fun (`'-more_or_guards/1-fun-2-'`/1), ATuple

  %% guard_SUITE.erl:734
  %% Aliased:
  %%    _28
  _152 = call (`check`/2), _28, `error`

  %% Aliased:
  %%    _152
  _171 = succeeded:body _152
  br _171, ^171, ^1

171:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _36 = make_fun (`'-more_or_guards/1-fun-3-'`/2), ATuple, True

  %% guard_SUITE.erl:739
  %% Aliased:
  %%    _36
  _153 = call (`check`/2), _36, `error`

  %% Aliased:
  %%    _153
  _172 = succeeded:body _153
  br _172, ^172, ^1

172:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _44 = make_fun (`'-more_or_guards/1-fun-4-'`/2), ATuple, True

  %% guard_SUITE.erl:744
  %% Aliased:
  %%    _44
  _154 = call (`check`/2), _44, `error`

  %% Aliased:
  %%    _154
  _173 = succeeded:body _154
  br _173, ^173, ^1

173:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _57 = make_fun (`'-more_or_guards/1-fun-5-'`/2), ATuple, True

  %% guard_SUITE.erl:749
  %% Aliased:
  %%    _57
  _155 = call (`check`/2), _57, `error`

  %% Aliased:
  %%    _155
  _174 = succeeded:body _155
  br _174, ^174, ^1

174:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _70 = make_fun (`'-more_or_guards/1-fun-6-'`/2), ATuple, True

  %% guard_SUITE.erl:754
  %% Aliased:
  %%    _70
  _156 = call (`check`/2), _70, `error`

  %% Aliased:
  %%    _156
  _175 = succeeded:body _156
  br _175, ^175, ^1

175:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _77 = make_fun (`'-more_or_guards/1-fun-7-'`/2), ATuple, False

  %% guard_SUITE.erl:759
  %% Aliased:
  %%    _77
  _157 = call (`check`/2), _77, `error`

  %% Aliased:
  %%    _157
  _176 = succeeded:body _157
  br _176, ^176, ^1

176:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _84 = make_fun (`'-more_or_guards/1-fun-8-'`/2), ATuple, True

  %% guard_SUITE.erl:765
  %% Aliased:
  %%    _84
  _158 = call (`check`/2), _84, `error`

  %% Aliased:
  %%    _158
  _177 = succeeded:body _158
  br _177, ^177, ^1

177:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _93 = make_fun (`'-more_or_guards/1-fun-9-'`/1), ATuple

  %% guard_SUITE.erl:771
  %% Aliased:
  %%    _93
  _159 = call (`check`/2), _93, `error`

  %% Aliased:
  %%    _159
  _178 = succeeded:body _159
  br _178, ^178, ^1

178:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _107 = make_fun (`'-more_or_guards/1-fun-10-'`/1), ATuple

  %% guard_SUITE.erl:776
  %% Aliased:
  %%    _107
  _160 = call (`check`/2), _107, `error`

  %% Aliased:
  %%    _160
  _179 = succeeded:body _160
  br _179, ^179, ^1

179:
  %% Result type:
  %%    'ok'
  ret `ok`

164:
  %% guard_SUITE.erl:719
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-more_or_guards/1-',1}}
  _161 = match_fail `function_clause`, _0

  %% Unique:
  %%    _161
  _180 = succeeded:body _161
  br ^1

1:
  _162 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _162
}

%% guard_SUITE.erl:785
%% Counter = 485
%% bs_ensure_opt: true
function `guard_SUITE`:`complex_or_guards`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _165 = bif:is_list _0
  br _165, ^165, ^164

165:
  %% guard_SUITE.erl:787
  %% Result type:
  %%    'error' | 'ok'
  _55 = call (`complex_or_1`/2), `{a,b,c,d}`, `{1,2,3}`

  %% Unique:
  %%    _55
  _166 = succeeded:body _55
  br _166, ^166, ^1

166:
  %% Argument types:
  %%    _55 => 'error' | 'ok'
  %% Unique:
  %%    _55
  _482 = bif:'=:=' _55, `ok`
  br _482, ^481, ^168

481:
  %% guard_SUITE.erl:788
  %% Result type:
  %%    'error' | 'ok'
  _56 = call (`complex_or_1`/2), `{a,b,c,d}`, `{1}`

  %% Unique:
  %%    _56
  _169 = succeeded:body _56
  br _169, ^169, ^1

169:
  %% Argument types:
  %%    _56 => 'error' | 'ok'
  %% Unique:
  %%    _56
  _479 = bif:'=:=' _56, `ok`
  br _479, ^478, ^171

478:
  %% guard_SUITE.erl:789
  %% Result type:
  %%    'error' | 'ok'
  _57 = call (`complex_or_1`/2), `{a}`, `{1,2,3}`

  %% Unique:
  %%    _57
  _172 = succeeded:body _57
  br _172, ^172, ^1

172:
  %% Argument types:
  %%    _57 => 'error' | 'ok'
  %% Unique:
  %%    _57
  _476 = bif:'=:=' _57, `ok`
  br _476, ^475, ^174

475:
  %% guard_SUITE.erl:790
  %% Result type:
  %%    'error' | 'ok'
  _58 = call (`complex_or_1`/2), `{a}`, `{1}`

  %% Unique:
  %%    _58
  _175 = succeeded:body _58
  br _175, ^175, ^1

175:
  %% Argument types:
  %%    _58 => 'error' | 'ok'
  %% Unique:
  %%    _58
  _473 = bif:'=:=' _58, `error`
  br _473, ^472, ^177

472:
  %% guard_SUITE.erl:792
  %% Result type:
  %%    'error'
  _59 = call (`complex_or_1`/2), `1`, `2`

  %% Unique:
  %%    _59
  _178 = succeeded:body _59
  br _178, ^469, ^1

469:
  %% guard_SUITE.erl:793
  %% Result type:
  %%    'error'
  _60 = call (`complex_or_1`/2), `[]`, `{a,b,c,d}`

  %% Unique:
  %%    _60
  _181 = succeeded:body _60
  br _181, ^466, ^1

466:
  %% guard_SUITE.erl:794
  %% Result type:
  %%    'error'
  _61 = call (`complex_or_1`/2), `{a,b,c,d}`, `[]`

  %% Unique:
  %%    _61
  _184 = succeeded:body _61
  br _184, ^463, ^1

463:
  %% guard_SUITE.erl:798
  %% Result type:
  %%    'error' | 'ok'
  _62 = call (`complex_or_2`/1), `{true,{}}`

  %% Unique:
  %%    _62
  _187 = succeeded:body _62
  br _187, ^187, ^1

187:
  %% Argument types:
  %%    _62 => 'error' | 'ok'
  %% Unique:
  %%    _62
  _461 = bif:'=:=' _62, `ok`
  br _461, ^460, ^189

460:
  %% guard_SUITE.erl:799
  %% Result type:
  %%    'error' | 'ok'
  _63 = call (`complex_or_2`/1), `{false,{a}}`

  %% Unique:
  %%    _63
  _190 = succeeded:body _63
  br _190, ^190, ^1

190:
  %% Argument types:
  %%    _63 => 'error' | 'ok'
  %% Unique:
  %%    _63
  _458 = bif:'=:=' _63, `ok`
  br _458, ^457, ^192

457:
  %% guard_SUITE.erl:800
  %% Result type:
  %%    'error' | 'ok'
  _64 = call (`complex_or_2`/1), `{false,{a,b,c}}`

  %% Unique:
  %%    _64
  _193 = succeeded:body _64
  br _193, ^193, ^1

193:
  %% Argument types:
  %%    _64 => 'error' | 'ok'
  %% Unique:
  %%    _64
  _455 = bif:'=:=' _64, `ok`
  br _455, ^454, ^195

454:
  %% guard_SUITE.erl:801
  %% Result type:
  %%    'error' | 'ok'
  _65 = call (`complex_or_2`/1), `{true,{a,b,c,d}}`

  %% Unique:
  %%    _65
  _196 = succeeded:body _65
  br _196, ^196, ^1

196:
  %% Argument types:
  %%    _65 => 'error' | 'ok'
  %% Unique:
  %%    _65
  _452 = bif:'=:=' _65, `ok`
  br _452, ^451, ^198

451:
  %% guard_SUITE.erl:803
  %% Result type:
  %%    'error' | 'ok'
  _66 = call (`complex_or_2`/1), `{blurf,{a,b,c}}`

  %% Unique:
  %%    _66
  _199 = succeeded:body _66
  br _199, ^199, ^1

199:
  %% Argument types:
  %%    _66 => 'error' | 'ok'
  %% Unique:
  %%    _66
  _449 = bif:'=:=' _66, `error`
  br _449, ^448, ^201

448:
  %% guard_SUITE.erl:805
  %% Result type:
  %%    'error'
  _67 = call (`complex_or_2`/1), `{true}`

  %% Unique:
  %%    _67
  _202 = succeeded:body _67
  br _202, ^445, ^1

445:
  %% guard_SUITE.erl:806
  %% Result type:
  %%    'error' | 'ok'
  _68 = call (`complex_or_2`/1), `{true,no_tuple}`

  %% Unique:
  %%    _68
  _205 = succeeded:body _68
  br _205, ^205, ^1

205:
  %% Argument types:
  %%    _68 => 'error' | 'ok'
  %% Unique:
  %%    _68
  _443 = bif:'=:=' _68, `error`
  br _443, ^442, ^207

442:
  %% guard_SUITE.erl:807
  %% Result type:
  %%    'error' | 'ok'
  _69 = call (`complex_or_2`/1), `{true,[]}`

  %% Unique:
  %%    _69
  _208 = succeeded:body _69
  br _208, ^208, ^1

208:
  %% Argument types:
  %%    _69 => 'error' | 'ok'
  %% Unique:
  %%    _69
  _440 = bif:'=:=' _69, `error`
  br _440, ^439, ^210

439:
  %% guard_SUITE.erl:810
  %% Result type:
  %%    'error' | 'ok'
  _70 = call (`complex_or_3`/2), `{true}`, `{}`

  %% Unique:
  %%    _70
  _211 = succeeded:body _70
  br _211, ^211, ^1

211:
  %% Argument types:
  %%    _70 => 'error' | 'ok'
  %% Unique:
  %%    _70
  _437 = bif:'=:=' _70, `ok`
  br _437, ^436, ^213

436:
  %% guard_SUITE.erl:811
  %% Result type:
  %%    'error' | 'ok'
  _71 = call (`complex_or_3`/2), `{false}`, `{a}`

  %% Unique:
  %%    _71
  _214 = succeeded:body _71
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _71 => 'error' | 'ok'
  %% Unique:
  %%    _71
  _434 = bif:'=:=' _71, `ok`
  br _434, ^433, ^216

433:
  %% guard_SUITE.erl:812
  %% Result type:
  %%    'error' | 'ok'
  _72 = call (`complex_or_3`/2), `{false}`, `{a,b,c}`

  %% Unique:
  %%    _72
  _217 = succeeded:body _72
  br _217, ^217, ^1

217:
  %% Argument types:
  %%    _72 => 'error' | 'ok'
  %% Unique:
  %%    _72
  _431 = bif:'=:=' _72, `ok`
  br _431, ^430, ^219

430:
  %% guard_SUITE.erl:813
  %% Result type:
  %%    'error' | 'ok'
  _73 = call (`complex_or_3`/2), `{true}`, `{a,b,c,d}`

  %% Unique:
  %%    _73
  _220 = succeeded:body _73
  br _220, ^220, ^1

220:
  %% Argument types:
  %%    _73 => 'error' | 'ok'
  %% Unique:
  %%    _73
  _428 = bif:'=:=' _73, `ok`
  br _428, ^427, ^222

427:
  %% guard_SUITE.erl:814
  %% Result type:
  %%    'error' | 'ok'
  _74 = call (`complex_or_3`/2), `{false}`, `<<1,2,3>>`

  %% Unique:
  %%    _74
  _223 = succeeded:body _74
  br _223, ^223, ^1

223:
  %% Argument types:
  %%    _74 => 'error' | 'ok'
  %% Unique:
  %%    _74
  _425 = bif:'=:=' _74, `ok`
  br _425, ^424, ^225

424:
  %% guard_SUITE.erl:815
  %% Result type:
  %%    'error' | 'ok'
  _75 = call (`complex_or_3`/2), `{true}`, `<<1,2,3,4>>`

  %% Unique:
  %%    _75
  _226 = succeeded:body _75
  br _226, ^226, ^1

226:
  %% Argument types:
  %%    _75 => 'error' | 'ok'
  %% Unique:
  %%    _75
  _422 = bif:'=:=' _75, `ok`
  br _422, ^421, ^228

421:
  %% guard_SUITE.erl:817
  %% Result type:
  %%    'error'
  _76 = call (`complex_or_3`/2), `blurf`, `{a,b,c}`

  %% Unique:
  %%    _76
  _229 = succeeded:body _76
  br _229, ^418, ^1

418:
  %% guard_SUITE.erl:819
  %% Result type:
  %%    'error' | 'ok'
  _77 = call (`complex_or_3`/2), `{false}`, `<<1,2,3,4>>`

  %% Unique:
  %%    _77
  _232 = succeeded:body _77
  br _232, ^232, ^1

232:
  %% Argument types:
  %%    _77 => 'error' | 'ok'
  %% Unique:
  %%    _77
  _416 = bif:'=:=' _77, `error`
  br _416, ^415, ^234

415:
  %% guard_SUITE.erl:820
  %% Result type:
  %%    'error'
  _78 = call (`complex_or_3`/2), `[]`, `<<1,2>>`

  %% Unique:
  %%    _78
  _235 = succeeded:body _78
  br _235, ^412, ^1

412:
  %% guard_SUITE.erl:821
  %% Result type:
  %%    'error'
  _79 = call (`complex_or_3`/2), `{true}`, `45`

  %% Unique:
  %%    _79
  _238 = succeeded:body _79
  br _238, ^409, ^1

409:
  %% guard_SUITE.erl:822
  %% Result type:
  %%    'error'
  _80 = call (`complex_or_3`/2), `<<>>`, `<<>>`

  %% Unique:
  %%    _80
  _241 = succeeded:body _80
  br _241, ^406, ^1

406:
  %% guard_SUITE.erl:825
  %% Result type:
  %%    'error' | 'ok'
  _81 = call (`complex_or_4`/2), `<<1,2,3>>`, `{true}`

  %% Unique:
  %%    _81
  _244 = succeeded:body _81
  br _244, ^244, ^1

244:
  %% Argument types:
  %%    _81 => 'error' | 'ok'
  %% Unique:
  %%    _81
  _404 = bif:'=:=' _81, `ok`
  br _404, ^403, ^246

403:
  %% guard_SUITE.erl:826
  %% Result type:
  %%    'error' | 'ok'
  _82 = call (`complex_or_4`/2), `<<1,2,3>>`, `{false}`

  %% Unique:
  %%    _82
  _247 = succeeded:body _82
  br _247, ^247, ^1

247:
  %% Argument types:
  %%    _82 => 'error' | 'ok'
  %% Unique:
  %%    _82
  _401 = bif:'=:=' _82, `ok`
  br _401, ^400, ^249

400:
  %% guard_SUITE.erl:827
  %% Result type:
  %%    'error' | 'ok'
  _83 = call (`complex_or_4`/2), `<<1,2,3>>`, `{true}`

  %% Unique:
  %%    _83
  _250 = succeeded:body _83
  br _250, ^250, ^1

250:
  %% Argument types:
  %%    _83 => 'error' | 'ok'
  %% Unique:
  %%    _83
  _398 = bif:'=:=' _83, `ok`
  br _398, ^397, ^252

397:
  %% guard_SUITE.erl:828
  %% Result type:
  %%    'error' | 'ok'
  _84 = call (`complex_or_4`/2), `{1,2,3}`, `{true}`

  %% Unique:
  %%    _84
  _253 = succeeded:body _84
  br _253, ^253, ^1

253:
  %% Argument types:
  %%    _84 => 'error' | 'ok'
  %% Unique:
  %%    _84
  _395 = bif:'=:=' _84, `ok`
  br _395, ^394, ^255

394:
  %% guard_SUITE.erl:829
  %% Result type:
  %%    'error' | 'ok'
  _85 = call (`complex_or_4`/2), `{1,2,3,4}`, `{false}`

  %% Unique:
  %%    _85
  _256 = succeeded:body _85
  br _256, ^256, ^1

256:
  %% Argument types:
  %%    _85 => 'error' | 'ok'
  %% Unique:
  %%    _85
  _392 = bif:'=:=' _85, `error`
  br _392, ^391, ^258

391:
  %% guard_SUITE.erl:831
  %% Result type:
  %%    'error'
  _86 = call (`complex_or_4`/2), `<<1,2,3,4>>`, `[]`

  %% Unique:
  %%    _86
  _259 = succeeded:body _86
  br _259, ^388, ^1

388:
  %% guard_SUITE.erl:832
  %% Result type:
  %%    'error'
  _87 = call (`complex_or_4`/2), `[]`, `{true}`

  %% Unique:
  %%    _87
  _262 = succeeded:body _87
  br _262, ^385, ^1

385:
  %% guard_SUITE.erl:835
  %% Result type:
  %%    'error' | 'ok'
  _88 = call (`complex_or_5`/2), `<<1>>`, `{false}`

  %% Unique:
  %%    _88
  _265 = succeeded:body _88
  br _265, ^265, ^1

265:
  %% Argument types:
  %%    _88 => 'error' | 'ok'
  %% Unique:
  %%    _88
  _383 = bif:'=:=' _88, `ok`
  br _383, ^382, ^267

382:
  %% guard_SUITE.erl:836
  %% Result type:
  %%    'error' | 'ok'
  _89 = call (`complex_or_5`/2), `<<1,2,3>>`, `{true}`

  %% Unique:
  %%    _89
  _268 = succeeded:body _89
  br _268, ^268, ^1

268:
  %% Argument types:
  %%    _89 => 'error' | 'ok'
  %% Unique:
  %%    _89
  _380 = bif:'=:=' _89, `ok`
  br _380, ^379, ^270

379:
  %% guard_SUITE.erl:837
  %% Result type:
  %%    'error' | 'ok'
  _90 = call (`complex_or_5`/2), `<<1,2,3,4>>`, `{false}`

  %% Unique:
  %%    _90
  _271 = succeeded:body _90
  br _271, ^271, ^1

271:
  %% Argument types:
  %%    _90 => 'error' | 'ok'
  %% Unique:
  %%    _90
  _377 = bif:'=:=' _90, `ok`
  br _377, ^376, ^273

376:
  %% guard_SUITE.erl:838
  %% Result type:
  %%    'error' | 'ok'
  _91 = call (`complex_or_5`/2), `{1,2,3}`, `{false}`

  %% Unique:
  %%    _91
  _274 = succeeded:body _91
  br _274, ^274, ^1

274:
  %% Argument types:
  %%    _91 => 'error' | 'ok'
  %% Unique:
  %%    _91
  _374 = bif:'=:=' _91, `ok`
  br _374, ^373, ^276

373:
  %% guard_SUITE.erl:839
  %% Result type:
  %%    'error' | 'ok'
  _92 = call (`complex_or_5`/2), `{1,2,3,4}`, `{false}`

  %% Unique:
  %%    _92
  _277 = succeeded:body _92
  br _277, ^277, ^1

277:
  %% Argument types:
  %%    _92 => 'error' | 'ok'
  %% Unique:
  %%    _92
  _371 = bif:'=:=' _92, `ok`
  br _371, ^370, ^279

370:
  %% guard_SUITE.erl:841
  %% Result type:
  %%    'error'
  _93 = call (`complex_or_5`/2), `blurf`, `{false}`

  %% Unique:
  %%    _93
  _280 = succeeded:body _93
  br _280, ^367, ^1

367:
  %% guard_SUITE.erl:842
  %% Result type:
  %%    'error'
  _94 = call (`complex_or_5`/2), `<<1>>`, `klarf`

  %% Unique:
  %%    _94
  _283 = succeeded:body _94
  br _283, ^364, ^1

364:
  %% guard_SUITE.erl:843
  %% Result type:
  %%    'error'
  _95 = call (`complex_or_5`/2), `blurf`, `klarf`

  %% Unique:
  %%    _95
  _286 = succeeded:body _95
  br _286, ^361, ^1

361:
  %% guard_SUITE.erl:846
  %% Result type:
  %%    'error' | 'ok'
  _96 = call (`complex_or_6`/2), `{true,true}`, `{1,2,3,4}`

  %% Unique:
  %%    _96
  _289 = succeeded:body _96
  br _289, ^289, ^1

289:
  %% Argument types:
  %%    _96 => 'error' | 'ok'
  %% Unique:
  %%    _96
  _359 = bif:'=:=' _96, `ok`
  br _359, ^358, ^291

358:
  %% guard_SUITE.erl:847
  %% Result type:
  %%    'error' | 'ok'
  _97 = call (`complex_or_6`/2), `{true,true}`, `<<1,2,3,4>>`

  %% Unique:
  %%    _97
  _292 = succeeded:body _97
  br _292, ^292, ^1

292:
  %% Argument types:
  %%    _97 => 'error' | 'ok'
  %% Unique:
  %%    _97
  _356 = bif:'=:=' _97, `ok`
  br _356, ^355, ^294

355:
  %% guard_SUITE.erl:848
  %% Result type:
  %%    'error' | 'ok'
  _98 = call (`complex_or_6`/2), `{false,false}`, `<<1,2,3,4>>`

  %% Unique:
  %%    _98
  _295 = succeeded:body _98
  br _295, ^295, ^1

295:
  %% Argument types:
  %%    _98 => 'error' | 'ok'
  %% Unique:
  %%    _98
  _353 = bif:'=:=' _98, `ok`
  br _353, ^352, ^297

352:
  %% guard_SUITE.erl:849
  %% Result type:
  %%    'error' | 'ok'
  _99 = call (`complex_or_6`/2), `{false,true}`, `<<1>>`

  %% Unique:
  %%    _99
  _298 = succeeded:body _99
  br _298, ^298, ^1

298:
  %% Argument types:
  %%    _99 => 'error' | 'ok'
  %% Unique:
  %%    _99
  _350 = bif:'=:=' _99, `ok`
  br _350, ^349, ^300

349:
  %% guard_SUITE.erl:850
  %% Result type:
  %%    'error' | 'ok'
  _100 = call (`complex_or_6`/2), `{true,false}`, `{1}`

  %% Unique:
  %%    _100
  _301 = succeeded:body _100
  br _301, ^301, ^1

301:
  %% Argument types:
  %%    _100 => 'error' | 'ok'
  %% Unique:
  %%    _100
  _347 = bif:'=:=' _100, `ok`
  br _347, ^346, ^303

346:
  %% guard_SUITE.erl:851
  %% Result type:
  %%    'error' | 'ok'
  _101 = call (`complex_or_6`/2), `{true,true}`, `{1}`

  %% Unique:
  %%    _101
  _304 = succeeded:body _101
  br _304, ^304, ^1

304:
  %% Argument types:
  %%    _101 => 'error' | 'ok'
  %% Unique:
  %%    _101
  _344 = bif:'=:=' _101, `ok`
  br _344, ^343, ^306

343:
  %% guard_SUITE.erl:853
  %% Result type:
  %%    'error' | 'ok'
  _102 = call (`complex_or_6`/2), `{false,false}`, `{1}`

  %% Unique:
  %%    _102
  _307 = succeeded:body _102
  br _307, ^307, ^1

307:
  %% Argument types:
  %%    _102 => 'error' | 'ok'
  %% Unique:
  %%    _102
  _341 = bif:'=:=' _102, `error`
  br _341, ^340, ^309

340:
  %% guard_SUITE.erl:855
  %% Result type:
  %%    'error'
  _103 = call (`complex_or_6`/2), `{true}`, `{1,2,3,4}`

  %% Unique:
  %%    _103
  _310 = succeeded:body _103
  br _310, ^337, ^1

337:
  %% guard_SUITE.erl:856
  %% Result type:
  %%    'error'
  _104 = call (`complex_or_6`/2), `{}`, `{1,2,3,4}`

  %% Unique:
  %%    _104
  _313 = succeeded:body _104
  br _313, ^334, ^1

334:
  %% guard_SUITE.erl:857
  %% Result type:
  %%    'error'
  _105 = call (`complex_or_6`/2), `[]`, `{1,2,3,4}`

  %% Unique:
  %%    _105
  _316 = succeeded:body _105
  br _316, ^331, ^1

331:
  %% guard_SUITE.erl:858
  %% Result type:
  %%    'error'
  _106 = call (`complex_or_6`/2), `[]`, `{1,2,3,4}`

  %% Unique:
  %%    _106
  _319 = succeeded:body _106
  br _319, ^328, ^1

328:
  %% guard_SUITE.erl:859
  %% Result type:
  %%    'error'
  _107 = call (`complex_or_6`/2), `{true,false}`, `klurf`

  %% Unique:
  %%    _107
  _322 = succeeded:body _107
  br _322, ^325, ^1

325:
  %% Result type:
  %%    'ok'
  ret `ok`

309:
  %% guard_SUITE.erl:853
  _113 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _113
  _342 = succeeded:body _113
  br ^1

306:
  %% guard_SUITE.erl:851
  _114 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _114
  _345 = succeeded:body _114
  br ^1

303:
  %% guard_SUITE.erl:850
  _115 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _115
  _348 = succeeded:body _115
  br ^1

300:
  %% guard_SUITE.erl:849
  _116 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _116
  _351 = succeeded:body _116
  br ^1

297:
  %% guard_SUITE.erl:848
  _117 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _117
  _354 = succeeded:body _117
  br ^1

294:
  %% guard_SUITE.erl:847
  _118 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _118
  _357 = succeeded:body _118
  br ^1

291:
  %% guard_SUITE.erl:846
  _119 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _119
  _360 = succeeded:body _119
  br ^1

279:
  %% guard_SUITE.erl:839
  _123 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _123
  _372 = succeeded:body _123
  br ^1

276:
  %% guard_SUITE.erl:838
  _124 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _124
  _375 = succeeded:body _124
  br ^1

273:
  %% guard_SUITE.erl:837
  _125 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _125
  _378 = succeeded:body _125
  br ^1

270:
  %% guard_SUITE.erl:836
  _126 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _126
  _381 = succeeded:body _126
  br ^1

267:
  %% guard_SUITE.erl:835
  _127 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _127
  _384 = succeeded:body _127
  br ^1

258:
  %% guard_SUITE.erl:829
  _130 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _130
  _393 = succeeded:body _130
  br ^1

255:
  %% guard_SUITE.erl:828
  _131 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _131
  _396 = succeeded:body _131
  br ^1

252:
  %% guard_SUITE.erl:827
  _132 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _132
  _399 = succeeded:body _132
  br ^1

249:
  %% guard_SUITE.erl:826
  _133 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _133
  _402 = succeeded:body _133
  br ^1

246:
  %% guard_SUITE.erl:825
  _134 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _134
  _405 = succeeded:body _134
  br ^1

234:
  %% guard_SUITE.erl:819
  _138 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _138
  _417 = succeeded:body _138
  br ^1

228:
  %% guard_SUITE.erl:815
  _140 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _140
  _423 = succeeded:body _140
  br ^1

225:
  %% guard_SUITE.erl:814
  _141 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _141
  _426 = succeeded:body _141
  br ^1

222:
  %% guard_SUITE.erl:813
  _142 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _142
  _429 = succeeded:body _142
  br ^1

219:
  %% guard_SUITE.erl:812
  _143 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _143
  _432 = succeeded:body _143
  br ^1

216:
  %% guard_SUITE.erl:811
  _144 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _144
  _435 = succeeded:body _144
  br ^1

213:
  %% guard_SUITE.erl:810
  _145 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _145
  _438 = succeeded:body _145
  br ^1

210:
  %% guard_SUITE.erl:807
  _146 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _146
  _441 = succeeded:body _146
  br ^1

207:
  %% guard_SUITE.erl:806
  _147 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _147
  _444 = succeeded:body _147
  br ^1

201:
  %% guard_SUITE.erl:803
  _149 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _149
  _450 = succeeded:body _149
  br ^1

198:
  %% guard_SUITE.erl:801
  _150 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _150
  _453 = succeeded:body _150
  br ^1

195:
  %% guard_SUITE.erl:800
  _151 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _151
  _456 = succeeded:body _151
  br ^1

192:
  %% guard_SUITE.erl:799
  _152 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _152
  _459 = succeeded:body _152
  br ^1

189:
  %% guard_SUITE.erl:798
  _153 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _153
  _462 = succeeded:body _153
  br ^1

177:
  %% guard_SUITE.erl:790
  _157 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _157
  _474 = succeeded:body _157
  br ^1

174:
  %% guard_SUITE.erl:789
  _158 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _158
  _477 = succeeded:body _158
  br ^1

171:
  %% guard_SUITE.erl:788
  _159 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _159
  _480 = succeeded:body _159
  br ^1

168:
  %% guard_SUITE.erl:787
  _160 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _160
  _483 = succeeded:body _160
  br ^1

164:
  %% guard_SUITE.erl:785
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-complex_or_guards/1-',1}}
  _161 = match_fail `function_clause`, _0

  %% Unique:
  %%    _161
  _484 = succeeded:body _161
  br ^1

1:
  _162 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _162
}

%% guard_SUITE.erl:863
%% Counter = 39
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nil() | 1 | {'a'} | {'a', 'b', 'c', 'd'}
%%    _1 =>
%%     nil() | 2 | {1} | {1, 2, 3} | {'a', 'b', 'c', 'd'}
function `guard_SUITE`:`complex_or_1`(_0, _1) {
0:
  %% guard_SUITE.erl:865
  %% Argument types:
  %%    _0 => nil() | 1 | {'a'} | {'a', 'b', 'c', 'd'}
  %% Unique:
  %%    _0
  _2 = bif:tuple_size _0

  %% Unique:
  %%    _2
  _17 = succeeded:guard _2
  br _17, ^17, ^15

17:
  %% guard_SUITE.erl:865
  %% Argument types:
  %%    _2 => 1..16777215
  %% Unique:
  %%    _2
  _3 = bif:'<' `3`, _2

  %% guard_SUITE.erl:865
  %% Argument types:
  %%    _0 => {'a'} | {'a', 'b', 'c', 'd'}
  %% Unique:
  %%    _0
  _4 = bif:tuple_size _0

  %% guard_SUITE.erl:865
  %% Argument types:
  %%    _4 => 1..16777215
  %% Unique:
  %%    _4
  _5 = bif:'<' _4, `9`

  %% guard_SUITE.erl:865
  %% Argument types:
  %%    _3 => 'false' | 'true'
  %%    _5 => 'false' | 'true'
  %% Unique:
  %%    _3, 
  %%    _5
  _6 = bif:'and' _3, _5

  %% guard_SUITE.erl:866
  %% Argument types:
  %%    _1 => nil() | 2 | {1} | {1, 2, 3} | {'a', 'b', 'c', 'd'}
  %% Unique:
  %%    _1
  _7 = bif:tuple_size _1

  %% Unique:
  %%    _7
  _20 = succeeded:guard _7
  br _20, ^28, ^15

28:
  %% guard_SUITE.erl:866
  %% Argument types:
  %%    _7 => 1..16777215
  %% Unique:
  %%    _7
  _8 = bif:'<' `2`, _7

  %% guard_SUITE.erl:866
  %% Argument types:
  %%    _1 => {1} | {1, 2, 3} | {'a', 'b', 'c', 'd'}
  %% Unique:
  %%    _1
  _9 = bif:tuple_size _1

  %% guard_SUITE.erl:866
  %% Argument types:
  %%    _9 => 1..16777215
  %% Unique:
  %%    _9
  _10 = bif:'<' _9, `7`

  %% guard_SUITE.erl:866
  %% Argument types:
  %%    _8 => 'false' | 'true'
  %%    _10 => 'false' | 'true'
  %% Unique:
  %%    _8, 
  %%    _10
  _11 = bif:'and' _8, _10

  %% guard_SUITE.erl:865
  %% Argument types:
  %%    _6 => 'false' | 'true'
  %%    _11 => 'false' | 'true'
  %% Unique:
  %%    _6, 
  %%    _11
  _12 = bif:'or' _6, _11
  br _12, ^24, ^15

24:
  %% Result type:
  %%    'ok'
  ret `ok`

15:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:870
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'true'} | {'blurf', {'a', 'b', 'c'}} | {'false', {'a'} | {'a', 'b', 'c'}} | {'true', 'no_tuple' | nil() | {...}}
function `guard_SUITE`:`complex_or_2`(_0) {
0:
  %% guard_SUITE.erl:872
  %% Argument types:
  %%    _0 => {'true'} | {'blurf', {'a', 'b', 'c'}} | {'false', {'a'} | {'a', 'b', 'c'}} | {'true', 'no_tuple' | nil() | {...}}
  %% Unique:
  %%    _0
  _1 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _1 => 'blurf' | 'false' | 'true'
  %% Unique:
  %%    _1
  _2 = bif:'=:=' _1, `true`

  %% guard_SUITE.erl:872
  %% Argument types:
  %%    _0 => {'true'} | {'blurf', {'a', 'b', 'c'}} | {'false', {'a'} | {'a', 'b', 'c'}} | {'true', 'no_tuple' | nil() | {...}}
  %% Unique:
  %%    _0
  _3 = bif:element `2`, _0

  %% Unique:
  %%    _3
  _15 = succeeded:guard _3
  br _15, ^23, ^12

23:
  %% guard_SUITE.erl:872
  %% Argument types:
  %%    _3 => 'no_tuple' | nil() | {...}
  %% Unique:
  %%    _3
  _4 = bif:tuple_size _3

  %% Unique:
  %%    _4
  _16 = succeeded:guard _4
  br _16, ^22, ^12

22:
  %% guard_SUITE.erl:872
  %% Argument types:
  %%    _4 => 0..16777215
  %% Unique:
  %%    _4
  _6 = bif:'=<' _4, `3`

  %% guard_SUITE.erl:872
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _2, 
  %%    _6
  _7 = bif:'or' _2, _6
  br _7, ^21, ^12

21:
  %% Argument types:
  %%    _1 => 'blurf' | 'false' | 'true'
  %% Unique:
  %%    _1
  _8 = bif:is_boolean _1
  br _8, ^19, ^12

19:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:876
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'blurf' | nil() | {'false'} | {'true'} | bitstring(256,appendable)
%%    _1 =>
%%     45 | {...} | bitstring(8)
function `guard_SUITE`:`complex_or_3`(_0, _1) {
0:
  %% guard_SUITE.erl:878
  %% Argument types:
  %%    _1 => 45 | {...} | bitstring(8)
  %% Unique:
  %%    _1
  _2 = bif:size _1

  %% Unique:
  %%    _2
  _14 = succeeded:guard _2
  br _14, ^14, ^12

14:
  %% guard_SUITE.erl:878
  %% Argument types:
  %%    _2 => integer()
  %% Unique:
  %%    _2
  _4 = bif:'=<' _2, `3`

  %% guard_SUITE.erl:878
  %% Argument types:
  %%    _0 => 'blurf' | nil() | {'false'} | {'true'} | bitstring(256,appendable)
  %% Unique:
  %%    _0
  _5 = bif:element `1`, _0

  %% Aliased:
  %%    _5
  _15 = succeeded:guard _5
  br _15, ^21, ^12

21:
  %% guard_SUITE.erl:878
  %% Argument types:
  %%    _4 => 'false' | 'true'
  %%    _5 => 'false' | 'true'
  %% Unique:
  %%    _4, 
  %%    _5
  _7 = bif:'or' _4, _5
  br _7, ^18, ^12

18:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:882
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nil() | {1, 2, 3} | {1, 2, 3, 4} | bitstring(8)
%%    _1 =>
%%     nil() | {'false'} | {'true'}
function `guard_SUITE`:`complex_or_4`(_0, _1) {
0:
  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _0 => nil() | {1, 2, 3} | {1, 2, 3, 4} | bitstring(8)
  %% Unique:
  %%    _0
  _2 = bif:is_tuple _0

  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _0 => nil() | {1, 2, 3} | {1, 2, 3, 4} | bitstring(8)
  %% Unique:
  %%    _0
  _3 = bif:size _0

  %% Unique:
  %%    _3
  _16 = succeeded:guard _3
  br _16, ^28, ^14

28:
  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _3 => integer()
  %% Unique:
  %%    _3
  _4 = bif:'>' _3, `3`

  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %%    _4 => 'false' | 'true'
  %% Unique:
  %%    _2, 
  %%    _4
  _5 = bif:'and' _2, _4

  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _5 => 'false' | 'true'
  %% Unique:
  %%    _5
  _6 = bif:'not' _5

  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _1 => nil() | {'false'} | {'true'}
  %% Unique:
  %%    _1
  _7 = bif:element `1`, _1

  %% Unique:
  %%    _7
  _19 = succeeded:guard _7
  br _19, ^25, ^14

25:
  %% guard_SUITE.erl:884
  %% Argument types:
  %%    _6 => 'false' | 'true'
  %%    _7 => 'false' | 'true'
  %% Unique:
  %%    _6, 
  %%    _7
  _9 = bif:'or' _6, _7
  br _9, ^22, ^14

22:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:888
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'blurf' | {1, 2, 3} | {1, 2, 3, 4} | bitstring(8)
%%    _1 =>
%%     'klarf' | {'false'} | {'true'}
function `guard_SUITE`:`complex_or_5`(_0, _1) {
0:
  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _0 => 'blurf' | {1, 2, 3} | {1, 2, 3, 4} | bitstring(8)
  %% Unique:
  %%    _0
  _2 = bif:is_tuple _0

  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _0 => 'blurf' | {1, 2, 3} | {1, 2, 3, 4} | bitstring(8)
  %% Unique:
  %%    _0
  _3 = bif:size _0

  %% Unique:
  %%    _3
  _16 = succeeded:guard _3
  br _16, ^28, ^14

28:
  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _3 => integer()
  %% Unique:
  %%    _3
  _4 = bif:'>' _3, `3`

  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %%    _4 => 'false' | 'true'
  %% Unique:
  %%    _2, 
  %%    _4
  _5 = bif:'or' _2, _4

  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _5 => 'false' | 'true'
  %% Unique:
  %%    _5
  _6 = bif:'not' _5

  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _1 => 'klarf' | {'false'} | {'true'}
  %% Unique:
  %%    _1
  _7 = bif:element `1`, _1

  %% Aliased:
  %%    _7
  _19 = succeeded:guard _7
  br _19, ^25, ^14

25:
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %% Unique:
  %%    _7
  _8 = bif:'not' _7

  %% guard_SUITE.erl:890
  %% Argument types:
  %%    _6 => 'false' | 'true'
  %%    _8 => 'false' | 'true'
  %% Unique:
  %%    _6, 
  %%    _8
  _9 = bif:'or' _6, _8
  br _9, ^22, ^14

22:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:894
%% Counter = 46
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nil() | {...}
%%    _1 =>
%%     'klurf' | {1} | {1, 2, 3, 4} | bitstring(8)
function `guard_SUITE`:`complex_or_6`(_0, _1) {
0:
  %% guard_SUITE.erl:896
  %% Argument types:
  %%    _0 => nil() | {...}
  %% Unique:
  %%    _0
  _2 = bif:element `1`, _0

  %% Unique:
  %%    _2
  _21 = succeeded:guard _2
  br _21, ^21, ^19

21:
  %% Argument types:
  %%    
  %% Unique:
  %%    _2
  _3 = bif:'=:=' _2, `false`

  %% guard_SUITE.erl:896
  %% Argument types:
  %%    _0 => {any(), ...}
  %% Unique:
  %%    _0
  _4 = bif:element `2`, _0

  %% Unique:
  %%    _4
  _22 = succeeded:guard _4
  br _22, ^36, ^19

36:
  %% Argument types:
  %%    
  %% Unique:
  %%    _4
  _5 = bif:'=:=' _4, `false`

  %% guard_SUITE.erl:896
  %% Argument types:
  %%    _3 => 'false' | 'true'
  %%    _5 => 'false' | 'true'
  %% Unique:
  %%    _3, 
  %%    _5
  _6 = bif:'and' _3, _5

  %% guard_SUITE.erl:896
  %% Argument types:
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _6
  _7 = bif:'not' _6

  %% guard_SUITE.erl:897
  %% Argument types:
  %%    _1 => 'klurf' | {1} | {1, 2, 3, 4} | bitstring(8)
  %% Unique:
  %%    _1
  _8 = bif:size _1

  %% Unique:
  %%    _8
  _25 = succeeded:guard _8
  br _25, ^33, ^19

33:
  %% guard_SUITE.erl:897
  %% Argument types:
  %%    _8 => integer()
  %% Unique:
  %%    _8
  _11 = bif:'>' _8, `3`

  %% guard_SUITE.erl:896
  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _11 => 'false' | 'true'
  %% Unique:
  %%    _7, 
  %%    _11
  _12 = bif:'or' _7, _11
  br _12, ^32, ^19

32:
  %% Argument types:
  %%    
  %% Unique:
  %%    _4
  _13 = bif:is_boolean _4
  br _13, ^31, ^19

31:
  %% Argument types:
  %%    
  %% Unique:
  %%    _2
  _15 = bif:is_boolean _2
  br _15, ^29, ^19

29:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:901
%% Counter = 314
%% bs_ensure_opt: true
function `guard_SUITE`:`and_guard`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _208 = bif:is_list _0
  br _208, ^208, ^207

208:
  %% Result type:
  %%    'error'
  _1 = make_fun (`'-and_guard/1-fun-0-'`/0)

  %% guard_SUITE.erl:905
  %% Aliased:
  %%    _1
  _158 = call (`check`/2), _1, `error`

  %% Aliased:
  %%    _158
  _209 = succeeded:body _158
  br _209, ^209, ^1

209:
  %% Result type:
  %%    'error'
  _2 = make_fun (`'-and_guard/1-fun-1-'`/0)

  %% guard_SUITE.erl:906
  %% Aliased:
  %%    _2
  _159 = call (`check`/2), _2, `error`

  %% Aliased:
  %%    _159
  _210 = succeeded:body _159
  br _210, ^210, ^1

210:
  %% Result type:
  %%    'ok'
  _3 = make_fun (`'-and_guard/1-fun-2-'`/0)

  %% guard_SUITE.erl:907
  %% Aliased:
  %%    _3
  _160 = call (`check`/2), _3, `ok`

  %% Aliased:
  %%    _160
  _211 = succeeded:body _160
  br _211, ^211, ^1

211:
  %% Result type:
  %%    'error'
  _4 = make_fun (`'-and_guard/1-fun-3-'`/0)

  %% guard_SUITE.erl:908
  %% Aliased:
  %%    _4
  _161 = call (`check`/2), _4, `error`

  %% Aliased:
  %%    _161
  _212 = succeeded:body _161
  br _212, ^212, ^1

212:
  %% Result type:
  %%    'error'
  _6 = make_fun (`'-and_guard/1-fun-4-'`/0)

  %% guard_SUITE.erl:910
  %% Aliased:
  %%    _6
  _162 = call (`check`/2), _6, `error`

  %% Aliased:
  %%    _162
  _213 = succeeded:body _162
  br _213, ^213, ^1

213:
  %% Result type:
  %%    'error'
  _8 = make_fun (`'-and_guard/1-fun-5-'`/0)

  %% guard_SUITE.erl:911
  %% Aliased:
  %%    _8
  _163 = call (`check`/2), _8, `error`

  %% Aliased:
  %%    _163
  _214 = succeeded:body _163
  br _214, ^214, ^1

214:
  %% Result type:
  %%    'error'
  _11 = make_fun (`'-and_guard/1-fun-6-'`/0)

  %% guard_SUITE.erl:912
  %% Aliased:
  %%    _11
  _164 = call (`check`/2), _11, `error`

  %% Aliased:
  %%    _164
  _215 = succeeded:body _164
  br _215, ^215, ^1

215:
  %% Result type:
  %%    'exit'
  _14 = make_fun (`'-and_guard/1-fun-7-'`/0)

  %% guard_SUITE.erl:914
  %% Aliased:
  %%    _14
  _168 = call (`check`/2), _14, `exit`

  %% Aliased:
  %%    _168
  _216 = succeeded:body _168
  br _216, ^216, ^1

216:
  %% guard_SUITE.erl:925
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _217 = succeeded:body True
  br _217, ^217, ^1

217:
  %% guard_SUITE.erl:926
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _218 = succeeded:body False
  br _218, ^218, ^1

218:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _19 = make_fun (`'-and_guard/1-fun-8-'`/2), False, True

  %% guard_SUITE.erl:928
  %% Aliased:
  %%    _19
  _169 = call (`check`/2), _19, `error`

  %% Aliased:
  %%    _169
  _219 = succeeded:body _169
  br _219, ^219, ^1

219:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _22 = make_fun (`'-and_guard/1-fun-9-'`/2), False, True

  %% guard_SUITE.erl:929
  %% Aliased:
  %%    _22
  _170 = call (`check`/2), _22, `error`

  %% Aliased:
  %%    _170
  _220 = succeeded:body _170
  br _220, ^220, ^1

220:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _25 = make_fun (`'-and_guard/1-fun-10-'`/1), True

  %% guard_SUITE.erl:930
  %% Aliased:
  %%    _25
  _172 = call (`check`/2), _25, `ok`

  %% Aliased:
  %%    _172
  _221 = succeeded:body _172
  br _221, ^221, ^1

221:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _28 = make_fun (`'-and_guard/1-fun-11-'`/1), False

  %% guard_SUITE.erl:931
  %% Aliased:
  %%    _28
  _173 = call (`check`/2), _28, `error`

  %% Aliased:
  %%    _173
  _222 = succeeded:body _173
  br _222, ^222, ^1

222:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    False, 
  %%    True
  _37 = make_fun (`'-and_guard/1-fun-12-'`/2), False, True

  %% guard_SUITE.erl:932
  %% Aliased:
  %%    _37
  _178 = call (`check`/2), _37, `exit`

  %% Aliased:
  %%    _178
  _223 = succeeded:body _178
  br _223, ^223, ^1

223:
  %% guard_SUITE.erl:943
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Glurf = call (`id`/1), `glurf`

  %% Aliased:
  %%    Glurf
  _224 = succeeded:body Glurf
  br _224, ^224, ^1

224:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _41 = make_fun (`'-and_guard/1-fun-13-'`/2), Glurf, True

  %% guard_SUITE.erl:945
  %% Aliased:
  %%    _41
  _179 = call (`check`/2), _41, `error`

  %% Aliased:
  %%    _179
  _225 = succeeded:body _179
  br _225, ^225, ^1

225:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _44 = make_fun (`'-and_guard/1-fun-14-'`/2), Glurf, True

  %% guard_SUITE.erl:946
  %% Aliased:
  %%    _44
  _180 = call (`check`/2), _44, `error`

  %% Aliased:
  %%    _180
  _226 = succeeded:body _180
  br _226, ^226, ^1

226:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _47 = make_fun (`'-and_guard/1-fun-15-'`/1), True

  %% guard_SUITE.erl:947
  %% Aliased:
  %%    _47
  _182 = call (`check`/2), _47, `ok`

  %% Aliased:
  %%    _182
  _227 = succeeded:body _182
  br _227, ^227, ^1

227:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    Glurf
  _50 = make_fun (`'-and_guard/1-fun-16-'`/1), Glurf

  %% guard_SUITE.erl:948
  %% Aliased:
  %%    _50
  _183 = call (`check`/2), _50, `error`

  %% Aliased:
  %%    _183
  _228 = succeeded:body _183
  br _228, ^228, ^1

228:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    Glurf, 
  %%    True
  _59 = make_fun (`'-and_guard/1-fun-17-'`/2), Glurf, True

  %% guard_SUITE.erl:949
  %% Aliased:
  %%    _59
  _188 = call (`check`/2), _59, `exit`

  %% Aliased:
  %%    _188
  _229 = succeeded:body _188
  br _229, ^229, ^1

229:
  %% guard_SUITE.erl:959
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  ATuple = call (`id`/1), `{a,b,c}`

  %% Aliased:
  %%    ATuple
  _230 = succeeded:body ATuple
  br _230, ^230, ^1

230:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _64 = make_fun (`'-and_guard/1-fun-18-'`/2), ATuple, True

  %% guard_SUITE.erl:961
  %% Aliased:
  %%    _64
  _189 = call (`check`/2), _64, `error`

  %% Aliased:
  %%    _189
  _231 = succeeded:body _189
  br _231, ^231, ^1

231:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _68 = make_fun (`'-and_guard/1-fun-19-'`/2), ATuple, True

  %% guard_SUITE.erl:963
  %% Aliased:
  %%    _68
  _190 = call (`check`/2), _68, `error`

  %% Aliased:
  %%    _190
  _232 = succeeded:body _190
  br _232, ^232, ^1

232:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    True
  _71 = make_fun (`'-and_guard/1-fun-20-'`/1), True

  %% guard_SUITE.erl:965
  %% Aliased:
  %%    _71
  _192 = call (`check`/2), _71, `ok`

  %% Aliased:
  %%    _192
  _233 = succeeded:body _192
  br _233, ^233, ^1

233:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _76 = make_fun (`'-and_guard/1-fun-21-'`/1), ATuple

  %% guard_SUITE.erl:966
  %% Aliased:
  %%    _76
  _193 = call (`check`/2), _76, `error`

  %% Aliased:
  %%    _193
  _234 = succeeded:body _193
  br _234, ^234, ^1

234:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _89 = make_fun (`'-and_guard/1-fun-22-'`/2), ATuple, True

  %% guard_SUITE.erl:968
  %% Aliased:
  %%    _89
  _198 = call (`check`/2), _89, `exit`

  %% Aliased:
  %%    _198
  _235 = succeeded:body _198
  br _235, ^235, ^1

235:
  %% guard_SUITE.erl:977
  %% Result type:
  %%    'ok'
  _152 = call (`relprod`/2), `{'Set',a,b}`, `{'Set',a,b}`

  %% Unique:
  %%    _152
  _236 = succeeded:body _152
  br _236, ^270, ^1

270:
  %% guard_SUITE.erl:979
  %% Result type:
  %%    'ok'
  _153 = call (`and_same_var`/1), `42`

  %% Unique:
  %%    _153
  _239 = succeeded:body _153
  br _239, ^312, ^1

312:
  br ^313

313:
  _245 = new_try_tag `'catch'`
  br _245, ^243, ^244

243:
  %% guard_SUITE.erl:980
  %% Result type:
  %%    none()
  _200 = call (`and_same_var`/1), `x`

  %% Aliased:
  %%    _200
  _247 = succeeded:body _200
  br ^244

244:
  %% Unique:
  %%    _245
  _250 = landingpad `'catch'`, _245

  %% Aliased:
  %%    _250
  _248 = extract _250, `0`
  br ^242

242:
  %% Aliased:
  %%    _248
  %% Unique:
  %%    _245
  _92 = catch_end _245, _248

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _263 = is_tagged_tuple _92, `2`, `'EXIT'`
  br _263, ^260, ^253

260:
  %% Argument types:
  %%    _92 => {''EXIT'', any()}
  %% Aliased:
  %%    _92
  _154 = get_tuple_element _92, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _154
  _257 = is_tagged_tuple _154, `2`, `if_clause`
  br _257, ^254, ^253

254:
  %% Result type:
  %%    'ok'
  ret `ok`

253:
  %% guard_SUITE.erl:980
  %% Aliased:
  %%    _92
  _201 = match_fail `badmatch`, _92

  %% Unique:
  %%    _201
  _266 = succeeded:body _201
  br ^1

207:
  %% guard_SUITE.erl:901
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-and_guard/1-',1}}
  _204 = match_fail `function_clause`, _0

  %% Unique:
  %%    _204
  _273 = succeeded:body _204
  br ^1

1:
  _205 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _205
}

%% guard_SUITE.erl:983
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'x' | 42
function `guard_SUITE`:`and_same_var`(_0) {
0:
  %% guard_SUITE.erl:984
  %% Argument types:
  %%    _0 => 'x' | 42
  %% Unique:
  %%    _0
  B = bif:is_integer _0
  br B, ^18, ^13

18:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% guard_SUITE.erl:985
  _9 = match_fail `if_clause`

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% guard_SUITE.erl:989
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {''Set'', 'a', 'b'}
%%    _1 =>
%%     {''Set'', 'a', 'b'}
function `guard_SUITE`:`relprod`(_0, _1) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:993
%% Counter = 161
%% bs_ensure_opt: true
function `guard_SUITE`:`xor_guard`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _133 = bif:is_list _0
  br _133, ^133, ^132

133:
  %% Result type:
  %%    'ok'
  _1 = make_fun (`'-xor_guard/1-fun-0-'`/0)

  %% guard_SUITE.erl:996
  %% Aliased:
  %%    _1
  _101 = call (`check`/2), _1, `ok`

  %% Aliased:
  %%    _101
  _134 = succeeded:body _101
  br _134, ^134, ^1

134:
  %% Result type:
  %%    'ok'
  _2 = make_fun (`'-xor_guard/1-fun-1-'`/0)

  %% guard_SUITE.erl:997
  %% Aliased:
  %%    _2
  _102 = call (`check`/2), _2, `ok`

  %% Aliased:
  %%    _102
  _135 = succeeded:body _102
  br _135, ^135, ^1

135:
  %% Result type:
  %%    'error'
  _3 = make_fun (`'-xor_guard/1-fun-2-'`/0)

  %% guard_SUITE.erl:998
  %% Aliased:
  %%    _3
  _103 = call (`check`/2), _3, `error`

  %% Aliased:
  %%    _103
  _136 = succeeded:body _103
  br _136, ^136, ^1

136:
  %% Result type:
  %%    'error'
  _4 = make_fun (`'-xor_guard/1-fun-3-'`/0)

  %% guard_SUITE.erl:999
  %% Aliased:
  %%    _4
  _104 = call (`check`/2), _4, `error`

  %% Aliased:
  %%    _104
  _137 = succeeded:body _104
  br _137, ^137, ^1

137:
  %% Result type:
  %%    'exit'
  _7 = make_fun (`'-xor_guard/1-fun-4-'`/0)

  %% guard_SUITE.erl:1000
  %% Aliased:
  %%    _7
  _108 = call (`check`/2), _7, `exit`

  %% Aliased:
  %%    _108
  _138 = succeeded:body _108
  br _138, ^138, ^1

138:
  %% Result type:
  %%    'exit'
  _10 = make_fun (`'-xor_guard/1-fun-5-'`/0)

  %% guard_SUITE.erl:1004
  %% Aliased:
  %%    _10
  _112 = call (`check`/2), _10, `exit`

  %% Aliased:
  %%    _112
  _139 = succeeded:body _112
  br _139, ^139, ^1

139:
  %% guard_SUITE.erl:1012
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _140 = succeeded:body True
  br _140, ^140, ^1

140:
  %% guard_SUITE.erl:1013
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _141 = succeeded:body False
  br _141, ^141, ^1

141:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _19 = make_fun (`'-xor_guard/1-fun-6-'`/2), False, True

  %% guard_SUITE.erl:1015
  %% Aliased:
  %%    _19
  _114 = call (`check`/2), _19, `ok`

  %% Aliased:
  %%    _114
  _142 = succeeded:body _114
  br _142, ^142, ^1

142:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    False, 
  %%    True
  _26 = make_fun (`'-xor_guard/1-fun-7-'`/2), False, True

  %% guard_SUITE.erl:1016
  %% Aliased:
  %%    _26
  _116 = call (`check`/2), _26, `ok`

  %% Aliased:
  %%    _116
  _143 = succeeded:body _116
  br _143, ^143, ^1

143:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    True
  _33 = make_fun (`'-xor_guard/1-fun-8-'`/1), True

  %% guard_SUITE.erl:1017
  %% Aliased:
  %%    _33
  _117 = call (`check`/2), _33, `error`

  %% Aliased:
  %%    _117
  _144 = succeeded:body _117
  br _144, ^144, ^1

144:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    False
  _40 = make_fun (`'-xor_guard/1-fun-9-'`/1), False

  %% guard_SUITE.erl:1018
  %% Aliased:
  %%    _40
  _118 = call (`check`/2), _40, `error`

  %% Aliased:
  %%    _118
  _145 = succeeded:body _118
  br _145, ^145, ^1

145:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    False
  _49 = make_fun (`'-xor_guard/1-fun-10-'`/1), False

  %% guard_SUITE.erl:1019
  %% Aliased:
  %%    _49
  _123 = call (`check`/2), _49, `exit`

  %% Aliased:
  %%    _123
  _146 = succeeded:body _123
  br _146, ^146, ^1

146:
  %% Result type:
  %%    'exit'
  %% Aliased:
  %%    True
  _58 = make_fun (`'-xor_guard/1-fun-11-'`/1), True

  %% guard_SUITE.erl:1023
  %% Aliased:
  %%    _58
  _128 = call (`check`/2), _58, `exit`

  %% Aliased:
  %%    _128
  _147 = succeeded:body _128
  br _147, ^147, ^1

147:
  %% Result type:
  %%    'ok'
  ret `ok`

132:
  %% guard_SUITE.erl:993
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-xor_guard/1-',1}}
  _129 = match_fail `function_clause`, _0

  %% Unique:
  %%    _129
  _148 = succeeded:body _129
  br ^1

1:
  _130 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _130
}

%% guard_SUITE.erl:1030
%% Counter = 91
%% bs_ensure_opt: true
function `guard_SUITE`:`more_xor_guards`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _76 = bif:is_list _0
  br _76, ^76, ^75

76:
  %% guard_SUITE.erl:1031
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  True = call (`id`/1), `true`

  %% Aliased:
  %%    True
  _77 = succeeded:body True
  br _77, ^77, ^1

77:
  %% guard_SUITE.erl:1032
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  False = call (`id`/1), `false`

  %% Aliased:
  %%    False
  _78 = succeeded:body False
  br _78, ^78, ^1

78:
  %% guard_SUITE.erl:1033
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  ATuple = call (`id`/1), `{false,true,gurka}`

  %% Aliased:
  %%    ATuple
  _79 = succeeded:body ATuple
  br _79, ^79, ^1

79:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _11 = make_fun (`'-more_xor_guards/1-fun-0-'`/2), ATuple, False

  %% guard_SUITE.erl:1035
  %% Aliased:
  %%    _11
  _67 = call (`check`/2), _11, `error`

  %% Aliased:
  %%    _67
  _80 = succeeded:body _67
  br _80, ^80, ^1

80:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    False
  _23 = make_fun (`'-more_xor_guards/1-fun-1-'`/2), ATuple, False

  %% guard_SUITE.erl:1040
  %% Aliased:
  %%    _23
  _68 = call (`check`/2), _23, `error`

  %% Aliased:
  %%    _68
  _81 = succeeded:body _68
  br _81, ^81, ^1

81:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple
  _32 = make_fun (`'-more_xor_guards/1-fun-2-'`/1), ATuple

  %% guard_SUITE.erl:1045
  %% Aliased:
  %%    _32
  _69 = call (`check`/2), _32, `error`

  %% Aliased:
  %%    _69
  _82 = succeeded:body _69
  br _82, ^82, ^1

82:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _40 = make_fun (`'-more_xor_guards/1-fun-3-'`/2), ATuple, True

  %% guard_SUITE.erl:1050
  %% Aliased:
  %%    _40
  _70 = call (`check`/2), _40, `error`

  %% Aliased:
  %%    _70
  _83 = succeeded:body _70
  br _83, ^83, ^1

83:
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    ATuple, 
  %%    True
  _48 = make_fun (`'-more_xor_guards/1-fun-4-'`/2), ATuple, True

  %% guard_SUITE.erl:1055
  %% Aliased:
  %%    _48
  _71 = call (`check`/2), _48, `error`

  %% Aliased:
  %%    _71
  _84 = succeeded:body _71
  br _84, ^84, ^1

84:
  %% Result type:
  %%    'ok'
  ret `ok`

75:
  %% guard_SUITE.erl:1030
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-more_xor_guards/1-',1}}
  _72 = match_fail `function_clause`, _0

  %% Unique:
  %%    _72
  _85 = succeeded:body _72
  br ^1

1:
  _73 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _73
}

%% guard_SUITE.erl:1061
%% Counter = 11
%% bs_ensure_opt: true
function `guard_SUITE`:`build_in_guard`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% Result type:
  %%    'ok'
  ret `ok`

8:
  %% guard_SUITE.erl:1061
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-build_in_guard/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _10 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% guard_SUITE.erl:1068
%% Counter = 114
%% bs_ensure_opt: true
function `guard_SUITE`:`old_guard_tests`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _43 = bif:is_list _0
  br _43, ^43, ^42

43:
  %% guard_SUITE.erl:1070
  %% Result type:
  %%    'list'
  %% Aliased:
  %%    _0
  _17 = call (`og`/1), _0

  %% Unique:
  %%    _17
  _44 = succeeded:body _17
  br _44, ^108, ^1

108:
  %% guard_SUITE.erl:1071
  %% Result type:
  %%    'atom'
  _18 = call (`og`/1), `an_atom`

  %% Unique:
  %%    _18
  _47 = succeeded:body _18
  br _47, ^105, ^1

105:
  %% guard_SUITE.erl:1072
  %% Result type:
  %%    'binary' | 'what'
  _19 = call (`og`/1), `<<1,2>>`

  %% Unique:
  %%    _19
  _50 = succeeded:body _19
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    _19 => 'binary' | 'what'
  %% Unique:
  %%    _19
  _103 = bif:'=:=' _19, `binary`
  br _103, ^102, ^52

102:
  %% guard_SUITE.erl:1073
  %% Result type:
  %%    'float'
  _20 = call (`og`/1), `3.14`

  %% Unique:
  %%    _20
  _53 = succeeded:body _20
  br _53, ^99, ^1

99:
  %% guard_SUITE.erl:1074
  %% Result type:
  %%    'integer'
  _21 = call (`og`/1), `43`

  %% Unique:
  %%    _21
  _56 = succeeded:body _21
  br _56, ^96, ^1

96:
  %% Result type:
  %%    'ok'
  _6 = make_fun (`'-old_guard_tests/1-fun-0-'`/0)

  %% guard_SUITE.erl:1075
  %% Result type:
  %%    'a_function' | 'what'
  %% Aliased:
  %%    _6
  _22 = call (`og`/1), _6

  %% Unique:
  %%    _22
  _59 = succeeded:body _22
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    _22 => 'a_function' | 'what'
  %% Unique:
  %%    _22
  _94 = bif:'=:=' _22, `a_function`
  br _94, ^93, ^61

93:
  %% guard_SUITE.erl:1076
  %% Argument types:
  %%    
  _8 = bif:self

  %% guard_SUITE.erl:1076
  %% Result type:
  %%    'pid' | 'what'
  %% Unique:
  %%    _8
  _23 = call (`og`/1), _8

  %% Unique:
  %%    _23
  _62 = succeeded:body _23
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _23 => 'pid' | 'what'
  %% Unique:
  %%    _23
  _91 = bif:'=:=' _23, `pid`
  br _91, ^90, ^64

90:
  %% guard_SUITE.erl:1077
  _10 = call (`erlang`:`make_ref`/0)

  %% guard_SUITE.erl:1077
  %% Result type:
  %%    'reference' | 'what'
  %% Aliased:
  %%    _10
  _24 = call (`og`/1), _10

  %% Unique:
  %%    _24
  _66 = succeeded:body _24
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    _24 => 'reference' | 'what'
  %% Unique:
  %%    _24
  _88 = bif:'=:=' _24, `reference`
  br _88, ^87, ^68

87:
  %% guard_SUITE.erl:1078
  %% Result type:
  %%    'tuple'
  _25 = call (`og`/1), `{}`

  %% Unique:
  %%    _25
  _69 = succeeded:body _25
  br _69, ^84, ^1

84:
  %% guard_SUITE.erl:1080
  %% Result type:
  %%    'number'
  _26 = call (`on`/1), `45.333`

  %% Unique:
  %%    _26
  _72 = succeeded:body _26
  br _72, ^81, ^1

81:
  %% guard_SUITE.erl:1081
  %% Result type:
  %%    'number'
  _27 = call (`on`/1), `-19`

  %% Unique:
  %%    _27
  _75 = succeeded:body _27
  br _75, ^78, ^1

78:
  %% Result type:
  %%    'ok'
  ret `ok`

68:
  %% guard_SUITE.erl:1077
  _31 = match_fail `badmatch`, `what`

  %% Unique:
  %%    _31
  _89 = succeeded:body _31
  br ^1

64:
  %% guard_SUITE.erl:1076
  _32 = match_fail `badmatch`, `what`

  %% Unique:
  %%    _32
  _92 = succeeded:body _32
  br ^1

61:
  %% guard_SUITE.erl:1075
  _33 = match_fail `badmatch`, `what`

  %% Unique:
  %%    _33
  _95 = succeeded:body _33
  br ^1

52:
  %% guard_SUITE.erl:1072
  _36 = match_fail `badmatch`, `what`

  %% Unique:
  %%    _36
  _104 = succeeded:body _36
  br ^1

42:
  %% guard_SUITE.erl:1068
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-old_guard_tests/1-',1}}
  _39 = match_fail `function_clause`, _0

  %% Unique:
  %%    _39
  _111 = succeeded:body _39
  br ^1

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40
}

%% guard_SUITE.erl:1084
%% Counter = 34
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'an_atom' | maybe_improper_list(any(), any()) | number(3, 43) | {} | other()
function `guard_SUITE`:`og`(_0) {
0:
  %% Argument types:
  %%    _0 => 'an_atom' | maybe_improper_list(any(), any()) | number(3, 43) | {} | other()
  %% Aliased:
  %%    _0
  _16 = bif:is_atom _0
  br _16, ^16, ^15

16:
  %% Result type:
  %%    'atom'
  ret `atom`

15:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any()) | number(3, 43) | {} | other()
  %% Aliased:
  %%    _0
  _18 = bif:is_binary _0
  br _18, ^18, ^17

18:
  %% Result type:
  %%    'binary'
  ret `binary`

17:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any()) | number(3, 43) | {} | other()
  %% Aliased:
  %%    _0
  _20 = bif:is_float _0
  br _20, ^20, ^19

20:
  %% Result type:
  %%    'float'
  ret `float`

19:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any()) | 3..43 | {} | other()
  %% Aliased:
  %%    _0
  _22 = bif:is_integer _0
  br _22, ^22, ^21

22:
  %% Result type:
  %%    'integer'
  ret `integer`

21:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any()) | {} | other()
  %% Aliased:
  %%    _0
  _24 = bif:is_function _0
  br _24, ^24, ^23

24:
  %% Result type:
  %%    'a_function'
  ret `a_function`

23:
  %% Argument types:
  %%    _0 => maybe_improper_list(any(), any()) | {} | other()
  %% Aliased:
  %%    _0
  _26 = bif:is_list _0
  br _26, ^26, ^25

26:
  %% Result type:
  %%    'list'
  ret `list`

25:
  %% Argument types:
  %%    _0 => {} | other()
  %% Aliased:
  %%    _0
  _28 = bif:is_pid _0
  br _28, ^28, ^27

28:
  %% Result type:
  %%    'pid'
  ret `pid`

27:
  %% Argument types:
  %%    _0 => {} | other()
  %% Aliased:
  %%    _0
  _30 = bif:is_port _0
  br _30, ^30, ^29

30:
  %% Result type:
  %%    'port'
  ret `port`

29:
  %% Argument types:
  %%    _0 => {} | other()
  %% Aliased:
  %%    _0
  _32 = bif:is_reference _0
  br _32, ^32, ^31

32:
  %% Result type:
  %%    'reference'
  ret `reference`

31:
  %% Argument types:
  %%    _0 => {} | other()
  %% Aliased:
  %%    _0
  _33 = bif:is_tuple _0
  br _33, ^33, ^14

33:
  %% Result type:
  %%    'tuple'
  ret `tuple`

14:
  %% Result type:
  %%    'what'
  ret `what`
}

%% guard_SUITE.erl:1096
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(-19, 46)
function `guard_SUITE`:`on`(_0) {
0:
  %% Result type:
  %%    'number'
  ret `number`
}

%% guard_SUITE.erl:1099
%% Counter = 374
%% bs_ensure_opt: true
function `guard_SUITE`:`complex_guard`(_0) {
0:
  %% guard_SUITE.erl:1101
  %% Result type:
  %%    nil()
  _158 = call (`'-complex_guard/1-lc$^0/1-0-'`/1), `[4,5]`

  %% Unique:
  %%    _158
  _209 = succeeded:body _158
  br _209, ^209, ^1

209:
  %% guard_SUITE.erl:1103
  %% Result type:
  %%    nil()
  _168 = call (`'-complex_guard/1-lc$^3/1-3-'`/1), `[1,2,3]`

  %% Unique:
  %%    _168
  _210 = succeeded:body _168
  br _210, ^210, ^1

210:
  %% guard_SUITE.erl:1105
  %% Result type:
  %%    nil()
  _179 = call (`'-complex_guard/1-lc$^6/1-6-'`/1), `[1,2,3,4,5]`

  %% Unique:
  %%    _179
  _211 = succeeded:body _179
  br _211, ^211, ^1

211:
  %% guard_SUITE.erl:1107
  %% Result type:
  %%    'b' | 'c'
  _122 = call (`do_complex_guard_2`/3), `false`, `false`, `true`

  %% Unique:
  %%    _122
  _212 = succeeded:body _122
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    _122 => 'b' | 'c'
  %% Unique:
  %%    _122
  _372 = bif:'=:=' _122, `b`
  br _372, ^371, ^214

371:
  %% guard_SUITE.erl:1108
  %% Result type:
  %%    'a' | 'c'
  _123 = call (`do_complex_guard_2`/3), `false`, `false`, `false`

  %% Unique:
  %%    _123
  _215 = succeeded:body _123
  br _215, ^215, ^1

215:
  %% Argument types:
  %%    _123 => 'a' | 'c'
  %% Unique:
  %%    _123
  _369 = bif:'=:=' _123, `c`
  br _369, ^368, ^217

368:
  %% guard_SUITE.erl:1109
  %% Result type:
  %%    'c'
  _124 = call (`do_complex_guard_2`/3), `false`, `true`, `true`

  %% Unique:
  %%    _124
  _218 = succeeded:body _124
  br _218, ^365, ^1

365:
  %% guard_SUITE.erl:1110
  %% Result type:
  %%    'a' | 'c'
  _125 = call (`do_complex_guard_2`/3), `false`, `true`, `false`

  %% Unique:
  %%    _125
  _221 = succeeded:body _125
  br _221, ^221, ^1

221:
  %% Argument types:
  %%    _125 => 'a' | 'c'
  %% Unique:
  %%    _125
  _363 = bif:'=:=' _125, `a`
  br _363, ^362, ^223

362:
  %% guard_SUITE.erl:1112
  %% Result type:
  %%    'c'
  _126 = call (`do_complex_guard_2`/3), `true`, `false`, `true`

  %% Unique:
  %%    _126
  _224 = succeeded:body _126
  br _224, ^359, ^1

359:
  %% guard_SUITE.erl:1113
  %% Result type:
  %%    'a' | 'c'
  _127 = call (`do_complex_guard_2`/3), `true`, `false`, `false`

  %% Unique:
  %%    _127
  _227 = succeeded:body _127
  br _227, ^227, ^1

227:
  %% Argument types:
  %%    _127 => 'a' | 'c'
  %% Unique:
  %%    _127
  _357 = bif:'=:=' _127, `a`
  br _357, ^356, ^229

356:
  %% guard_SUITE.erl:1114
  %% Result type:
  %%    'c'
  _128 = call (`do_complex_guard_2`/3), `true`, `true`, `true`

  %% Unique:
  %%    _128
  _230 = succeeded:body _128
  br _230, ^353, ^1

353:
  %% guard_SUITE.erl:1115
  %% Result type:
  %%    'a' | 'c'
  _129 = call (`do_complex_guard_2`/3), `true`, `true`, `false`

  %% Unique:
  %%    _129
  _233 = succeeded:body _129
  br _233, ^233, ^1

233:
  %% Argument types:
  %%    _129 => 'a' | 'c'
  %% Unique:
  %%    _129
  _351 = bif:'=:=' _129, `a`
  br _351, ^350, ^235

350:
  %% guard_SUITE.erl:1117
  %% Result type:
  %%    'c'
  _130 = call (`do_complex_guard_2`/3), `other`, `false`, `true`

  %% Unique:
  %%    _130
  _236 = succeeded:body _130
  br _236, ^347, ^1

347:
  %% guard_SUITE.erl:1118
  %% Result type:
  %%    'c'
  _131 = call (`do_complex_guard_2`/3), `other`, `false`, `false`

  %% Unique:
  %%    _131
  _239 = succeeded:body _131
  br _239, ^344, ^1

344:
  %% guard_SUITE.erl:1119
  %% Result type:
  %%    'c'
  _132 = call (`do_complex_guard_2`/3), `other`, `true`, `true`

  %% Unique:
  %%    _132
  _242 = succeeded:body _132
  br _242, ^341, ^1

341:
  %% guard_SUITE.erl:1120
  %% Result type:
  %%    'c'
  _133 = call (`do_complex_guard_2`/3), `other`, `true`, `false`

  %% Unique:
  %%    _133
  _245 = succeeded:body _133
  br _245, ^338, ^1

338:
  %% guard_SUITE.erl:1122
  %% Result type:
  %%    'c'
  _134 = call (`do_complex_guard_2`/3), `false`, `other`, `true`

  %% Unique:
  %%    _134
  _248 = succeeded:body _134
  br _248, ^335, ^1

335:
  %% guard_SUITE.erl:1123
  %% Result type:
  %%    'a' | 'c'
  _135 = call (`do_complex_guard_2`/3), `false`, `other`, `false`

  %% Unique:
  %%    _135
  _251 = succeeded:body _135
  br _251, ^251, ^1

251:
  %% Argument types:
  %%    _135 => 'a' | 'c'
  %% Unique:
  %%    _135
  _333 = bif:'=:=' _135, `c`
  br _333, ^332, ^253

332:
  %% guard_SUITE.erl:1124
  %% Result type:
  %%    'c'
  _136 = call (`do_complex_guard_2`/3), `true`, `other`, `true`

  %% Unique:
  %%    _136
  _254 = succeeded:body _136
  br _254, ^329, ^1

329:
  %% guard_SUITE.erl:1125
  %% Result type:
  %%    'a' | 'c'
  _137 = call (`do_complex_guard_2`/3), `true`, `other`, `false`

  %% Unique:
  %%    _137
  _257 = succeeded:body _137
  br _257, ^257, ^1

257:
  %% Argument types:
  %%    _137 => 'a' | 'c'
  %% Unique:
  %%    _137
  _327 = bif:'=:=' _137, `a`
  br _327, ^326, ^259

326:
  %% guard_SUITE.erl:1127
  %% Result type:
  %%    'c'
  _138 = call (`do_complex_guard_2`/3), `false`, `false`, `other`

  %% Unique:
  %%    _138
  _260 = succeeded:body _138
  br _260, ^323, ^1

323:
  %% guard_SUITE.erl:1128
  %% Result type:
  %%    'c'
  _139 = call (`do_complex_guard_2`/3), `false`, `true`, `other`

  %% Unique:
  %%    _139
  _263 = succeeded:body _139
  br _263, ^320, ^1

320:
  %% guard_SUITE.erl:1129
  %% Result type:
  %%    'c'
  _140 = call (`do_complex_guard_2`/3), `true`, `false`, `other`

  %% Unique:
  %%    _140
  _266 = succeeded:body _140
  br _266, ^317, ^1

317:
  %% guard_SUITE.erl:1130
  %% Result type:
  %%    'c'
  _141 = call (`do_complex_guard_2`/3), `true`, `true`, `other`

  %% Unique:
  %%    _141
  _269 = succeeded:body _141
  br _269, ^314, ^1

314:
  %% guard_SUITE.erl:1132
  %% Result type:
  %%    'c'
  _142 = call (`do_complex_guard_2`/3), `false`, `other`, `other`

  %% Unique:
  %%    _142
  _272 = succeeded:body _142
  br _272, ^311, ^1

311:
  %% guard_SUITE.erl:1133
  %% Result type:
  %%    'c'
  _143 = call (`do_complex_guard_2`/3), `true`, `other`, `other`

  %% Unique:
  %%    _143
  _275 = succeeded:body _143
  br _275, ^308, ^1

308:
  %% guard_SUITE.erl:1134
  %% Result type:
  %%    'c'
  _144 = call (`do_complex_guard_2`/3), `other`, `other`, `true`

  %% Unique:
  %%    _144
  _278 = succeeded:body _144
  br _278, ^305, ^1

305:
  %% guard_SUITE.erl:1135
  %% Result type:
  %%    'c'
  _145 = call (`do_complex_guard_2`/3), `other`, `other`, `false`

  %% Unique:
  %%    _145
  _281 = succeeded:body _145
  br _281, ^302, ^1

302:
  %% guard_SUITE.erl:1136
  %% Result type:
  %%    'c'
  _146 = call (`do_complex_guard_2`/3), `other`, `false`, `other`

  %% Unique:
  %%    _146
  _284 = succeeded:body _146
  br _284, ^299, ^1

299:
  %% guard_SUITE.erl:1137
  %% Result type:
  %%    'c'
  _147 = call (`do_complex_guard_2`/3), `other`, `true`, `other`

  %% Unique:
  %%    _147
  _287 = succeeded:body _147
  br _287, ^296, ^1

296:
  %% guard_SUITE.erl:1139
  %% Result type:
  %%    'c'
  _148 = call (`do_complex_guard_2`/3), `other`, `other`, `other`

  %% Unique:
  %%    _148
  _290 = succeeded:body _148
  br _290, ^293, ^1

293:
  %% Result type:
  %%    'ok'
  ret `ok`

259:
  %% guard_SUITE.erl:1125
  _191 = match_fail `badmatch`, `c`

  %% Unique:
  %%    _191
  _328 = succeeded:body _191
  br ^1

253:
  %% guard_SUITE.erl:1123
  _193 = match_fail `badmatch`, `a`

  %% Unique:
  %%    _193
  _334 = succeeded:body _193
  br ^1

235:
  %% guard_SUITE.erl:1115
  _199 = match_fail `badmatch`, `c`

  %% Unique:
  %%    _199
  _352 = succeeded:body _199
  br ^1

229:
  %% guard_SUITE.erl:1113
  _201 = match_fail `badmatch`, `c`

  %% Unique:
  %%    _201
  _358 = succeeded:body _201
  br ^1

223:
  %% guard_SUITE.erl:1110
  _203 = match_fail `badmatch`, `c`

  %% Unique:
  %%    _203
  _364 = succeeded:body _203
  br ^1

217:
  %% guard_SUITE.erl:1108
  _205 = match_fail `badmatch`, `a`

  %% Unique:
  %%    _205
  _370 = succeeded:body _205
  br ^1

214:
  %% guard_SUITE.erl:1107
  _206 = match_fail `badmatch`, `c`

  %% Unique:
  %%    _206
  _373 = succeeded:body _206
  br ^1

1:
  _207 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _207
}

%% guard_SUITE.erl:1143
%% Counter = 83
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..5
%%    _1 =>
%%     0..6
%%    _2 =>
%%     1..5
function `guard_SUITE`:`do_complex_guard_1`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  switch _0, ^62, [
    { `4`, ^66 },
    { `5`, ^66 }
  ]

66:
  %% Argument types:
  %%    
  switch _1, ^62, [
    { `4`, ^64 },
    { `5`, ^64 }
  ]

64:
  %% Argument types:
  %%    
  switch _2, ^62, [
    { `4`, ^51 },
    { `5`, ^51 }
  ]

62:
  %% Argument types:
  %%    
  switch _0, ^35, [
    { `1`, ^60 },
    { `2`, ^60 },
    { `3`, ^60 }
  ]

60:
  %% Argument types:
  %%    
  switch _1, ^35, [
    { `1`, ^57 },
    { `2`, ^57 },
    { `3`, ^57 }
  ]

57:
  %% Argument types:
  %%    
  switch _2, ^35, [
    { `1`, ^51 },
    { `2`, ^51 },
    { `3`, ^51 }
  ]

51:
  %% Result type:
  %%    'true'
  ret `true`

35:
  %% guard_SUITE.erl:1144
  _32 = match_fail `if_clause`

  %% Unique:
  %%    _32
  _52 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% guard_SUITE.erl:1154
%% Counter = 59
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'other' | 'true'
%%    _1 =>
%%     'false' | 'other' | 'true'
%%    _2 =>
%%     'false' | 'other' | 'true'
function `guard_SUITE`:`do_complex_guard_2`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  switch _0, ^32, [
    { `false`, ^34 },
    { `true`, ^42 }
  ]

34:
  %% Unique:
  %%    _1
  _55 = bif:'=:=' _1, `true`
  br _55, ^42, ^32

42:
  %% Argument types:
  %%    
  switch _2, ^31, [
    { `false`, ^43 },
    { `true`, ^53 }
  ]

43:
  %% Result type:
  %%    'a'
  ret `a`

32:
  %% Unique:
  %%    _2
  _56 = bif:'=:=' _2, `true`
  br _56, ^53, ^31

53:
  %% Unique:
  %%    _0
  _57 = bif:'=:=' _0, `false`
  br _57, ^51, ^31

51:
  %% Unique:
  %%    _1
  _58 = bif:'=:=' _1, `false`
  br _58, ^54, ^31

54:
  %% Result type:
  %%    'b'
  ret `b`

31:
  %% Result type:
  %%    'c'
  ret `c`
}

%% guard_SUITE.erl:1161
%% Counter = 48
%% bs_ensure_opt: true
function `guard_SUITE`:`gbif`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _20 = bif:is_list _0
  br _20, ^20, ^19

20:
  %% guard_SUITE.erl:1162
  %% Result type:
  %%    'error' | 'ok'
  _8 = call (`gbif_1`/2), `1`, `{false,true}`

  %% Unique:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    _8 => 'error' | 'ok'
  %% Unique:
  %%    _8
  _45 = bif:'=:=' _8, `error`
  br _45, ^44, ^23

44:
  %% guard_SUITE.erl:1163
  %% Result type:
  %%    'error' | 'ok'
  _9 = call (`gbif_1`/2), `2`, `{false,true}`

  %% Unique:
  %%    _9
  _24 = succeeded:body _9
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    _9 => 'error' | 'ok'
  %% Unique:
  %%    _9
  _42 = bif:'=:=' _9, `ok`
  br _42, ^41, ^26

41:
  %% guard_SUITE.erl:1165
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _3 = call (`id`/1), `0`

  %% Aliased:
  %%    _3
  _27 = succeeded:body _3
  br _27, ^27, ^1

27:
  %% guard_SUITE.erl:1165
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _3
  _10 = call (`gbif_2`/1), _3

  %% Unique:
  %%    _10
  _28 = succeeded:body _10
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %% Unique:
  %%    _10
  _39 = bif:'=:=' _10, `error`
  br _39, ^38, ^30

38:
  %% guard_SUITE.erl:1166
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _5 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _5
  _31 = succeeded:body _5
  br _31, ^31, ^1

31:
  %% guard_SUITE.erl:1166
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _5
  _11 = call (`gbif_2`/1), _5

  %% Unique:
  %%    _11
  _32 = succeeded:body _11
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    _11 => 'error' | 'ok'
  %% Unique:
  %%    _11
  _36 = bif:'=:=' _11, `error`
  br _36, ^35, ^34

35:
  %% Result type:
  %%    'ok'
  ret `ok`

34:
  %% guard_SUITE.erl:1166
  _12 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _12
  _37 = succeeded:body _12
  br ^1

30:
  %% guard_SUITE.erl:1165
  _13 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _13
  _40 = succeeded:body _13
  br ^1

26:
  %% guard_SUITE.erl:1163
  _14 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _14
  _43 = succeeded:body _14
  br ^1

23:
  %% guard_SUITE.erl:1162
  _15 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _15
  _46 = succeeded:body _15
  br ^1

19:
  %% guard_SUITE.erl:1161
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-gbif/1-',1}}
  _16 = match_fail `function_clause`, _0

  %% Unique:
  %%    _16
  _47 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% guard_SUITE.erl:1170
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..2
%%    _1 =>
%%     {'false', 'true'}
function `guard_SUITE`:`gbif_1`(_0, _1) {
0:
  %% guard_SUITE.erl:1170
  %% Argument types:
  %%    _0 => 1..2
  %% Unique:
  %%    _0
  _2 = bif:element _0, `{false,true}`
  br _2, ^11, ^10

11:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1173
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`gbif_2`(_0) {
0:
  %% guard_SUITE.erl:1173
  %% Argument types:
  %%    
  %% Anno: #{unit => 8}
  _5 = bs_create_bin `integer`, `[1,{segment,1}]`, `true`, `8`

  %% Aliased:
  %%    _5
  _20 = succeeded:guard _5
  br _20, ^20, ^18

20:
  %% guard_SUITE.erl:1173
  %% Argument types:
  %%    _5 => bitstring(8)
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0, 
  %%    _5
  _13 = bif:'=:=' _5, _0
  br _13, ^23, ^24

23:
  br ^21

24:
  br ^21

21:
  _7 = phi { `0`, ^23 }, { `true`, ^24 }

  %% guard_SUITE.erl:1173
  %% Argument types:
  %%    _7 => 'true' | 0
  %% Unique:
  %%    _7
  _8 = bif:'+' _7, `1`

  %% Unique:
  %%    _8
  _25 = succeeded:guard _8
  br _25, ^26, ^18

26:
  %% guard_SUITE.erl:1173
  %% Argument types:
  %%    _8 => 1
  %% Unique:
  %%    _8
  _10 = bif:'bnot' _8

  %% Unique:
  %%    _10
  _27 = succeeded:guard _10
  br _27, ^27, ^18

27:
  %% Argument types:
  %%    _10 => -2
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _10
  _28 = bif:'=:=' _10, _0
  br _28, ^28, ^18

28:
  %% Result type:
  %%    'ok'
  ret `ok`

18:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1178
%% Counter = 398
%% bs_ensure_opt: true
function `guard_SUITE`:`t_is_boolean`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _156 = bif:is_list _0
  br _156, ^156, ^155

156:
  %% guard_SUITE.erl:1181
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _3 = call (`id`/1), `true`

  %% Aliased:
  %%    _3
  _157 = succeeded:body _3
  br _157, ^157, ^1

157:
  %% guard_SUITE.erl:1181
  %% Argument types:
  %%    _3 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _3
  _76 = bif:is_boolean _3
  br _76, ^388, ^159

388:
  %% guard_SUITE.erl:1182
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _5 = call (`id`/1), `false`

  %% Aliased:
  %%    _5
  _160 = succeeded:body _5
  br _160, ^160, ^1

160:
  %% guard_SUITE.erl:1182
  %% Argument types:
  %%    _5 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _77 = bif:is_boolean _5
  br _77, ^385, ^162

385:
  %% guard_SUITE.erl:1185
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _8 = call (`id`/1), `glurf`

  %% Aliased:
  %%    _8
  _163 = succeeded:body _8
  br _163, ^163, ^1

163:
  %% guard_SUITE.erl:1185
  %% Argument types:
  %%    _8 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _8
  _78 = bif:is_boolean _8
  br _78, ^165, ^382

165:
  %% guard_SUITE.erl:1185
  _149 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _149
  _384 = succeeded:body _149
  br ^1

382:
  %% guard_SUITE.erl:1188
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _11 = call (`id`/1), `[]`

  %% Aliased:
  %%    _11
  _166 = succeeded:body _11
  br _166, ^166, ^1

166:
  %% guard_SUITE.erl:1188
  %% Argument types:
  %%    _11 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _11
  _79 = bif:is_boolean _11
  br _79, ^168, ^379

168:
  %% guard_SUITE.erl:1188
  _148 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _148
  _381 = succeeded:body _148
  br ^1

379:
  %% guard_SUITE.erl:1190
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _15 = call (`id`/1), `-42`

  %% Aliased:
  %%    _15
  _169 = succeeded:body _15
  br _169, ^169, ^1

169:
  %% guard_SUITE.erl:1190
  %% Argument types:
  %%    _15 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _15
  _80 = bif:is_boolean _15
  br _80, ^171, ^376

171:
  %% guard_SUITE.erl:1190
  _147 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _147
  _378 = succeeded:body _147
  br ^1

376:
  %% guard_SUITE.erl:1195
  %% Argument types:
  %%    
  _20 = bif:self

  %% guard_SUITE.erl:1195
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _20
  _21 = call (`id`/1), _20

  %% Aliased:
  %%    _21
  _172 = succeeded:body _21
  br _172, ^172, ^1

172:
  %% guard_SUITE.erl:1195
  %% Argument types:
  %%    _21 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _21
  _81 = bif:is_boolean _21
  br _81, ^174, ^373

174:
  %% guard_SUITE.erl:1195
  _146 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _146
  _375 = succeeded:body _146
  br ^1

373:
  %% guard_SUITE.erl:1196
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _23 = call (`id`/1), `{x,y,z}`

  %% Aliased:
  %%    _23
  _175 = succeeded:body _23
  br _175, ^175, ^1

175:
  %% guard_SUITE.erl:1196
  %% Argument types:
  %%    _23 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _23
  _82 = bif:is_boolean _23
  br _82, ^177, ^370

177:
  %% guard_SUITE.erl:1196
  _145 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _145
  _372 = succeeded:body _145
  br ^1

370:
  %% guard_SUITE.erl:1197
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _25 = call (`id`/1), `[a,b,c]`

  %% Aliased:
  %%    _25
  _178 = succeeded:body _25
  br _178, ^178, ^1

178:
  %% guard_SUITE.erl:1197
  %% Argument types:
  %%    _25 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _25
  _83 = bif:is_boolean _25
  br _83, ^180, ^367

180:
  %% guard_SUITE.erl:1197
  _144 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _144
  _369 = succeeded:body _144
  br ^1

367:
  %% guard_SUITE.erl:1198
  _27 = call (`erlang`:`make_ref`/0)

  %% guard_SUITE.erl:1198
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _27
  _28 = call (`id`/1), _27

  %% Aliased:
  %%    _28
  _182 = succeeded:body _28
  br _182, ^182, ^1

182:
  %% guard_SUITE.erl:1198
  %% Argument types:
  %%    _28 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _28
  _84 = bif:is_boolean _28
  br _84, ^184, ^364

184:
  %% guard_SUITE.erl:1198
  _143 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _143
  _366 = succeeded:body _143
  br ^1

364:
  %% guard_SUITE.erl:1199
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _30 = call (`id`/1), `<<1,2,3>>`

  %% Aliased:
  %%    _30
  _185 = succeeded:body _30
  br _185, ^185, ^1

185:
  %% guard_SUITE.erl:1199
  %% Argument types:
  %%    _30 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _30
  _85 = bif:is_boolean _30
  br _85, ^187, ^361

187:
  %% guard_SUITE.erl:1199
  _142 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _142
  _363 = succeeded:body _142
  br ^1

361:
  %% guard_SUITE.erl:1200
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _32 = call (`id`/1), `x`

  %% Aliased:
  %%    _32
  _188 = succeeded:body _32
  br _188, ^358, ^1

358:
  %% guard_SUITE.erl:1201
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _34 = call (`id`/1), `a`

  %% Aliased:
  %%    _34
  _191 = succeeded:body _34
  br _191, ^355, ^1

355:
  %% guard_SUITE.erl:1203
  %% Result type:
  %%    'error' | 'ok'
  _90 = call (`bool`/1), `true`

  %% Unique:
  %%    _90
  _194 = succeeded:body _90
  br _194, ^194, ^1

194:
  %% Argument types:
  %%    _90 => 'error' | 'ok'
  %% Unique:
  %%    _90
  _353 = bif:'=:=' _90, `ok`
  br _353, ^352, ^196

352:
  %% guard_SUITE.erl:1204
  %% Result type:
  %%    'error' | 'ok'
  _91 = call (`bool`/1), `false`

  %% Unique:
  %%    _91
  _197 = succeeded:body _91
  br _197, ^197, ^1

197:
  %% Argument types:
  %%    _91 => 'error' | 'ok'
  %% Unique:
  %%    _91
  _350 = bif:'=:=' _91, `ok`
  br _350, ^349, ^199

349:
  %% guard_SUITE.erl:1205
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _38 = call (`id`/1), `true`

  %% Aliased:
  %%    _38
  _200 = succeeded:body _38
  br _200, ^200, ^1

200:
  %% guard_SUITE.erl:1205
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _38
  _92 = call (`bool`/1), _38

  %% Unique:
  %%    _92
  _201 = succeeded:body _92
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    _92 => 'error' | 'ok'
  %% Unique:
  %%    _92
  _347 = bif:'=:=' _92, `ok`
  br _347, ^346, ^203

346:
  %% guard_SUITE.erl:1206
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _40 = call (`id`/1), `false`

  %% Aliased:
  %%    _40
  _204 = succeeded:body _40
  br _204, ^204, ^1

204:
  %% guard_SUITE.erl:1206
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _40
  _93 = call (`bool`/1), _40

  %% Unique:
  %%    _93
  _205 = succeeded:body _93
  br _205, ^205, ^1

205:
  %% Argument types:
  %%    _93 => 'error' | 'ok'
  %% Unique:
  %%    _93
  _344 = bif:'=:=' _93, `ok`
  br _344, ^343, ^207

343:
  %% guard_SUITE.erl:1208
  %% Result type:
  %%    'error'
  _94 = call (`bool`/1), `glurf`

  %% Unique:
  %%    _94
  _208 = succeeded:body _94
  br _208, ^340, ^1

340:
  %% guard_SUITE.erl:1209
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _43 = call (`id`/1), `glurf`

  %% Aliased:
  %%    _43
  _211 = succeeded:body _43
  br _211, ^211, ^1

211:
  %% guard_SUITE.erl:1209
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _43
  _95 = call (`bool`/1), _43

  %% Unique:
  %%    _95
  _212 = succeeded:body _95
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    _95 => 'error' | 'ok'
  %% Unique:
  %%    _95
  _338 = bif:'=:=' _95, `error`
  br _338, ^337, ^214

337:
  %% guard_SUITE.erl:1211
  %% Result type:
  %%    'error'
  _96 = call (`bool`/1), `[]`

  %% Unique:
  %%    _96
  _215 = succeeded:body _96
  br _215, ^334, ^1

334:
  %% guard_SUITE.erl:1212
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _46 = call (`id`/1), `[]`

  %% Aliased:
  %%    _46
  _218 = succeeded:body _46
  br _218, ^218, ^1

218:
  %% guard_SUITE.erl:1212
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _46
  _97 = call (`bool`/1), _46

  %% Unique:
  %%    _97
  _219 = succeeded:body _97
  br _219, ^219, ^1

219:
  %% Argument types:
  %%    _97 => 'error' | 'ok'
  %% Unique:
  %%    _97
  _332 = bif:'=:=' _97, `error`
  br _332, ^331, ^221

331:
  %% guard_SUITE.erl:1213
  %% Result type:
  %%    'error'
  _98 = call (`bool`/1), `42`

  %% Unique:
  %%    _98
  _222 = succeeded:body _98
  br _222, ^328, ^1

328:
  %% guard_SUITE.erl:1214
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _50 = call (`id`/1), `-42`

  %% Aliased:
  %%    _50
  _225 = succeeded:body _50
  br _225, ^225, ^1

225:
  %% guard_SUITE.erl:1214
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _50
  _99 = call (`bool`/1), _50

  %% Unique:
  %%    _99
  _226 = succeeded:body _99
  br _226, ^226, ^1

226:
  %% Argument types:
  %%    _99 => 'error' | 'ok'
  %% Unique:
  %%    _99
  _326 = bif:'=:=' _99, `error`
  br _326, ^325, ^228

325:
  %% guard_SUITE.erl:1216
  %% Result type:
  %%    'error'
  _100 = call (`bool`/1), `3.141592653589793`

  %% Unique:
  %%    _100
  _229 = succeeded:body _100
  br _229, ^322, ^1

322:
  %% guard_SUITE.erl:1217
  %% Result type:
  %%    'error'
  _101 = call (`bool`/1), `384793478934378924978439789873478934897`

  %% Unique:
  %%    _101
  _232 = succeeded:body _101
  br _232, ^319, ^1

319:
  %% guard_SUITE.erl:1219
  %% Argument types:
  %%    
  _55 = bif:self

  %% guard_SUITE.erl:1219
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _55
  _56 = call (`id`/1), _55

  %% Aliased:
  %%    _56
  _235 = succeeded:body _56
  br _235, ^235, ^1

235:
  %% guard_SUITE.erl:1219
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _56
  _102 = call (`bool`/1), _56

  %% Unique:
  %%    _102
  _236 = succeeded:body _102
  br _236, ^236, ^1

236:
  %% Argument types:
  %%    _102 => 'error' | 'ok'
  %% Unique:
  %%    _102
  _317 = bif:'=:=' _102, `error`
  br _317, ^316, ^238

316:
  %% guard_SUITE.erl:1220
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _58 = call (`id`/1), `{x,y,z}`

  %% Aliased:
  %%    _58
  _239 = succeeded:body _58
  br _239, ^239, ^1

239:
  %% guard_SUITE.erl:1220
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _58
  _103 = call (`bool`/1), _58

  %% Unique:
  %%    _103
  _240 = succeeded:body _103
  br _240, ^240, ^1

240:
  %% Argument types:
  %%    _103 => 'error' | 'ok'
  %% Unique:
  %%    _103
  _314 = bif:'=:=' _103, `error`
  br _314, ^313, ^242

313:
  %% guard_SUITE.erl:1221
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _60 = call (`id`/1), `[a,b,c]`

  %% Aliased:
  %%    _60
  _243 = succeeded:body _60
  br _243, ^243, ^1

243:
  %% guard_SUITE.erl:1221
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _60
  _104 = call (`bool`/1), _60

  %% Unique:
  %%    _104
  _244 = succeeded:body _104
  br _244, ^244, ^1

244:
  %% Argument types:
  %%    _104 => 'error' | 'ok'
  %% Unique:
  %%    _104
  _311 = bif:'=:=' _104, `error`
  br _311, ^310, ^246

310:
  %% guard_SUITE.erl:1222
  _62 = call (`erlang`:`make_ref`/0)

  %% guard_SUITE.erl:1222
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _62
  _63 = call (`id`/1), _62

  %% Aliased:
  %%    _63
  _248 = succeeded:body _63
  br _248, ^248, ^1

248:
  %% guard_SUITE.erl:1222
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _63
  _105 = call (`bool`/1), _63

  %% Unique:
  %%    _105
  _249 = succeeded:body _105
  br _249, ^249, ^1

249:
  %% Argument types:
  %%    _105 => 'error' | 'ok'
  %% Unique:
  %%    _105
  _308 = bif:'=:=' _105, `error`
  br _308, ^307, ^251

307:
  %% guard_SUITE.erl:1223
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _65 = call (`id`/1), `<<1,2,3>>`

  %% Aliased:
  %%    _65
  _252 = succeeded:body _65
  br _252, ^252, ^1

252:
  %% guard_SUITE.erl:1223
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _65
  _106 = call (`bool`/1), _65

  %% Unique:
  %%    _106
  _253 = succeeded:body _106
  br _253, ^253, ^1

253:
  %% Argument types:
  %%    _106 => 'error' | 'ok'
  %% Unique:
  %%    _106
  _305 = bif:'=:=' _106, `error`
  br _305, ^304, ^255

304:
  %% guard_SUITE.erl:1225
  %% Result type:
  %%    'false' | 'true'
  _107 = call (`my_is_bool`/1), `true`

  %% Unique:
  %%    _107
  _256 = succeeded:body _107
  br _256, ^256, ^1

256:
  br _107, ^301, ^258

301:
  %% guard_SUITE.erl:1226
  %% Result type:
  %%    'false' | 'true'
  _108 = call (`my_is_bool`/1), `false`

  %% Unique:
  %%    _108
  _259 = succeeded:body _108
  br _259, ^259, ^1

259:
  br _108, ^298, ^261

298:
  %% guard_SUITE.erl:1227
  %% Result type:
  %%    'false' | 'true'
  _109 = call (`my_is_bool`/1), `[]`

  %% Unique:
  %%    _109
  _262 = succeeded:body _109
  br _262, ^262, ^1

262:
  br _109, ^264, ^295

264:
  %% guard_SUITE.erl:1227
  _120 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _120
  _297 = succeeded:body _120
  br ^1

295:
  %% guard_SUITE.erl:1228
  %% Result type:
  %%    'false' | 'true'
  _110 = call (`my_is_bool`/1), `[1,2,3,4]`

  %% Unique:
  %%    _110
  _265 = succeeded:body _110
  br _265, ^265, ^1

265:
  br _110, ^267, ^292

267:
  %% guard_SUITE.erl:1228
  _119 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _119
  _294 = succeeded:body _119
  br ^1

292:
  %% guard_SUITE.erl:1229
  %% Result type:
  %%    'false' | 'true'
  _111 = call (`my_is_bool`/1), `{a,b,c}`

  %% Unique:
  %%    _111
  _268 = succeeded:body _111
  br _268, ^268, ^1

268:
  br _111, ^270, ^289

270:
  %% guard_SUITE.erl:1229
  _118 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _118
  _291 = succeeded:body _118
  br ^1

289:
  %% guard_SUITE.erl:1232
  %% Result type:
  %%    'ok'
  _112 = call (`bool_semi`/1), `true`

  %% Unique:
  %%    _112
  _271 = succeeded:body _112
  br _271, ^286, ^1

286:
  %% guard_SUITE.erl:1233
  %% Result type:
  %%    'ok'
  _113 = call (`bool_semi`/1), `false`

  %% Unique:
  %%    _113
  _274 = succeeded:body _113
  br _274, ^283, ^1

283:
  %% guard_SUITE.erl:1234
  %% Result type:
  %%    'error'
  _114 = call (`bool_semi`/1), `a`

  %% Unique:
  %%    _114
  _277 = succeeded:body _114
  br _277, ^280, ^1

280:
  %% Result type:
  %%    'ok'
  ret `ok`

261:
  %% guard_SUITE.erl:1226
  _121 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _121
  _300 = succeeded:body _121
  br ^1

258:
  %% guard_SUITE.erl:1225
  _122 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _122
  _303 = succeeded:body _122
  br ^1

255:
  %% guard_SUITE.erl:1223
  _123 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _123
  _306 = succeeded:body _123
  br ^1

251:
  %% guard_SUITE.erl:1222
  _124 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _124
  _309 = succeeded:body _124
  br ^1

246:
  %% guard_SUITE.erl:1221
  _125 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _125
  _312 = succeeded:body _125
  br ^1

242:
  %% guard_SUITE.erl:1220
  _126 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _126
  _315 = succeeded:body _126
  br ^1

238:
  %% guard_SUITE.erl:1219
  _127 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _127
  _318 = succeeded:body _127
  br ^1

228:
  %% guard_SUITE.erl:1214
  _130 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _130
  _327 = succeeded:body _130
  br ^1

221:
  %% guard_SUITE.erl:1212
  _132 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _132
  _333 = succeeded:body _132
  br ^1

214:
  %% guard_SUITE.erl:1209
  _134 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _134
  _339 = succeeded:body _134
  br ^1

207:
  %% guard_SUITE.erl:1206
  _136 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _136
  _345 = succeeded:body _136
  br ^1

203:
  %% guard_SUITE.erl:1205
  _137 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _137
  _348 = succeeded:body _137
  br ^1

199:
  %% guard_SUITE.erl:1204
  _138 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _138
  _351 = succeeded:body _138
  br ^1

196:
  %% guard_SUITE.erl:1203
  _139 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _139
  _354 = succeeded:body _139
  br ^1

162:
  %% guard_SUITE.erl:1182
  _150 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _150
  _387 = succeeded:body _150
  br ^1

159:
  %% guard_SUITE.erl:1181
  _151 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _151
  _390 = succeeded:body _151
  br ^1

155:
  %% guard_SUITE.erl:1178
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_is_boolean/1-',1}}
  _152 = match_fail `function_clause`, _0

  %% Unique:
  %%    _152
  _391 = succeeded:body _152
  br ^1

1:
  _153 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _153
}

%% guard_SUITE.erl:1238
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`bool`(_0) {
0:
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _6 = bif:is_boolean _0
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'ok'
  ret `ok`

5:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1241
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | list(1..4) | {'a', 'b', 'c'}
function `guard_SUITE`:`my_is_bool`(_0) {
0:
  %% guard_SUITE.erl:1242
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  Res = call (`my_is_bool_a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% guard_SUITE.erl:1243
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _4 = call (`my_is_bool_b`/1), _0

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _4 => 'false' | 'true'
  %%    Res => 'false' | 'true'
  %% Unique:
  %%    _4, 
  %%    Res
  _13 = bif:'=:=' _4, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _4
  ret _4

12:
  %% guard_SUITE.erl:1243
  %% Unique:
  %%    _4
  _6 = match_fail `badmatch`, _4

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% guard_SUITE.erl:1245
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | list(1..4) | {'a', 'b', 'c'}
function `guard_SUITE`:`my_is_bool_a`(_0) {
0:
  %% Aliased:
  %%    _0
  _8 = bif:is_boolean _0
  ret _8
}

%% guard_SUITE.erl:1252
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | list(1..4) | {'a', 'b', 'c'}
function `guard_SUITE`:`my_is_bool_b`(_0) {
0:
  %% Aliased:
  %%    _0
  _8 = bif:is_boolean _0
  ret _8
}

%% guard_SUITE.erl:1259
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'false' | 'true'
function `guard_SUITE`:`bool_semi`(_0) {
0:
  %% guard_SUITE.erl:1259
  %% Argument types:
  %%    _0 => 'a' | 'false' | 'true'
  %% Unique:
  %%    _0
  _1 = bif:is_boolean _0
  br _1, ^16, ^11

16:
  %% Result type:
  %%    'ok'
  ret `ok`

11:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1262
%% Counter = 201
%% bs_ensure_opt: true
function `guard_SUITE`:`is_function_2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _63 = bif:is_list _0
  br _63, ^63, ^62

63:
  %% guard_SUITE.erl:1263
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `fun guard_SUITE:all/1`

  %% Aliased:
  %%    _2
  _64 = succeeded:body _2
  br _64, ^64, ^1

64:
  %% guard_SUITE.erl:1263
  %% Argument types:
  %%    _2 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2
  _33 = bif:is_function _2, `1`
  br _33, ^154, ^67

154:
  %% Result type:
  %%    'ok'
  _4 = make_fun (`'-is_function_2/1-fun-0-'`/0)

  %% guard_SUITE.erl:1264
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _5 = call (`id`/1), _4

  %% Aliased:
  %%    _5
  _68 = succeeded:body _5
  br _68, ^68, ^1

68:
  %% guard_SUITE.erl:1264
  %% Argument types:
  %%    _5 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _34 = bif:is_function _5, `0`
  br _34, ^151, ^71

151:
  %% guard_SUITE.erl:1265
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _8 = call (`id`/1), `fun guard_SUITE:all/1`

  %% Aliased:
  %%    _8
  _72 = succeeded:body _8
  br _72, ^72, ^1

72:
  %% guard_SUITE.erl:1265
  %% Argument types:
  %%    _8 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _8
  _35 = bif:is_function _8, `0`
  br _35, ^75, ^148

75:
  %% guard_SUITE.erl:1265
  _56 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _56
  _150 = succeeded:body _56
  br ^1

148:
  %% Result type:
  %%    'ok'
  _10 = make_fun (`'-is_function_2/1-fun-1-'`/0)

  %% guard_SUITE.erl:1266
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _10
  _11 = call (`id`/1), _10

  %% Aliased:
  %%    _11
  _76 = succeeded:body _11
  br _76, ^76, ^1

76:
  %% guard_SUITE.erl:1266
  %% Argument types:
  %%    _11 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _11
  _36 = bif:is_function _11, `1`
  br _36, ^79, ^145

79:
  %% guard_SUITE.erl:1266
  _55 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _55
  _147 = succeeded:body _55
  br ^1

145:
  %% Result type:
  %%    'ok'
  _15 = make_fun (`'-is_function_2/1-fun-2-'`/0)
  _83 = new_try_tag `'catch'`
  br _83, ^166, ^82

166:
  %% guard_SUITE.erl:1268
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _15
  _16 = call (`id`/1), _15

  %% Aliased:
  %%    _16
  _85 = succeeded:body _16
  br _85, ^85, ^82

85:
  %% guard_SUITE.erl:1268
  %% Argument types:
  %%    _16 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _16
  _37 = bif:is_function _16, `-1`

  %% Unique:
  %%    _37
  _86 = succeeded:body _37
  br ^82

82:
  %% Unique:
  %%    _83
  _92 = landingpad `'catch'`, _83

  %% Aliased:
  %%    _92
  _90 = extract _92, `0`
  br ^80

80:
  %% Aliased:
  %%    _90
  %% Unique:
  %%    _83
  _18 = catch_end _83, _90

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _141 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _141, ^138, ^95

138:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _38 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _135 = is_tagged_tuple _38, `2`, `badarg`
  br _135, ^132, ^95

132:
  %% Result type:
  %%    'ok'
  _21 = make_fun (`'-is_function_2/1-fun-3-'`/0)
  _99 = new_try_tag `'catch'`
  br _99, ^167, ^98

167:
  %% guard_SUITE.erl:1270
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _21
  _22 = call (`id`/1), _21

  %% Aliased:
  %%    _22
  _101 = succeeded:body _22
  br _101, ^101, ^98

101:
  %% guard_SUITE.erl:1270
  %% Argument types:
  %%    _22 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _22
  _42 = bif:is_function _22, `''`

  %% Unique:
  %%    _42
  _102 = succeeded:body _42
  br ^98

98:
  %% Unique:
  %%    _99
  _108 = landingpad `'catch'`, _99

  %% Aliased:
  %%    _108
  _106 = extract _108, `0`
  br ^96

96:
  %% Aliased:
  %%    _106
  %% Unique:
  %%    _99
  _24 = catch_end _99, _106

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _128 = is_tagged_tuple _24, `2`, `'EXIT'`
  br _128, ^125, ^111

125:
  %% Argument types:
  %%    _24 => {''EXIT'', any()}
  %% Aliased:
  %%    _24
  _43 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _122 = is_tagged_tuple _43, `2`, `badarg`
  br _122, ^112, ^111

112:
  %% guard_SUITE.erl:1277
  %% Result type:
  %%    'ok'
  _52 = call (`variable_is_function_2`/0)

  %% Unique:
  %%    _52
  _118 = succeeded:body _52
  br _118, ^200, ^1

200:
  ret _52

111:
  %% guard_SUITE.erl:1269
  %% Aliased:
  %%    _24
  _53 = match_fail `badmatch`, _24

  %% Unique:
  %%    _53
  _131 = succeeded:body _53
  br ^1

95:
  %% guard_SUITE.erl:1267
  %% Aliased:
  %%    _18
  _54 = match_fail `badmatch`, _18

  %% Unique:
  %%    _54
  _144 = succeeded:body _54
  br ^1

71:
  %% guard_SUITE.erl:1264
  _57 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _57
  _153 = succeeded:body _57
  br ^1

67:
  %% guard_SUITE.erl:1263
  _58 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _58
  _156 = succeeded:body _58
  br ^1

62:
  %% guard_SUITE.erl:1262
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-is_function_2/1-',1}}
  _59 = match_fail `function_clause`, _0

  %% Unique:
  %%    _59
  _157 = succeeded:body _59
  br ^1

1:
  _60 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _60
}

%% guard_SUITE.erl:1281
%% Counter = 44
%% bs_ensure_opt: true
function `guard_SUITE`:`variable_is_function_2`() {
0:
  %% Result type:
  %%    'ok'
  F = make_fun (`'-variable_is_function_2/0-fun-0-'`/0)

  %% guard_SUITE.erl:1283
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    F
  _2 = call (`id`/1), F

  %% Aliased:
  %%    _2
  _22 = succeeded:body _2
  br _22, ^22, ^1

22:
  %% guard_SUITE.erl:1283
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1 = call (`id`/1), `0`

  %% Aliased:
  %%    _1
  _23 = succeeded:body _1
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    _2 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2
  _10 = put_list _2, `[]`

  %% guard_SUITE.erl:1283
  %% Result type:
  %%    list(fun())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _10
  _11 = call (`vif_1`/3), _10, _1, `[]`

  %% Unique:
  %%    _11
  _24 = succeeded:body _11
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _11
  _39 = is_nonempty_list _11
  br _39, ^39, ^26

39:
  %% Argument types:
  %%    _11 => nonempty_list(fun())
  %% Unique:
  %%    _11
  _13 = get_hd _11

  %% Argument types:
  %%    _11 => nonempty_list(fun())
  %% Unique:
  %%    _11
  _12 = get_tl _11

  %% Argument types:
  %%    _12 => list(fun())
  %% Unique:
  %%    _12
  _38 = bif:'=:=' _12, `[]`
  br _38, ^38, ^26

38:
  %% Argument types:
  %%    _13 => fun()
  %%    F => fun(() -> 'ok')
  %% Aliased:
  %%    _13, 
  %%    F
  _27 = bif:'=:=' _13, F
  br _27, ^27, ^26

27:
  %% guard_SUITE.erl:1284
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    F
  _6 = call (`id`/1), F

  %% Aliased:
  %%    _6
  _28 = succeeded:body _6
  br _28, ^28, ^1

28:
  %% guard_SUITE.erl:1284
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _4 = call (`id`/1), `0`

  %% Aliased:
  %%    _4
  _29 = succeeded:body _4
  br _29, ^29, ^1

29:
  %% guard_SUITE.erl:1284
  %% Argument types:
  %%    _4 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _5 = bif:'band' _4, `15`

  %% Unique:
  %%    _5
  _30 = succeeded:body _5
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _6 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _6
  _14 = put_list _6, `[]`

  %% guard_SUITE.erl:1284
  %% Result type:
  %%    list(fun())
  %% Unique:
  %%    _5, 
  %%    _14
  _15 = call (`vif_2`/3), _14, _5, `[]`

  %% Unique:
  %%    _15
  _31 = succeeded:body _15
  br _31, ^31, ^1

31:
  %% Unique:
  %%    _15
  _36 = is_nonempty_list _15
  br _36, ^36, ^33

36:
  %% Argument types:
  %%    _15 => nonempty_list(fun())
  %% Unique:
  %%    _15
  _17 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_list(fun())
  %% Unique:
  %%    _15
  _16 = get_tl _15

  %% Argument types:
  %%    _16 => list(fun())
  %% Unique:
  %%    _16
  _35 = bif:'=:=' _16, `[]`
  br _35, ^35, ^33

35:
  %% Argument types:
  %%    _17 => fun()
  %%    F => fun(() -> 'ok')
  %% Aliased:
  %%    _17, 
  %%    F
  _34 = bif:'=:=' _17, F
  br _34, ^34, ^33

34:
  %% Result type:
  %%    'ok'
  ret `ok`

33:
  %% guard_SUITE.erl:1284
  %% Unique:
  %%    _15
  _18 = match_fail `badmatch`, _15

  %% Unique:
  %%    _18
  _37 = succeeded:body _18
  br ^1

26:
  %% guard_SUITE.erl:1283
  %% Unique:
  %%    _11
  _19 = match_fail `badmatch`, _11

  %% Unique:
  %%    _19
  _40 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% guard_SUITE.erl:1288
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other())
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _2 =>
%%     list(fun())
function `guard_SUITE`:`vif_1`(_0, _1, _2) {
0:
  %% Unique:
  %%    _0
  _21 = is_nonempty_list _0
  br _21, ^21, ^22

21:
  %% Argument types:
  %%    _0 => nonempty_list(atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other())
  %% Unique:
  %%    _0
  _9 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other())
  %% Unique:
  %%    _0
  _8 = get_tl _0

  %% guard_SUITE.erl:1288
  %% Argument types:
  %%    _9 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1, 
  %%    _9
  _3 = bif:is_function _9, _1

  %% Unique:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^15

18:
  br _3, ^19, ^15

19:
  %% Argument types:
  %%    _9 => fun()
  %%    _2 => list(fun())
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _2
  _10 = put_list _9, _2

  %% guard_SUITE.erl:1289
  %% Result type:
  %%    list(fun())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _8, 
  %%    _10
  _11 = call (`vif_1`/3), _8, _1, _10

  %% Unique:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Result type:
  %%    list(fun())
  %% Unique:
  %%    _11
  ret _11

15:
  %% guard_SUITE.erl:1288
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _0, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-vif_1/3-',3}}
  _12 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _12
  _23 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13

22:
  %% Result type:
  %%    list(fun())
  %% Unique:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:1294
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other())
%%    _1 =>
%%     0..15
%%    _2 =>
%%     list(fun())
function `guard_SUITE`:`vif_2`(_0, _1, _2) {
0:
  %% Unique:
  %%    _0
  _21 = is_nonempty_list _0
  br _21, ^21, ^22

21:
  %% Argument types:
  %%    _0 => nonempty_list(atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other())
  %% Unique:
  %%    _0
  _9 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other())
  %% Unique:
  %%    _0
  _8 = get_tl _0

  %% guard_SUITE.erl:1294
  %% Argument types:
  %%    _9 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1 => 0..15
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _1
  _3 = bif:is_function _9, _1
  br _3, ^19, ^15

19:
  %% Argument types:
  %%    _9 => fun()
  %%    _2 => list(fun())
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _2
  _10 = put_list _9, _2

  %% guard_SUITE.erl:1295
  %% Result type:
  %%    list(fun())
  %% Unique:
  %%    _1, 
  %%    _8, 
  %%    _10
  _11 = call (`vif_2`/3), _8, _1, _10

  %% Unique:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Result type:
  %%    list(fun())
  %% Unique:
  %%    _11
  ret _11

15:
  %% guard_SUITE.erl:1294
  %% Unique:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-vif_2/3-',3}}
  _12 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _12
  _23 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13

22:
  %% Result type:
  %%    list(fun())
  %% Unique:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:1299
%% Counter = 275
%% bs_ensure_opt: true
function `guard_SUITE`:`tricky`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _75 = bif:is_list _0
  br _75, ^75, ^74

75:
  %% guard_SUITE.erl:1300
  %% Result type:
  %%    'not_ok'
  _26 = call (`tricky_1`/2), `1`, `2`

  %% Unique:
  %%    _26
  _76 = succeeded:body _26
  br _76, ^220, ^1

220:
  %% guard_SUITE.erl:1301
  %% Result type:
  %%    'not_ok'
  _27 = call (`tricky_1`/2), `1`, `blurf`

  %% Unique:
  %%    _27
  _79 = succeeded:body _27
  br _79, ^217, ^1

217:
  %% guard_SUITE.erl:1302
  %% Result type:
  %%    'not_ok'
  _28 = call (`tricky_1`/2), `foo`, `2`

  %% Unique:
  %%    _28
  _82 = succeeded:body _28
  br _82, ^214, ^1

214:
  %% guard_SUITE.erl:1303
  %% Result type:
  %%    'not_ok'
  _29 = call (`tricky_1`/2), `a`, `b`

  %% Unique:
  %%    _29
  _85 = succeeded:body _29
  br _85, ^211, ^1

211:
  %% guard_SUITE.erl:1305
  %% Result type:
  %%    'error'
  _30 = call (`tricky_2`/1), `0.5`

  %% Unique:
  %%    _30
  _88 = succeeded:body _30
  br _88, ^208, ^1

208:
  %% guard_SUITE.erl:1306
  %% Result type:
  %%    'error'
  _31 = call (`tricky_2`/1), `a`

  %% Unique:
  %%    _31
  _91 = succeeded:body _31
  br _91, ^205, ^1

205:
  %% guard_SUITE.erl:1307
  %% Result type:
  %%    'error'
  _32 = call (`tricky_2`/1), `{a,b,c}`

  %% Unique:
  %%    _32
  _94 = succeeded:body _32
  br _94, ^202, ^1

202:
  %% guard_SUITE.erl:1309
  %% Result type:
  %%    'false' | 'true'
  _33 = call (`rb`/3), `100000`, `[1]`, `42`

  %% Unique:
  %%    _33
  _97 = succeeded:body _33
  br _97, ^97, ^1

97:
  br _33, ^99, ^199

99:
  %% guard_SUITE.erl:1309
  _63 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _63
  _201 = succeeded:body _63
  br ^1

199:
  %% guard_SUITE.erl:1310
  %% Result type:
  %%    'true'
  _34 = call (`rb`/3), `100000`, `[]`, `42`

  %% Unique:
  %%    _34
  _100 = succeeded:body _34
  br _100, ^196, ^1

196:
  %% guard_SUITE.erl:1311
  %% Result type:
  %%    'false' | 'true'
  _35 = call (`rb`/3), `555`, `[a,b,c]`, `19`

  %% Unique:
  %%    _35
  _103 = succeeded:body _35
  br _103, ^103, ^1

103:
  br _35, ^193, ^105

193:
  %% guard_SUITE.erl:1313
  %% Result type:
  %%    'error'
  _36 = call (`tricky_3`/1), `42`

  %% Unique:
  %%    _36
  _106 = succeeded:body _36
  br _106, ^190, ^1

190:
  %% guard_SUITE.erl:1314
  %% Result type:
  %%    'error'
  _37 = call (`tricky_3`/1), `42.0`

  %% Unique:
  %%    _37
  _109 = succeeded:body _37
  br _109, ^187, ^1

187:
  %% guard_SUITE.erl:1315
  %% Result type:
  %%    'error'
  _38 = call (`tricky_3`/1), `<<>>`

  %% Unique:
  %%    _38
  _112 = succeeded:body _38
  br _112, ^184, ^1

184:
  %% guard_SUITE.erl:1316
  %% Result type:
  %%    'error'
  _39 = call (`tricky_3`/1), `#{}`

  %% Unique:
  %%    _39
  _115 = succeeded:body _39
  br _115, ^181, ^1

181:
  %% guard_SUITE.erl:1317
  %% Result type:
  %%    'error'
  _40 = call (`tricky_3`/1), `{a,b}`

  %% Unique:
  %%    _40
  _118 = succeeded:body _40
  br _118, ^269, ^1

269:
  br ^272

272:
  _124 = new_try_tag `'catch'`
  br _124, ^122, ^123

122:
  %% guard_SUITE.erl:1319
  %% Result type:
  %%    none()
  _48 = call (`tricky_4`/1), `x`

  %% Aliased:
  %%    _48
  _126 = succeeded:body _48
  br ^123

123:
  %% Unique:
  %%    _124
  _129 = landingpad `'catch'`, _124

  %% Aliased:
  %%    _129
  _127 = extract _129, `0`
  br ^121

121:
  %% Aliased:
  %%    _127
  %% Unique:
  %%    _124
  _16 = catch_end _124, _127

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _174 = is_tagged_tuple _16, `2`, `'EXIT'`
  br _174, ^270, ^132

270:
  br ^273

273:
  _136 = new_try_tag `'catch'`
  br _136, ^134, ^135

134:
  %% guard_SUITE.erl:1320
  %% Result type:
  %%    none()
  _50 = call (`tricky_4`/1), `42`

  %% Aliased:
  %%    _50
  _138 = succeeded:body _50
  br ^135

135:
  %% Unique:
  %%    _136
  _141 = landingpad `'catch'`, _136

  %% Aliased:
  %%    _141
  _139 = extract _141, `0`
  br ^133

133:
  %% Aliased:
  %%    _139
  %% Unique:
  %%    _136
  _18 = catch_end _136, _139

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _167 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _167, ^271, ^144

271:
  br ^274

274:
  _148 = new_try_tag `'catch'`
  br _148, ^146, ^147

146:
  %% guard_SUITE.erl:1321
  %% Result type:
  %%    none()
  _52 = call (`tricky_4`/1), `true`

  %% Aliased:
  %%    _52
  _150 = succeeded:body _52
  br ^147

147:
  %% Unique:
  %%    _148
  _153 = landingpad `'catch'`, _148

  %% Aliased:
  %%    _153
  _151 = extract _153, `0`
  br ^145

145:
  %% Aliased:
  %%    _151
  %% Unique:
  %%    _148
  _20 = catch_end _148, _151

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _160 = is_tagged_tuple _20, `2`, `'EXIT'`
  br _160, ^157, ^156

157:
  %% Result type:
  %%    'ok'
  ret `ok`

156:
  %% guard_SUITE.erl:1321
  %% Aliased:
  %%    _20
  _53 = match_fail `badmatch`, _20

  %% Unique:
  %%    _53
  _163 = succeeded:body _53
  br ^1

144:
  %% guard_SUITE.erl:1320
  %% Aliased:
  %%    _18
  _54 = match_fail `badmatch`, _18

  %% Unique:
  %%    _54
  _170 = succeeded:body _54
  br ^1

132:
  %% guard_SUITE.erl:1319
  %% Aliased:
  %%    _16
  _55 = match_fail `badmatch`, _16

  %% Unique:
  %%    _55
  _177 = succeeded:body _55
  br ^1

105:
  %% guard_SUITE.erl:1311
  _61 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _61
  _195 = succeeded:body _61
  br ^1

74:
  %% guard_SUITE.erl:1299
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tricky/1-',1}}
  _71 = match_fail `function_clause`, _0

  %% Unique:
  %%    _71
  _223 = succeeded:body _71
  br ^1

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% guard_SUITE.erl:1325
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'foo' | 1
%%    _1 =>
%%     'b' | 'blurf' | 2
function `guard_SUITE`:`tricky_1`(_0, _1) {
0:
  %% Result type:
  %%    'not_ok'
  ret `not_ok`
}

%% guard_SUITE.erl:1328
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 0.5 | {'a', 'b', 'c'}
function `guard_SUITE`:`tricky_2`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1331
%% Counter = 224
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(42) | {'a', 'b'} | other()
function `guard_SUITE`:`tricky_3`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1340
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'true' | 'x' | 42
function `guard_SUITE`:`tricky_4`(_0) {
0:
  %% guard_SUITE.erl:1341
  %% Argument types:
  %%    _0 => 'true' | 'x' | 42
  %% Unique:
  %%    _0
  _2 = bif:abs _0

  %% Unique:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^8, ^1

8:
  %% guard_SUITE.erl:1341
  %% Argument types:
  %%    _2 => 0..42
  %%    _2 => 0..42
  %% Unique:
  %%    _2
  _3 = bif:'or' _2, _2

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% guard_SUITE.erl:1349
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     555..100000
%%    _1 =>
%%     list('a' | 'b' | 'c' | 1)
%%    _2 =>
%%     19..42
function `guard_SUITE`:`rb`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:1349
  %% Argument types:
  %%    _2 => 19..42
  %%    _0 => 555..100000
  %% Unique:
  %%    _0, 
  %%    _2
  _3 = bif:'+' _2, _0

  %% guard_SUITE.erl:1349
  %% Argument types:
  %%    _3 => 574..100042
  %% Unique:
  %%    _3
  _14 = bif:'<' _3, `81920`
  br _14, ^22, ^28

22:
  %% Result type:
  %%    'true'
  ret `true`

28:
  %% guard_SUITE.erl:1349
  %% Argument types:
  %%    _1 => list('a' | 'b' | 'c' | 1)
  %% Unique:
  %%    _1
  _5 = bif:'=:=' _1, `[]`
  ret _5
}

%% guard_SUITE.erl:1375
%% Counter = 3698
%% bs_ensure_opt: true
function `guard_SUITE`:`rel_ops`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2789 = bif:is_list _0
  br _2789, ^2789, ^2788

2789:
  %% guard_SUITE.erl:1376
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2179 = call (`id`/1), `2`

  %% Aliased:
  %%    _2179
  _2790 = succeeded:body _2179
  br _2790, ^2790, ^1

2790:
  %% Argument types:
  %%    
  switch _2179, ^2792, [
    { `2`, ^2795 },
    { `3`, ^2796 }
  ]

2796:
  %% guard_SUITE.erl:1378
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `b`

  %% Aliased:
  %%    _2
  _2794 = succeeded:body _2
  br _2794, ^2794, ^1

2794:
  %% Argument types:
  %%    _2 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2
  _2412 = put_tuple `b`, _2, `c`
  br ^2791

2795:
  %% guard_SUITE.erl:1377
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1 = call (`id`/1), `b`

  %% Aliased:
  %%    _1
  _2793 = succeeded:body _1
  br _2793, ^2793, ^1

2793:
  %% Argument types:
  %%    _1 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1
  _2413 = put_tuple `a`, _1
  br ^2791

2791:
  _4 = phi { _2413, ^2793 }, { _2412, ^2794 }

  %% guard_SUITE.erl:1380
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _6 = call (`id`/1), `42`

  %% Aliased:
  %%    _6
  _2798 = succeeded:body _6
  br _2798, ^2798, ^1

2798:
  %% guard_SUITE.erl:1380
  %% Argument types:
  %%    _6 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _6
  Float = bif:float _6

  %% Aliased:
  %%    Float
  _2799 = succeeded:body Float
  br _2799, ^2799, ^1

2799:
  %% guard_SUITE.erl:1381
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _8 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _8
  _2800 = succeeded:body _8
  br _2800, ^2800, ^1

2800:
  %% guard_SUITE.erl:1381
  %% Argument types:
  %%    _8 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _8
  Int = bif:trunc _8

  %% Aliased:
  %%    Int
  _2801 = succeeded:body Int
  br _2801, ^2801, ^1

2801:
  %% guard_SUITE.erl:1383
  %% Result type:
  %%    fun(() -> integer())
  %% Aliased:
  %%    Float
  IntFunFloat = call (`make_fun`/1), Float

  %% Aliased:
  %%    IntFunFloat
  _2802 = succeeded:body IntFunFloat
  br _2802, ^2802, ^1

2802:
  %% guard_SUITE.erl:1384
  %% Result type:
  %%    fun(() -> integer())
  %% Aliased:
  %%    Int
  IntFunInt = call (`make_fun`/1), Int

  %% Aliased:
  %%    IntFunInt
  _2803 = succeeded:body IntFunInt
  br _2803, ^2803, ^1

2803:
  %% guard_SUITE.erl:1386
  %% Result type:
  %%    fun(() -> {number(), number()})
  %% Aliased:
  %%    Float
  FloatFun = call (`make_fun`/2), Float, Float

  %% Aliased:
  %%    FloatFun
  _2804 = succeeded:body FloatFun
  br _2804, ^2804, ^1

2804:
  %% guard_SUITE.erl:1387
  %% Result type:
  %%    fun(() -> {number(), number()})
  %% Aliased:
  %%    Int
  IntFun = call (`make_fun`/2), Int, Int

  %% Aliased:
  %%    IntFun
  _2805 = succeeded:body IntFun
  br _2805, ^2805, ^1

2805:
  %% guard_SUITE.erl:1388
  %% Result type:
  %%    fun(() -> {number(), number()})
  MixedFun = call (`make_fun`/2), `42`, `42.0`

  %% Aliased:
  %%    MixedFun
  _2806 = succeeded:body MixedFun
  br _2806, ^2806, ^1

2806:
  %% guard_SUITE.erl:1390
  %% Result type:
  %%    fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  MixedFun14 = call (`make_fun`/14), `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `13.0`, `14.0`

  %% Aliased:
  %%    MixedFun14
  _2807 = succeeded:body MixedFun14
  br _2807, ^2807, ^1

2807:
  %% guard_SUITE.erl:1391
  %% Result type:
  %%    fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  IntFun14 = call (`make_fun`/14), `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, `13`, `14`

  %% Aliased:
  %%    IntFun14
  _2808 = succeeded:body IntFun14
  br _2808, ^3632, ^1

3632:
  %% guard_SUITE.erl:1393
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _56 = call (`id`/1), `1`

  %% Aliased:
  %%    _56
  _2809 = succeeded:body _56
  br _2809, ^2809, ^1

2809:
  %% guard_SUITE.erl:1393
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _55 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _55
  _2810 = succeeded:body _55
  br _2810, ^2810, ^1

2810:
  %% guard_SUITE.erl:1393
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _54 = call (`id`/1), `true`

  %% Aliased:
  %%    _54
  _2811 = succeeded:body _54
  br _2811, ^2811, ^1

2811:
  %% guard_SUITE.erl:1393
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _53 = call (`id`/1), `false`

  %% Aliased:
  %%    _53
  _2812 = succeeded:body _53
  br _2812, ^2812, ^1

2812:
  %% guard_SUITE.erl:1393
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-0-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _56 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _55 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _54 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _53 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _53, 
  %%    _54, 
  %%    _55, 
  %%    _56
  _2420 = call (`'-rel_ops/1-fun-0-'`/4), _56, _55, _54, _53

  %% Unique:
  %%    _2420
  _2813 = succeeded:body _2420
  br _2813, ^3633, ^1

3633:
  %% guard_SUITE.erl:1394
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _92 = call (`id`/1), `2`

  %% Aliased:
  %%    _92
  _2814 = succeeded:body _92
  br _2814, ^2814, ^1

2814:
  %% guard_SUITE.erl:1394
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _91 = call (`id`/1), `2`

  %% Aliased:
  %%    _91
  _2815 = succeeded:body _91
  br _2815, ^2815, ^1

2815:
  %% guard_SUITE.erl:1394
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _90 = call (`id`/1), `true`

  %% Aliased:
  %%    _90
  _2816 = succeeded:body _90
  br _2816, ^2816, ^1

2816:
  %% guard_SUITE.erl:1394
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _89 = call (`id`/1), `false`

  %% Aliased:
  %%    _89
  _2817 = succeeded:body _89
  br _2817, ^2817, ^1

2817:
  %% guard_SUITE.erl:1394
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-1-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _92 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _91 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _90 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _89 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _89, 
  %%    _90, 
  %%    _91, 
  %%    _92
  _2425 = call (`'-rel_ops/1-fun-1-'`/4), _92, _91, _90, _89

  %% Unique:
  %%    _2425
  _2818 = succeeded:body _2425
  br _2818, ^3634, ^1

3634:
  %% guard_SUITE.erl:1395
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _128 = call (`id`/1), `{a}`

  %% Aliased:
  %%    _128
  _2819 = succeeded:body _128
  br _2819, ^2819, ^1

2819:
  %% guard_SUITE.erl:1395
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _127 = call (`id`/1), `{a}`

  %% Aliased:
  %%    _127
  _2820 = succeeded:body _127
  br _2820, ^2820, ^1

2820:
  %% guard_SUITE.erl:1395
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _126 = call (`id`/1), `true`

  %% Aliased:
  %%    _126
  _2821 = succeeded:body _126
  br _2821, ^2821, ^1

2821:
  %% guard_SUITE.erl:1395
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _125 = call (`id`/1), `false`

  %% Aliased:
  %%    _125
  _2822 = succeeded:body _125
  br _2822, ^2822, ^1

2822:
  %% guard_SUITE.erl:1395
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-2-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _128 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _127 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _126 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _125 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _125, 
  %%    _126, 
  %%    _127, 
  %%    _128
  _2430 = call (`'-rel_ops/1-fun-2-'`/4), _128, _127, _126, _125

  %% Unique:
  %%    _2430
  _2823 = succeeded:body _2430
  br _2823, ^3635, ^1

3635:
  %% guard_SUITE.erl:1397
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _164 = call (`id`/1), `a`

  %% Aliased:
  %%    _164
  _2824 = succeeded:body _164
  br _2824, ^2824, ^1

2824:
  %% guard_SUITE.erl:1397
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _163 = call (`id`/1), `a`

  %% Aliased:
  %%    _163
  _2825 = succeeded:body _163
  br _2825, ^2825, ^1

2825:
  %% guard_SUITE.erl:1397
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _162 = call (`id`/1), `true`

  %% Aliased:
  %%    _162
  _2826 = succeeded:body _162
  br _2826, ^2826, ^1

2826:
  %% guard_SUITE.erl:1397
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _161 = call (`id`/1), `false`

  %% Aliased:
  %%    _161
  _2827 = succeeded:body _161
  br _2827, ^2827, ^1

2827:
  %% guard_SUITE.erl:1397
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-3-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _164 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _163 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _162 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _161 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _161, 
  %%    _162, 
  %%    _163, 
  %%    _164
  _2435 = call (`'-rel_ops/1-fun-3-'`/4), _164, _163, _162, _161

  %% Unique:
  %%    _2435
  _2828 = succeeded:body _2435
  br _2828, ^3636, ^1

3636:
  %% guard_SUITE.erl:1398
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _200 = call (`id`/1), `0`

  %% Aliased:
  %%    _200
  _2829 = succeeded:body _200
  br _2829, ^2829, ^1

2829:
  %% guard_SUITE.erl:1398
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _199 = call (`id`/1), `0.0`

  %% Aliased:
  %%    _199
  _2830 = succeeded:body _199
  br _2830, ^2830, ^1

2830:
  %% guard_SUITE.erl:1398
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _198 = call (`id`/1), `true`

  %% Aliased:
  %%    _198
  _2831 = succeeded:body _198
  br _2831, ^2831, ^1

2831:
  %% guard_SUITE.erl:1398
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _197 = call (`id`/1), `false`

  %% Aliased:
  %%    _197
  _2832 = succeeded:body _197
  br _2832, ^2832, ^1

2832:
  %% guard_SUITE.erl:1398
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-4-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _200 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _199 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _198 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _197 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _197, 
  %%    _198, 
  %%    _199, 
  %%    _200
  _2440 = call (`'-rel_ops/1-fun-4-'`/4), _200, _199, _198, _197

  %% Unique:
  %%    _2440
  _2833 = succeeded:body _2440
  br _2833, ^3637, ^1

3637:
  %% guard_SUITE.erl:1399
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _240 = call (`id`/1), `0`

  %% Aliased:
  %%    _240
  _2834 = succeeded:body _240
  br _2834, ^2834, ^1

2834:
  %% guard_SUITE.erl:1399
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _239 = call (`id`/1), `1`

  %% Aliased:
  %%    _239
  _2835 = succeeded:body _239
  br _2835, ^2835, ^1

2835:
  %% guard_SUITE.erl:1399
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _238 = call (`id`/1), `true`

  %% Aliased:
  %%    _238
  _2836 = succeeded:body _238
  br _2836, ^2836, ^1

2836:
  %% guard_SUITE.erl:1399
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _237 = call (`id`/1), `false`

  %% Aliased:
  %%    _237
  _2837 = succeeded:body _237
  br _2837, ^2837, ^1

2837:
  %% guard_SUITE.erl:1399
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-5-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _240 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _239 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _238 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _237 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _237, 
  %%    _238, 
  %%    _239, 
  %%    _240
  _2446 = call (`'-rel_ops/1-fun-5-'`/4), _240, _239, _238, _237

  %% Unique:
  %%    _2446
  _2838 = succeeded:body _2446
  br _2838, ^3638, ^1

3638:
  %% guard_SUITE.erl:1400
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _276 = call (`id`/1), `{a}`

  %% Aliased:
  %%    _276
  _2839 = succeeded:body _276
  br _2839, ^2839, ^1

2839:
  %% guard_SUITE.erl:1400
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _275 = call (`id`/1), `{a}`

  %% Aliased:
  %%    _275
  _2840 = succeeded:body _275
  br _2840, ^2840, ^1

2840:
  %% guard_SUITE.erl:1400
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _274 = call (`id`/1), `true`

  %% Aliased:
  %%    _274
  _2841 = succeeded:body _274
  br _2841, ^2841, ^1

2841:
  %% guard_SUITE.erl:1400
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _273 = call (`id`/1), `false`

  %% Aliased:
  %%    _273
  _2842 = succeeded:body _273
  br _2842, ^2842, ^1

2842:
  %% guard_SUITE.erl:1400
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-6-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _276 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _275 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _274 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _273 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _273, 
  %%    _274, 
  %%    _275, 
  %%    _276
  _2451 = call (`'-rel_ops/1-fun-6-'`/4), _276, _275, _274, _273

  %% Unique:
  %%    _2451
  _2843 = succeeded:body _2451
  br _2843, ^2843, ^1

2843:
  %% Argument types:
  %%    _4 => {'a', atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()} | {'b', atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'c'}
  %% Unique:
  %%    _4
  _2846 = bif:'=:=' _4, `{a,b}`
  br _2846, ^3639, ^2848

3639:
  %% guard_SUITE.erl:1401
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _312 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _312
  _2854 = succeeded:body _312
  br _2854, ^2854, ^1

2854:
  %% guard_SUITE.erl:1401
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _311 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _311
  _2855 = succeeded:body _311
  br _2855, ^2855, ^1

2855:
  %% guard_SUITE.erl:1401
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _310 = call (`id`/1), `true`

  %% Aliased:
  %%    _310
  _2856 = succeeded:body _310
  br _2856, ^2856, ^1

2856:
  %% guard_SUITE.erl:1401
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _309 = call (`id`/1), `false`

  %% Aliased:
  %%    _309
  _2857 = succeeded:body _309
  br _2857, ^2857, ^1

2857:
  %% guard_SUITE.erl:1401
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-7-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _312 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _311 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _310 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _309 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _309, 
  %%    _310, 
  %%    _311, 
  %%    _312
  _2456 = call (`'-rel_ops/1-fun-7-'`/4), _312, _311, _310, _309

  %% Unique:
  %%    _2456
  _2858 = succeeded:body _2456
  br _2858, ^3640, ^1

3640:
  %% guard_SUITE.erl:1402
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _352 = call (`id`/1), `{x,y}`

  %% Aliased:
  %%    _352
  _2869 = succeeded:body _352
  br _2869, ^2869, ^1

2869:
  %% guard_SUITE.erl:1402
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _351 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _351
  _2870 = succeeded:body _351
  br _2870, ^2870, ^1

2870:
  %% guard_SUITE.erl:1402
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _350 = call (`id`/1), `true`

  %% Aliased:
  %%    _350
  _2871 = succeeded:body _350
  br _2871, ^2871, ^1

2871:
  %% guard_SUITE.erl:1402
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _349 = call (`id`/1), `false`

  %% Aliased:
  %%    _349
  _2872 = succeeded:body _349
  br _2872, ^2872, ^1

2872:
  %% guard_SUITE.erl:1402
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-8-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _352 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _351 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _350 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _349 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _349, 
  %%    _350, 
  %%    _351, 
  %%    _352
  _2462 = call (`'-rel_ops/1-fun-8-'`/4), _352, _351, _350, _349

  %% Unique:
  %%    _2462
  _2873 = succeeded:body _2462
  br _2873, ^3641, ^1

3641:
  %% guard_SUITE.erl:1403
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _392 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _392
  _2884 = succeeded:body _392
  br _2884, ^2884, ^1

2884:
  %% guard_SUITE.erl:1403
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _391 = call (`id`/1), `{x,y}`

  %% Aliased:
  %%    _391
  _2885 = succeeded:body _391
  br _2885, ^2885, ^1

2885:
  %% guard_SUITE.erl:1403
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _390 = call (`id`/1), `true`

  %% Aliased:
  %%    _390
  _2886 = succeeded:body _390
  br _2886, ^2886, ^1

2886:
  %% guard_SUITE.erl:1403
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _389 = call (`id`/1), `false`

  %% Aliased:
  %%    _389
  _2887 = succeeded:body _389
  br _2887, ^2887, ^1

2887:
  %% guard_SUITE.erl:1403
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-9-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _392 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _391 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _390 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _389 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _389, 
  %%    _390, 
  %%    _391, 
  %%    _392
  _2468 = call (`'-rel_ops/1-fun-9-'`/4), _392, _391, _390, _389

  %% Unique:
  %%    _2468
  _2888 = succeeded:body _2468
  br _2888, ^2888, ^1

2888:
  %% guard_SUITE.erl:1404
  %% Aliased:
  %%    Int
  _394 = put_map `assoc`, `#{}`, `key`, Int

  %% guard_SUITE.erl:1404
  %% Aliased:
  %%    Float
  _393 = put_map `assoc`, `#{}`, `key`, Float

  %% Argument types:
  %%    _394 => #{'key'=>integer()}
  %%    _393 => #{'key'=>float()}
  %% Aliased:
  %%    _393, 
  %%    _394
  _2892 = bif:'==' _394, _393
  br _2892, ^3642, ^2894

3642:
  %% guard_SUITE.erl:1404
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _394
  _434 = call (`id`/1), _394

  %% Aliased:
  %%    _434
  _2901 = succeeded:body _434
  br _2901, ^2901, ^1

2901:
  %% guard_SUITE.erl:1404
  %% Aliased:
  %%    Float
  _431 = put_map `assoc`, `#{}`, `key`, Float

  %% guard_SUITE.erl:1404
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _431
  _432 = call (`id`/1), _431

  %% Aliased:
  %%    _432
  _2902 = succeeded:body _432
  br _2902, ^2902, ^1

2902:
  %% guard_SUITE.erl:1404
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _430 = call (`id`/1), `true`

  %% Aliased:
  %%    _430
  _2903 = succeeded:body _430
  br _2903, ^2903, ^1

2903:
  %% guard_SUITE.erl:1404
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _429 = call (`id`/1), `false`

  %% Aliased:
  %%    _429
  _2904 = succeeded:body _429
  br _2904, ^2904, ^1

2904:
  %% guard_SUITE.erl:1404
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-10-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _434 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _432 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _430 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _429 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _429, 
  %%    _430, 
  %%    _432, 
  %%    _434
  _2473 = call (`'-rel_ops/1-fun-10-'`/4), _434, _432, _430, _429

  %% Unique:
  %%    _2473
  _2905 = succeeded:body _2473
  br _2905, ^2905, ^1

2905:
  %% guard_SUITE.erl:1406
  %% Aliased:
  %%    Int
  _436 = put_map `assoc`, `#{}`, `key`, Int

  %% guard_SUITE.erl:1406
  %% Aliased:
  %%    Float
  _435 = put_map `assoc`, `#{}`, `key`, Float

  %% Argument types:
  %%    _436 => #{'key'=>integer()}
  %%    _435 => #{'key'=>float()}
  %% Aliased:
  %%    _435, 
  %%    _436
  _2909 = bif:'==' _436, _435
  br _2909, ^3644, ^2911

3644:
  %% guard_SUITE.erl:1406
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _436
  _476 = call (`id`/1), _436

  %% Aliased:
  %%    _476
  _2918 = succeeded:body _476
  br _2918, ^2918, ^1

2918:
  %% guard_SUITE.erl:1406
  %% Aliased:
  %%    Float
  _473 = put_map `assoc`, `#{}`, `key`, Float

  %% guard_SUITE.erl:1406
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _473
  _474 = call (`id`/1), _473

  %% Aliased:
  %%    _474
  _2919 = succeeded:body _474
  br _2919, ^2919, ^1

2919:
  %% guard_SUITE.erl:1406
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _472 = call (`id`/1), `true`

  %% Aliased:
  %%    _472
  _2920 = succeeded:body _472
  br _2920, ^2920, ^1

2920:
  %% guard_SUITE.erl:1406
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _471 = call (`id`/1), `false`

  %% Aliased:
  %%    _471
  _2921 = succeeded:body _471
  br _2921, ^2921, ^1

2921:
  %% guard_SUITE.erl:1406
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-11-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _476 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _474 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _472 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _471 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _471, 
  %%    _472, 
  %%    _474, 
  %%    _476
  _2478 = call (`'-rel_ops/1-fun-11-'`/4), _476, _474, _472, _471

  %% Unique:
  %%    _2478
  _2922 = succeeded:body _2478
  br _2922, ^2922, ^1

2922:
  %% guard_SUITE.erl:1407
  %% Aliased:
  %%    Int
  _478 = put_map `assoc`, `#{}`, `40`, Int

  %% guard_SUITE.erl:1407
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _478
  _518 = call (`id`/1), _478

  %% Aliased:
  %%    _518
  _2935 = succeeded:body _518
  br _2935, ^2935, ^1

2935:
  %% guard_SUITE.erl:1407
  %% Aliased:
  %%    Int
  _515 = put_map `assoc`, `#{}`, `40`, Int

  %% guard_SUITE.erl:1407
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _515
  _516 = call (`id`/1), _515

  %% Aliased:
  %%    _516
  _2936 = succeeded:body _516
  br _2936, ^2936, ^1

2936:
  %% guard_SUITE.erl:1407
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _514 = call (`id`/1), `true`

  %% Aliased:
  %%    _514
  _2937 = succeeded:body _514
  br _2937, ^2937, ^1

2937:
  %% guard_SUITE.erl:1407
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _513 = call (`id`/1), `false`

  %% Aliased:
  %%    _513
  _2938 = succeeded:body _513
  br _2938, ^2938, ^1

2938:
  %% guard_SUITE.erl:1407
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-12-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _518 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _516 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _514 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _513 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _513, 
  %%    _514, 
  %%    _516, 
  %%    _518
  _2483 = call (`'-rel_ops/1-fun-12-'`/4), _518, _516, _514, _513

  %% Unique:
  %%    _2483
  _2939 = succeeded:body _2483
  br _2939, ^2939, ^1

2939:
  %% guard_SUITE.erl:1408
  %% Aliased:
  %%    Float
  _520 = put_map `assoc`, `#{}`, `42`, Float

  %% guard_SUITE.erl:1408
  %% Aliased:
  %%    Int
  _519 = put_map `assoc`, `#{}`, `42`, Int

  %% Argument types:
  %%    _520 => #{42=>float()}
  %%    _519 => #{42=>integer()}
  %% Aliased:
  %%    _519, 
  %%    _520
  _2943 = bif:'==' _520, _519
  br _2943, ^3648, ^2945

3648:
  %% guard_SUITE.erl:1408
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _520
  _560 = call (`id`/1), _520

  %% Aliased:
  %%    _560
  _2952 = succeeded:body _560
  br _2952, ^2952, ^1

2952:
  %% guard_SUITE.erl:1408
  %% Aliased:
  %%    Int
  _557 = put_map `assoc`, `#{}`, `42`, Int

  %% guard_SUITE.erl:1408
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _557
  _558 = call (`id`/1), _557

  %% Aliased:
  %%    _558
  _2953 = succeeded:body _558
  br _2953, ^2953, ^1

2953:
  %% guard_SUITE.erl:1408
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _556 = call (`id`/1), `true`

  %% Aliased:
  %%    _556
  _2954 = succeeded:body _556
  br _2954, ^2954, ^1

2954:
  %% guard_SUITE.erl:1408
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _555 = call (`id`/1), `false`

  %% Aliased:
  %%    _555
  _2955 = succeeded:body _555
  br _2955, ^2955, ^1

2955:
  %% guard_SUITE.erl:1408
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-13-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _560 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _558 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _556 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _555 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _555, 
  %%    _556, 
  %%    _558, 
  %%    _560
  _2488 = call (`'-rel_ops/1-fun-13-'`/4), _560, _558, _556, _555

  %% Unique:
  %%    _2488
  _2956 = succeeded:body _2488
  br _2956, ^2956, ^1

2956:
  %% guard_SUITE.erl:1409
  %% Aliased:
  %%    Float
  _562 = put_map `assoc`, `#{}`, `100.0`, Float

  %% guard_SUITE.erl:1409
  %% Aliased:
  %%    Float
  _561 = put_map `assoc`, `#{}`, `100`, Float

  %% Argument types:
  %%    _562 => #{100.0=>float()}
  %%    _561 => #{100=>float()}
  %% Aliased:
  %%    _561, 
  %%    _562
  _2960 = bif:'==' _562, _561
  br _2960, ^2962, ^3650

2962:
  %% guard_SUITE.erl:1409
  _2770 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2770
  _3583 = succeeded:body _2770
  br ^1

3650:
  %% guard_SUITE.erl:1409
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _562
  _606 = call (`id`/1), _562

  %% Aliased:
  %%    _606
  _2969 = succeeded:body _606
  br _2969, ^2969, ^1

2969:
  %% guard_SUITE.erl:1409
  %% Aliased:
  %%    Float
  _603 = put_map `assoc`, `#{}`, `100`, Float

  %% guard_SUITE.erl:1409
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _603
  _604 = call (`id`/1), _603

  %% Aliased:
  %%    _604
  _2970 = succeeded:body _604
  br _2970, ^2970, ^1

2970:
  %% guard_SUITE.erl:1409
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _602 = call (`id`/1), `true`

  %% Aliased:
  %%    _602
  _2971 = succeeded:body _602
  br _2971, ^2971, ^1

2971:
  %% guard_SUITE.erl:1409
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _601 = call (`id`/1), `false`

  %% Aliased:
  %%    _601
  _2972 = succeeded:body _601
  br _2972, ^2972, ^1

2972:
  %% guard_SUITE.erl:1409
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-14-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _606 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _604 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _602 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _601 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _601, 
  %%    _602, 
  %%    _604, 
  %%    _606
  _2494 = call (`'-rel_ops/1-fun-14-'`/4), _606, _604, _602, _601

  %% Unique:
  %%    _2494
  _2973 = succeeded:body _2494
  br _2973, ^2973, ^1

2973:
  %% Argument types:
  %%    FloatFun => fun(() -> {number(), number()})
  %%    FloatFun => fun(() -> {number(), number()})
  %% Aliased:
  %%    FloatFun
  _2976 = bif:'==' FloatFun, FloatFun
  br _2976, ^3652, ^2978

3652:
  %% guard_SUITE.erl:1411
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _642 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _642
  _2984 = succeeded:body _642
  br _2984, ^2984, ^1

2984:
  %% guard_SUITE.erl:1411
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _641 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _641
  _2985 = succeeded:body _641
  br _2985, ^2985, ^1

2985:
  %% guard_SUITE.erl:1411
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _640 = call (`id`/1), `true`

  %% Aliased:
  %%    _640
  _2986 = succeeded:body _640
  br _2986, ^2986, ^1

2986:
  %% guard_SUITE.erl:1411
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _639 = call (`id`/1), `false`

  %% Aliased:
  %%    _639
  _2987 = succeeded:body _639
  br _2987, ^2987, ^1

2987:
  %% guard_SUITE.erl:1411
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-15-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _642 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _641 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _640 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _639 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _639, 
  %%    _640, 
  %%    _641, 
  %%    _642
  _2499 = call (`'-rel_ops/1-fun-15-'`/4), _642, _641, _640, _639

  %% Unique:
  %%    _2499
  _2988 = succeeded:body _2499
  br _2988, ^2988, ^1

2988:
  %% Argument types:
  %%    FloatFun => fun(() -> {number(), number()})
  %%    MixedFun14 => fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  %% Aliased:
  %%    FloatFun, 
  %%    MixedFun14
  _2991 = bif:'==' FloatFun, MixedFun14
  br _2991, ^2993, ^3653

2993:
  %% guard_SUITE.erl:1412
  _2766 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2766
  _3571 = succeeded:body _2766
  br ^1

3653:
  %% guard_SUITE.erl:1412
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _682 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _682
  _2999 = succeeded:body _682
  br _2999, ^2999, ^1

2999:
  %% guard_SUITE.erl:1412
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    MixedFun14
  _681 = call (`id`/1), MixedFun14

  %% Aliased:
  %%    _681
  _3000 = succeeded:body _681
  br _3000, ^3000, ^1

3000:
  %% guard_SUITE.erl:1412
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _680 = call (`id`/1), `true`

  %% Aliased:
  %%    _680
  _3001 = succeeded:body _680
  br _3001, ^3001, ^1

3001:
  %% guard_SUITE.erl:1412
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _679 = call (`id`/1), `false`

  %% Aliased:
  %%    _679
  _3002 = succeeded:body _679
  br _3002, ^3002, ^1

3002:
  %% guard_SUITE.erl:1412
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-16-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _682 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _681 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _680 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _679 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _679, 
  %%    _680, 
  %%    _681, 
  %%    _682
  _2505 = call (`'-rel_ops/1-fun-16-'`/4), _682, _681, _680, _679

  %% Unique:
  %%    _2505
  _3003 = succeeded:body _2505
  br _3003, ^3003, ^1

3003:
  %% Argument types:
  %%    Int => integer()
  %% Unique:
  %%    Int
  _3006 = bif:'==' Int, `42.0`
  br _3006, ^3654, ^3008

3654:
  %% guard_SUITE.erl:1414
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Int
  _722 = call (`id`/1), Int

  %% Aliased:
  %%    _722
  _3014 = succeeded:body _722
  br _3014, ^3014, ^1

3014:
  %% guard_SUITE.erl:1414
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _721 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _721
  _3015 = succeeded:body _721
  br _3015, ^3015, ^1

3015:
  %% guard_SUITE.erl:1414
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _720 = call (`id`/1), `true`

  %% Aliased:
  %%    _720
  _3016 = succeeded:body _720
  br _3016, ^3016, ^1

3016:
  %% guard_SUITE.erl:1414
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _719 = call (`id`/1), `false`

  %% Aliased:
  %%    _719
  _3017 = succeeded:body _719
  br _3017, ^3017, ^1

3017:
  %% guard_SUITE.erl:1414
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-17-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _722 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _721 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _720 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _719 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _719, 
  %%    _720, 
  %%    _721, 
  %%    _722
  _2511 = call (`'-rel_ops/1-fun-17-'`/4), _722, _721, _720, _719

  %% Unique:
  %%    _2511
  _3018 = succeeded:body _2511
  br _3018, ^3018, ^1

3018:
  %% Argument types:
  %%    Float => float()
  %% Unique:
  %%    Float
  _3021 = bif:'==' Float, `42`
  br _3021, ^3655, ^3023

3655:
  %% guard_SUITE.erl:1415
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Float
  _762 = call (`id`/1), Float

  %% Aliased:
  %%    _762
  _3029 = succeeded:body _762
  br _3029, ^3029, ^1

3029:
  %% guard_SUITE.erl:1415
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _761 = call (`id`/1), `42`

  %% Aliased:
  %%    _761
  _3030 = succeeded:body _761
  br _3030, ^3030, ^1

3030:
  %% guard_SUITE.erl:1415
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _760 = call (`id`/1), `true`

  %% Aliased:
  %%    _760
  _3031 = succeeded:body _760
  br _3031, ^3031, ^1

3031:
  %% guard_SUITE.erl:1415
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _759 = call (`id`/1), `false`

  %% Aliased:
  %%    _759
  _3032 = succeeded:body _759
  br _3032, ^3032, ^1

3032:
  %% guard_SUITE.erl:1415
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-18-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _762 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _761 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _760 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _759 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _759, 
  %%    _760, 
  %%    _761, 
  %%    _762
  _2517 = call (`'-rel_ops/1-fun-18-'`/4), _762, _761, _760, _759

  %% Unique:
  %%    _2517
  _3033 = succeeded:body _2517
  br _3033, ^3656, ^1

3656:
  %% guard_SUITE.erl:1416
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _802 = call (`id`/1), `1`

  %% Aliased:
  %%    _802
  _3034 = succeeded:body _802
  br _3034, ^3034, ^1

3034:
  %% guard_SUITE.erl:1416
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _801 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _801
  _3035 = succeeded:body _801
  br _3035, ^3035, ^1

3035:
  %% guard_SUITE.erl:1416
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _800 = call (`id`/1), `true`

  %% Aliased:
  %%    _800
  _3036 = succeeded:body _800
  br _3036, ^3036, ^1

3036:
  %% guard_SUITE.erl:1416
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _799 = call (`id`/1), `false`

  %% Aliased:
  %%    _799
  _3037 = succeeded:body _799
  br _3037, ^3037, ^1

3037:
  %% guard_SUITE.erl:1416
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-19-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _802 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _801 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _800 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _799 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _799, 
  %%    _800, 
  %%    _801, 
  %%    _802
  _2523 = call (`'-rel_ops/1-fun-19-'`/4), _802, _801, _800, _799

  %% Unique:
  %%    _2523
  _3038 = succeeded:body _2523
  br _3038, ^3657, ^1

3657:
  %% guard_SUITE.erl:1417
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _842 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _842
  _3039 = succeeded:body _842
  br _3039, ^3039, ^1

3039:
  %% guard_SUITE.erl:1417
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _841 = call (`id`/1), `1`

  %% Aliased:
  %%    _841
  _3040 = succeeded:body _841
  br _3040, ^3040, ^1

3040:
  %% guard_SUITE.erl:1417
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _840 = call (`id`/1), `true`

  %% Aliased:
  %%    _840
  _3041 = succeeded:body _840
  br _3041, ^3041, ^1

3041:
  %% guard_SUITE.erl:1417
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _839 = call (`id`/1), `false`

  %% Aliased:
  %%    _839
  _3042 = succeeded:body _839
  br _3042, ^3042, ^1

3042:
  %% guard_SUITE.erl:1417
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-20-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _842 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _841 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _840 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _839 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _839, 
  %%    _840, 
  %%    _841, 
  %%    _842
  _2529 = call (`'-rel_ops/1-fun-20-'`/4), _842, _841, _840, _839

  %% Unique:
  %%    _2529
  _3043 = succeeded:body _2529
  br _3043, ^3658, ^1

3658:
  %% guard_SUITE.erl:1418
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Float
  _878 = call (`id`/1), Float

  %% Aliased:
  %%    _878
  _3054 = succeeded:body _878
  br _3054, ^3054, ^1

3054:
  %% guard_SUITE.erl:1418
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _877 = call (`id`/1), `a`

  %% Aliased:
  %%    _877
  _3055 = succeeded:body _877
  br _3055, ^3055, ^1

3055:
  %% guard_SUITE.erl:1418
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _876 = call (`id`/1), `true`

  %% Aliased:
  %%    _876
  _3056 = succeeded:body _876
  br _3056, ^3056, ^1

3056:
  %% guard_SUITE.erl:1418
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _875 = call (`id`/1), `false`

  %% Aliased:
  %%    _875
  _3057 = succeeded:body _875
  br _3057, ^3057, ^1

3057:
  %% guard_SUITE.erl:1418
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-21-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _878 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _877 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _876 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _875 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _875, 
  %%    _876, 
  %%    _877, 
  %%    _878
  _2534 = call (`'-rel_ops/1-fun-21-'`/4), _878, _877, _876, _875

  %% Unique:
  %%    _2534
  _3058 = succeeded:body _2534
  br _3058, ^3058, ^1

3058:
  %% Argument types:
  %%    Float => float()
  %%    Float => float()
  %% Unique:
  %%    Float
  _3061 = bif:'==' Float, Float
  br _3061, ^3659, ^3063

3659:
  %% guard_SUITE.erl:1419
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Float
  _918 = call (`id`/1), Float

  %% Aliased:
  %%    _918
  _3069 = succeeded:body _918
  br _3069, ^3069, ^1

3069:
  %% guard_SUITE.erl:1419
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Float
  _917 = call (`id`/1), Float

  %% Aliased:
  %%    _917
  _3070 = succeeded:body _917
  br _3070, ^3070, ^1

3070:
  %% guard_SUITE.erl:1419
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _916 = call (`id`/1), `true`

  %% Aliased:
  %%    _916
  _3071 = succeeded:body _916
  br _3071, ^3071, ^1

3071:
  %% guard_SUITE.erl:1419
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _915 = call (`id`/1), `false`

  %% Aliased:
  %%    _915
  _3072 = succeeded:body _915
  br _3072, ^3072, ^1

3072:
  %% guard_SUITE.erl:1419
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-22-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _918 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _917 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _916 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _915 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _915, 
  %%    _916, 
  %%    _917, 
  %%    _918
  _2540 = call (`'-rel_ops/1-fun-22-'`/4), _918, _917, _916, _915

  %% Unique:
  %%    _2540
  _3073 = succeeded:body _2540
  br _3073, ^3660, ^1

3660:
  %% guard_SUITE.erl:1420
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _954 = call (`id`/1), `a`

  %% Aliased:
  %%    _954
  _3074 = succeeded:body _954
  br _3074, ^3074, ^1

3074:
  %% guard_SUITE.erl:1420
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _953 = call (`id`/1), `{}`

  %% Aliased:
  %%    _953
  _3075 = succeeded:body _953
  br _3075, ^3075, ^1

3075:
  %% guard_SUITE.erl:1420
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _952 = call (`id`/1), `true`

  %% Aliased:
  %%    _952
  _3076 = succeeded:body _952
  br _3076, ^3076, ^1

3076:
  %% guard_SUITE.erl:1420
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _951 = call (`id`/1), `false`

  %% Aliased:
  %%    _951
  _3077 = succeeded:body _951
  br _3077, ^3077, ^1

3077:
  %% guard_SUITE.erl:1420
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-23-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _954 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _953 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _952 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _951 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _951, 
  %%    _952, 
  %%    _953, 
  %%    _954
  _2545 = call (`'-rel_ops/1-fun-23-'`/4), _954, _953, _952, _951

  %% Unique:
  %%    _2545
  _3078 = succeeded:body _2545
  br _3078, ^3661, ^1

3661:
  %% guard_SUITE.erl:1421
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _994 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _994
  _3089 = succeeded:body _994
  br _3089, ^3089, ^1

3089:
  %% guard_SUITE.erl:1421
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _993 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _993
  _3090 = succeeded:body _993
  br _3090, ^3090, ^1

3090:
  %% guard_SUITE.erl:1421
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _992 = call (`id`/1), `true`

  %% Aliased:
  %%    _992
  _3091 = succeeded:body _992
  br _3091, ^3091, ^1

3091:
  %% guard_SUITE.erl:1421
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _991 = call (`id`/1), `false`

  %% Aliased:
  %%    _991
  _3092 = succeeded:body _991
  br _3092, ^3092, ^1

3092:
  %% guard_SUITE.erl:1421
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-24-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _994 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _993 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _992 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _991 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _991, 
  %%    _992, 
  %%    _993, 
  %%    _994
  _2551 = call (`'-rel_ops/1-fun-24-'`/4), _994, _993, _992, _991

  %% Unique:
  %%    _2551
  _3093 = succeeded:body _2551
  br _3093, ^3662, ^1

3662:
  %% guard_SUITE.erl:1422
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1030 = call (`id`/1), `{x,y}`

  %% Aliased:
  %%    _1030
  _3104 = succeeded:body _1030
  br _3104, ^3104, ^1

3104:
  %% guard_SUITE.erl:1422
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1029 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _1029
  _3105 = succeeded:body _1029
  br _3105, ^3105, ^1

3105:
  %% guard_SUITE.erl:1422
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1028 = call (`id`/1), `true`

  %% Aliased:
  %%    _1028
  _3106 = succeeded:body _1028
  br _3106, ^3106, ^1

3106:
  %% guard_SUITE.erl:1422
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1027 = call (`id`/1), `false`

  %% Aliased:
  %%    _1027
  _3107 = succeeded:body _1027
  br _3107, ^3107, ^1

3107:
  %% guard_SUITE.erl:1422
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-25-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1030 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1029 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1028 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1027 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1027, 
  %%    _1028, 
  %%    _1029, 
  %%    _1030
  _2556 = call (`'-rel_ops/1-fun-25-'`/4), _1030, _1029, _1028, _1027

  %% Unique:
  %%    _2556
  _3108 = succeeded:body _2556
  br _3108, ^3108, ^1

3108:
  %% Argument types:
  %%    Float => float()
  %% Unique:
  %%    Float
  _2285 = put_tuple `a`, Float

  %% guard_SUITE.erl:1423
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _2285
  _1066 = call (`id`/1), _2285

  %% Aliased:
  %%    _1066
  _3119 = succeeded:body _1066
  br _3119, ^3119, ^1

3119:
  %% guard_SUITE.erl:1423
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1065 = call (`id`/1), `{a,b}`

  %% Aliased:
  %%    _1065
  _3120 = succeeded:body _1065
  br _3120, ^3120, ^1

3120:
  %% guard_SUITE.erl:1423
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1064 = call (`id`/1), `true`

  %% Aliased:
  %%    _1064
  _3121 = succeeded:body _1064
  br _3121, ^3121, ^1

3121:
  %% guard_SUITE.erl:1423
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1063 = call (`id`/1), `false`

  %% Aliased:
  %%    _1063
  _3122 = succeeded:body _1063
  br _3122, ^3122, ^1

3122:
  %% guard_SUITE.erl:1423
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-26-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1066 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1065 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1064 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1063 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1063, 
  %%    _1064, 
  %%    _1065, 
  %%    _1066
  _2561 = call (`'-rel_ops/1-fun-26-'`/4), _1066, _1065, _1064, _1063

  %% Unique:
  %%    _2561
  _3123 = succeeded:body _2561
  br _3123, ^3123, ^1

3123:
  %% guard_SUITE.erl:1425
  %% Aliased:
  %%    Float
  _1068 = put_map `assoc`, `#{}`, `key`, Float

  %% guard_SUITE.erl:1425
  %% Aliased:
  %%    Int
  _1067 = put_map `assoc`, `#{}`, `key`, Int

  %% Argument types:
  %%    _1068 => #{'key'=>float()}
  %%    _1067 => #{'key'=>integer()}
  %% Aliased:
  %%    _1067, 
  %%    _1068
  _3127 = bif:'==' _1068, _1067
  br _3127, ^3664, ^3129

3664:
  %% guard_SUITE.erl:1425
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1068
  _1112 = call (`id`/1), _1068

  %% Aliased:
  %%    _1112
  _3136 = succeeded:body _1112
  br _3136, ^3136, ^1

3136:
  %% guard_SUITE.erl:1425
  %% Aliased:
  %%    Int
  _1109 = put_map `assoc`, `#{}`, `key`, Int

  %% guard_SUITE.erl:1425
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1109
  _1110 = call (`id`/1), _1109

  %% Aliased:
  %%    _1110
  _3137 = succeeded:body _1110
  br _3137, ^3137, ^1

3137:
  %% guard_SUITE.erl:1425
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1108 = call (`id`/1), `true`

  %% Aliased:
  %%    _1108
  _3138 = succeeded:body _1108
  br _3138, ^3138, ^1

3138:
  %% guard_SUITE.erl:1425
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1107 = call (`id`/1), `false`

  %% Aliased:
  %%    _1107
  _3139 = succeeded:body _1107
  br _3139, ^3139, ^1

3139:
  %% guard_SUITE.erl:1425
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-27-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1112 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1110 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1108 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1107 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1107, 
  %%    _1108, 
  %%    _1110, 
  %%    _1112
  _2567 = call (`'-rel_ops/1-fun-27-'`/4), _1112, _1110, _1108, _1107

  %% Unique:
  %%    _2567
  _3140 = succeeded:body _2567
  br _3140, ^3140, ^1

3140:
  %% guard_SUITE.erl:1426
  %% Aliased:
  %%    Int
  _1114 = put_map `assoc`, `#{}`, `40`, Int

  %% guard_SUITE.erl:1426
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1114
  _1158 = call (`id`/1), _1114

  %% Aliased:
  %%    _1158
  _3153 = succeeded:body _1158
  br _3153, ^3153, ^1

3153:
  %% guard_SUITE.erl:1426
  %% Aliased:
  %%    Int
  _1155 = put_map `assoc`, `#{}`, `40`, Int

  %% guard_SUITE.erl:1426
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1155
  _1156 = call (`id`/1), _1155

  %% Aliased:
  %%    _1156
  _3154 = succeeded:body _1156
  br _3154, ^3154, ^1

3154:
  %% guard_SUITE.erl:1426
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1154 = call (`id`/1), `true`

  %% Aliased:
  %%    _1154
  _3155 = succeeded:body _1154
  br _3155, ^3155, ^1

3155:
  %% guard_SUITE.erl:1426
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1153 = call (`id`/1), `false`

  %% Aliased:
  %%    _1153
  _3156 = succeeded:body _1153
  br _3156, ^3156, ^1

3156:
  %% guard_SUITE.erl:1426
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-28-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1158 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1156 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1154 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1153 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1153, 
  %%    _1154, 
  %%    _1156, 
  %%    _1158
  _2573 = call (`'-rel_ops/1-fun-28-'`/4), _1158, _1156, _1154, _1153

  %% Unique:
  %%    _2573
  _3157 = succeeded:body _2573
  br _3157, ^3157, ^1

3157:
  %% guard_SUITE.erl:1427
  %% Aliased:
  %%    Int
  _1160 = put_map `assoc`, `#{}`, `42`, Int

  %% guard_SUITE.erl:1427
  %% Aliased:
  %%    Float
  _1159 = put_map `assoc`, `#{}`, `42`, Float

  %% Argument types:
  %%    _1160 => #{42=>integer()}
  %%    _1159 => #{42=>float()}
  %% Aliased:
  %%    _1159, 
  %%    _1160
  _3161 = bif:'==' _1160, _1159
  br _3161, ^3668, ^3163

3668:
  %% guard_SUITE.erl:1427
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1160
  _1204 = call (`id`/1), _1160

  %% Aliased:
  %%    _1204
  _3170 = succeeded:body _1204
  br _3170, ^3170, ^1

3170:
  %% guard_SUITE.erl:1427
  %% Aliased:
  %%    Float
  _1201 = put_map `assoc`, `#{}`, `42`, Float

  %% guard_SUITE.erl:1427
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1201
  _1202 = call (`id`/1), _1201

  %% Aliased:
  %%    _1202
  _3171 = succeeded:body _1202
  br _3171, ^3171, ^1

3171:
  %% guard_SUITE.erl:1427
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1200 = call (`id`/1), `true`

  %% Aliased:
  %%    _1200
  _3172 = succeeded:body _1200
  br _3172, ^3172, ^1

3172:
  %% guard_SUITE.erl:1427
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1199 = call (`id`/1), `false`

  %% Aliased:
  %%    _1199
  _3173 = succeeded:body _1199
  br _3173, ^3173, ^1

3173:
  %% guard_SUITE.erl:1427
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-29-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1204 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1202 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1200 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1199 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1199, 
  %%    _1200, 
  %%    _1202, 
  %%    _1204
  _2579 = call (`'-rel_ops/1-fun-29-'`/4), _1204, _1202, _1200, _1199

  %% Unique:
  %%    _2579
  _3174 = succeeded:body _2579
  br _3174, ^3174, ^1

3174:
  %% guard_SUITE.erl:1428
  %% Aliased:
  %%    Float
  _1206 = put_map `assoc`, `#{}`, `100`, Float

  %% guard_SUITE.erl:1428
  %% Aliased:
  %%    Float
  _1205 = put_map `assoc`, `#{}`, `100.0`, Float

  %% Argument types:
  %%    _1206 => #{100=>float()}
  %%    _1205 => #{100.0=>float()}
  %% Aliased:
  %%    _1205, 
  %%    _1206
  _3178 = bif:'==' _1206, _1205
  br _3178, ^3180, ^3670

3180:
  %% guard_SUITE.erl:1428
  _2744 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2744
  _3505 = succeeded:body _2744
  br ^1

3670:
  %% guard_SUITE.erl:1428
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1206
  _1246 = call (`id`/1), _1206

  %% Aliased:
  %%    _1246
  _3187 = succeeded:body _1246
  br _3187, ^3187, ^1

3187:
  %% guard_SUITE.erl:1428
  %% Aliased:
  %%    Float
  _1243 = put_map `assoc`, `#{}`, `100.0`, Float

  %% guard_SUITE.erl:1428
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1243
  _1244 = call (`id`/1), _1243

  %% Aliased:
  %%    _1244
  _3188 = succeeded:body _1244
  br _3188, ^3188, ^1

3188:
  %% guard_SUITE.erl:1428
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1242 = call (`id`/1), `true`

  %% Aliased:
  %%    _1242
  _3189 = succeeded:body _1242
  br _3189, ^3189, ^1

3189:
  %% guard_SUITE.erl:1428
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1241 = call (`id`/1), `false`

  %% Aliased:
  %%    _1241
  _3190 = succeeded:body _1241
  br _3190, ^3190, ^1

3190:
  %% guard_SUITE.erl:1428
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-30-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1246 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1244 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1242 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1241 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1241, 
  %%    _1242, 
  %%    _1244, 
  %%    _1246
  _2584 = call (`'-rel_ops/1-fun-30-'`/4), _1246, _1244, _1242, _1241

  %% Unique:
  %%    _2584
  _3191 = succeeded:body _2584
  br _3191, ^3191, ^1

3191:
  %% Argument types:
  %%    IntFunInt => fun(() -> integer())
  %%    IntFunFloat => fun(() -> integer())
  %% Aliased:
  %%    IntFunFloat, 
  %%    IntFunInt
  _3194 = bif:'==' IntFunInt, IntFunFloat
  br _3194, ^3672, ^3196

3672:
  %% guard_SUITE.erl:1436
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFunInt
  _1286 = call (`id`/1), IntFunInt

  %% Aliased:
  %%    _1286
  _3202 = succeeded:body _1286
  br _3202, ^3202, ^1

3202:
  %% guard_SUITE.erl:1436
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFunFloat
  _1285 = call (`id`/1), IntFunFloat

  %% Aliased:
  %%    _1285
  _3203 = succeeded:body _1285
  br _3203, ^3203, ^1

3203:
  %% guard_SUITE.erl:1436
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1284 = call (`id`/1), `true`

  %% Aliased:
  %%    _1284
  _3204 = succeeded:body _1284
  br _3204, ^3204, ^1

3204:
  %% guard_SUITE.erl:1436
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1283 = call (`id`/1), `false`

  %% Aliased:
  %%    _1283
  _3205 = succeeded:body _1283
  br _3205, ^3205, ^1

3205:
  %% guard_SUITE.erl:1436
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-31-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1286 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1285 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1284 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1283 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1283, 
  %%    _1284, 
  %%    _1285, 
  %%    _1286
  _2590 = call (`'-rel_ops/1-fun-31-'`/4), _1286, _1285, _1284, _1283

  %% Unique:
  %%    _2590
  _3206 = succeeded:body _2590
  br _3206, ^3673, ^1

3673:
  %% guard_SUITE.erl:1437
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _1326 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _1326
  _3217 = succeeded:body _1326
  br _3217, ^3217, ^1

3217:
  %% guard_SUITE.erl:1437
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _1325 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _1325
  _3218 = succeeded:body _1325
  br _3218, ^3218, ^1

3218:
  %% guard_SUITE.erl:1437
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1324 = call (`id`/1), `true`

  %% Aliased:
  %%    _1324
  _3219 = succeeded:body _1324
  br _3219, ^3219, ^1

3219:
  %% guard_SUITE.erl:1437
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1323 = call (`id`/1), `false`

  %% Aliased:
  %%    _1323
  _3220 = succeeded:body _1323
  br _3220, ^3220, ^1

3220:
  %% guard_SUITE.erl:1437
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-32-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1326 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1325 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1324 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1323 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1323, 
  %%    _1324, 
  %%    _1325, 
  %%    _1326
  _2596 = call (`'-rel_ops/1-fun-32-'`/4), _1326, _1325, _1324, _1323

  %% Unique:
  %%    _2596
  _3221 = succeeded:body _2596
  br _3221, ^3221, ^1

3221:
  %% Argument types:
  %%    FloatFun => fun(() -> {number(), number()})
  %%    IntFun => fun(() -> {number(), number()})
  %% Aliased:
  %%    FloatFun, 
  %%    IntFun
  _3224 = bif:'==' FloatFun, IntFun
  br _3224, ^3674, ^3226

3674:
  %% guard_SUITE.erl:1438
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _1366 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _1366
  _3232 = succeeded:body _1366
  br _3232, ^3232, ^1

3232:
  %% guard_SUITE.erl:1438
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFun
  _1365 = call (`id`/1), IntFun

  %% Aliased:
  %%    _1365
  _3233 = succeeded:body _1365
  br _3233, ^3233, ^1

3233:
  %% guard_SUITE.erl:1438
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1364 = call (`id`/1), `true`

  %% Aliased:
  %%    _1364
  _3234 = succeeded:body _1364
  br _3234, ^3234, ^1

3234:
  %% guard_SUITE.erl:1438
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1363 = call (`id`/1), `false`

  %% Aliased:
  %%    _1363
  _3235 = succeeded:body _1363
  br _3235, ^3235, ^1

3235:
  %% guard_SUITE.erl:1438
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-33-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1366 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1365 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1364 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1363 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1363, 
  %%    _1364, 
  %%    _1365, 
  %%    _1366
  _2602 = call (`'-rel_ops/1-fun-33-'`/4), _1366, _1365, _1364, _1363

  %% Unique:
  %%    _2602
  _3236 = succeeded:body _2602
  br _3236, ^3236, ^1

3236:
  %% Argument types:
  %%    MixedFun => fun(() -> {number(), number()})
  %%    IntFun => fun(() -> {number(), number()})
  %% Aliased:
  %%    IntFun, 
  %%    MixedFun
  _3239 = bif:'==' MixedFun, IntFun
  br _3239, ^3675, ^3241

3675:
  %% guard_SUITE.erl:1439
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    MixedFun
  _1406 = call (`id`/1), MixedFun

  %% Aliased:
  %%    _1406
  _3247 = succeeded:body _1406
  br _3247, ^3247, ^1

3247:
  %% guard_SUITE.erl:1439
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFun
  _1405 = call (`id`/1), IntFun

  %% Aliased:
  %%    _1405
  _3248 = succeeded:body _1405
  br _3248, ^3248, ^1

3248:
  %% guard_SUITE.erl:1439
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1404 = call (`id`/1), `true`

  %% Aliased:
  %%    _1404
  _3249 = succeeded:body _1404
  br _3249, ^3249, ^1

3249:
  %% guard_SUITE.erl:1439
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1403 = call (`id`/1), `false`

  %% Aliased:
  %%    _1403
  _3250 = succeeded:body _1403
  br _3250, ^3250, ^1

3250:
  %% guard_SUITE.erl:1439
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-34-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1406 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1405 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1404 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1403 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1403, 
  %%    _1404, 
  %%    _1405, 
  %%    _1406
  _2608 = call (`'-rel_ops/1-fun-34-'`/4), _1406, _1405, _1404, _1403

  %% Unique:
  %%    _2608
  _3251 = succeeded:body _2608
  br _3251, ^3251, ^1

3251:
  %% Argument types:
  %%    MixedFun => fun(() -> {number(), number()})
  %%    FloatFun => fun(() -> {number(), number()})
  %% Aliased:
  %%    FloatFun, 
  %%    MixedFun
  _3254 = bif:'==' MixedFun, FloatFun
  br _3254, ^3676, ^3256

3676:
  %% guard_SUITE.erl:1440
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    MixedFun
  _1446 = call (`id`/1), MixedFun

  %% Aliased:
  %%    _1446
  _3262 = succeeded:body _1446
  br _3262, ^3262, ^1

3262:
  %% guard_SUITE.erl:1440
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    FloatFun
  _1445 = call (`id`/1), FloatFun

  %% Aliased:
  %%    _1445
  _3263 = succeeded:body _1445
  br _3263, ^3263, ^1

3263:
  %% guard_SUITE.erl:1440
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1444 = call (`id`/1), `true`

  %% Aliased:
  %%    _1444
  _3264 = succeeded:body _1444
  br _3264, ^3264, ^1

3264:
  %% guard_SUITE.erl:1440
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1443 = call (`id`/1), `false`

  %% Aliased:
  %%    _1443
  _3265 = succeeded:body _1443
  br _3265, ^3265, ^1

3265:
  %% guard_SUITE.erl:1440
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-35-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1446 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1445 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1444 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1443 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1443, 
  %%    _1444, 
  %%    _1445, 
  %%    _1446
  _2614 = call (`'-rel_ops/1-fun-35-'`/4), _1446, _1445, _1444, _1443

  %% Unique:
  %%    _2614
  _3266 = succeeded:body _2614
  br _3266, ^3266, ^1

3266:
  %% Argument types:
  %%    IntFun14 => fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  %%    MixedFun14 => fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  %% Aliased:
  %%    IntFun14, 
  %%    MixedFun14
  _3269 = bif:'==' IntFun14, MixedFun14
  br _3269, ^3677, ^3271

3677:
  %% guard_SUITE.erl:1441
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFun14
  _1486 = call (`id`/1), IntFun14

  %% Aliased:
  %%    _1486
  _3277 = succeeded:body _1486
  br _3277, ^3277, ^1

3277:
  %% guard_SUITE.erl:1441
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    MixedFun14
  _1485 = call (`id`/1), MixedFun14

  %% Aliased:
  %%    _1485
  _3278 = succeeded:body _1485
  br _3278, ^3278, ^1

3278:
  %% guard_SUITE.erl:1441
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1484 = call (`id`/1), `true`

  %% Aliased:
  %%    _1484
  _3279 = succeeded:body _1484
  br _3279, ^3279, ^1

3279:
  %% guard_SUITE.erl:1441
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1483 = call (`id`/1), `false`

  %% Aliased:
  %%    _1483
  _3280 = succeeded:body _1483
  br _3280, ^3280, ^1

3280:
  %% guard_SUITE.erl:1441
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-36-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1486 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1485 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1484 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1483 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1483, 
  %%    _1484, 
  %%    _1485, 
  %%    _1486
  _2620 = call (`'-rel_ops/1-fun-36-'`/4), _1486, _1485, _1484, _1483

  %% Unique:
  %%    _2620
  _3281 = succeeded:body _2620
  br _3281, ^3678, ^1

3678:
  %% guard_SUITE.erl:1442
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    MixedFun14
  _1526 = call (`id`/1), MixedFun14

  %% Aliased:
  %%    _1526
  _3292 = succeeded:body _1526
  br _3292, ^3292, ^1

3292:
  %% guard_SUITE.erl:1442
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFun14
  _1525 = call (`id`/1), IntFun14

  %% Aliased:
  %%    _1525
  _3293 = succeeded:body _1525
  br _3293, ^3293, ^1

3293:
  %% guard_SUITE.erl:1442
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1524 = call (`id`/1), `true`

  %% Aliased:
  %%    _1524
  _3294 = succeeded:body _1524
  br _3294, ^3294, ^1

3294:
  %% guard_SUITE.erl:1442
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1523 = call (`id`/1), `false`

  %% Aliased:
  %%    _1523
  _3295 = succeeded:body _1523
  br _3295, ^3295, ^1

3295:
  %% guard_SUITE.erl:1442
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-37-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1526 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1525 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1524 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1523 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1523, 
  %%    _1524, 
  %%    _1525, 
  %%    _1526
  _2626 = call (`'-rel_ops/1-fun-37-'`/4), _1526, _1525, _1524, _1523

  %% Unique:
  %%    _2626
  _3296 = succeeded:body _2626
  br _3296, ^3296, ^1

3296:
  %% Argument types:
  %%    IntFun14 => fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  %%    IntFun => fun(() -> {number(), number()})
  %% Aliased:
  %%    IntFun, 
  %%    IntFun14
  _3299 = bif:'==' IntFun14, IntFun
  br _3299, ^3301, ^3679

3301:
  %% guard_SUITE.erl:1443
  _2633 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2633
  _3317 = succeeded:body _2633
  br ^1

3679:
  %% guard_SUITE.erl:1443
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFun14
  _1562 = call (`id`/1), IntFun14

  %% Aliased:
  %%    _1562
  _3307 = succeeded:body _1562
  br _3307, ^3307, ^1

3307:
  %% guard_SUITE.erl:1443
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    IntFun
  _1561 = call (`id`/1), IntFun

  %% Aliased:
  %%    _1561
  _3308 = succeeded:body _1561
  br _3308, ^3308, ^1

3308:
  %% guard_SUITE.erl:1443
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1560 = call (`id`/1), `true`

  %% Aliased:
  %%    _1560
  _3309 = succeeded:body _1560
  br _3309, ^3309, ^1

3309:
  %% guard_SUITE.erl:1443
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1559 = call (`id`/1), `false`

  %% Aliased:
  %%    _1559
  _3310 = succeeded:body _1559
  br _3310, ^3310, ^1

3310:
  %% guard_SUITE.erl:1443
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-38-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1562 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1561 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1560 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1559 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1559, 
  %%    _1560, 
  %%    _1561, 
  %%    _1562
  _2631 = call (`'-rel_ops/1-fun-38-'`/4), _1562, _1561, _1560, _1559

  %% Unique:
  %%    _2631
  _3311 = succeeded:body _2631
  br _3311, ^3680, ^1

3680:
  %% guard_SUITE.erl:1446
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1599 = call (`id`/1), `1`

  %% Aliased:
  %%    _1599
  _3360 = succeeded:body _1599
  br _3360, ^3360, ^1

3360:
  %% guard_SUITE.erl:1446
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1598 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _1598
  _3361 = succeeded:body _1598
  br _3361, ^3361, ^1

3361:
  %% guard_SUITE.erl:1446
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1597 = call (`id`/1), `true`

  %% Aliased:
  %%    _1597
  _3362 = succeeded:body _1597
  br _3362, ^3362, ^1

3362:
  %% guard_SUITE.erl:1446
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1596 = call (`id`/1), `false`

  %% Aliased:
  %%    _1596
  _3363 = succeeded:body _1596
  br _3363, ^3363, ^1

3363:
  %% guard_SUITE.erl:1446
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-39-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1599 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1598 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1597 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1596 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1596, 
  %%    _1597, 
  %%    _1598, 
  %%    _1599
  _2652 = call (`'-rel_ops/1-fun-39-'`/4), _1599, _1598, _1597, _1596

  %% Unique:
  %%    _2652
  _3364 = succeeded:body _2652
  br _3364, ^3681, ^1

3681:
  %% guard_SUITE.erl:1447
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1639 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _1639
  _3365 = succeeded:body _1639
  br _3365, ^3365, ^1

3365:
  %% guard_SUITE.erl:1447
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1638 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _1638
  _3366 = succeeded:body _1638
  br _3366, ^3366, ^1

3366:
  %% guard_SUITE.erl:1447
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1637 = call (`id`/1), `true`

  %% Aliased:
  %%    _1637
  _3367 = succeeded:body _1637
  br _3367, ^3367, ^1

3367:
  %% guard_SUITE.erl:1447
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1636 = call (`id`/1), `false`

  %% Aliased:
  %%    _1636
  _3368 = succeeded:body _1636
  br _3368, ^3368, ^1

3368:
  %% guard_SUITE.erl:1447
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-40-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1639 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1638 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1637 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1636 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1636, 
  %%    _1637, 
  %%    _1638, 
  %%    _1639
  _2658 = call (`'-rel_ops/1-fun-40-'`/4), _1639, _1638, _1637, _1636

  %% Unique:
  %%    _2658
  _3369 = succeeded:body _2658
  br _3369, ^3682, ^1

3682:
  %% guard_SUITE.erl:1449
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1675 = call (`id`/1), `a`

  %% Aliased:
  %%    _1675
  _3370 = succeeded:body _1675
  br _3370, ^3370, ^1

3370:
  %% guard_SUITE.erl:1449
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1674 = call (`id`/1), `b`

  %% Aliased:
  %%    _1674
  _3371 = succeeded:body _1674
  br _3371, ^3371, ^1

3371:
  %% guard_SUITE.erl:1449
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1673 = call (`id`/1), `true`

  %% Aliased:
  %%    _1673
  _3372 = succeeded:body _1673
  br _3372, ^3372, ^1

3372:
  %% guard_SUITE.erl:1449
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1672 = call (`id`/1), `false`

  %% Aliased:
  %%    _1672
  _3373 = succeeded:body _1672
  br _3373, ^3373, ^1

3373:
  %% guard_SUITE.erl:1449
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-41-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1675 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1674 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1673 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1672 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1672, 
  %%    _1673, 
  %%    _1674, 
  %%    _1675
  _2663 = call (`'-rel_ops/1-fun-41-'`/4), _1675, _1674, _1673, _1672

  %% Unique:
  %%    _2663
  _3374 = succeeded:body _2663
  br _3374, ^3683, ^1

3683:
  %% guard_SUITE.erl:1450
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1715 = call (`id`/1), `42`

  %% Aliased:
  %%    _1715
  _3375 = succeeded:body _1715
  br _3375, ^3375, ^1

3375:
  %% guard_SUITE.erl:1450
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1714 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _1714
  _3376 = succeeded:body _1714
  br _3376, ^3376, ^1

3376:
  %% guard_SUITE.erl:1450
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1713 = call (`id`/1), `true`

  %% Aliased:
  %%    _1713
  _3377 = succeeded:body _1713
  br _3377, ^3377, ^1

3377:
  %% guard_SUITE.erl:1450
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1712 = call (`id`/1), `false`

  %% Aliased:
  %%    _1712
  _3378 = succeeded:body _1712
  br _3378, ^3378, ^1

3378:
  %% guard_SUITE.erl:1450
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-42-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1715 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1714 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1713 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1712 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1712, 
  %%    _1713, 
  %%    _1714, 
  %%    _1715
  _2669 = call (`'-rel_ops/1-fun-42-'`/4), _1715, _1714, _1713, _1712

  %% Unique:
  %%    _2669
  _3379 = succeeded:body _2669
  br _3379, ^3684, ^1

3684:
  %% guard_SUITE.erl:1451
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1751 = call (`id`/1), `42`

  %% Aliased:
  %%    _1751
  _3380 = succeeded:body _1751
  br _3380, ^3380, ^1

3380:
  %% guard_SUITE.erl:1451
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1750 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _1750
  _3381 = succeeded:body _1750
  br _3381, ^3381, ^1

3381:
  %% guard_SUITE.erl:1451
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1749 = call (`id`/1), `true`

  %% Aliased:
  %%    _1749
  _3382 = succeeded:body _1749
  br _3382, ^3382, ^1

3382:
  %% guard_SUITE.erl:1451
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1748 = call (`id`/1), `false`

  %% Aliased:
  %%    _1748
  _3383 = succeeded:body _1748
  br _3383, ^3383, ^1

3383:
  %% guard_SUITE.erl:1451
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-43-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1751 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1750 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1749 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1748 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1748, 
  %%    _1749, 
  %%    _1750, 
  %%    _1751
  _2674 = call (`'-rel_ops/1-fun-43-'`/4), _1751, _1750, _1749, _1748

  %% Unique:
  %%    _2674
  _3384 = succeeded:body _2674
  br _3384, ^3685, ^1

3685:
  %% guard_SUITE.erl:1453
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1791 = call (`id`/1), `a`

  %% Aliased:
  %%    _1791
  _3385 = succeeded:body _1791
  br _3385, ^3385, ^1

3385:
  %% guard_SUITE.erl:1453
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1790 = call (`id`/1), `b`

  %% Aliased:
  %%    _1790
  _3386 = succeeded:body _1790
  br _3386, ^3386, ^1

3386:
  %% guard_SUITE.erl:1453
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1789 = call (`id`/1), `true`

  %% Aliased:
  %%    _1789
  _3387 = succeeded:body _1789
  br _3387, ^3387, ^1

3387:
  %% guard_SUITE.erl:1453
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1788 = call (`id`/1), `false`

  %% Aliased:
  %%    _1788
  _3388 = succeeded:body _1788
  br _3388, ^3388, ^1

3388:
  %% guard_SUITE.erl:1453
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-44-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1791 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1790 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1789 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1788 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1788, 
  %%    _1789, 
  %%    _1790, 
  %%    _1791
  _2680 = call (`'-rel_ops/1-fun-44-'`/4), _1791, _1790, _1789, _1788

  %% Unique:
  %%    _2680
  _3389 = succeeded:body _2680
  br _3389, ^3686, ^1

3686:
  %% guard_SUITE.erl:1454
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1827 = call (`id`/1), `42`

  %% Aliased:
  %%    _1827
  _3390 = succeeded:body _1827
  br _3390, ^3390, ^1

3390:
  %% guard_SUITE.erl:1454
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1826 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _1826
  _3391 = succeeded:body _1826
  br _3391, ^3391, ^1

3391:
  %% guard_SUITE.erl:1454
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1825 = call (`id`/1), `true`

  %% Aliased:
  %%    _1825
  _3392 = succeeded:body _1825
  br _3392, ^3392, ^1

3392:
  %% guard_SUITE.erl:1454
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1824 = call (`id`/1), `false`

  %% Aliased:
  %%    _1824
  _3393 = succeeded:body _1824
  br _3393, ^3393, ^1

3393:
  %% guard_SUITE.erl:1454
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-45-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1827 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1826 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1825 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1824 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1824, 
  %%    _1825, 
  %%    _1826, 
  %%    _1827
  _2685 = call (`'-rel_ops/1-fun-45-'`/4), _1827, _1826, _1825, _1824

  %% Unique:
  %%    _2685
  _3394 = succeeded:body _2685
  br _3394, ^3687, ^1

3687:
  %% guard_SUITE.erl:1455
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1863 = call (`id`/1), `42`

  %% Aliased:
  %%    _1863
  _3395 = succeeded:body _1863
  br _3395, ^3395, ^1

3395:
  %% guard_SUITE.erl:1455
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1862 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _1862
  _3396 = succeeded:body _1862
  br _3396, ^3396, ^1

3396:
  %% guard_SUITE.erl:1455
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1861 = call (`id`/1), `true`

  %% Aliased:
  %%    _1861
  _3397 = succeeded:body _1861
  br _3397, ^3397, ^1

3397:
  %% guard_SUITE.erl:1455
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1860 = call (`id`/1), `false`

  %% Aliased:
  %%    _1860
  _3398 = succeeded:body _1860
  br _3398, ^3398, ^1

3398:
  %% guard_SUITE.erl:1455
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-46-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1863 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1862 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1861 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1860 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1860, 
  %%    _1861, 
  %%    _1862, 
  %%    _1863
  _2690 = call (`'-rel_ops/1-fun-46-'`/4), _1863, _1862, _1861, _1860

  %% Unique:
  %%    _2690
  _3399 = succeeded:body _2690
  br _3399, ^3688, ^1

3688:
  %% guard_SUITE.erl:1457
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1903 = call (`id`/1), `1.5`

  %% Aliased:
  %%    _1903
  _3400 = succeeded:body _1903
  br _3400, ^3400, ^1

3400:
  %% guard_SUITE.erl:1457
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1902 = call (`id`/1), `5`

  %% Aliased:
  %%    _1902
  _3401 = succeeded:body _1902
  br _3401, ^3401, ^1

3401:
  %% guard_SUITE.erl:1457
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1901 = call (`id`/1), `true`

  %% Aliased:
  %%    _1901
  _3402 = succeeded:body _1901
  br _3402, ^3402, ^1

3402:
  %% guard_SUITE.erl:1457
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1900 = call (`id`/1), `false`

  %% Aliased:
  %%    _1900
  _3403 = succeeded:body _1900
  br _3403, ^3403, ^1

3403:
  %% guard_SUITE.erl:1457
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-47-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1903 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1902 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1901 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1900 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1900, 
  %%    _1901, 
  %%    _1902, 
  %%    _1903
  _2696 = call (`'-rel_ops/1-fun-47-'`/4), _1903, _1902, _1901, _1900

  %% Unique:
  %%    _2696
  _3404 = succeeded:body _2696
  br _3404, ^3689, ^1

3689:
  %% guard_SUITE.erl:1458
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1945 = call (`id`/1), `-9`

  %% Aliased:
  %%    _1945
  _3405 = succeeded:body _1945
  br _3405, ^3405, ^1

3405:
  %% guard_SUITE.erl:1458
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1943 = call (`id`/1), `-100.344`

  %% Aliased:
  %%    _1943
  _3406 = succeeded:body _1943
  br _3406, ^3406, ^1

3406:
  %% guard_SUITE.erl:1458
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1941 = call (`id`/1), `true`

  %% Aliased:
  %%    _1941
  _3407 = succeeded:body _1941
  br _3407, ^3407, ^1

3407:
  %% guard_SUITE.erl:1458
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1940 = call (`id`/1), `false`

  %% Aliased:
  %%    _1940
  _3408 = succeeded:body _1940
  br _3408, ^3408, ^1

3408:
  %% guard_SUITE.erl:1458
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-48-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1945 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1943 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1941 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1940 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1940, 
  %%    _1941, 
  %%    _1943, 
  %%    _1945
  _2701 = call (`'-rel_ops/1-fun-48-'`/4), _1945, _1943, _1941, _1940

  %% Unique:
  %%    _2701
  _3409 = succeeded:body _2701
  br _3409, ^3690, ^1

3690:
  %% guard_SUITE.erl:1459
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1985 = call (`id`/1), `42`

  %% Aliased:
  %%    _1985
  _3410 = succeeded:body _1985
  br _3410, ^3410, ^1

3410:
  %% guard_SUITE.erl:1459
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1984 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _1984
  _3411 = succeeded:body _1984
  br _3411, ^3411, ^1

3411:
  %% guard_SUITE.erl:1459
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1983 = call (`id`/1), `true`

  %% Aliased:
  %%    _1983
  _3412 = succeeded:body _1983
  br _3412, ^3412, ^1

3412:
  %% guard_SUITE.erl:1459
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1982 = call (`id`/1), `false`

  %% Aliased:
  %%    _1982
  _3413 = succeeded:body _1982
  br _3413, ^3413, ^1

3413:
  %% guard_SUITE.erl:1459
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-49-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _1985 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1984 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1983 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1982 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1982, 
  %%    _1983, 
  %%    _1984, 
  %%    _1985
  _2707 = call (`'-rel_ops/1-fun-49-'`/4), _1985, _1984, _1983, _1982

  %% Unique:
  %%    _2707
  _3414 = succeeded:body _2707
  br _3414, ^3691, ^1

3691:
  %% guard_SUITE.erl:1461
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2025 = call (`id`/1), `42`

  %% Aliased:
  %%    _2025
  _3415 = succeeded:body _2025
  br _3415, ^3415, ^1

3415:
  %% guard_SUITE.erl:1461
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2024 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _2024
  _3416 = succeeded:body _2024
  br _3416, ^3416, ^1

3416:
  %% guard_SUITE.erl:1461
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2023 = call (`id`/1), `true`

  %% Aliased:
  %%    _2023
  _3417 = succeeded:body _2023
  br _3417, ^3417, ^1

3417:
  %% guard_SUITE.erl:1461
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2022 = call (`id`/1), `false`

  %% Aliased:
  %%    _2022
  _3418 = succeeded:body _2022
  br _3418, ^3418, ^1

3418:
  %% guard_SUITE.erl:1461
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-50-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _2025 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2024 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2023 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2022 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2022, 
  %%    _2023, 
  %%    _2024, 
  %%    _2025
  _2713 = call (`'-rel_ops/1-fun-50-'`/4), _2025, _2024, _2023, _2022

  %% Unique:
  %%    _2713
  _3419 = succeeded:body _2713
  br _3419, ^3692, ^1

3692:
  %% guard_SUITE.erl:1462
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2061 = call (`id`/1), `a`

  %% Aliased:
  %%    _2061
  _3420 = succeeded:body _2061
  br _3420, ^3420, ^1

3420:
  %% guard_SUITE.erl:1462
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2060 = call (`id`/1), `b`

  %% Aliased:
  %%    _2060
  _3421 = succeeded:body _2060
  br _3421, ^3421, ^1

3421:
  %% guard_SUITE.erl:1462
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2059 = call (`id`/1), `true`

  %% Aliased:
  %%    _2059
  _3422 = succeeded:body _2059
  br _3422, ^3422, ^1

3422:
  %% guard_SUITE.erl:1462
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2058 = call (`id`/1), `false`

  %% Aliased:
  %%    _2058
  _3423 = succeeded:body _2058
  br _3423, ^3423, ^1

3423:
  %% guard_SUITE.erl:1462
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-51-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _2061 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2060 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2059 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2058 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2058, 
  %%    _2059, 
  %%    _2060, 
  %%    _2061
  _2718 = call (`'-rel_ops/1-fun-51-'`/4), _2061, _2060, _2059, _2058

  %% Unique:
  %%    _2718
  _3424 = succeeded:body _2718
  br _3424, ^3693, ^1

3693:
  %% guard_SUITE.erl:1463
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2101 = call (`id`/1), `1.0`

  %% Aliased:
  %%    _2101
  _3425 = succeeded:body _2101
  br _3425, ^3425, ^1

3425:
  %% guard_SUITE.erl:1463
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2100 = call (`id`/1), `0`

  %% Aliased:
  %%    _2100
  _3426 = succeeded:body _2100
  br _3426, ^3426, ^1

3426:
  %% guard_SUITE.erl:1463
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2099 = call (`id`/1), `true`

  %% Aliased:
  %%    _2099
  _3427 = succeeded:body _2099
  br _3427, ^3427, ^1

3427:
  %% guard_SUITE.erl:1463
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2098 = call (`id`/1), `false`

  %% Aliased:
  %%    _2098
  _3428 = succeeded:body _2098
  br _3428, ^3428, ^1

3428:
  %% guard_SUITE.erl:1463
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-52-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _2101 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2100 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2099 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2098 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2098, 
  %%    _2099, 
  %%    _2100, 
  %%    _2101
  _2724 = call (`'-rel_ops/1-fun-52-'`/4), _2101, _2100, _2099, _2098

  %% Unique:
  %%    _2724
  _3429 = succeeded:body _2724
  br _3429, ^3429, ^1

3429:
  %% guard_SUITE.erl:1466
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2102 = call (`id`/1), `42`

  %% Aliased:
  %%    _2102
  _3430 = succeeded:body _2102
  br _3430, ^3430, ^1

3430:
  %% guard_SUITE.erl:1466
  %% Argument types:
  %%    _2102 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2102
  _2393 = bif:'=:=' _2102, `any_atom`
  br _2393, ^3432, ^3497

3432:
  %% guard_SUITE.erl:1466
  _2742 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _2742
  _3499 = succeeded:body _2742
  br ^1

3497:
  %% guard_SUITE.erl:1467
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2104 = call (`id`/1), `42`

  %% Aliased:
  %%    _2104
  _3433 = succeeded:body _2104
  br _3433, ^3433, ^1

3433:
  %% guard_SUITE.erl:1467
  %% Argument types:
  %%    _2104 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2104
  _2394 = bif:'=:=' _2104, `[]`
  br _2394, ^3435, ^3494

3435:
  %% guard_SUITE.erl:1467
  _2741 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _2741
  _3496 = succeeded:body _2741
  br ^1

3494:
  %% guard_SUITE.erl:1470
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  Empty = call (`id`/1), `[]`

  %% Aliased:
  %%    Empty
  _3436 = succeeded:body Empty
  br _3436, ^3436, ^1

3436:
  %% Argument types:
  %%    Empty => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Empty
  _3439 = bif:'=:=' Empty, `[]`
  br _3439, ^3694, ^3441

3694:
  %% guard_SUITE.erl:1471
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2146 = call (`id`/1), `[]`

  %% Aliased:
  %%    _2146
  _3447 = succeeded:body _2146
  br _3447, ^3447, ^1

3447:
  %% guard_SUITE.erl:1471
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2145 = call (`id`/1), `[]`

  %% Aliased:
  %%    _2145
  _3448 = succeeded:body _2145
  br _3448, ^3448, ^1

3448:
  %% guard_SUITE.erl:1471
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2144 = call (`id`/1), `true`

  %% Aliased:
  %%    _2144
  _3449 = succeeded:body _2144
  br _3449, ^3449, ^1

3449:
  %% guard_SUITE.erl:1471
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2143 = call (`id`/1), `false`

  %% Aliased:
  %%    _2143
  _3450 = succeeded:body _2143
  br _3450, ^3450, ^1

3450:
  %% guard_SUITE.erl:1471
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-53-'`/4) => fun((_, _, _, _) -> 'ok')
  %%    _2146 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2145 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2144 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _2143 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2143, 
  %%    _2144, 
  %%    _2145, 
  %%    _2146
  _2730 = call (`'-rel_ops/1-fun-53-'`/4), _2146, _2145, _2144, _2143

  %% Unique:
  %%    _2730
  _3451 = succeeded:body _2730
  br _3451, ^3695, ^1

3695:
  %% guard_SUITE.erl:1474
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-54-'`/2) => fun((_, _) -> 'error' | 'ok')
  _2398 = call (`'-rel_ops/1-fun-54-'`/2), `a`, `b`

  %% Unique:
  %%    _2398
  _3452 = succeeded:body _2398
  br _3452, ^3452, ^1

3452:
  %% Argument types:
  %%    _2398 => 'error' | 'ok'
  %% Unique:
  %%    _2398
  _3486 = bif:'=:=' _2398, `ok`
  br _3486, ^3696, ^3454

3696:
  %% guard_SUITE.erl:1481
  %% Result type:
  %%    'error' | 'ok'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-55-'`/2) => fun((_, _) -> 'error' | 'ok')
  _2402 = call (`'-rel_ops/1-fun-55-'`/2), `a`, `b`

  %% Unique:
  %%    _2402
  _3455 = succeeded:body _2402
  br _3455, ^3455, ^1

3455:
  %% Argument types:
  %%    _2402 => 'error' | 'ok'
  %% Unique:
  %%    _2402
  _3483 = bif:'=:=' _2402, `ok`
  br _3483, ^3697, ^3457

3697:
  %% guard_SUITE.erl:1494
  %% Result type:
  %%    'false' | 'true'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-56-'`/1) => fun((_) -> 'false' | 'true')
  _2408 = call (`'-rel_ops/1-fun-56-'`/1), `">>"`

  %% Unique:
  %%    _2408
  _3458 = succeeded:body _2408
  br _3458, ^3458, ^1

3458:
  br _2408, ^3479, ^3460

3479:
  %% guard_SUITE.erl:1495
  %% Result type:
  %%    'false' | 'true'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-56-'`/1) => fun((_) -> 'false' | 'true')
  _2409 = call (`'-rel_ops/1-fun-56-'`/1), `"<|"`

  %% Unique:
  %%    _2409
  _3461 = succeeded:body _2409
  br _3461, ^3461, ^1

3461:
  br _2409, ^3476, ^3463

3476:
  %% guard_SUITE.erl:1496
  %% Result type:
  %%    'false' | 'true'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-56-'`/1) => fun((_) -> 'false' | 'true')
  _2410 = call (`'-rel_ops/1-fun-56-'`/1), `"><"`

  %% Unique:
  %%    _2410
  _3464 = succeeded:body _2410
  br _3464, ^3464, ^1

3464:
  br _2410, ^3466, ^3473

3466:
  %% guard_SUITE.erl:1496
  _2734 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _2734
  _3475 = succeeded:body _2734
  br ^1

3473:
  %% guard_SUITE.erl:1497
  %% Result type:
  %%    'false'
  %% Argument types:
  %%    (`'-rel_ops/1-fun-56-'`/1) => fun((_) -> 'false' | 'true')
  _2411 = call (`'-rel_ops/1-fun-56-'`/1), `[]`

  %% Unique:
  %%    _2411
  _3467 = succeeded:body _2411
  br _3467, ^3470, ^1

3470:
  %% Result type:
  %%    'ok'
  ret `ok`

3463:
  %% guard_SUITE.erl:1495
  _2735 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _2735
  _3478 = succeeded:body _2735
  br ^1

3460:
  %% guard_SUITE.erl:1494
  _2736 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _2736
  _3481 = succeeded:body _2736
  br ^1

3457:
  %% guard_SUITE.erl:1481
  _2737 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2737
  _3484 = succeeded:body _2737
  br ^1

3454:
  %% guard_SUITE.erl:1474
  _2738 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2738
  _3487 = succeeded:body _2738
  br ^1

3441:
  %% guard_SUITE.erl:1471
  _2740 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2740
  _3493 = succeeded:body _2740
  br ^1

3271:
  %% guard_SUITE.erl:1441
  _2637 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2637
  _3329 = succeeded:body _2637
  br ^1

3256:
  %% guard_SUITE.erl:1440
  _2639 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2639
  _3335 = succeeded:body _2639
  br ^1

3241:
  %% guard_SUITE.erl:1439
  _2641 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2641
  _3341 = succeeded:body _2641
  br ^1

3226:
  %% guard_SUITE.erl:1438
  _2643 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2643
  _3347 = succeeded:body _2643
  br ^1

3196:
  %% guard_SUITE.erl:1436
  _2647 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2647
  _3359 = succeeded:body _2647
  br ^1

3163:
  %% guard_SUITE.erl:1427
  _2746 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2746
  _3511 = succeeded:body _2746
  br ^1

3129:
  %% guard_SUITE.erl:1425
  _2750 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2750
  _3523 = succeeded:body _2750
  br ^1

3063:
  %% guard_SUITE.erl:1419
  _2758 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2758
  _3547 = succeeded:body _2758
  br ^1

3023:
  %% guard_SUITE.erl:1415
  _2762 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2762
  _3559 = succeeded:body _2762
  br ^1

3008:
  %% guard_SUITE.erl:1414
  _2764 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2764
  _3565 = succeeded:body _2764
  br ^1

2978:
  %% guard_SUITE.erl:1411
  _2768 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2768
  _3577 = succeeded:body _2768
  br ^1

2945:
  %% guard_SUITE.erl:1408
  _2772 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2772
  _3589 = succeeded:body _2772
  br ^1

2911:
  %% guard_SUITE.erl:1406
  _2776 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2776
  _3601 = succeeded:body _2776
  br ^1

2894:
  %% guard_SUITE.erl:1404
  _2778 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2778
  _3607 = succeeded:body _2778
  br ^1

2848:
  %% guard_SUITE.erl:1401
  _2784 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2784
  _3625 = succeeded:body _2784
  br ^1

2792:
  %% guard_SUITE.erl:1376
  %% Aliased:
  %%    _2179
  _2414 = match_fail `case_clause`, _2179

  %% Unique:
  %%    _2414
  _2797 = succeeded:body _2414
  br ^1

2788:
  %% guard_SUITE.erl:1375
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-rel_ops/1-',1}}
  _2785 = match_fail `function_clause`, _0

  %% Unique:
  %%    _2785
  _3626 = succeeded:body _2785
  br ^1

1:
  _2786 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2786
}

%% guard_SUITE.erl:1501
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number()
function `guard_SUITE`:`make_fun`(_0) {
0:
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _0
  _2 = make_fun (`'-make_fun/1-fun-0-'`/1), _0
  %% Result type:
  %%    fun(() -> integer())
  %% Aliased:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:1504
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number()
%%    _1 =>
%%     number()
function `guard_SUITE`:`make_fun`(_0, _1) {
0:
  %% Result type:
  %%    {number(), number()}
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = make_fun (`'-make_fun/2-fun-0-'`/2), _0, _1
  %% Result type:
  %%    fun(() -> {number(), number()})
  %% Aliased:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:1507
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     2
%%    _2 =>
%%     3
%%    _3 =>
%%     4
%%    _4 =>
%%     5
%%    _5 =>
%%     6
%%    _6 =>
%%     7
%%    _7 =>
%%     8
%%    _8 =>
%%     9
%%    _9 =>
%%     10
%%    _10 =>
%%     11
%%    _11 =>
%%     12
%%    _12 =>
%%     number(13)
%%    _13 =>
%%     number(14)
function `guard_SUITE`:`make_fun`(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13) {
0:
  %% Result type:
  %%    {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()}
  %% Aliased:
  %%    _12, 
  %%    _13
  _14 = make_fun (`'-make_fun/14-fun-0-'`/14), `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, _12, _13
  %% Result type:
  %%    fun(() -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()})
  %% Aliased:
  %%    _14
  ret _14
}

%% guard_SUITE.erl:1514
%% Counter = 165
%% bs_ensure_opt: true
function `guard_SUITE`:`rel_op_combinations`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _93 = bif:is_list _0
  br _93, ^93, ^92

93:
  %% guard_SUITE.erl:1515
  _4 = call (`lists`:`seq`/2), `48`, `57`

  %% Aliased:
  %%    _4
  _94 = succeeded:body _4
  br _94, ^94, ^1

94:
  %% guard_SUITE.erl:1516
  _2 = call (`lists`:`seq`/2), `1632`, `1641`

  %% Aliased:
  %%    _2
  _95 = succeeded:body _2
  br _95, ^95, ^1

95:
  %% guard_SUITE.erl:1517
  _1 = call (`lists`:`seq`/2), `1776`, `1785`

  %% Aliased:
  %%    _1
  _96 = succeeded:body _1
  br _96, ^96, ^1

96:
  %% guard_SUITE.erl:1516
  %% Aliased:
  %%    _1, 
  %%    _2
  _3 = call (`erlang`:`'++'`/2), _2, _1

  %% Aliased:
  %%    _3
  _97 = succeeded:body _3
  br _97, ^97, ^1

97:
  %% guard_SUITE.erl:1515
  %% Aliased:
  %%    _3, 
  %%    _4
  Digits0 = call (`erlang`:`'++'`/2), _4, _3

  %% Aliased:
  %%    Digits0
  _98 = succeeded:body Digits0
  br _98, ^98, ^1

98:
  %% guard_SUITE.erl:1518
  %% Aliased:
  %%    Digits0
  Digits = call (`gb_sets`:`from_list`/1), Digits0

  %% Aliased:
  %%    Digits
  _99 = succeeded:body Digits
  br _99, ^99, ^1

99:
  %% guard_SUITE.erl:1519
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Digits
  _72 = call (`rel_op_combinations_1`/2), `1792`, Digits

  %% Unique:
  %%    _72
  _100 = succeeded:body _72
  br _100, ^100, ^1

100:
  %% guard_SUITE.erl:1520
  %% Result type:
  %%    'false' | 'true'
  _53 = call (`is_digit`/1), `-576460752303423488`

  %% Unique:
  %%    _53
  _101 = succeeded:body _53
  br _101, ^101, ^1

101:
  br _53, ^103, ^161

103:
  %% guard_SUITE.erl:1520
  _88 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _88
  _163 = succeeded:body _88
  br ^1

161:
  %% guard_SUITE.erl:1521
  %% Result type:
  %%    'false' | 'true'
  _54 = call (`is_digit`/1), `-18446744073709551616`

  %% Unique:
  %%    _54
  _104 = succeeded:body _54
  br _104, ^104, ^1

104:
  br _54, ^106, ^158

106:
  %% guard_SUITE.erl:1521
  _87 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _87
  _160 = succeeded:body _87
  br ^1

158:
  %% guard_SUITE.erl:1522
  %% Result type:
  %%    'false' | 'true'
  _55 = call (`is_digit`/1), `576460752303423487`

  %% Unique:
  %%    _55
  _107 = succeeded:body _55
  br _107, ^107, ^1

107:
  br _55, ^109, ^155

109:
  %% guard_SUITE.erl:1522
  _86 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _86
  _157 = succeeded:body _86
  br ^1

155:
  %% guard_SUITE.erl:1523
  %% Result type:
  %%    'false' | 'true'
  _56 = call (`is_digit`/1), `18446744073709551616`

  %% Unique:
  %%    _56
  _110 = succeeded:body _56
  br _110, ^110, ^1

110:
  br _56, ^112, ^152

112:
  %% guard_SUITE.erl:1523
  _85 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _85
  _154 = succeeded:body _85
  br ^1

152:
  %% guard_SUITE.erl:1525
  _21 = call (`lists`:`seq`/2), `3`, `5`

  %% Aliased:
  %%    _21
  _113 = succeeded:body _21
  br _113, ^113, ^1

113:
  %% guard_SUITE.erl:1526
  _19 = call (`lists`:`seq`/2), `10`, `12`

  %% Aliased:
  %%    _19
  _114 = succeeded:body _19
  br _114, ^114, ^1

114:
  %% guard_SUITE.erl:1526
  _18 = call (`lists`:`seq`/2), `14`, `20`

  %% Aliased:
  %%    _18
  _115 = succeeded:body _18
  br _115, ^115, ^1

115:
  %% guard_SUITE.erl:1526
  %% Aliased:
  %%    _18, 
  %%    _19
  _20 = call (`erlang`:`'++'`/2), _19, _18

  %% Aliased:
  %%    _20
  _116 = succeeded:body _20
  br _116, ^116, ^1

116:
  %% guard_SUITE.erl:1525
  %% Aliased:
  %%    _20, 
  %%    _21
  BrokenRange0 = call (`erlang`:`'++'`/2), _21, _20

  %% Aliased:
  %%    BrokenRange0
  _117 = succeeded:body BrokenRange0
  br _117, ^117, ^1

117:
  %% guard_SUITE.erl:1527
  %% Aliased:
  %%    BrokenRange0
  BrokenRange = call (`gb_sets`:`from_list`/1), BrokenRange0

  %% Aliased:
  %%    BrokenRange
  _118 = succeeded:body BrokenRange
  br _118, ^118, ^1

118:
  %% guard_SUITE.erl:1528
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    BrokenRange
  _73 = call (`rel_op_combinations_2`/2), `30`, BrokenRange

  %% Unique:
  %%    _73
  _119 = succeeded:body _73
  br _119, ^119, ^1

119:
  %% guard_SUITE.erl:1529
  %% Result type:
  %%    'false' | 'true'
  _57 = call (`broken_range`/1), `-18446744073709551616`

  %% Unique:
  %%    _57
  _120 = succeeded:body _57
  br _120, ^120, ^1

120:
  br _57, ^122, ^149

122:
  %% guard_SUITE.erl:1529
  _84 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _84
  _151 = succeeded:body _84
  br ^1

149:
  %% guard_SUITE.erl:1530
  %% Result type:
  %%    'false' | 'true'
  _58 = call (`broken_range`/1), `18446744073709551616`

  %% Unique:
  %%    _58
  _123 = succeeded:body _58
  br _123, ^123, ^1

123:
  br _58, ^125, ^146

125:
  %% guard_SUITE.erl:1530
  _83 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _83
  _148 = succeeded:body _83
  br ^1

146:
  %% guard_SUITE.erl:1533
  _31 = call (`lists`:`seq`/2), `51`, `80`

  %% Aliased:
  %%    _31
  _126 = succeeded:body _31
  br _126, ^126, ^1

126:
  %% guard_SUITE.erl:1533
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _31
  _36 = call (`'-rel_op_combinations/1-lc$^0/1-0-'`/1), _31

  %% Unique:
  %%    _36
  _127 = succeeded:body _36
  br _127, ^127, ^1

127:
  %% guard_SUITE.erl:1532
  _39 = call (`lists`:`seq`/2), `0`, `50`

  %% Aliased:
  %%    _39
  _128 = succeeded:body _39
  br _128, ^128, ^1

128:
  %% guard_SUITE.erl:1532
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _39
  %% Unique:
  %%    _36
  _44 = call (`'-rel_op_combinations/1-lc$^1/1-1-'`/2), _39, _36

  %% Unique:
  %%    _44
  _129 = succeeded:body _44
  br _129, ^129, ^1

129:
  %% guard_SUITE.erl:1534
  %% Unique:
  %%    _44
  Red = call (`gb_trees`:`from_orddict`/1), _44

  %% Aliased:
  %%    Red
  _130 = succeeded:body Red
  br _130, ^130, ^1

130:
  %% guard_SUITE.erl:1535
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Red
  _78 = call (`rel_op_combinations_3`/2), `100`, Red

  %% Unique:
  %%    _78
  _131 = succeeded:body _78
  br _131, ^131, ^1

131:
  %% guard_SUITE.erl:1536
  %% Result type:
  %%    'none' | integer()
  _70 = call (`redundant`/1), `-18446744073709551616`

  %% Unique:
  %%    _70
  _132 = succeeded:body _70
  br _132, ^132, ^1

132:
  %% Argument types:
  %%    _70 => 'none' | integer()
  %% Unique:
  %%    _70
  _144 = bif:'=:=' _70, `-36893488147419103232`
  br _144, ^143, ^134

143:
  %% guard_SUITE.erl:1537
  %% Result type:
  %%    'none' | integer()
  _71 = call (`redundant`/1), `18446744073709551616`

  %% Unique:
  %%    _71
  _135 = succeeded:body _71
  br _135, ^135, ^1

135:
  %% Argument types:
  %%    _71 => 'none' | integer()
  %% Unique:
  %%    _71
  _141 = bif:'=:=' _71, `none`
  br _141, ^140, ^137

140:
  %% guard_SUITE.erl:1539
  %% Result type:
  %%    'ok'
  _79 = call (`rel_op_combinations_4`/0)

  %% Unique:
  %%    _79
  _138 = succeeded:body _79
  br _138, ^138, ^1

138:
  %% guard_SUITE.erl:1541
  %% Result type:
  %%    'ok'
  _80 = call (`rel_op_combinations_5`/0)

  %% Unique:
  %%    _80
  _139 = succeeded:body _80
  br _139, ^139, ^1

139:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _80
  ret _80

137:
  %% guard_SUITE.erl:1537
  %% Unique:
  %%    _71
  _81 = match_fail `badmatch`, _71

  %% Unique:
  %%    _81
  _142 = succeeded:body _81
  br ^1

134:
  %% guard_SUITE.erl:1536
  %% Unique:
  %%    _70
  _82 = match_fail `badmatch`, _70

  %% Unique:
  %%    _82
  _145 = succeeded:body _82
  br ^1

92:
  %% guard_SUITE.erl:1514
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-rel_op_combinations/1-',1}}
  _89 = match_fail `function_clause`, _0

  %% Unique:
  %%    _89
  _164 = succeeded:body _89
  br ^1

1:
  _90 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _90
}

%% guard_SUITE.erl:1543
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..1792
function `guard_SUITE`:`rel_op_combinations_1`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => '-inf'..1792
  %% Unique:
  %%    _0
  _16 = bif:'=:=' _0, `0`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% guard_SUITE.erl:1546
  %% Aliased:
  %%    _0, 
  %%    _1
  Bool = call (`gb_sets`:`is_member`/2), _0, _1

  %% Aliased:
  %%    Bool
  _17 = succeeded:body Bool
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:1547
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _9 = call (`is_digit`/1), _0

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _9 => 'false' | 'true'
  %% Aliased:
  %%    Bool
  %% Unique:
  %%    _9
  _21 = bif:'=:=' _9, Bool
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:1548
  %% Argument types:
  %%    _0 => '-inf'..1792
  %% Unique:
  %%    _0
  _4 = bif:'-' _0, `1`

  %% Unique:
  %%    _4
  _22 = succeeded:body _4
  br _22, ^22, ^1

22:
  %% guard_SUITE.erl:1548
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _4
  _10 = call (`rel_op_combinations_1`/2), _4, _1

  %% Unique:
  %%    _10
  _23 = succeeded:body _10
  br _23, ^23, ^1

23:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _10
  ret _10

20:
  %% guard_SUITE.erl:1547
  %% Unique:
  %%    _9
  _11 = match_fail `badmatch`, _9

  %% Unique:
  %%    _11
  _24 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:1550
%% Counter = 96
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit`(_0) {
0:
  %% guard_SUITE.erl:1551
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  Bool = call (`is_digit_1`/1), _0

  %% Unique:
  %%    Bool
  _45 = succeeded:body Bool
  br _45, ^45, ^1

45:
  %% guard_SUITE.erl:1552
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _24 = call (`is_digit_2`/1), _0

  %% Unique:
  %%    _24
  _46 = succeeded:body _24
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _24 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _24, 
  %%    Bool
  _49 = bif:'=:=' _24, Bool
  br _49, ^49, ^48

49:
  %% guard_SUITE.erl:1553
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _25 = call (`is_digit_3`/1), _0

  %% Unique:
  %%    _25
  _50 = succeeded:body _25
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    _25 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _25, 
  %%    Bool
  _53 = bif:'=:=' _25, Bool
  br _53, ^53, ^52

53:
  %% guard_SUITE.erl:1554
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _26 = call (`is_digit_4`/1), _0

  %% Unique:
  %%    _26
  _54 = succeeded:body _26
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _26 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _26, 
  %%    Bool
  _57 = bif:'=:=' _26, Bool
  br _57, ^57, ^56

57:
  %% guard_SUITE.erl:1555
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _27 = call (`is_digit_5`/1), _0

  %% Unique:
  %%    _27
  _58 = succeeded:body _27
  br _58, ^58, ^1

58:
  %% Argument types:
  %%    _27 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _27, 
  %%    Bool
  _61 = bif:'=:=' _27, Bool
  br _61, ^61, ^60

61:
  %% guard_SUITE.erl:1556
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _28 = call (`is_digit_6`/1), _0

  %% Unique:
  %%    _28
  _62 = succeeded:body _28
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _28 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _28, 
  %%    Bool
  _65 = bif:'=:=' _28, Bool
  br _65, ^65, ^64

65:
  %% guard_SUITE.erl:1557
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _29 = call (`is_digit_7`/1), _0

  %% Unique:
  %%    _29
  _66 = succeeded:body _29
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    _29 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _29, 
  %%    Bool
  _69 = bif:'=:=' _29, Bool
  br _69, ^69, ^68

69:
  %% guard_SUITE.erl:1558
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _30 = call (`is_digit_8`/1), _0

  %% Unique:
  %%    _30
  _70 = succeeded:body _30
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    _30 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _30, 
  %%    Bool
  _73 = bif:'=:=' _30, Bool
  br _73, ^73, ^72

73:
  %% guard_SUITE.erl:1559
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _31 = call (`is_digit_9`/2), `42`, _0

  %% Unique:
  %%    _31
  _74 = succeeded:body _31
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _31 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _31, 
  %%    Bool
  _77 = bif:'=:=' _31, Bool
  br _77, ^77, ^76

77:
  %% guard_SUITE.erl:1560
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _32 = call (`is_digit_10`/2), _0, `0`

  %% Unique:
  %%    _32
  _78 = succeeded:body _32
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    _32 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _32, 
  %%    Bool
  _81 = bif:'=:=' _32, Bool
  br _81, ^81, ^80

81:
  %% guard_SUITE.erl:1561
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _22 = call (`is_digit_11`/2), _0, `0`

  %% Unique:
  %%    _22
  _82 = succeeded:body _22
  br _82, ^82, ^1

82:
  %% Argument types:
  %%    _22 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _22, 
  %%    Bool
  _85 = bif:'=:=' _22, Bool
  br _85, ^85, ^84

85:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _22
  ret _22

84:
  %% guard_SUITE.erl:1561
  %% Unique:
  %%    _22
  _33 = match_fail `badmatch`, _22

  %% Unique:
  %%    _33
  _86 = succeeded:body _33
  br ^1

80:
  %% guard_SUITE.erl:1560
  %% Unique:
  %%    _32
  _34 = match_fail `badmatch`, _32

  %% Unique:
  %%    _34
  _87 = succeeded:body _34
  br ^1

76:
  %% guard_SUITE.erl:1559
  %% Unique:
  %%    _31
  _35 = match_fail `badmatch`, _31

  %% Unique:
  %%    _35
  _88 = succeeded:body _35
  br ^1

72:
  %% guard_SUITE.erl:1558
  %% Unique:
  %%    _30
  _36 = match_fail `badmatch`, _30

  %% Unique:
  %%    _36
  _89 = succeeded:body _36
  br ^1

68:
  %% guard_SUITE.erl:1557
  %% Unique:
  %%    _29
  _37 = match_fail `badmatch`, _29

  %% Unique:
  %%    _37
  _90 = succeeded:body _37
  br ^1

64:
  %% guard_SUITE.erl:1556
  %% Unique:
  %%    _28
  _38 = match_fail `badmatch`, _28

  %% Unique:
  %%    _38
  _91 = succeeded:body _38
  br ^1

60:
  %% guard_SUITE.erl:1555
  %% Unique:
  %%    _27
  _39 = match_fail `badmatch`, _27

  %% Unique:
  %%    _39
  _92 = succeeded:body _39
  br ^1

56:
  %% guard_SUITE.erl:1554
  %% Unique:
  %%    _26
  _40 = match_fail `badmatch`, _26

  %% Unique:
  %%    _40
  _93 = succeeded:body _40
  br ^1

52:
  %% guard_SUITE.erl:1553
  %% Unique:
  %%    _25
  _41 = match_fail `badmatch`, _25

  %% Unique:
  %%    _41
  _94 = succeeded:body _41
  br ^1

48:
  %% guard_SUITE.erl:1552
  %% Unique:
  %%    _24
  _42 = match_fail `badmatch`, _24

  %% Unique:
  %%    _42
  _95 = succeeded:body _42
  br ^1

1:
  _43 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _43
}

%% guard_SUITE.erl:1563
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_1`(_0) {
0:
  %% guard_SUITE.erl:1563
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' `1632`, _0
  br _1, ^35, ^17

35:
  %% guard_SUITE.erl:1563
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `1641`
  br _2, ^19, ^20

19:
  %% Result type:
  %%    'true'
  ret `true`

17:
  %% guard_SUITE.erl:1564
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _3 = bif:'=<' `48`, _0
  br _3, ^31, ^16

31:
  %% guard_SUITE.erl:1564
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `57`
  br _4, ^22, ^20

22:
  %% Result type:
  %%    'true'
  ret `true`

20:
  %% guard_SUITE.erl:1565
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _5 = bif:'=<' `1776`, _0
  br _5, ^27, ^16

27:
  %% guard_SUITE.erl:1565
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `1785`
  ret _6

16:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1568
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_2`(_0) {
0:
  %% guard_SUITE.erl:1568
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'<' `47`, _0
  br _2, ^38, ^19

38:
  %% guard_SUITE.erl:1568
  %% Argument types:
  %%    _0 => 48..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'=<' _0, `57`
  br _3, ^22, ^20

22:
  %% Result type:
  %%    'true'
  ret `true`

20:
  %% guard_SUITE.erl:1569
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _5 = bif:'<' `1631`, _0
  br _5, ^34, ^19

34:
  %% guard_SUITE.erl:1569
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `1641`
  br _6, ^25, ^23

25:
  %% Result type:
  %%    'true'
  ret `true`

23:
  %% guard_SUITE.erl:1570
  %% Argument types:
  %%    _0 => 1642..18446744073709551616
  %% Unique:
  %%    _0
  _8 = bif:'<' `1775`, _0
  br _8, ^30, ^19

30:
  %% guard_SUITE.erl:1570
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _9 = bif:'=<' _0, `1785`
  ret _9

19:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1573
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_3`(_0) {
0:
  %% guard_SUITE.erl:1573
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' `1632`, _0
  br _1, ^38, ^20

38:
  %% guard_SUITE.erl:1573
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'<' _0, `1642`
  br _3, ^22, ^23

22:
  %% Result type:
  %%    'true'
  ret `true`

20:
  %% guard_SUITE.erl:1574
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _4 = bif:'=<' `48`, _0
  br _4, ^34, ^19

34:
  %% guard_SUITE.erl:1574
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _6 = bif:'<' _0, `58`
  br _6, ^25, ^23

25:
  %% Result type:
  %%    'true'
  ret `true`

23:
  %% guard_SUITE.erl:1575
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _7 = bif:'=<' `1776`, _0
  br _7, ^30, ^19

30:
  %% guard_SUITE.erl:1575
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _9 = bif:'<' _0, `1786`
  ret _9

19:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1578
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_4`(_0) {
0:
  %% guard_SUITE.erl:1578
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'<' `1631`, _0
  br _2, ^41, ^23

41:
  %% guard_SUITE.erl:1578
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'<' _0, `1642`
  br _4, ^25, ^26

25:
  %% Result type:
  %%    'true'
  ret `true`

23:
  %% guard_SUITE.erl:1579
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _6 = bif:'<' `47`, _0
  br _6, ^37, ^22

37:
  %% guard_SUITE.erl:1579
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _8 = bif:'<' _0, `58`
  br _8, ^28, ^26

28:
  %% Result type:
  %%    'true'
  ret `true`

26:
  %% guard_SUITE.erl:1580
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _10 = bif:'<' `1775`, _0
  br _10, ^33, ^22

33:
  %% guard_SUITE.erl:1580
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _12 = bif:'<' _0, `1786`
  ret _12

22:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1583
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_5`(_0) {
0:
  %% guard_SUITE.erl:1583
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `1632`
  br _1, ^35, ^17

35:
  %% guard_SUITE.erl:1583
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `1641`
  br _2, ^19, ^20

19:
  %% Result type:
  %%    'true'
  ret `true`

17:
  %% guard_SUITE.erl:1584
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `48`
  br _3, ^31, ^16

31:
  %% guard_SUITE.erl:1584
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `57`
  br _4, ^22, ^20

22:
  %% Result type:
  %%    'true'
  ret `true`

20:
  %% guard_SUITE.erl:1585
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _5 = bif:'>=' _0, `1776`
  br _5, ^27, ^16

27:
  %% guard_SUITE.erl:1585
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `1785`
  ret _6

16:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1588
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_6`(_0) {
0:
  %% guard_SUITE.erl:1588
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'>' _0, `1631`
  br _2, ^38, ^20

38:
  %% guard_SUITE.erl:1588
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'=<' _0, `1641`
  br _3, ^22, ^23

22:
  %% Result type:
  %%    'true'
  ret `true`

20:
  %% guard_SUITE.erl:1589
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _5 = bif:'>' _0, `47`
  br _5, ^34, ^19

34:
  %% guard_SUITE.erl:1589
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `57`
  br _6, ^25, ^23

25:
  %% Result type:
  %%    'true'
  ret `true`

23:
  %% guard_SUITE.erl:1590
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _8 = bif:'>' _0, `1775`
  br _8, ^30, ^19

30:
  %% guard_SUITE.erl:1590
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _9 = bif:'=<' _0, `1785`
  ret _9

19:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1593
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_7`(_0) {
0:
  %% guard_SUITE.erl:1593
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' `1632`, _0
  br _1, ^41, ^19

41:
  %% guard_SUITE.erl:1593
  %% Argument types:
  %%    _0 => 1632..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `1641`
  br _2, ^21, ^22

21:
  %% Result type:
  %%    'true'
  ret `true`

19:
  %% guard_SUITE.erl:1594
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _3 = bif:'=<' `48`, _0
  br _3, ^36, ^18

36:
  %% guard_SUITE.erl:1594
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `58`
  br _4, ^37, ^22

37:
  %% guard_SUITE.erl:1594
  %% Argument types:
  %%    _0 => 48..58
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `58`
  br _5, ^18, ^26

26:
  %% Result type:
  %%    'true'
  ret `true`

22:
  %% guard_SUITE.erl:1595
  %% Argument types:
  %%    _0 => 59..18446744073709551616
  %% Unique:
  %%    _0
  _7 = bif:'=<' `1776`, _0
  br _7, ^31, ^18

31:
  %% guard_SUITE.erl:1595
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _8 = bif:'=<' _0, `1785`
  ret _8

18:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1598
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_8`(_0) {
0:
  %% guard_SUITE.erl:1598
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' _0, `57`
  br _1, ^41, ^20

41:
  %% guard_SUITE.erl:1598
  %% Argument types:
  %%    _0 => '-inf'..57
  %% Unique:
  %%    _0
  _3 = bif:'>' _0, `47`
  ret _3

20:
  %% guard_SUITE.erl:1599
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `1785`
  br _4, ^37, ^29

37:
  %% guard_SUITE.erl:1599
  %% Argument types:
  %%    _0 => 58..1785
  %% Unique:
  %%    _0
  _6 = bif:'>' _0, `1775`
  br _6, ^25, ^23

25:
  %% Result type:
  %%    'true'
  ret `true`

23:
  %% guard_SUITE.erl:1600
  %% Argument types:
  %%    _0 => 58..1775
  %% Unique:
  %%    _0
  _7 = bif:'=<' _0, `1641`
  br _7, ^33, ^29

33:
  %% guard_SUITE.erl:1600
  %% Argument types:
  %%    _0 => 58..1641
  %% Unique:
  %%    _0
  _9 = bif:'>' _0, `1631`
  ret _9

29:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1604
%% Counter = 47
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
%%    _1 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`is_digit_9`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => '-inf'..18446744073709551616
  %% Unique:
  %%    _1
  _25 = bif:'=:=' _1, `0`
  br _25, ^23, ^22

23:
  %% Result type:
  %%    'false'
  ret `false`

22:
  %% guard_SUITE.erl:1605
  %% Argument types:
  %%    _1 => '-inf'..18446744073709551616
  %% Unique:
  %%    _1
  _2 = bif:'>' _1, `1631`
  br _2, ^45, ^27

45:
  %% guard_SUITE.erl:1605
  %% Argument types:
  %%    _1 => 1632..18446744073709551616
  %% Unique:
  %%    _1
  _3 = bif:'<' _1, `1642`
  br _3, ^29, ^30

29:
  %% Result type:
  %%    'true'
  ret `true`

27:
  %% guard_SUITE.erl:1606
  %% Argument types:
  %%    _1 => '-inf'..1631
  %% Unique:
  %%    _1
  _4 = bif:'=<' `48`, _1
  br _4, ^41, ^26

41:
  %% guard_SUITE.erl:1606
  %% Argument types:
  %%    _1 => 48..1631
  %% Unique:
  %%    _1
  _5 = bif:'=<' _1, `57`
  br _5, ^32, ^30

32:
  %% Result type:
  %%    'true'
  ret `true`

30:
  %% guard_SUITE.erl:1607
  %% Argument types:
  %%    _1 => 58..18446744073709551616
  %% Unique:
  %%    _1
  _6 = bif:'=<' `1776`, _1
  br _6, ^37, ^26

37:
  %% guard_SUITE.erl:1607
  %% Argument types:
  %%    _1 => 1776..18446744073709551616
  %% Unique:
  %%    _1
  _7 = bif:'=<' _1, `1785`
  ret _7

26:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1610
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
%%    _1 =>
%%     0
function `guard_SUITE`:`is_digit_10`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _26 = bif:'=:=' _0, `0`
  br _26, ^23, ^22

23:
  %% Result type:
  %%    'false'
  ret `false`

22:
  %% guard_SUITE.erl:1611
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'<' _0, `1642`
  br _2, ^46, ^31

46:
  %% guard_SUITE.erl:1611
  %% Argument types:
  %%    _0 => '-inf'..1641
  %% Unique:
  %%    _0
  _3 = bif:'=<' `1632`, _0
  br _3, ^30, ^28

30:
  %% Result type:
  %%    'true'
  ret `true`

28:
  %% guard_SUITE.erl:1612
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _4 = bif:'=<' `48`, _0
  br _4, ^42, ^27

42:
  %% guard_SUITE.erl:1612
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _5 = bif:'=<' _0, `57`
  br _5, ^33, ^31

33:
  %% Result type:
  %%    'true'
  ret `true`

31:
  %% guard_SUITE.erl:1613
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _6 = bif:'=<' `1776`, _0
  br _6, ^38, ^27

38:
  %% guard_SUITE.erl:1613
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _7 = bif:'=<' _0, `1785`
  ret _7

27:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1616
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
%%    _1 =>
%%     0
function `guard_SUITE`:`is_digit_11`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _26 = bif:'=:=' _0, `0`
  br _26, ^23, ^22

23:
  %% Result type:
  %%    'false'
  ret `false`

22:
  %% guard_SUITE.erl:1617
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `1641`
  br _2, ^46, ^31

46:
  %% guard_SUITE.erl:1617
  %% Argument types:
  %%    _0 => '-inf'..1641
  %% Unique:
  %%    _0
  _3 = bif:'=<' `1632`, _0
  br _3, ^30, ^28

30:
  %% Result type:
  %%    'true'
  ret `true`

28:
  %% guard_SUITE.erl:1618
  %% Argument types:
  %%    _0 => '-inf'..1631
  %% Unique:
  %%    _0
  _4 = bif:'=<' `48`, _0
  br _4, ^42, ^27

42:
  %% guard_SUITE.erl:1618
  %% Argument types:
  %%    _0 => 48..1631
  %% Unique:
  %%    _0
  _5 = bif:'=<' _0, `57`
  br _5, ^33, ^31

33:
  %% Result type:
  %%    'true'
  ret `true`

31:
  %% guard_SUITE.erl:1619
  %% Argument types:
  %%    _0 => 58..18446744073709551616
  %% Unique:
  %%    _0
  _6 = bif:'=<' `1776`, _0
  br _6, ^38, ^27

38:
  %% guard_SUITE.erl:1619
  %% Argument types:
  %%    _0 => 1776..18446744073709551616
  %% Unique:
  %%    _0
  _7 = bif:'=<' _0, `1785`
  ret _7

27:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1622
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..30
function `guard_SUITE`:`rel_op_combinations_2`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => '-inf'..30
  %% Unique:
  %%    _0
  _16 = bif:'=:=' _0, `0`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% guard_SUITE.erl:1625
  %% Aliased:
  %%    _0, 
  %%    _1
  Bool = call (`gb_sets`:`is_member`/2), _0, _1

  %% Aliased:
  %%    Bool
  _17 = succeeded:body Bool
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:1626
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _9 = call (`broken_range`/1), _0

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _9 => 'false' | 'true'
  %% Aliased:
  %%    Bool
  %% Unique:
  %%    _9
  _21 = bif:'=:=' _9, Bool
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:1627
  %% Argument types:
  %%    _0 => '-inf'..30
  %% Unique:
  %%    _0
  _4 = bif:'-' _0, `1`

  %% Unique:
  %%    _4
  _22 = succeeded:body _4
  br _22, ^22, ^1

22:
  %% guard_SUITE.erl:1627
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _4
  _10 = call (`rel_op_combinations_2`/2), _4, _1

  %% Unique:
  %%    _10
  _23 = succeeded:body _10
  br _23, ^23, ^1

23:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _10
  ret _10

20:
  %% guard_SUITE.erl:1626
  %% Unique:
  %%    _9
  _11 = match_fail `badmatch`, _9

  %% Unique:
  %%    _11
  _24 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:1629
%% Counter = 114
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range`(_0) {
0:
  %% guard_SUITE.erl:1630
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  Bool = call (`broken_range_1`/1), _0

  %% Unique:
  %%    Bool
  _53 = succeeded:body Bool
  br _53, ^53, ^1

53:
  %% guard_SUITE.erl:1631
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _28 = call (`broken_range_2`/1), _0

  %% Unique:
  %%    _28
  _54 = succeeded:body _28
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _28 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _28, 
  %%    Bool
  _57 = bif:'=:=' _28, Bool
  br _57, ^57, ^56

57:
  %% guard_SUITE.erl:1632
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _29 = call (`broken_range_3`/1), _0

  %% Unique:
  %%    _29
  _58 = succeeded:body _29
  br _58, ^58, ^1

58:
  %% Argument types:
  %%    _29 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _29, 
  %%    Bool
  _61 = bif:'=:=' _29, Bool
  br _61, ^61, ^60

61:
  %% guard_SUITE.erl:1633
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _30 = call (`broken_range_4`/1), _0

  %% Unique:
  %%    _30
  _62 = succeeded:body _30
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _30 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _30, 
  %%    Bool
  _65 = bif:'=:=' _30, Bool
  br _65, ^65, ^64

65:
  %% guard_SUITE.erl:1634
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _31 = call (`broken_range_5`/1), _0

  %% Unique:
  %%    _31
  _66 = succeeded:body _31
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    _31 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _31, 
  %%    Bool
  _69 = bif:'=:=' _31, Bool
  br _69, ^69, ^68

69:
  %% guard_SUITE.erl:1635
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _32 = call (`broken_range_6`/1), _0

  %% Unique:
  %%    _32
  _70 = succeeded:body _32
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    _32 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _32, 
  %%    Bool
  _73 = bif:'=:=' _32, Bool
  br _73, ^73, ^72

73:
  %% guard_SUITE.erl:1636
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _33 = call (`broken_range_7`/1), _0

  %% Unique:
  %%    _33
  _74 = succeeded:body _33
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _33 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _33, 
  %%    Bool
  _77 = bif:'=:=' _33, Bool
  br _77, ^77, ^76

77:
  %% guard_SUITE.erl:1637
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _34 = call (`broken_range_8`/1), _0

  %% Unique:
  %%    _34
  _78 = succeeded:body _34
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    _34 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _34, 
  %%    Bool
  _81 = bif:'=:=' _34, Bool
  br _81, ^81, ^80

81:
  %% guard_SUITE.erl:1638
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _35 = call (`broken_range_9`/1), _0

  %% Unique:
  %%    _35
  _82 = succeeded:body _35
  br _82, ^82, ^1

82:
  %% Argument types:
  %%    _35 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _35, 
  %%    Bool
  _85 = bif:'=:=' _35, Bool
  br _85, ^85, ^84

85:
  %% guard_SUITE.erl:1639
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _36 = call (`broken_range_10`/1), _0

  %% Unique:
  %%    _36
  _86 = succeeded:body _36
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _36 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _36, 
  %%    Bool
  _89 = bif:'=:=' _36, Bool
  br _89, ^89, ^88

89:
  %% guard_SUITE.erl:1640
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _37 = call (`broken_range_11`/1), _0

  %% Unique:
  %%    _37
  _90 = succeeded:body _37
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    _37 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _37, 
  %%    Bool
  _93 = bif:'=:=' _37, Bool
  br _93, ^93, ^92

93:
  %% guard_SUITE.erl:1641
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _38 = call (`broken_range_12`/1), _0

  %% Unique:
  %%    _38
  _94 = succeeded:body _38
  br _94, ^94, ^1

94:
  %% Argument types:
  %%    _38 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _38, 
  %%    Bool
  _97 = bif:'=:=' _38, Bool
  br _97, ^97, ^96

97:
  %% guard_SUITE.erl:1642
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _26 = call (`broken_range_13`/1), _0

  %% Unique:
  %%    _26
  _98 = succeeded:body _26
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    _26 => 'false' | 'true'
  %%    Bool => 'false' | 'true'
  %% Unique:
  %%    _26, 
  %%    Bool
  _101 = bif:'=:=' _26, Bool
  br _101, ^101, ^100

101:
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _26
  ret _26

100:
  %% guard_SUITE.erl:1642
  %% Unique:
  %%    _26
  _39 = match_fail `badmatch`, _26

  %% Unique:
  %%    _39
  _102 = succeeded:body _39
  br ^1

96:
  %% guard_SUITE.erl:1641
  %% Unique:
  %%    _38
  _40 = match_fail `badmatch`, _38

  %% Unique:
  %%    _40
  _103 = succeeded:body _40
  br ^1

92:
  %% guard_SUITE.erl:1640
  %% Unique:
  %%    _37
  _41 = match_fail `badmatch`, _37

  %% Unique:
  %%    _41
  _104 = succeeded:body _41
  br ^1

88:
  %% guard_SUITE.erl:1639
  %% Unique:
  %%    _36
  _42 = match_fail `badmatch`, _36

  %% Unique:
  %%    _42
  _105 = succeeded:body _42
  br ^1

84:
  %% guard_SUITE.erl:1638
  %% Unique:
  %%    _35
  _43 = match_fail `badmatch`, _35

  %% Unique:
  %%    _43
  _106 = succeeded:body _43
  br ^1

80:
  %% guard_SUITE.erl:1637
  %% Unique:
  %%    _34
  _44 = match_fail `badmatch`, _34

  %% Unique:
  %%    _44
  _107 = succeeded:body _44
  br ^1

76:
  %% guard_SUITE.erl:1636
  %% Unique:
  %%    _33
  _45 = match_fail `badmatch`, _33

  %% Unique:
  %%    _45
  _108 = succeeded:body _45
  br ^1

72:
  %% guard_SUITE.erl:1635
  %% Unique:
  %%    _32
  _46 = match_fail `badmatch`, _32

  %% Unique:
  %%    _46
  _109 = succeeded:body _46
  br ^1

68:
  %% guard_SUITE.erl:1634
  %% Unique:
  %%    _31
  _47 = match_fail `badmatch`, _31

  %% Unique:
  %%    _47
  _110 = succeeded:body _47
  br ^1

64:
  %% guard_SUITE.erl:1633
  %% Unique:
  %%    _30
  _48 = match_fail `badmatch`, _30

  %% Unique:
  %%    _48
  _111 = succeeded:body _48
  br ^1

60:
  %% guard_SUITE.erl:1632
  %% Unique:
  %%    _29
  _49 = match_fail `badmatch`, _29

  %% Unique:
  %%    _49
  _112 = succeeded:body _49
  br ^1

56:
  %% guard_SUITE.erl:1631
  %% Unique:
  %%    _28
  _50 = match_fail `badmatch`, _28

  %% Unique:
  %%    _50
  _113 = succeeded:body _50
  br ^1

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% guard_SUITE.erl:1644
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_1`(_0) {
0:
  %% guard_SUITE.erl:1644
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^29, ^15

29:
  %% guard_SUITE.erl:1644
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^30, ^14

30:
  %% guard_SUITE.erl:1644
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^14, ^19

19:
  %% Result type:
  %%    'true'
  ret `true`

15:
  %% guard_SUITE.erl:1645
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _5 = bif:'>=' _0, `3`
  br _5, ^24, ^14

24:
  %% guard_SUITE.erl:1645
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `5`
  ret _6

14:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1648
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_2`(_0) {
0:
  %% guard_SUITE.erl:1648
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^35, ^20

35:
  %% guard_SUITE.erl:1648
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `12`
  br _2, ^19, ^17

19:
  %% Result type:
  %%    'true'
  ret `true`

17:
  %% guard_SUITE.erl:1649
  %% Argument types:
  %%    _0 => 13..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `14`
  br _3, ^31, ^20

31:
  %% guard_SUITE.erl:1649
  %% Argument types:
  %%    _0 => 14..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `20`
  ret _4

20:
  %% guard_SUITE.erl:1650
  %% Argument types:
  %%    _0 => '-inf'..13
  %% Unique:
  %%    _0
  _5 = bif:'>=' _0, `3`
  br _5, ^27, ^16

27:
  %% guard_SUITE.erl:1650
  %% Argument types:
  %%    _0 => 3..13
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `5`
  ret _6

16:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1653
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_3`(_0) {
0:
  %% guard_SUITE.erl:1653
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^26, ^12

26:
  %% guard_SUITE.erl:1653
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `12`
  br _2, ^15, ^13

15:
  %% Result type:
  %%    'true'
  ret `true`

13:
  %% guard_SUITE.erl:1654
  %% Argument types:
  %%    _0 => 13..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `14`
  br _3, ^22, ^12

22:
  %% guard_SUITE.erl:1654
  %% Argument types:
  %%    _0 => 14..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'<' _0, `21`
  ret _4

12:
  %% Argument types:
  %%    
  switch _0, ^18, [
    { `3`, ^19 },
    { `4`, ^19 },
    { `5`, ^19 }
  ]

19:
  %% Result type:
  %%    'true'
  ret `true`

18:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1660
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_4`(_0) {
0:
  %% guard_SUITE.erl:1660
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' _0, `5`
  br _1, ^33, ^16

33:
  %% guard_SUITE.erl:1660
  %% Argument types:
  %%    _0 => '-inf'..5
  %% Unique:
  %%    _0
  _2 = bif:'>=' _0, `3`
  ret _2

16:
  %% guard_SUITE.erl:1661
  %% Argument types:
  %%    _0 => 6..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `10`
  br _3, ^28, ^24

28:
  %% guard_SUITE.erl:1661
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `20`
  br _4, ^29, ^24

29:
  %% guard_SUITE.erl:1661
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `13`
  br _5, ^24, ^23

23:
  %% Result type:
  %%    'true'
  ret `true`

24:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1665
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_5`(_0) {
0:
  %% guard_SUITE.erl:1665
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^29, ^15

29:
  %% guard_SUITE.erl:1665
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^30, ^14

30:
  %% guard_SUITE.erl:1665
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^14, ^19

19:
  %% Result type:
  %%    'true'
  ret `true`

15:
  %% guard_SUITE.erl:1666
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _5 = bif:'>' _0, `2`
  br _5, ^24, ^14

24:
  %% guard_SUITE.erl:1666
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `5`
  ret _6

14:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1669
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_6`(_0) {
0:
  %% guard_SUITE.erl:1669
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^29, ^15

29:
  %% guard_SUITE.erl:1669
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^30, ^14

30:
  %% guard_SUITE.erl:1669
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^14, ^19

19:
  %% Result type:
  %%    'true'
  ret `true`

15:
  %% guard_SUITE.erl:1670
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _5 = bif:'>' _0, `2`
  br _5, ^24, ^14

24:
  %% guard_SUITE.erl:1670
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _6 = bif:'<' _0, `6`
  ret _6

14:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1673
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_7`(_0) {
0:
  %% guard_SUITE.erl:1673
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>' _0, `2`
  br _1, ^33, ^24

33:
  %% guard_SUITE.erl:1673
  %% Argument types:
  %%    _0 => 3..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'<' _0, `6`
  br _2, ^18, ^16

18:
  %% Result type:
  %%    'true'
  ret `true`

16:
  %% guard_SUITE.erl:1674
  %% Argument types:
  %%    _0 => 6..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `10`
  br _3, ^28, ^24

28:
  %% guard_SUITE.erl:1674
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `20`
  br _4, ^29, ^24

29:
  %% guard_SUITE.erl:1674
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `13`
  br _5, ^24, ^23

23:
  %% Result type:
  %%    'true'
  ret `true`

24:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1678
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_8`(_0) {
0:
  %% guard_SUITE.erl:1678
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^32, ^16

32:
  %% guard_SUITE.erl:1678
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^33, ^15

33:
  %% guard_SUITE.erl:1678
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^15, ^20

20:
  %% Result type:
  %%    'true'
  ret `true`

16:
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _22 = bif:'=:=' _0, `3`
  br _22, ^22, ^21

22:
  %% Result type:
  %%    'true'
  ret `true`

21:
  %% guard_SUITE.erl:1680
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _5 = bif:'>=' _0, `3`
  br _5, ^27, ^15

27:
  %% guard_SUITE.erl:1680
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `5`
  ret _6

15:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1683
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_9`(_0) {
0:
  %% guard_SUITE.erl:1683
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^32, ^21

32:
  %% guard_SUITE.erl:1683
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^33, ^15

33:
  %% guard_SUITE.erl:1683
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^22, ^20

22:
  %% Result type:
  %%    'false'
  ret `false`

20:
  %% Result type:
  %%    'true'
  ret `true`

21:
  %% guard_SUITE.erl:1685
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _5 = bif:'>=' _0, `3`
  br _5, ^27, ^15

27:
  %% guard_SUITE.erl:1685
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `5`
  ret _6

15:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1688
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_10`(_0) {
0:
  %% guard_SUITE.erl:1688
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `3`
  br _1, ^33, ^15

33:
  %% guard_SUITE.erl:1688
  %% Argument types:
  %%    _0 => 3..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `5`
  br _2, ^18, ^16

18:
  %% Result type:
  %%    'true'
  ret `true`

16:
  %% guard_SUITE.erl:1689
  %% Argument types:
  %%    _0 => 6..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `10`
  br _3, ^28, ^15

28:
  %% guard_SUITE.erl:1689
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `20`
  br _4, ^29, ^15

29:
  %% guard_SUITE.erl:1689
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `13`
  br _5, ^15, ^23

23:
  %% Result type:
  %%    'true'
  ret `true`

15:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1693
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_11`(_0) {
0:
  %% guard_SUITE.erl:1693
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^40, ^24

40:
  %% guard_SUITE.erl:1693
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^41, ^18

41:
  %% guard_SUITE.erl:1693
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^18, ^23

23:
  %% Result type:
  %%    'true'
  ret `true`

24:
  %% guard_SUITE.erl:1695
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _7 = bif:'>=' _0, `3`
  br _7, ^31, ^18

31:
  %% guard_SUITE.erl:1695
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _8 = bif:'=<' _0, `5`
  ret _8

18:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1698
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_12`(_0) {
0:
  %% guard_SUITE.erl:1698
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `3`
  br _1, ^41, ^28

41:
  %% guard_SUITE.erl:1698
  %% Argument types:
  %%    _0 => 3..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `5`
  br _2, ^21, ^19

21:
  %% Result type:
  %%    'true'
  ret `true`

19:
  %% guard_SUITE.erl:1699
  %% Argument types:
  %%    _0 => 6..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'>=' _0, `10`
  br _3, ^36, ^28

36:
  %% guard_SUITE.erl:1699
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _4 = bif:'=<' _0, `20`
  br _4, ^37, ^28

37:
  %% guard_SUITE.erl:1699
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `13`
  br _5, ^28, ^26

26:
  %% Result type:
  %%    'true'
  ret `true`

28:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1703
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`broken_range_13`(_0) {
0:
  %% guard_SUITE.erl:1703
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `10`
  br _1, ^29, ^15

29:
  %% guard_SUITE.erl:1703
  %% Argument types:
  %%    _0 => 10..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `20`
  br _2, ^30, ^14

30:
  %% guard_SUITE.erl:1703
  %% Argument types:
  %%    _0 => 10..20
  %% Unique:
  %%    _0
  _3 = bif:'=:=' _0, `13`
  br _3, ^14, ^19

19:
  %% Result type:
  %%    'true'
  ret `true`

15:
  %% guard_SUITE.erl:1704
  %% Argument types:
  %%    _0 => '-inf'..9
  %% Unique:
  %%    _0
  _5 = bif:'>=' _0, `3`
  br _5, ^24, ^14

24:
  %% guard_SUITE.erl:1704
  %% Argument types:
  %%    _0 => 3..9
  %% Unique:
  %%    _0
  _6 = bif:'=<' _0, `5`
  ret _6

14:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1707
%% Counter = 44
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..100
function `guard_SUITE`:`rel_op_combinations_3`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => '-inf'..100
  %% Unique:
  %%    _0
  _22 = bif:'=:=' _0, `0`
  br _22, ^21, ^20

21:
  %% Result type:
  %%    'ok'
  ret `ok`

20:
  %% guard_SUITE.erl:1710
  %% Aliased:
  %%    _0, 
  %%    _1
  _11 = call (`gb_trees`:`lookup`/2), _0, _1

  %% Aliased:
  %%    _11
  _23 = succeeded:body _11
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _30 = bif:is_tuple _11
  br _30, ^30, ^26

30:
  %% Argument types:
  %%    _11 => {...}
  %% Aliased:
  %%    _11
  _32 = is_tagged_tuple _11, `2`, `value`
  br _32, ^29, ^25

29:
  %% Argument types:
  %%    _11 => {'value', any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`
  br ^24

26:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _34 = bif:'=:=' _11, `none`
  br _34, ^33, ^25

33:
  br ^24

24:
  _3 = phi { _12, ^29 }, { `none`, ^33 }

  %% guard_SUITE.erl:1714
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _14 = call (`redundant`/1), _0

  %% Unique:
  %%    _14
  _36 = succeeded:body _14
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _14 => 'none' | integer()
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _14
  _39 = bif:'=:=' _14, _3
  br _39, ^39, ^38

39:
  %% guard_SUITE.erl:1715
  %% Argument types:
  %%    _0 => '-inf'..100
  %% Unique:
  %%    _0
  _6 = bif:'-' _0, `1`

  %% Unique:
  %%    _6
  _40 = succeeded:body _6
  br _40, ^40, ^1

40:
  %% guard_SUITE.erl:1715
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _6
  _16 = call (`rel_op_combinations_3`/2), _6, _1

  %% Unique:
  %%    _16
  _41 = succeeded:body _16
  br _41, ^41, ^1

41:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _16
  ret _16

38:
  %% guard_SUITE.erl:1714
  %% Unique:
  %%    _14
  _17 = match_fail `badmatch`, _14

  %% Unique:
  %%    _17
  _42 = succeeded:body _17
  br ^1

25:
  %% guard_SUITE.erl:1710
  %% Aliased:
  %%    _11
  _15 = match_fail `case_clause`, _11

  %% Unique:
  %%    _15
  _35 = succeeded:body _15
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% guard_SUITE.erl:1717
%% Counter = 105
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant`(_0) {
0:
  %% guard_SUITE.erl:1718
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  Val = call (`redundant_1`/1), _0

  %% Unique:
  %%    Val
  _49 = succeeded:body Val
  br _49, ^49, ^1

49:
  %% guard_SUITE.erl:1719
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _26 = call (`redundant_2`/1), _0

  %% Unique:
  %%    _26
  _50 = succeeded:body _26
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    _26 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _26, 
  %%    Val
  _53 = bif:'=:=' _26, Val
  br _53, ^53, ^52

53:
  %% guard_SUITE.erl:1720
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _27 = call (`redundant_3`/1), _0

  %% Unique:
  %%    _27
  _54 = succeeded:body _27
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _27 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _27, 
  %%    Val
  _57 = bif:'=:=' _27, Val
  br _57, ^57, ^56

57:
  %% guard_SUITE.erl:1721
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _28 = call (`redundant_4`/1), _0

  %% Unique:
  %%    _28
  _58 = succeeded:body _28
  br _58, ^58, ^1

58:
  %% Argument types:
  %%    _28 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _28, 
  %%    Val
  _61 = bif:'=:=' _28, Val
  br _61, ^61, ^60

61:
  %% guard_SUITE.erl:1722
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _29 = call (`redundant_5`/1), _0

  %% Unique:
  %%    _29
  _62 = succeeded:body _29
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _29 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _29, 
  %%    Val
  _65 = bif:'=:=' _29, Val
  br _65, ^65, ^64

65:
  %% guard_SUITE.erl:1723
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _30 = call (`redundant_6`/1), _0

  %% Unique:
  %%    _30
  _66 = succeeded:body _30
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    _30 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _30, 
  %%    Val
  _69 = bif:'=:=' _30, Val
  br _69, ^69, ^68

69:
  %% guard_SUITE.erl:1724
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _31 = call (`redundant_7`/1), _0

  %% Unique:
  %%    _31
  _70 = succeeded:body _31
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    _31 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _31, 
  %%    Val
  _73 = bif:'=:=' _31, Val
  br _73, ^73, ^72

73:
  %% guard_SUITE.erl:1725
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _32 = call (`redundant_8`/1), _0

  %% Unique:
  %%    _32
  _74 = succeeded:body _32
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _32 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _32, 
  %%    Val
  _77 = bif:'=:=' _32, Val
  br _77, ^77, ^76

77:
  %% guard_SUITE.erl:1726
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _33 = call (`redundant_9`/1), _0

  %% Unique:
  %%    _33
  _78 = succeeded:body _33
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    _33 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _33, 
  %%    Val
  _81 = bif:'=:=' _33, Val
  br _81, ^81, ^80

81:
  %% guard_SUITE.erl:1727
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _34 = call (`redundant_10`/1), _0

  %% Unique:
  %%    _34
  _82 = succeeded:body _34
  br _82, ^82, ^1

82:
  %% Argument types:
  %%    _34 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _34, 
  %%    Val
  _85 = bif:'=:=' _34, Val
  br _85, ^85, ^84

85:
  %% guard_SUITE.erl:1728
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _35 = call (`redundant_11`/1), _0

  %% Unique:
  %%    _35
  _86 = succeeded:body _35
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _35 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _35, 
  %%    Val
  _89 = bif:'=:=' _35, Val
  br _89, ^89, ^88

89:
  %% guard_SUITE.erl:1729
  %% Result type:
  %%    'none' | integer()
  %% Aliased:
  %%    _0
  _24 = call (`redundant_12`/1), _0

  %% Unique:
  %%    _24
  _90 = succeeded:body _24
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    _24 => 'none' | integer()
  %%    Val => 'none' | integer()
  %% Unique:
  %%    _24, 
  %%    Val
  _93 = bif:'=:=' _24, Val
  br _93, ^93, ^92

93:
  %% Result type:
  %%    'none' | integer()
  %% Unique:
  %%    _24
  ret _24

92:
  %% guard_SUITE.erl:1729
  %% Unique:
  %%    _24
  _36 = match_fail `badmatch`, _24

  %% Unique:
  %%    _36
  _94 = succeeded:body _36
  br ^1

88:
  %% guard_SUITE.erl:1728
  %% Unique:
  %%    _35
  _37 = match_fail `badmatch`, _35

  %% Unique:
  %%    _37
  _95 = succeeded:body _37
  br ^1

84:
  %% guard_SUITE.erl:1727
  %% Unique:
  %%    _34
  _38 = match_fail `badmatch`, _34

  %% Unique:
  %%    _38
  _96 = succeeded:body _38
  br ^1

80:
  %% guard_SUITE.erl:1726
  %% Unique:
  %%    _33
  _39 = match_fail `badmatch`, _33

  %% Unique:
  %%    _39
  _97 = succeeded:body _39
  br ^1

76:
  %% guard_SUITE.erl:1725
  %% Unique:
  %%    _32
  _40 = match_fail `badmatch`, _32

  %% Unique:
  %%    _40
  _98 = succeeded:body _40
  br ^1

72:
  %% guard_SUITE.erl:1724
  %% Unique:
  %%    _31
  _41 = match_fail `badmatch`, _31

  %% Unique:
  %%    _41
  _99 = succeeded:body _41
  br ^1

68:
  %% guard_SUITE.erl:1723
  %% Unique:
  %%    _30
  _42 = match_fail `badmatch`, _30

  %% Unique:
  %%    _42
  _100 = succeeded:body _42
  br ^1

64:
  %% guard_SUITE.erl:1722
  %% Unique:
  %%    _29
  _43 = match_fail `badmatch`, _29

  %% Unique:
  %%    _43
  _101 = succeeded:body _43
  br ^1

60:
  %% guard_SUITE.erl:1721
  %% Unique:
  %%    _28
  _44 = match_fail `badmatch`, _28

  %% Unique:
  %%    _44
  _102 = succeeded:body _44
  br ^1

56:
  %% guard_SUITE.erl:1720
  %% Unique:
  %%    _27
  _45 = match_fail `badmatch`, _27

  %% Unique:
  %%    _45
  _103 = succeeded:body _45
  br ^1

52:
  %% guard_SUITE.erl:1719
  %% Unique:
  %%    _26
  _46 = match_fail `badmatch`, _26

  %% Unique:
  %%    _46
  _104 = succeeded:body _46
  br ^1

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _47
}

%% guard_SUITE.erl:1731
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_1`(_0) {
0:
  %% guard_SUITE.erl:1731
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `51`
  br _1, ^20, ^16

20:
  %% guard_SUITE.erl:1731
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^14, ^11

14:
  %% guard_SUITE.erl:1731
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

11:
  %% Result type:
  %%    'none'
  ret `none`

16:
  %% guard_SUITE.erl:1732
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _7 = bif:'*' _0, `2`

  %% Unique:
  %%    _7
  _17 = succeeded:body _7
  br _17, ^17, ^1

17:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _7
  ret _7

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:1735
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_2`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _13 = bif:'<' _0, `51`
  br _13, ^13, ^20

13:
  %% guard_SUITE.erl:1735
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `2`

  %% Unique:
  %%    _8
  _14 = succeeded:body _8
  br _14, ^14, ^1

14:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _8
  ret _8

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9

20:
  %% guard_SUITE.erl:1736
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^16, ^11

16:
  %% guard_SUITE.erl:1736
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _7 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _7
  ret _7

11:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1739
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_3`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _14 = bif:'<' _0, `51`
  br _14, ^14, ^13

14:
  %% guard_SUITE.erl:1739
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _9 = bif:'*' _0, `2`

  %% Unique:
  %%    _9
  _15 = succeeded:body _9
  br _15, ^15, ^1

15:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10

13:
  %% guard_SUITE.erl:1740
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' _0, `80`
  br _1, ^18, ^12

18:
  %% guard_SUITE.erl:1740
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

12:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1744
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_4`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _14 = bif:'<' _0, `51`
  br _14, ^14, ^13

14:
  %% guard_SUITE.erl:1744
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _9 = bif:'*' _0, `2`

  %% Unique:
  %%    _9
  _15 = succeeded:body _9
  br _15, ^15, ^1

15:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10

13:
  %% guard_SUITE.erl:1745
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'=<' _0, `80`
  br _1, ^18, ^12

18:
  %% guard_SUITE.erl:1745
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

12:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1749
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_5`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _14 = bif:'<' _0, `51`
  br _14, ^14, ^23

14:
  %% guard_SUITE.erl:1749
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _9 = bif:'*' _0, `2`

  %% Unique:
  %%    _9
  _15 = succeeded:body _9
  br _15, ^15, ^1

15:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10

23:
  %% guard_SUITE.erl:1750
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'<' _0, `81`
  br _2, ^18, ^20

18:
  %% guard_SUITE.erl:1750
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

20:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1754
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_6`(_0) {
0:
  %% guard_SUITE.erl:1754
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>' _0, `50`
  br _1, ^20, ^16

20:
  %% guard_SUITE.erl:1754
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^14, ^11

14:
  %% guard_SUITE.erl:1754
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

11:
  %% Result type:
  %%    'none'
  ret `none`

16:
  %% guard_SUITE.erl:1755
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _7 = bif:'*' _0, `2`

  %% Unique:
  %%    _7
  _17 = succeeded:body _7
  br _17, ^17, ^1

17:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _7
  ret _7

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:1758
%% Counter = 36
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_7`(_0) {
0:
  %% guard_SUITE.erl:1758
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'>=' _0, `51`
  br _2, ^34, ^24

34:
  %% guard_SUITE.erl:1758
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _3 = bif:'=<' _0, `80`
  br _3, ^21, ^16

21:
  %% guard_SUITE.erl:1758
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _13 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _13
  ret _13

16:
  %% Result type:
  %%    'none'
  ret `none`

24:
  %% guard_SUITE.erl:1759
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _12 = bif:'*' _0, `2`

  %% Unique:
  %%    _12
  _25 = succeeded:body _12
  br _25, ^25, ^1

25:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _12
  ret _12

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% guard_SUITE.erl:1762
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_8`(_0) {
0:
  %% guard_SUITE.erl:1762
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `51`
  br _1, ^20, ^16

20:
  %% guard_SUITE.erl:1762
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^14, ^11

14:
  %% guard_SUITE.erl:1762
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

11:
  %% Result type:
  %%    'none'
  ret `none`

16:
  %% guard_SUITE.erl:1763
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _7 = bif:'*' _0, `2`

  %% Unique:
  %%    _7
  _17 = succeeded:body _7
  br _17, ^17, ^1

17:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _7
  ret _7

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:1766
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_9`(_0) {
0:
  %% guard_SUITE.erl:1766
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `51`
  br _1, ^26, ^17

26:
  %% guard_SUITE.erl:1766
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^15, ^20

15:
  %% guard_SUITE.erl:1766
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _9 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _9
  ret _9

20:
  %% Result type:
  %%    'none'
  ret `none`

17:
  %% guard_SUITE.erl:1767
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `2`

  %% Unique:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^18, ^1

18:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _8
  ret _8

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% guard_SUITE.erl:1772
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_10`(_0) {
0:
  %% guard_SUITE.erl:1772
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `51`
  br _1, ^26, ^17

26:
  %% guard_SUITE.erl:1772
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^15, ^20

15:
  %% guard_SUITE.erl:1772
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _9 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _9
  ret _9

20:
  %% Result type:
  %%    'none'
  ret `none`

17:
  %% guard_SUITE.erl:1773
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `2`

  %% Unique:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^18, ^1

18:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _8
  ret _8

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% guard_SUITE.erl:1778
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_11`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _15 = bif:'<' _0, `51`
  br _15, ^15, ^25

15:
  %% guard_SUITE.erl:1778
  %% Argument types:
  %%    _0 => '-inf'..50
  %% Unique:
  %%    _0
  _10 = bif:'*' _0, `2`

  %% Unique:
  %%    _10
  _16 = succeeded:body _10
  br _16, ^16, ^1

16:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _10
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11

25:
  %% guard_SUITE.erl:1780
  %% Argument types:
  %%    _0 => 51..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^21, ^13

21:
  %% guard_SUITE.erl:1780
  %% Argument types:
  %%    _0 => 51..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    255..'+inf'
  %% Unique:
  %%    _8
  ret _8

13:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1783
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..18446744073709551616
function `guard_SUITE`:`redundant_12`(_0) {
0:
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _13 = bif:'=:=' _0, `50`
  br _13, ^12, ^11

12:
  %% Result type:
  %%    100
  ret `100`

11:
  %% guard_SUITE.erl:1784
  %% Argument types:
  %%    _0 => '-inf'..18446744073709551616
  %% Unique:
  %%    _0
  _1 = bif:'>=' _0, `50`
  br _1, ^23, ^19

23:
  %% guard_SUITE.erl:1784
  %% Argument types:
  %%    _0 => 50..18446744073709551616
  %% Unique:
  %%    _0
  _2 = bif:'=<' _0, `80`
  br _2, ^17, ^14

17:
  %% guard_SUITE.erl:1784
  %% Argument types:
  %%    _0 => 50..80
  %% Unique:
  %%    _0
  _8 = bif:'*' _0, `5`
  %% Result type:
  %%    250..'+inf'
  %% Unique:
  %%    _8
  ret _8

14:
  %% Result type:
  %%    'none'
  ret `none`

19:
  %% guard_SUITE.erl:1785
  %% Argument types:
  %%    _0 => '-inf'..49
  %% Unique:
  %%    _0
  _7 = bif:'*' _0, `2`

  %% Unique:
  %%    _7
  _20 = succeeded:body _7
  br _20, ^20, ^1

20:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _7
  ret _7

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:1788
%% Counter = 54
%% bs_ensure_opt: true
function `guard_SUITE`:`rel_op_combinations_4`() {
0:
  %% guard_SUITE.erl:1789
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1 = call (`id`/1), `a`

  %% Aliased:
  %%    _1
  _22 = succeeded:body _1
  br _22, ^22, ^1

22:
  %% guard_SUITE.erl:1789
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `b`

  %% Aliased:
  %%    _0
  _23 = succeeded:body _0
  br _23, ^23, ^1

23:
  %% guard_SUITE.erl:1789
  %% Result type:
  %%    'le' | 'ne'
  %% Aliased:
  %%    _0, 
  %%    _1
  _12 = call (`rel_op_vars_1`/2), _1, _0

  %% Unique:
  %%    _12
  _24 = succeeded:body _12
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    _12 => 'le' | 'ne'
  %% Unique:
  %%    _12
  _52 = bif:'=:=' _12, `ne`
  br _52, ^51, ^26

51:
  %% guard_SUITE.erl:1790
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _4 = call (`id`/1), `x`

  %% Aliased:
  %%    _4
  _27 = succeeded:body _4
  br _27, ^27, ^1

27:
  %% guard_SUITE.erl:1790
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _3 = call (`id`/1), `x`

  %% Aliased:
  %%    _3
  _28 = succeeded:body _3
  br _28, ^28, ^1

28:
  %% guard_SUITE.erl:1790
  %% Result type:
  %%    'le' | 'ne'
  %% Aliased:
  %%    _3, 
  %%    _4
  _13 = call (`rel_op_vars_1`/2), _4, _3

  %% Unique:
  %%    _13
  _29 = succeeded:body _13
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    _13 => 'le' | 'ne'
  %% Unique:
  %%    _13
  _49 = bif:'=:=' _13, `le`
  br _49, ^48, ^31

48:
  %% guard_SUITE.erl:1792
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _7 = call (`id`/1), `a`

  %% Aliased:
  %%    _7
  _32 = succeeded:body _7
  br _32, ^32, ^1

32:
  %% guard_SUITE.erl:1792
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _6 = call (`id`/1), `b`

  %% Aliased:
  %%    _6
  _33 = succeeded:body _6
  br _33, ^33, ^1

33:
  %% guard_SUITE.erl:1792
  %% Result type:
  %%    'ge' | 'ne'
  %% Aliased:
  %%    _6, 
  %%    _7
  _14 = call (`rel_op_vars_2`/2), _7, _6

  %% Unique:
  %%    _14
  _34 = succeeded:body _14
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _14 => 'ge' | 'ne'
  %% Unique:
  %%    _14
  _46 = bif:'=:=' _14, `ne`
  br _46, ^45, ^36

45:
  %% guard_SUITE.erl:1793
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _10 = call (`id`/1), `x`

  %% Aliased:
  %%    _10
  _37 = succeeded:body _10
  br _37, ^37, ^1

37:
  %% guard_SUITE.erl:1793
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _9 = call (`id`/1), `x`

  %% Aliased:
  %%    _9
  _38 = succeeded:body _9
  br _38, ^38, ^1

38:
  %% guard_SUITE.erl:1793
  %% Result type:
  %%    'ge' | 'ne'
  %% Aliased:
  %%    _9, 
  %%    _10
  _15 = call (`rel_op_vars_2`/2), _10, _9

  %% Unique:
  %%    _15
  _39 = succeeded:body _15
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    _15 => 'ge' | 'ne'
  %% Unique:
  %%    _15
  _43 = bif:'=:=' _15, `ge`
  br _43, ^42, ^41

42:
  %% Result type:
  %%    'ok'
  ret `ok`

41:
  %% guard_SUITE.erl:1793
  _16 = match_fail `badmatch`, `ne`

  %% Unique:
  %%    _16
  _44 = succeeded:body _16
  br ^1

36:
  %% guard_SUITE.erl:1792
  _17 = match_fail `badmatch`, `ge`

  %% Unique:
  %%    _17
  _47 = succeeded:body _17
  br ^1

31:
  %% guard_SUITE.erl:1790
  _18 = match_fail `badmatch`, `ne`

  %% Unique:
  %%    _18
  _50 = succeeded:body _18
  br ^1

26:
  %% guard_SUITE.erl:1789
  _19 = match_fail `badmatch`, `le`

  %% Unique:
  %%    _19
  _53 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% guard_SUITE.erl:1797
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`rel_op_vars_1`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _11 = bif:'=:=' _0, _1
  br _11, ^12, ^11

12:
  %% Result type:
  %%    'le'
  ret `le`

11:
  %% Result type:
  %%    'ne'
  ret `ne`
}

%% guard_SUITE.erl:1800
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`rel_op_vars_2`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    _1 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _11 = bif:'=:=' _0, _1
  br _11, ^12, ^11

12:
  %% Result type:
  %%    'ge'
  ret `ge`

11:
  %% Result type:
  %%    'ne'
  ret `ne`
}

%% guard_SUITE.erl:1803
%% Counter = 182
%% bs_ensure_opt: true
function `guard_SUITE`:`rel_op_combinations_5`() {
0:
  %% guard_SUITE.erl:1804
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _20 = call (`lt_gt_eq`/2), `a`, `b`

  %% Unique:
  %%    _20
  _62 = succeeded:body _20
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _20 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _20
  _180 = bif:'=:=' _20, `lt`
  br _180, ^179, ^64

179:
  %% guard_SUITE.erl:1805
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _21 = call (`lt_gt_eq`/2), `1.0`, `42`

  %% Unique:
  %%    _21
  _65 = succeeded:body _21
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    _21 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _21
  _177 = bif:'=:=' _21, `lt`
  br _177, ^176, ^67

176:
  %% guard_SUITE.erl:1806
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _22 = call (`lt_gt_eq`/2), `1`, `42.0`

  %% Unique:
  %%    _22
  _68 = succeeded:body _22
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    _22 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _22
  _174 = bif:'=:=' _22, `lt`
  br _174, ^173, ^70

173:
  %% guard_SUITE.erl:1808
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _23 = call (`lt_gt_eq`/2), `a`, `a`

  %% Unique:
  %%    _23
  _71 = succeeded:body _23
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _23 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _23
  _171 = bif:'=:=' _23, `eq`
  br _171, ^170, ^73

170:
  %% guard_SUITE.erl:1809
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _24 = call (`lt_gt_eq`/2), `42`, `42`

  %% Unique:
  %%    _24
  _74 = succeeded:body _24
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _24 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _24
  _168 = bif:'=:=' _24, `eq`
  br _168, ^167, ^76

167:
  %% guard_SUITE.erl:1810
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _25 = call (`lt_gt_eq`/2), `42.0`, `42`

  %% Unique:
  %%    _25
  _77 = succeeded:body _25
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    _25 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _25
  _165 = bif:'=:=' _25, `eq`
  br _165, ^164, ^79

164:
  %% guard_SUITE.erl:1811
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _26 = call (`lt_gt_eq`/2), `42`, `42.0`

  %% Unique:
  %%    _26
  _80 = succeeded:body _26
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _26 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _26
  _162 = bif:'=:=' _26, `eq`
  br _162, ^161, ^82

161:
  %% guard_SUITE.erl:1812
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _27 = call (`lt_gt_eq`/2), `42.0`, `42.0`

  %% Unique:
  %%    _27
  _83 = succeeded:body _27
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _27 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _27
  _159 = bif:'=:=' _27, `eq`
  br _159, ^158, ^85

158:
  %% guard_SUITE.erl:1814
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _28 = call (`lt_gt_eq`/2), `b`, `a`

  %% Unique:
  %%    _28
  _86 = succeeded:body _28
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _28 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _28
  _156 = bif:'=:=' _28, `gt`
  br _156, ^155, ^88

155:
  %% guard_SUITE.erl:1815
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _29 = call (`lt_gt_eq`/2), `42.0`, `1`

  %% Unique:
  %%    _29
  _89 = succeeded:body _29
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    _29 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _29
  _153 = bif:'=:=' _29, `gt`
  br _153, ^152, ^91

152:
  %% guard_SUITE.erl:1816
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  _30 = call (`lt_gt_eq`/2), `42`, `1.0`

  %% Unique:
  %%    _30
  _92 = succeeded:body _30
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    _30 => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _30
  _150 = bif:'=:=' _30, `gt`
  br _150, ^149, ^94

149:
  %% guard_SUITE.erl:1818
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _31 = call (`eq_exact_lt_gt`/2), `a`, `b`

  %% Unique:
  %%    _31
  _95 = succeeded:body _31
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    _31 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _31
  _147 = bif:'=:=' _31, `lt`
  br _147, ^146, ^97

146:
  %% guard_SUITE.erl:1819
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _32 = call (`eq_exact_lt_gt`/2), `1.0`, `42`

  %% Unique:
  %%    _32
  _98 = succeeded:body _32
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    _32 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _32
  _144 = bif:'=:=' _32, `lt`
  br _144, ^143, ^100

143:
  %% guard_SUITE.erl:1820
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _33 = call (`eq_exact_lt_gt`/2), `1`, `42.0`

  %% Unique:
  %%    _33
  _101 = succeeded:body _33
  br _101, ^101, ^1

101:
  %% Argument types:
  %%    _33 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _33
  _141 = bif:'=:=' _33, `lt`
  br _141, ^140, ^103

140:
  %% guard_SUITE.erl:1822
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _34 = call (`eq_exact_lt_gt`/2), `a`, `a`

  %% Unique:
  %%    _34
  _104 = succeeded:body _34
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    _34 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _34
  _138 = bif:'=:=' _34, `eq`
  br _138, ^137, ^106

137:
  %% guard_SUITE.erl:1823
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _35 = call (`eq_exact_lt_gt`/2), `42`, `42`

  %% Unique:
  %%    _35
  _107 = succeeded:body _35
  br _107, ^107, ^1

107:
  %% Argument types:
  %%    _35 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _35
  _135 = bif:'=:=' _35, `eq`
  br _135, ^134, ^109

134:
  %% guard_SUITE.erl:1824
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _36 = call (`eq_exact_lt_gt`/2), `42`, `42.0`

  %% Unique:
  %%    _36
  _110 = succeeded:body _36
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    _36 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _36
  _132 = bif:'=:=' _36, `none`
  br _132, ^131, ^112

131:
  %% guard_SUITE.erl:1826
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _37 = call (`eq_exact_lt_gt`/2), `b`, `a`

  %% Unique:
  %%    _37
  _113 = succeeded:body _37
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    _37 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _37
  _129 = bif:'=:=' _37, `gt`
  br _129, ^128, ^115

128:
  %% guard_SUITE.erl:1827
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _38 = call (`eq_exact_lt_gt`/2), `42.0`, `1`

  %% Unique:
  %%    _38
  _116 = succeeded:body _38
  br _116, ^116, ^1

116:
  %% Argument types:
  %%    _38 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _38
  _126 = bif:'=:=' _38, `gt`
  br _126, ^125, ^118

125:
  %% guard_SUITE.erl:1828
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  _39 = call (`eq_exact_lt_gt`/2), `42`, `1.0`

  %% Unique:
  %%    _39
  _119 = succeeded:body _39
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    _39 => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _39
  _123 = bif:'=:=' _39, `gt`
  br _123, ^122, ^121

122:
  %% Result type:
  %%    'ok'
  ret `ok`

121:
  %% guard_SUITE.erl:1828
  %% Unique:
  %%    _39
  _40 = match_fail `badmatch`, _39

  %% Unique:
  %%    _40
  _124 = succeeded:body _40
  br ^1

118:
  %% guard_SUITE.erl:1827
  %% Unique:
  %%    _38
  _41 = match_fail `badmatch`, _38

  %% Unique:
  %%    _41
  _127 = succeeded:body _41
  br ^1

115:
  %% guard_SUITE.erl:1826
  %% Unique:
  %%    _37
  _42 = match_fail `badmatch`, _37

  %% Unique:
  %%    _42
  _130 = succeeded:body _42
  br ^1

112:
  %% guard_SUITE.erl:1824
  %% Unique:
  %%    _36
  _43 = match_fail `badmatch`, _36

  %% Unique:
  %%    _43
  _133 = succeeded:body _43
  br ^1

109:
  %% guard_SUITE.erl:1823
  %% Unique:
  %%    _35
  _44 = match_fail `badmatch`, _35

  %% Unique:
  %%    _44
  _136 = succeeded:body _44
  br ^1

106:
  %% guard_SUITE.erl:1822
  %% Unique:
  %%    _34
  _45 = match_fail `badmatch`, _34

  %% Unique:
  %%    _45
  _139 = succeeded:body _45
  br ^1

103:
  %% guard_SUITE.erl:1820
  %% Unique:
  %%    _33
  _46 = match_fail `badmatch`, _33

  %% Unique:
  %%    _46
  _142 = succeeded:body _46
  br ^1

100:
  %% guard_SUITE.erl:1819
  %% Unique:
  %%    _32
  _47 = match_fail `badmatch`, _32

  %% Unique:
  %%    _47
  _145 = succeeded:body _47
  br ^1

97:
  %% guard_SUITE.erl:1818
  %% Unique:
  %%    _31
  _48 = match_fail `badmatch`, _31

  %% Unique:
  %%    _48
  _148 = succeeded:body _48
  br ^1

94:
  %% guard_SUITE.erl:1816
  %% Unique:
  %%    _30
  _49 = match_fail `badmatch`, _30

  %% Unique:
  %%    _49
  _151 = succeeded:body _49
  br ^1

91:
  %% guard_SUITE.erl:1815
  %% Unique:
  %%    _29
  _50 = match_fail `badmatch`, _29

  %% Unique:
  %%    _50
  _154 = succeeded:body _50
  br ^1

88:
  %% guard_SUITE.erl:1814
  %% Unique:
  %%    _28
  _51 = match_fail `badmatch`, _28

  %% Unique:
  %%    _51
  _157 = succeeded:body _51
  br ^1

85:
  %% guard_SUITE.erl:1812
  %% Unique:
  %%    _27
  _52 = match_fail `badmatch`, _27

  %% Unique:
  %%    _52
  _160 = succeeded:body _52
  br ^1

82:
  %% guard_SUITE.erl:1811
  %% Unique:
  %%    _26
  _53 = match_fail `badmatch`, _26

  %% Unique:
  %%    _53
  _163 = succeeded:body _53
  br ^1

79:
  %% guard_SUITE.erl:1810
  %% Unique:
  %%    _25
  _54 = match_fail `badmatch`, _25

  %% Unique:
  %%    _54
  _166 = succeeded:body _54
  br ^1

76:
  %% guard_SUITE.erl:1809
  %% Unique:
  %%    _24
  _55 = match_fail `badmatch`, _24

  %% Unique:
  %%    _55
  _169 = succeeded:body _55
  br ^1

73:
  %% guard_SUITE.erl:1808
  %% Unique:
  %%    _23
  _56 = match_fail `badmatch`, _23

  %% Unique:
  %%    _56
  _172 = succeeded:body _56
  br ^1

70:
  %% guard_SUITE.erl:1806
  %% Unique:
  %%    _22
  _57 = match_fail `badmatch`, _22

  %% Unique:
  %%    _57
  _175 = succeeded:body _57
  br ^1

67:
  %% guard_SUITE.erl:1805
  %% Unique:
  %%    _21
  _58 = match_fail `badmatch`, _21

  %% Unique:
  %%    _58
  _178 = succeeded:body _58
  br ^1

64:
  %% guard_SUITE.erl:1804
  %% Unique:
  %%    _20
  _59 = match_fail `badmatch`, _20

  %% Unique:
  %%    _59
  _181 = succeeded:body _59
  br ^1

1:
  _60 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _60
}

%% guard_SUITE.erl:1832
%% Counter = 46
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq`(_0, _1) {
0:
  %% guard_SUITE.erl:1833
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    _0, 
  %%    _1
  Res = call (`lt_gt_eq_1`/2), _0, _1

  %% Unique:
  %%    Res
  _24 = succeeded:body Res
  br _24, ^24, ^1

24:
  %% guard_SUITE.erl:1834
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    _0, 
  %%    _1
  _13 = call (`lt_gt_eq_2`/2), _0, _1

  %% Unique:
  %%    _13
  _25 = succeeded:body _13
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _13 => 'eq' | 'gt' | 'lt'
  %%    Res => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _13, 
  %%    Res
  _28 = bif:'=:=' _13, Res
  br _28, ^28, ^27

28:
  %% guard_SUITE.erl:1835
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`lt_gt_eq_3`/2), _0, _1

  %% Unique:
  %%    _14
  _29 = succeeded:body _14
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    _14 => 'eq' | 'gt' | 'lt'
  %%    Res => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _14, 
  %%    Res
  _32 = bif:'=:=' _14, Res
  br _32, ^32, ^31

32:
  %% guard_SUITE.erl:1836
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    _0, 
  %%    _1
  _15 = call (`lt_gt_eq_4`/2), _0, _1

  %% Unique:
  %%    _15
  _33 = succeeded:body _15
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _15 => 'eq' | 'gt' | 'lt'
  %%    Res => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _15, 
  %%    Res
  _36 = bif:'=:=' _15, Res
  br _36, ^36, ^35

36:
  %% guard_SUITE.erl:1837
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    _0, 
  %%    _1
  _16 = call (`lt_gt_eq_5`/2), _0, _1

  %% Unique:
  %%    _16
  _37 = succeeded:body _16
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _16 => 'eq' | 'gt' | 'lt'
  %%    Res => 'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _16, 
  %%    Res
  _40 = bif:'=:=' _16, Res
  br _40, ^40, ^39

40:
  %% guard_SUITE.erl:1838
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Aliased:
  %%    _0, 
  %%    _1
  _17 = call (`lt_gt_eq_6`/2), _0, _1

  %% Unique:
  %%    _17
  _41 = succeeded:body _17
  br _41, ^41, ^1

41:
  %% Result type:
  %%    'eq' | 'gt' | 'lt'
  %% Unique:
  %%    _17
  ret _17

39:
  %% guard_SUITE.erl:1837
  %% Unique:
  %%    _16
  _18 = match_fail `badmatch`, _16

  %% Unique:
  %%    _18
  _42 = succeeded:body _18
  br ^1

35:
  %% guard_SUITE.erl:1836
  %% Unique:
  %%    _15
  _19 = match_fail `badmatch`, _15

  %% Unique:
  %%    _19
  _43 = succeeded:body _19
  br ^1

31:
  %% guard_SUITE.erl:1835
  %% Unique:
  %%    _14
  _20 = match_fail `badmatch`, _14

  %% Unique:
  %%    _20
  _44 = succeeded:body _20
  br ^1

27:
  %% guard_SUITE.erl:1834
  %% Unique:
  %%    _13
  _21 = match_fail `badmatch`, _13

  %% Unique:
  %%    _21
  _45 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% guard_SUITE.erl:1841
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq_1`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = bif:'<' _0, _1
  br _7, ^7, ^6

7:
  %% Result type:
  %%    'lt'
  ret `lt`

6:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'==' _0, _1
  br _9, ^9, ^10

9:
  %% Result type:
  %%    'eq'
  ret `eq`

10:
  %% Result type:
  %%    'gt'
  ret `gt`
}

%% guard_SUITE.erl:1848
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq_2`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = bif:'>' _0, _1
  br _7, ^7, ^6

7:
  %% Result type:
  %%    'gt'
  ret `gt`

6:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'==' _0, _1
  br _9, ^9, ^10

9:
  %% Result type:
  %%    'eq'
  ret `eq`

10:
  %% Result type:
  %%    'lt'
  ret `lt`
}

%% guard_SUITE.erl:1855
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq_3`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = bif:'==' _0, _1
  br _7, ^7, ^6

7:
  %% Result type:
  %%    'eq'
  ret `eq`

6:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'<' _0, _1
  br _9, ^9, ^10

9:
  %% Result type:
  %%    'lt'
  ret `lt`

10:
  %% Result type:
  %%    'gt'
  ret `gt`
}

%% guard_SUITE.erl:1862
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq_4`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = bif:'==' _0, _1
  br _7, ^7, ^6

7:
  %% Result type:
  %%    'eq'
  ret `eq`

6:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'>' _0, _1
  br _9, ^9, ^10

9:
  %% Result type:
  %%    'gt'
  ret `gt`

10:
  %% Result type:
  %%    'lt'
  ret `lt`
}

%% guard_SUITE.erl:1869
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq_5`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = bif:'<' _0, _1
  br _7, ^7, ^6

7:
  %% Result type:
  %%    'lt'
  ret `lt`

6:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'>' _0, _1
  br _9, ^9, ^10

9:
  %% Result type:
  %%    'gt'
  ret `gt`

10:
  %% Result type:
  %%    'eq'
  ret `eq`
}

%% guard_SUITE.erl:1876
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`lt_gt_eq_6`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _7 = bif:'>' _0, _1
  br _7, ^7, ^6

7:
  %% Result type:
  %%    'gt'
  ret `gt`

6:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'<' _0, _1
  br _9, ^9, ^10

9:
  %% Result type:
  %%    'lt'
  ret `lt`

10:
  %% Result type:
  %%    'eq'
  ret `eq`
}

%% guard_SUITE.erl:1883
%% Counter = 53
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt`(_0, _1) {
0:
  %% guard_SUITE.erl:1884
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Aliased:
  %%    _0, 
  %%    _1
  Res = call (`eq_exact_lt_gt_1`/2), _0, _1

  %% Unique:
  %%    Res
  _27 = succeeded:body Res
  br _27, ^27, ^1

27:
  %% guard_SUITE.erl:1885
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Aliased:
  %%    _0, 
  %%    _1
  _16 = call (`eq_exact_lt_gt_2`/2), _0, _1

  %% Unique:
  %%    _16
  _28 = succeeded:body _16
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _16 => 'eq' | 'gt' | 'lt' | 'none'
  %%    Res => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _16, 
  %%    Res
  _31 = bif:'=:=' _16, Res
  br _31, ^31, ^30

31:
  %% guard_SUITE.erl:1886
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Aliased:
  %%    _0, 
  %%    _1
  _17 = call (`eq_exact_lt_gt_3`/2), _0, _1

  %% Unique:
  %%    _17
  _32 = succeeded:body _17
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    _17 => 'eq' | 'gt' | 'lt' | 'none'
  %%    Res => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _17, 
  %%    Res
  _35 = bif:'=:=' _17, Res
  br _35, ^35, ^34

35:
  %% guard_SUITE.erl:1887
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Aliased:
  %%    _0, 
  %%    _1
  _18 = call (`eq_exact_lt_gt_4`/2), _0, _1

  %% Unique:
  %%    _18
  _36 = succeeded:body _18
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _18 => 'eq' | 'gt' | 'lt' | 'none'
  %%    Res => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _18, 
  %%    Res
  _39 = bif:'=:=' _18, Res
  br _39, ^39, ^38

39:
  %% guard_SUITE.erl:1888
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Aliased:
  %%    _0, 
  %%    _1
  _19 = call (`eq_exact_lt_gt_5`/2), _0, _1

  %% Unique:
  %%    _19
  _40 = succeeded:body _19
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    _19 => 'eq' | 'gt' | 'lt' | 'none'
  %%    Res => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _19, 
  %%    Res
  _43 = bif:'=:=' _19, Res
  br _43, ^43, ^42

43:
  %% guard_SUITE.erl:1889
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`eq_exact_lt_gt_6`/2), _0, _1

  %% Unique:
  %%    _14
  _44 = succeeded:body _14
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    _14 => 'eq' | 'gt' | 'lt' | 'none'
  %%    Res => 'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _14, 
  %%    Res
  _47 = bif:'=:=' _14, Res
  br _47, ^47, ^46

47:
  %% Result type:
  %%    'eq' | 'gt' | 'lt' | 'none'
  %% Unique:
  %%    _14
  ret _14

46:
  %% guard_SUITE.erl:1889
  %% Unique:
  %%    _14
  _20 = match_fail `badmatch`, _14

  %% Unique:
  %%    _20
  _48 = succeeded:body _20
  br ^1

42:
  %% guard_SUITE.erl:1888
  %% Unique:
  %%    _19
  _21 = match_fail `badmatch`, _19

  %% Unique:
  %%    _21
  _49 = succeeded:body _21
  br ^1

38:
  %% guard_SUITE.erl:1887
  %% Unique:
  %%    _18
  _22 = match_fail `badmatch`, _18

  %% Unique:
  %%    _22
  _50 = succeeded:body _22
  br ^1

34:
  %% guard_SUITE.erl:1886
  %% Unique:
  %%    _17
  _23 = match_fail `badmatch`, _17

  %% Unique:
  %%    _23
  _51 = succeeded:body _23
  br ^1

30:
  %% guard_SUITE.erl:1885
  %% Unique:
  %%    _16
  _24 = match_fail `badmatch`, _16

  %% Unique:
  %%    _24
  _52 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% guard_SUITE.erl:1894
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt_1`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = bif:'<' _0, _1
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'lt'
  ret `lt`

5:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _8 = bif:'=:=' _0, _1
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'eq'
  ret `eq`

7:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'>' _0, _1
  br _9, ^9, ^4

9:
  %% Result type:
  %%    'gt'
  ret `gt`

4:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1902
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt_2`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = bif:'>' _0, _1
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'gt'
  ret `gt`

5:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _8 = bif:'=:=' _0, _1
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'eq'
  ret `eq`

7:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'<' _0, _1
  br _9, ^9, ^4

9:
  %% Result type:
  %%    'lt'
  ret `lt`

4:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1910
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt_3`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = bif:'=:=' _0, _1
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'eq'
  ret `eq`

5:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _8 = bif:'<' _0, _1
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'lt'
  ret `lt`

7:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'>' _0, _1
  br _9, ^9, ^4

9:
  %% Result type:
  %%    'gt'
  ret `gt`

4:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1918
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt_4`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = bif:'=:=' _0, _1
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'eq'
  ret `eq`

5:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _8 = bif:'>' _0, _1
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'gt'
  ret `gt`

7:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'<' _0, _1
  br _9, ^9, ^4

9:
  %% Result type:
  %%    'lt'
  ret `lt`

4:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1926
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt_5`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = bif:'<' _0, _1
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'lt'
  ret `lt`

5:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _8 = bif:'>' _0, _1
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'gt'
  ret `gt`

7:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'=:=' _0, _1
  br _9, ^9, ^4

9:
  %% Result type:
  %%    'eq'
  ret `eq`

4:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1934
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | number(1, 42)
%%    _1 =>
%%     'a' | 'b' | number(1, 42)
function `guard_SUITE`:`eq_exact_lt_gt_6`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _6 = bif:'>' _0, _1
  br _6, ^6, ^5

6:
  %% Result type:
  %%    'gt'
  ret `gt`

5:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _8 = bif:'<' _0, _1
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'lt'
  ret `lt`

7:
  %% Argument types:
  %%    _0 => 'a' | 'b' | number(1, 42)
  %%    _1 => 'a' | 'b' | number(1, 42)
  %% Aliased:
  %%    _0, 
  %%    _1
  _9 = bif:'=:=' _0, _1
  br _9, ^9, ^4

9:
  %% Result type:
  %%    'eq'
  ret `eq`

4:
  %% Result type:
  %%    'none'
  ret `none`
}

%% guard_SUITE.erl:1945
%% Counter = 96
%% bs_ensure_opt: true
function `guard_SUITE`:`generated_combinations`(_0) {
0:
  %% guard_SUITE.erl:1948
  %% Result type:
  %%    nonempty_list({atom(), atom()})
  _12 = call (`'-generated_combinations/1-lc$^0/1-0-'`/1), `['=:=','=/=','==','/=','<','=<','>=','>']`

  %% Unique:
  %%    _12
  _75 = succeeded:body _12
  br _75, ^75, ^1

75:
  %% guard_SUITE.erl:1949
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _12
  Combinations1 = call (`gen_lit_combs`/1), _12

  %% Unique:
  %%    Combinations1
  _76 = succeeded:body Combinations1
  br _76, ^76, ^1

76:
  %% guard_SUITE.erl:1951
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    Combinations1
  _23 = call (`'-generated_combinations/1-lc$^2/1-2-'`/2), Combinations1, Combinations1

  %% Unique:
  %%    _23
  _77 = succeeded:body _23
  br _77, ^77, ^1

77:
  %% guard_SUITE.erl:1953
  %% Result type:
  %%    nonempty_list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Unique:
  %%    _23
  Combinations = call (`gen_func_names`/2), _23, `0`

  %% Aliased:
  %%    Combinations
  _78 = succeeded:body Combinations
  br _78, ^78, ^1

78:
  %% guard_SUITE.erl:1954
  %% Result type:
  %%    nonempty_list(any())
  %% Aliased:
  %%    Combinations
  Fs = call (`gen_rel_op_functions`/1), Combinations

  %% Unique:
  %%    Fs
  _79 = succeeded:body Fs
  br _79, ^79, ^1

79:
  _27 = call (`merl`:`term`/1), `generated_combinations`

  %% Aliased:
  %%    _27
  _80 = succeeded:body _27
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _53 = put_list _27, `[]`

  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Unique:
  %%    _53
  _54 = put_list _53, `[]`

  %% Argument types:
  %%    _54 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _54
  _55 = put_list `[{tree,atom,{attr,1955,[],none},module}]`, _54

  %% Argument types:
  %%    _55 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _55
  _56 = put_tuple `template`, `attribute`, `{attr,1955,[],none}`, _55

  %% Argument types:
  %%    _56 => {'template', 'attribute', {'attr', 1955, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _56
  _57 = put_list _56, `[{attribute,1956,compile,[export_all,nowarn_export_all]}]`

  %% guard_SUITE.erl:1955
  %% Unique:
  %%    _57
  _28 = call (`merl`:`tree`/1), _57

  %% Aliased:
  %%    _28
  _81 = succeeded:body _28
  br _81, ^81, ^1

81:
  %% guard_SUITE.erl:1956
  %% Aliased:
  %%    _28
  %% Unique:
  %%    Fs
  Tree = call (`erlang`:`'++'`/2), _28, Fs

  %% Aliased:
  %%    Tree
  _82 = succeeded:body Tree
  br _82, ^82, ^1

82:
  %% guard_SUITE.erl:1958
  Opts = call (`test_lib`:`opt_opts`/1), `guard_SUITE`

  %% Aliased:
  %%    Opts
  _83 = succeeded:body Opts
  br _83, ^83, ^1

83:
  %% guard_SUITE.erl:1959
  %% Aliased:
  %%    Opts, 
  %%    Tree
  _58 = call (`merl`:`compile_and_load`/2), Tree, Opts

  %% Aliased:
  %%    _58
  _84 = succeeded:body _58
  br _84, ^84, ^1

84:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _91 = is_tagged_tuple _58, `2`, `ok`
  br _91, ^88, ^86

88:
  %% guard_SUITE.erl:1960
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Combinations
  _71 = call (`test_combinations`/2), Combinations, `generated_combinations`

  %% Unique:
  %%    _71
  _87 = succeeded:body _71
  br _87, ^87, ^1

87:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _71
  ret _71

86:
  %% guard_SUITE.erl:1959
  %% Aliased:
  %%    _58
  _72 = match_fail `badmatch`, _58

  %% Unique:
  %%    _72
  _94 = succeeded:body _72
  br ^1

1:
  _73 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _73
}

%% guard_SUITE.erl:1962
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({atom(), atom()})
function `guard_SUITE`:`gen_lit_combs`(_0) {
0:
  %% Aliased:
  %%    _0
  _41 = is_nonempty_list _0
  br _41, ^41, ^42

41:
  %% Argument types:
  %%    _0 => nonempty_list({atom(), atom()})
  %% Aliased:
  %%    _0
  _4 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({atom(), atom()})
  %% Aliased:
  %%    _0
  _3 = get_tl _0

  %% guard_SUITE.erl:1976
  %% Result type:
  %%    list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Aliased:
  %%    _3
  _1 = call (`gen_lit_combs`/1), _3

  %% Unique:
  %%    _1
  _36 = succeeded:body _1
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _4 => {atom(), atom()}
  %% Aliased:
  %%    _4
  _6 = get_tuple_element _4, `0`

  %% Argument types:
  %%    _4 => {atom(), atom()}
  %% Aliased:
  %%    _4
  _5 = get_tuple_element _4, `1`

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _7 = put_tuple _6, `6.0`, _5, `7.0`

  %% Argument types:
  %%    _7 => {atom(), 6.0, atom(), 7.0}
  %%    _1 => list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _1, 
  %%    _7
  _8 = put_list _7, _1

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _9 = put_tuple _6, `6`, _5, `7.0`

  %% Argument types:
  %%    _9 => {atom(), 6, atom(), 7.0}
  %%    _8 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _8, 
  %%    _9
  _10 = put_list _9, _8

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _11 = put_tuple _6, `6.0`, _5, `7`

  %% Argument types:
  %%    _11 => {atom(), 6.0, atom(), 7}
  %%    _10 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _10, 
  %%    _11
  _12 = put_list _11, _10

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _13 = put_tuple _6, `6`, _5, `7`

  %% Argument types:
  %%    _13 => {atom(), 6, atom(), 7}
  %%    _12 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _12, 
  %%    _13
  _14 = put_list _13, _12

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _15 = put_tuple _6, `7.0`, _5, `7.0`

  %% Argument types:
  %%    _15 => {atom(), 7.0, atom(), 7.0}
  %%    _14 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _14, 
  %%    _15
  _16 = put_list _15, _14

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _17 = put_tuple _6, `7`, _5, `7.0`

  %% Argument types:
  %%    _17 => {atom(), 7, atom(), 7.0}
  %%    _16 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _16, 
  %%    _17
  _18 = put_list _17, _16

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _19 = put_tuple _6, `7.0`, _5, `7`

  %% Argument types:
  %%    _19 => {atom(), 7.0, atom(), 7}
  %%    _18 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _18, 
  %%    _19
  _20 = put_list _19, _18

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _21 = put_tuple _6, `7`, _5, `7`

  %% Argument types:
  %%    _21 => {atom(), 7, atom(), 7}
  %%    _20 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _20, 
  %%    _21
  _22 = put_list _21, _20

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _23 = put_tuple _6, `7.0`, _5, `6.0`

  %% Argument types:
  %%    _23 => {atom(), 7.0, atom(), 6.0}
  %%    _22 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _22, 
  %%    _23
  _24 = put_list _23, _22

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _25 = put_tuple _6, `7`, _5, `6.0`

  %% Argument types:
  %%    _25 => {atom(), 7, atom(), 6.0}
  %%    _24 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _24, 
  %%    _25
  _26 = put_list _25, _24

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _27 = put_tuple _6, `7.0`, _5, `6`

  %% Argument types:
  %%    _27 => {atom(), 7.0, atom(), 6}
  %%    _26 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _26, 
  %%    _27
  _28 = put_list _27, _26

  %% Argument types:
  %%    _6 => atom()
  %%    _5 => atom()
  %% Unique:
  %%    _5, 
  %%    _6
  _29 = put_tuple _6, `7`, _5, `6`

  %% Argument types:
  %%    _29 => {atom(), 7, atom(), 6}
  %%    _28 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _28, 
  %%    _29
  _30 = put_list _29, _28
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _30
  ret _30

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32

42:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:1979
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
%%    _1 =>
%%     0..'+inf'
function `guard_SUITE`:`gen_func_names`(_0, _1) {
0:
  %% Unique:
  %%    _0
  _23 = is_nonempty_list _0
  br _23, ^23, ^24

23:
  %% Argument types:
  %%    _0 => nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _0
  _11 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _0
  _10 = get_tl _0

  %% guard_SUITE.erl:1980
  %% Aliased:
  %%    _1
  _2 = call (`erlang`:`integer_to_list`/1), _1

  %% Aliased:
  %%    _2
  _19 = succeeded:body _2
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    _2 => nonempty_list(any())
  %% Aliased:
  %%    _2
  _3 = put_list `102`, _2

  %% guard_SUITE.erl:1980
  %% Unique:
  %%    _3
  Name = call (`erlang`:`list_to_atom`/1), _3

  %% Aliased:
  %%    Name
  _20 = succeeded:body Name
  br _20, ^20, ^1

20:
  %% guard_SUITE.erl:1981
  %% Argument types:
  %%    _1 => 0..'+inf'
  %% Unique:
  %%    _1
  _5 = bif:'+' _1, `1`

  %% Unique:
  %%    _5
  _21 = succeeded:body _5
  br _21, ^21, ^1

21:
  %% guard_SUITE.erl:1981
  %% Result type:
  %%    list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Unique:
  %%    _5, 
  %%    _10
  _6 = call (`gen_func_names`/2), _10, _5

  %% Unique:
  %%    _6
  _22 = succeeded:body _6
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    Name => atom()
  %%    _11 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
  %% Unique:
  %%    _11, 
  %%    Name
  _12 = put_tuple Name, _11

  %% Argument types:
  %%    _12 => {atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}}
  %%    _6 => list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Unique:
  %%    _6, 
  %%    _12
  _13 = put_list _12, _6
  %% Result type:
  %%    nonempty_list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Unique:
  %%    _13
  ret _13

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15

24:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:1984
%% Counter = 169
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
function `guard_SUITE`:`gen_rel_op_functions`(_0) {
0:
  %% Aliased:
  %%    _0
  _162 = is_nonempty_list _0
  br _162, ^162, ^163

162:
  %% Argument types:
  %%    _0 => nonempty_list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Aliased:
  %%    _0
  _23 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Aliased:
  %%    _0
  _22 = get_tl _0

  %% Argument types:
  %%    _23 => {atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}}
  %% Aliased:
  %%    _23
  _25 = get_tuple_element _23, `0`

  %% Argument types:
  %%    _23 => {atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    _24 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
  %% Aliased:
  %%    _24
  _157 = bif:tuple_size _24
  %% Argument types:
  %%    
  switch _157, ^132, [
    { `2`, ^154 },
    { `4`, ^165 }
  ]

165:
  %% Unique:
  %%    _25
  _13 = call (`merl`:`term`/1), _25

  %% Aliased:
  %%    _13
  _147 = succeeded:body _13
  br _147, ^147, ^1

147:
  %% Argument types:
  %%    _24 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _24
  _80 = get_tuple_element _24, `0`

  %% Unique:
  %%    _80
  _12 = call (`merl`:`term`/1), _80

  %% Aliased:
  %%    _12
  _148 = succeeded:body _12
  br _148, ^148, ^1

148:
  %% Argument types:
  %%    _24 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _24
  _79 = get_tuple_element _24, `1`

  %% Aliased:
  %%    _79
  _11 = call (`merl`:`term`/1), _79

  %% Aliased:
  %%    _11
  _149 = succeeded:body _11
  br _149, ^149, ^1

149:
  %% Argument types:
  %%    _24 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _24
  _78 = get_tuple_element _24, `2`

  %% Aliased:
  %%    _78
  _10 = call (`merl`:`term`/1), _78

  %% Aliased:
  %%    _10
  _150 = succeeded:body _10
  br _150, ^150, ^1

150:
  %% Argument types:
  %%    _24 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _24
  _77 = get_tuple_element _24, `3`

  %% Aliased:
  %%    _77
  _9 = call (`merl`:`term`/1), _77

  %% Aliased:
  %%    _9
  _151 = succeeded:body _9
  br _151, ^151, ^1

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _81 = put_list _12, `[]`

  %% Argument types:
  %%    _81 => nonempty_list(any())
  %% Unique:
  %%    _81
  _82 = put_list _81, `[]`

  %% Argument types:
  %%    _82 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _82
  _83 = put_list `[{atom,2006,erlang}]`, _82

  %% Argument types:
  %%    _83 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _83
  _84 = put_tuple `template`, `module_qualifier`, `{attr,2006,[],none}`, _83

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _85 = put_list _11, `[]`

  %% Argument types:
  %%    _85 => nonempty_list(any())
  %% Unique:
  %%    _85
  _86 = put_list `{var,2006,'A'}`, _85

  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Unique:
  %%    _86
  _87 = put_list _86, `[]`

  %% Argument types:
  %%    _84 => {'template', 'module_qualifier', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _84
  _88 = put_list _84, `[]`

  %% Argument types:
  %%    _88 => nonempty_list({'template', 'module_qualifier', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %%    _87 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _87, 
  %%    _88
  _89 = put_list _88, _87

  %% Argument types:
  %%    _89 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _89
  _90 = put_tuple `template`, `application`, `{attr,2006,[],none}`, _89

  %% Argument types:
  %%    _90 => {'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _90
  _91 = put_list _90, `[]`

  %% Argument types:
  %%    _91 => nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %% Unique:
  %%    _91
  _92 = put_list _91, `[]`

  %% Argument types:
  %%    _92 => nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))
  %% Unique:
  %%    _92
  _93 = put_tuple `template`, `conjunction`, `{attr,0,[],none}`, _92

  %% Argument types:
  %%    _93 => {'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}
  %% Unique:
  %%    _93
  _94 = put_list _93, `[]`

  %% Argument types:
  %%    _94 => nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))})
  %% Unique:
  %%    _94
  _95 = put_list _94, `[]`

  %% Argument types:
  %%    _95 => nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))
  %% Unique:
  %%    _95
  _96 = put_tuple `template`, `disjunction`, `{attr,0,[],none}`, _95

  %% Argument types:
  %%    _96 => {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}
  %% Unique:
  %%    _96
  _97 = put_list _96, `[]`

  %% Argument types:
  %%    _97 => nonempty_list({'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))})
  %% Unique:
  %%    _97
  _98 = put_list _97, `[[{atom,2006,one}]]`

  %% Argument types:
  %%    _98 => nonempty_list(nonempty_list({'atom', 2006, 'one'} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _98
  _99 = put_list `[{var,2006,'A'}]`, _98

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _100 = put_list _10, `[]`

  %% Argument types:
  %%    _100 => nonempty_list(any())
  %% Unique:
  %%    _100
  _101 = put_list _100, `[]`

  %% Argument types:
  %%    _101 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _101
  _102 = put_list `[{atom,2007,erlang}]`, _101

  %% Argument types:
  %%    _102 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _102
  _103 = put_tuple `template`, `module_qualifier`, `{attr,2007,[],none}`, _102

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _104 = put_list _9, `[]`

  %% Argument types:
  %%    _104 => nonempty_list(any())
  %% Unique:
  %%    _104
  _105 = put_list `{var,2007,'A'}`, _104

  %% Argument types:
  %%    _105 => nonempty_list(any())
  %% Unique:
  %%    _105
  _106 = put_list _105, `[]`

  %% Argument types:
  %%    _103 => {'template', 'module_qualifier', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _103
  _107 = put_list _103, `[]`

  %% Argument types:
  %%    _107 => nonempty_list({'template', 'module_qualifier', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %%    _106 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _106, 
  %%    _107
  _108 = put_list _107, _106

  %% Argument types:
  %%    _108 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _108
  _109 = put_tuple `template`, `application`, `{attr,2007,[],none}`, _108

  %% Argument types:
  %%    _109 => {'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _109
  _110 = put_list _109, `[]`

  %% Argument types:
  %%    _110 => nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %% Unique:
  %%    _110
  _111 = put_list _110, `[]`

  %% Argument types:
  %%    _111 => nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))
  %% Unique:
  %%    _111
  _112 = put_tuple `template`, `conjunction`, `{attr,0,[],none}`, _111

  %% Argument types:
  %%    _112 => {'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}
  %% Unique:
  %%    _112
  _113 = put_list _112, `[]`

  %% Argument types:
  %%    _113 => nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))})
  %% Unique:
  %%    _113
  _114 = put_list _113, `[]`

  %% Argument types:
  %%    _114 => nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))
  %% Unique:
  %%    _114
  _115 = put_tuple `template`, `disjunction`, `{attr,0,[],none}`, _114

  %% Argument types:
  %%    _115 => {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}
  %% Unique:
  %%    _115
  _116 = put_list _115, `[]`

  %% Argument types:
  %%    _116 => nonempty_list({'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))})
  %% Unique:
  %%    _116
  _117 = put_list _116, `[[{atom,2007,two}]]`

  %% Argument types:
  %%    _117 => nonempty_list(nonempty_list({'atom', 2007, 'two'} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _117
  _118 = put_list `[{var,2007,'A'}]`, _117

  %% Argument types:
  %%    _118 => nonempty_list(nonempty_list({'atom', 2007, 'two'} | {'var', 2007, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _118
  _119 = put_tuple `template`, `clause`, `{attr,2007,[],none}`, _118

  %% Argument types:
  %%    _119 => {'template', 'clause', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 2007, 'two'} | {'var', 2007, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))}
  %% Unique:
  %%    _119
  _120 = put_list _119, `[{clause,2008,[{var,2008,'_'}],[],[{atom,2008,three}]}]`

  %% Argument types:
  %%    _99 => nonempty_list(nonempty_list({'atom', 2006, 'one'} | {'var', 2006, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _99
  _121 = put_tuple `template`, `clause`, `{attr,2006,[],none}`, _99

  %% Argument types:
  %%    _121 => {'template', 'clause', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 2006, 'one'} | {'var', 2006, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))}
  %%    _120 => nonempty_list({'template', 'clause', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 2007, 'two'} | {'var', 2007, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))} | {'clause', 2008, nonempty_list({'var', 2008, ''_''}), nil(), nonempty_list({'atom', 2008, 'three'})})
  %% Unique:
  %%    _120, 
  %%    _121
  _122 = put_list _121, _120

  %% Argument types:
  %%    _122 => nonempty_list({'template', 'clause', {'attr', 2006..2007, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 2006..2007, 'one' | 'two'} | {'var', 2006..2007, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006..2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))} | {'clause', 2008, nonempty_list({'var', 2008, ''_''}), nil(), nonempty_list({'atom', 2008, 'three'})})
  %% Unique:
  %%    _122
  _123 = put_list _122, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _124 = put_list _13, `[]`

  %% Argument types:
  %%    _124 => nonempty_list(any())
  %%    _123 => nonempty_list(nonempty_list({'template', 'clause', {'attr', 2006..2007, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 2006..2007, 'one' | 'two'} | {'var', 2006..2007, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 2006..2007, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))} | {'clause', 2008, nonempty_list({'var', 2008, ''_''}), nil(), nonempty_list({'atom', 2008, 'three'})}))
  %% Unique:
  %%    _123, 
  %%    _124
  _125 = put_list _124, _123

  %% Argument types:
  %%    _125 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _125
  _126 = put_tuple `template`, `function`, `{attr,2006,[],none}`, _125

  %% guard_SUITE.erl:2006
  %% Unique:
  %%    _126
  _14 = call (`merl`:`tree`/1), _126

  %% Aliased:
  %%    _14
  _152 = succeeded:body _14
  br _152, ^152, ^1

152:
  %% guard_SUITE.erl:2008
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _22
  _8 = call (`gen_rel_op_functions`/1), _22

  %% Unique:
  %%    _8
  _153 = succeeded:body _8
  br _153, ^153, ^1

153:
  %% Argument types:
  %%    _8 => list(any())
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _8
  _127 = put_list _14, _8
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _127
  ret _127

154:
  %% Argument types:
  %%    _24 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}}
  %% Aliased:
  %%    _24
  _27 = get_tuple_element _24, `0`

  %% Argument types:
  %%    _27 => atom()
  %% Unique:
  %%    _27
  _146 = bif:'=:=' _27, `neq`
  br _146, ^145, ^132

145:
  %% Argument types:
  %%    _24 => {'neq', number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `1`

  %% Argument types:
  %%    _26 => number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}
  %% Aliased:
  %%    _26
  _142 = bif:is_tuple _26
  br _142, ^167, ^132

167:
  %% Unique:
  %%    _25
  _6 = call (`merl`:`term`/1), _25

  %% Aliased:
  %%    _6
  _134 = succeeded:body _6
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    _26 => {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}
  %% Aliased:
  %%    _26
  _31 = get_tuple_element _26, `0`

  %% Unique:
  %%    _31
  _5 = call (`merl`:`term`/1), _31

  %% Aliased:
  %%    _5
  _135 = succeeded:body _5
  br _135, ^135, ^1

135:
  %% Argument types:
  %%    _26 => {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}
  %% Aliased:
  %%    _26
  _30 = get_tuple_element _26, `1`

  %% Unique:
  %%    _30
  _4 = call (`merl`:`term`/1), _30

  %% Aliased:
  %%    _4
  _136 = succeeded:body _4
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    _26 => {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}
  %% Aliased:
  %%    _26
  _29 = get_tuple_element _26, `2`

  %% Unique:
  %%    _29
  _3 = call (`merl`:`term`/1), _29

  %% Aliased:
  %%    _3
  _137 = succeeded:body _3
  br _137, ^137, ^1

137:
  %% Argument types:
  %%    _26 => {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}
  %% Aliased:
  %%    _26
  _28 = get_tuple_element _26, `3`

  %% Unique:
  %%    _28
  _2 = call (`merl`:`term`/1), _28

  %% Aliased:
  %%    _2
  _138 = succeeded:body _2
  br _138, ^138, ^1

138:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _32 = put_list _5, `[]`

  %% Argument types:
  %%    _32 => nonempty_list(any())
  %% Unique:
  %%    _32
  _33 = put_list _32, `[]`

  %% Argument types:
  %%    _33 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _33
  _34 = put_list `[{atom,1997,erlang}]`, _33

  %% Argument types:
  %%    _34 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _34
  _35 = put_tuple `template`, `module_qualifier`, `{attr,1997,[],none}`, _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _36 = put_list _4, `[]`

  %% Argument types:
  %%    _36 => nonempty_list(any())
  %% Unique:
  %%    _36
  _37 = put_list `{var,1997,'A'}`, _36

  %% Argument types:
  %%    _37 => nonempty_list(any())
  %% Unique:
  %%    _37
  _38 = put_list _37, `[]`

  %% Argument types:
  %%    _35 => {'template', 'module_qualifier', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _35
  _39 = put_list _35, `[]`

  %% Argument types:
  %%    _39 => nonempty_list({'template', 'module_qualifier', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %%    _38 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _38, 
  %%    _39
  _40 = put_list _39, _38

  %% Argument types:
  %%    _40 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _40
  _41 = put_tuple `template`, `application`, `{attr,1997,[],none}`, _40

  %% Argument types:
  %%    _41 => {'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _41
  _42 = put_list _41, `[]`

  %% Argument types:
  %%    _42 => nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %% Unique:
  %%    _42
  _43 = put_list _42, `[]`

  %% Argument types:
  %%    _43 => nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))
  %% Unique:
  %%    _43
  _44 = put_tuple `template`, `conjunction`, `{attr,0,[],none}`, _43

  %% Argument types:
  %%    _44 => {'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}
  %% Unique:
  %%    _44
  _45 = put_list _44, `[]`

  %% Argument types:
  %%    _45 => nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))})
  %% Unique:
  %%    _45
  _46 = put_list _45, `[]`

  %% Argument types:
  %%    _46 => nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))
  %% Unique:
  %%    _46
  _47 = put_tuple `template`, `disjunction`, `{attr,0,[],none}`, _46

  %% Argument types:
  %%    _47 => {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}
  %% Unique:
  %%    _47
  _48 = put_list _47, `[]`

  %% Argument types:
  %%    _48 => nonempty_list({'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))})
  %% Unique:
  %%    _48
  _49 = put_list _48, `[[{atom,1997,one}]]`

  %% Argument types:
  %%    _49 => nonempty_list(nonempty_list({'atom', 1997, 'one'} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _49
  _50 = put_list `[{var,1997,'A'}]`, _49

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _51 = put_list _3, `[]`

  %% Argument types:
  %%    _51 => nonempty_list(any())
  %% Unique:
  %%    _51
  _52 = put_list _51, `[]`

  %% Argument types:
  %%    _52 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _52
  _53 = put_list `[{atom,1998,erlang}]`, _52

  %% Argument types:
  %%    _53 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _53
  _54 = put_tuple `template`, `module_qualifier`, `{attr,1998,[],none}`, _53

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _55 = put_list _2, `[]`

  %% Argument types:
  %%    _55 => nonempty_list(any())
  %% Unique:
  %%    _55
  _56 = put_list `{var,1998,'A'}`, _55

  %% Argument types:
  %%    _56 => nonempty_list(any())
  %% Unique:
  %%    _56
  _57 = put_list _56, `[]`

  %% Argument types:
  %%    _54 => {'template', 'module_qualifier', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _54
  _58 = put_list _54, `[]`

  %% Argument types:
  %%    _58 => nonempty_list({'template', 'module_qualifier', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %%    _57 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _57, 
  %%    _58
  _59 = put_list _58, _57

  %% Argument types:
  %%    _59 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _59
  _60 = put_tuple `template`, `application`, `{attr,1998,[],none}`, _59

  %% Argument types:
  %%    _60 => {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}
  %% Unique:
  %%    _60
  _61 = put_list _60, `[]`

  %% Argument types:
  %%    _61 => nonempty_list({'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))})
  %% Unique:
  %%    _61
  _62 = put_list _61, `[]`

  %% Argument types:
  %%    _62 => nonempty_list(nonempty_list({'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))
  %% Unique:
  %%    _62
  _63 = put_list `[{atom,1998,true}]`, _62

  %% Argument types:
  %%    _63 => nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))
  %% Unique:
  %%    _63
  _64 = put_tuple `template`, `match_expr`, `{attr,1998,[],none}`, _63

  %% Argument types:
  %%    _64 => {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}
  %% Unique:
  %%    _64
  _65 = put_list _64, `[{atom,1998,two}]`

  %% Argument types:
  %%    _65 => nonempty_list({'atom', 1998, 'two'} | {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))})
  %% Unique:
  %%    _65
  _66 = put_list _65, `[]`

  %% Argument types:
  %%    _66 => nonempty_list(nonempty_list({'atom', 1998, 'two'} | {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))
  %% Unique:
  %%    _66
  _67 = put_list `[]`, _66

  %% Argument types:
  %%    _67 => nonempty_list(list({'atom', 1998, 'two'} | {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))
  %% Unique:
  %%    _67
  _68 = put_list `[{var,1998,'A'}]`, _67

  %% Argument types:
  %%    _68 => nonempty_list(list({'atom', 1998, 'two'} | {'var', 1998, ''A''} | {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))
  %% Unique:
  %%    _68
  _69 = put_tuple `template`, `clause`, `{attr,1998,[],none}`, _68

  %% Argument types:
  %%    _69 => {'template', 'clause', {'attr', 1998, nil(), 'none'}, nonempty_list(list({'atom', 1998, 'two'} | {'var', 1998, ''A''} | {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}
  %% Unique:
  %%    _69
  _70 = put_list _69, `[]`

  %% Argument types:
  %%    _50 => nonempty_list(nonempty_list({'atom', 1997, 'one'} | {'var', 1997, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _50
  _71 = put_tuple `template`, `clause`, `{attr,1997,[],none}`, _50

  %% Argument types:
  %%    _71 => {'template', 'clause', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1997, 'one'} | {'var', 1997, ''A''} | {'template', 'disjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'conjunction', {'attr', 0, nil(), 'none'}, nonempty_list(nonempty_list({'template', 'application', {'attr', 1997, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))}
  %%    _70 => nonempty_list({'template', 'clause', {'attr', 1998, nil(), 'none'}, nonempty_list(list({'atom', 1998, 'two'} | {'var', 1998, ''A''} | {'template', 'match_expr', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application', {'attr', 1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))})
  %% Unique:
  %%    _70, 
  %%    _71
  _72 = put_list _71, _70

  %% Argument types:
  %%    _72 => nonempty_list({'template', 'clause', {'attr', 1997..1998, nil(), 'none'}, nonempty_list(list({'atom', 1997..1998, 'one' | 'two'} | {'var', 1997..1998, ''A''} | {'template', 'disjunction' | 'match_expr', {'attr', 0..1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application' | 'conjunction', {'attr', 0..1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))})
  %% Unique:
  %%    _72
  _73 = put_list _72, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _74 = put_list _6, `[]`

  %% Argument types:
  %%    _74 => nonempty_list(any())
  %%    _73 => nonempty_list(nonempty_list({'template', 'clause', {'attr', 1997..1998, nil(), 'none'}, nonempty_list(list({'atom', 1997..1998, 'one' | 'two'} | {'var', 1997..1998, ''A''} | {'template', 'disjunction' | 'match_expr', {'attr', 0..1998, nil(), 'none'}, nonempty_list(nonempty_list({'atom', 1998, 'true'} | {'template', 'application' | 'conjunction', {'attr', 0..1998, nil(), 'none'}, nonempty_list(nonempty_list(any()))}))}))}))
  %% Unique:
  %%    _73, 
  %%    _74
  _75 = put_list _74, _73

  %% Argument types:
  %%    _75 => nonempty_list(nonempty_list(any()))
  %% Unique:
  %%    _75
  _76 = put_tuple `template`, `function`, `{attr,1997,[],none}`, _75

  %% guard_SUITE.erl:1997
  %% Unique:
  %%    _76
  _7 = call (`merl`:`tree`/1), _76

  %% Aliased:
  %%    _7
  _139 = succeeded:body _7
  br _139, ^139, ^1

139:
  %% guard_SUITE.erl:1999
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _22
  _1 = call (`gen_rel_op_functions`/1), _22

  %% Unique:
  %%    _1
  _140 = succeeded:body _1
  br _140, ^140, ^1

140:
  %% Argument types:
  %%    _1 => list(any())
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  _128 = put_list _7, _1
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _128
  ret _128

132:
  %% guard_SUITE.erl:1984
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-gen_rel_op_functions/1-',1}}
  _129 = match_fail `function_clause`, _0

  %% Unique:
  %%    _129
  _164 = succeeded:body _129
  br ^1

1:
  _130 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _130

163:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:2011
%% Counter = 60
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
%%    _1 =>
%%     'generated_combinations'
function `guard_SUITE`:`test_combinations`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _56 = is_nonempty_list _0
  br _56, ^56, ^57

56:
  %% Argument types:
  %%    _0 => nonempty_list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Aliased:
  %%    _0
  _15 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}})
  %% Aliased:
  %%    _0
  _14 = get_tl _0

  %% Argument types:
  %%    _15 => {atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}}
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `0`

  %% Argument types:
  %%    _15 => {atom(), {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`
  _36 = new_try_tag `'try'`
  br _36, ^35, ^33

35:
  %% guard_SUITE.erl:2013
  %% Aliased:
  %%    _17
  _2 = call (`erlang`:`make_fun`/3), `generated_combinations`, _17, `1`

  %% Aliased:
  %%    _2
  _37 = succeeded:body _2
  br _37, ^37, ^33

37:
  %% guard_SUITE.erl:2013
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2, 
  %%    _16
  _21 = call (`test_combinations_1`/3), `[5,6,7,8,9]`, _16, _2

  %% Unique:
  %%    _21
  _38 = succeeded:body _21
  br _38, ^38, ^33

38:
  %% guard_SUITE.erl:2014
  %% Aliased:
  %%    _17
  _3 = call (`erlang`:`make_fun`/3), `generated_combinations`, _17, `1`

  %% Aliased:
  %%    _3
  _39 = succeeded:body _3
  br _39, ^39, ^33

39:
  %% guard_SUITE.erl:2014
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _3, 
  %%    _16
  _22 = call (`test_combination`/3), `6.5`, _16, _3

  %% Aliased:
  %%    _22
  _40 = succeeded:body _22
  br _40, ^40, ^33

40:
  %% Unique:
  %%    _36
  _50 = kill_try_tag _36

  %% guard_SUITE.erl:2020
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _14
  _26 = call (`test_combinations`/2), _14, `generated_combinations`

  %% Unique:
  %%    _26
  _51 = succeeded:body _26
  br _51, ^51, ^1

51:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _26
  ret _26

33:
  %% Unique:
  %%    _36
  _48 = landingpad `'try'`, _36

  %% Aliased:
  %%    _48
  _7 = extract _48, `0`

  %% Aliased:
  %%    _48
  _6 = extract _48, `1`

  %% Aliased:
  %%    _48
  _5 = extract _48, `2`

  %% Unique:
  %%    _36
  _49 = kill_try_tag _36

  %% Argument types:
  %%    _7 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _7
  _46 = bif:'=:=' _7, `error`
  br _46, ^45, ^42

45:
  %% Argument types:
  %%    _16 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
  %% Aliased:
  %%    _16
  _18 = put_list _16, `[]`

  %% Argument types:
  %%    _17 => atom()
  %%    _18 => nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _17, 
  %%    _18
  _19 = put_list _17, _18

  %% guard_SUITE.erl:2017
  %% Unique:
  %%    _19
  _23 = call (`io`:`format`/2), `"~p: ~p\n"`, _19

  %% Aliased:
  %%    _23
  _43 = succeeded:body _23
  br _43, ^43, ^1

43:
  %% Aliased:
  %%    _5, 
  %%    _6
  _24 = raw_raise `error`, _6, _5

  %% Unique:
  %%    _24
  _44 = succeeded:body _24
  br ^1

42:
  %% Aliased:
  %%    _5, 
  %%    _6
  _25 = resume _5, _6

  %% Unique:
  %%    _25
  _47 = succeeded:body _25
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28

57:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:2023
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(5..9)
%%    _1 =>
%%     {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
%%    _2 =>
%%     fun((_))
function `guard_SUITE`:`test_combinations_1`(_0, _1, _2) {
0:
  %% Unique:
  %%    _0
  _23 = is_nonempty_list _0
  br _23, ^23, ^24

23:
  %% Argument types:
  %%    _0 => nonempty_list(5..9)
  %% Unique:
  %%    _0
  _10 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(5..9)
  %% Unique:
  %%    _0
  _9 = get_tl _0

  %% guard_SUITE.erl:2024
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _10
  _11 = call (`test_combination`/3), _10, _1, _2

  %% Aliased:
  %%    _11
  _19 = succeeded:body _11
  br _19, ^19, ^1

19:
  %% guard_SUITE.erl:2025
  %% Argument types:
  %%    _10 => 5..9
  %% Unique:
  %%    _10
  _3 = bif:float _10

  %% Unique:
  %%    _3
  _20 = succeeded:body _3
  br _20, ^20, ^1

20:
  %% guard_SUITE.erl:2025
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _1, 
  %%    _2
  %% Unique:
  %%    _3
  _12 = call (`test_combination`/3), _3, _1, _2

  %% Aliased:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% guard_SUITE.erl:2026
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  %% Unique:
  %%    _9
  _13 = call (`test_combinations_1`/3), _9, _1, _2

  %% Unique:
  %%    _13
  _22 = succeeded:body _13
  br _22, ^22, ^1

22:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _13
  ret _13

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15

24:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:2029
%% Counter = 94
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number()
%%    _1 =>
%%     {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
%%    _2 =>
%%     fun((_))
function `guard_SUITE`:`test_combination`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _1 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
  %% Aliased:
  %%    _1
  _68 = is_tagged_tuple _1, `2`, `neq`
  br _68, ^65, ^39

65:
  %% Argument types:
  %%    _1 => {'neq', number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}}
  %% Aliased:
  %%    _1
  _26 = get_tuple_element _1, `1`

  %% guard_SUITE.erl:2030
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _0, 
  %%    _26
  _28 = call (`eval_combination_expr`/2), _26, _0

  %% Unique:
  %%    _28
  _40 = succeeded:body _28
  br _40, ^92, ^1

92:
  br ^93

93:
  _45 = new_try_tag `'try'`
  br _45, ^44, ^42

44:
  %% guard_SUITE.erl:2032
  %% Argument types:
  %%    _2 => fun((_))
  %%    _0 => number()
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _0
  _32 = call _2, _0

  %% Aliased:
  %%    _32
  _46 = succeeded:body _32
  br _46, ^46, ^42

46:
  %% Unique:
  %%    _45
  _60 = kill_try_tag _45
  br ^43

42:
  %% Unique:
  %%    _45
  _58 = landingpad `'try'`, _45

  %% Aliased:
  %%    _58
  _7 = extract _58, `0`

  %% Aliased:
  %%    _58
  _6 = extract _58, `1`

  %% Aliased:
  %%    _58
  _5 = extract _58, `2`

  %% Unique:
  %%    _45
  _59 = kill_try_tag _45

  %% Argument types:
  %%    _7 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _7
  _56 = bif:'=:=' _7, `error`
  br _56, ^55, ^48

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _52 = is_tagged_tuple _6, `2`, `badmatch`
  br _52, ^49, ^48

49:
  br ^43

43:
  _8 = phi { _32, ^46 }, { `three`, ^49 }

  %% Argument types:
  %%    _28 => 'one' | 'three' | 'two'
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _28
  _63 = bif:'=:=' _8, _28
  br _63, ^63, ^62

63:
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _8
  ret _8

62:
  %% guard_SUITE.erl:2031
  %% Aliased:
  %%    _8
  _35 = match_fail `badmatch`, _8

  %% Unique:
  %%    _35
  _64 = succeeded:body _35
  br ^1

48:
  %% Aliased:
  %%    _5, 
  %%    _6
  _34 = resume _5, _6

  %% Unique:
  %%    _34
  _57 = succeeded:body _34
  br ^1

39:
  %% guard_SUITE.erl:2038
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _0, 
  %%    _1
  Result = call (`eval_combination_expr`/2), _1, _0

  %% Unique:
  %%    Result
  _71 = succeeded:body Result
  br _71, ^71, ^1

71:
  %% guard_SUITE.erl:2039
  %% Argument types:
  %%    _2 => fun((_))
  %%    _0 => number()
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _0
  _18 = call _2, _0

  %% Aliased:
  %%    _18
  _72 = succeeded:body _18
  br _72, ^72, ^1

72:
  %% Argument types:
  %%    Result => 'one' | 'three' | 'two'
  %% Aliased:
  %%    _18
  %% Unique:
  %%    Result
  _75 = bif:'=:=' _18, Result
  br _75, ^75, ^74

75:
  %% Result type:
  %%    'one' | 'three' | 'two'
  %% Aliased:
  %%    _18
  ret _18

74:
  %% guard_SUITE.erl:2039
  %% Aliased:
  %%    _18
  _36 = match_fail `badmatch`, _18

  %% Unique:
  %%    _36
  _76 = succeeded:body _36
  br ^1

1:
  _37 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _37
}

%% guard_SUITE.erl:2041
%% Counter = 36
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(6, 7) | {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
%%    _1 =>
%%     number()
function `guard_SUITE`:`eval_combination_expr`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => number(6, 7) | {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
  %% Aliased:
  %%    _0
  _31 = bif:is_tuple _0
  br _31, ^31, ^17

31:
  %% Argument types:
  %%    _0 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...}
  %% Aliased:
  %%    _0
  _32 = bif:tuple_size _0

  %% Argument types:
  %%    _32 => 2..16777215
  %% Unique:
  %%    _32
  _33 = bif:'=:=' _32, `4`
  br _33, ^35, ^17

35:
  %% Argument types:
  %%    _0 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _0
  _9 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _0 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _0
  _8 = get_tuple_element _0, `1`

  %% guard_SUITE.erl:2042
  %% Aliased:
  %%    _1, 
  %%    _8
  _10 = call (`erlang`:_9/2), _1, _8

  %% Aliased:
  %%    _10
  _18 = succeeded:body _10
  br _18, ^18, ^1

18:
  switch _10, ^20, [
    { `false`, ^28 },
    { `true`, ^27 }
  ]

27:
  %% Result type:
  %%    'one'
  ret `one`

28:
  %% Argument types:
  %%    _0 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _0
  _7 = get_tuple_element _0, `2`

  %% Argument types:
  %%    _0 => {atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, any(), any()}
  %% Aliased:
  %%    _0
  _6 = get_tuple_element _0, `3`

  %% guard_SUITE.erl:2046
  %% Aliased:
  %%    _1, 
  %%    _6
  _11 = call (`erlang`:_7/2), _1, _6

  %% Aliased:
  %%    _11
  _21 = succeeded:body _11
  br _21, ^21, ^1

21:
  switch _11, ^23, [
    { `false`, ^24 },
    { `true`, ^25 }
  ]

25:
  %% Result type:
  %%    'two'
  ret `two`

24:
  %% Result type:
  %%    'three'
  ret `three`

23:
  %% guard_SUITE.erl:2046
  %% Aliased:
  %%    _11
  _12 = match_fail `case_clause`, _11

  %% Unique:
  %%    _12
  _26 = succeeded:body _12
  br ^1

20:
  %% guard_SUITE.erl:2042
  %% Aliased:
  %%    _10
  _13 = match_fail `case_clause`, _10

  %% Unique:
  %%    _13
  _29 = succeeded:body _13
  br ^1

17:
  %% guard_SUITE.erl:2041
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-eval_combination_expr/2-',2}}
  _14 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _14
  _34 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:2053
%% Counter = 187
%% bs_ensure_opt: true
function `guard_SUITE`:`literal_type_tests`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _114 = bif:is_list _0
  br _114, ^114, ^113

114:
  %% guard_SUITE.erl:2057
  %% Result type:
  %%    nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  _3 = call (`literals`/0)

  %% Unique:
  %%    _3
  _115 = succeeded:body _3
  br _115, ^115, ^1

115:
  %% guard_SUITE.erl:2057
  %% Result type:
  %%    nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _3
  _12 = call (`'-literal_type_tests/1-lc$^0/1-0-'`/1), _3

  %% Unique:
  %%    _12
  _116 = succeeded:body _12
  br _116, ^116, ^1

116:
  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list(atom())
  _15 = call (`type_tests`/0)

  %% Unique:
  %%    _15
  _117 = succeeded:body _15
  br _117, ^117, ^1

117:
  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _12, 
  %%    _15
  _24 = call (`'-literal_type_tests/1-lc$^2/1-2-'`/2), _15, _12

  %% Unique:
  %%    _24
  _118 = succeeded:body _24
  br _118, ^118, ^1

118:
  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list({'match', any(), {'atom', any(), any()}, any()})
  %% Unique:
  %%    _24
  Tests = call (`make_test`/1), _24

  %% Aliased:
  %%    Tests
  _119 = succeeded:body Tests
  br _119, ^119, ^1

119:
  %% guard_SUITE.erl:2059
  Anno = call (`erl_anno`:`new`/1), `0`

  %% Aliased:
  %%    Anno
  _120 = succeeded:body Anno
  br _120, ^120, ^1

120:
  %% Argument types:
  %%    Tests => nonempty_list({'match', any(), {'atom', any(), any()}, any()})
  %% Aliased:
  %%    Anno, 
  %%    Tests
  _63 = put_tuple `clause`, Anno, `[]`, `[]`, Tests

  %% Argument types:
  %%    _63 => {'clause', any(), nil(), nil(), nonempty_list({'match', any(), {'atom', any(), any()}, any()})}
  %% Aliased:
  %%    _63
  _64 = put_list _63, `[]`

  %% Argument types:
  %%    _64 => nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'match', any(), {'atom', any(), any()}, any()})})
  %% Aliased:
  %%    _64, 
  %%    Anno
  Func = put_tuple `function`, Anno, `test`, `0`, _64

  %% Argument types:
  %%    Func => {'function', any(), 'test', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'match', any(), {'atom', any(), any()}, any()})})}
  %% Aliased:
  %%    Func
  _65 = put_list Func, `[{eof,999}]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _66 = put_tuple `attribute`, Anno, `compile`, `export_all`

  %% Argument types:
  %%    _66 => {'attribute', any(), 'compile', 'export_all'}
  %%    _65 => nonempty_list({'eof', 999} | {'function', any(), 'test', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'match', any(), {'atom', any(), any()}, any()})})})
  %% Aliased:
  %%    _65, 
  %%    _66
  _67 = put_list _66, _65

  %% Argument types:
  %%    
  %% Aliased:
  %%    Anno
  _68 = put_tuple `attribute`, Anno, `module`, `literal_test`

  %% Argument types:
  %%    _68 => {'attribute', any(), 'module', 'literal_test'}
  %%    _67 => nonempty_list({'eof', 999} | {'attribute', any(), 'compile', 'export_all'} | {'function', any(), 'test', 0, nonempty_list({'clause', any(), nil(), nil(), nonempty_list({'match', any(), {'atom', any(), any()}, any()})})})
  %% Aliased:
  %%    _67, 
  %%    _68
  Form = put_list _68, _67
  _33 = make_fun (`'-literal_type_tests/1-fun-4-'`/1)

  %% guard_SUITE.erl:2066
  %% Aliased:
  %%    _33, 
  %%    Form
  _97 = call (`lists`:`foreach`/2), _33, Form

  %% Aliased:
  %%    _97
  _121 = succeeded:body _97
  br _121, ^121, ^1

121:
  %% guard_SUITE.erl:2069
  %% Aliased:
  %%    Form
  _70 = call (`compile`:`forms`/1), Form

  %% Aliased:
  %%    _70
  _122 = succeeded:body _70
  br _122, ^122, ^1

122:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _180 = is_tagged_tuple _70, `3`, `ok`
  br _180, ^177, ^124

177:
  %% Argument types:
  %%    _70 => {'ok', any(), any()}
  %% Aliased:
  %%    _70
  _72 = get_tuple_element _70, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _125 = bif:'=:=' _72, `literal_test`
  br _125, ^125, ^124

125:
  %% Argument types:
  %%    _70 => {'ok', 'literal_test', any()}
  %% Aliased:
  %%    _70
  _71 = get_tuple_element _70, `2`

  %% guard_SUITE.erl:2070
  %% Aliased:
  %%    _0, 
  %%    _71
  _98 = call (`smoke_disasm`/3), _0, `literal_test`, _71

  %% Aliased:
  %%    _98
  _126 = succeeded:body _98
  br _126, ^126, ^1

126:
  %% guard_SUITE.erl:2071
  %% Aliased:
  %%    _71
  _74 = call (`code`:`load_binary`/3), `literal_test`, `literal_test`, _71

  %% Aliased:
  %%    _74
  _127 = succeeded:body _74
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _173 = is_tagged_tuple _74, `2`, `module`
  br _173, ^170, ^129

170:
  %% Argument types:
  %%    _74 => {'module', any()}
  %% Aliased:
  %%    _74
  _75 = get_tuple_element _74, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _130 = bif:'=:=' _75, `literal_test`
  br _130, ^130, ^129

130:
  %% guard_SUITE.erl:2072
  _99 = call (`literal_test`:`test`/0)

  %% Aliased:
  %%    _99
  _131 = succeeded:body _99
  br _131, ^131, ^1

131:
  %% guard_SUITE.erl:2073
  _77 = call (`code`:`delete`/1), `literal_test`

  %% Aliased:
  %%    _77
  _132 = succeeded:body _77
  br _132, ^132, ^1

132:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _168 = bif:'=:=' _77, `true`
  br _168, ^167, ^134

167:
  %% guard_SUITE.erl:2074
  _100 = call (`code`:`purge`/1), `literal_test`

  %% Aliased:
  %%    _100
  _135 = succeeded:body _100
  br _135, ^135, ^1

135:
  %% guard_SUITE.erl:2077
  %% Aliased:
  %%    Form
  _78 = call (`compile`:`forms`/2), Form, `[binary,report,time,no_copt,no_postopt]`

  %% Aliased:
  %%    _78
  _136 = succeeded:body _78
  br _136, ^136, ^1

136:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _163 = is_tagged_tuple _78, `3`, `ok`
  br _163, ^160, ^138

160:
  %% Argument types:
  %%    _78 => {'ok', any(), any()}
  %% Aliased:
  %%    _78
  _80 = get_tuple_element _78, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _139 = bif:'=:=' _80, `literal_test`
  br _139, ^139, ^138

139:
  %% Argument types:
  %%    _78 => {'ok', 'literal_test', any()}
  %% Aliased:
  %%    _78
  _79 = get_tuple_element _78, `2`

  %% guard_SUITE.erl:2079
  %% Aliased:
  %%    _0, 
  %%    _79
  _101 = call (`smoke_disasm`/3), _0, `literal_test`, _79

  %% Aliased:
  %%    _101
  _140 = succeeded:body _101
  br _140, ^140, ^1

140:
  %% guard_SUITE.erl:2080
  %% Aliased:
  %%    _79
  _82 = call (`code`:`load_binary`/3), `literal_test`, `literal_test`, _79

  %% Aliased:
  %%    _82
  _141 = succeeded:body _82
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _156 = is_tagged_tuple _82, `2`, `module`
  br _156, ^153, ^143

153:
  %% Argument types:
  %%    _82 => {'module', any()}
  %% Aliased:
  %%    _82
  _83 = get_tuple_element _82, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _144 = bif:'=:=' _83, `literal_test`
  br _144, ^144, ^143

144:
  %% guard_SUITE.erl:2081
  _102 = call (`literal_test`:`test`/0)

  %% Aliased:
  %%    _102
  _145 = succeeded:body _102
  br _145, ^145, ^1

145:
  %% guard_SUITE.erl:2082
  _85 = call (`code`:`delete`/1), `literal_test`

  %% Aliased:
  %%    _85
  _146 = succeeded:body _85
  br _146, ^146, ^1

146:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _151 = bif:'=:=' _85, `true`
  br _151, ^150, ^148

150:
  %% guard_SUITE.erl:2083
  _103 = call (`code`:`purge`/1), `literal_test`

  %% Aliased:
  %%    _103
  _149 = succeeded:body _103
  br _149, ^149, ^1

149:
  %% Result type:
  %%    'ok'
  ret `ok`

148:
  %% guard_SUITE.erl:2082
  %% Aliased:
  %%    _85
  _104 = match_fail `badmatch`, _85

  %% Unique:
  %%    _104
  _152 = succeeded:body _104
  br ^1

143:
  %% guard_SUITE.erl:2080
  %% Aliased:
  %%    _82
  _105 = match_fail `badmatch`, _82

  %% Unique:
  %%    _105
  _159 = succeeded:body _105
  br ^1

138:
  %% guard_SUITE.erl:2077
  %% Aliased:
  %%    _78
  _106 = match_fail `badmatch`, _78

  %% Unique:
  %%    _106
  _166 = succeeded:body _106
  br ^1

134:
  %% guard_SUITE.erl:2073
  %% Aliased:
  %%    _77
  _107 = match_fail `badmatch`, _77

  %% Unique:
  %%    _107
  _169 = succeeded:body _107
  br ^1

129:
  %% guard_SUITE.erl:2071
  %% Aliased:
  %%    _74
  _108 = match_fail `badmatch`, _74

  %% Unique:
  %%    _108
  _176 = succeeded:body _108
  br ^1

124:
  %% guard_SUITE.erl:2069
  %% Aliased:
  %%    _70
  _109 = match_fail `badmatch`, _70

  %% Unique:
  %%    _109
  _183 = succeeded:body _109
  br ^1

113:
  %% guard_SUITE.erl:2053
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-literal_type_tests/1-',1}}
  _110 = match_fail `function_clause`, _0

  %% Unique:
  %%    _110
  _184 = succeeded:body _110
  br ^1

1:
  _111 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _111
}

%% guard_SUITE.erl:2086
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
function `guard_SUITE`:`make_test`(_0) {
0:
  %% Aliased:
  %%    _0
  _30 = is_nonempty_list _0
  br _30, ^30, ^31

30:
  %% Argument types:
  %%    _0 => nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Aliased:
  %%    _0
  _9 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Aliased:
  %%    _0
  _8 = get_tl _0

  %% Argument types:
  %%    _9 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...}
  %% Aliased:
  %%    _9
  _29 = bif:tuple_size _9
  %% Argument types:
  %%    
  switch _29, ^20, [
    { `2`, ^34 },
    { `3`, ^33 }
  ]

33:
  %% Argument types:
  %%    _9 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), any()}
  %% Aliased:
  %%    _9
  _12 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _9 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), any()}
  %% Aliased:
  %%    _9
  _11 = get_tuple_element _9, `1`

  %% Argument types:
  %%    _9 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `2`

  %% guard_SUITE.erl:2087
  %% Result type:
  %%    {'match', any(), {'atom', any(), any()}, any()}
  %% Aliased:
  %%    _10, 
  %%    _11
  %% Unique:
  %%    _12
  _2 = call (`test`/3), _12, _11, _10

  %% Unique:
  %%    _2
  _22 = succeeded:body _2
  br _22, ^22, ^1

22:
  %% guard_SUITE.erl:2087
  %% Result type:
  %%    list({'match', any(), {'atom', any(), any()}, any()})
  %% Aliased:
  %%    _8
  _1 = call (`make_test`/1), _8

  %% Unique:
  %%    _1
  _23 = succeeded:body _1
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    _2 => {'match', any(), {'atom', any(), any()}, any()}
  %%    _1 => list({'match', any(), {'atom', any(), any()}, any()})
  %% Unique:
  %%    _1, 
  %%    _2
  _16 = put_list _2, _1
  %% Result type:
  %%    nonempty_list({'match', any(), {'atom', any(), any()}, any()})
  %% Unique:
  %%    _16
  ret _16

34:
  %% Argument types:
  %%    _9 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)}
  %% Aliased:
  %%    _9
  _14 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _9 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)}
  %% Aliased:
  %%    _9
  _13 = get_tuple_element _9, `1`

  %% guard_SUITE.erl:2089
  %% Result type:
  %%    {'match', any(), {'atom', any(), any()}, any()}
  %% Aliased:
  %%    _13
  %% Unique:
  %%    _14
  _4 = call (`test`/2), _14, _13

  %% Unique:
  %%    _4
  _24 = succeeded:body _4
  br _24, ^24, ^1

24:
  %% guard_SUITE.erl:2089
  %% Result type:
  %%    list({'match', any(), {'atom', any(), any()}, any()})
  %% Aliased:
  %%    _8
  _3 = call (`make_test`/1), _8

  %% Unique:
  %%    _3
  _25 = succeeded:body _3
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _4 => {'match', any(), {'atom', any(), any()}, any()}
  %%    _3 => list({'match', any(), {'atom', any(), any()}, any()})
  %% Unique:
  %%    _3, 
  %%    _4
  _15 = put_list _4, _3
  %% Result type:
  %%    nonempty_list({'match', any(), {'atom', any(), any()}, any()})
  %% Unique:
  %%    _15
  ret _15

20:
  %% guard_SUITE.erl:2086
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-make_test/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _32 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18

31:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:2092
%% Counter = 66
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom()
%%    _1 =>
%%     'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
function `guard_SUITE`:`test`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %% Aliased:
  %%    _1
  _9 = put_list _1, `[]`

  %% Argument types:
  %%    _0 => atom()
  %%    _9 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _0, 
  %%    _9
  _10 = put_list _0, _9

  %% Argument types:
  %%    _1 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %%    _10 => nonempty_list(atom() | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _10
  _11 = put_list _1, _10

  %% Argument types:
  %%    _0 => atom()
  %%    _11 => nonempty_list(atom() | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _0, 
  %%    _11
  _12 = put_list _0, _11

  %% guard_SUITE.erl:2093
  %% Unique:
  %%    _12
  S0 = call (`io_lib`:`format`/2), `"begin io:format(\"~~p~n\", [{~p,~p}]), if ~w(~w) -> true; true -> false end end. "`, _12

  %% Aliased:
  %%    S0
  _31 = succeeded:body S0
  br _31, ^31, ^1

31:
  %% guard_SUITE.erl:2094
  %% Aliased:
  %%    S0
  S = call (`lists`:`flatten`/1), S0

  %% Aliased:
  %%    S
  _32 = succeeded:body S
  br _32, ^32, ^1

32:
  %% guard_SUITE.erl:2095
  %% Aliased:
  %%    S
  _13 = call (`erl_scan`:`string`/1), S

  %% Aliased:
  %%    _13
  _33 = succeeded:body _13
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _61 = is_tagged_tuple _13, `3`, `ok`
  br _61, ^58, ^35

58:
  %% Argument types:
  %%    _13 => {'ok', any(), any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `1`

  %% guard_SUITE.erl:2096
  %% Aliased:
  %%    _15
  _17 = call (`erl_parse`:`parse_exprs`/1), _15

  %% Aliased:
  %%    _17
  _36 = succeeded:body _17
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _54 = is_tagged_tuple _17, `2`, `ok`
  br _54, ^51, ^38

51:
  %% Argument types:
  %%    _17 => {'ok', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% guard_SUITE.erl:2097
  %% Aliased:
  %%    _18
  _20 = call (`erl_eval`:`exprs`/2), _18, `[]`

  %% Aliased:
  %%    _20
  _39 = succeeded:body _20
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _47 = is_tagged_tuple _20, `3`, `value`
  br _47, ^44, ^41

44:
  %% guard_SUITE.erl:2098
  Anno = call (`erl_anno`:`new`/1), `0`

  %% Aliased:
  %%    Anno
  _42 = succeeded:body Anno
  br _42, ^42, ^1

42:
  %% guard_SUITE.erl:2099
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _8 = bif:hd _18

  %% Aliased:
  %%    _8
  _43 = succeeded:body _8
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _20 => {'value', any(), any()}
  %% Aliased:
  %%    _20
  _22 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22, 
  %%    Anno
  _24 = put_tuple `atom`, Anno, _22

  %% Argument types:
  %%    _24 => {'atom', any(), any()}
  %% Aliased:
  %%    _8, 
  %%    Anno
  %% Unique:
  %%    _24
  _25 = put_tuple `match`, Anno, _24, _8
  %% Result type:
  %%    {'match', any(), {'atom', any(), any()}, any()}
  %% Unique:
  %%    _25
  ret _25

41:
  %% guard_SUITE.erl:2097
  %% Aliased:
  %%    _20
  _26 = match_fail `badmatch`, _20

  %% Unique:
  %%    _26
  _50 = succeeded:body _26
  br ^1

38:
  %% guard_SUITE.erl:2096
  %% Aliased:
  %%    _17
  _27 = match_fail `badmatch`, _17

  %% Unique:
  %%    _27
  _57 = succeeded:body _27
  br ^1

35:
  %% guard_SUITE.erl:2095
  %% Aliased:
  %%    _13
  _28 = match_fail `badmatch`, _13

  %% Unique:
  %%    _28
  _64 = succeeded:body _28
  br ^1

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% guard_SUITE.erl:2101
%% Counter = 69
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom()
%%    _1 =>
%%     'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
function `guard_SUITE`:`test`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _10 = put_list _2, `[]`

  %% Argument types:
  %%    _1 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %%    _10 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _10
  _11 = put_list _1, _10

  %% Argument types:
  %%    _0 => atom()
  %%    _11 => nonempty_list(any())
  %% Unique:
  %%    _0, 
  %%    _11
  _12 = put_list _0, _11

  %% Argument types:
  %%    _12 => nonempty_list(any())
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _12
  _13 = put_list _2, _12

  %% Argument types:
  %%    _1 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %%    _13 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _13
  _14 = put_list _1, _13

  %% Argument types:
  %%    _0 => atom()
  %%    _14 => nonempty_list(any())
  %% Unique:
  %%    _0, 
  %%    _14
  _15 = put_list _0, _14

  %% guard_SUITE.erl:2102
  %% Unique:
  %%    _15
  S0 = call (`io_lib`:`format`/2), `"begin io:format(\"~~p~n\", [{~p,~p,~p}]), if ~w(~w, ~w) -> true; true -> false end end. "`, _15

  %% Aliased:
  %%    S0
  _34 = succeeded:body S0
  br _34, ^34, ^1

34:
  %% guard_SUITE.erl:2103
  %% Aliased:
  %%    S0
  S = call (`lists`:`flatten`/1), S0

  %% Aliased:
  %%    S
  _35 = succeeded:body S
  br _35, ^35, ^1

35:
  %% guard_SUITE.erl:2104
  %% Aliased:
  %%    S
  _16 = call (`erl_scan`:`string`/1), S

  %% Aliased:
  %%    _16
  _36 = succeeded:body _16
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _64 = is_tagged_tuple _16, `3`, `ok`
  br _64, ^61, ^38

61:
  %% Argument types:
  %%    _16 => {'ok', any(), any()}
  %% Aliased:
  %%    _16
  _18 = get_tuple_element _16, `1`

  %% guard_SUITE.erl:2105
  %% Aliased:
  %%    _18
  _20 = call (`erl_parse`:`parse_exprs`/1), _18

  %% Aliased:
  %%    _20
  _39 = succeeded:body _20
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _57 = is_tagged_tuple _20, `2`, `ok`
  br _57, ^54, ^41

54:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% guard_SUITE.erl:2106
  %% Aliased:
  %%    _21
  _23 = call (`erl_eval`:`exprs`/2), _21, `[]`

  %% Aliased:
  %%    _23
  _42 = succeeded:body _23
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _50 = is_tagged_tuple _23, `3`, `value`
  br _50, ^47, ^44

47:
  %% guard_SUITE.erl:2107
  Anno = call (`erl_anno`:`new`/1), `0`

  %% Aliased:
  %%    Anno
  _45 = succeeded:body Anno
  br _45, ^45, ^1

45:
  %% guard_SUITE.erl:2108
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _9 = bif:hd _21

  %% Aliased:
  %%    _9
  _46 = succeeded:body _9
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _23 => {'value', any(), any()}
  %% Aliased:
  %%    _23
  _25 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25, 
  %%    Anno
  _27 = put_tuple `atom`, Anno, _25

  %% Argument types:
  %%    _27 => {'atom', any(), any()}
  %% Aliased:
  %%    _9, 
  %%    Anno
  %% Unique:
  %%    _27
  _28 = put_tuple `match`, Anno, _27, _9
  %% Result type:
  %%    {'match', any(), {'atom', any(), any()}, any()}
  %% Unique:
  %%    _28
  ret _28

44:
  %% guard_SUITE.erl:2106
  %% Aliased:
  %%    _23
  _29 = match_fail `badmatch`, _23

  %% Unique:
  %%    _29
  _53 = succeeded:body _29
  br ^1

41:
  %% guard_SUITE.erl:2105
  %% Aliased:
  %%    _20
  _30 = match_fail `badmatch`, _20

  %% Unique:
  %%    _30
  _60 = succeeded:body _30
  br ^1

38:
  %% guard_SUITE.erl:2104
  %% Aliased:
  %%    _16
  _31 = match_fail `badmatch`, _16

  %% Unique:
  %%    _31
  _67 = succeeded:body _31
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% guard_SUITE.erl:2110
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     maybe_improper_list(any(), any())
%%    _1 =>
%%     'literal_test'
function `guard_SUITE`:`smoke_disasm`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:2111
  %% Aliased:
  %%    _0
  Priv = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    Priv
  _13 = succeeded:body Priv
  br _13, ^15, ^1

15:
  %% guard_SUITE.erl:2112
  %% Aliased:
  %%    Priv
  File = call (`filename`:`join`/2), Priv, `"literal_test.beam"`

  %% Aliased:
  %%    File
  _16 = succeeded:body File
  br _16, ^16, ^1

16:
  %% guard_SUITE.erl:2113
  %% Aliased:
  %%    _2, 
  %%    File
  _8 = call (`file`:`write_file`/2), File, _2

  %% Aliased:
  %%    _8
  _17 = succeeded:body _8
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _22 = bif:'=:=' _8, `ok`
  br _22, ^21, ^19

21:
  %% guard_SUITE.erl:2114
  %% Aliased:
  %%    File
  _9 = call (`test_lib`:`smoke_disasm`/1), File

  %% Aliased:
  %%    _9
  _20 = succeeded:body _9
  br _20, ^20, ^1

20:
  %% Aliased:
  %%    _9
  ret _9

19:
  %% guard_SUITE.erl:2113
  %% Aliased:
  %%    _8
  _10 = match_fail `badmatch`, _8

  %% Unique:
  %%    _10
  _23 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% guard_SUITE.erl:2116
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`literals`() {
0:
  %% Result type:
  %%    nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  ret `[42,3.14,-3,32982724987789283473473838474,[],xxxx,
  {a,b,c},
  [a,list],
  <<1,2,3>>,
  <<0,21,0:1>>]`
}

%% guard_SUITE.erl:2128
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`type_tests`() {
0:
  %% Result type:
  %%    nonempty_list(atom())
  ret `[is_boolean,is_integer,is_float,is_number,is_atom,is_list,is_tuple,is_pid,
  is_reference,is_port,is_binary,is_bitstring,is_function,is_map]`
}

%% guard_SUITE.erl:2144
%% Counter = 283
%% bs_ensure_opt: true
function `guard_SUITE`:`basic_andalso_orelse`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _147 = bif:is_list _0
  br _147, ^147, ^146

147:
  %% guard_SUITE.erl:2145
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  T = call (`id`/1), `{type,integers,23,42}`

  %% Aliased:
  %%    T
  _148 = succeeded:body T
  br _148, ^148, ^1

148:
  %% guard_SUITE.erl:2147
  %% Argument types:
  %%    T => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    T
  _3 = bif:element `1`, T

  %% Aliased:
  %%    _3
  _152 = succeeded:guard _3
  br _152, ^152, ^150

152:
  %% guard_SUITE.erl:2147
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _69 = bif:'=:=' _3, `type`
  br _69, ^278, ^150

278:
  %% guard_SUITE.erl:2147
  %% Argument types:
  %%    T => {any(), ...}
  %% Aliased:
  %%    T
  _5 = bif:tuple_size T

  %% guard_SUITE.erl:2147
  %% Argument types:
  %%    _5 => 1..16777215
  %% Unique:
  %%    _5
  _71 = bif:'=:=' _5, `4`
  br _71, ^153, ^150

153:
  %% guard_SUITE.erl:2148
  %% Argument types:
  %%    T => {any(), any(), any(), any()}
  %% Aliased:
  %%    T
  _111 = get_tuple_element T, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _163 = bif:'=:=' _111, `integers`
  br _163, ^165, ^150

165:
  %% guard_SUITE.erl:2149
  %% Argument types:
  %%    T => {any(), 'integers', any(), any()}
  %% Aliased:
  %%    T
  _10 = get_tuple_element T, `2`

  %% guard_SUITE.erl:2149
  %% Argument types:
  %%    T => {any(), 'integers', any(), any()}
  %% Aliased:
  %%    T
  _9 = get_tuple_element T, `3`

  %% guard_SUITE.erl:2149
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9, 
  %%    _10
  _114 = bif:'+' _10, _9

  %% Unique:
  %%    _114
  _166 = succeeded:body _114
  br _166, ^166, ^1

166:
  br ^149

150:
  br ^149

149:
  _11 = phi { `error`, ^150 }, { _114, ^166 }

  %% Argument types:
  %%    _11 => 'error' | number()
  %% Unique:
  %%    _11
  _271 = bif:'=:=' _11, `65`
  br _271, ^270, ^168

270:
  %% guard_SUITE.erl:2153
  %% Argument types:
  %%    T => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    T
  _14 = bif:element `1`, T

  %% Aliased:
  %%    _14
  _172 = succeeded:guard _14
  br _172, ^172, ^170

172:
  %% guard_SUITE.erl:2153
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _74 = bif:'=:=' _14, `type`
  br _74, ^281, ^170

281:
  %% guard_SUITE.erl:2153
  %% Argument types:
  %%    T => {any(), ...}
  %% Aliased:
  %%    T
  _16 = bif:tuple_size T

  %% guard_SUITE.erl:2153
  %% Argument types:
  %%    _16 => 1..16777215
  %% Unique:
  %%    _16
  _76 = bif:'=:=' _16, `4`
  br _76, ^173, ^170

173:
  %% guard_SUITE.erl:2154
  %% Argument types:
  %%    T => {any(), any(), any(), any()}
  %% Aliased:
  %%    T
  _116 = get_tuple_element T, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _183 = bif:'=:=' _116, `integers`
  br _183, ^185, ^170

185:
  %% guard_SUITE.erl:2155
  %% Argument types:
  %%    T => {any(), 'integers', any(), any()}
  %% Aliased:
  %%    T
  _21 = get_tuple_element T, `2`

  %% guard_SUITE.erl:2155
  %% Argument types:
  %%    T => {any(), 'integers', any(), any()}
  %% Aliased:
  %%    T
  _20 = get_tuple_element T, `3`

  %% guard_SUITE.erl:2155
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20, 
  %%    _21
  _119 = bif:'+' _21, _20

  %% Unique:
  %%    _119
  _186 = succeeded:body _119
  br _186, ^169, ^1

169:
  %% Argument types:
  %%    _119 => number()
  %% Unique:
  %%    _119
  _268 = bif:'=:=' _119, `65`
  br _268, ^267, ^189

267:
  %% guard_SUITE.erl:2158
  %% Result type:
  %%    42
  _81 = call (`basic_rt`/1), `{type,integers,40,2}`

  %% Unique:
  %%    _81
  _190 = succeeded:body _81
  br _190, ^264, ^1

264:
  %% guard_SUITE.erl:2159
  %% Result type:
  %%    5.0
  _82 = call (`basic_rt`/1), `{vector,{3.0,4.0}}`

  %% Unique:
  %%    _82
  _193 = succeeded:body _82
  br _193, ^261, ^1

261:
  %% guard_SUITE.erl:2160
  %% Result type:
  %%    'error' | number()
  _83 = call (`basic_rt`/1), `['+',3,7]`

  %% Unique:
  %%    _83
  _196 = succeeded:body _83
  br _196, ^196, ^1

196:
  %% Argument types:
  %%    _83 => 'error' | number()
  %% Unique:
  %%    _83
  _259 = bif:'=:=' _83, `20`
  br _259, ^258, ^198

258:
  %% guard_SUITE.erl:2161
  %% Result type:
  %%    'error' | {''Set'', 'a', 'b'}
  _84 = call (`basic_rt`/1), `{{'Set',a,b},{'Set',a,b}}`

  %% Unique:
  %%    _84
  _199 = succeeded:body _84
  br _199, ^199, ^1

199:
  %% Argument types:
  %%    _84 => 'error' | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _84
  _256 = bif:'=:=' _84, `{'Set',a,b}`
  br _256, ^256, ^201

256:
  %% guard_SUITE.erl:2162
  %% Result type:
  %%    number() | {''Set'', 'a', 'b'}
  _85 = call (`basic_rt`/1), `{klurf,4}`

  %% Unique:
  %%    _85
  _202 = succeeded:body _85
  br _202, ^202, ^1

202:
  %% Argument types:
  %%    _85 => number() | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _85
  _254 = bif:'=:=' _85, `12`
  br _254, ^253, ^204

253:
  %% guard_SUITE.erl:2164
  %% Result type:
  %%    'error'
  _86 = call (`basic_rt`/1), `{type,integers,40,2,3}`

  %% Unique:
  %%    _86
  _205 = succeeded:body _86
  br _205, ^250, ^1

250:
  %% guard_SUITE.erl:2165
  %% Result type:
  %%    'error'
  _87 = call (`basic_rt`/1), `{kalle,integers,40,2}`

  %% Unique:
  %%    _87
  _208 = succeeded:body _87
  br _208, ^247, ^1

247:
  %% guard_SUITE.erl:2166
  %% Result type:
  %%    'error'
  _88 = call (`basic_rt`/1), `{kalle,integers,40,2}`

  %% Unique:
  %%    _88
  _211 = succeeded:body _88
  br _211, ^244, ^1

244:
  %% guard_SUITE.erl:2167
  %% Result type:
  %%    'error' | {''Set'', 'a', 'b'}
  _89 = call (`basic_rt`/1), `{1,2}`

  %% Unique:
  %%    _89
  _214 = succeeded:body _89
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _89 => 'error' | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _89
  _242 = bif:'=:=' _89, `error`
  br _242, ^241, ^216

241:
  %% guard_SUITE.erl:2168
  %% Result type:
  %%    'error'
  _90 = call (`basic_rt`/1), `[]`

  %% Unique:
  %%    _90
  _217 = succeeded:body _90
  br _217, ^274, ^1

274:
  %% guard_SUITE.erl:2179
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-basic_andalso_orelse/1-fun-0-'`/2) => fun((_, _) -> 'ok')
  _99 = call (`'-basic_andalso_orelse/1-fun-0-'`/2), `{'Set',a,b}`, `{'Set',a,b}`

  %% Unique:
  %%    _99
  _220 = succeeded:body _99
  br _220, ^275, ^1

275:
  %% guard_SUITE.erl:2183
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-basic_andalso_orelse/1-fun-1-'`/0) => fun(() -> 'error')
  _103 = call (`'-basic_andalso_orelse/1-fun-1-'`/0)

  %% Unique:
  %%    _103
  _223 = succeeded:body _103
  br _223, ^276, ^1

276:
  %% guard_SUITE.erl:2190
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-basic_andalso_orelse/1-fun-2-'`/1) => fun((_) -> 'error')
  _109 = call (`'-basic_andalso_orelse/1-fun-2-'`/1), `[]`

  %% Unique:
  %%    _109
  _226 = succeeded:body _109
  br _226, ^229, ^1

229:
  %% Result type:
  %%    'ok'
  ret `ok`

216:
  %% guard_SUITE.erl:2167
  _132 = match_fail `badmatch`, `{'Set',a,b}`

  %% Unique:
  %%    _132
  _243 = succeeded:body _132
  br ^1

204:
  %% guard_SUITE.erl:2162
  %% Unique:
  %%    _85
  _136 = match_fail `badmatch`, _85

  %% Unique:
  %%    _136
  _255 = succeeded:body _136
  br ^1

201:
  %% guard_SUITE.erl:2161
  _137 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _137
  _257 = succeeded:body _137
  br ^1

198:
  %% guard_SUITE.erl:2160
  %% Unique:
  %%    _83
  _138 = match_fail `badmatch`, _83

  %% Unique:
  %%    _138
  _260 = succeeded:body _138
  br ^1

189:
  %% guard_SUITE.erl:2152
  %% Unique:
  %%    _119
  _141 = match_fail `badmatch`, _119

  %% Unique:
  %%    _141
  _269 = succeeded:body _141
  br ^1

170:
  %% guard_SUITE.erl:2152
  _120 = match_fail `case_clause`, `[]`

  %% Unique:
  %%    _120
  _187 = succeeded:body _120
  br ^1

168:
  %% guard_SUITE.erl:2146
  %% Unique:
  %%    _11
  _142 = match_fail `badmatch`, _11

  %% Unique:
  %%    _142
  _272 = succeeded:body _142
  br ^1

146:
  %% guard_SUITE.erl:2144
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-basic_andalso_orelse/1-',1}}
  _143 = match_fail `function_clause`, _0

  %% Unique:
  %%    _143
  _273 = succeeded:body _143
  br ^1

1:
  _144 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _144
}

%% guard_SUITE.erl:2199
%% Counter = 301
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(''+'' | 3..7) | {'klurf', 4} | {'vector', {3.0, 4.0}} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
function `guard_SUITE`:`basic_rt`(_0) {
0:
  %% guard_SUITE.erl:2199
  %% Argument types:
  %%    _0 => list(''+'' | 3..7) | {'klurf', 4} | {'vector', {3.0, 4.0}} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _80 = bif:is_tuple _0
  br _80, ^293, ^128

293:
  %% guard_SUITE.erl:2199
  %% Argument types:
  %%    _0 => {'klurf', 4} | {'vector', {3.0, 4.0}} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _3 = bif:tuple_size _0

  %% guard_SUITE.erl:2199
  %% Argument types:
  %%    _3 => 2..16777215
  %% Unique:
  %%    _3
  _82 = bif:'=:=' _3, `4`
  br _82, ^279, ^296

279:
  %% guard_SUITE.erl:2199
  %% Argument types:
  %%    _0 => {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2}
  %% Unique:
  %%    _0
  _5 = get_tuple_element _0, `0`

  %% guard_SUITE.erl:2199
  %% Argument types:
  %%    _5 => 'kalle' | 'type'
  %% Unique:
  %%    _5
  _84 = bif:'=:=' _5, `type`
  br _84, ^149, ^296

149:
  %% Result type:
  %%    42
  ret `42`

296:
  %% guard_SUITE.erl:2202
  %% Argument types:
  %%    _0 => {'klurf', 4} | {'vector', {3.0, 4.0}} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _15 = bif:tuple_size _0

  %% guard_SUITE.erl:2202
  %% Argument types:
  %%    _15 => 2..16777215
  %% Unique:
  %%    _15
  _91 = bif:'=:=' _15, `2`
  br _91, ^263, ^128

263:
  %% guard_SUITE.erl:2202
  %% Argument types:
  %%    _0 => {'klurf', 4} | {'vector', {3.0, 4.0}} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}}
  %% Unique:
  %%    _0
  _16 = get_tuple_element _0, `0`

  %% guard_SUITE.erl:2202
  %% Argument types:
  %%    _16 => 'klurf' | 'vector' | 1 | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _16
  _101 = bif:'=:=' _16, `vector`
  br _101, ^172, ^128

172:
  %% Result type:
  %%    5.0
  ret `5.0`

128:
  %% Unique:
  %%    _0
  _189 = is_nonempty_list _0
  br _189, ^189, ^180

189:
  %% Argument types:
  %%    _0 => nonempty_list(''+'' | 3..7)
  %% Unique:
  %%    _0
  _63 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(''+'' | 3..7)
  %% Unique:
  %%    _0
  _62 = get_tl _0

  %% Argument types:
  %%    _63 => ''+'' | 3..7
  %% Unique:
  %%    _63
  _188 = bif:'=:=' _63, `'+'`
  br _188, ^187, ^179

187:
  %% Unique:
  %%    _62
  _186 = is_nonempty_list _62
  br _186, ^186, ^179

186:
  %% Argument types:
  %%    _62 => nonempty_list(''+'' | 3..7)
  %% Unique:
  %%    _62
  _65 = get_hd _62

  %% Argument types:
  %%    _62 => nonempty_list(''+'' | 3..7)
  %% Unique:
  %%    _62
  _64 = get_tl _62

  %% Unique:
  %%    _64
  _185 = is_nonempty_list _64
  br _185, ^185, ^179

185:
  %% Argument types:
  %%    _64 => nonempty_list(''+'' | 3..7)
  %% Unique:
  %%    _64
  _67 = get_hd _64

  %% Argument types:
  %%    _64 => nonempty_list(''+'' | 3..7)
  %% Unique:
  %%    _64
  _66 = get_tl _64

  %% Argument types:
  %%    _66 => list(''+'' | 3..7)
  %% Aliased:
  %%    _66
  _184 = bif:'=:=' _66, `[]`
  br _184, ^184, ^179

184:
  %% guard_SUITE.erl:2209
  %% Argument types:
  %%    _65 => ''+'' | 3..7
  %%    _67 => ''+'' | 3..7
  %% Aliased:
  %%    _67
  %% Unique:
  %%    _65
  _26 = bif:'+' _65, _67

  %% Unique:
  %%    _26
  _181 = succeeded:body _26
  br _181, ^181, ^1

181:
  %% guard_SUITE.erl:2209
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _26
  _27 = call (`id`/1), _26

  %% Aliased:
  %%    _27
  _182 = succeeded:body _27
  br _182, ^182, ^1

182:
  %% guard_SUITE.erl:2209
  %% Argument types:
  %%    _27 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _27
  _120 = bif:'*' _27, `2`

  %% Unique:
  %%    _120
  _183 = succeeded:body _120
  br _183, ^183, ^1

183:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _120
  ret _120

180:
  %% Argument types:
  %%    _0 => nil() | {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _216 = bif:is_tuple _0
  br _216, ^216, ^219

216:
  %% Argument types:
  %%    _0 => {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _217 = bif:tuple_size _0

  %% Argument types:
  %%    _217 => 2..16777215
  %% Unique:
  %%    _217
  _218 = bif:'=:=' _217, `2`
  br _218, ^215, ^179

215:
  %% Argument types:
  %%    _0 => {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}}
  %% Unique:
  %%    _0
  _69 = get_tuple_element _0, `0`

  %% guard_SUITE.erl:2210
  %% Argument types:
  %%    _69 => 'klurf' | 1 | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _69
  _29 = bif:size _69

  %% Unique:
  %%    _29
  _191 = succeeded:guard _29
  br _191, ^191, ^179

191:
  %% guard_SUITE.erl:2210
  %% Argument types:
  %%    _29 => integer()
  %% Unique:
  %%    _29
  _70 = bif:'=:=' _29, `3`
  br _70, ^257, ^179

257:
  %% Argument types:
  %%    _0 => {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}}
  %% Unique:
  %%    _0
  _68 = get_tuple_element _0, `1`

  %% guard_SUITE.erl:2211
  %% Argument types:
  %%    _68 => 2..4 | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _68
  _35 = bif:size _68

  %% Unique:
  %%    _35
  _197 = succeeded:guard _35
  br _197, ^252, ^179

252:
  %% guard_SUITE.erl:2211
  %% Argument types:
  %%    _35 => integer()
  %% Unique:
  %%    _35
  _72 = bif:'=:=' _35, `3`
  br _72, ^204, ^179

204:
  %% guard_SUITE.erl:2212
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _78 = call (`id`/1), `{'Set',a,b}`

  %% Aliased:
  %%    _78
  _205 = succeeded:body _78
  br _205, ^205, ^1

205:
  %% Argument types:
  %%    _78 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _78
  _208 = bif:'=:=' _78, `{'Set',a,b}`
  br _208, ^208, ^207

208:
  %% guard_SUITE.erl:2213
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _79 = call (`id`/1), `{'Set',a,b}`

  %% Aliased:
  %%    _79
  _209 = succeeded:body _79
  br _209, ^209, ^1

209:
  %% Argument types:
  %%    _79 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _79
  _212 = bif:'=:=' _79, `{'Set',a,b}`
  br _212, ^212, ^211

212:
  %% Result type:
  %%    {''Set'', 'a', 'b'}
  ret `{'Set',a,b}`

211:
  %% guard_SUITE.erl:2213
  %% Aliased:
  %%    _79
  _118 = match_fail `badmatch`, _79

  %% Unique:
  %%    _118
  _213 = succeeded:body _118
  br ^1

207:
  %% guard_SUITE.erl:2212
  %% Aliased:
  %%    _78
  _119 = match_fail `badmatch`, _78

  %% Unique:
  %%    _119
  _214 = succeeded:body _119
  br ^1

179:
  %% guard_SUITE.erl:2215
  %% Argument types:
  %%    _0 => nonempty_list(''+'' | 3..7) | {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _57 = bif:is_tuple _0
  br _57, ^299, ^219

299:
  %% guard_SUITE.erl:2215
  %% Argument types:
  %%    _0 => {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}} | {'kalle', 'integers', 40, 2} | {'type', 'integers', 40, 2, 3}
  %% Unique:
  %%    _0
  _44 = bif:tuple_size _0

  %% guard_SUITE.erl:2215
  %% Argument types:
  %%    _44 => 2..16777215
  %% Unique:
  %%    _44
  _59 = bif:'=:=' _44, `2`
  br _59, ^235, ^219

235:
  %% guard_SUITE.erl:2215
  %% Argument types:
  %%    _0 => {'klurf', 4} | {1, 2} | {{''Set'', 'a', 'b'}, {''Set'', 'a', 'b'}}
  %% Unique:
  %%    _0
  _45 = get_tuple_element _0, `0`

  %% guard_SUITE.erl:2215
  %% Argument types:
  %%    _45 => 'klurf' | 1 | {''Set'', 'a', 'b'}
  %% Unique:
  %%    _45
  _122 = bif:'=:=' _45, `klurf`
  br _122, ^232, ^219

232:
  %% guard_SUITE.erl:2216
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _50 = call (`id`/1), `4`

  %% Aliased:
  %%    _50
  _233 = succeeded:body _50
  br _233, ^233, ^1

233:
  %% guard_SUITE.erl:2216
  %% Argument types:
  %%    _50 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _50
  _125 = bif:'*' _50, `3`

  %% Unique:
  %%    _125
  _234 = succeeded:body _125
  br _234, ^234, ^1

234:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _125
  ret _125

1:
  _126 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _126

219:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2220
%% Counter = 65
%% bs_ensure_opt: true
function `guard_SUITE`:`traverse_dcd`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _28 = bif:is_list _0
  br _28, ^28, ^27

28:
  %% guard_SUITE.erl:2224
  %% Result type:
  %%    {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  _10 = call (`traverse_dcd`/3), `{cont,[{log_header,dcd_log,"1.0",a,b,c},
        {log_header,dcd_log,"2.0",a,b,c},
        {log_header,dcd_log,"0.0",a,b,c},
        blurf]}`, `log`, `funny`

  %% Unique:
  %%    _10
  _29 = succeeded:body _10
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    _10 => {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  %% Unique:
  %%    _10
  _62 = bif:'=:=' _10, `{cont,[{log_header,dcd_log,"0.0",a,b,c},blurf],log,funny}`
  br _62, ^62, ^31

62:
  %% guard_SUITE.erl:2226
  %% Result type:
  %%    {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  _11 = call (`traverse_dcd`/3), `{cont,[{log_header,dcd_log,"1.0"}]}`, `log`, `funny`

  %% Unique:
  %%    _11
  _32 = succeeded:body _11
  br _32, ^51, ^1

51:
  %% Argument types:
  %%    _11 => {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  %% Unique:
  %%    _11
  _14 = get_tuple_element _11, `1`

  %% Argument types:
  %%    _14 => list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})
  %% Aliased:
  %%    _14
  _35 = bif:'=:=' _14, `[{log_header,dcd_log,"1.0"}]`
  br _35, ^35, ^34

35:
  %% guard_SUITE.erl:2228
  %% Result type:
  %%    {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  _16 = call (`traverse_dcd`/3), `{cont,[{a,tuple}]}`, `log`, `funny`

  %% Unique:
  %%    _16
  _36 = succeeded:body _16
  br _36, ^40, ^1

40:
  %% Argument types:
  %%    _16 => {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  %% Unique:
  %%    _16
  _19 = get_tuple_element _16, `1`

  %% Argument types:
  %%    _19 => list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})
  %% Aliased:
  %%    _19
  _39 = bif:'=:=' _19, `[{a,tuple}]`
  br _39, ^39, ^38

39:
  %% Result type:
  %%    'ok'
  ret `ok`

38:
  %% guard_SUITE.erl:2228
  %% Unique:
  %%    _16
  _21 = match_fail `badmatch`, _16

  %% Unique:
  %%    _21
  _50 = succeeded:body _21
  br ^1

34:
  %% guard_SUITE.erl:2226
  %% Unique:
  %%    _11
  _22 = match_fail `badmatch`, _11

  %% Unique:
  %%    _22
  _61 = succeeded:body _22
  br ^1

31:
  %% guard_SUITE.erl:2223
  %% Unique:
  %%    _10
  _23 = match_fail `badmatch`, _10

  %% Unique:
  %%    _23
  _63 = succeeded:body _23
  br ^1

27:
  %% guard_SUITE.erl:2220
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-traverse_dcd/1-',1}}
  _24 = match_fail `function_clause`, _0

  %% Unique:
  %%    _24
  _64 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% guard_SUITE.erl:2238
%% Counter = 135
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})}
%%    _1 =>
%%     'log'
%%    _2 =>
%%     'funny'
function `guard_SUITE`:`traverse_dcd`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _0 => {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})}
  %% Unique:
  %%    _0
  _31 = get_tuple_element _0, `1`

  %% Aliased:
  %%    _31
  _102 = is_nonempty_list _31
  br _102, ^102, ^67

102:
  %% Argument types:
  %%    _31 => nonempty_list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})
  %% Aliased:
  %%    _31
  _34 = get_hd _31

  %% Argument types:
  %%    _31 => nonempty_list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})
  %% Aliased:
  %%    _31
  _33 = get_tl _31

  %% guard_SUITE.erl:2239
  %% Argument types:
  %%    _34 => 'blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}
  %% Aliased:
  %%    _34
  _35 = bif:is_tuple _34
  br _35, ^130, ^67

130:
  %% guard_SUITE.erl:2239
  %% Argument types:
  %%    _34 => {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}
  %% Aliased:
  %%    _34
  _5 = bif:tuple_size _34

  %% guard_SUITE.erl:2239
  %% Argument types:
  %%    _5 => 2..16777215
  %% Unique:
  %%    _5
  _37 = bif:'=:=' _5, `6`
  br _37, ^109, ^67

109:
  %% guard_SUITE.erl:2242
  %% Argument types:
  %%    _34 => {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}
  %% Aliased:
  %%    _34
  _19 = get_tuple_element _34, `2`

  %% guard_SUITE.erl:2242
  %% Argument types:
  %%    _19 => nonempty_list(46..50)
  %% Aliased:
  %%    _19
  _57 = bif:'>=' _19, `"1.0"`
  br _57, ^100, ^67

100:
  %% Argument types:
  %%    _33 => list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})
  %% Unique:
  %%    _33
  _48 = put_tuple `cont`, _33

  %% guard_SUITE.erl:2243
  %% Result type:
  %%    {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  %% Unique:
  %%    _48
  _61 = call (`traverse_dcd`/3), _48, _1, _2

  %% Unique:
  %%    _61
  _101 = succeeded:body _61
  br _101, ^101, ^1

101:
  %% Result type:
  %%    {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  %% Unique:
  %%    _61
  ret _61

1:
  _64 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _64

67:
  %% Argument types:
  %%    _31 => list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'})
  %% Aliased:
  %%    _31
  _62 = put_tuple `cont`, _31, `log`, `funny`
  %% Result type:
  %%    {'cont', list('blurf' | {'a', 'tuple'} | {'log_header', 'dcd_log', nonempty_list(46..49)} | {'log_header', 'dcd_log', nonempty_list(46..50), 'a', 'b', 'c'}), 'log', 'funny'}
  %% Unique:
  %%    _62
  ret _62
}

%% guard_SUITE.erl:2248
%% Counter = 80
%% bs_ensure_opt: true
function `guard_SUITE`:`check_qlc_hrl`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _36 = bif:is_list _0
  br _36, ^36, ^35

36:
  %% guard_SUITE.erl:2250
  %% Result type:
  %%    'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _16 = call (`cqlc`/4), `qlc`, `q`, `[{lc,1,2,3}]`, `{r1,false,dum}`

  %% Unique:
  %%    _16
  _37 = succeeded:body _16
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _16 => 'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _16
  _77 = bif:'=:=' _16, `foo`
  br _77, ^76, ^39

76:
  %% guard_SUITE.erl:2251
  %% Result type:
  %%    'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _17 = call (`cqlc`/4), `qlc`, `q`, `[{lc,1,2,3},b]`, `{r1,false,dum}`

  %% Unique:
  %%    _17
  _40 = succeeded:body _17
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    _17 => 'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _17
  _74 = bif:'=:=' _17, `foo`
  br _74, ^73, ^42

73:
  %% guard_SUITE.erl:2252
  %% Result type:
  %%    {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _18 = call (`cqlc`/4), `qlc`, `q`, `[]`, `{r1,false,dum}`

  %% Unique:
  %%    _18
  _43 = succeeded:body _18
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _18 => {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _18
  _46 = bif:'=:=' _18, `{r1,false,dum}`
  br _46, ^46, ^45

46:
  %% guard_SUITE.erl:2253
  %% Result type:
  %%    {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _19 = call (`cqlc`/4), `qlc`, `blurf`, `[{lc,1,2,3},b]`, `{r1,false,dum}`

  %% Unique:
  %%    _19
  _47 = succeeded:body _19
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    _19 => {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _19
  _50 = bif:'=:=' _19, `{r1,false,dum}`
  br _50, ^50, ^49

50:
  %% guard_SUITE.erl:2254
  %% Result type:
  %%    {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _20 = call (`cqlc`/4), `q`, `q`, `[{lc,1,2,3},b]`, `{r1,false,dum}`

  %% Unique:
  %%    _20
  _51 = succeeded:body _20
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    _20 => {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _20
  _54 = bif:'=:=' _20, `{r1,false,dum}`
  br _54, ^54, ^53

54:
  %% guard_SUITE.erl:2255
  %% Result type:
  %%    'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _21 = call (`cqlc`/4), `qlc`, `q`, `[{lc,1,2,3},b,c]`, `{r1,false,dum}`

  %% Unique:
  %%    _21
  _55 = succeeded:body _21
  br _55, ^55, ^1

55:
  %% Argument types:
  %%    _21 => 'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _21
  _58 = bif:'=:=' _21, `{r1,false,dum}`
  br _58, ^58, ^57

58:
  %% guard_SUITE.erl:2256
  %% Result type:
  %%    'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _22 = call (`cqlc`/4), `qlc`, `q`, `[a,b]`, `{r1,false,dum}`

  %% Unique:
  %%    _22
  _59 = succeeded:body _22
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    _22 => 'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _22
  _62 = bif:'=:=' _22, `{r1,false,dum}`
  br _62, ^62, ^61

62:
  %% guard_SUITE.erl:2257
  %% Result type:
  %%    'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  _23 = call (`cqlc`/4), `qlc`, `q`, `[{lc,1,2,3},b]`, `{r1,true,kalle}`

  %% Unique:
  %%    _23
  _63 = succeeded:body _23
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    _23 => 'foo' | {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _23
  _66 = bif:'=:=' _23, `{r1,true,kalle}`
  br _66, ^66, ^65

66:
  %% Result type:
  %%    'ok'
  ret `ok`

65:
  %% guard_SUITE.erl:2257
  %% Unique:
  %%    _23
  _24 = match_fail `badmatch`, _23

  %% Unique:
  %%    _24
  _67 = succeeded:body _24
  br ^1

61:
  %% guard_SUITE.erl:2256
  %% Unique:
  %%    _22
  _25 = match_fail `badmatch`, _22

  %% Unique:
  %%    _25
  _68 = succeeded:body _25
  br ^1

57:
  %% guard_SUITE.erl:2255
  %% Unique:
  %%    _21
  _26 = match_fail `badmatch`, _21

  %% Unique:
  %%    _26
  _69 = succeeded:body _26
  br ^1

53:
  %% guard_SUITE.erl:2254
  %% Unique:
  %%    _20
  _27 = match_fail `badmatch`, _20

  %% Unique:
  %%    _27
  _70 = succeeded:body _27
  br ^1

49:
  %% guard_SUITE.erl:2253
  %% Unique:
  %%    _19
  _28 = match_fail `badmatch`, _19

  %% Unique:
  %%    _28
  _71 = succeeded:body _28
  br ^1

45:
  %% guard_SUITE.erl:2252
  %% Unique:
  %%    _18
  _29 = match_fail `badmatch`, _18

  %% Unique:
  %%    _29
  _72 = succeeded:body _29
  br ^1

42:
  %% guard_SUITE.erl:2251
  %% Unique:
  %%    _17
  _30 = match_fail `badmatch`, _17

  %% Unique:
  %%    _30
  _75 = succeeded:body _30
  br ^1

39:
  %% guard_SUITE.erl:2250
  %% Unique:
  %%    _16
  _31 = match_fail `badmatch`, _16

  %% Unique:
  %%    _31
  _78 = succeeded:body _31
  br ^1

35:
  %% guard_SUITE.erl:2248
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-check_qlc_hrl/1-',1}}
  _32 = match_fail `function_clause`, _0

  %% Unique:
  %%    _32
  _79 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% guard_SUITE.erl:2261
%% Counter = 100
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'q' | 'qlc'
%%    _1 =>
%%     'blurf' | 'q'
%%    _2 =>
%%     list('a' | 'b' | 'c' | {'lc', 1, 2, 3})
%%    _3 =>
%%     {'r1', 'false' | 'true', 'dum' | 'kalle'}
function `guard_SUITE`:`cqlc`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:2262
  %% Argument types:
  %%    _2 => list('a' | 'b' | 'c' | {'lc', 1, 2, 3})
  %% Unique:
  %%    _2
  Arity = bif:length _2

  %% Unique:
  %%    _2
  _71 = is_nonempty_list _2
  br _71, ^71, ^47

71:
  %% Argument types:
  %%    _2 => nonempty_list('a' | 'b' | 'c' | {'lc', 1, 2, 3})
  %% Unique:
  %%    _2
  _34 = get_hd _2

  %% Argument types:
  %%    _34 => 'a' | 'b' | 'c' | {'lc', 1, 2, 3}
  %% Unique:
  %%    _34
  _68 = bif:is_tuple _34
  br _68, ^65, ^47

65:
  %% guard_SUITE.erl:2264
  %% Argument types:
  %%    _0 => 'q' | 'qlc'
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `qlc`
  br _5, ^95, ^47

95:
  %% guard_SUITE.erl:2264
  %% Argument types:
  %%    _1 => 'blurf' | 'q'
  %% Unique:
  %%    _1
  _6 = bif:'=:=' _1, `q`
  br _6, ^96, ^47

96:
  %% guard_SUITE.erl:2265
  %% Argument types:
  %%    Arity => 0..288230376151711743
  %% Unique:
  %%    Arity
  _7 = bif:'<' Arity, `3`
  br _7, ^99, ^47

99:
  %% guard_SUITE.erl:2266
  %% Argument types:
  %%    _3 => {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _3
  _16 = get_tuple_element _3, `1`
  br _16, ^47, ^64

64:
  %% Result type:
  %%    'foo'
  ret `foo`

47:
  %% Result type:
  %%    {'r1', 'false' | 'true', 'dum' | 'kalle'}
  %% Unique:
  %%    _3
  ret _3
}

%% guard_SUITE.erl:2273
%% Counter = 275
%% bs_ensure_opt: true
function `guard_SUITE`:`andalso_semi`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _55 = bif:is_list _0
  br _55, ^55, ^54

55:
  %% guard_SUITE.erl:2274
  %% Result type:
  %%    'ok'
  _19 = call (`andalso_semi_foo`/1), `0`

  %% Unique:
  %%    _19
  _56 = succeeded:body _19
  br _56, ^161, ^1

161:
  %% guard_SUITE.erl:2275
  %% Result type:
  %%    'ok'
  _20 = call (`andalso_semi_foo`/1), `1`

  %% Unique:
  %%    _20
  _59 = succeeded:body _20
  br _59, ^264, ^1

264:
  br ^270

270:
  _65 = new_try_tag `'catch'`
  br _65, ^63, ^64

63:
  %% guard_SUITE.erl:2276
  %% Result type:
  %%    none()
  _27 = call (`andalso_semi_foo`/1), `2`

  %% Aliased:
  %%    _27
  _67 = succeeded:body _27
  br ^64

64:
  %% Unique:
  %%    _65
  _70 = landingpad `'catch'`, _65

  %% Aliased:
  %%    _70
  _68 = extract _70, `0`
  br ^62

62:
  %% Aliased:
  %%    _68
  %% Unique:
  %%    _65
  _3 = catch_end _65, _68

  %% guard_SUITE.erl:2276
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _3
  _28 = call (`fc`/1), _3

  %% Unique:
  %%    _28
  _72 = succeeded:body _28
  br _72, ^72, ^1

72:
  %% guard_SUITE.erl:2278
  %% Result type:
  %%    'ok'
  _21 = call (`andalso_semi_bar`/1), `[a,b,c]`

  %% Unique:
  %%    _21
  _73 = succeeded:body _21
  br _73, ^155, ^1

155:
  %% guard_SUITE.erl:2279
  %% Result type:
  %%    'ok'
  _22 = call (`andalso_semi_bar`/1), `1`

  %% Unique:
  %%    _22
  _76 = succeeded:body _22
  br _76, ^265, ^1

265:
  br ^271

271:
  _82 = new_try_tag `'catch'`
  br _82, ^80, ^81

80:
  %% guard_SUITE.erl:2280
  %% Result type:
  %%    'ok'
  _30 = call (`andalso_semi_bar`/1), `[a,b]`

  %% Unique:
  %%    _30
  _84 = succeeded:body _30
  br _84, ^84, ^81

84:
  br ^79

81:
  %% Unique:
  %%    _82
  _87 = landingpad `'catch'`, _82

  %% Aliased:
  %%    _87
  _85 = extract _87, `0`
  br ^79

79:
  _88 = phi { _85, ^81 }, { `ok`, ^84 }

  %% Aliased:
  %%    _88
  %% Unique:
  %%    _82
  _6 = catch_end _82, _88

  %% guard_SUITE.erl:2280
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _6
  _31 = call (`fc`/1), _6

  %% Unique:
  %%    _31
  _89 = succeeded:body _31
  br _89, ^89, ^1

89:
  %% Result type:
  %%    'ok'
  _7 = make_fun (`andalso_semi`/1)

  %% guard_SUITE.erl:2282
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _7
  _23 = call (`andalso_semi_dispatch`/2), `name`, _7

  %% Unique:
  %%    _23
  _90 = succeeded:body _23
  br _90, ^149, ^1

149:
  %% guard_SUITE.erl:2283
  %% Result type:
  %%    'ok'
  _24 = call (`andalso_semi_dispatch`/2), `name`, `fun guard_SUITE:andalso_semi/1`

  %% Unique:
  %%    _24
  _93 = succeeded:body _24
  br _93, ^146, ^1

146:
  %% guard_SUITE.erl:2284
  %% Result type:
  %%    'ok'
  _25 = call (`andalso_semi_dispatch`/2), `name`, `{guard_SUITE,andalso_semi,1}`

  %% Unique:
  %%    _25
  _96 = succeeded:body _25
  br _96, ^143, ^1

143:
  %% Result type:
  %%    'ok'
  _12 = make_fun (`andalso_semi`/1)
  _102 = new_try_tag `'catch'`
  br _102, ^168, ^101

168:
  %% guard_SUITE.erl:2285
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _12
  _33 = call (`andalso_semi_dispatch`/2), `42`, _12

  %% Aliased:
  %%    _33
  _104 = succeeded:body _33
  br ^101

101:
  %% Unique:
  %%    _102
  _107 = landingpad `'catch'`, _102

  %% Aliased:
  %%    _107
  _105 = extract _107, `0`
  br ^99

99:
  %% Aliased:
  %%    _105
  %% Unique:
  %%    _102
  _13 = catch_end _102, _105

  %% guard_SUITE.erl:2285
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _13
  _34 = call (`fc`/1), _13

  %% Unique:
  %%    _34
  _109 = succeeded:body _34
  br _109, ^267, ^1

267:
  br ^272

272:
  _113 = new_try_tag `'catch'`
  br _113, ^111, ^112

111:
  %% guard_SUITE.erl:2286
  %% Result type:
  %%    none()
  _36 = call (`andalso_semi_dispatch`/2), `name`, `not_fun`

  %% Aliased:
  %%    _36
  _115 = succeeded:body _36
  br ^112

112:
  %% Unique:
  %%    _113
  _118 = landingpad `'catch'`, _113

  %% Aliased:
  %%    _118
  _116 = extract _118, `0`
  br ^110

110:
  %% Aliased:
  %%    _116
  %% Unique:
  %%    _113
  _14 = catch_end _113, _116

  %% guard_SUITE.erl:2286
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _14
  _37 = call (`fc`/1), _14

  %% Unique:
  %%    _37
  _120 = succeeded:body _37
  br _120, ^120, ^1

120:
  %% Result type:
  %%    'ok'
  _15 = make_fun (`andalso_semi_dispatch`/2)
  _124 = new_try_tag `'catch'`
  br _124, ^171, ^123

171:
  %% guard_SUITE.erl:2287
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _15
  _39 = call (`andalso_semi_dispatch`/2), `name`, _15

  %% Aliased:
  %%    _39
  _126 = succeeded:body _39
  br ^123

123:
  %% Unique:
  %%    _124
  _129 = landingpad `'catch'`, _124

  %% Aliased:
  %%    _129
  _127 = extract _129, `0`
  br ^121

121:
  %% Aliased:
  %%    _127
  %% Unique:
  %%    _124
  _16 = catch_end _124, _127

  %% guard_SUITE.erl:2287
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _16
  _40 = call (`fc`/1), _16

  %% Unique:
  %%    _40
  _131 = succeeded:body _40
  br _131, ^269, ^1

269:
  br ^273

273:
  _135 = new_try_tag `'catch'`
  br _135, ^133, ^134

133:
  %% guard_SUITE.erl:2288
  %% Result type:
  %%    none()
  _42 = call (`andalso_semi_dispatch`/2), `42`, `{a,b}`

  %% Aliased:
  %%    _42
  _137 = succeeded:body _42
  br ^134

134:
  %% Unique:
  %%    _135
  _140 = landingpad `'catch'`, _135

  %% Aliased:
  %%    _140
  _138 = extract _140, `0`
  br ^132

132:
  %% Aliased:
  %%    _138
  %% Unique:
  %%    _135
  _17 = catch_end _135, _138

  %% guard_SUITE.erl:2288
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _17
  _43 = call (`fc`/1), _17

  %% Unique:
  %%    _43
  _142 = succeeded:body _43
  br _142, ^274, ^1

274:
  ret _43

54:
  %% guard_SUITE.erl:2273
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-andalso_semi/1-',1}}
  _51 = match_fail `function_clause`, _0

  %% Unique:
  %%    _51
  _164 = succeeded:body _51
  br ^1

1:
  _52 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _52
}

%% guard_SUITE.erl:2292
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..2
function `guard_SUITE`:`andalso_semi_foo`(_0) {
0:
  %% Argument types:
  %%    
  switch _0, ^17, [
    { `0`, ^25 },
    { `1`, ^25 }
  ]

25:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% guard_SUITE.erl:2292
  %% Anno: #{inlined => {'-inlined-andalso_semi_foo/1-',1}}
  _14 = match_fail `function_clause`, `2`

  %% Unique:
  %%    _14
  _26 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:2295
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('a' | 'b' | 'c') | 1
function `guard_SUITE`:`andalso_semi_bar`(_0) {
0:
  %% guard_SUITE.erl:2295
  %% Unique:
  %%    _0
  %% Anno: #{was_bif_is_list => true}
  _8 = is_nonempty_list _0
  br _8, ^32, ^38

32:
  %% guard_SUITE.erl:2295
  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b' | 'c')
  %% Unique:
  %%    _0
  _2 = bif:length _0

  %% guard_SUITE.erl:2295
  %% Argument types:
  %%    _2 => 1..288230376151711743
  %% Unique:
  %%    _2
  _12 = bif:'=:=' _2, `3`
  br _12, ^27, ^38

38:
  %% guard_SUITE.erl:2295
  %% Argument types:
  %%    _0 => nonempty_list('a' | 'b' | 'c') | 1
  %% Unique:
  %%    _0
  _6 = bif:'=:=' _0, `1`
  br _6, ^27, ^18

27:
  %% Result type:
  %%    'ok'
  ret `ok`

18:
  %% guard_SUITE.erl:2295
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-andalso_semi_bar/1-',1}}
  _15 = match_fail `function_clause`, _0

  %% Unique:
  %%    _15
  _28 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% guard_SUITE.erl:2298
%% Counter = 65
%% bs_ensure_opt: true
function `guard_SUITE`:`andalso_semi_dispatch`(_0, _1) {
0:
  %% guard_SUITE.erl:2299
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:is_atom _0
  br _13, ^39, ^32

39:
  %% guard_SUITE.erl:2299
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _22 = bif:is_function _1, `1`
  br _22, ^48, ^62

62:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _64 = bif:is_tuple _1
  br _64, ^63, ^32

63:
  %% guard_SUITE.erl:2300
  %% Argument types:
  %%    _1 => {...}
  %% Aliased:
  %%    _1
  _7 = bif:tuple_size _1

  %% guard_SUITE.erl:2300
  %% Argument types:
  %%    _7 => 0..16777215
  %% Unique:
  %%    _7
  _26 = bif:'=:=' _7, `3`
  br _26, ^48, ^32

48:
  %% Result type:
  %%    'ok'
  ret `ok`

32:
  %% guard_SUITE.erl:2298
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-andalso_semi_dispatch/2-',2}}
  _29 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _29
  _49 = succeeded:body _29
  br ^1

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% guard_SUITE.erl:2303
%% Counter = 123
%% bs_ensure_opt: true
function `guard_SUITE`:`t_tuple_size`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _31 = bif:is_list _0
  br _31, ^31, ^30

31:
  %% guard_SUITE.erl:2304
  %% Result type:
  %%    10
  _9 = call (`do_tuple_size`/1), `{1,2,3,4}`

  %% Unique:
  %%    _9
  _32 = succeeded:body _9
  br _32, ^119, ^1

119:
  br ^121

121:
  _38 = new_try_tag `'catch'`
  br _38, ^36, ^37

36:
  %% guard_SUITE.erl:2305
  %% Result type:
  %%    none()
  _15 = call (`do_tuple_size`/1), `{1,2,3}`

  %% Aliased:
  %%    _15
  _40 = succeeded:body _15
  br ^37

37:
  %% Unique:
  %%    _38
  _43 = landingpad `'catch'`, _38

  %% Aliased:
  %%    _43
  _41 = extract _43, `0`
  br ^35

35:
  %% Aliased:
  %%    _41
  %% Unique:
  %%    _38
  _2 = catch_end _38, _41

  %% guard_SUITE.erl:2305
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2
  _16 = call (`fc`/1), _2

  %% Unique:
  %%    _16
  _45 = succeeded:body _16
  br _45, ^120, ^1

120:
  br ^122

122:
  _49 = new_try_tag `'catch'`
  br _49, ^47, ^48

47:
  %% guard_SUITE.erl:2306
  %% Result type:
  %%    none()
  _18 = call (`do_tuple_size`/1), `42`

  %% Aliased:
  %%    _18
  _51 = succeeded:body _18
  br ^48

48:
  %% Unique:
  %%    _49
  _54 = landingpad `'catch'`, _49

  %% Aliased:
  %%    _54
  _52 = extract _54, `0`
  br ^46

46:
  %% Aliased:
  %%    _52
  %% Unique:
  %%    _49
  _3 = catch_end _49, _52

  %% guard_SUITE.erl:2306
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _3
  _19 = call (`fc`/1), _3

  %% Unique:
  %%    _19
  _56 = succeeded:body _19
  br _56, ^56, ^1

56:
  %% guard_SUITE.erl:2308
  %% Result type:
  %%    'error'
  _10 = call (`ludicrous_tuple_size`/1), `{a,b,c}`

  %% Unique:
  %%    _10
  _57 = succeeded:body _10
  br _57, ^80, ^1

80:
  %% guard_SUITE.erl:2309
  %% Result type:
  %%    'error'
  _11 = call (`ludicrous_tuple_size`/1), `[a,b,c]`

  %% Unique:
  %%    _11
  _60 = succeeded:body _11
  br _60, ^77, ^1

77:
  %% guard_SUITE.erl:2311
  %% Result type:
  %%    {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  _20 = call (`good_ip`/1), `{1,2,3,4}`

  %% Aliased:
  %%    _20
  _63 = succeeded:body _20
  br _63, ^63, ^1

63:
  %% guard_SUITE.erl:2312
  %% Result type:
  %%    {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  _21 = call (`good_ip`/1), `{1,2,3,4,5,6,7,8}`

  %% Aliased:
  %%    _21
  _64 = succeeded:body _21
  br _64, ^64, ^1

64:
  %% guard_SUITE.erl:2313
  %% Result type:
  %%    'error'
  _12 = call (`validate_ip`/1), `{42,11}`

  %% Unique:
  %%    _12
  _65 = succeeded:body _12
  br _65, ^74, ^1

74:
  %% guard_SUITE.erl:2314
  %% Result type:
  %%    'error'
  _13 = call (`validate_ip`/1), `atom`

  %% Unique:
  %%    _13
  _68 = succeeded:body _13
  br _68, ^71, ^1

71:
  %% Result type:
  %%    'ok'
  ret `ok`

30:
  %% guard_SUITE.erl:2303
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-t_tuple_size/1-',1}}
  _27 = match_fail `function_clause`, _0

  %% Unique:
  %%    _27
  _86 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% guard_SUITE.erl:2318
%% Counter = 34
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42 | {1, 2, 3} | {1, 2, 3, 4}
function `guard_SUITE`:`do_tuple_size`(_0) {
0:
  %% Argument types:
  %%    _0 => 42 | {1, 2, 3} | {1, 2, 3, 4}
  %% Unique:
  %%    _0
  _33 = bif:is_tuple _0
  br _33, ^32, ^16

32:
  %% guard_SUITE.erl:2318
  %% Argument types:
  %%    _0 => {1, 2, 3} | {1, 2, 3, 4}
  %% Unique:
  %%    _0
  _1 = bif:tuple_size _0

  %% Argument types:
  %%    _1 => 3..16777215
  %% Unique:
  %%    _1
  _19 = bif:'=:=' _1, `4`
  br _19, ^24, ^16

24:
  %% Result type:
  %%    10
  ret `10`

16:
  %% guard_SUITE.erl:2318
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-do_tuple_size/1-',1}}
  _13 = match_fail `function_clause`, _0

  %% Unique:
  %%    _13
  _30 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% guard_SUITE.erl:2322
%% Counter = 52
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('a' | 'b' | 'c') | {'a', 'b', 'c'}
function `guard_SUITE`:`ludicrous_tuple_size`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2332
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
function `guard_SUITE`:`good_ip`(_0) {
0:
  %% guard_SUITE.erl:2333
  %% Result type:
  %%    'error' | {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %% Aliased:
  %%    _0
  _3 = call (`validate_ip`/1), _0

  %% Aliased:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  %% Argument types:
  %%    _3 => 'error' | {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %%    _0 => {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %% Aliased:
  %%    _0, 
  %%    _3
  _11 = bif:'=:=' _3, _0
  br _11, ^11, ^10

11:
  %% Result type:
  %%    {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %% Aliased:
  %%    _3
  ret _3

10:
  %% guard_SUITE.erl:2333
  %% Aliased:
  %%    _3
  _5 = match_fail `badmatch`, _3

  %% Unique:
  %%    _5
  _12 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% guard_SUITE.erl:2335
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | {42, 11} | {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
function `guard_SUITE`:`validate_ip`(_0) {
0:
  %% guard_SUITE.erl:2335
  %% Argument types:
  %%    _0 => 'atom' | {42, 11} | {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %% Aliased:
  %%    _0
  _10 = bif:is_tuple _0
  br _10, ^38, ^20

38:
  %% guard_SUITE.erl:2336
  %% Argument types:
  %%    _0 => {42, 11} | {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %% Aliased:
  %%    _0
  _3 = bif:tuple_size _0
  %% Argument types:
  %%    
  switch _3, ^20, [
    { `4`, ^32 },
    { `8`, ^32 }
  ]

32:
  %% Result type:
  %%    {1, 2, 3, 4} | {1, 2, 3, 4, 5, 6, 7, 8}
  %% Aliased:
  %%    _0
  ret _0

20:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2346
%% Counter = 20
%% bs_ensure_opt: true
function `guard_SUITE`:`mask_error`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = is_tagged_tuple _0, `2`, `'EXIT'`
  br _17, ^14, ^9

14:
  %% Argument types:
  %%    _0 => {''EXIT'', any()}
  %% Aliased:
  %%    _0
  _3 = get_tuple_element _0, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _11 = bif:is_tuple _3
  br _11, ^11, ^9

11:
  %% Argument types:
  %%    _3 => {...}
  %% Aliased:
  %%    _3
  _12 = bif:tuple_size _3

  %% Argument types:
  %%    _12 => 0..16777215
  %% Unique:
  %%    _12
  _13 = bif:'=:=' _12, `2`
  br _13, ^10, ^9

10:
  %% Argument types:
  %%    _3 => {any(), any()}
  %% Aliased:
  %%    _3
  _6 = get_tuple_element _3, `0`
  %% Aliased:
  %%    _6
  ret _6

9:
  %% Aliased:
  %%    _0
  ret _0
}

%% guard_SUITE.erl:2352
%% Counter = 578
%% bs_ensure_opt: true
function `guard_SUITE`:`binary_part`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _161 = bif:is_list _0
  br _161, ^161, ^160

161:
  %% guard_SUITE.erl:2355
  %% Result type:
  %%    'error' | 1..3
  _59 = call (`bptest`/1), `<<1,2,3>>`

  %% Unique:
  %%    _59
  _162 = succeeded:body _59
  br _162, ^162, ^1

162:
  %% Argument types:
  %%    _59 => 'error' | 1..3
  %% Unique:
  %%    _59
  _467 = bif:'=:=' _59, `1`
  br _467, ^466, ^164

466:
  %% guard_SUITE.erl:2356
  %% Result type:
  %%    'error' | 1..3
  _60 = call (`bptest`/1), `<<2,1,3>>`

  %% Unique:
  %%    _60
  _165 = succeeded:body _60
  br _165, ^165, ^1

165:
  %% Argument types:
  %%    _60 => 'error' | 1..3
  %% Unique:
  %%    _60
  _464 = bif:'=:=' _60, `2`
  br _464, ^463, ^167

463:
  %% guard_SUITE.erl:2357
  %% Result type:
  %%    'error' | 1..3
  _61 = call (`bptest`/1), `<<1>>`

  %% Unique:
  %%    _61
  _168 = succeeded:body _61
  br _168, ^168, ^1

168:
  %% Argument types:
  %%    _61 => 'error' | 1..3
  %% Unique:
  %%    _61
  _461 = bif:'=:=' _61, `error`
  br _461, ^460, ^170

460:
  %% guard_SUITE.erl:2358
  %% Result type:
  %%    'error' | 1..3
  _62 = call (`bptest`/1), `<<>>`

  %% Unique:
  %%    _62
  _171 = succeeded:body _62
  br _171, ^171, ^1

171:
  %% Argument types:
  %%    _62 => 'error' | 1..3
  %% Unique:
  %%    _62
  _458 = bif:'=:=' _62, `error`
  br _458, ^457, ^173

457:
  %% guard_SUITE.erl:2359
  %% Result type:
  %%    'error'
  _63 = call (`bptest`/1), `apa`

  %% Unique:
  %%    _63
  _174 = succeeded:body _63
  br _174, ^454, ^1

454:
  %% guard_SUITE.erl:2360
  %% Result type:
  %%    'error' | 1..3
  _64 = call (`bptest`/1), `<<2,3,3>>`

  %% Unique:
  %%    _64
  _177 = succeeded:body _64
  br _177, ^177, ^1

177:
  %% Argument types:
  %%    _64 => 'error' | 1..3
  %% Unique:
  %%    _64
  _452 = bif:'=:=' _64, `3`
  br _452, ^451, ^179

451:
  %% guard_SUITE.erl:2362
  %% Result type:
  %%    'error' | 1..3
  _65 = call (`bptest`/2), `<<1,2,3>>`, `1`

  %% Unique:
  %%    _65
  _180 = succeeded:body _65
  br _180, ^180, ^1

180:
  %% Argument types:
  %%    _65 => 'error' | 1..3
  %% Unique:
  %%    _65
  _449 = bif:'=:=' _65, `1`
  br _449, ^448, ^182

448:
  %% guard_SUITE.erl:2363
  %% Result type:
  %%    'error' | 1..3
  _66 = call (`bptest`/2), `<<2,1,3>>`, `1`

  %% Unique:
  %%    _66
  _183 = succeeded:body _66
  br _183, ^183, ^1

183:
  %% Argument types:
  %%    _66 => 'error' | 1..3
  %% Unique:
  %%    _66
  _446 = bif:'=:=' _66, `2`
  br _446, ^445, ^185

445:
  %% guard_SUITE.erl:2364
  %% Result type:
  %%    'error' | 1..3
  _67 = call (`bptest`/2), `<<1>>`, `1`

  %% Unique:
  %%    _67
  _186 = succeeded:body _67
  br _186, ^186, ^1

186:
  %% Argument types:
  %%    _67 => 'error' | 1..3
  %% Unique:
  %%    _67
  _443 = bif:'=:=' _67, `error`
  br _443, ^442, ^188

442:
  %% guard_SUITE.erl:2365
  %% Result type:
  %%    'error' | 1..3
  _68 = call (`bptest`/2), `<<>>`, `1`

  %% Unique:
  %%    _68
  _189 = succeeded:body _68
  br _189, ^189, ^1

189:
  %% Argument types:
  %%    _68 => 'error' | 1..3
  %% Unique:
  %%    _68
  _440 = bif:'=:=' _68, `error`
  br _440, ^439, ^191

439:
  %% guard_SUITE.erl:2366
  %% Result type:
  %%    'error'
  _69 = call (`bptest`/2), `apa`, `1`

  %% Unique:
  %%    _69
  _192 = succeeded:body _69
  br _192, ^436, ^1

436:
  %% guard_SUITE.erl:2367
  %% Result type:
  %%    'error' | 1..3
  _70 = call (`bptest`/2), `<<2,3,3>>`, `1`

  %% Unique:
  %%    _70
  _195 = succeeded:body _70
  br _195, ^195, ^1

195:
  %% Argument types:
  %%    _70 => 'error' | 1..3
  %% Unique:
  %%    _70
  _434 = bif:'=:=' _70, `3`
  br _434, ^433, ^197

433:
  %% guard_SUITE.erl:2369
  %% Result type:
  %%    'error' | 1..3
  _71 = call (`bptesty`/2), `<<1,2,3>>`, `1`

  %% Unique:
  %%    _71
  _198 = succeeded:body _71
  br _198, ^198, ^1

198:
  %% Argument types:
  %%    _71 => 'error' | 1..3
  %% Unique:
  %%    _71
  _431 = bif:'=:=' _71, `1`
  br _431, ^430, ^200

430:
  %% guard_SUITE.erl:2370
  %% Result type:
  %%    'error' | 1..3
  _72 = call (`bptesty`/2), `<<2,1,3>>`, `1`

  %% Unique:
  %%    _72
  _201 = succeeded:body _72
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    _72 => 'error' | 1..3
  %% Unique:
  %%    _72
  _428 = bif:'=:=' _72, `2`
  br _428, ^427, ^203

427:
  %% guard_SUITE.erl:2371
  %% Result type:
  %%    'error' | 1..3
  _73 = call (`bptesty`/2), `<<1>>`, `1`

  %% Unique:
  %%    _73
  _204 = succeeded:body _73
  br _204, ^204, ^1

204:
  %% Argument types:
  %%    _73 => 'error' | 1..3
  %% Unique:
  %%    _73
  _425 = bif:'=:=' _73, `error`
  br _425, ^424, ^206

424:
  %% guard_SUITE.erl:2372
  %% Result type:
  %%    'error' | 1..3
  _74 = call (`bptesty`/2), `<<>>`, `1`

  %% Unique:
  %%    _74
  _207 = succeeded:body _74
  br _207, ^207, ^1

207:
  %% Argument types:
  %%    _74 => 'error' | 1..3
  %% Unique:
  %%    _74
  _422 = bif:'=:=' _74, `error`
  br _422, ^421, ^209

421:
  %% guard_SUITE.erl:2373
  %% Result type:
  %%    'error'
  _75 = call (`bptesty`/2), `apa`, `1`

  %% Unique:
  %%    _75
  _210 = succeeded:body _75
  br _210, ^418, ^1

418:
  %% guard_SUITE.erl:2374
  %% Result type:
  %%    'error' | 1..3
  _76 = call (`bptesty`/2), `<<2,3,3>>`, `2`

  %% Unique:
  %%    _76
  _213 = succeeded:body _76
  br _213, ^213, ^1

213:
  %% Argument types:
  %%    _76 => 'error' | 1..3
  %% Unique:
  %%    _76
  _416 = bif:'=:=' _76, `3`
  br _416, ^415, ^215

415:
  %% guard_SUITE.erl:2376
  %% Result type:
  %%    'error' | 1..3
  _77 = call (`bptestx`/2), `<<1,2,3>>`, `{1,1}`

  %% Unique:
  %%    _77
  _216 = succeeded:body _77
  br _216, ^216, ^1

216:
  %% Argument types:
  %%    _77 => 'error' | 1..3
  %% Unique:
  %%    _77
  _413 = bif:'=:=' _77, `1`
  br _413, ^412, ^218

412:
  %% guard_SUITE.erl:2377
  %% Result type:
  %%    'error' | 1..3
  _78 = call (`bptestx`/2), `<<2,1,3>>`, `{1,1}`

  %% Unique:
  %%    _78
  _219 = succeeded:body _78
  br _219, ^219, ^1

219:
  %% Argument types:
  %%    _78 => 'error' | 1..3
  %% Unique:
  %%    _78
  _410 = bif:'=:=' _78, `2`
  br _410, ^409, ^221

409:
  %% guard_SUITE.erl:2378
  %% Result type:
  %%    'error' | 1..3
  _79 = call (`bptestx`/2), `<<1>>`, `{1,1}`

  %% Unique:
  %%    _79
  _222 = succeeded:body _79
  br _222, ^222, ^1

222:
  %% Argument types:
  %%    _79 => 'error' | 1..3
  %% Unique:
  %%    _79
  _407 = bif:'=:=' _79, `error`
  br _407, ^406, ^224

406:
  %% guard_SUITE.erl:2379
  %% Result type:
  %%    'error' | 1..3
  _80 = call (`bptestx`/2), `<<>>`, `{1,1}`

  %% Unique:
  %%    _80
  _225 = succeeded:body _80
  br _225, ^225, ^1

225:
  %% Argument types:
  %%    _80 => 'error' | 1..3
  %% Unique:
  %%    _80
  _404 = bif:'=:=' _80, `error`
  br _404, ^403, ^227

403:
  %% guard_SUITE.erl:2380
  %% Result type:
  %%    'error'
  _81 = call (`bptestx`/2), `apa`, `{1,1}`

  %% Unique:
  %%    _81
  _228 = succeeded:body _81
  br _228, ^400, ^1

400:
  %% guard_SUITE.erl:2381
  %% Result type:
  %%    'error' | 1..3
  _82 = call (`bptestx`/2), `<<2,3,3>>`, `{1,2}`

  %% Unique:
  %%    _82
  _231 = succeeded:body _82
  br _231, ^231, ^1

231:
  %% Argument types:
  %%    _82 => 'error' | 1..3
  %% Unique:
  %%    _82
  _398 = bif:'=:=' _82, `3`
  br _398, ^397, ^233

397:
  %% guard_SUITE.erl:2383
  %% Result type:
  %%    'error' | 1..3
  _83 = call (`bptest`/3), `<<1,2,3>>`, `1`, `1`

  %% Unique:
  %%    _83
  _234 = succeeded:body _83
  br _234, ^234, ^1

234:
  %% Argument types:
  %%    _83 => 'error' | 1..3
  %% Unique:
  %%    _83
  _395 = bif:'=:=' _83, `1`
  br _395, ^394, ^236

394:
  %% guard_SUITE.erl:2384
  %% Result type:
  %%    'error' | 1..3
  _84 = call (`bptest`/3), `<<2,1,3>>`, `1`, `1`

  %% Unique:
  %%    _84
  _237 = succeeded:body _84
  br _237, ^237, ^1

237:
  %% Argument types:
  %%    _84 => 'error' | 1..3
  %% Unique:
  %%    _84
  _392 = bif:'=:=' _84, `2`
  br _392, ^391, ^239

391:
  %% guard_SUITE.erl:2385
  %% Result type:
  %%    'error' | 1..3
  _85 = call (`bptest`/3), `<<1>>`, `1`, `1`

  %% Unique:
  %%    _85
  _240 = succeeded:body _85
  br _240, ^240, ^1

240:
  %% Argument types:
  %%    _85 => 'error' | 1..3
  %% Unique:
  %%    _85
  _389 = bif:'=:=' _85, `error`
  br _389, ^388, ^242

388:
  %% guard_SUITE.erl:2386
  %% Result type:
  %%    'error' | 1..3
  _86 = call (`bptest`/3), `<<>>`, `1`, `1`

  %% Unique:
  %%    _86
  _243 = succeeded:body _86
  br _243, ^243, ^1

243:
  %% Argument types:
  %%    _86 => 'error' | 1..3
  %% Unique:
  %%    _86
  _386 = bif:'=:=' _86, `error`
  br _386, ^385, ^245

385:
  %% guard_SUITE.erl:2387
  %% Result type:
  %%    'error'
  _87 = call (`bptest`/3), `apa`, `1`, `1`

  %% Unique:
  %%    _87
  _246 = succeeded:body _87
  br _246, ^382, ^1

382:
  %% guard_SUITE.erl:2388
  %% Result type:
  %%    'error' | 1..3
  _88 = call (`bptest`/3), `<<2,3,3>>`, `1`, `2`

  %% Unique:
  %%    _88
  _249 = succeeded:body _88
  br _249, ^249, ^1

249:
  %% Argument types:
  %%    _88 => 'error' | 1..3
  %% Unique:
  %%    _88
  _380 = bif:'=:=' _88, `3`
  br _380, ^566, ^251

566:
  br ^572

572:
  _259 = new_try_tag `'catch'`
  br _259, ^257, ^258

257:
  %% guard_SUITE.erl:2393
  %% Argument types:
  %%    
  _103 = bif:binary_part `<<1>>`, `1`, `1`

  %% Aliased:
  %%    _103
  _261 = succeeded:body _103
  br _261, ^261, ^258

261:
  br ^256

258:
  %% Unique:
  %%    _259
  _264 = landingpad `'catch'`, _259

  %% Aliased:
  %%    _264
  _262 = extract _264, `0`
  br ^256

256:
  _265 = phi { _262, ^258 }, { _103, ^261 }

  %% Aliased:
  %%    _265
  %% Unique:
  %%    _259
  _33 = catch_end _259, _265

  %% guard_SUITE.erl:2393
  %% Aliased:
  %%    _33
  _91 = call (`mask_error`/1), _33

  %% Aliased:
  %%    _91
  _266 = succeeded:body _91
  br _266, ^266, ^1

266:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _373 = bif:'=:=' _91, `badarg`
  br _373, ^567, ^268

567:
  br ^573

573:
  _272 = new_try_tag `'catch'`
  br _272, ^270, ^271

270:
  %% guard_SUITE.erl:2394
  %% Argument types:
  %%    
  _105 = bif:binary_part `<<>>`, `1`, `1`

  %% Aliased:
  %%    _105
  _274 = succeeded:body _105
  br _274, ^274, ^271

274:
  br ^269

271:
  %% Unique:
  %%    _272
  _277 = landingpad `'catch'`, _272

  %% Aliased:
  %%    _277
  _275 = extract _277, `0`
  br ^269

269:
  _278 = phi { _275, ^271 }, { _105, ^274 }

  %% Aliased:
  %%    _278
  %% Unique:
  %%    _272
  _35 = catch_end _272, _278

  %% guard_SUITE.erl:2394
  %% Aliased:
  %%    _35
  _92 = call (`mask_error`/1), _35

  %% Aliased:
  %%    _92
  _279 = succeeded:body _92
  br _279, ^279, ^1

279:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _370 = bif:'=:=' _92, `badarg`
  br _370, ^568, ^281

568:
  br ^574

574:
  _285 = new_try_tag `'catch'`
  br _285, ^283, ^284

283:
  %% guard_SUITE.erl:2395
  %% Argument types:
  %%    
  _107 = bif:binary_part `apa`, `1`, `1`

  %% Aliased:
  %%    _107
  _287 = succeeded:body _107
  br ^284

284:
  %% Unique:
  %%    _285
  _290 = landingpad `'catch'`, _285

  %% Aliased:
  %%    _290
  _288 = extract _290, `0`
  br ^282

282:
  %% Aliased:
  %%    _288
  %% Unique:
  %%    _285
  _37 = catch_end _285, _288

  %% guard_SUITE.erl:2395
  %% Aliased:
  %%    _37
  _93 = call (`mask_error`/1), _37

  %% Aliased:
  %%    _93
  _292 = succeeded:body _93
  br _292, ^292, ^1

292:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _367 = bif:'=:=' _93, `badarg`
  br _367, ^569, ^294

569:
  br ^575

575:
  _304 = new_try_tag `'catch'`
  br _304, ^302, ^303

302:
  %% guard_SUITE.erl:2401
  %% Argument types:
  %%    
  _109 = bif:binary_part `<<1>>`, `1`, `1`

  %% Aliased:
  %%    _109
  _306 = succeeded:body _109
  br _306, ^306, ^303

306:
  br ^301

303:
  %% Unique:
  %%    _304
  _309 = landingpad `'catch'`, _304

  %% Aliased:
  %%    _309
  _307 = extract _309, `0`
  br ^301

301:
  _310 = phi { _307, ^303 }, { _109, ^306 }

  %% Aliased:
  %%    _310
  %% Unique:
  %%    _304
  _42 = catch_end _304, _310

  %% guard_SUITE.erl:2401
  %% Aliased:
  %%    _42
  _97 = call (`mask_error`/1), _42

  %% Aliased:
  %%    _97
  _311 = succeeded:body _97
  br _311, ^311, ^1

311:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _358 = bif:'=:=' _97, `badarg`
  br _358, ^570, ^313

570:
  br ^576

576:
  _317 = new_try_tag `'catch'`
  br _317, ^315, ^316

315:
  %% guard_SUITE.erl:2402
  %% Argument types:
  %%    
  _111 = bif:binary_part `<<>>`, `1`, `1`

  %% Aliased:
  %%    _111
  _319 = succeeded:body _111
  br _319, ^319, ^316

319:
  br ^314

316:
  %% Unique:
  %%    _317
  _322 = landingpad `'catch'`, _317

  %% Aliased:
  %%    _322
  _320 = extract _322, `0`
  br ^314

314:
  _323 = phi { _320, ^316 }, { _111, ^319 }

  %% Aliased:
  %%    _323
  %% Unique:
  %%    _317
  _44 = catch_end _317, _323

  %% guard_SUITE.erl:2402
  %% Aliased:
  %%    _44
  _98 = call (`mask_error`/1), _44

  %% Aliased:
  %%    _98
  _324 = succeeded:body _98
  br _324, ^324, ^1

324:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _355 = bif:'=:=' _98, `badarg`
  br _355, ^571, ^326

571:
  br ^577

577:
  _330 = new_try_tag `'catch'`
  br _330, ^328, ^329

328:
  %% guard_SUITE.erl:2403
  %% Argument types:
  %%    
  _113 = bif:binary_part `apa`, `1`, `1`

  %% Aliased:
  %%    _113
  _332 = succeeded:body _113
  br ^329

329:
  %% Unique:
  %%    _330
  _335 = landingpad `'catch'`, _330

  %% Aliased:
  %%    _335
  _333 = extract _335, `0`
  br ^327

327:
  %% Aliased:
  %%    _333
  %% Unique:
  %%    _330
  _46 = catch_end _330, _333

  %% guard_SUITE.erl:2403
  %% Aliased:
  %%    _46
  _99 = call (`mask_error`/1), _46

  %% Aliased:
  %%    _99
  _337 = succeeded:body _99
  br _337, ^337, ^1

337:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _352 = bif:'=:=' _99, `badarg`
  br _352, ^349, ^339

349:
  %% guard_SUITE.erl:2421
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _56 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _56
  _342 = succeeded:body _56
  br _342, ^342, ^1

342:
  %% guard_SUITE.erl:2421
  %% Result type:
  %%    'error'
  %% Aliased:
  %%    _56
  _101 = call (`bp_coverage_1`/1), _56

  %% Unique:
  %%    _101
  _343 = succeeded:body _101
  br _343, ^346, ^1

346:
  %% Result type:
  %%    'ok'
  ret `ok`

339:
  %% guard_SUITE.erl:2403
  %% Aliased:
  %%    _99
  _116 = match_fail `badmatch`, _99

  %% Unique:
  %%    _116
  _353 = succeeded:body _116
  br ^1

326:
  %% guard_SUITE.erl:2402
  %% Aliased:
  %%    _98
  _117 = match_fail `badmatch`, _98

  %% Unique:
  %%    _117
  _356 = succeeded:body _117
  br ^1

313:
  %% guard_SUITE.erl:2401
  %% Aliased:
  %%    _97
  _118 = match_fail `badmatch`, _97

  %% Unique:
  %%    _118
  _359 = succeeded:body _118
  br ^1

294:
  %% guard_SUITE.erl:2395
  %% Aliased:
  %%    _93
  _122 = match_fail `badmatch`, _93

  %% Unique:
  %%    _122
  _368 = succeeded:body _122
  br ^1

281:
  %% guard_SUITE.erl:2394
  %% Aliased:
  %%    _92
  _123 = match_fail `badmatch`, _92

  %% Unique:
  %%    _123
  _371 = succeeded:body _123
  br ^1

268:
  %% guard_SUITE.erl:2393
  %% Aliased:
  %%    _91
  _124 = match_fail `badmatch`, _91

  %% Unique:
  %%    _124
  _374 = succeeded:body _124
  br ^1

251:
  %% guard_SUITE.erl:2388
  %% Unique:
  %%    _88
  _127 = match_fail `badmatch`, _88

  %% Unique:
  %%    _127
  _381 = succeeded:body _127
  br ^1

245:
  %% guard_SUITE.erl:2386
  %% Unique:
  %%    _86
  _129 = match_fail `badmatch`, _86

  %% Unique:
  %%    _129
  _387 = succeeded:body _129
  br ^1

242:
  %% guard_SUITE.erl:2385
  %% Unique:
  %%    _85
  _130 = match_fail `badmatch`, _85

  %% Unique:
  %%    _130
  _390 = succeeded:body _130
  br ^1

239:
  %% guard_SUITE.erl:2384
  %% Unique:
  %%    _84
  _131 = match_fail `badmatch`, _84

  %% Unique:
  %%    _131
  _393 = succeeded:body _131
  br ^1

236:
  %% guard_SUITE.erl:2383
  %% Unique:
  %%    _83
  _132 = match_fail `badmatch`, _83

  %% Unique:
  %%    _132
  _396 = succeeded:body _132
  br ^1

233:
  %% guard_SUITE.erl:2381
  %% Unique:
  %%    _82
  _133 = match_fail `badmatch`, _82

  %% Unique:
  %%    _133
  _399 = succeeded:body _133
  br ^1

227:
  %% guard_SUITE.erl:2379
  %% Unique:
  %%    _80
  _135 = match_fail `badmatch`, _80

  %% Unique:
  %%    _135
  _405 = succeeded:body _135
  br ^1

224:
  %% guard_SUITE.erl:2378
  %% Unique:
  %%    _79
  _136 = match_fail `badmatch`, _79

  %% Unique:
  %%    _136
  _408 = succeeded:body _136
  br ^1

221:
  %% guard_SUITE.erl:2377
  %% Unique:
  %%    _78
  _137 = match_fail `badmatch`, _78

  %% Unique:
  %%    _137
  _411 = succeeded:body _137
  br ^1

218:
  %% guard_SUITE.erl:2376
  %% Unique:
  %%    _77
  _138 = match_fail `badmatch`, _77

  %% Unique:
  %%    _138
  _414 = succeeded:body _138
  br ^1

215:
  %% guard_SUITE.erl:2374
  %% Unique:
  %%    _76
  _139 = match_fail `badmatch`, _76

  %% Unique:
  %%    _139
  _417 = succeeded:body _139
  br ^1

209:
  %% guard_SUITE.erl:2372
  %% Unique:
  %%    _74
  _141 = match_fail `badmatch`, _74

  %% Unique:
  %%    _141
  _423 = succeeded:body _141
  br ^1

206:
  %% guard_SUITE.erl:2371
  %% Unique:
  %%    _73
  _142 = match_fail `badmatch`, _73

  %% Unique:
  %%    _142
  _426 = succeeded:body _142
  br ^1

203:
  %% guard_SUITE.erl:2370
  %% Unique:
  %%    _72
  _143 = match_fail `badmatch`, _72

  %% Unique:
  %%    _143
  _429 = succeeded:body _143
  br ^1

200:
  %% guard_SUITE.erl:2369
  %% Unique:
  %%    _71
  _144 = match_fail `badmatch`, _71

  %% Unique:
  %%    _144
  _432 = succeeded:body _144
  br ^1

197:
  %% guard_SUITE.erl:2367
  %% Unique:
  %%    _70
  _145 = match_fail `badmatch`, _70

  %% Unique:
  %%    _145
  _435 = succeeded:body _145
  br ^1

191:
  %% guard_SUITE.erl:2365
  %% Unique:
  %%    _68
  _147 = match_fail `badmatch`, _68

  %% Unique:
  %%    _147
  _441 = succeeded:body _147
  br ^1

188:
  %% guard_SUITE.erl:2364
  %% Unique:
  %%    _67
  _148 = match_fail `badmatch`, _67

  %% Unique:
  %%    _148
  _444 = succeeded:body _148
  br ^1

185:
  %% guard_SUITE.erl:2363
  %% Unique:
  %%    _66
  _149 = match_fail `badmatch`, _66

  %% Unique:
  %%    _149
  _447 = succeeded:body _149
  br ^1

182:
  %% guard_SUITE.erl:2362
  %% Unique:
  %%    _65
  _150 = match_fail `badmatch`, _65

  %% Unique:
  %%    _150
  _450 = succeeded:body _150
  br ^1

179:
  %% guard_SUITE.erl:2360
  %% Unique:
  %%    _64
  _151 = match_fail `badmatch`, _64

  %% Unique:
  %%    _151
  _453 = succeeded:body _151
  br ^1

173:
  %% guard_SUITE.erl:2358
  %% Unique:
  %%    _62
  _153 = match_fail `badmatch`, _62

  %% Unique:
  %%    _153
  _459 = succeeded:body _153
  br ^1

170:
  %% guard_SUITE.erl:2357
  %% Unique:
  %%    _61
  _154 = match_fail `badmatch`, _61

  %% Unique:
  %%    _154
  _462 = succeeded:body _154
  br ^1

167:
  %% guard_SUITE.erl:2356
  %% Unique:
  %%    _60
  _155 = match_fail `badmatch`, _60

  %% Unique:
  %%    _155
  _465 = succeeded:body _155
  br ^1

164:
  %% guard_SUITE.erl:2355
  %% Unique:
  %%    _59
  _156 = match_fail `badmatch`, _59

  %% Unique:
  %%    _156
  _468 = succeeded:body _156
  br ^1

160:
  %% guard_SUITE.erl:2352
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-binary_part/1-',1}}
  _157 = match_fail `function_clause`, _0

  %% Unique:
  %%    _157
  _469 = succeeded:body _157
  br ^1

1:
  _158 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _158
}

%% guard_SUITE.erl:2426
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'apa' | bitstring(8)
function `guard_SUITE`:`bptest`(_0) {
0:
  %% guard_SUITE.erl:2428
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %% Aliased:
  %%    _0
  _2 = bif:binary_part _0, `{1,1}`

  %% Aliased:
  %%    _2
  _28 = succeeded:guard _2
  br _28, ^28, ^26

28:
  %% Argument types:
  %%    _2 => bitstring(8)
  %% Aliased:
  %%    _2
  _29 = bif:'=:=' _2, `<<2>>`
  br _29, ^29, ^26

29:
  %% Result type:
  %%    1
  ret `1`

26:
  %% guard_SUITE.erl:2430
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %% Aliased:
  %%    _0
  _3 = bif:binary_part _0, `1`, `1`

  %% Aliased:
  %%    _3
  _32 = succeeded:guard _3
  br _32, ^32, ^30

32:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _33 = bif:'=:=' _3, `<<1>>`
  br _33, ^33, ^30

33:
  %% Result type:
  %%    2
  ret `2`

30:
  %% guard_SUITE.erl:2432
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %% Aliased:
  %%    _0
  _4 = bif:binary_part _0, `{1,2}`

  %% Aliased:
  %%    _4
  _35 = succeeded:guard _4
  br _35, ^35, ^21

35:
  %% Argument types:
  %%    _4 => bitstring(8)
  %% Aliased:
  %%    _4
  _36 = bif:'=:=' _4, `<<3,3>>`
  br _36, ^36, ^21

36:
  %% Result type:
  %%    3
  ret `3`

21:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2437
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'apa' | bitstring(8)
%%    _1 =>
%%     1
function `guard_SUITE`:`bptest`(_0, _1) {
0:
  %% guard_SUITE.erl:2439
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %% Aliased:
  %%    _0
  _3 = bif:binary_part _0, `{1,1}`

  %% Aliased:
  %%    _3
  _36 = succeeded:guard _3
  br _36, ^36, ^34

36:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _37 = bif:'=:=' _3, `<<2>>`
  br _37, ^37, ^34

37:
  %% Result type:
  %%    1
  ret `1`

34:
  %% guard_SUITE.erl:2441
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %% Aliased:
  %%    _0
  _4 = bif:binary_part _0, `1`, `1`

  %% Aliased:
  %%    _4
  _40 = succeeded:guard _4
  br _40, ^40, ^38

40:
  %% Argument types:
  %%    _4 => bitstring(8)
  %% Aliased:
  %%    _4
  _41 = bif:'=:=' _4, `<<1>>`
  br _41, ^41, ^38

41:
  %% Result type:
  %%    2
  ret `2`

38:
  %% guard_SUITE.erl:2443
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %% Aliased:
  %%    _0
  _5 = bif:binary_part _0, `{1,2}`

  %% Aliased:
  %%    _5
  _43 = succeeded:guard _5
  br _43, ^43, ^29

43:
  %% Argument types:
  %%    _5 => bitstring(8)
  %% Aliased:
  %%    _5
  _44 = bif:'=:=' _5, `<<3,3>>`
  br _44, ^44, ^29

44:
  %% Result type:
  %%    3
  ret `3`

29:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2448
%% Counter = 43
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'apa' | bitstring(8)
%%    _1 =>
%%     {1, 1..2}
function `guard_SUITE`:`bptestx`(_0, _1) {
0:
  %% guard_SUITE.erl:2450
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _1 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _1
  _3 = bif:binary_part _0, _1

  %% Aliased:
  %%    _3
  _34 = succeeded:guard _3
  br _34, ^34, ^32

34:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _35 = bif:'=:=' _3, `<<2>>`
  br _35, ^35, ^32

35:
  %% Result type:
  %%    1
  ret `1`

32:
  %% guard_SUITE.erl:2452
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _1 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = bif:binary_part _0, _1

  %% Aliased:
  %%    _4
  _38 = succeeded:guard _4
  br _38, ^38, ^36

38:
  %% Argument types:
  %%    _4 => bitstring(8)
  %% Aliased:
  %%    _4
  _39 = bif:'=:=' _4, `<<1>>`
  br _39, ^39, ^36

39:
  %% Result type:
  %%    2
  ret `2`

36:
  %% guard_SUITE.erl:2454
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _1 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _1
  _5 = bif:binary_part _0, _1

  %% Aliased:
  %%    _5
  _41 = succeeded:guard _5
  br _41, ^41, ^27

41:
  %% Argument types:
  %%    _5 => bitstring(8)
  %% Aliased:
  %%    _5
  _42 = bif:'=:=' _5, `<<3,3>>`
  br _42, ^42, ^27

42:
  %% Result type:
  %%    3
  ret `3`

27:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2459
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'apa' | bitstring(8)
%%    _1 =>
%%     1..2
function `guard_SUITE`:`bptesty`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => 1..2
  %% Unique:
  %%    _1
  _16 = put_tuple `1`, _1

  %% guard_SUITE.erl:2461
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _16 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _16
  _3 = bif:binary_part _0, _16

  %% Aliased:
  %%    _3
  _36 = succeeded:guard _3
  br _36, ^36, ^34

36:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _37 = bif:'=:=' _3, `<<2>>`
  br _37, ^37, ^34

37:
  %% Result type:
  %%    1
  ret `1`

34:
  %% guard_SUITE.erl:2463
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _1 => 1..2
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  _4 = bif:binary_part _0, `1`, _1

  %% Aliased:
  %%    _4
  _40 = succeeded:guard _4
  br _40, ^40, ^38

40:
  %% Argument types:
  %%    _4 => bitstring(8)
  %% Aliased:
  %%    _4
  _41 = bif:'=:=' _4, `<<1>>`
  br _41, ^41, ^38

41:
  %% Result type:
  %%    2
  ret `2`

38:
  %% guard_SUITE.erl:2465
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _16 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _16
  _5 = bif:binary_part _0, _16

  %% Aliased:
  %%    _5
  _43 = succeeded:guard _5
  br _43, ^43, ^29

43:
  %% Argument types:
  %%    _5 => bitstring(8)
  %% Aliased:
  %%    _5
  _44 = bif:'=:=' _5, `<<3,3>>`
  br _44, ^44, ^29

44:
  %% Result type:
  %%    3
  ret `3`

29:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2470
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'apa' | bitstring(8)
%%    _1 =>
%%     1
%%    _2 =>
%%     1..2
function `guard_SUITE`:`bptest`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _2 => 1..2
  %% Unique:
  %%    _2
  _21 = put_tuple `1`, _2

  %% guard_SUITE.erl:2472
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _21 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _21
  _4 = bif:binary_part _0, _21

  %% Aliased:
  %%    _4
  _41 = succeeded:guard _4
  br _41, ^41, ^39

41:
  %% Argument types:
  %%    _4 => bitstring(8)
  %% Aliased:
  %%    _4
  _42 = bif:'=:=' _4, `<<2>>`
  br _42, ^42, ^39

42:
  %% Result type:
  %%    1
  ret `1`

39:
  %% guard_SUITE.erl:2474
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _2 => 1..2
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _2
  _5 = bif:binary_part _0, `1`, _2

  %% Aliased:
  %%    _5
  _45 = succeeded:guard _5
  br _45, ^45, ^43

45:
  %% Argument types:
  %%    _5 => bitstring(8)
  %% Aliased:
  %%    _5
  _46 = bif:'=:=' _5, `<<1>>`
  br _46, ^46, ^43

46:
  %% Result type:
  %%    2
  ret `2`

43:
  %% guard_SUITE.erl:2476
  %% Argument types:
  %%    _0 => 'apa' | bitstring(8)
  %%    _21 => {1, 1..2}
  %% Aliased:
  %%    _0, 
  %%    _21
  _6 = bif:binary_part _0, _21

  %% Aliased:
  %%    _6
  _48 = succeeded:guard _6
  br _48, ^48, ^34

48:
  %% Argument types:
  %%    _6 => bitstring(8)
  %% Aliased:
  %%    _6
  _49 = bif:'=:=' _6, `<<3,3>>`
  br _49, ^49, ^34

49:
  %% Result type:
  %%    3
  ret `3`

34:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2481
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`bp_coverage_1`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2496
%% Counter = 48
%% bs_ensure_opt: true
function `guard_SUITE`:`bad_constants`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _24 = bif:is_list _0
  br _24, ^38, ^23

38:
  %% Result type:
  %%    'ok'
  ret `ok`

23:
  %% guard_SUITE.erl:2496
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-bad_constants/1-',1}}
  _20 = match_fail `function_clause`, _0

  %% Unique:
  %%    _20
  _43 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% guard_SUITE.erl:2508
%% Counter = 431
%% bs_ensure_opt: true
function `guard_SUITE`:`bad_guards`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _66 = bif:is_list _0
  br _66, ^407, ^65

407:
  br ^419

419:
  _78 = new_try_tag `'catch'`
  br _78, ^76, ^77

76:
  %% guard_SUITE.erl:2511
  %% Result type:
  %%    none()
  _26 = call (`bad_guards_1`/2), `1`, `[]`

  %% Aliased:
  %%    _26
  _80 = succeeded:body _26
  br ^77

77:
  %% Unique:
  %%    _78
  _83 = landingpad `'catch'`, _78

  %% Aliased:
  %%    _83
  _81 = extract _83, `0`
  br ^75

75:
  %% Aliased:
  %%    _81
  %% Unique:
  %%    _78
  _4 = catch_end _78, _81

  %% guard_SUITE.erl:2511
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _4
  _27 = call (`fc`/1), _4

  %% Unique:
  %%    _27
  _85 = succeeded:body _27
  br _85, ^408, ^1

408:
  br ^420

420:
  _89 = new_try_tag `'catch'`
  br _89, ^87, ^88

87:
  %% guard_SUITE.erl:2512
  %% Result type:
  %%    none()
  _29 = call (`bad_guards_1`/2), `1`, `[2]`

  %% Aliased:
  %%    _29
  _91 = succeeded:body _29
  br ^88

88:
  %% Unique:
  %%    _89
  _94 = landingpad `'catch'`, _89

  %% Aliased:
  %%    _94
  _92 = extract _94, `0`
  br ^86

86:
  %% Aliased:
  %%    _92
  %% Unique:
  %%    _89
  _5 = catch_end _89, _92

  %% guard_SUITE.erl:2512
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _5
  _30 = call (`fc`/1), _5

  %% Unique:
  %%    _30
  _96 = succeeded:body _30
  br _96, ^409, ^1

409:
  br ^421

421:
  _100 = new_try_tag `'catch'`
  br _100, ^98, ^99

98:
  %% guard_SUITE.erl:2513
  %% Result type:
  %%    none()
  _32 = call (`bad_guards_1`/2), `atom`, `[2]`

  %% Aliased:
  %%    _32
  _102 = succeeded:body _32
  br ^99

99:
  %% Unique:
  %%    _100
  _105 = landingpad `'catch'`, _100

  %% Aliased:
  %%    _105
  _103 = extract _105, `0`
  br ^97

97:
  %% Aliased:
  %%    _103
  %% Unique:
  %%    _100
  _6 = catch_end _100, _103

  %% guard_SUITE.erl:2513
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _6
  _33 = call (`fc`/1), _6

  %% Unique:
  %%    _33
  _107 = succeeded:body _33
  br _107, ^410, ^1

410:
  br ^422

422:
  _111 = new_try_tag `'catch'`
  br _111, ^109, ^110

109:
  %% guard_SUITE.erl:2515
  %% Result type:
  %%    none()
  _35 = call (`bad_guards_2`/2), `#{a => 0,b => 0}`, `[]`

  %% Aliased:
  %%    _35
  _113 = succeeded:body _35
  br ^110

110:
  %% Unique:
  %%    _111
  _116 = landingpad `'catch'`, _111

  %% Aliased:
  %%    _116
  _114 = extract _116, `0`
  br ^108

108:
  %% Aliased:
  %%    _114
  %% Unique:
  %%    _111
  _7 = catch_end _111, _114

  %% guard_SUITE.erl:2515
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _7
  _36 = call (`fc`/1), _7

  %% Unique:
  %%    _36
  _118 = succeeded:body _36
  br _118, ^411, ^1

411:
  br ^423

423:
  _122 = new_try_tag `'catch'`
  br _122, ^120, ^121

120:
  %% guard_SUITE.erl:2516
  %% Result type:
  %%    none()
  _38 = call (`bad_guards_2`/2), `#{a => 0,b => 0}`, `[x]`

  %% Aliased:
  %%    _38
  _124 = succeeded:body _38
  br ^121

121:
  %% Unique:
  %%    _122
  _127 = landingpad `'catch'`, _122

  %% Aliased:
  %%    _127
  _125 = extract _127, `0`
  br ^119

119:
  %% Aliased:
  %%    _125
  %% Unique:
  %%    _122
  _8 = catch_end _122, _125

  %% guard_SUITE.erl:2516
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _8
  _39 = call (`fc`/1), _8

  %% Unique:
  %%    _39
  _129 = succeeded:body _39
  br _129, ^412, ^1

412:
  br ^424

424:
  _133 = new_try_tag `'catch'`
  br _133, ^131, ^132

131:
  %% guard_SUITE.erl:2517
  %% Result type:
  %%    none()
  _41 = call (`bad_guards_2`/2), `not_a_map`, `[x]`

  %% Aliased:
  %%    _41
  _135 = succeeded:body _41
  br ^132

132:
  %% Unique:
  %%    _133
  _138 = landingpad `'catch'`, _133

  %% Aliased:
  %%    _138
  _136 = extract _138, `0`
  br ^130

130:
  %% Aliased:
  %%    _136
  %% Unique:
  %%    _133
  _9 = catch_end _133, _136

  %% guard_SUITE.erl:2517
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _9
  _42 = call (`fc`/1), _9

  %% Unique:
  %%    _42
  _140 = succeeded:body _42
  br _140, ^413, ^1

413:
  br ^425

425:
  _144 = new_try_tag `'catch'`
  br _144, ^142, ^143

142:
  %% guard_SUITE.erl:2518
  %% Result type:
  %%    none()
  _44 = call (`bad_guards_2`/2), `42`, `[x]`

  %% Aliased:
  %%    _44
  _146 = succeeded:body _44
  br ^143

143:
  %% Unique:
  %%    _144
  _149 = landingpad `'catch'`, _144

  %% Aliased:
  %%    _149
  _147 = extract _149, `0`
  br ^141

141:
  %% Aliased:
  %%    _147
  %% Unique:
  %%    _144
  _10 = catch_end _144, _147

  %% guard_SUITE.erl:2518
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _10
  _45 = call (`fc`/1), _10

  %% Unique:
  %%    _45
  _151 = succeeded:body _45
  br _151, ^414, ^1

414:
  br ^426

426:
  _155 = new_try_tag `'catch'`
  br _155, ^153, ^154

153:
  %% guard_SUITE.erl:2520
  %% Result type:
  %%    none()
  _47 = call (`bad_guards_3`/2), `#{a => 0,b => 0}`, `[]`

  %% Aliased:
  %%    _47
  _157 = succeeded:body _47
  br ^154

154:
  %% Unique:
  %%    _155
  _160 = landingpad `'catch'`, _155

  %% Aliased:
  %%    _160
  _158 = extract _160, `0`
  br ^152

152:
  %% Aliased:
  %%    _158
  %% Unique:
  %%    _155
  _11 = catch_end _155, _158

  %% guard_SUITE.erl:2520
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _11
  _48 = call (`fc`/1), _11

  %% Unique:
  %%    _48
  _162 = succeeded:body _48
  br _162, ^415, ^1

415:
  br ^427

427:
  _166 = new_try_tag `'catch'`
  br _166, ^164, ^165

164:
  %% guard_SUITE.erl:2521
  %% Result type:
  %%    none()
  _50 = call (`bad_guards_3`/2), `#{a => 0,b => 0}`, `[x]`

  %% Aliased:
  %%    _50
  _168 = succeeded:body _50
  br ^165

165:
  %% Unique:
  %%    _166
  _171 = landingpad `'catch'`, _166

  %% Aliased:
  %%    _171
  _169 = extract _171, `0`
  br ^163

163:
  %% Aliased:
  %%    _169
  %% Unique:
  %%    _166
  _12 = catch_end _166, _169

  %% guard_SUITE.erl:2521
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _12
  _51 = call (`fc`/1), _12

  %% Unique:
  %%    _51
  _173 = succeeded:body _51
  br _173, ^416, ^1

416:
  br ^428

428:
  _177 = new_try_tag `'catch'`
  br _177, ^175, ^176

175:
  %% guard_SUITE.erl:2522
  %% Result type:
  %%    none()
  _53 = call (`bad_guards_3`/2), `not_a_map`, `[x]`

  %% Aliased:
  %%    _53
  _179 = succeeded:body _53
  br ^176

176:
  %% Unique:
  %%    _177
  _182 = landingpad `'catch'`, _177

  %% Aliased:
  %%    _182
  _180 = extract _182, `0`
  br ^174

174:
  %% Aliased:
  %%    _180
  %% Unique:
  %%    _177
  _13 = catch_end _177, _180

  %% guard_SUITE.erl:2522
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _13
  _54 = call (`fc`/1), _13

  %% Unique:
  %%    _54
  _184 = succeeded:body _54
  br _184, ^417, ^1

417:
  br ^429

429:
  _188 = new_try_tag `'catch'`
  br _188, ^186, ^187

186:
  %% guard_SUITE.erl:2523
  %% Result type:
  %%    none()
  _56 = call (`bad_guards_3`/2), `42`, `[x]`

  %% Aliased:
  %%    _56
  _190 = succeeded:body _56
  br ^187

187:
  %% Unique:
  %%    _188
  _193 = landingpad `'catch'`, _188

  %% Aliased:
  %%    _193
  _191 = extract _193, `0`
  br ^185

185:
  %% Aliased:
  %%    _191
  %% Unique:
  %%    _188
  _14 = catch_end _188, _191

  %% guard_SUITE.erl:2523
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _14
  _57 = call (`fc`/1), _14

  %% Unique:
  %%    _57
  _195 = succeeded:body _57
  br _195, ^418, ^1

418:
  br ^430

430:
  _199 = new_try_tag `'catch'`
  br _199, ^197, ^198

197:
  %% guard_SUITE.erl:2525
  %% Result type:
  %%    none()
  _59 = call (`bad_guards_4`/0)

  %% Aliased:
  %%    _59
  _201 = succeeded:body _59
  br ^198

198:
  %% Unique:
  %%    _199
  _204 = landingpad `'catch'`, _199

  %% Aliased:
  %%    _204
  _202 = extract _204, `0`
  br ^196

196:
  %% Aliased:
  %%    _202
  %% Unique:
  %%    _199
  _15 = catch_end _199, _202

  %% guard_SUITE.erl:2525
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _15
  _60 = call (`fc`/1), _15

  %% Unique:
  %%    _60
  _206 = succeeded:body _60
  br _206, ^206, ^1

206:
  %% guard_SUITE.erl:2527
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _17 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _17
  _207 = succeeded:body _17
  br _207, ^207, ^1

207:
  %% guard_SUITE.erl:2527
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _16 = call (`id`/1), `undefined`

  %% Aliased:
  %%    _16
  _208 = succeeded:body _16
  br _208, ^208, ^1

208:
  %% guard_SUITE.erl:2527
  %% Result type:
  %%    {0..288230376151711743, 'undefined'}
  %% Aliased:
  %%    _16, 
  %%    _17
  _21 = call (`bad_guards_5`/2), _17, _16

  %% Unique:
  %%    _21
  _209 = succeeded:body _21
  br _209, ^209, ^1

209:
  %% Argument types:
  %%    _21 => {0..288230376151711743, 'undefined'}
  %% Unique:
  %%    _21
  _212 = bif:'=:=' _21, `{0,undefined}`
  br _212, ^212, ^211

212:
  %% Result type:
  %%    'ok'
  ret `ok`

211:
  %% guard_SUITE.erl:2527
  %% Unique:
  %%    _21
  _61 = match_fail `badmatch`, _21

  %% Unique:
  %%    _61
  _213 = succeeded:body _61
  br ^1

65:
  %% guard_SUITE.erl:2508
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-bad_guards/1-',1}}
  _62 = match_fail `function_clause`, _0

  %% Unique:
  %%    _62
  _214 = succeeded:body _62
  br ^1

1:
  _63 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _63
}

%% guard_SUITE.erl:2534
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | 1
%%    _1 =>
%%     list(2)
function `guard_SUITE`:`bad_guards_1`(_0, _1) {
0:
  %% guard_SUITE.erl:2534
  %% Unique:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-bad_guards_1/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _23 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% guard_SUITE.erl:2537
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_map' | 42 | #{'a' | 'b'=>0}
%%    _1 =>
%%     list('x')
function `guard_SUITE`:`bad_guards_2`(_0, _1) {
0:
  %% guard_SUITE.erl:2537
  %% Unique:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-bad_guards_2/2-',2}}
  _15 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _15
  _30 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% guard_SUITE.erl:2543
%% Counter = 47
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_a_map' | 42 | #{'a' | 'b'=>0}
%%    _1 =>
%%     list('x')
function `guard_SUITE`:`bad_guards_3`(_0, _1) {
0:
  %% guard_SUITE.erl:2543
  %% Unique:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-bad_guards_3/2-',2}}
  _21 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _21
  _40 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% guard_SUITE.erl:2550
%% Counter = 27
%% bs_ensure_opt: true
function `guard_SUITE`:`bad_guards_4`() {
0:
  %% guard_SUITE.erl:2550
  %% Anno: #{inlined => {'-inlined-bad_guards_4/0-',0}}
  _10 = match_fail `function_clause`

  %% Unique:
  %%    _10
  _19 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% guard_SUITE.erl:2554
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`bad_guards_5`(_0, _1) {
0:
  %% guard_SUITE.erl:2555
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _4 = bif:byte_size _0

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^9, ^1

9:
  %% guard_SUITE.erl:2555
  %% Result type:
  %%    'undefined' | -254..254
  %% Aliased:
  %%    _1
  _3 = call (`bad_guards_5_1`/1), _1

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => 'undefined' | -254..254
  %% Unique:
  %%    _3
  _14 = bif:'=:=' _3, `undefined`
  br _14, ^13, ^12

13:
  %% Argument types:
  %%    _4 => 0..288230376151711743
  %% Unique:
  %%    _4
  _5 = put_tuple _4, `undefined`
  %% Result type:
  %%    {0..288230376151711743, 'undefined'}
  %% Unique:
  %%    _5
  ret _5

12:
  %% guard_SUITE.erl:2555
  %% Unique:
  %%    _3
  _6 = match_fail `badmatch`, _3

  %% Unique:
  %%    _6
  _15 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% guard_SUITE.erl:2556
%% Counter = 12
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`bad_guards_5_1`(_0) {
0:
  %% guard_SUITE.erl:2556
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _1 = bif:'rem' _0, `255`

  %% Unique:
  %%    _1
  _9 = succeeded:guard _1
  br _9, ^11, ^7

11:
  %% Result type:
  %%    -254..254
  %% Unique:
  %%    _1
  ret _1

7:
  %% Result type:
  %%    'undefined'
  ret `undefined`
}

%% guard_SUITE.erl:2563
%% Counter = 296
%% bs_ensure_opt: true
function `guard_SUITE`:`guard_in_catch`(_0) {
0:
  %% guard_SUITE.erl:2564
  _25 = call (`do_guard_in_catch_map_1`/1), `#{}`

  %% Aliased:
  %%    _25
  _94 = succeeded:body _25
  br _94, ^94, ^1

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _275 = is_tagged_tuple _25, `2`, `'EXIT'`
  br _275, ^272, ^96

272:
  %% Argument types:
  %%    _25 => {''EXIT'', any()}
  %% Aliased:
  %%    _25
  _26 = get_tuple_element _25, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _269 = is_tagged_tuple _26, `2`, `if_clause`
  br _269, ^266, ^96

266:
  %% guard_SUITE.erl:2565
  _30 = call (`do_guard_in_catch_map_1`/1), `#{a => b}`

  %% Aliased:
  %%    _30
  _97 = succeeded:body _30
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _262 = is_tagged_tuple _30, `2`, `'EXIT'`
  br _262, ^259, ^99

259:
  %% Argument types:
  %%    _30 => {''EXIT'', any()}
  %% Aliased:
  %%    _30
  _31 = get_tuple_element _30, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _256 = is_tagged_tuple _31, `2`, `if_clause`
  br _256, ^253, ^99

253:
  %% guard_SUITE.erl:2566
  _35 = call (`do_guard_in_catch_map_1`/1), `atom`

  %% Aliased:
  %%    _35
  _100 = succeeded:body _35
  br _100, ^100, ^1

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _249 = is_tagged_tuple _35, `2`, `'EXIT'`
  br _249, ^246, ^102

246:
  %% Argument types:
  %%    _35 => {''EXIT'', any()}
  %% Aliased:
  %%    _35
  _36 = get_tuple_element _35, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _243 = is_tagged_tuple _36, `2`, `if_clause`
  br _243, ^240, ^102

240:
  %% guard_SUITE.erl:2568
  _40 = call (`do_guard_in_catch_map_2`/1), `#{}`

  %% Aliased:
  %%    _40
  _103 = succeeded:body _40
  br _103, ^103, ^1

103:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _236 = is_tagged_tuple _40, `2`, `'EXIT'`
  br _236, ^233, ^105

233:
  %% Argument types:
  %%    _40 => {''EXIT'', any()}
  %% Aliased:
  %%    _40
  _41 = get_tuple_element _40, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _230 = is_tagged_tuple _41, `2`, `if_clause`
  br _230, ^227, ^105

227:
  %% guard_SUITE.erl:2569
  _45 = call (`do_guard_in_catch_map_2`/1), `#{a => b}`

  %% Aliased:
  %%    _45
  _106 = succeeded:body _45
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _223 = is_tagged_tuple _45, `2`, `'EXIT'`
  br _223, ^220, ^108

220:
  %% Argument types:
  %%    _45 => {''EXIT'', any()}
  %% Aliased:
  %%    _45
  _46 = get_tuple_element _45, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _217 = is_tagged_tuple _46, `2`, `if_clause`
  br _217, ^214, ^108

214:
  %% guard_SUITE.erl:2570
  _50 = call (`do_guard_in_catch_map_2`/1), `atom`

  %% Aliased:
  %%    _50
  _109 = succeeded:body _50
  br _109, ^109, ^1

109:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _210 = is_tagged_tuple _50, `2`, `'EXIT'`
  br _210, ^207, ^111

207:
  %% Argument types:
  %%    _50 => {''EXIT'', any()}
  %% Aliased:
  %%    _50
  _51 = get_tuple_element _50, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _204 = is_tagged_tuple _51, `2`, `if_clause`
  br _204, ^294, ^111

294:
  br ^295

295:
  _115 = new_try_tag `'catch'`
  br _115, ^113, ^114

113:
  %% guard_SUITE.erl:2572
  %% Result type:
  %%    none()
  _80 = call (`do_guard_in_catch_map_3`/0)

  %% Aliased:
  %%    _80
  _117 = succeeded:body _80
  br ^114

114:
  %% Unique:
  %%    _115
  _120 = landingpad `'catch'`, _115

  %% Aliased:
  %%    _120
  _118 = extract _120, `0`
  br ^112

112:
  %% Aliased:
  %%    _118
  %% Unique:
  %%    _115
  _7 = catch_end _115, _118

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _197 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _197, ^194, ^123

194:
  %% Argument types:
  %%    _7 => {''EXIT'', any()}
  %% Aliased:
  %%    _7
  _55 = get_tuple_element _7, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _191 = is_tagged_tuple _55, `2`, `if_clause`
  br _191, ^188, ^123

188:
  %% guard_SUITE.erl:2574
  _59 = call (`do_guard_in_catch_bin`/1), `42`

  %% Aliased:
  %%    _59
  _124 = succeeded:body _59
  br _124, ^124, ^1

124:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _184 = is_tagged_tuple _59, `2`, `'EXIT'`
  br _184, ^181, ^126

181:
  %% Argument types:
  %%    _59 => {''EXIT'', any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _178 = is_tagged_tuple _60, `2`, `if_clause`
  br _178, ^175, ^126

175:
  %% guard_SUITE.erl:2575
  _64 = call (`do_guard_in_catch_bin`/1), `<<1,2,3>>`

  %% Aliased:
  %%    _64
  _127 = succeeded:body _64
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _171 = is_tagged_tuple _64, `2`, `'EXIT'`
  br _171, ^168, ^129

168:
  %% Argument types:
  %%    _64 => {''EXIT'', any()}
  %% Aliased:
  %%    _64
  _65 = get_tuple_element _64, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _165 = is_tagged_tuple _65, `2`, `if_clause`
  br _165, ^162, ^129

162:
  %% guard_SUITE.erl:2576
  _69 = call (`do_guard_in_catch_bin`/1), `atom`

  %% Aliased:
  %%    _69
  _130 = succeeded:body _69
  br _130, ^130, ^1

130:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _158 = is_tagged_tuple _69, `2`, `'EXIT'`
  br _158, ^155, ^132

155:
  %% Argument types:
  %%    _69 => {''EXIT'', any()}
  %% Aliased:
  %%    _69
  _70 = get_tuple_element _69, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _152 = is_tagged_tuple _70, `2`, `if_clause`
  br _152, ^149, ^132

149:
  %% guard_SUITE.erl:2577
  _74 = call (`do_guard_in_catch_bin`/1), `#{}`

  %% Aliased:
  %%    _74
  _133 = succeeded:body _74
  br _133, ^133, ^1

133:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _145 = is_tagged_tuple _74, `2`, `'EXIT'`
  br _145, ^142, ^135

142:
  %% Argument types:
  %%    _74 => {''EXIT'', any()}
  %% Aliased:
  %%    _74
  _75 = get_tuple_element _74, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _139 = is_tagged_tuple _75, `2`, `if_clause`
  br _139, ^136, ^135

136:
  %% Result type:
  %%    'ok'
  ret `ok`

135:
  %% guard_SUITE.erl:2577
  %% Aliased:
  %%    _74
  _81 = match_fail `badmatch`, _74

  %% Unique:
  %%    _81
  _148 = succeeded:body _81
  br ^1

132:
  %% guard_SUITE.erl:2576
  %% Aliased:
  %%    _69
  _82 = match_fail `badmatch`, _69

  %% Unique:
  %%    _82
  _161 = succeeded:body _82
  br ^1

129:
  %% guard_SUITE.erl:2575
  %% Aliased:
  %%    _64
  _83 = match_fail `badmatch`, _64

  %% Unique:
  %%    _83
  _174 = succeeded:body _83
  br ^1

126:
  %% guard_SUITE.erl:2574
  %% Aliased:
  %%    _59
  _84 = match_fail `badmatch`, _59

  %% Unique:
  %%    _84
  _187 = succeeded:body _84
  br ^1

123:
  %% guard_SUITE.erl:2572
  %% Aliased:
  %%    _7
  _85 = match_fail `badmatch`, _7

  %% Unique:
  %%    _85
  _200 = succeeded:body _85
  br ^1

111:
  %% guard_SUITE.erl:2570
  %% Aliased:
  %%    _50
  _86 = match_fail `badmatch`, _50

  %% Unique:
  %%    _86
  _213 = succeeded:body _86
  br ^1

108:
  %% guard_SUITE.erl:2569
  %% Aliased:
  %%    _45
  _87 = match_fail `badmatch`, _45

  %% Unique:
  %%    _87
  _226 = succeeded:body _87
  br ^1

105:
  %% guard_SUITE.erl:2568
  %% Aliased:
  %%    _40
  _88 = match_fail `badmatch`, _40

  %% Unique:
  %%    _88
  _239 = succeeded:body _88
  br ^1

102:
  %% guard_SUITE.erl:2566
  %% Aliased:
  %%    _35
  _89 = match_fail `badmatch`, _35

  %% Unique:
  %%    _89
  _252 = succeeded:body _89
  br ^1

99:
  %% guard_SUITE.erl:2565
  %% Aliased:
  %%    _30
  _90 = match_fail `badmatch`, _30

  %% Unique:
  %%    _90
  _265 = succeeded:body _90
  br ^1

96:
  %% guard_SUITE.erl:2564
  %% Aliased:
  %%    _25
  _91 = match_fail `badmatch`, _25

  %% Unique:
  %%    _91
  _278 = succeeded:body _91
  br ^1

1:
  _92 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _92
}

%% guard_SUITE.erl:2581
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | #{'a'=>'b'}
function `guard_SUITE`:`do_guard_in_catch_map_1`(_0) {
0:
  br ^44

44:
  _13 = new_try_tag `'catch'`
  br _13, ^16, ^12

16:
  %% guard_SUITE.erl:2583
  _7 = match_fail `if_clause`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br ^12

12:
  %% Unique:
  %%    _13
  _26 = landingpad `'catch'`, _13

  %% Aliased:
  %%    _26
  _24 = extract _26, `0`
  br ^10

10:
  %% Aliased:
  %%    _24
  %% Unique:
  %%    _13
  _2 = catch_end _13, _24
  %% Aliased:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:2588
%% Counter = 45
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | #{'a'=>'b'}
function `guard_SUITE`:`do_guard_in_catch_map_2`(_0) {
0:
  br ^44

44:
  _13 = new_try_tag `'catch'`
  br _13, ^16, ^12

16:
  %% guard_SUITE.erl:2590
  _7 = match_fail `if_clause`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br ^12

12:
  %% Unique:
  %%    _13
  _26 = landingpad `'catch'`, _13

  %% Aliased:
  %%    _26
  _24 = extract _26, `0`
  br ^10

10:
  %% Aliased:
  %%    _24
  %% Unique:
  %%    _13
  _2 = catch_end _13, _24
  %% Aliased:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:2595
%% Counter = 88
%% bs_ensure_opt: true
function `guard_SUITE`:`do_guard_in_catch_map_3`() {
0:
  br ^86

86:
  _29 = new_try_tag `'try'`
  br _29, ^85, ^26

85:
  br ^87

87:
  _34 = new_try_tag `'try'`
  br _34, ^33, ^31

33:
  %% guard_SUITE.erl:2597
  _17 = match_fail `if_clause`

  %% Unique:
  %%    _17
  _35 = succeeded:body _17
  br ^31

31:
  %% Unique:
  %%    _34
  _47 = landingpad `'try'`, _34

  %% Aliased:
  %%    _47
  _2 = extract _47, `1`

  %% Aliased:
  %%    _47
  _1 = extract _47, `2`

  %% Unique:
  %%    _34
  _48 = kill_try_tag _34
  br ^37

37:
  %% Aliased:
  %%    _1, 
  %%    _2
  _21 = resume _1, _2

  %% Unique:
  %%    _21
  _46 = succeeded:body _21
  br ^26

26:
  %% Unique:
  %%    _29
  _51 = landingpad `'try'`, _29

  %% Aliased:
  %%    _51
  _8 = extract _51, `1`

  %% Aliased:
  %%    _51
  _7 = extract _51, `2`

  %% Unique:
  %%    _29
  _52 = kill_try_tag _29

  %% Aliased:
  %%    _7, 
  %%    _8
  _22 = resume _7, _8

  %% Unique:
  %%    _22
  _50 = succeeded:body _22
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% guard_SUITE.erl:2604
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | 42 | other()
function `guard_SUITE`:`do_guard_in_catch_bin`(_0) {
0:
  br ^39

39:
  _11 = new_try_tag `'catch'`
  br _11, ^14, ^10

14:
  %% guard_SUITE.erl:2608
  _5 = match_fail `if_clause`

  %% Unique:
  %%    _5
  _18 = succeeded:body _5
  br ^10

10:
  %% Unique:
  %%    _11
  _21 = landingpad `'catch'`, _11

  %% Aliased:
  %%    _21
  _19 = extract _21, `0`
  br ^8

8:
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _11
  _2 = catch_end _11, _19
  %% Aliased:
  %%    _2
  ret _2
}

%% guard_SUITE.erl:2619
%% Counter = 55
%% bs_ensure_opt: true
function `guard_SUITE`:`beam_bool_SUITE`(_0) {
0:
  %% guard_SUITE.erl:2620
  %% Result type:
  %%    'ok'
  _2 = call (`before_and_inside_if`/0)

  %% Unique:
  %%    _2
  _29 = succeeded:body _2
  br _29, ^29, ^1

29:
  %% guard_SUITE.erl:2621
  %% Result type:
  %%    'ok'
  _3 = call (`scotland`/0)

  %% Unique:
  %%    _3
  _30 = succeeded:body _3
  br _30, ^30, ^1

30:
  %% guard_SUITE.erl:2622
  %% Result type:
  %%    'ok'
  _4 = call (`y_registers`/0)

  %% Unique:
  %%    _4
  _31 = succeeded:body _4
  br _31, ^31, ^1

31:
  %% guard_SUITE.erl:2623
  %% Result type:
  %%    'ok'
  _5 = call (`protected`/0)

  %% Unique:
  %%    _5
  _32 = succeeded:body _5
  br _32, ^32, ^1

32:
  %% guard_SUITE.erl:2624
  %% Result type:
  %%    'ok'
  _6 = call (`maps`/0)

  %% Unique:
  %%    _6
  _33 = succeeded:body _6
  br _33, ^33, ^1

33:
  %% guard_SUITE.erl:2625
  %% Result type:
  %%    'ok'
  _7 = call (`cover_shortcut_branches`/0)

  %% Unique:
  %%    _7
  _34 = succeeded:body _7
  br _34, ^34, ^1

34:
  %% guard_SUITE.erl:2626
  %% Result type:
  %%    'ok'
  _8 = call (`wrong_order`/0)

  %% Unique:
  %%    _8
  _35 = succeeded:body _8
  br _35, ^35, ^1

35:
  %% guard_SUITE.erl:2627
  %% Result type:
  %%    'ok'
  _9 = call (`megaco`/0)

  %% Unique:
  %%    _9
  _36 = succeeded:body _9
  br _36, ^36, ^1

36:
  %% guard_SUITE.erl:2628
  %% Result type:
  %%    'ok'
  _10 = call (`looks_like_a_guard`/0)

  %% Unique:
  %%    _10
  _37 = succeeded:body _10
  br _37, ^37, ^1

37:
  %% guard_SUITE.erl:2629
  %% Result type:
  %%    'ok'
  _11 = call (`fail_in_guard`/0)

  %% Unique:
  %%    _11
  _38 = succeeded:body _11
  br _38, ^38, ^1

38:
  %% guard_SUITE.erl:2630
  %% Result type:
  %%    'ok'
  _12 = call (`in_catch`/0)

  %% Unique:
  %%    _12
  _39 = succeeded:body _12
  br _39, ^39, ^1

39:
  %% guard_SUITE.erl:2631
  %% Result type:
  %%    'timeout'
  _13 = call (`recv_semi`/0)

  %% Aliased:
  %%    _13
  _40 = succeeded:body _13
  br _40, ^40, ^1

40:
  %% guard_SUITE.erl:2632
  %% Result type:
  %%    'ok'
  _14 = call (`andalso_repeated_var`/0)

  %% Unique:
  %%    _14
  _41 = succeeded:body _14
  br _41, ^41, ^1

41:
  %% guard_SUITE.erl:2633
  %% Result type:
  %%    'ok'
  _15 = call (`erl1246`/0)

  %% Unique:
  %%    _15
  _42 = succeeded:body _15
  br _42, ^42, ^1

42:
  %% guard_SUITE.erl:2634
  %% Result type:
  %%    'ok'
  _16 = call (`erl1253`/0)

  %% Unique:
  %%    _16
  _43 = succeeded:body _16
  br _43, ^43, ^1

43:
  %% guard_SUITE.erl:2635
  %% Result type:
  %%    'ok'
  _17 = call (`erl1384`/0)

  %% Unique:
  %%    _17
  _44 = succeeded:body _17
  br _44, ^44, ^1

44:
  %% guard_SUITE.erl:2636
  %% Result type:
  %%    'ok'
  _18 = call (`gh4788`/0)

  %% Unique:
  %%    _18
  _45 = succeeded:body _18
  br _45, ^45, ^1

45:
  %% guard_SUITE.erl:2637
  %% Result type:
  %%    'ok'
  _19 = call (`beam_ssa_bool_coverage`/0)

  %% Unique:
  %%    _19
  _46 = succeeded:body _19
  br _46, ^46, ^1

46:
  %% guard_SUITE.erl:2638
  %% Result type:
  %%    'error'
  _20 = call (`bad_map_in_guard`/0)

  %% Unique:
  %%    _20
  _47 = succeeded:body _20
  br _47, ^47, ^1

47:
  %% guard_SUITE.erl:2639
  %% Result type:
  %%    'ok'
  _21 = call (`gh_6164`/0)

  %% Unique:
  %%    _21
  _48 = succeeded:body _21
  br _48, ^48, ^1

48:
  %% guard_SUITE.erl:2640
  %% Result type:
  %%    'ok'
  _22 = call (`gh_6184`/0)

  %% Unique:
  %%    _22
  _49 = succeeded:body _22
  br _49, ^49, ^1

49:
  %% guard_SUITE.erl:2641
  %% Result type:
  %%    'ok'
  _23 = call (`gh_7252`/0)

  %% Unique:
  %%    _23
  _50 = succeeded:body _23
  br _50, ^50, ^1

50:
  %% guard_SUITE.erl:2642
  %% Result type:
  %%    'ok'
  _24 = call (`gh_7339`/0)

  %% Unique:
  %%    _24
  _51 = succeeded:body _24
  br _51, ^51, ^1

51:
  %% guard_SUITE.erl:2643
  %% Result type:
  %%    'ok'
  _25 = call (`gh_7370`/0)

  %% Unique:
  %%    _25
  _52 = succeeded:body _25
  br _52, ^52, ^1

52:
  %% guard_SUITE.erl:2644
  %% Result type:
  %%    'ok'
  _26 = call (`gh_7517`/0)

  %% Unique:
  %%    _26
  _53 = succeeded:body _26
  br _53, ^54, ^1

54:
  ret _26

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% guard_SUITE.erl:2647
%% Counter = 138
%% bs_ensure_opt: true
function `guard_SUITE`:`before_and_inside_if`() {
0:
  %% guard_SUITE.erl:2648
  %% Result type:
  %%    'no'
  _16 = call (`before_and_inside_if`/3), `[a]`, `[b]`, `delete`

  %% Unique:
  %%    _16
  _50 = succeeded:body _16
  br _50, ^135, ^1

135:
  %% guard_SUITE.erl:2649
  %% Result type:
  %%    'no'
  _17 = call (`before_and_inside_if`/3), `[a]`, `[b]`, `x`

  %% Unique:
  %%    _17
  _53 = succeeded:body _17
  br _53, ^132, ^1

132:
  %% guard_SUITE.erl:2650
  %% Result type:
  %%    'no'
  _18 = call (`before_and_inside_if`/3), `[a]`, `[]`, `delete`

  %% Unique:
  %%    _18
  _56 = succeeded:body _18
  br _56, ^129, ^1

129:
  %% guard_SUITE.erl:2651
  %% Result type:
  %%    'no'
  _19 = call (`before_and_inside_if`/3), `[a]`, `[]`, `x`

  %% Unique:
  %%    _19
  _59 = succeeded:body _19
  br _59, ^126, ^1

126:
  %% guard_SUITE.erl:2652
  %% Result type:
  %%    'no' | 'yes'
  _20 = call (`before_and_inside_if`/3), `[]`, `[]`, `delete`

  %% Unique:
  %%    _20
  _62 = succeeded:body _20
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    _20 => 'no' | 'yes'
  %% Unique:
  %%    _20
  _124 = bif:'=:=' _20, `no`
  br _124, ^123, ^64

123:
  %% guard_SUITE.erl:2653
  %% Result type:
  %%    'no' | 'yes'
  _21 = call (`before_and_inside_if`/3), `[]`, `[]`, `x`

  %% Unique:
  %%    _21
  _65 = succeeded:body _21
  br _65, ^65, ^1

65:
  %% Argument types:
  %%    _21 => 'no' | 'yes'
  %% Unique:
  %%    _21
  _121 = bif:'=:=' _21, `yes`
  br _121, ^120, ^67

120:
  %% guard_SUITE.erl:2654
  %% Result type:
  %%    'no' | 'yes'
  _22 = call (`before_and_inside_if`/3), `[]`, `[b]`, `delete`

  %% Unique:
  %%    _22
  _68 = succeeded:body _22
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    _22 => 'no' | 'yes'
  %% Unique:
  %%    _22
  _118 = bif:'=:=' _22, `yes`
  br _118, ^117, ^70

117:
  %% guard_SUITE.erl:2655
  %% Result type:
  %%    'no' | 'yes'
  _23 = call (`before_and_inside_if`/3), `[]`, `[b]`, `x`

  %% Unique:
  %%    _23
  _71 = succeeded:body _23
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _23 => 'no' | 'yes'
  %% Unique:
  %%    _23
  _115 = bif:'=:=' _23, `yes`
  br _115, ^114, ^73

114:
  %% guard_SUITE.erl:2657
  %% Result type:
  %%    {'ch1' | 'no', 'ch2'}
  _24 = call (`before_and_inside_if_2`/3), `[a]`, `[b]`, `blah`

  %% Unique:
  %%    _24
  _74 = succeeded:body _24
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _24 => {'ch1' | 'no', 'ch2'}
  %% Unique:
  %%    _24
  _112 = bif:'=:=' _24, `{ch1,ch2}`
  br _112, ^112, ^76

112:
  %% guard_SUITE.erl:2658
  %% Result type:
  %%    {'ch1' | 'no', 'ch2'}
  _25 = call (`before_and_inside_if_2`/3), `[a]`, `[b]`, `xx`

  %% Unique:
  %%    _25
  _77 = succeeded:body _25
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    _25 => {'ch1' | 'no', 'ch2'}
  %% Unique:
  %%    _25
  _110 = bif:'=:=' _25, `{ch1,ch2}`
  br _110, ^110, ^79

110:
  %% guard_SUITE.erl:2659
  %% Result type:
  %%    {'ch1' | 'no', 'ch2'}
  _26 = call (`before_and_inside_if_2`/3), `[a]`, `[]`, `blah`

  %% Unique:
  %%    _26
  _80 = succeeded:body _26
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _26 => {'ch1' | 'no', 'ch2'}
  %% Unique:
  %%    _26
  _108 = bif:'=:=' _26, `{ch1,ch2}`
  br _108, ^108, ^82

108:
  %% guard_SUITE.erl:2660
  %% Result type:
  %%    {'ch1' | 'no', 'ch2'}
  _27 = call (`before_and_inside_if_2`/3), `[a]`, `[]`, `xx`

  %% Unique:
  %%    _27
  _83 = succeeded:body _27
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _27 => {'ch1' | 'no', 'ch2'}
  %% Unique:
  %%    _27
  _106 = bif:'=:=' _27, `{ch1,ch2}`
  br _106, ^106, ^85

106:
  %% guard_SUITE.erl:2661
  %% Result type:
  %%    {'ch1' | 'no', 'ch2' | 'no'}
  _28 = call (`before_and_inside_if_2`/3), `[]`, `[b]`, `blah`

  %% Unique:
  %%    _28
  _86 = succeeded:body _28
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _28 => {'ch1' | 'no', 'ch2' | 'no'}
  %% Unique:
  %%    _28
  _104 = bif:'=:=' _28, `{no,no}`
  br _104, ^104, ^88

104:
  %% guard_SUITE.erl:2662
  %% Result type:
  %%    {'ch1' | 'no', 'ch2' | 'no'}
  _29 = call (`before_and_inside_if_2`/3), `[]`, `[b]`, `xx`

  %% Unique:
  %%    _29
  _89 = succeeded:body _29
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    _29 => {'ch1' | 'no', 'ch2' | 'no'}
  %% Unique:
  %%    _29
  _102 = bif:'=:=' _29, `{no,no}`
  br _102, ^102, ^91

102:
  %% guard_SUITE.erl:2663
  %% Result type:
  %%    {'ch1' | 'no', 'ch2' | 'no'}
  _30 = call (`before_and_inside_if_2`/3), `[]`, `[]`, `blah`

  %% Unique:
  %%    _30
  _92 = succeeded:body _30
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    _30 => {'ch1' | 'no', 'ch2' | 'no'}
  %% Unique:
  %%    _30
  _100 = bif:'=:=' _30, `{ch1,no}`
  br _100, ^100, ^94

100:
  %% guard_SUITE.erl:2664
  %% Result type:
  %%    {'ch1' | 'no', 'ch2' | 'no'}
  _31 = call (`before_and_inside_if_2`/3), `[]`, `[]`, `xx`

  %% Unique:
  %%    _31
  _95 = succeeded:body _31
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    _31 => {'ch1' | 'no', 'ch2' | 'no'}
  %% Unique:
  %%    _31
  _98 = bif:'=:=' _31, `{no,ch2}`
  br _98, ^98, ^97

98:
  %% Result type:
  %%    'ok'
  ret `ok`

97:
  %% guard_SUITE.erl:2664
  %% Unique:
  %%    _31
  _32 = match_fail `badmatch`, _31

  %% Unique:
  %%    _32
  _99 = succeeded:body _32
  br ^1

94:
  %% guard_SUITE.erl:2663
  %% Unique:
  %%    _30
  _33 = match_fail `badmatch`, _30

  %% Unique:
  %%    _33
  _101 = succeeded:body _33
  br ^1

91:
  %% guard_SUITE.erl:2662
  %% Unique:
  %%    _29
  _34 = match_fail `badmatch`, _29

  %% Unique:
  %%    _34
  _103 = succeeded:body _34
  br ^1

88:
  %% guard_SUITE.erl:2661
  %% Unique:
  %%    _28
  _35 = match_fail `badmatch`, _28

  %% Unique:
  %%    _35
  _105 = succeeded:body _35
  br ^1

85:
  %% guard_SUITE.erl:2660
  %% Unique:
  %%    _27
  _36 = match_fail `badmatch`, _27

  %% Unique:
  %%    _36
  _107 = succeeded:body _36
  br ^1

82:
  %% guard_SUITE.erl:2659
  %% Unique:
  %%    _26
  _37 = match_fail `badmatch`, _26

  %% Unique:
  %%    _37
  _109 = succeeded:body _37
  br ^1

79:
  %% guard_SUITE.erl:2658
  %% Unique:
  %%    _25
  _38 = match_fail `badmatch`, _25

  %% Unique:
  %%    _38
  _111 = succeeded:body _38
  br ^1

76:
  %% guard_SUITE.erl:2657
  %% Unique:
  %%    _24
  _39 = match_fail `badmatch`, _24

  %% Unique:
  %%    _39
  _113 = succeeded:body _39
  br ^1

73:
  %% guard_SUITE.erl:2655
  _40 = match_fail `badmatch`, `no`

  %% Unique:
  %%    _40
  _116 = succeeded:body _40
  br ^1

70:
  %% guard_SUITE.erl:2654
  _41 = match_fail `badmatch`, `no`

  %% Unique:
  %%    _41
  _119 = succeeded:body _41
  br ^1

67:
  %% guard_SUITE.erl:2653
  _42 = match_fail `badmatch`, `no`

  %% Unique:
  %%    _42
  _122 = succeeded:body _42
  br ^1

64:
  %% guard_SUITE.erl:2652
  _43 = match_fail `badmatch`, `yes`

  %% Unique:
  %%    _43
  _125 = succeeded:body _43
  br ^1

1:
  _48 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _48
}

%% guard_SUITE.erl:2669
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list('a')
%%    _1 =>
%%     list('b')
%%    _2 =>
%%     'delete' | 'x'
function `guard_SUITE`:`before_and_inside_if`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:2670
  %% Argument types:
  %%    _0 => list('a')
  %% Unique:
  %%    _0
  Do1 = bif:'=/=' _0, `[]`

  %% guard_SUITE.erl:2671
  %% Argument types:
  %%    _1 => list('b')
  %% Unique:
  %%    _1
  Do2 = bif:'=/=' _1, `[]`
  br Do1, ^23, ^32

32:
  br Do2, ^17, ^33

33:
  %% guard_SUITE.erl:2677
  %% Argument types:
  %%    _2 => 'delete' | 'x'
  %% Unique:
  %%    _2
  _8 = bif:'=:=' _2, `delete`
  br _8, ^23, ^17

23:
  %% Result type:
  %%    'no'
  ret `no`

17:
  %% Result type:
  %%    'yes'
  ret `yes`
}

%% guard_SUITE.erl:2687
%% Counter = 70
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list('a')
%%    _1 =>
%%     list('b')
%%    _2 =>
%%     'blah' | 'xx'
function `guard_SUITE`:`before_and_inside_if_2`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:2688
  %% Argument types:
  %%    _0 => list('a')
  %% Unique:
  %%    _0
  Do1 = bif:'=/=' _0, `[]`

  %% guard_SUITE.erl:2689
  %% Argument types:
  %%    _1 => list('b')
  %% Unique:
  %%    _1
  Do2 = bif:'=/=' _1, `[]`
  br Do1, ^39, ^65

65:
  br Do2, ^33, ^66

66:
  %% guard_SUITE.erl:2691
  %% Argument types:
  %%    _2 => 'blah' | 'xx'
  %% Unique:
  %%    _2
  _8 = bif:'=:=' _2, `blah`
  br _8, ^39, ^33

39:
  br ^32

33:
  br ^32

32:
  _11 = phi { `no`, ^33 }, { `ch1`, ^39 }
  br Do1, ^47, ^54

54:
  br Do2, ^41, ^55

55:
  %% guard_SUITE.erl:2697
  %% Argument types:
  %%    _2 => 'blah' | 'xx'
  %% Unique:
  %%    _2
  _16 = bif:'=:=' _2, `xx`
  br _16, ^47, ^41

47:
  %% Argument types:
  %%    _11 => 'ch1' | 'no'
  %% Unique:
  %%    _11
  _69 = put_tuple _11, `ch2`
  %% Result type:
  %%    {'ch1' | 'no', 'ch2'}
  %% Unique:
  %%    _69
  ret _69

41:
  %% Argument types:
  %%    _11 => 'ch1' | 'no'
  %% Unique:
  %%    _11
  _68 = put_tuple _11, `no`
  %% Result type:
  %%    {'ch1' | 'no', 'no'}
  %% Unique:
  %%    _68
  ret _68
}

%% guard_SUITE.erl:2708
%% Counter = 164
%% bs_ensure_opt: true
function `guard_SUITE`:`scotland`() {
0:
  %% guard_SUITE.erl:2709
  %% Result type:
  %%    'million'
  _10 = call (`do_scotland`/1), `placed`

  %% Unique:
  %%    _10
  _35 = succeeded:body _10
  br _35, ^158, ^1

158:
  br ^161

161:
  _41 = new_try_tag `'catch'`
  br _41, ^39, ^40

39:
  %% guard_SUITE.erl:2710
  %% Result type:
  %%    none()
  _24 = call (`do_scotland`/1), `false`

  %% Aliased:
  %%    _24
  _43 = succeeded:body _24
  br ^40

40:
  %% Unique:
  %%    _41
  _46 = landingpad `'catch'`, _41

  %% Aliased:
  %%    _46
  _44 = extract _46, `0`
  br ^38

38:
  %% Aliased:
  %%    _44
  %% Unique:
  %%    _41
  _1 = catch_end _41, _44

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _106 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _106, ^103, ^49

103:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _11 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _100 = bif:is_tuple _11
  br _100, ^100, ^49

100:
  %% Argument types:
  %%    _11 => {...}
  %% Aliased:
  %%    _11
  _101 = bif:tuple_size _11

  %% Argument types:
  %%    _101 => 0..16777215
  %% Unique:
  %%    _101
  _102 = bif:'=:=' _101, `2`
  br _102, ^99, ^49

99:
  %% Argument types:
  %%    _11 => {any(), any()}
  %% Aliased:
  %%    _11
  _14 = get_tuple_element _11, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _98 = bif:'=:=' _14, `{badmatch,placed}`
  br _98, ^159, ^49

159:
  br ^162

162:
  _53 = new_try_tag `'catch'`
  br _53, ^51, ^52

51:
  %% guard_SUITE.erl:2711
  %% Result type:
  %%    none()
  _26 = call (`do_scotland`/1), `true`

  %% Aliased:
  %%    _26
  _55 = succeeded:body _26
  br ^52

52:
  %% Unique:
  %%    _53
  _58 = landingpad `'catch'`, _53

  %% Aliased:
  %%    _58
  _56 = extract _58, `0`
  br ^50

50:
  %% Aliased:
  %%    _56
  %% Unique:
  %%    _53
  _3 = catch_end _53, _56

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _94 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _94, ^91, ^61

91:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _15 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _88 = bif:is_tuple _15
  br _88, ^88, ^61

88:
  %% Argument types:
  %%    _15 => {...}
  %% Aliased:
  %%    _15
  _89 = bif:tuple_size _15

  %% Argument types:
  %%    _89 => 0..16777215
  %% Unique:
  %%    _89
  _90 = bif:'=:=' _89, `2`
  br _90, ^87, ^61

87:
  %% Argument types:
  %%    _15 => {any(), any()}
  %% Aliased:
  %%    _15
  _18 = get_tuple_element _15, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _86 = bif:'=:=' _18, `{badmatch,placed}`
  br _86, ^160, ^61

160:
  br ^163

163:
  _65 = new_try_tag `'catch'`
  br _65, ^63, ^64

63:
  %% guard_SUITE.erl:2712
  %% Result type:
  %%    none()
  _28 = call (`do_scotland`/1), `echo`

  %% Aliased:
  %%    _28
  _67 = succeeded:body _28
  br ^64

64:
  %% Unique:
  %%    _65
  _70 = landingpad `'catch'`, _65

  %% Aliased:
  %%    _70
  _68 = extract _70, `0`
  br ^62

62:
  %% Aliased:
  %%    _68
  %% Unique:
  %%    _65
  _5 = catch_end _65, _68

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _82 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _82, ^79, ^73

79:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _19 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _76 = bif:is_tuple _19
  br _76, ^76, ^73

76:
  %% Argument types:
  %%    _19 => {...}
  %% Aliased:
  %%    _19
  _77 = bif:tuple_size _19

  %% Argument types:
  %%    _77 => 0..16777215
  %% Unique:
  %%    _77
  _78 = bif:'=:=' _77, `2`
  br _78, ^75, ^73

75:
  %% Argument types:
  %%    _19 => {any(), any()}
  %% Aliased:
  %%    _19
  _22 = get_tuple_element _19, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _74 = bif:'=:=' _22, `{badmatch,placed}`
  br _74, ^74, ^73

74:
  %% Result type:
  %%    'ok'
  ret `ok`

73:
  %% guard_SUITE.erl:2712
  %% Aliased:
  %%    _5
  _29 = match_fail `badmatch`, _5

  %% Unique:
  %%    _29
  _85 = succeeded:body _29
  br ^1

61:
  %% guard_SUITE.erl:2711
  %% Aliased:
  %%    _3
  _30 = match_fail `badmatch`, _3

  %% Unique:
  %%    _30
  _97 = succeeded:body _30
  br ^1

49:
  %% guard_SUITE.erl:2710
  %% Aliased:
  %%    _1
  _31 = match_fail `badmatch`, _1

  %% Unique:
  %%    _31
  _109 = succeeded:body _31
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% guard_SUITE.erl:2715
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'echo' | 'false' | 'placed' | 'true'
function `guard_SUITE`:`do_scotland`(_0) {
0:
  %% Argument types:
  %%    _0 => 'echo' | 'false' | 'placed' | 'true'
  %% Unique:
  %%    _0
  _37 = bif:'=:=' _0, `placed`
  br _37, ^37, ^36

37:
  %% guard_SUITE.erl:2716
  %% Result type:
  %%    'million'
  _18 = call (`found`/2), `placed`, `placed`

  %% Unique:
  %%    _18
  _38 = succeeded:body _18
  br _38, ^38, ^1

38:
  %% Result type:
  %%    'million'
  %% Unique:
  %%    _18
  ret _18

36:
  %% guard_SUITE.erl:2722
  _19 = match_fail `badmatch`, `placed`

  %% Unique:
  %%    _19
  _39 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% guard_SUITE.erl:2724
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'placed'
%%    _1 =>
%%     'placed'
function `guard_SUITE`:`found`(_0, _1) {
0:
  %% Result type:
  %%    'million'
  ret `million`
}

%% guard_SUITE.erl:2728
%% Counter = 131
%% bs_ensure_opt: true
function `guard_SUITE`:`y_registers`() {
0:
  br ^129

129:
  _37 = new_try_tag `'catch'`
  br _37, ^35, ^36

35:
  %% guard_SUITE.erl:2729
  %% Result type:
  %%    none()
  _25 = call (`baker`/1), `valentine`

  %% Aliased:
  %%    _25
  _39 = succeeded:body _25
  br ^36

36:
  %% Unique:
  %%    _37
  _42 = landingpad `'catch'`, _37

  %% Aliased:
  %%    _42
  _40 = extract _42, `0`
  br ^34

34:
  %% Aliased:
  %%    _40
  %% Unique:
  %%    _37
  _0 = catch_end _37, _40

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _92 = is_tagged_tuple _0, `2`, `'EXIT'`
  br _92, ^89, ^45

89:
  %% Argument types:
  %%    _0 => {''EXIT'', any()}
  %% Aliased:
  %%    _0
  _10 = get_tuple_element _0, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _86 = is_tagged_tuple _10, `2`, `badarith`
  br _86, ^83, ^45

83:
  %% Argument types:
  %%    _10 => {'badarith', any()}
  %% Aliased:
  %%    _10
  _12 = get_tuple_element _10, `1`

  %% Aliased:
  %%    _12
  _82 = is_nonempty_list _12
  br _82, ^128, ^45

128:
  br ^130

130:
  _49 = new_try_tag `'catch'`
  br _49, ^47, ^48

47:
  %% guard_SUITE.erl:2730
  %% Result type:
  %%    none()
  _27 = call (`baker`/1), `clementine`

  %% Aliased:
  %%    _27
  _51 = succeeded:body _27
  br ^48

48:
  %% Unique:
  %%    _49
  _54 = landingpad `'catch'`, _49

  %% Aliased:
  %%    _54
  _52 = extract _54, `0`
  br ^46

46:
  %% Aliased:
  %%    _52
  %% Unique:
  %%    _49
  _2 = catch_end _49, _52

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _78 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _78, ^75, ^57

75:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _16 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _72 = is_tagged_tuple _16, `2`, `badarith`
  br _72, ^69, ^57

69:
  %% Argument types:
  %%    _16 => {'badarith', any()}
  %% Aliased:
  %%    _16
  _18 = get_tuple_element _16, `1`

  %% Aliased:
  %%    _18
  _68 = is_nonempty_list _18
  br _68, ^96, ^57

96:
  %% guard_SUITE.erl:2732
  %% Result type:
  %%    {'not_ok', 'true'} | {'ok', 'false'}
  _22 = call (`potter`/1), `[]`

  %% Unique:
  %%    _22
  _58 = succeeded:body _22
  br _58, ^58, ^1

58:
  %% Argument types:
  %%    _22 => {'not_ok', 'true'} | {'ok', 'false'}
  %% Unique:
  %%    _22
  _66 = bif:'=:=' _22, `{not_ok,true}`
  br _66, ^66, ^60

66:
  %% guard_SUITE.erl:2733
  %% Result type:
  %%    {'not_ok', 'true'} | {'ok', 'false'}
  _23 = call (`potter`/1), `[{encoding,any}]`

  %% Unique:
  %%    _23
  _61 = succeeded:body _23
  br _61, ^61, ^1

61:
  %% Argument types:
  %%    _23 => {'not_ok', 'true'} | {'ok', 'false'}
  %% Unique:
  %%    _23
  _64 = bif:'=:=' _23, `{ok,false}`
  br _64, ^64, ^63

64:
  %% Result type:
  %%    'ok'
  ret `ok`

63:
  %% guard_SUITE.erl:2733
  _28 = match_fail `badmatch`, `{not_ok,true}`

  %% Unique:
  %%    _28
  _65 = succeeded:body _28
  br ^1

60:
  %% guard_SUITE.erl:2732
  _29 = match_fail `badmatch`, `{ok,false}`

  %% Unique:
  %%    _29
  _67 = succeeded:body _29
  br ^1

57:
  %% guard_SUITE.erl:2730
  %% Aliased:
  %%    _2
  _30 = match_fail `badmatch`, _2

  %% Unique:
  %%    _30
  _81 = succeeded:body _30
  br ^1

45:
  %% guard_SUITE.erl:2729
  %% Aliased:
  %%    _0
  _31 = match_fail `badmatch`, _0

  %% Unique:
  %%    _31
  _95 = succeeded:body _31
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% guard_SUITE.erl:2738
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'clementine' | 'valentine'
function `guard_SUITE`:`baker`(_0) {
0:
  %% guard_SUITE.erl:2739
  %% Argument types:
  %%    _0 => 'clementine' | 'valentine'
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `valentine`

  %% guard_SUITE.erl:2739
  %% Argument types:
  %%    _5 => 'false' | 'true'
  %% Unique:
  %%    _5
  _13 = bif:'+' _5, `[]`

  %% Unique:
  %%    _13
  _24 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% guard_SUITE.erl:2748
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list({'encoding', 'any'})
function `guard_SUITE`:`potter`(_0) {
0:
  %% guard_SUITE.erl:2749
  %% Unique:
  %%    _0
  _1 = call (`lists`:`keyfind`/3), `encoding`, `1`, _0

  %% Aliased:
  %%    _1
  _14 = succeeded:body _1
  br _14, ^14, ^1

14:
  %% guard_SUITE.erl:2749
  %% Argument types:
  %%    _1 => 'false' | {'encoding', ...}
  %% Aliased:
  %%    _1
  Raw = bif:'=:=' _1, `false`
  br Raw, ^16, ^18

16:
  %% Result type:
  %%    {'not_ok', 'true'}
  ret `{not_ok,true}`

18:
  %% Result type:
  %%    {'ok', 'false'}
  ret `{ok,false}`

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:2756
%% Counter = 114
%% bs_ensure_opt: true
function `guard_SUITE`:`protected`() {
0:
  br ^112

112:
  _28 = new_try_tag `'catch'`
  br _28, ^26, ^27

26:
  %% guard_SUITE.erl:2757
  %% Result type:
  %%    none()
  _17 = call (`photographs`/2), `{1,surprise,true}`, `opinions`

  %% Aliased:
  %%    _17
  _30 = succeeded:body _17
  br ^27

27:
  %% Unique:
  %%    _28
  _33 = landingpad `'catch'`, _28

  %% Aliased:
  %%    _33
  _31 = extract _33, `0`
  br ^25

25:
  %% Aliased:
  %%    _31
  %% Unique:
  %%    _28
  _0 = catch_end _28, _31

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _76 = is_tagged_tuple _0, `2`, `'EXIT'`
  br _76, ^73, ^36

73:
  %% Argument types:
  %%    _0 => {''EXIT'', any()}
  %% Aliased:
  %%    _0
  _7 = get_tuple_element _0, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _70 = is_tagged_tuple _7, `2`, `if_clause`
  br _70, ^67, ^36

67:
  %% guard_SUITE.erl:2759
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  _11 = call (`welcome`/1), `{perfect,true}`

  %% Unique:
  %%    _11
  _37 = succeeded:body _11
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _11 => {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  %% Unique:
  %%    _11
  _65 = bif:'=:=' _11, `{{true}}`
  br _65, ^111, ^39

111:
  br ^113

113:
  _43 = new_try_tag `'catch'`
  br _43, ^41, ^42

41:
  %% guard_SUITE.erl:2760
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  _19 = call (`welcome`/1), `{perfect,false}`

  %% Unique:
  %%    _19
  _45 = succeeded:body _19
  br _45, ^45, ^42

45:
  br ^40

42:
  %% Unique:
  %%    _43
  _48 = landingpad `'catch'`, _43

  %% Aliased:
  %%    _48
  _46 = extract _48, `0`
  br ^40

40:
  _49 = phi { _46, ^42 }, { _19, ^45 }

  %% Aliased:
  %%    _49
  %% Unique:
  %%    _43
  _3 = catch_end _43, _49

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _61 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _61, ^58, ^51

58:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _12 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _55 = is_tagged_tuple _12, `2`, `if_clause`
  br _55, ^52, ^51

52:
  %% Result type:
  %%    'ok'
  ret `ok`

51:
  %% guard_SUITE.erl:2760
  %% Aliased:
  %%    _3
  _20 = match_fail `badmatch`, _3

  %% Unique:
  %%    _20
  _64 = succeeded:body _20
  br ^1

39:
  %% guard_SUITE.erl:2759
  %% Unique:
  %%    _11
  _21 = match_fail `badmatch`, _11

  %% Unique:
  %%    _21
  _66 = succeeded:body _21
  br ^1

36:
  %% guard_SUITE.erl:2757
  %% Aliased:
  %%    _0
  _22 = match_fail `badmatch`, _0

  %% Unique:
  %%    _22
  _79 = succeeded:body _22
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% guard_SUITE.erl:2763
%% Counter = 47
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {1, 'surprise', 'true'}
%%    _1 =>
%%     'opinions'
function `guard_SUITE`:`photographs`(_0, _1) {
0:
  %% guard_SUITE.erl:2764
  _17 = match_fail `if_clause`

  %% Unique:
  %%    _17
  _32 = succeeded:body _17
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% guard_SUITE.erl:2769
%% Counter = 47
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'perfect', 'false' | 'true'}
function `guard_SUITE`:`welcome`(_0) {
0:
  %% Argument types:
  %%    _0 => {'perfect', 'false' | 'true'}
  %% Unique:
  %%    _0
  _9 = get_tuple_element _0, `1`
  br _9, ^28, ^22

28:
  %% Argument types:
  %%    _9 => 'false' | 'true'
  %% Unique:
  %%    _9
  _12 = put_tuple _9

  %% guard_SUITE.erl:2772
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _12
  _7 = call (`id`/1), _12

  %% Aliased:
  %%    _7
  _29 = succeeded:body _7
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    _7 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _15 = put_tuple _7
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  %% Unique:
  %%    _15
  ret _15

22:
  %% guard_SUITE.erl:2770
  _16 = match_fail `if_clause`

  %% Unique:
  %%    _16
  _30 = succeeded:body _16
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% guard_SUITE.erl:2775
%% Counter = 11
%% bs_ensure_opt: true
function `guard_SUITE`:`maps`() {
0:
  %% guard_SUITE.erl:2776
  %% Result type:
  %%    'ok'
  _1 = call (`evidence`/1), `#{0 => 42}`

  %% Unique:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _1
  ret _1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% guard_SUITE.erl:2779
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{0=>42}
function `guard_SUITE`:`evidence`(_0) {
0:
  %% Argument types:
  %%    _0 => #{0=>42}
  %% Unique:
  %%    _0
  _13 = has_map_field _0, `0`
  br _13, ^13, ^12

13:
  %% guard_SUITE.erl:2779
  _2 = put_map `assoc`, `#{}`, `[]`, `42`

  %% guard_SUITE.erl:2779
  %% Argument types:
  %%    _2 => #{nil()=>42}
  %% Aliased:
  %%    _2
  _8 = bif:'=:=' _2, `#{[] => 42}`
  br _8, ^17, ^12

17:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% guard_SUITE.erl:2779
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-evidence/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% guard_SUITE.erl:2782
%% Counter = 65
%% bs_ensure_opt: true
function `guard_SUITE`:`cover_shortcut_branches`() {
0:
  %% guard_SUITE.erl:2783
  %% Result type:
  %%    'error' | 'ok'
  _7 = call (`cover_shortcut_branches`/4), `{r1}`, `0`, `42`, `false`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    _7 => 'error' | 'ok'
  %% Unique:
  %%    _7
  _63 = bif:'=:=' _7, `ok`
  br _63, ^62, ^25

62:
  %% guard_SUITE.erl:2784
  %% Result type:
  %%    'error' | 'ok'
  _8 = call (`cover_shortcut_branches`/4), `{r1}`, `42`, `42`, `true`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    _8 => 'error' | 'ok'
  %% Unique:
  %%    _8
  _60 = bif:'=:=' _8, `ok`
  br _60, ^59, ^28

59:
  %% guard_SUITE.erl:2785
  %% Result type:
  %%    'error' | 'ok'
  _9 = call (`cover_shortcut_branches`/4), `{r1}`, `same`, `same`, `false`

  %% Unique:
  %%    _9
  _29 = succeeded:body _9
  br _29, ^29, ^1

29:
  %% Argument types:
  %%    _9 => 'error' | 'ok'
  %% Unique:
  %%    _9
  _57 = bif:'=:=' _9, `error`
  br _57, ^56, ^31

56:
  %% guard_SUITE.erl:2786
  %% Result type:
  %%    'error' | 'ok'
  _10 = call (`cover_shortcut_branches`/4), `{r1}`, `x`, `y`, `true`

  %% Unique:
  %%    _10
  _32 = succeeded:body _10
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %% Unique:
  %%    _10
  _54 = bif:'=:=' _10, `error`
  br _54, ^53, ^34

53:
  %% guard_SUITE.erl:2787
  %% Result type:
  %%    'error' | 'ok'
  _11 = call (`cover_shortcut_branches`/4), `{r2}`, `0`, `42`, `false`

  %% Unique:
  %%    _11
  _35 = succeeded:body _11
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    _11 => 'error' | 'ok'
  %% Unique:
  %%    _11
  _51 = bif:'=:=' _11, `error`
  br _51, ^50, ^37

50:
  %% guard_SUITE.erl:2788
  %% Result type:
  %%    'error'
  _12 = call (`cover_shortcut_branches`/4), `{}`, `0`, `42`, `false`

  %% Unique:
  %%    _12
  _38 = succeeded:body _12
  br _38, ^47, ^1

47:
  %% guard_SUITE.erl:2789
  %% Result type:
  %%    'error'
  _13 = call (`cover_shortcut_branches`/4), `not_tuple`, `0`, `42`, `false`

  %% Unique:
  %%    _13
  _41 = succeeded:body _13
  br _41, ^44, ^1

44:
  %% Result type:
  %%    'ok'
  ret `ok`

37:
  %% guard_SUITE.erl:2787
  _16 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _16
  _52 = succeeded:body _16
  br ^1

34:
  %% guard_SUITE.erl:2786
  _17 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _17
  _55 = succeeded:body _17
  br ^1

31:
  %% guard_SUITE.erl:2785
  _18 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _18
  _58 = succeeded:body _18
  br ^1

28:
  %% guard_SUITE.erl:2784
  _19 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _19
  _61 = succeeded:body _19
  br ^1

25:
  %% guard_SUITE.erl:2783
  _20 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _20
  _64 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% guard_SUITE.erl:2792
%% Counter = 31
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'not_tuple' | {...}
%%    _1 =>
%%     'same' | 'x' | 0..42
%%    _2 =>
%%     'same' | 'y' | 42
%%    _3 =>
%%     'false' | 'true'
function `guard_SUITE`:`cover_shortcut_branches`(_0, _1, _2, _3) {
0:
  %% guard_SUITE.erl:2796
  %% Argument types:
  %%    _0 => 'not_tuple' | {...}
  %% Unique:
  %%    _0
  _5 = bif:element `1`, _0

  %% Aliased:
  %%    _5
  _19 = succeeded:guard _5
  br _19, ^19, ^17

19:
  %% guard_SUITE.erl:2796
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _11 = bif:'=:=' _5, `r1`
  br _11, ^28, ^17

28:
  %% guard_SUITE.erl:2796
  %% Argument types:
  %%    _2 => 'same' | 'y' | 42
  %%    _1 => 'same' | 'x' | 0..42
  %% Unique:
  %%    _1, 
  %%    _2
  _9 = bif:'=:=' _2, _1

  %% guard_SUITE.erl:2796
  %% Argument types:
  %%    _9 => 'false' | 'true'
  %%    _3 => 'false' | 'true'
  %% Unique:
  %%    _3, 
  %%    _9
  _10 = bif:'=:=' _9, _3
  br _10, ^25, ^17

25:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2802
%% Counter = 38
%% bs_ensure_opt: true
function `guard_SUITE`:`wrong_order`() {
0:
  %% guard_SUITE.erl:2803
  %% Result type:
  %%    'error' | 'ok'
  _4 = call (`wrong_order`/2), `repeat_until_fail`, `true`

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    _4 => 'error' | 'ok'
  %% Unique:
  %%    _4
  _36 = bif:'=:=' _4, `ok`
  br _36, ^35, ^16

35:
  %% guard_SUITE.erl:2804
  %% Result type:
  %%    'error' | 'ok'
  _5 = call (`wrong_order`/2), `repeat_until_fail`, `whatever`

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    _5 => 'error' | 'ok'
  %% Unique:
  %%    _5
  _33 = bif:'=:=' _5, `ok`
  br _33, ^32, ^19

32:
  %% guard_SUITE.erl:2805
  %% Result type:
  %%    'error'
  _6 = call (`wrong_order`/2), `repeat_until_fail`, `false`

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br _20, ^29, ^1

29:
  %% guard_SUITE.erl:2806
  %% Result type:
  %%    'error'
  _7 = call (`wrong_order`/2), `nope`, `true`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br _23, ^26, ^1

26:
  %% Result type:
  %%    'ok'
  ret `ok`

19:
  %% guard_SUITE.erl:2804
  _10 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _10
  _34 = succeeded:body _10
  br ^1

16:
  %% guard_SUITE.erl:2803
  _11 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _11
  _37 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:2809
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'nope' | 'repeat_until_fail'
%%    _1 =>
%%     'false' | 'true' | 'whatever'
function `guard_SUITE`:`wrong_order`(_0, _1) {
0:
  %% guard_SUITE.erl:2810
  %% Argument types:
  %%    _1 => 'false' | 'true' | 'whatever'
  %% Unique:
  %%    _1
  Parallel = bif:'=/=' _1, `false`

  %% guard_SUITE.erl:2811
  %% Argument types:
  %%    _0 => 'nope' | 'repeat_until_fail'
  %% Unique:
  %%    _0
  RepeatStop = bif:'=:=' _0, `repeat_until_fail`
  br Parallel, ^17, ^12

17:
  br RepeatStop, ^18, ^12

18:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2819
%% Counter = 194
%% bs_ensure_opt: true
function `guard_SUITE`:`megaco`() {
0:
  %% guard_SUITE.erl:2820
  %% Result type:
  %%    'error' | 'ok'
  _24 = call (`megaco`/2), `'NULL'`, `0`

  %% Unique:
  %%    _24
  _68 = succeeded:body _24
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    _24 => 'error' | 'ok'
  %% Unique:
  %%    _24
  _192 = bif:'=:=' _24, `ok`
  br _192, ^191, ^70

191:
  %% guard_SUITE.erl:2821
  %% Result type:
  %%    'error' | 'ok'
  _25 = call (`megaco`/2), `'NULL'`, `7`

  %% Unique:
  %%    _25
  _71 = succeeded:body _25
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _25 => 'error' | 'ok'
  %% Unique:
  %%    _25
  _189 = bif:'=:=' _25, `ok`
  br _189, ^188, ^73

188:
  %% guard_SUITE.erl:2822
  %% Result type:
  %%    'error' | 'ok'
  _26 = call (`megaco`/2), `'NULL'`, `15`

  %% Unique:
  %%    _26
  _74 = succeeded:body _26
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _26 => 'error' | 'ok'
  %% Unique:
  %%    _26
  _186 = bif:'=:=' _26, `ok`
  br _186, ^185, ^76

185:
  %% guard_SUITE.erl:2823
  %% Result type:
  %%    'error' | 'ok'
  _27 = call (`megaco`/2), `'NULL'`, `asn1_NOVALUE`

  %% Unique:
  %%    _27
  _77 = succeeded:body _27
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    _27 => 'error' | 'ok'
  %% Unique:
  %%    _27
  _183 = bif:'=:=' _27, `ok`
  br _183, ^182, ^79

182:
  %% guard_SUITE.erl:2824
  %% Result type:
  %%    'error' | 'ok'
  _28 = call (`megaco`/2), `asn1_NOVALUE`, `0`

  %% Unique:
  %%    _28
  _80 = succeeded:body _28
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _28 => 'error' | 'ok'
  %% Unique:
  %%    _28
  _180 = bif:'=:=' _28, `ok`
  br _180, ^179, ^82

179:
  %% guard_SUITE.erl:2825
  %% Result type:
  %%    'error' | 'ok'
  _29 = call (`megaco`/2), `asn1_NOVALUE`, `7`

  %% Unique:
  %%    _29
  _83 = succeeded:body _29
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _29 => 'error' | 'ok'
  %% Unique:
  %%    _29
  _177 = bif:'=:=' _29, `ok`
  br _177, ^176, ^85

176:
  %% guard_SUITE.erl:2826
  %% Result type:
  %%    'error' | 'ok'
  _30 = call (`megaco`/2), `asn1_NOVALUE`, `15`

  %% Unique:
  %%    _30
  _86 = succeeded:body _30
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _30 => 'error' | 'ok'
  %% Unique:
  %%    _30
  _174 = bif:'=:=' _30, `ok`
  br _174, ^173, ^88

173:
  %% guard_SUITE.erl:2827
  %% Result type:
  %%    'error' | 'ok'
  _31 = call (`megaco`/2), `asn1_NOVALUE`, `asn1_NOVALUE`

  %% Unique:
  %%    _31
  _89 = succeeded:body _31
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    _31 => 'error' | 'ok'
  %% Unique:
  %%    _31
  _171 = bif:'=:=' _31, `ok`
  br _171, ^170, ^91

170:
  %% guard_SUITE.erl:2829
  %% Result type:
  %%    'error'
  _32 = call (`megaco`/2), `bad`, `0`

  %% Unique:
  %%    _32
  _92 = succeeded:body _32
  br _92, ^167, ^1

167:
  %% guard_SUITE.erl:2830
  %% Result type:
  %%    'error'
  _33 = call (`megaco`/2), `bad`, `7`

  %% Unique:
  %%    _33
  _95 = succeeded:body _33
  br _95, ^164, ^1

164:
  %% guard_SUITE.erl:2831
  %% Result type:
  %%    'error'
  _34 = call (`megaco`/2), `bad`, `15`

  %% Unique:
  %%    _34
  _98 = succeeded:body _34
  br _98, ^161, ^1

161:
  %% guard_SUITE.erl:2832
  %% Result type:
  %%    'error'
  _35 = call (`megaco`/2), `bad`, `asn1_NOVALUE`

  %% Unique:
  %%    _35
  _101 = succeeded:body _35
  br _101, ^158, ^1

158:
  %% guard_SUITE.erl:2834
  %% Result type:
  %%    'error'
  _36 = call (`megaco`/2), `'NULL'`, `not_integer`

  %% Unique:
  %%    _36
  _104 = succeeded:body _36
  br _104, ^155, ^1

155:
  %% guard_SUITE.erl:2835
  %% Result type:
  %%    'error'
  _37 = call (`megaco`/2), `'NULL'`, `-1`

  %% Unique:
  %%    _37
  _107 = succeeded:body _37
  br _107, ^152, ^1

152:
  %% guard_SUITE.erl:2836
  %% Result type:
  %%    'error'
  _38 = call (`megaco`/2), `'NULL'`, `16`

  %% Unique:
  %%    _38
  _110 = succeeded:body _38
  br _110, ^149, ^1

149:
  %% guard_SUITE.erl:2837
  %% Result type:
  %%    'error'
  _39 = call (`megaco`/2), `asn1_NOVALUE`, `not_integer`

  %% Unique:
  %%    _39
  _113 = succeeded:body _39
  br _113, ^146, ^1

146:
  %% guard_SUITE.erl:2838
  %% Result type:
  %%    'error'
  _40 = call (`megaco`/2), `asn1_NOVALUE`, `-1`

  %% Unique:
  %%    _40
  _116 = succeeded:body _40
  br _116, ^143, ^1

143:
  %% guard_SUITE.erl:2839
  %% Result type:
  %%    'error'
  _41 = call (`megaco`/2), `asn1_NOVALUE`, `16`

  %% Unique:
  %%    _41
  _119 = succeeded:body _41
  br _119, ^140, ^1

140:
  %% guard_SUITE.erl:2841
  %% Result type:
  %%    'error'
  _42 = call (`megaco`/2), `bad`, `bad`

  %% Unique:
  %%    _42
  _122 = succeeded:body _42
  br _122, ^137, ^1

137:
  %% guard_SUITE.erl:2842
  %% Result type:
  %%    'error'
  _43 = call (`megaco`/2), `bad`, `-1`

  %% Unique:
  %%    _43
  _125 = succeeded:body _43
  br _125, ^134, ^1

134:
  %% guard_SUITE.erl:2843
  %% Result type:
  %%    'error'
  _44 = call (`megaco`/2), `bad`, `42`

  %% Unique:
  %%    _44
  _128 = succeeded:body _44
  br _128, ^131, ^1

131:
  %% Result type:
  %%    'ok'
  ret `ok`

91:
  %% guard_SUITE.erl:2827
  _58 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _58
  _172 = succeeded:body _58
  br ^1

88:
  %% guard_SUITE.erl:2826
  _59 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _59
  _175 = succeeded:body _59
  br ^1

85:
  %% guard_SUITE.erl:2825
  _60 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _60
  _178 = succeeded:body _60
  br ^1

82:
  %% guard_SUITE.erl:2824
  _61 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _61
  _181 = succeeded:body _61
  br ^1

79:
  %% guard_SUITE.erl:2823
  _62 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _62
  _184 = succeeded:body _62
  br ^1

76:
  %% guard_SUITE.erl:2822
  _63 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _63
  _187 = succeeded:body _63
  br ^1

73:
  %% guard_SUITE.erl:2821
  _64 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _64
  _190 = succeeded:body _64
  br ^1

70:
  %% guard_SUITE.erl:2820
  _65 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _65
  _193 = succeeded:body _65
  br ^1

1:
  _66 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _66
}

%% guard_SUITE.erl:2847
%% Counter = 69
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     ''NULL'' | 'asn1_NOVALUE' | 'bad'
%%    _1 =>
%%     'asn1_NOVALUE' | 'bad' | 'not_integer' | -1..42
function `guard_SUITE`:`megaco`(_0, _1) {
0:
  %% Argument types:
  %%    
  switch _0, ^35, [
    { `'NULL'`, ^62 },
    { `asn1_NOVALUE`, ^62 }
  ]

62:
  %% guard_SUITE.erl:2849
  %% Argument types:
  %%    _1 => 'asn1_NOVALUE' | 'bad' | 'not_integer' | -1..42
  %% Unique:
  %%    _1
  _22 = bif:is_integer _1
  br _22, ^59, ^55

59:
  %% guard_SUITE.erl:2849
  %% Argument types:
  %%    _1 => -1..42
  %% Unique:
  %%    _1
  _9 = bif:'=<' `0`, _1

  %% guard_SUITE.erl:2849
  %% Argument types:
  %%    _1 => -1..42
  %% Unique:
  %%    _1
  _8 = bif:'=<' _1, `15`

  %% guard_SUITE.erl:2849
  %% Argument types:
  %%    _9 => 'false' | 'true'
  %%    _8 => 'false' | 'true'
  %% Unique:
  %%    _8, 
  %%    _9
  _27 = bif:'and' _9, _8
  br _27, ^54, ^55

55:
  %% guard_SUITE.erl:2850
  %% Argument types:
  %%    _1 => 'asn1_NOVALUE' | 'bad' | 'not_integer' | -1..42
  %% Unique:
  %%    _1
  _30 = bif:'=:=' _1, `asn1_NOVALUE`
  br _30, ^54, ^35

54:
  %% Result type:
  %%    'ok'
  ret `ok`

35:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2856
%% Counter = 21
%% bs_ensure_opt: true
function `guard_SUITE`:`looks_like_a_guard`() {
0:
  %% guard_SUITE.erl:2857
  %% Result type:
  %%    'ok'
  _2 = call (`looks_like_a_guard`/1), `0`

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^17, ^1

17:
  %% guard_SUITE.erl:2858
  %% Result type:
  %%    'ok'
  _3 = call (`looks_like_a_guard`/1), `1`

  %% Unique:
  %%    _3
  _11 = succeeded:body _3
  br _11, ^20, ^1

20:
  ret _3

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% guard_SUITE.erl:2861
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..1
function `guard_SUITE`:`looks_like_a_guard`(_0) {
0:
  %% guard_SUITE.erl:2862
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  GuessPosition = call (`id`/1), `42`

  %% Aliased:
  %%    GuessPosition
  _14 = succeeded:body GuessPosition
  br _14, ^17, ^1

17:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:2872
%% Counter = 162
%% bs_ensure_opt: true
function `guard_SUITE`:`fail_in_guard`() {
0:
  %% guard_SUITE.erl:2873
  %% Result type:
  %%    'false'
  _62 = call (`struct_or_map`/2), `a`, `"foo"`

  %% Unique:
  %%    _62
  _103 = succeeded:body _62
  br _103, ^154, ^1

154:
  %% guard_SUITE.erl:2874
  %% Result type:
  %%    'false'
  _63 = call (`struct_or_map`/2), `a`, `foo`

  %% Unique:
  %%    _63
  _106 = succeeded:body _63
  br _106, ^151, ^1

151:
  %% guard_SUITE.erl:2875
  %% Result type:
  %%    'false'
  _64 = call (`struct_or_map`/2), `#{}`, `"foo"`

  %% Unique:
  %%    _64
  _109 = succeeded:body _64
  br _109, ^148, ^1

148:
  %% guard_SUITE.erl:2876
  %% Result type:
  %%    'false' | 'true'
  _65 = call (`struct_or_map`/2), `#{}`, `foo`

  %% Unique:
  %%    _65
  _112 = succeeded:body _65
  br _112, ^112, ^1

112:
  br _65, ^157, ^114

157:
  %% guard_SUITE.erl:2878
  %% Result type:
  %%    'false'
  %% Argument types:
  %%    (`'-fail_in_guard/0-fun-0-'`/0) => fun(() -> 'false')
  _66 = call (`'-fail_in_guard/0-fun-0-'`/0)

  %% Unique:
  %%    _66
  _115 = succeeded:body _66
  br _115, ^158, ^1

158:
  %% guard_SUITE.erl:2891
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-fail_in_guard/0-fun-1-'`/0) => fun(() -> 'error')
  _67 = call (`'-fail_in_guard/0-fun-1-'`/0)

  %% Unique:
  %%    _67
  _118 = succeeded:body _67
  br _118, ^159, ^1

159:
  %% guard_SUITE.erl:2894
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-fail_in_guard/0-fun-2-'`/0) => fun(() -> 'error')
  _71 = call (`'-fail_in_guard/0-fun-2-'`/0)

  %% Unique:
  %%    _71
  _121 = succeeded:body _71
  br _121, ^160, ^1

160:
  %% guard_SUITE.erl:2899
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-fail_in_guard/0-fun-3-'`/0) => fun(() -> 'error')
  _78 = call (`'-fail_in_guard/0-fun-3-'`/0)

  %% Unique:
  %%    _78
  _124 = succeeded:body _78
  br _124, ^161, ^1

161:
  %% guard_SUITE.erl:2902
  %% Result type:
  %%    'error'
  %% Argument types:
  %%    (`'-fail_in_guard/0-fun-4-'`/0) => fun(() -> 'error')
  _83 = call (`'-fail_in_guard/0-fun-4-'`/0)

  %% Unique:
  %%    _83
  _127 = succeeded:body _83
  br _127, ^130, ^1

130:
  %% Result type:
  %%    'ok'
  ret `ok`

114:
  %% guard_SUITE.erl:2876
  _97 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _97
  _147 = succeeded:body _97
  br ^1

1:
  _101 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _101
}

%% guard_SUITE.erl:2911
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | #{}
%%    _1 =>
%%     'foo' | nonempty_list(102..111)
function `guard_SUITE`:`struct_or_map`(_0, _1) {
0:
  %% guard_SUITE.erl:2912
  %% Argument types:
  %%    _0 => 'a' | #{}
  %% Unique:
  %%    _0
  _13 = bif:is_map _0
  br _13, ^42, ^28

42:
  %% guard_SUITE.erl:2912
  %% Argument types:
  %%    _1 => 'foo' | nonempty_list(102..111)
  %% Unique:
  %%    _1
  _15 = bif:is_atom _1
  ret _15

28:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:2917
%% Counter = 67
%% bs_ensure_opt: true
function `guard_SUITE`:`in_catch`() {
0:
  %% guard_SUITE.erl:2918
  _7 = call (`in_catch`/1), `true`

  %% Aliased:
  %%    _7
  _27 = succeeded:body _7
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _64 = bif:'=:=' _7, `ok`
  br _64, ^63, ^29

63:
  %% guard_SUITE.erl:2919
  _8 = call (`in_catch`/1), `false`

  %% Aliased:
  %%    _8
  _30 = succeeded:body _8
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _59 = is_tagged_tuple _8, `2`, `'EXIT'`
  br _59, ^56, ^32

56:
  %% Argument types:
  %%    _8 => {''EXIT'', any()}
  %% Aliased:
  %%    _8
  _9 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _53 = bif:is_tuple _9
  br _53, ^53, ^32

53:
  %% Argument types:
  %%    _9 => {...}
  %% Aliased:
  %%    _9
  _54 = bif:tuple_size _9

  %% Argument types:
  %%    _54 => 0..16777215
  %% Unique:
  %%    _54
  _55 = bif:'=:=' _54, `2`
  br _55, ^52, ^32

52:
  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _12 = get_tuple_element _9, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _51 = bif:'=:=' _12, `{case_clause,false}`
  br _51, ^51, ^32

51:
  %% Argument types:
  %%    _9 => {{'case_clause', 'false'}, any()}
  %% Aliased:
  %%    _9
  _11 = get_tuple_element _9, `1`

  %% Aliased:
  %%    _11
  _50 = is_nonempty_list _11
  br _50, ^66, ^32

66:
  %% guard_SUITE.erl:2920
  _15 = call (`in_catch`/1), `any`

  %% Aliased:
  %%    _15
  _33 = succeeded:body _15
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _46 = is_tagged_tuple _15, `2`, `'EXIT'`
  br _46, ^43, ^35

43:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _40 = is_tagged_tuple _16, `2`, `badarg`
  br _40, ^37, ^35

37:
  %% Argument types:
  %%    _16 => {'badarg', any()}
  %% Aliased:
  %%    _16
  _18 = get_tuple_element _16, `1`

  %% Aliased:
  %%    _18
  _36 = is_nonempty_list _18
  br _36, ^36, ^35

36:
  %% Result type:
  %%    'ok'
  ret `ok`

35:
  %% guard_SUITE.erl:2920
  %% Aliased:
  %%    _15
  _22 = match_fail `badmatch`, _15

  %% Unique:
  %%    _22
  _49 = succeeded:body _22
  br ^1

32:
  %% guard_SUITE.erl:2919
  %% Aliased:
  %%    _8
  _23 = match_fail `badmatch`, _8

  %% Unique:
  %%    _23
  _62 = succeeded:body _23
  br ^1

29:
  %% guard_SUITE.erl:2918
  %% Aliased:
  %%    _7
  _24 = match_fail `badmatch`, _7

  %% Unique:
  %%    _24
  _65 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% guard_SUITE.erl:2923
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`in_catch`(_0) {
0:
  br ^40

40:
  _12 = new_try_tag `'catch'`
  br _12, ^10, ^11

10:
  %% guard_SUITE.erl:2925
  %% Argument types:
  %%    _0 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _0
  _2 = bif:'or' _0, `false`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^11

14:
  br _2, ^17, ^16

17:
  br ^9

16:
  %% guard_SUITE.erl:2925
  _6 = match_fail `case_clause`, `false`

  %% Unique:
  %%    _6
  _19 = succeeded:body _6
  br ^11

11:
  %% Unique:
  %%    _12
  _22 = landingpad `'catch'`, _12

  %% Aliased:
  %%    _22
  _20 = extract _22, `0`
  br ^9

9:
  _23 = phi { _20, ^11 }, { `ok`, ^17 }

  %% Aliased:
  %%    _23
  %% Unique:
  %%    _12
  _3 = catch_end _12, _23
  %% Aliased:
  %%    _3
  ret _3
}

%% guard_SUITE.erl:2929
%% Counter = 34
%% bs_ensure_opt: true
function `guard_SUITE`:`recv_semi`() {
0:
  br ^11

11:
  %% guard_SUITE.erl:2930
  _8 = peek_message `none`

  %% Aliased:
  %%    _8
  _27 = succeeded:guard _8
  br _27, ^25, ^26

25:
  _13 = recv_next
  br ^11

26:
  _20 = wait_timeout `0`

  %% Unique:
  %%    _20
  _21 = succeeded:body _20
  br _21, ^21, ^1

21:
  br _20, ^18, ^24

18:
  %% guard_SUITE.erl:2930
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _7 = call (`id`/1), `timeout`

  %% Aliased:
  %%    _7
  _28 = succeeded:body _7
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _7 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _32 = bif:'=:=' _7, `timeout`
  br _32, ^31, ^30

31:
  %% Result type:
  %%    'timeout'
  %% Aliased:
  %%    _7
  ret _7

30:
  %% guard_SUITE.erl:2930
  %% Aliased:
  %%    _7
  _15 = match_fail `badmatch`, _7

  %% Unique:
  %%    _15
  _33 = succeeded:body _15
  br ^1

24:
  br ^11

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% guard_SUITE.erl:2937
%% Counter = 29
%% bs_ensure_opt: true
function `guard_SUITE`:`andalso_repeated_var`() {
0:
  %% guard_SUITE.erl:2938
  %% Result type:
  %%    'ok'
  _3 = call (`andalso_repeated_var`/1), `true`

  %% Unique:
  %%    _3
  _11 = succeeded:body _3
  br _11, ^26, ^1

26:
  %% guard_SUITE.erl:2939
  %% Result type:
  %%    'error'
  _4 = call (`andalso_repeated_var`/1), `false`

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br _14, ^23, ^1

23:
  %% guard_SUITE.erl:2940
  %% Result type:
  %%    'error'
  _5 = call (`andalso_repeated_var`/1), `[not_boolean]`

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br _17, ^20, ^1

20:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:2943
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | nonempty_list('not_boolean')
function `guard_SUITE`:`andalso_repeated_var`(_0) {
0:
  %% Unique:
  %%    _0
  _17 = bif:'=:=' _0, `true`
  br _17, ^16, ^10

16:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2948
%% Counter = 38
%% bs_ensure_opt: true
function `guard_SUITE`:`erl1246`() {
0:
  %% guard_SUITE.erl:2949
  %% Result type:
  %%    'false' | 'true'
  _4 = call (`erl1246`/2), `{erl1246,0}`, `#{cid => 1131}`

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br _14, ^14, ^1

14:
  br _4, ^16, ^35

16:
  %% guard_SUITE.erl:2949
  _11 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _11
  _37 = succeeded:body _11
  br ^1

35:
  %% guard_SUITE.erl:2950
  %% Result type:
  %%    'false' | 'true'
  _5 = call (`erl1246`/2), `{erl1246,12}`, `#{cid => 1131}`

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br _17, ^17, ^1

17:
  br _5, ^19, ^32

19:
  %% guard_SUITE.erl:2950
  _10 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _10
  _34 = succeeded:body _10
  br ^1

32:
  %% guard_SUITE.erl:2951
  %% Result type:
  %%    'false' | 'true'
  _6 = call (`erl1246`/2), `{erl1246,12}`, `#{cid => 9502}`

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br _20, ^20, ^1

20:
  br _6, ^22, ^29

22:
  %% guard_SUITE.erl:2951
  _9 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _9
  _31 = succeeded:body _9
  br ^1

29:
  %% guard_SUITE.erl:2952
  %% Result type:
  %%    'false' | 'true'
  _7 = call (`erl1246`/2), `{erl1246,0}`, `#{cid => 9502}`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br _23, ^23, ^1

23:
  br _7, ^26, ^25

26:
  %% Result type:
  %%    'ok'
  ret `ok`

25:
  %% guard_SUITE.erl:2952
  _8 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _8
  _28 = succeeded:body _8
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:2955
%% Counter = 68
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'erl1246', 0..12}
%%    _1 =>
%%     #{'cid'=>1131..9502}
function `guard_SUITE`:`erl1246`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => #{'cid'=>1131..9502}
  %% Aliased:
  %%    _1
  _13 = get_map_element _1, `cid`

  %% Aliased:
  %%    _13
  _30 = succeeded:guard _13
  br _30, ^30, ^29

30:
  %% guard_SUITE.erl:2956
  %% Result type:
  %%    {9502, {112, 45}}
  _14 = call (`erl1246_conf`/1), `gift_coll`

  %% Unique:
  %%    _14
  _31 = succeeded:body _14
  br _31, ^67, ^1

67:
  %% guard_SUITE.erl:2957
  %% Result type:
  %%    12
  _3 = call (`erl1246_conf`/1), `transform_id`

  %% Unique:
  %%    _3
  _43 = succeeded:body _3
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _0 => {'erl1246', 0..12}
  %% Unique:
  %%    _0
  _18 = get_tuple_element _0, `1`

  %% guard_SUITE.erl:2957
  %% Argument types:
  %%    _18 => 0..12
  %% Unique:
  %%    _18
  IsTranStat = bif:'=:=' _18, `12`

  %% guard_SUITE.erl:2960
  %% Argument types:
  %%    _13 => 1131..9502
  %% Unique:
  %%    _13
  _20 = bif:'=:=' _13, `9502`
  br _20, ^61, ^45

61:
  br IsTranStat, ^45, ^52

52:
  %% Result type:
  %%    'true'
  ret `true`

45:
  %% Result type:
  %%    'false'
  ret `false`

29:
  %% guard_SUITE.erl:2955
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-erl1246/2-',2}}
  _26 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _26
  _59 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% guard_SUITE.erl:2966
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'gift_coll' | 'transform_id'
function `guard_SUITE`:`erl1246_conf`(_0) {
0:
  %% Unique:
  %%    _0
  _8 = bif:'=:=' _0, `transform_id`
  br _8, ^6, ^7

6:
  %% Result type:
  %%    12
  ret `12`

7:
  %% Result type:
  %%    {9502, {112, 45}}
  ret `{9502,{112,45}}`
}

%% guard_SUITE.erl:2970
%% Counter = 218
%% bs_ensure_opt: true
function `guard_SUITE`:`erl1253`() {
0:
  %% guard_SUITE.erl:2971
  %% Result type:
  %%    'error' | 'ok'
  _24 = call (`erl1253_orelse_false`/3), `a`, `a`, `any`

  %% Unique:
  %%    _24
  _74 = succeeded:body _24
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _24 => 'error' | 'ok'
  %% Unique:
  %%    _24
  _216 = bif:'=:=' _24, `ok`
  br _216, ^215, ^76

215:
  %% guard_SUITE.erl:2972
  %% Result type:
  %%    'error' | 'ok'
  _25 = call (`erl1253_orelse_false`/3), `a`, `a`, `true`

  %% Unique:
  %%    _25
  _77 = succeeded:body _25
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    _25 => 'error' | 'ok'
  %% Unique:
  %%    _25
  _213 = bif:'=:=' _25, `ok`
  br _213, ^212, ^79

212:
  %% guard_SUITE.erl:2973
  %% Result type:
  %%    'error' | 'ok'
  _26 = call (`erl1253_orelse_false`/3), `a`, `a`, `false`

  %% Unique:
  %%    _26
  _80 = succeeded:body _26
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _26 => 'error' | 'ok'
  %% Unique:
  %%    _26
  _210 = bif:'=:=' _26, `ok`
  br _210, ^209, ^82

209:
  %% guard_SUITE.erl:2974
  %% Result type:
  %%    'error' | 'ok'
  _27 = call (`erl1253_orelse_false`/3), `a`, `b`, `any`

  %% Unique:
  %%    _27
  _83 = succeeded:body _27
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _27 => 'error' | 'ok'
  %% Unique:
  %%    _27
  _207 = bif:'=:=' _27, `error`
  br _207, ^206, ^85

206:
  %% guard_SUITE.erl:2975
  %% Result type:
  %%    'error' | 'ok'
  _28 = call (`erl1253_orelse_false`/3), `a`, `b`, `true`

  %% Unique:
  %%    _28
  _86 = succeeded:body _28
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _28 => 'error' | 'ok'
  %% Unique:
  %%    _28
  _204 = bif:'=:=' _28, `error`
  br _204, ^203, ^88

203:
  %% guard_SUITE.erl:2976
  %% Result type:
  %%    'error' | 'ok'
  _29 = call (`erl1253_orelse_false`/3), `a`, `b`, `false`

  %% Unique:
  %%    _29
  _89 = succeeded:body _29
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    _29 => 'error' | 'ok'
  %% Unique:
  %%    _29
  _201 = bif:'=:=' _29, `ok`
  br _201, ^200, ^91

200:
  %% guard_SUITE.erl:2978
  %% Result type:
  %%    'error' | 'ok'
  _30 = call (`erl1253_orelse_true`/3), `a`, `a`, `any`

  %% Unique:
  %%    _30
  _92 = succeeded:body _30
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    _30 => 'error' | 'ok'
  %% Unique:
  %%    _30
  _198 = bif:'=:=' _30, `ok`
  br _198, ^197, ^94

197:
  %% guard_SUITE.erl:2979
  %% Result type:
  %%    'error' | 'ok'
  _31 = call (`erl1253_orelse_true`/3), `a`, `a`, `true`

  %% Unique:
  %%    _31
  _95 = succeeded:body _31
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    _31 => 'error' | 'ok'
  %% Unique:
  %%    _31
  _195 = bif:'=:=' _31, `ok`
  br _195, ^194, ^97

194:
  %% guard_SUITE.erl:2980
  %% Result type:
  %%    'error' | 'ok'
  _32 = call (`erl1253_orelse_true`/3), `a`, `a`, `false`

  %% Unique:
  %%    _32
  _98 = succeeded:body _32
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    _32 => 'error' | 'ok'
  %% Unique:
  %%    _32
  _192 = bif:'=:=' _32, `ok`
  br _192, ^191, ^100

191:
  %% guard_SUITE.erl:2981
  %% Result type:
  %%    'error' | 'ok'
  _33 = call (`erl1253_orelse_true`/3), `a`, `b`, `any`

  %% Unique:
  %%    _33
  _101 = succeeded:body _33
  br _101, ^101, ^1

101:
  %% Argument types:
  %%    _33 => 'error' | 'ok'
  %% Unique:
  %%    _33
  _189 = bif:'=:=' _33, `error`
  br _189, ^188, ^103

188:
  %% guard_SUITE.erl:2982
  %% Result type:
  %%    'error' | 'ok'
  _34 = call (`erl1253_orelse_true`/3), `a`, `b`, `true`

  %% Unique:
  %%    _34
  _104 = succeeded:body _34
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    _34 => 'error' | 'ok'
  %% Unique:
  %%    _34
  _186 = bif:'=:=' _34, `ok`
  br _186, ^185, ^106

185:
  %% guard_SUITE.erl:2983
  %% Result type:
  %%    'error' | 'ok'
  _35 = call (`erl1253_orelse_true`/3), `a`, `b`, `false`

  %% Unique:
  %%    _35
  _107 = succeeded:body _35
  br _107, ^107, ^1

107:
  %% Argument types:
  %%    _35 => 'error' | 'ok'
  %% Unique:
  %%    _35
  _183 = bif:'=:=' _35, `error`
  br _183, ^182, ^109

182:
  %% guard_SUITE.erl:2985
  %% Result type:
  %%    'error' | 'ok'
  _36 = call (`erl1253_andalso_false`/3), `a`, `a`, `any`

  %% Unique:
  %%    _36
  _110 = succeeded:body _36
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    _36 => 'error' | 'ok'
  %% Unique:
  %%    _36
  _180 = bif:'=:=' _36, `error`
  br _180, ^179, ^112

179:
  %% guard_SUITE.erl:2986
  %% Result type:
  %%    'error' | 'ok'
  _37 = call (`erl1253_andalso_false`/3), `a`, `a`, `true`

  %% Unique:
  %%    _37
  _113 = succeeded:body _37
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    _37 => 'error' | 'ok'
  %% Unique:
  %%    _37
  _177 = bif:'=:=' _37, `error`
  br _177, ^176, ^115

176:
  %% guard_SUITE.erl:2987
  %% Result type:
  %%    'error' | 'ok'
  _38 = call (`erl1253_andalso_false`/3), `a`, `a`, `false`

  %% Unique:
  %%    _38
  _116 = succeeded:body _38
  br _116, ^116, ^1

116:
  %% Argument types:
  %%    _38 => 'error' | 'ok'
  %% Unique:
  %%    _38
  _174 = bif:'=:=' _38, `ok`
  br _174, ^173, ^118

173:
  %% guard_SUITE.erl:2988
  %% Result type:
  %%    'error' | 'ok'
  _39 = call (`erl1253_andalso_false`/3), `a`, `b`, `any`

  %% Unique:
  %%    _39
  _119 = succeeded:body _39
  br _119, ^119, ^1

119:
  %% Argument types:
  %%    _39 => 'error' | 'ok'
  %% Unique:
  %%    _39
  _171 = bif:'=:=' _39, `error`
  br _171, ^170, ^121

170:
  %% guard_SUITE.erl:2989
  %% Result type:
  %%    'error' | 'ok'
  _40 = call (`erl1253_andalso_false`/3), `a`, `b`, `true`

  %% Unique:
  %%    _40
  _122 = succeeded:body _40
  br _122, ^122, ^1

122:
  %% Argument types:
  %%    _40 => 'error' | 'ok'
  %% Unique:
  %%    _40
  _168 = bif:'=:=' _40, `error`
  br _168, ^167, ^124

167:
  %% guard_SUITE.erl:2990
  %% Result type:
  %%    'error' | 'ok'
  _41 = call (`erl1253_andalso_false`/3), `a`, `b`, `false`

  %% Unique:
  %%    _41
  _125 = succeeded:body _41
  br _125, ^125, ^1

125:
  %% Argument types:
  %%    _41 => 'error' | 'ok'
  %% Unique:
  %%    _41
  _165 = bif:'=:=' _41, `error`
  br _165, ^164, ^127

164:
  %% guard_SUITE.erl:2992
  %% Result type:
  %%    'error' | 'ok'
  _42 = call (`erl1253_andalso_true`/3), `a`, `a`, `any`

  %% Unique:
  %%    _42
  _128 = succeeded:body _42
  br _128, ^128, ^1

128:
  %% Argument types:
  %%    _42 => 'error' | 'ok'
  %% Unique:
  %%    _42
  _162 = bif:'=:=' _42, `error`
  br _162, ^161, ^130

161:
  %% guard_SUITE.erl:2993
  %% Result type:
  %%    'error' | 'ok'
  _43 = call (`erl1253_andalso_true`/3), `a`, `a`, `true`

  %% Unique:
  %%    _43
  _131 = succeeded:body _43
  br _131, ^131, ^1

131:
  %% Argument types:
  %%    _43 => 'error' | 'ok'
  %% Unique:
  %%    _43
  _159 = bif:'=:=' _43, `ok`
  br _159, ^158, ^133

158:
  %% guard_SUITE.erl:2994
  %% Result type:
  %%    'error' | 'ok'
  _44 = call (`erl1253_andalso_true`/3), `a`, `a`, `false`

  %% Unique:
  %%    _44
  _134 = succeeded:body _44
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    _44 => 'error' | 'ok'
  %% Unique:
  %%    _44
  _156 = bif:'=:=' _44, `error`
  br _156, ^155, ^136

155:
  %% guard_SUITE.erl:2995
  %% Result type:
  %%    'error' | 'ok'
  _45 = call (`erl1253_andalso_true`/3), `a`, `b`, `any`

  %% Unique:
  %%    _45
  _137 = succeeded:body _45
  br _137, ^137, ^1

137:
  %% Argument types:
  %%    _45 => 'error' | 'ok'
  %% Unique:
  %%    _45
  _153 = bif:'=:=' _45, `error`
  br _153, ^152, ^139

152:
  %% guard_SUITE.erl:2996
  %% Result type:
  %%    'error' | 'ok'
  _46 = call (`erl1253_andalso_true`/3), `a`, `b`, `true`

  %% Unique:
  %%    _46
  _140 = succeeded:body _46
  br _140, ^140, ^1

140:
  %% Argument types:
  %%    _46 => 'error' | 'ok'
  %% Unique:
  %%    _46
  _150 = bif:'=:=' _46, `error`
  br _150, ^149, ^142

149:
  %% guard_SUITE.erl:2997
  %% Result type:
  %%    'error' | 'ok'
  _47 = call (`erl1253_andalso_true`/3), `a`, `b`, `false`

  %% Unique:
  %%    _47
  _143 = succeeded:body _47
  br _143, ^143, ^1

143:
  %% Argument types:
  %%    _47 => 'error' | 'ok'
  %% Unique:
  %%    _47
  _147 = bif:'=:=' _47, `error`
  br _147, ^146, ^145

146:
  %% Result type:
  %%    'ok'
  ret `ok`

145:
  %% guard_SUITE.erl:2997
  _48 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _48
  _148 = succeeded:body _48
  br ^1

142:
  %% guard_SUITE.erl:2996
  _49 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _49
  _151 = succeeded:body _49
  br ^1

139:
  %% guard_SUITE.erl:2995
  _50 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _50
  _154 = succeeded:body _50
  br ^1

136:
  %% guard_SUITE.erl:2994
  _51 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _51
  _157 = succeeded:body _51
  br ^1

133:
  %% guard_SUITE.erl:2993
  _52 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _52
  _160 = succeeded:body _52
  br ^1

130:
  %% guard_SUITE.erl:2992
  _53 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _53
  _163 = succeeded:body _53
  br ^1

127:
  %% guard_SUITE.erl:2990
  _54 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _54
  _166 = succeeded:body _54
  br ^1

124:
  %% guard_SUITE.erl:2989
  _55 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _55
  _169 = succeeded:body _55
  br ^1

121:
  %% guard_SUITE.erl:2988
  _56 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _56
  _172 = succeeded:body _56
  br ^1

118:
  %% guard_SUITE.erl:2987
  _57 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _57
  _175 = succeeded:body _57
  br ^1

115:
  %% guard_SUITE.erl:2986
  _58 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _58
  _178 = succeeded:body _58
  br ^1

112:
  %% guard_SUITE.erl:2985
  _59 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _59
  _181 = succeeded:body _59
  br ^1

109:
  %% guard_SUITE.erl:2983
  _60 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _60
  _184 = succeeded:body _60
  br ^1

106:
  %% guard_SUITE.erl:2982
  _61 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _61
  _187 = succeeded:body _61
  br ^1

103:
  %% guard_SUITE.erl:2981
  _62 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _62
  _190 = succeeded:body _62
  br ^1

100:
  %% guard_SUITE.erl:2980
  _63 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _63
  _193 = succeeded:body _63
  br ^1

97:
  %% guard_SUITE.erl:2979
  _64 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _64
  _196 = succeeded:body _64
  br ^1

94:
  %% guard_SUITE.erl:2978
  _65 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _65
  _199 = succeeded:body _65
  br ^1

91:
  %% guard_SUITE.erl:2976
  _66 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _66
  _202 = succeeded:body _66
  br ^1

88:
  %% guard_SUITE.erl:2975
  _67 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _67
  _205 = succeeded:body _67
  br ^1

85:
  %% guard_SUITE.erl:2974
  _68 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _68
  _208 = succeeded:body _68
  br ^1

82:
  %% guard_SUITE.erl:2973
  _69 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _69
  _211 = succeeded:body _69
  br ^1

79:
  %% guard_SUITE.erl:2972
  _70 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _70
  _214 = succeeded:body _70
  br ^1

76:
  %% guard_SUITE.erl:2971
  _71 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _71
  _217 = succeeded:body _71
  br ^1

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% guard_SUITE.erl:3001
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_false`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3002
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  Res = call (`erl1253_orelse_false_1`/3), _0, _1, _2

  %% Unique:
  %%    Res
  _17 = succeeded:body Res
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:3003
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _12 = call (`erl1253_orelse_false_2`/3), `a`, _1, _2

  %% Unique:
  %%    _12
  _18 = succeeded:body _12
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _12 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _12, 
  %%    Res
  _21 = bif:'=:=' _12, Res
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:3004
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _10 = call (`erl1253_orelse_false_3`/3), `a`, _1, _2

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _10, 
  %%    Res
  _25 = bif:'=:=' _10, Res
  br _25, ^25, ^24

25:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

24:
  %% guard_SUITE.erl:3004
  %% Unique:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

20:
  %% guard_SUITE.erl:3003
  %% Unique:
  %%    _12
  _14 = match_fail `badmatch`, _12

  %% Unique:
  %%    _14
  _27 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3006
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_false_1`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3007
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `false`

  %% guard_SUITE.erl:3009
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _7 = bif:'=:=' _1, `a`
  br _7, ^19, ^18

18:
  br Bool, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3013
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_false_2`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3014
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `false`
  br Bool, ^19, ^20

20:
  %% guard_SUITE.erl:3016
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _8 = bif:'=:=' _1, `a`
  br _8, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3020
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_false_3`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3021
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  Bool1 = bif:'=:=' _1, `a`

  %% guard_SUITE.erl:3022
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool2 = bif:'=:=' _2, `false`
  br Bool1, ^19, ^18

18:
  br Bool2, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3028
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_true`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3029
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  Res = call (`erl1253_orelse_true_1`/3), _0, _1, _2

  %% Unique:
  %%    Res
  _17 = succeeded:body Res
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:3030
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _12 = call (`erl1253_orelse_true_2`/3), `a`, _1, _2

  %% Unique:
  %%    _12
  _18 = succeeded:body _12
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _12 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _12, 
  %%    Res
  _21 = bif:'=:=' _12, Res
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:3031
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _10 = call (`erl1253_orelse_true_3`/3), `a`, _1, _2

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _10, 
  %%    Res
  _25 = bif:'=:=' _10, Res
  br _25, ^25, ^24

25:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

24:
  %% guard_SUITE.erl:3031
  %% Unique:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

20:
  %% guard_SUITE.erl:3030
  %% Unique:
  %%    _12
  _14 = match_fail `badmatch`, _12

  %% Unique:
  %%    _14
  _27 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3033
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_true_1`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3034
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `true`

  %% guard_SUITE.erl:3036
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _7 = bif:'=:=' _1, `a`
  br _7, ^19, ^18

18:
  br Bool, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3040
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_true_2`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3041
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `true`
  br Bool, ^19, ^20

20:
  %% guard_SUITE.erl:3043
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _8 = bif:'=:=' _1, `a`
  br _8, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3047
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_orelse_true_3`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3048
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  Bool1 = bif:'=:=' _1, `a`

  %% guard_SUITE.erl:3049
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool2 = bif:'=:=' _2, `true`
  br Bool1, ^19, ^18

18:
  br Bool2, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3055
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_false`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3056
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  Res = call (`erl1253_andalso_false_1`/3), _0, _1, _2

  %% Unique:
  %%    Res
  _17 = succeeded:body Res
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:3057
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _12 = call (`erl1253_andalso_false_2`/3), `a`, _1, _2

  %% Unique:
  %%    _12
  _18 = succeeded:body _12
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _12 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _12, 
  %%    Res
  _21 = bif:'=:=' _12, Res
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:3058
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _10 = call (`erl1253_andalso_false_3`/3), `a`, _1, _2

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _10, 
  %%    Res
  _25 = bif:'=:=' _10, Res
  br _25, ^25, ^24

25:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

24:
  %% guard_SUITE.erl:3058
  %% Unique:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

20:
  %% guard_SUITE.erl:3057
  %% Unique:
  %%    _12
  _14 = match_fail `badmatch`, _12

  %% Unique:
  %%    _14
  _27 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3060
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_false_1`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3061
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `false`

  %% guard_SUITE.erl:3063
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _7 = bif:'=:=' _1, `a`
  br _7, ^18, ^13

18:
  br Bool, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3067
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_false_2`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3068
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  Bool1 = bif:'=:=' _1, `a`

  %% guard_SUITE.erl:3069
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool2 = bif:'=:=' _2, `false`
  br Bool1, ^18, ^13

18:
  br Bool2, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3075
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_false_3`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3076
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  Bool1 = bif:'=:=' _1, `a`

  %% guard_SUITE.erl:3077
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool2 = bif:'=:=' _2, `false`
  br Bool1, ^18, ^13

18:
  br Bool2, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3083
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_true`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3084
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  Res = call (`erl1253_andalso_true_1`/3), _0, _1, _2

  %% Unique:
  %%    Res
  _17 = succeeded:body Res
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:3085
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _12 = call (`erl1253_andalso_true_2`/3), `a`, _1, _2

  %% Unique:
  %%    _12
  _18 = succeeded:body _12
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _12 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _12, 
  %%    Res
  _21 = bif:'=:=' _12, Res
  br _21, ^21, ^20

21:
  %% guard_SUITE.erl:3086
  %% Result type:
  %%    'error' | 'ok'
  %% Aliased:
  %%    _1, 
  %%    _2
  _10 = call (`erl1253_andalso_true_3`/3), `a`, _1, _2

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _10 => 'error' | 'ok'
  %%    Res => 'error' | 'ok'
  %% Unique:
  %%    _10, 
  %%    Res
  _25 = bif:'=:=' _10, Res
  br _25, ^25, ^24

25:
  %% Result type:
  %%    'error' | 'ok'
  %% Unique:
  %%    _10
  ret _10

24:
  %% guard_SUITE.erl:3086
  %% Unique:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _26 = succeeded:body _13
  br ^1

20:
  %% guard_SUITE.erl:3085
  %% Unique:
  %%    _12
  _14 = match_fail `badmatch`, _12

  %% Unique:
  %%    _14
  _27 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3088
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_true_1`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3089
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `true`

  %% guard_SUITE.erl:3091
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _7 = bif:'=:=' _1, `a`
  br _7, ^18, ^13

18:
  br Bool, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3095
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_true_2`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3096
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool = bif:'=:=' _2, `true`
  br Bool, ^20, ^13

20:
  %% guard_SUITE.erl:3098
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  _8 = bif:'=:=' _1, `a`
  br _8, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3102
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     'a' | 'b'
%%    _2 =>
%%     'any' | 'false' | 'true'
function `guard_SUITE`:`erl1253_andalso_true_3`(_0, _1, _2) {
0:
  %% guard_SUITE.erl:3103
  %% Argument types:
  %%    _1 => 'a' | 'b'
  %% Unique:
  %%    _1
  Bool1 = bif:'=:=' _1, `a`

  %% guard_SUITE.erl:3104
  %% Argument types:
  %%    _2 => 'any' | 'false' | 'true'
  %% Unique:
  %%    _2
  Bool2 = bif:'=:=' _2, `true`
  br Bool1, ^18, ^13

18:
  br Bool2, ^19, ^13

19:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3110
%% Counter = 24
%% bs_ensure_opt: true
function `guard_SUITE`:`erl1384`() {
0:
  %% guard_SUITE.erl:3111
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `a`

  %% Aliased:
  %%    _0
  _10 = succeeded:body _0
  br _10, ^10, ^1

10:
  %% guard_SUITE.erl:3111
  %% Result type:
  %%    'gaffel' | 'gurka' | 'not_reachable'
  %% Aliased:
  %%    _0
  _4 = call (`erl1384_1`/1), _0

  %% Unique:
  %%    _4
  _11 = succeeded:body _4
  br _11, ^11, ^1

11:
  %% Argument types:
  %%    _4 => 'gaffel' | 'gurka' | 'not_reachable'
  %% Unique:
  %%    _4
  _22 = bif:'=:=' _4, `gurka`
  br _22, ^21, ^13

21:
  %% guard_SUITE.erl:3112
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `b`

  %% Aliased:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% guard_SUITE.erl:3112
  %% Result type:
  %%    'gaffel' | 'gurka' | 'not_reachable'
  %% Aliased:
  %%    _2
  _5 = call (`erl1384_1`/1), _2

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    _5 => 'gaffel' | 'gurka' | 'not_reachable'
  %% Unique:
  %%    _5
  _19 = bif:'=:=' _5, `gaffel`
  br _19, ^18, ^17

18:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% guard_SUITE.erl:3112
  %% Unique:
  %%    _5
  _6 = match_fail `badmatch`, _5

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br ^1

13:
  %% guard_SUITE.erl:3111
  %% Unique:
  %%    _4
  _7 = match_fail `badmatch`, _4

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% guard_SUITE.erl:3115
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`erl1384_1`(_0) {
0:
  %% guard_SUITE.erl:3116
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `false`

  %% Aliased:
  %%    _2
  _11 = succeeded:body _2
  br _11, ^11, ^1

11:
  %% guard_SUITE.erl:3116
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _1 = bif:'=/=' _0, `a`

  %% Argument types:
  %%    _2 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2
  _17 = bif:'=:=' _2, `true`
  br _17, ^16, ^13

16:
  br _1, ^14, ^19

14:
  %% Result type:
  %%    'not_reachable'
  ret `not_reachable`

13:
  br _1, ^18, ^19

18:
  %% Result type:
  %%    'gaffel'
  ret `gaffel`

19:
  %% Result type:
  %%    'gurka'
  ret `gurka`

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% guard_SUITE.erl:3122
%% Counter = 75
%% bs_ensure_opt: true
function `guard_SUITE`:`gh4788`() {
0:
  %% guard_SUITE.erl:3123
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `0`

  %% Aliased:
  %%    _0
  _21 = succeeded:body _0
  br _21, ^21, ^1

21:
  %% guard_SUITE.erl:3123
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _10 = call (`do_gh4788`/1), _0

  %% Unique:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^55, ^1

55:
  %% guard_SUITE.erl:3124
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `1`

  %% Aliased:
  %%    _2
  _25 = succeeded:body _2
  br _25, ^25, ^1

25:
  %% guard_SUITE.erl:3124
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2
  _11 = call (`do_gh4788`/1), _2

  %% Unique:
  %%    _11
  _26 = succeeded:body _11
  br _26, ^52, ^1

52:
  %% guard_SUITE.erl:3125
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _4 = call (`id`/1), `undefined`

  %% Aliased:
  %%    _4
  _29 = succeeded:body _4
  br _29, ^29, ^1

29:
  %% guard_SUITE.erl:3125
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _4
  _12 = call (`do_gh4788`/1), _4

  %% Unique:
  %%    _12
  _30 = succeeded:body _12
  br _30, ^73, ^1

73:
  br ^74

74:
  _36 = new_try_tag `'catch'`
  br _36, ^34, ^35

34:
  %% guard_SUITE.erl:3126
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _7 = call (`id`/1), `-1`

  %% Aliased:
  %%    _7
  _38 = succeeded:body _7
  br _38, ^38, ^35

38:
  %% guard_SUITE.erl:3126
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _7
  _14 = call (`do_gh4788`/1), _7

  %% Unique:
  %%    _14
  _39 = succeeded:body _14
  br _39, ^39, ^35

39:
  br ^33

35:
  %% Unique:
  %%    _36
  _42 = landingpad `'catch'`, _36

  %% Aliased:
  %%    _42
  _40 = extract _42, `0`
  br ^33

33:
  _43 = phi { _40, ^35 }, { `ok`, ^39 }

  %% Aliased:
  %%    _43
  %% Unique:
  %%    _36
  _8 = catch_end _36, _43

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _47 = bif:'=:=' _8, `lt_0_or_undefined`
  br _47, ^46, ^45

46:
  %% Result type:
  %%    'ok'
  ret `ok`

45:
  %% guard_SUITE.erl:3126
  %% Aliased:
  %%    _8
  _15 = match_fail `badmatch`, _8

  %% Unique:
  %%    _15
  _48 = succeeded:body _15
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% guard_SUITE.erl:3129
%% Counter = 21
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`do_gh4788`(_0) {
0:
  %% guard_SUITE.erl:3132
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _2 = bif:'>=' _0, `0`
  br _2, ^13, ^17

13:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% guard_SUITE.erl:3135
  %% Anno: #{thrown_type => {t_atom,[lt_0_or_undefined]}}
  _10 = call (`erlang`:`throw`/1), `lt_0_or_undefined`

  %% Aliased:
  %%    _10
  _20 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% guard_SUITE.erl:3139
%% Counter = 156
%% bs_ensure_opt: true
function `guard_SUITE`:`beam_ssa_bool_coverage`() {
0:
  %% guard_SUITE.erl:3140
  %% Result type:
  %%    {list(42..99), list(42..99)}
  _18 = call (`collect_modifiers`/2), `"abc*"`, `[]`

  %% Unique:
  %%    _18
  _54 = succeeded:body _18
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _18 => {list(42..99), list(42..99)}
  %% Unique:
  %%    _18
  _153 = bif:'=:=' _18, `{"*","abc"}`
  br _153, ^153, ^56

153:
  %% guard_SUITE.erl:3141
  %% Result type:
  %%    'error'
  _19 = call (`beam_ssa_bool_coverage_1`/1), `true`

  %% Unique:
  %%    _19
  _57 = succeeded:body _19
  br _57, ^150, ^1

150:
  %% guard_SUITE.erl:3143
  %% Argument types:
  %%    
  _2 = bif:self

  %% guard_SUITE.erl:3143
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  _20 = call (`beam_ssa_bool_coverage_2`/1), _2

  %% Unique:
  %%    _20
  _60 = succeeded:body _20
  br _60, ^147, ^1

147:
  %% guard_SUITE.erl:3144
  %% Result type:
  %%    'ok'
  _21 = call (`beam_ssa_bool_coverage_2`/1), `true`

  %% Unique:
  %%    _21
  _63 = succeeded:body _21
  br _63, ^144, ^1

144:
  %% guard_SUITE.erl:3145
  %% Result type:
  %%    'error'
  _22 = call (`beam_ssa_bool_coverage_2`/1), `false`

  %% Unique:
  %%    _22
  _66 = succeeded:body _22
  br _66, ^141, ^1

141:
  %% guard_SUITE.erl:3146
  %% Result type:
  %%    'error'
  _23 = call (`beam_ssa_bool_coverage_2`/1), `42`

  %% Unique:
  %%    _23
  _69 = succeeded:body _23
  br _69, ^138, ^1

138:
  %% guard_SUITE.erl:3148
  %% Result type:
  %%    'error'
  _24 = call (`beam_ssa_bool_coverage_3`/1), `42`

  %% Unique:
  %%    _24
  _72 = succeeded:body _24
  br _72, ^135, ^1

135:
  %% guard_SUITE.erl:3149
  %% Result type:
  %%    'error'
  _25 = call (`beam_ssa_bool_coverage_3`/1), `a`

  %% Unique:
  %%    _25
  _75 = succeeded:body _25
  br _75, ^132, ^1

132:
  %% guard_SUITE.erl:3151
  %% Result type:
  %%    'error'
  _26 = call (`beam_ssa_bool_coverage_4`/2), `42`, `42`

  %% Unique:
  %%    _26
  _78 = succeeded:body _26
  br _78, ^129, ^1

129:
  %% guard_SUITE.erl:3152
  %% Result type:
  %%    'error'
  _27 = call (`beam_ssa_bool_coverage_4`/2), `ok`, `ok`

  %% Unique:
  %%    _27
  _81 = succeeded:body _27
  br _81, ^126, ^1

126:
  %% guard_SUITE.erl:3153
  %% Result type:
  %%    'error'
  _28 = call (`beam_ssa_bool_coverage_4`/2), `a`, `b`

  %% Unique:
  %%    _28
  _84 = succeeded:body _28
  br _84, ^123, ^1

123:
  %% guard_SUITE.erl:3155
  %% Result type:
  %%    'ok'
  _29 = call (`beam_ssa_bool_coverage_5`/1), `ok`

  %% Unique:
  %%    _29
  _87 = succeeded:body _29
  br _87, ^120, ^1

120:
  %% guard_SUITE.erl:3156
  %% Result type:
  %%    'ok'
  _30 = call (`beam_ssa_bool_coverage_5`/1), `2.0`

  %% Unique:
  %%    _30
  _90 = succeeded:body _30
  br _90, ^117, ^1

117:
  %% guard_SUITE.erl:3157
  %% Result type:
  %%    'ok'
  _31 = call (`beam_ssa_bool_coverage_5`/1), `42`

  %% Unique:
  %%    _31
  _93 = succeeded:body _31
  br _93, ^114, ^1

114:
  %% guard_SUITE.erl:3159
  %% Result type:
  %%    'ok'
  _32 = call (`beam_ssa_bool_coverage_6`/1), `<<>>`

  %% Unique:
  %%    _32
  _96 = succeeded:body _32
  br _96, ^111, ^1

111:
  %% guard_SUITE.erl:3160
  %% Result type:
  %%    'error'
  _33 = call (`beam_ssa_bool_coverage_6`/1), `a`

  %% Unique:
  %%    _33
  _99 = succeeded:body _33
  br _99, ^108, ^1

108:
  %% guard_SUITE.erl:3161
  %% Result type:
  %%    'error'
  _34 = call (`beam_ssa_bool_coverage_6`/1), `42`

  %% Unique:
  %%    _34
  _102 = succeeded:body _34
  br _102, ^105, ^1

105:
  %% Result type:
  %%    'ok'
  ret `ok`

56:
  %% guard_SUITE.erl:3140
  %% Unique:
  %%    _18
  _51 = match_fail `badmatch`, _18

  %% Unique:
  %%    _51
  _154 = succeeded:body _51
  br ^1

1:
  _52 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _52
}

%% guard_SUITE.erl:3165
%% Counter = 51
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(42..99)
%%    _1 =>
%%     list(42..99)
function `guard_SUITE`:`collect_modifiers`(_0, _1) {
0:
  %% Unique:
  %%    _0
  _48 = is_nonempty_list _0
  br _48, ^48, ^33

48:
  %% Argument types:
  %%    _0 => nonempty_list(42..99)
  %% Unique:
  %%    _0
  _17 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list(42..99)
  %% Unique:
  %%    _0
  _16 = get_tl _0

  %% guard_SUITE.erl:3166
  %% Argument types:
  %%    _17 => 42..99
  %% Unique:
  %%    _17
  _18 = bif:'>=' _17, `97`
  br _18, ^46, ^35

35:
  %% guard_SUITE.erl:3167
  %% Argument types:
  %%    _17 => 42..96
  %% Unique:
  %%    _17
  _20 = bif:'>=' _17, `65`
  br _20, ^42, ^33

42:
  %% guard_SUITE.erl:3167
  %% Argument types:
  %%    _17 => 65..96
  %% Unique:
  %%    _17
  _27 = bif:'=<' _17, `90`
  br _27, ^46, ^33

46:
  %% Argument types:
  %%    _17 => 65..99
  %%    _1 => list(42..99)
  %% Unique:
  %%    _1, 
  %%    _17
  _24 = put_list _17, _1

  %% guard_SUITE.erl:3168
  %% Result type:
  %%    {list(42..99), list(42..99)}
  %% Unique:
  %%    _16, 
  %%    _24
  _29 = call (`collect_modifiers`/2), _16, _24

  %% Unique:
  %%    _29
  _47 = succeeded:body _29
  br _47, ^47, ^1

47:
  %% Result type:
  %%    {list(42..99), list(42..99)}
  %% Unique:
  %%    _29
  ret _29

33:
  %% guard_SUITE.erl:3170
  %% Unique:
  %%    _1
  _14 = call (`lists`:`reverse`/1), _1

  %% Aliased:
  %%    _14
  _49 = succeeded:body _14
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    _0 => list(42..99)
  %%    _14 => list(42..99)
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _0
  _30 = put_tuple _0, _14
  %% Result type:
  %%    {list(42..99), list(42..99)}
  %% Unique:
  %%    _30
  ret _30

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% guard_SUITE.erl:3172
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'true'
function `guard_SUITE`:`beam_ssa_bool_coverage_1`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3177
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true' | 42 | pid()
function `guard_SUITE`:`beam_ssa_bool_coverage_2`(_0) {
0:
  %% guard_SUITE.erl:3177
  %% Argument types:
  %%    _0 => 'false' | 'true' | 42 | pid()
  %% Unique:
  %%    _0
  _8 = bif:is_pid _0
  br _8, ^24, ^26

26:
  %% Argument types:
  %%    _0 => 'false' | 'true' | 42
  %% Unique:
  %%    _0
  _5 = bif:'=:=' _0, `true`
  br _5, ^24, ^16

24:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3182
%% Counter = 42
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 42
function `guard_SUITE`:`beam_ssa_bool_coverage_3`(_0) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3187
%% Counter = 37
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'ok' | 42
%%    _1 =>
%%     'b' | 'ok' | 42
function `guard_SUITE`:`beam_ssa_bool_coverage_4`(_0, _1) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3192
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'ok' | number(2, 42)
function `guard_SUITE`:`beam_ssa_bool_coverage_5`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:3209
%% Counter = 53
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 42 | bitstring(256,appendable)
function `guard_SUITE`:`beam_ssa_bool_coverage_6`(_0) {
0:
  %% guard_SUITE.erl:3209
  %% Argument types:
  %%    _0 => 'a' | 42 | bitstring(256,appendable)
  %% Unique:
  %%    _0
  _11 = bif:is_bitstring _0
  br _11, ^43, ^28

43:
  %% Result type:
  %%    'ok'
  ret `ok`

28:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3216
%% Counter = 66
%% bs_ensure_opt: true
function `guard_SUITE`:`gh_6164`() {
0:
  %% guard_SUITE.erl:3217
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `[]`

  %% Aliased:
  %%    _0
  _17 = succeeded:body _0
  br _17, ^17, ^1

17:
  %% guard_SUITE.erl:3217
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _0
  _6 = call (`do_gh_6164`/1), _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^64, ^1

64:
  br ^65

65:
  _24 = new_try_tag `'catch'`
  br _24, ^22, ^23

22:
  %% guard_SUITE.erl:3218
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `0`

  %% Aliased:
  %%    _2
  _26 = succeeded:body _2
  br _26, ^26, ^23

26:
  %% guard_SUITE.erl:3218
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _2
  _12 = call (`do_gh_6164`/1), _2

  %% Unique:
  %%    _12
  _27 = succeeded:body _12
  br _27, ^27, ^23

27:
  br ^21

23:
  %% Unique:
  %%    _24
  _30 = landingpad `'catch'`, _24

  %% Aliased:
  %%    _30
  _28 = extract _30, `0`
  br ^21

21:
  _31 = phi { _28, ^23 }, { `true`, ^27 }

  %% Aliased:
  %%    _31
  %% Unique:
  %%    _24
  _3 = catch_end _24, _31

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _42 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _42, ^39, ^33

39:
  %% Argument types:
  %%    _3 => {''EXIT'', any()}
  %% Aliased:
  %%    _3
  _7 = get_tuple_element _3, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _36 = bif:is_tuple _7
  br _36, ^36, ^33

36:
  %% Argument types:
  %%    _7 => {...}
  %% Aliased:
  %%    _7
  _37 = bif:tuple_size _7

  %% Argument types:
  %%    _37 => 0..16777215
  %% Unique:
  %%    _37
  _38 = bif:'=:=' _37, `2`
  br _38, ^35, ^33

35:
  %% Argument types:
  %%    _7 => {any(), any()}
  %% Aliased:
  %%    _7
  _10 = get_tuple_element _7, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _34 = bif:'=:=' _10, `{case_clause,42}`
  br _34, ^34, ^33

34:
  %% Result type:
  %%    'ok'
  ret `ok`

33:
  %% guard_SUITE.erl:3218
  %% Aliased:
  %%    _3
  _13 = match_fail `badmatch`, _3

  %% Unique:
  %%    _13
  _45 = succeeded:body _13
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3222
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`do_gh_6164`(_0) {
0:
  %% guard_SUITE.erl:3225
  %% Argument types:
  %%    _0 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^24, ^23

24:
  %% Result type:
  %%    'true'
  ret `true`

23:
  %% guard_SUITE.erl:3227
  _13 = match_fail `case_clause`, `42`

  %% Unique:
  %%    _13
  _25 = succeeded:body _13
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3233
%% Counter = 162
%% bs_ensure_opt: true
function `guard_SUITE`:`gh_6184`() {
0:
  br ^159

159:
  _37 = new_try_tag `'catch'`
  br _37, ^35, ^36

35:
  %% guard_SUITE.erl:3234
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1 = call (`id`/1), `true`

  %% Aliased:
  %%    _1
  _39 = succeeded:body _1
  br _39, ^39, ^36

39:
  %% guard_SUITE.erl:3234
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `{a,b,c}`

  %% Aliased:
  %%    _0
  _40 = succeeded:body _0
  br _40, ^40, ^36

40:
  %% guard_SUITE.erl:3234
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _0, 
  %%    _1
  _24 = call (`do_gh_6184`/2), _1, _0

  %% Aliased:
  %%    _24
  _41 = succeeded:body _24
  br ^36

36:
  %% Unique:
  %%    _37
  _44 = landingpad `'catch'`, _37

  %% Aliased:
  %%    _44
  _42 = extract _44, `0`
  br ^34

34:
  %% Aliased:
  %%    _42
  %% Unique:
  %%    _37
  _2 = catch_end _37, _42

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _107 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _107, ^104, ^47

104:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _11 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _101 = is_tagged_tuple _11, `2`, `function_clause`
  br _101, ^157, ^47

157:
  br ^160

160:
  _51 = new_try_tag `'catch'`
  br _51, ^49, ^50

49:
  %% guard_SUITE.erl:3235
  %% Result type:
  %%    none()
  _26 = call (`do_gh_6184`/2), `true`, `true`

  %% Aliased:
  %%    _26
  _53 = succeeded:body _26
  br ^50

50:
  %% Unique:
  %%    _51
  _56 = landingpad `'catch'`, _51

  %% Aliased:
  %%    _56
  _54 = extract _56, `0`
  br ^48

48:
  %% Aliased:
  %%    _54
  %% Unique:
  %%    _51
  _4 = catch_end _51, _54

  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _94 = is_tagged_tuple _4, `2`, `'EXIT'`
  br _94, ^91, ^59

91:
  %% Argument types:
  %%    _4 => {''EXIT'', any()}
  %% Aliased:
  %%    _4
  _15 = get_tuple_element _4, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _88 = is_tagged_tuple _15, `2`, `function_clause`
  br _88, ^158, ^59

158:
  br ^161

161:
  _63 = new_try_tag `'catch'`
  br _63, ^61, ^62

61:
  %% guard_SUITE.erl:3236
  %% Result type:
  %%    none()
  _28 = call (`do_gh_6184`/2), `{a,b,c}`, `{x,y,z}`

  %% Aliased:
  %%    _28
  _65 = succeeded:body _28
  br ^62

62:
  %% Unique:
  %%    _63
  _68 = landingpad `'catch'`, _63

  %% Aliased:
  %%    _68
  _66 = extract _68, `0`
  br ^60

60:
  %% Aliased:
  %%    _66
  %% Unique:
  %%    _63
  _6 = catch_end _63, _66

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _81 = is_tagged_tuple _6, `2`, `'EXIT'`
  br _81, ^78, ^71

78:
  %% Argument types:
  %%    _6 => {''EXIT'', any()}
  %% Aliased:
  %%    _6
  _19 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _75 = is_tagged_tuple _19, `2`, `function_clause`
  br _75, ^72, ^71

72:
  %% Result type:
  %%    'ok'
  ret `ok`

71:
  %% guard_SUITE.erl:3236
  %% Aliased:
  %%    _6
  _29 = match_fail `badmatch`, _6

  %% Unique:
  %%    _29
  _84 = succeeded:body _29
  br ^1

59:
  %% guard_SUITE.erl:3235
  %% Aliased:
  %%    _4
  _30 = match_fail `badmatch`, _4

  %% Unique:
  %%    _30
  _97 = succeeded:body _30
  br ^1

47:
  %% guard_SUITE.erl:3234
  %% Aliased:
  %%    _2
  _31 = match_fail `badmatch`, _2

  %% Unique:
  %%    _31
  _110 = succeeded:body _31
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% guard_SUITE.erl:3240
%% Counter = 42
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`do_gh_6184`(_0, _1) {
0:
  %% guard_SUITE.erl:3240
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-do_gh_6184/2-',2}}
  _20 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _20
  _40 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% guard_SUITE.erl:3244
%% Counter = 11
%% bs_ensure_opt: true
function `guard_SUITE`:`bad_map_in_guard`() {
0:
  %% guard_SUITE.erl:3245
  %% Result type:
  %%    'error'
  _1 = call (`bad_map_in_guard_1`/0)

  %% Unique:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^8, ^1

8:
  %% Result type:
  %%    'error'
  %% Unique:
  %%    _1
  ret _1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% guard_SUITE.erl:3247
%% Counter = 4
%% bs_ensure_opt: true
function `guard_SUITE`:`bad_map_in_guard_1`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:3252
%% Counter = 65
%% bs_ensure_opt: true
function `guard_SUITE`:`gh_7252`() {
0:
  %% guard_SUITE.erl:3253
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _1 = call (`id`/1), `bar`

  %% Aliased:
  %%    _1
  _26 = succeeded:body _1
  br _26, ^26, ^1

26:
  %% guard_SUITE.erl:3253
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `[]`

  %% Aliased:
  %%    _0
  _27 = succeeded:body _0
  br _27, ^27, ^1

27:
  %% guard_SUITE.erl:3253
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`gh_7252_a`/2), _1, _0

  %% Aliased:
  %%    _14
  _28 = succeeded:body _14
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    _14 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _14
  _63 = bif:'=:=' _14, `bar`
  br _63, ^62, ^30

62:
  %% guard_SUITE.erl:3254
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _4 = call (`id`/1), `bar`

  %% Aliased:
  %%    _4
  _31 = succeeded:body _4
  br _31, ^31, ^1

31:
  %% guard_SUITE.erl:3254
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _3 = call (`id`/1), `ok`

  %% Aliased:
  %%    _3
  _32 = succeeded:body _3
  br _32, ^32, ^1

32:
  %% guard_SUITE.erl:3254
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _3, 
  %%    _4
  _15 = call (`gh_7252_a`/2), _4, _3

  %% Aliased:
  %%    _15
  _33 = succeeded:body _15
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _15 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _15
  _60 = bif:'=:=' _15, `bar`
  br _60, ^59, ^35

59:
  %% guard_SUITE.erl:3256
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _7 = call (`id`/1), `ok`

  %% Aliased:
  %%    _7
  _36 = succeeded:body _7
  br _36, ^36, ^1

36:
  %% guard_SUITE.erl:3256
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _6 = call (`id`/1), `<<>>`

  %% Aliased:
  %%    _6
  _37 = succeeded:body _6
  br _37, ^37, ^1

37:
  %% guard_SUITE.erl:3256
  %% Result type:
  %%    'bar' | 'foo'
  %% Aliased:
  %%    _6, 
  %%    _7
  _16 = call (`gh_7252_b`/2), _7, _6

  %% Unique:
  %%    _16
  _38 = succeeded:body _16
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    _16 => 'bar' | 'foo'
  %% Unique:
  %%    _16
  _57 = bif:'=:=' _16, `foo`
  br _57, ^56, ^40

56:
  %% guard_SUITE.erl:3257
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _10 = call (`id`/1), `ok`

  %% Aliased:
  %%    _10
  _41 = succeeded:body _10
  br _41, ^41, ^1

41:
  %% guard_SUITE.erl:3257
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _9 = call (`id`/1), `ok`

  %% Aliased:
  %%    _9
  _42 = succeeded:body _9
  br _42, ^42, ^1

42:
  %% guard_SUITE.erl:3257
  %% Result type:
  %%    'bar' | 'foo'
  %% Aliased:
  %%    _9, 
  %%    _10
  _17 = call (`gh_7252_b`/2), _10, _9

  %% Unique:
  %%    _17
  _43 = succeeded:body _17
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _17 => 'bar' | 'foo'
  %% Unique:
  %%    _17
  _54 = bif:'=:=' _17, `bar`
  br _54, ^53, ^45

53:
  %% guard_SUITE.erl:3259
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _12 = call (`id`/1), `ok`

  %% Aliased:
  %%    _12
  _46 = succeeded:body _12
  br _46, ^46, ^1

46:
  %% guard_SUITE.erl:3259
  %% Result type:
  %%    'bar'
  %% Aliased:
  %%    _12
  _18 = call (`gh_7252_c`/1), _12

  %% Unique:
  %%    _18
  _47 = succeeded:body _18
  br _47, ^50, ^1

50:
  %% Result type:
  %%    'ok'
  ret `ok`

45:
  %% guard_SUITE.erl:3257
  _20 = match_fail `badmatch`, `foo`

  %% Unique:
  %%    _20
  _55 = succeeded:body _20
  br ^1

40:
  %% guard_SUITE.erl:3256
  _21 = match_fail `badmatch`, `bar`

  %% Unique:
  %%    _21
  _58 = succeeded:body _21
  br ^1

35:
  %% guard_SUITE.erl:3254
  %% Aliased:
  %%    _15
  _22 = match_fail `badmatch`, _15

  %% Unique:
  %%    _22
  _61 = succeeded:body _22
  br ^1

30:
  %% guard_SUITE.erl:3253
  %% Aliased:
  %%    _14
  _23 = match_fail `badmatch`, _14

  %% Unique:
  %%    _23
  _64 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% guard_SUITE.erl:3263
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`gh_7252_a`(_0, _1) {
0:
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  ret _0
}

%% guard_SUITE.erl:3268
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    _1 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`gh_7252_b`(_0, _1) {
0:
  %% guard_SUITE.erl:3269
  %% Argument types:
  %%    _1 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _1
  _14 = bif:is_bitstring _1
  br _14, ^30, ^21

30:
  %% Result type:
  %%    'foo'
  ret `foo`

21:
  %% Result type:
  %%    'bar'
  ret `bar`
}

%% guard_SUITE.erl:3274
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`gh_7252_c`(_0) {
0:
  %% Result type:
  %%    'bar'
  ret `bar`
}

%% guard_SUITE.erl:3279
%% Counter = 35
%% bs_ensure_opt: true
function `guard_SUITE`:`gh_7339`() {
0:
  %% guard_SUITE.erl:3280
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `42`

  %% Aliased:
  %%    _0
  _14 = succeeded:body _0
  br _14, ^14, ^1

14:
  %% guard_SUITE.erl:3280
  %% Result type:
  %%    'b'
  %% Aliased:
  %%    _0
  _6 = call (`do_gh_7339`/1), _0

  %% Unique:
  %%    _6
  _15 = succeeded:body _6
  br _15, ^32, ^1

32:
  %% guard_SUITE.erl:3281
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _2
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% guard_SUITE.erl:3281
  %% Result type:
  %%    'b'
  %% Aliased:
  %%    _2
  _7 = call (`do_gh_7339`/1), _2

  %% Unique:
  %%    _7
  _19 = succeeded:body _7
  br _19, ^29, ^1

29:
  %% guard_SUITE.erl:3282
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _4 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _4
  _22 = succeeded:body _4
  br _22, ^22, ^1

22:
  %% guard_SUITE.erl:3282
  %% Result type:
  %%    'b'
  %% Aliased:
  %%    _4
  _8 = call (`do_gh_7339`/1), _4

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br _23, ^26, ^1

26:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:3285
%% Counter = 32
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`do_gh_7339`(_0) {
0:
  %% Result type:
  %%    'b'
  ret `b`
}

%% guard_SUITE.erl:3290
%% Counter = 24
%% bs_ensure_opt: true
function `guard_SUITE`:`gh_7370`() {
0:
  %% guard_SUITE.erl:3291
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _0 = call (`id`/1), `42`

  %% Aliased:
  %%    _0
  _10 = succeeded:body _0
  br _10, ^10, ^1

10:
  %% guard_SUITE.erl:3291
  %% Result type:
  %%    'b'
  %% Aliased:
  %%    _0
  _4 = call (`gh_7370`/1), _0

  %% Unique:
  %%    _4
  _11 = succeeded:body _4
  br _11, ^21, ^1

21:
  %% guard_SUITE.erl:3292
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _2 = call (`id`/1), `42.0`

  %% Aliased:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% guard_SUITE.erl:3292
  %% Result type:
  %%    'b'
  %% Aliased:
  %%    _2
  _5 = call (`gh_7370`/1), _2

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^18, ^1

18:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% guard_SUITE.erl:3295
%% Counter = 17
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`gh_7370`(_0) {
0:
  %% Result type:
  %%    'b'
  ret `b`
}

%% guard_SUITE.erl:3300
%% Counter = 180
%% bs_ensure_opt: true
function `guard_SUITE`:`gh_7517`() {
0:
  br ^176

176:
  _35 = new_try_tag `'catch'`
  br _35, ^33, ^34

33:
  %% guard_SUITE.erl:3301
  %% Result type:
  %%    'ok'
  _19 = call (`do_gh_7517`/1), `[]`

  %% Unique:
  %%    _19
  _37 = succeeded:body _19
  br _37, ^37, ^34

37:
  br ^32

34:
  %% Unique:
  %%    _35
  _40 = landingpad `'catch'`, _35

  %% Aliased:
  %%    _40
  _38 = extract _40, `0`
  br ^32

32:
  _41 = phi { _38, ^34 }, { `ok`, ^37 }

  %% Aliased:
  %%    _41
  %% Unique:
  %%    _35
  _0 = catch_end _35, _41

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _110 = bif:'=:=' _0, `ok`
  br _110, ^173, ^43

173:
  br ^177

177:
  _47 = new_try_tag `'catch'`
  br _47, ^45, ^46

45:
  %% guard_SUITE.erl:3302
  %% Result type:
  %%    'ok'
  _21 = call (`do_gh_7517`/1), `[a,b,c]`

  %% Unique:
  %%    _21
  _49 = succeeded:body _21
  br _49, ^49, ^46

49:
  br ^44

46:
  %% Unique:
  %%    _47
  _52 = landingpad `'catch'`, _47

  %% Aliased:
  %%    _52
  _50 = extract _52, `0`
  br ^44

44:
  _53 = phi { _50, ^46 }, { `ok`, ^49 }

  %% Aliased:
  %%    _53
  %% Unique:
  %%    _47
  _2 = catch_end _47, _53

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _107 = bif:'=:=' _2, `ok`
  br _107, ^174, ^55

174:
  br ^178

178:
  _59 = new_try_tag `'catch'`
  br _59, ^57, ^58

57:
  %% guard_SUITE.erl:3303
  %% Result type:
  %%    none()
  _23 = call (`do_gh_7517`/1), `ok`

  %% Aliased:
  %%    _23
  _61 = succeeded:body _23
  br ^58

58:
  %% Unique:
  %%    _59
  _64 = landingpad `'catch'`, _59

  %% Aliased:
  %%    _64
  _62 = extract _64, `0`
  br ^56

56:
  %% Aliased:
  %%    _62
  %% Unique:
  %%    _59
  _4 = catch_end _59, _62

  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _102 = is_tagged_tuple _4, `2`, `'EXIT'`
  br _102, ^99, ^67

99:
  %% Argument types:
  %%    _4 => {''EXIT'', any()}
  %% Aliased:
  %%    _4
  _10 = get_tuple_element _4, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _96 = is_tagged_tuple _10, `2`, `function_clause`
  br _96, ^175, ^67

175:
  br ^179

179:
  _71 = new_try_tag `'catch'`
  br _71, ^69, ^70

69:
  %% guard_SUITE.erl:3304
  %% Result type:
  %%    none()
  _25 = call (`do_gh_7517`/1), `<<>>`

  %% Aliased:
  %%    _25
  _73 = succeeded:body _25
  br ^70

70:
  %% Unique:
  %%    _71
  _76 = landingpad `'catch'`, _71

  %% Aliased:
  %%    _76
  _74 = extract _76, `0`
  br ^68

68:
  %% Aliased:
  %%    _74
  %% Unique:
  %%    _71
  _6 = catch_end _71, _74

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _89 = is_tagged_tuple _6, `2`, `'EXIT'`
  br _89, ^86, ^79

86:
  %% Argument types:
  %%    _6 => {''EXIT'', any()}
  %% Aliased:
  %%    _6
  _14 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _83 = is_tagged_tuple _14, `2`, `function_clause`
  br _83, ^80, ^79

80:
  %% Result type:
  %%    'ok'
  ret `ok`

79:
  %% guard_SUITE.erl:3304
  %% Aliased:
  %%    _6
  _26 = match_fail `badmatch`, _6

  %% Unique:
  %%    _26
  _92 = succeeded:body _26
  br ^1

67:
  %% guard_SUITE.erl:3303
  %% Aliased:
  %%    _4
  _27 = match_fail `badmatch`, _4

  %% Unique:
  %%    _27
  _105 = succeeded:body _27
  br ^1

55:
  %% guard_SUITE.erl:3302
  %% Aliased:
  %%    _2
  _28 = match_fail `badmatch`, _2

  %% Unique:
  %%    _28
  _108 = succeeded:body _28
  br ^1

43:
  %% guard_SUITE.erl:3301
  %% Aliased:
  %%    _0
  _29 = match_fail `badmatch`, _0

  %% Unique:
  %%    _29
  _111 = succeeded:body _29
  br ^1

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% guard_SUITE.erl:3307
%% Counter = 33
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'ok' | list('a' | 'b' | 'c') | bitstring(256,appendable)
function `guard_SUITE`:`do_gh_7517`(_0) {
0:
  %% guard_SUITE.erl:3307
  %% Argument types:
  %%    _0 => 'ok' | list('a' | 'b' | 'c') | bitstring(256,appendable)
  %% Unique:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^24, ^17

24:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% guard_SUITE.erl:3307
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-do_gh_7517/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _25 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% guard_SUITE.erl:3315
%% Counter = 30
%% bs_ensure_opt: true
function `guard_SUITE`:`repeated_type_tests`(_0) {
0:
  %% guard_SUITE.erl:3316
  %% Result type:
  %%    'binary' | 'bitstring'
  _4 = call (`repeated_type_test`/1), `<<"*">>`

  %% Unique:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    _4 => 'binary' | 'bitstring'
  %% Unique:
  %%    _4
  _28 = bif:'=:=' _4, `binary`
  br _28, ^27, ^14

27:
  %% guard_SUITE.erl:3317
  %% Result type:
  %%    'binary' | 'bitstring'
  _5 = call (`repeated_type_test`/1), `<<1:1>>`

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    _5 => 'binary' | 'bitstring'
  %% Unique:
  %%    _5
  _25 = bif:'=:=' _5, `bitstring`
  br _25, ^24, ^17

24:
  %% guard_SUITE.erl:3318
  %% Result type:
  %%    'other'
  _6 = call (`repeated_type_test`/1), `atom`

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^21, ^1

21:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% guard_SUITE.erl:3317
  _8 = match_fail `badmatch`, `binary`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br ^1

14:
  %% guard_SUITE.erl:3316
  _9 = match_fail `badmatch`, `bitstring`

  %% Unique:
  %%    _9
  _29 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% guard_SUITE.erl:3321
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | bitstring(1)
function `guard_SUITE`:`repeated_type_test`(_0) {
0:
  %% Argument types:
  %%    _0 => 'atom' | bitstring(1)
  %% Unique:
  %%    _0
  _5 = bif:is_bitstring _0
  br _5, ^5, ^4

5:
  %% Argument types:
  %%    _0 => bitstring(1)
  %% Unique:
  %%    _0
  _8 = bif:is_binary _0
  br _8, ^8, ^7

8:
  %% Result type:
  %%    'binary'
  ret `binary`

7:
  %% Result type:
  %%    'bitstring'
  ret `bitstring`

4:
  %% Result type:
  %%    'other'
  ret `other`
}

%% guard_SUITE.erl:3335
%% Counter = 19
%% bs_ensure_opt: true
function `guard_SUITE`:`use_after_branch`(_0) {
0:
  %% guard_SUITE.erl:3336
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'gaffel'}
  _3 = call (`use_after_branch_1`/1), `foo`

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _3 => {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'gaffel'}
  %% Unique:
  %%    _3
  _17 = bif:'=:=' _3, `{false,gaffel}`
  br _17, ^17, ^11

17:
  %% guard_SUITE.erl:3337
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'gurka'}
  _4 = call (`use_after_branch_1`/1), `bar`

  %% Unique:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    _4 => {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'gurka'}
  %% Unique:
  %%    _4
  _15 = bif:'=:=' _4, `{true,gurka}`
  br _15, ^15, ^14

15:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% guard_SUITE.erl:3337
  %% Unique:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br ^1

11:
  %% guard_SUITE.erl:3336
  %% Unique:
  %%    _3
  _6 = match_fail `badmatch`, _3

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% guard_SUITE.erl:3340
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'bar' | 'foo'
function `guard_SUITE`:`use_after_branch_1`(_0) {
0:
  %% guard_SUITE.erl:3341
  %% Argument types:
  %%    _0 => 'bar' | 'foo'
  %% Unique:
  %%    _0
  Boolean = bif:'=/=' _0, `foo`
  br Boolean, ^18, ^19

18:
  %% guard_SUITE.erl:3343
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _7 = call (`id`/1), `something`

  %% Aliased:
  %%    _7
  _16 = succeeded:body _7
  br _16, ^14, ^1

19:
  %% guard_SUITE.erl:3344
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _6 = call (`id`/1), `other`

  %% Aliased:
  %%    _6
  _17 = succeeded:body _6
  br _17, ^14, ^1

14:
  br Boolean, ^25, ^26

25:
  %% guard_SUITE.erl:3347
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _3 = call (`id`/1), `true`

  %% Aliased:
  %%    _3
  _23 = succeeded:body _3
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    _3 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _3
  _10 = put_tuple _3, `gurka`
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'gurka'}
  %% Unique:
  %%    _10
  ret _10

26:
  %% guard_SUITE.erl:3348
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  _4 = call (`id`/1), `false`

  %% Aliased:
  %%    _4
  _24 = succeeded:body _4
  br _24, ^24, ^1

24:
  %% Argument types:
  %%    _4 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _9 = put_tuple _4, `gaffel`
  %% Result type:
  %%    {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), 'gaffel'}
  %% Unique:
  %%    _9
  ret _9

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:3352
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _0
  ret _0
}

%% guard_SUITE.erl:3354
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun(() -> atom())
%%    _1 =>
%%     atom()
function `guard_SUITE`:`check`(_0, _1) {
0:
  %% guard_SUITE.erl:3355
  %% Result type:
  %%    atom()
  %% Argument types:
  %%    _0 => fun(() -> atom())
  %% Aliased:
  %%    _0
  _6 = call _0

  %% Aliased:
  %%    _6
  _14 = succeeded:body _6
  br _14, ^14, ^1

14:
  %% Argument types:
  %%    _6 => atom()
  %%    _1 => atom()
  %% Unique:
  %%    _1, 
  %%    _6
  _17 = bif:'=:=' _6, _1
  br _17, ^17, ^16

17:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% Argument types:
  %%    _1 => atom()
  %% Unique:
  %%    _1
  _7 = put_list _1, `[]`

  %% guard_SUITE.erl:3358
  %% Unique:
  %%    _7
  _9 = call (`io`:`format`/2), `"Expected: ~p\n"`, _7

  %% Aliased:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _6 => atom()
  %% Unique:
  %%    _6
  _8 = put_list _6, `[]`

  %% guard_SUITE.erl:3359
  %% Unique:
  %%    _8
  _10 = call (`io`:`format`/2), `"     Got: ~p\n"`, _8

  %% Aliased:
  %%    _10
  _19 = succeeded:body _10
  br _19, ^19, ^1

19:
  %% guard_SUITE.erl:3360
  _11 = call (`ct`:`fail`/1), `check_failed`

  %% Aliased:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Aliased:
  %%    _11
  ret _11

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% guard_SUITE.erl:3363
%% Counter = 24
%% bs_ensure_opt: true
function `guard_SUITE`:`fc`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _20 = is_tagged_tuple _0, `2`, `'EXIT'`
  br _20, ^17, ^10

17:
  %% Argument types:
  %%    _0 => {''EXIT'', any()}
  %% Aliased:
  %%    _0
  _3 = get_tuple_element _0, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _14 = is_tagged_tuple _3, `2`, `function_clause`
  br _14, ^11, ^10

11:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% guard_SUITE.erl:3363
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-fc/1-',1}}
  _7 = match_fail `function_clause`, _0

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% Counter = 6
%% bs_ensure_opt: true
function `guard_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `guard_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `guard_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `guard_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% guard_SUITE.erl:2902
%% Counter = 103
%% bs_ensure_opt: true
function `guard_SUITE`:`'-fail_in_guard/0-fun-4-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2899
%% Counter = 110
%% bs_ensure_opt: true
function `guard_SUITE`:`'-fail_in_guard/0-fun-3-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2894
%% Counter = 102
%% bs_ensure_opt: true
function `guard_SUITE`:`'-fail_in_guard/0-fun-2-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2891
%% Counter = 86
%% bs_ensure_opt: true
function `guard_SUITE`:`'-fail_in_guard/0-fun-1-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2878
%% Counter = 86
%% bs_ensure_opt: true
function `guard_SUITE`:`'-fail_in_guard/0-fun-0-'`() {
0:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:2190
%% Counter = 138
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_andalso_orelse/1-fun-2-'`(_64) {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2183
%% Counter = 132
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_andalso_orelse/1-fun-1-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:2171
%% Counter = 157
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_andalso_orelse/1-fun-0-'`(_48, _47) {
0:
  %% guard_SUITE.erl:2173
  %% Argument types:
  %%    
  %% Unique:
  %%    _48
  _36 = bif:size _48

  %% Unique:
  %%    _36
  _130 = succeeded:guard _36
  br _130, ^130, ^128

130:
  %% guard_SUITE.erl:2173
  %% Argument types:
  %%    _36 => integer()
  %% Unique:
  %%    _36
  _91 = bif:'=:=' _36, `3`
  br _91, ^135, ^128

135:
  %% guard_SUITE.erl:2173
  %% Argument types:
  %%    _48 => {...} | bitstring(1)
  %% Unique:
  %%    _48
  _37 = bif:element `1`, _48

  %% Unique:
  %%    _37
  _133 = succeeded:guard _37
  br _133, ^133, ^128

133:
  %% guard_SUITE.erl:2173
  %% Argument types:
  %%    
  %% Unique:
  %%    _37
  _121 = bif:'=:=' _37, `'Set'`
  br _121, ^155, ^128

155:
  %% guard_SUITE.erl:2174
  %% Argument types:
  %%    
  %% Unique:
  %%    _47
  _42 = bif:size _47

  %% Unique:
  %%    _42
  _136 = succeeded:guard _42
  br _136, ^150, ^128

150:
  %% guard_SUITE.erl:2174
  %% Argument types:
  %%    _42 => integer()
  %% Unique:
  %%    _42
  _93 = bif:'=:=' _42, `3`
  br _93, ^147, ^128

147:
  %% guard_SUITE.erl:2174
  %% Argument types:
  %%    _47 => {...} | bitstring(1)
  %% Unique:
  %%    _47
  _43 = bif:element `1`, _47

  %% Unique:
  %%    _43
  _139 = succeeded:guard _43
  br _139, ^146, ^128

146:
  %% guard_SUITE.erl:2174
  %% Argument types:
  %%    
  %% Unique:
  %%    _43
  _123 = bif:'=:=' _43, `'Set'`
  br _123, ^143, ^128

143:
  %% Result type:
  %%    'ok'
  ret `ok`

128:
  %% guard_SUITE.erl:2172
  _125 = match_fail `if_clause`

  %% Unique:
  %%    _125
  _144 = succeeded:body _125
  br ^1

1:
  _126 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _126
}

%% guard_SUITE.erl:2066
%% Counter = 102
%% bs_ensure_opt: true
function `guard_SUITE`:`'-literal_type_tests/1-fun-4-'`(_31) {
0:
  %% guard_SUITE.erl:2066
  %% Aliased:
  %%    _31
  _30 = call (`erl_pp`:`form`/1), _31

  %% Aliased:
  %%    _30
  _99 = succeeded:body _30
  br _99, ^99, ^1

99:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _69 = put_list _30, `["\n"]`

  %% guard_SUITE.erl:2066
  %% Unique:
  %%    _69
  _96 = call (`io`:`put_chars`/1), _69

  %% Aliased:
  %%    _96
  _100 = succeeded:body _96
  br _100, ^100, ^1

100:
  %% Aliased:
  %%    _96
  ret _96

1:
  _97 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _97
}

%% guard_SUITE.erl:2055
%% Counter = 107
%% bs_ensure_opt: true
%% Parameters
%%    _12 =>
%%     nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
%%    _19 =>
%%     list(atom())
function `guard_SUITE`:`'-literal_type_tests/1-lc$^2/1-2-'`(_19, _12) {
0:
  %% Unique:
  %%    _19
  _102 = is_nonempty_list _19
  br _102, ^102, ^103

102:
  %% Argument types:
  %%    _19 => nonempty_list(atom())
  %% Unique:
  %%    _19
  _57 = get_hd _19

  %% Argument types:
  %%    _19 => nonempty_list(atom())
  %% Unique:
  %%    _19
  _56 = get_tl _19

  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  _18 = call (`literals`/0)

  %% Unique:
  %%    _18
  _100 = succeeded:body _18
  br _100, ^100, ^1

100:
  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _12, 
  %%    _18, 
  %%    _56, 
  %%    _57
  _94 = call (`'-literal_type_tests/1-lc$^3/1-3-'`/4), _18, _12, _56, _57

  %% Unique:
  %%    _94
  _101 = succeeded:body _94
  br _101, ^101, ^1

101:
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _94
  ret _94

1:
  _96 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _96

103:
  %% Result type:
  %%    nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _12
  ret _12
}

%% guard_SUITE.erl:2055
%% Counter = 105
%% bs_ensure_opt: true
%% Parameters
%%    _12 =>
%%     nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
%%    _21 =>
%%     list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
%%    _56 =>
%%     list(atom())
%%    _57 =>
%%     atom()
function `guard_SUITE`:`'-literal_type_tests/1-lc$^3/1-3-'`(_21, _12, _56, _57) {
0:
  %% Unique:
  %%    _21
  _99 = is_nonempty_list _21
  br _99, ^99, ^101

99:
  %% Argument types:
  %%    _21 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _21
  _61 = get_hd _21

  %% Argument types:
  %%    _21 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _21
  _60 = get_tl _21

  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Aliased:
  %%    _57
  %% Unique:
  %%    _12, 
  %%    _56, 
  %%    _60
  _23 = call (`'-literal_type_tests/1-lc$^3/1-3-'`/4), _60, _12, _56, _57

  %% Unique:
  %%    _23
  _98 = succeeded:body _23
  br _98, ^98, ^1

98:
  %% Argument types:
  %%    _57 => atom()
  %%    _61 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %% Unique:
  %%    _57, 
  %%    _61
  _62 = put_tuple _57, _61

  %% Argument types:
  %%    _62 => {atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)}
  %%    _23 => nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _23, 
  %%    _62
  _92 = put_list _62, _23
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _92
  ret _92

101:
  %% guard_SUITE.erl:2055
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _12, 
  %%    _56
  _91 = call (`'-literal_type_tests/1-lc$^2/1-2-'`/2), _56, _12

  %% Unique:
  %%    _91
  _100 = succeeded:body _91
  br _100, ^100, ^1

100:
  %% Result type:
  %%    nonempty_list({atom(), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), ...})
  %% Unique:
  %%    _91
  ret _91

1:
  _94 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _94
}

%% guard_SUITE.erl:2057
%% Counter = 102
%% bs_ensure_opt: true
%% Parameters
%%    _7 =>
%%     list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
function `guard_SUITE`:`'-literal_type_tests/1-lc$^0/1-0-'`(_7) {
0:
  %% Unique:
  %%    _7
  _97 = is_nonempty_list _7
  br _97, ^97, ^98

97:
  %% Argument types:
  %%    _7 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _7
  _48 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _7
  _47 = get_tl _7

  %% guard_SUITE.erl:2057
  %% Result type:
  %%    nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  _6 = call (`literals`/0)

  %% Unique:
  %%    _6
  _95 = succeeded:body _6
  br _95, ^95, ^1

95:
  %% guard_SUITE.erl:2057
  %% Result type:
  %%    nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _6, 
  %%    _47, 
  %%    _48
  _89 = call (`'-literal_type_tests/1-lc$^1/1-1-'`/3), _6, _47, _48

  %% Unique:
  %%    _89
  _96 = succeeded:body _89
  br _96, ^96, ^1

96:
  %% Result type:
  %%    nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _89
  ret _89

1:
  _91 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _91

98:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:2057
%% Counter = 100
%% bs_ensure_opt: true
%% Parameters
%%    _9 =>
%%     list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
%%    _47 =>
%%     list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
%%    _48 =>
%%     'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
function `guard_SUITE`:`'-literal_type_tests/1-lc$^1/1-1-'`(_9, _47, _48) {
0:
  %% Unique:
  %%    _9
  _94 = is_nonempty_list _9
  br _94, ^94, ^96

94:
  %% Argument types:
  %%    _9 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _9
  _52 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_list('xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1))
  %% Unique:
  %%    _9
  _51 = get_tl _9

  %% guard_SUITE.erl:2057
  %% Result type:
  %%    list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Aliased:
  %%    _48
  %% Unique:
  %%    _47, 
  %%    _51
  _11 = call (`'-literal_type_tests/1-lc$^1/1-1-'`/3), _51, _47, _48

  %% Unique:
  %%    _11
  _93 = succeeded:body _11
  br _93, ^93, ^1

93:
  %% Argument types:
  %%    _48 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %%    _52 => 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)
  %% Aliased:
  %%    _48
  %% Unique:
  %%    _52
  _53 = put_tuple `is_function`, _48, _52

  %% Argument types:
  %%    _53 => {'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)}
  %%    _11 => list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _11, 
  %%    _53
  _87 = put_list _53, _11
  %% Result type:
  %%    nonempty_list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _87
  ret _87

96:
  %% guard_SUITE.erl:2057
  %% Result type:
  %%    list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _47
  _86 = call (`'-literal_type_tests/1-lc$^0/1-0-'`/1), _47

  %% Unique:
  %%    _86
  _95 = succeeded:body _86
  br _95, ^95, ^1

95:
  %% Result type:
  %%    list({'is_function', 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1), 'xxxx' | list('a' | 'list') | number(-3, 32982724987789283473473838474) | {'a', 'b', 'c'} | bitstring(1)})
  %% Unique:
  %%    _86
  ret _86

1:
  _89 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _89
}

%% guard_SUITE.erl:1951
%% Counter = 97
%% bs_ensure_opt: true
%% Parameters
%%    _20 =>
%%     list({atom(), number(6, 7), atom(), number(6, 7)})
%%    Combinations1 =>
%%     nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
function `guard_SUITE`:`'-generated_combinations/1-lc$^2/1-2-'`(_20, Combinations1) {
0:
  %% Unique:
  %%    _20
  _88 = is_nonempty_list _20
  br _88, ^88, ^89

88:
  %% Argument types:
  %%    _20 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _20
  _45 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    _20
  _44 = get_tl _20

  %% Argument types:
  %%    _45 => {atom(), number(6, 7), atom(), number(6, 7)}
  %% Unique:
  %%    _45
  _47 = get_tuple_element _45, `2`
  %% Argument types:
  %%    
  switch _47, ^75, [
    { `'/='`, ^81 },
    { `'=/='`, ^81 }
  ]

81:
  %% guard_SUITE.erl:1951
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _44, 
  %%    Combinations1
  _22 = call (`'-generated_combinations/1-lc$^2/1-2-'`/2), _44, Combinations1

  %% Unique:
  %%    _22
  _82 = succeeded:body _22
  br _82, ^82, ^1

82:
  %% Argument types:
  %%    _45 => {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}
  %% Unique:
  %%    _45
  _52 = put_tuple `neq`, _45

  %% Argument types:
  %%    _52 => {'neq', {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}}
  %%    _22 => nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _22, 
  %%    _52
  _68 = put_list _52, _22
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _68
  ret _68

75:
  %% guard_SUITE.erl:1951
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _44, 
  %%    Combinations1
  _69 = call (`'-generated_combinations/1-lc$^2/1-2-'`/2), _44, Combinations1

  %% Unique:
  %%    _69
  _87 = succeeded:body _69
  br _87, ^87, ^1

87:
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7) | {atom(), number(6, 7), ''/='' | ''=/='', number(6, 7)}, ...})
  %% Unique:
  %%    _69
  ret _69

1:
  _71 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _71

89:
  %% Result type:
  %%    nonempty_list({atom(), number(6, 7), atom(), number(6, 7)})
  %% Unique:
  %%    Combinations1
  ret Combinations1
}

%% guard_SUITE.erl:1948
%% Counter = 76
%% bs_ensure_opt: true
%% Parameters
%%    _7 =>
%%     list(atom())
function `guard_SUITE`:`'-generated_combinations/1-lc$^0/1-0-'`(_7) {
0:
  %% Unique:
  %%    _7
  _71 = is_nonempty_list _7
  br _71, ^71, ^72

71:
  %% Argument types:
  %%    _7 => nonempty_list(atom())
  %% Unique:
  %%    _7
  _35 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_list(atom())
  %% Unique:
  %%    _7
  _34 = get_tl _7

  %% guard_SUITE.erl:1948
  %% Result type:
  %%    nonempty_list({atom(), atom()})
  %% Unique:
  %%    _34, 
  %%    _35
  _64 = call (`'-generated_combinations/1-lc$^1/1-1-'`/3), `['=:=','=/=','==','/=','<','=<','>=','>']`, _34, _35

  %% Unique:
  %%    _64
  _70 = succeeded:body _64
  br _70, ^70, ^1

70:
  %% Result type:
  %%    nonempty_list({atom(), atom()})
  %% Unique:
  %%    _64
  ret _64

1:
  _66 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _66

72:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:1948
%% Counter = 75
%% bs_ensure_opt: true
%% Parameters
%%    _9 =>
%%     list(atom())
%%    _34 =>
%%     list(atom())
%%    _35 =>
%%     atom()
function `guard_SUITE`:`'-generated_combinations/1-lc$^1/1-1-'`(_9, _34, _35) {
0:
  %% Unique:
  %%    _9
  _69 = is_nonempty_list _9
  br _69, ^69, ^71

69:
  %% Argument types:
  %%    _9 => nonempty_list(atom())
  %% Unique:
  %%    _9
  _39 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_list(atom())
  %% Unique:
  %%    _9
  _38 = get_tl _9

  %% guard_SUITE.erl:1948
  %% Result type:
  %%    list({atom(), atom()})
  %% Aliased:
  %%    _35
  %% Unique:
  %%    _34, 
  %%    _38
  _11 = call (`'-generated_combinations/1-lc$^1/1-1-'`/3), _38, _34, _35

  %% Unique:
  %%    _11
  _68 = succeeded:body _11
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    _35 => atom()
  %%    _39 => atom()
  %% Unique:
  %%    _35, 
  %%    _39
  _40 = put_tuple _35, _39

  %% Argument types:
  %%    _40 => {atom(), atom()}
  %%    _11 => list({atom(), atom()})
  %% Unique:
  %%    _11, 
  %%    _40
  _62 = put_list _40, _11
  %% Result type:
  %%    nonempty_list({atom(), atom()})
  %% Unique:
  %%    _62
  ret _62

71:
  %% guard_SUITE.erl:1948
  %% Result type:
  %%    list({atom(), atom()})
  %% Unique:
  %%    _34
  _61 = call (`'-generated_combinations/1-lc$^0/1-0-'`/1), _34

  %% Unique:
  %%    _61
  _70 = succeeded:body _61
  br _70, ^70, ^1

70:
  %% Result type:
  %%    list({atom(), atom()})
  %% Unique:
  %%    _61
  ret _61

1:
  _64 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _64
}

%% guard_SUITE.erl:1532
%% Counter = 88
%% bs_ensure_opt: true
%% Parameters
%%    _36 =>
%%     list({number(), number()})
function `guard_SUITE`:`'-rel_op_combinations/1-lc$^1/1-1-'`(_40, _36) {
0:
  %% Aliased:
  %%    _40
  _84 = is_nonempty_list _40
  br _84, ^84, ^81

84:
  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _40
  _68 = get_hd _40

  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _40
  _67 = get_tl _40

  %% guard_SUITE.erl:1532
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _42 = bif:'*' _68, `2`

  %% Unique:
  %%    _42
  _82 = succeeded:body _42
  br _82, ^82, ^1

82:
  %% guard_SUITE.erl:1532
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _67
  %% Unique:
  %%    _36
  _43 = call (`'-rel_op_combinations/1-lc$^1/1-1-'`/2), _67, _36

  %% Unique:
  %%    _43
  _83 = succeeded:body _43
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _68 => number()
  %%    _42 => number()
  %% Unique:
  %%    _42, 
  %%    _68
  _69 = put_tuple _68, _42

  %% Argument types:
  %%    _69 => {number(), number()}
  %%    _43 => list({number(), number()})
  %% Unique:
  %%    _43, 
  %%    _69
  _76 = put_list _69, _43
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _76
  ret _76

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _85 = bif:'=:=' _40, `[]`
  br _85, ^85, ^80

85:
  %% Result type:
  %%    list({number(), number()})
  %% Unique:
  %%    _36
  ret _36

80:
  %% Argument types:
  %%    _40 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _40
  _66 = put_tuple `bad_generator`, _40

  %% guard_SUITE.erl:1532
  %% Unique:
  %%    _66
  _77 = call (`erlang`:`error`/1), _66

  %% Aliased:
  %%    _77
  _86 = succeeded:body _77
  br ^1

1:
  _78 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _78
}

%% guard_SUITE.erl:1533
%% Counter = 86
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_op_combinations/1-lc$^0/1-0-'`(_32) {
0:
  %% Aliased:
  %%    _32
  _82 = is_nonempty_list _32
  br _82, ^82, ^79

82:
  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _62 = get_hd _32

  %% Argument types:
  %%    _32 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _32
  _61 = get_tl _32

  %% guard_SUITE.erl:1533
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _34 = bif:'*' _62, `5`

  %% Unique:
  %%    _34
  _80 = succeeded:body _34
  br _80, ^80, ^1

80:
  %% guard_SUITE.erl:1533
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _61
  _35 = call (`'-rel_op_combinations/1-lc$^0/1-0-'`/1), _61

  %% Unique:
  %%    _35
  _81 = succeeded:body _35
  br _81, ^81, ^1

81:
  %% Argument types:
  %%    _62 => number()
  %%    _34 => number()
  %% Unique:
  %%    _34, 
  %%    _62
  _63 = put_tuple _62, _34

  %% Argument types:
  %%    _63 => {number(), number()}
  %%    _35 => list({number(), number()})
  %% Unique:
  %%    _35, 
  %%    _63
  _74 = put_list _63, _35
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _74
  ret _74

79:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _83 = bif:'=:=' _32, `[]`
  br _83, ^83, ^78

83:
  %% Result type:
  %%    nil()
  ret `[]`

78:
  %% Argument types:
  %%    _32 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _32
  _60 = put_tuple `bad_generator`, _32

  %% guard_SUITE.erl:1533
  %% Unique:
  %%    _60
  _75 = call (`erlang`:`error`/1), _60

  %% Aliased:
  %%    _75
  _84 = succeeded:body _75
  br ^1

1:
  _76 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _76
}

%% guard_SUITE.erl:1508
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
%%    _1 =>
%%     2
%%    _2 =>
%%     3
%%    _3 =>
%%     4
%%    _4 =>
%%     5
%%    _5 =>
%%     6
%%    _6 =>
%%     7
%%    _7 =>
%%     8
%%    _8 =>
%%     9
%%    _9 =>
%%     10
%%    _10 =>
%%     11
%%    _11 =>
%%     12
%%    _12 =>
%%     number(13)
%%    _13 =>
%%     number(14)
function `guard_SUITE`:`'-make_fun/14-fun-0-'`(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13) {
0:
  %% Argument types:
  %%    _12 => number(13)
  %%    _13 => number(14)
  %% Unique:
  %%    _12, 
  %%    _13
  _15 = put_tuple `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, _12, _13
  %% Result type:
  %%    {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, any(), any()}
  %% Unique:
  %%    _15
  ret _15
}

%% guard_SUITE.erl:1505
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number()
%%    _1 =>
%%     number()
function `guard_SUITE`:`'-make_fun/2-fun-0-'`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => number()
  %%    _1 => number()
  %% Unique:
  %%    _0, 
  %%    _1
  _3 = put_tuple _0, _1
  %% Result type:
  %%    {number(), number()}
  %% Unique:
  %%    _3
  ret _3
}

%% guard_SUITE.erl:1502
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number()
function `guard_SUITE`:`'-make_fun/1-fun-0-'`(_0) {
0:
  %% guard_SUITE.erl:1502
  %% Argument types:
  %%    _0 => number()
  %% Unique:
  %%    _0
  _8 = float:convert _0

  %% Unique:
  %%    _8
  _13 = succeeded:body _8
  br _13, ^13, ^1

13:
  %% guard_SUITE.erl:1502
  _9 = float:put `0.5`

  %% guard_SUITE.erl:1502
  %% Unique:
  %%    _8, 
  %%    _9
  _10 = float:'+' _8, _9

  %% Unique:
  %%    _10
  _6 = succeeded:body _10
  br _6, ^11, ^1

11:
  %% Unique:
  %%    _10
  _1 = float:get _10

  %% guard_SUITE.erl:1502
  %% Argument types:
  %%    _1 => float()
  %% Unique:
  %%    _1
  _3 = bif:round _1

  %% Unique:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^7, ^1

7:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% guard_SUITE.erl:1490
%% Counter = 2751
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-56-'`(_2169) {
0:
  %% Unique:
  %%    _2169
  _2742 = is_nonempty_list _2169
  br _2742, ^2742, ^2735

2742:
  %% Argument types:
  %%    _2169 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _2169
  _2404 = get_hd _2169

  %% Argument types:
  %%    _2169 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _2169
  _2403 = get_tl _2169

  %% Unique:
  %%    _2403
  _2741 = is_nonempty_list _2403
  br _2741, ^2741, ^2735

2741:
  %% Argument types:
  %%    _2403 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _2403
  _2406 = get_hd _2403

  %% Argument types:
  %%    _2403 => nonempty_improper_list(any(), any())
  %% Unique:
  %%    _2403
  _2405 = get_tl _2403

  %% Argument types:
  %%    
  %% Unique:
  %%    _2405
  _2740 = bif:'=:=' _2405, `[]`
  br _2740, ^2740, ^2735

2740:
  %% guard_SUITE.erl:1490
  %% Argument types:
  %%    
  %% Unique:
  %%    _2404
  _2163 = bif:'==' _2404, `62`
  br _2163, ^2749, ^2745

2749:
  %% guard_SUITE.erl:1490
  %% Argument types:
  %%    
  %% Unique:
  %%    _2406
  _2164 = bif:'==' _2406, `62`
  br _2164, ^2739, ^2745

2739:
  %% Result type:
  %%    'true'
  ret `true`

2745:
  %% guard_SUITE.erl:1491
  %% Argument types:
  %%    
  %% Unique:
  %%    _2404
  _2166 = bif:'==' _2404, `60`
  br _2166, ^2747, ^2735

2747:
  %% guard_SUITE.erl:1491
  %% Argument types:
  %%    
  %% Unique:
  %%    _2406
  _2167 = bif:'==' _2406, `124`
  ret _2167

2735:
  %% Result type:
  %%    'false'
  ret `false`
}

%% guard_SUITE.erl:1481
%% Counter = 2743
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-55-'`(_2158, _2157) {
0:
  %% Argument types:
  %%    
  %% Unique:
  %%    _2158
  _2736 = bif:is_atom _2158
  br _2736, ^2736, ^2735

2736:
  %% guard_SUITE.erl:1482
  %% Argument types:
  %%    _2158 => atom()
  %% Unique:
  %%    _2157, 
  %%    _2158
  _2155 = bif:'=/=' _2157, _2158

  %% guard_SUITE.erl:1482
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _2155
  _2401 = call (`id`/1), _2155

  %% Aliased:
  %%    _2401
  _2737 = succeeded:body _2401
  br _2737, ^2737, ^1

2737:
  %% Argument types:
  %%    _2401 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _2401
  _2740 = bif:'=:=' _2401, `true`
  br _2740, ^2740, ^2739

2740:
  %% Result type:
  %%    'ok'
  ret `ok`

2739:
  %% Result type:
  %%    'error'
  ret `error`

2735:
  %% guard_SUITE.erl:1481
  %% Unique:
  %%    _2157, 
  %%    _2158
  %% Anno: #{inlined => {'-rel_ops/1-inlined-1-',2}}
  _2732 = match_fail `function_clause`, _2158, _2157

  %% Unique:
  %%    _2732
  _2741 = succeeded:body _2732
  br ^1

1:
  _2733 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2733
}

%% guard_SUITE.erl:1474
%% Counter = 2742
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-54-'`(_2150, _2149) {
0:
  %% Argument types:
  %%    
  %% Unique:
  %%    _2150
  _2735 = bif:is_atom _2150
  br _2735, ^2735, ^2734

2735:
  %% guard_SUITE.erl:1475
  %% Argument types:
  %%    _2150 => atom()
  %% Unique:
  %%    _2149, 
  %%    _2150
  _2147 = bif:'=/=' _2150, _2149

  %% guard_SUITE.erl:1475
  %% Result type:
  %%    atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Unique:
  %%    _2147
  X = call (`id`/1), _2147

  %% Aliased:
  %%    X
  _2736 = succeeded:body X
  br _2736, ^2736, ^1

2736:
  %% Argument types:
  %%    X => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    X
  _2739 = bif:'=:=' X, `true`
  br _2739, ^2739, ^2738

2739:
  %% Result type:
  %%    'ok'
  ret `ok`

2738:
  %% Result type:
  %%    'error'
  ret `error`

2734:
  %% guard_SUITE.erl:1474
  %% Unique:
  %%    _2149, 
  %%    _2150
  %% Anno: #{inlined => {'-rel_ops/1-inlined-0-',2}}
  _2731 = match_fail `function_clause`, _2150, _2149

  %% Unique:
  %%    _2731
  _2740 = succeeded:body _2731
  br ^1

1:
  _2732 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2732
}

%% guard_SUITE.erl:1471
%% Counter = 2793
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-53-'`(_2137, _2136, _2135, _2134) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2136, 
  %%    _2137
  _2734 = bif:'==' _2137, _2136
  br _2734, ^2785, ^2736

2785:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2135
  _2121 = bif:'=:=' _2135, `true`
  br _2121, ^2765, ^2749

2765:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2134
  _2127 = bif:'=:=' _2134, `true`
  br _2127, ^2761, ^2762

2761:
  %% guard_SUITE.erl:1471
  _2725 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2725
  _2764 = succeeded:body _2725
  br ^1

2762:
  %% Result type:
  %%    'ok'
  ret `ok`

2749:
  %% guard_SUITE.erl:1471
  _2727 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2727
  _2770 = succeeded:body _2727
  br ^1

2736:
  %% guard_SUITE.erl:1471
  _2729 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2729
  _2776 = succeeded:body _2729
  br ^1

1:
  _2730 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2730
}

%% guard_SUITE.erl:1463
%% Counter = 2787
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-52-'`(_2092, _2091, _2090, _2089) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2091, 
  %%    _2092
  _2728 = bif:'>=' _2092, _2091
  br _2728, ^2779, ^2730

2779:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2090
  _2076 = bif:'=:=' _2090, `true`
  br _2076, ^2759, ^2743

2759:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2089
  _2082 = bif:'=:=' _2089, `true`
  br _2082, ^2755, ^2756

2755:
  %% guard_SUITE.erl:1463
  _2719 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2719
  _2758 = succeeded:body _2719
  br ^1

2756:
  %% Result type:
  %%    'ok'
  ret `ok`

2743:
  %% guard_SUITE.erl:1463
  _2721 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2721
  _2764 = succeeded:body _2721
  br ^1

2730:
  %% guard_SUITE.erl:1463
  _2723 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2723
  _2770 = succeeded:body _2723
  br ^1

1:
  _2724 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2724
}

%% guard_SUITE.erl:1462
%% Counter = 2770
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-51-'`(_2052, _2051, _2050, _2049) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2051, 
  %%    _2052
  _2722 = bif:'>=' _2052, _2051
  br _2722, ^2724, ^2753

2724:
  %% guard_SUITE.erl:1462
  _2717 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2717
  _2755 = succeeded:body _2717
  br ^1

2753:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2049
  _2033 = bif:'=:=' _2049, `true`
  br _2033, ^2731, ^2758

2731:
  %% guard_SUITE.erl:1462
  _2716 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2716
  _2752 = succeeded:body _2716
  br ^1

2758:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2050
  _2046 = bif:'=:=' _2050, `true`
  br _2046, ^2744, ^2743

2744:
  %% Result type:
  %%    'ok'
  ret `ok`

2743:
  %% guard_SUITE.erl:1462
  _2714 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2714
  _2746 = succeeded:body _2714
  br ^1

1:
  _2718 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2718
}

%% guard_SUITE.erl:1461
%% Counter = 2776
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-50-'`(_2016, _2015, _2014, _2013) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2015, 
  %%    _2016
  _2717 = bif:'>=' _2016, _2015
  br _2717, ^2768, ^2719

2768:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2014
  _2000 = bif:'=:=' _2014, `true`
  br _2000, ^2748, ^2732

2748:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2013
  _2006 = bif:'=:=' _2013, `true`
  br _2006, ^2744, ^2745

2744:
  %% guard_SUITE.erl:1461
  _2708 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2708
  _2747 = succeeded:body _2708
  br ^1

2745:
  %% Result type:
  %%    'ok'
  ret `ok`

2732:
  %% guard_SUITE.erl:1461
  _2710 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2710
  _2753 = succeeded:body _2710
  br ^1

2719:
  %% guard_SUITE.erl:1461
  _2712 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2712
  _2759 = succeeded:body _2712
  br ^1

1:
  _2713 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2713
}

%% guard_SUITE.erl:1459
%% Counter = 2770
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-49-'`(_1976, _1975, _1974, _1973) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1975, 
  %%    _1976
  _2711 = bif:'=<' _1976, _1975
  br _2711, ^2762, ^2713

2762:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1974
  _1960 = bif:'=:=' _1974, `true`
  br _1960, ^2742, ^2726

2742:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1973
  _1966 = bif:'=:=' _1973, `true`
  br _1966, ^2738, ^2739

2738:
  %% guard_SUITE.erl:1459
  _2702 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2702
  _2741 = succeeded:body _2702
  br ^1

2739:
  %% Result type:
  %%    'ok'
  ret `ok`

2726:
  %% guard_SUITE.erl:1459
  _2704 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2704
  _2747 = succeeded:body _2704
  br ^1

2713:
  %% guard_SUITE.erl:1459
  _2706 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2706
  _2753 = succeeded:body _2706
  br ^1

1:
  _2707 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2707
}

%% guard_SUITE.erl:1458
%% Counter = 2753
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-48-'`(_1934, _1933, _1932, _1931) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1933, 
  %%    _1934
  _2705 = bif:'=<' _1934, _1933
  br _2705, ^2707, ^2736

2707:
  %% guard_SUITE.erl:1458
  _2700 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2700
  _2738 = succeeded:body _2700
  br ^1

2736:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1931
  _1915 = bif:'=:=' _1931, `true`
  br _1915, ^2714, ^2741

2714:
  %% guard_SUITE.erl:1458
  _2699 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2699
  _2735 = succeeded:body _2699
  br ^1

2741:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1932
  _1928 = bif:'=:=' _1932, `true`
  br _1928, ^2727, ^2726

2727:
  %% Result type:
  %%    'ok'
  ret `ok`

2726:
  %% guard_SUITE.erl:1458
  _2697 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2697
  _2729 = succeeded:body _2697
  br ^1

1:
  _2701 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2701
}

%% guard_SUITE.erl:1457
%% Counter = 2759
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-47-'`(_1894, _1893, _1892, _1891) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1893, 
  %%    _1894
  _2700 = bif:'=<' _1894, _1893
  br _2700, ^2751, ^2702

2751:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1892
  _1878 = bif:'=:=' _1892, `true`
  br _1878, ^2731, ^2715

2731:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1891
  _1884 = bif:'=:=' _1891, `true`
  br _1884, ^2727, ^2728

2727:
  %% guard_SUITE.erl:1457
  _2691 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2691
  _2730 = succeeded:body _2691
  br ^1

2728:
  %% Result type:
  %%    'ok'
  ret `ok`

2715:
  %% guard_SUITE.erl:1457
  _2693 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2693
  _2736 = succeeded:body _2693
  br ^1

2702:
  %% guard_SUITE.erl:1457
  _2695 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2695
  _2742 = succeeded:body _2695
  br ^1

1:
  _2696 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2696
}

%% guard_SUITE.erl:1455
%% Counter = 2742
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-46-'`(_1854, _1853, _1852, _1851) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1853, 
  %%    _1854
  _2694 = bif:'<' _1854, _1853
  br _2694, ^2696, ^2725

2696:
  %% guard_SUITE.erl:1455
  _2689 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2689
  _2727 = succeeded:body _2689
  br ^1

2725:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1851
  _1835 = bif:'=:=' _1851, `true`
  br _1835, ^2703, ^2730

2703:
  %% guard_SUITE.erl:1455
  _2688 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2688
  _2724 = succeeded:body _2688
  br ^1

2730:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1852
  _1848 = bif:'=:=' _1852, `true`
  br _1848, ^2716, ^2715

2716:
  %% Result type:
  %%    'ok'
  ret `ok`

2715:
  %% guard_SUITE.erl:1455
  _2686 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2686
  _2718 = succeeded:body _2686
  br ^1

1:
  _2690 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2690
}

%% guard_SUITE.erl:1454
%% Counter = 2737
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-45-'`(_1818, _1817, _1816, _1815) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1817, 
  %%    _1818
  _2689 = bif:'<' _1818, _1817
  br _2689, ^2691, ^2720

2691:
  %% guard_SUITE.erl:1454
  _2684 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2684
  _2722 = succeeded:body _2684
  br ^1

2720:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1815
  _1799 = bif:'=:=' _1815, `true`
  br _1799, ^2698, ^2725

2698:
  %% guard_SUITE.erl:1454
  _2683 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2683
  _2719 = succeeded:body _2683
  br ^1

2725:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1816
  _1812 = bif:'=:=' _1816, `true`
  br _1812, ^2711, ^2710

2711:
  %% Result type:
  %%    'ok'
  ret `ok`

2710:
  %% guard_SUITE.erl:1454
  _2681 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2681
  _2713 = succeeded:body _2681
  br ^1

1:
  _2685 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2685
}

%% guard_SUITE.erl:1453
%% Counter = 2743
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-44-'`(_1782, _1781, _1780, _1779) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1781, 
  %%    _1782
  _2684 = bif:'<' _1782, _1781
  br _2684, ^2735, ^2686

2735:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1780
  _1766 = bif:'=:=' _1780, `true`
  br _1766, ^2715, ^2699

2715:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1779
  _1772 = bif:'=:=' _1779, `true`
  br _1772, ^2711, ^2712

2711:
  %% guard_SUITE.erl:1453
  _2675 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2675
  _2714 = succeeded:body _2675
  br ^1

2712:
  %% Result type:
  %%    'ok'
  ret `ok`

2699:
  %% guard_SUITE.erl:1453
  _2677 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2677
  _2720 = succeeded:body _2677
  br ^1

2686:
  %% guard_SUITE.erl:1453
  _2679 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2679
  _2726 = succeeded:body _2679
  br ^1

1:
  _2680 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2680
}

%% guard_SUITE.erl:1451
%% Counter = 2726
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-43-'`(_1742, _1741, _1740, _1739) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1741, 
  %%    _1742
  _2678 = bif:'>' _1742, _1741
  br _2678, ^2680, ^2709

2680:
  %% guard_SUITE.erl:1451
  _2673 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2673
  _2711 = succeeded:body _2673
  br ^1

2709:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1739
  _1723 = bif:'=:=' _1739, `true`
  br _1723, ^2687, ^2714

2687:
  %% guard_SUITE.erl:1451
  _2672 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2672
  _2708 = succeeded:body _2672
  br ^1

2714:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1740
  _1736 = bif:'=:=' _1740, `true`
  br _1736, ^2700, ^2699

2700:
  %% Result type:
  %%    'ok'
  ret `ok`

2699:
  %% guard_SUITE.erl:1451
  _2670 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2670
  _2702 = succeeded:body _2670
  br ^1

1:
  _2674 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2674
}

%% guard_SUITE.erl:1450
%% Counter = 2732
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-42-'`(_1706, _1705, _1704, _1703) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1705, 
  %%    _1706
  _2673 = bif:'>' _1706, _1705
  br _2673, ^2724, ^2675

2724:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1704
  _1690 = bif:'=:=' _1704, `true`
  br _1690, ^2704, ^2688

2704:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1703
  _1696 = bif:'=:=' _1703, `true`
  br _1696, ^2700, ^2701

2700:
  %% guard_SUITE.erl:1450
  _2664 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2664
  _2703 = succeeded:body _2664
  br ^1

2701:
  %% Result type:
  %%    'ok'
  ret `ok`

2688:
  %% guard_SUITE.erl:1450
  _2666 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2666
  _2709 = succeeded:body _2666
  br ^1

2675:
  %% guard_SUITE.erl:1450
  _2668 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2668
  _2715 = succeeded:body _2668
  br ^1

1:
  _2669 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2669
}

%% guard_SUITE.erl:1449
%% Counter = 2715
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-41-'`(_1666, _1665, _1664, _1663) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1665, 
  %%    _1666
  _2667 = bif:'>' _1666, _1665
  br _2667, ^2669, ^2698

2669:
  %% guard_SUITE.erl:1449
  _2662 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2662
  _2700 = succeeded:body _2662
  br ^1

2698:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1663
  _1647 = bif:'=:=' _1663, `true`
  br _1647, ^2676, ^2703

2676:
  %% guard_SUITE.erl:1449
  _2661 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2661
  _2697 = succeeded:body _2661
  br ^1

2703:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1664
  _1660 = bif:'=:=' _1664, `true`
  br _1660, ^2689, ^2688

2689:
  %% Result type:
  %%    'ok'
  ret `ok`

2688:
  %% guard_SUITE.erl:1449
  _2659 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2659
  _2691 = succeeded:body _2659
  br ^1

1:
  _2663 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2663
}

%% guard_SUITE.erl:1447
%% Counter = 2721
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-40-'`(_1630, _1629, _1628, _1627) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1629, 
  %%    _1630
  _2662 = bif:'=:=' _1630, _1629
  br _2662, ^2713, ^2664

2713:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1628
  _1614 = bif:'=:=' _1628, `true`
  br _1614, ^2693, ^2677

2693:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1627
  _1620 = bif:'=:=' _1627, `true`
  br _1620, ^2689, ^2690

2689:
  %% guard_SUITE.erl:1447
  _2653 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2653
  _2692 = succeeded:body _2653
  br ^1

2690:
  %% Result type:
  %%    'ok'
  ret `ok`

2677:
  %% guard_SUITE.erl:1447
  _2655 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2655
  _2698 = succeeded:body _2655
  br ^1

2664:
  %% guard_SUITE.erl:1447
  _2657 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2657
  _2704 = succeeded:body _2657
  br ^1

1:
  _2658 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2658
}

%% guard_SUITE.erl:1446
%% Counter = 2704
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-39-'`(_1590, _1589, _1588, _1587) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1589, 
  %%    _1590
  _2656 = bif:'=:=' _1590, _1589
  br _2656, ^2658, ^2687

2658:
  %% guard_SUITE.erl:1446
  _2651 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2651
  _2689 = succeeded:body _2651
  br ^1

2687:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1587
  _1571 = bif:'=:=' _1587, `true`
  br _1571, ^2665, ^2692

2665:
  %% guard_SUITE.erl:1446
  _2650 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2650
  _2686 = succeeded:body _2650
  br ^1

2692:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1588
  _1584 = bif:'=:=' _1588, `true`
  br _1584, ^2678, ^2677

2678:
  %% Result type:
  %%    'ok'
  ret `ok`

2677:
  %% guard_SUITE.erl:1446
  _2648 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2648
  _2680 = succeeded:body _2648
  br ^1

1:
  _2652 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2652
}

%% guard_SUITE.erl:1443
%% Counter = 2683
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-38-'`(_1553, _1552, _1551, _1550) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1552, 
  %%    _1553
  _2635 = bif:'==' _1553, _1552
  br _2635, ^2637, ^2666

2637:
  %% guard_SUITE.erl:1443
  _2630 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2630
  _2668 = succeeded:body _2630
  br ^1

2666:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1550
  _1534 = bif:'=:=' _1550, `true`
  br _1534, ^2644, ^2671

2644:
  %% guard_SUITE.erl:1443
  _2629 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2629
  _2665 = succeeded:body _2629
  br ^1

2671:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1551
  _1547 = bif:'=:=' _1551, `true`
  br _1547, ^2657, ^2656

2657:
  %% Result type:
  %%    'ok'
  ret `ok`

2656:
  %% guard_SUITE.erl:1443
  _2627 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2627
  _2659 = succeeded:body _2627
  br ^1

1:
  _2631 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2631
}

%% guard_SUITE.erl:1442
%% Counter = 2689
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-37-'`(_1517, _1516, _1515, _1514) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1516, 
  %%    _1517
  _2630 = bif:'==' _1517, _1516
  br _2630, ^2681, ^2632

2681:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1515
  _1501 = bif:'=:=' _1515, `true`
  br _1501, ^2661, ^2645

2661:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1514
  _1507 = bif:'=:=' _1514, `true`
  br _1507, ^2657, ^2658

2657:
  %% guard_SUITE.erl:1442
  _2621 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2621
  _2660 = succeeded:body _2621
  br ^1

2658:
  %% Result type:
  %%    'ok'
  ret `ok`

2645:
  %% guard_SUITE.erl:1442
  _2623 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2623
  _2666 = succeeded:body _2623
  br ^1

2632:
  %% guard_SUITE.erl:1442
  _2625 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2625
  _2672 = succeeded:body _2625
  br ^1

1:
  _2626 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2626
}

%% guard_SUITE.erl:1441
%% Counter = 2683
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-36-'`(_1477, _1476, _1475, _1474) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1476, 
  %%    _1477
  _2624 = bif:'==' _1477, _1476
  br _2624, ^2675, ^2626

2675:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1475
  _1461 = bif:'=:=' _1475, `true`
  br _1461, ^2655, ^2639

2655:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1474
  _1467 = bif:'=:=' _1474, `true`
  br _1467, ^2651, ^2652

2651:
  %% guard_SUITE.erl:1441
  _2615 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2615
  _2654 = succeeded:body _2615
  br ^1

2652:
  %% Result type:
  %%    'ok'
  ret `ok`

2639:
  %% guard_SUITE.erl:1441
  _2617 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2617
  _2660 = succeeded:body _2617
  br ^1

2626:
  %% guard_SUITE.erl:1441
  _2619 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2619
  _2666 = succeeded:body _2619
  br ^1

1:
  _2620 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2620
}

%% guard_SUITE.erl:1440
%% Counter = 2677
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-35-'`(_1437, _1436, _1435, _1434) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1436, 
  %%    _1437
  _2618 = bif:'==' _1437, _1436
  br _2618, ^2669, ^2620

2669:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1435
  _1421 = bif:'=:=' _1435, `true`
  br _1421, ^2649, ^2633

2649:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1434
  _1427 = bif:'=:=' _1434, `true`
  br _1427, ^2645, ^2646

2645:
  %% guard_SUITE.erl:1440
  _2609 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2609
  _2648 = succeeded:body _2609
  br ^1

2646:
  %% Result type:
  %%    'ok'
  ret `ok`

2633:
  %% guard_SUITE.erl:1440
  _2611 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2611
  _2654 = succeeded:body _2611
  br ^1

2620:
  %% guard_SUITE.erl:1440
  _2613 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2613
  _2660 = succeeded:body _2613
  br ^1

1:
  _2614 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2614
}

%% guard_SUITE.erl:1439
%% Counter = 2671
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-34-'`(_1397, _1396, _1395, _1394) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1396, 
  %%    _1397
  _2612 = bif:'==' _1397, _1396
  br _2612, ^2663, ^2614

2663:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1395
  _1381 = bif:'=:=' _1395, `true`
  br _1381, ^2643, ^2627

2643:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1394
  _1387 = bif:'=:=' _1394, `true`
  br _1387, ^2639, ^2640

2639:
  %% guard_SUITE.erl:1439
  _2603 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2603
  _2642 = succeeded:body _2603
  br ^1

2640:
  %% Result type:
  %%    'ok'
  ret `ok`

2627:
  %% guard_SUITE.erl:1439
  _2605 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2605
  _2648 = succeeded:body _2605
  br ^1

2614:
  %% guard_SUITE.erl:1439
  _2607 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2607
  _2654 = succeeded:body _2607
  br ^1

1:
  _2608 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2608
}

%% guard_SUITE.erl:1438
%% Counter = 2665
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-33-'`(_1357, _1356, _1355, _1354) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1356, 
  %%    _1357
  _2606 = bif:'==' _1357, _1356
  br _2606, ^2657, ^2608

2657:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1355
  _1341 = bif:'=:=' _1355, `true`
  br _1341, ^2637, ^2621

2637:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1354
  _1347 = bif:'=:=' _1354, `true`
  br _1347, ^2633, ^2634

2633:
  %% guard_SUITE.erl:1438
  _2597 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2597
  _2636 = succeeded:body _2597
  br ^1

2634:
  %% Result type:
  %%    'ok'
  ret `ok`

2621:
  %% guard_SUITE.erl:1438
  _2599 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2599
  _2642 = succeeded:body _2599
  br ^1

2608:
  %% guard_SUITE.erl:1438
  _2601 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2601
  _2648 = succeeded:body _2601
  br ^1

1:
  _2602 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2602
}

%% guard_SUITE.erl:1437
%% Counter = 2659
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-32-'`(_1317, _1316, _1315, _1314) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1316, 
  %%    _1317
  _2600 = bif:'==' _1317, _1316
  br _2600, ^2651, ^2602

2651:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1315
  _1301 = bif:'=:=' _1315, `true`
  br _1301, ^2631, ^2615

2631:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1314
  _1307 = bif:'=:=' _1314, `true`
  br _1307, ^2627, ^2628

2627:
  %% guard_SUITE.erl:1437
  _2591 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2591
  _2630 = succeeded:body _2591
  br ^1

2628:
  %% Result type:
  %%    'ok'
  ret `ok`

2615:
  %% guard_SUITE.erl:1437
  _2593 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2593
  _2636 = succeeded:body _2593
  br ^1

2602:
  %% guard_SUITE.erl:1437
  _2595 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2595
  _2642 = succeeded:body _2595
  br ^1

1:
  _2596 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2596
}

%% guard_SUITE.erl:1436
%% Counter = 2653
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-31-'`(_1277, _1276, _1275, _1274) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1276, 
  %%    _1277
  _2594 = bif:'==' _1277, _1276
  br _2594, ^2645, ^2596

2645:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1275
  _1261 = bif:'=:=' _1275, `true`
  br _1261, ^2625, ^2609

2625:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1274
  _1267 = bif:'=:=' _1274, `true`
  br _1267, ^2621, ^2622

2621:
  %% guard_SUITE.erl:1436
  _2585 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2585
  _2624 = succeeded:body _2585
  br ^1

2622:
  %% Result type:
  %%    'ok'
  ret `ok`

2609:
  %% guard_SUITE.erl:1436
  _2587 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2587
  _2630 = succeeded:body _2587
  br ^1

2596:
  %% guard_SUITE.erl:1436
  _2589 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2589
  _2636 = succeeded:body _2589
  br ^1

1:
  _2590 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2590
}

%% guard_SUITE.erl:1428
%% Counter = 2636
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-30-'`(_1235, _1234, _1233, _1232) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1234, 
  %%    _1235
  _2588 = bif:'==' _1235, _1234
  br _2588, ^2590, ^2619

2590:
  %% guard_SUITE.erl:1428
  _2583 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2583
  _2621 = succeeded:body _2583
  br ^1

2619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1232
  _1216 = bif:'=:=' _1232, `true`
  br _1216, ^2597, ^2624

2597:
  %% guard_SUITE.erl:1428
  _2582 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2582
  _2618 = succeeded:body _2582
  br ^1

2624:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1233
  _1229 = bif:'=:=' _1233, `true`
  br _1229, ^2610, ^2609

2610:
  %% Result type:
  %%    'ok'
  ret `ok`

2609:
  %% guard_SUITE.erl:1428
  _2580 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2580
  _2612 = succeeded:body _2580
  br ^1

1:
  _2584 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2584
}

%% guard_SUITE.erl:1427
%% Counter = 2642
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-29-'`(_1193, _1192, _1191, _1190) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1192, 
  %%    _1193
  _2583 = bif:'==' _1193, _1192
  br _2583, ^2634, ^2585

2634:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1191
  _1177 = bif:'=:=' _1191, `true`
  br _1177, ^2614, ^2598

2614:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1190
  _1183 = bif:'=:=' _1190, `true`
  br _1183, ^2610, ^2611

2610:
  %% guard_SUITE.erl:1427
  _2574 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2574
  _2613 = succeeded:body _2574
  br ^1

2611:
  %% Result type:
  %%    'ok'
  ret `ok`

2598:
  %% guard_SUITE.erl:1427
  _2576 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2576
  _2619 = succeeded:body _2576
  br ^1

2585:
  %% guard_SUITE.erl:1427
  _2578 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2578
  _2625 = succeeded:body _2578
  br ^1

1:
  _2579 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2579
}

%% guard_SUITE.erl:1426
%% Counter = 2636
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-28-'`(_1147, _1146, _1145, _1144) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1146, 
  %%    _1147
  _2577 = bif:'==' _1147, _1146
  br _2577, ^2628, ^2579

2628:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1145
  _1131 = bif:'=:=' _1145, `true`
  br _1131, ^2608, ^2592

2608:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1144
  _1137 = bif:'=:=' _1144, `true`
  br _1137, ^2604, ^2605

2604:
  %% guard_SUITE.erl:1426
  _2568 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2568
  _2607 = succeeded:body _2568
  br ^1

2605:
  %% Result type:
  %%    'ok'
  ret `ok`

2592:
  %% guard_SUITE.erl:1426
  _2570 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2570
  _2613 = succeeded:body _2570
  br ^1

2579:
  %% guard_SUITE.erl:1426
  _2572 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2572
  _2619 = succeeded:body _2572
  br ^1

1:
  _2573 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2573
}

%% guard_SUITE.erl:1425
%% Counter = 2630
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-27-'`(_1101, _1100, _1099, _1098) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1100, 
  %%    _1101
  _2571 = bif:'==' _1101, _1100
  br _2571, ^2622, ^2573

2622:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1099
  _1085 = bif:'=:=' _1099, `true`
  br _1085, ^2602, ^2586

2602:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1098
  _1091 = bif:'=:=' _1098, `true`
  br _1091, ^2598, ^2599

2598:
  %% guard_SUITE.erl:1425
  _2562 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2562
  _2601 = succeeded:body _2562
  br ^1

2599:
  %% Result type:
  %%    'ok'
  ret `ok`

2586:
  %% guard_SUITE.erl:1425
  _2564 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2564
  _2607 = succeeded:body _2564
  br ^1

2573:
  %% guard_SUITE.erl:1425
  _2566 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2566
  _2613 = succeeded:body _2566
  br ^1

1:
  _2567 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2567
}

%% guard_SUITE.erl:1423
%% Counter = 2613
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-26-'`(_1057, _1056, _1055, _1054) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1056, 
  %%    _1057
  _2565 = bif:'==' _1057, _1056
  br _2565, ^2567, ^2596

2567:
  %% guard_SUITE.erl:1423
  _2560 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2560
  _2598 = succeeded:body _2560
  br ^1

2596:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1054
  _1038 = bif:'=:=' _1054, `true`
  br _1038, ^2574, ^2601

2574:
  %% guard_SUITE.erl:1423
  _2559 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2559
  _2595 = succeeded:body _2559
  br ^1

2601:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1055
  _1051 = bif:'=:=' _1055, `true`
  br _1051, ^2587, ^2586

2587:
  %% Result type:
  %%    'ok'
  ret `ok`

2586:
  %% guard_SUITE.erl:1423
  _2557 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2557
  _2589 = succeeded:body _2557
  br ^1

1:
  _2561 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2561
}

%% guard_SUITE.erl:1422
%% Counter = 2608
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-25-'`(_1021, _1020, _1019, _1018) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1020, 
  %%    _1021
  _2560 = bif:'==' _1021, _1020
  br _2560, ^2562, ^2591

2562:
  %% guard_SUITE.erl:1422
  _2555 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2555
  _2593 = succeeded:body _2555
  br ^1

2591:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1018
  _1002 = bif:'=:=' _1018, `true`
  br _1002, ^2569, ^2596

2569:
  %% guard_SUITE.erl:1422
  _2554 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2554
  _2590 = succeeded:body _2554
  br ^1

2596:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1019
  _1015 = bif:'=:=' _1019, `true`
  br _1015, ^2582, ^2581

2582:
  %% Result type:
  %%    'ok'
  ret `ok`

2581:
  %% guard_SUITE.erl:1422
  _2552 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2552
  _2584 = succeeded:body _2552
  br ^1

1:
  _2556 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2556
}

%% guard_SUITE.erl:1421
%% Counter = 2614
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-24-'`(_985, _984, _983, _982) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _984, 
  %%    _985
  _2555 = bif:'==' _985, _984
  br _2555, ^2606, ^2557

2606:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _983
  _969 = bif:'=:=' _983, `true`
  br _969, ^2586, ^2570

2586:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _982
  _975 = bif:'=:=' _982, `true`
  br _975, ^2582, ^2583

2582:
  %% guard_SUITE.erl:1421
  _2546 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2546
  _2585 = succeeded:body _2546
  br ^1

2583:
  %% Result type:
  %%    'ok'
  ret `ok`

2570:
  %% guard_SUITE.erl:1421
  _2548 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2548
  _2591 = succeeded:body _2548
  br ^1

2557:
  %% guard_SUITE.erl:1421
  _2550 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2550
  _2597 = succeeded:body _2550
  br ^1

1:
  _2551 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2551
}

%% guard_SUITE.erl:1420
%% Counter = 2597
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-23-'`(_945, _944, _943, _942) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _944, 
  %%    _945
  _2549 = bif:'==' _945, _944
  br _2549, ^2551, ^2580

2551:
  %% guard_SUITE.erl:1420
  _2544 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2544
  _2582 = succeeded:body _2544
  br ^1

2580:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _942
  _926 = bif:'=:=' _942, `true`
  br _926, ^2558, ^2585

2558:
  %% guard_SUITE.erl:1420
  _2543 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2543
  _2579 = succeeded:body _2543
  br ^1

2585:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _943
  _939 = bif:'=:=' _943, `true`
  br _939, ^2571, ^2570

2571:
  %% Result type:
  %%    'ok'
  ret `ok`

2570:
  %% guard_SUITE.erl:1420
  _2541 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2541
  _2573 = succeeded:body _2541
  br ^1

1:
  _2545 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2545
}

%% guard_SUITE.erl:1419
%% Counter = 2603
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-22-'`(_909, _908, _907, _906) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _908, 
  %%    _909
  _2544 = bif:'==' _909, _908
  br _2544, ^2595, ^2546

2595:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _907
  _893 = bif:'=:=' _907, `true`
  br _893, ^2575, ^2559

2575:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _906
  _899 = bif:'=:=' _906, `true`
  br _899, ^2571, ^2572

2571:
  %% guard_SUITE.erl:1419
  _2535 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2535
  _2574 = succeeded:body _2535
  br ^1

2572:
  %% Result type:
  %%    'ok'
  ret `ok`

2559:
  %% guard_SUITE.erl:1419
  _2537 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2537
  _2580 = succeeded:body _2537
  br ^1

2546:
  %% guard_SUITE.erl:1419
  _2539 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2539
  _2586 = succeeded:body _2539
  br ^1

1:
  _2540 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2540
}

%% guard_SUITE.erl:1418
%% Counter = 2586
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-21-'`(_869, _868, _867, _866) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _868, 
  %%    _869
  _2538 = bif:'==' _869, _868
  br _2538, ^2540, ^2569

2540:
  %% guard_SUITE.erl:1418
  _2533 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2533
  _2571 = succeeded:body _2533
  br ^1

2569:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _866
  _850 = bif:'=:=' _866, `true`
  br _850, ^2547, ^2574

2547:
  %% guard_SUITE.erl:1418
  _2532 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2532
  _2568 = succeeded:body _2532
  br ^1

2574:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _867
  _863 = bif:'=:=' _867, `true`
  br _863, ^2560, ^2559

2560:
  %% Result type:
  %%    'ok'
  ret `ok`

2559:
  %% guard_SUITE.erl:1418
  _2530 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2530
  _2562 = succeeded:body _2530
  br ^1

1:
  _2534 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2534
}

%% guard_SUITE.erl:1417
%% Counter = 2592
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-20-'`(_833, _832, _831, _830) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _832, 
  %%    _833
  _2533 = bif:'==' _833, _832
  br _2533, ^2584, ^2535

2584:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _831
  _817 = bif:'=:=' _831, `true`
  br _817, ^2564, ^2548

2564:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _830
  _823 = bif:'=:=' _830, `true`
  br _823, ^2560, ^2561

2560:
  %% guard_SUITE.erl:1417
  _2524 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2524
  _2563 = succeeded:body _2524
  br ^1

2561:
  %% Result type:
  %%    'ok'
  ret `ok`

2548:
  %% guard_SUITE.erl:1417
  _2526 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2526
  _2569 = succeeded:body _2526
  br ^1

2535:
  %% guard_SUITE.erl:1417
  _2528 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2528
  _2575 = succeeded:body _2528
  br ^1

1:
  _2529 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2529
}

%% guard_SUITE.erl:1416
%% Counter = 2586
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-19-'`(_793, _792, _791, _790) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _792, 
  %%    _793
  _2527 = bif:'==' _793, _792
  br _2527, ^2578, ^2529

2578:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _791
  _777 = bif:'=:=' _791, `true`
  br _777, ^2558, ^2542

2558:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _790
  _783 = bif:'=:=' _790, `true`
  br _783, ^2554, ^2555

2554:
  %% guard_SUITE.erl:1416
  _2518 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2518
  _2557 = succeeded:body _2518
  br ^1

2555:
  %% Result type:
  %%    'ok'
  ret `ok`

2542:
  %% guard_SUITE.erl:1416
  _2520 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2520
  _2563 = succeeded:body _2520
  br ^1

2529:
  %% guard_SUITE.erl:1416
  _2522 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2522
  _2569 = succeeded:body _2522
  br ^1

1:
  _2523 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2523
}

%% guard_SUITE.erl:1415
%% Counter = 2580
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-18-'`(_753, _752, _751, _750) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _752, 
  %%    _753
  _2521 = bif:'==' _753, _752
  br _2521, ^2572, ^2523

2572:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _751
  _737 = bif:'=:=' _751, `true`
  br _737, ^2552, ^2536

2552:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _750
  _743 = bif:'=:=' _750, `true`
  br _743, ^2548, ^2549

2548:
  %% guard_SUITE.erl:1415
  _2512 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2512
  _2551 = succeeded:body _2512
  br ^1

2549:
  %% Result type:
  %%    'ok'
  ret `ok`

2536:
  %% guard_SUITE.erl:1415
  _2514 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2514
  _2557 = succeeded:body _2514
  br ^1

2523:
  %% guard_SUITE.erl:1415
  _2516 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2516
  _2563 = succeeded:body _2516
  br ^1

1:
  _2517 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2517
}

%% guard_SUITE.erl:1414
%% Counter = 2574
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-17-'`(_713, _712, _711, _710) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _712, 
  %%    _713
  _2515 = bif:'==' _713, _712
  br _2515, ^2566, ^2517

2566:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _711
  _697 = bif:'=:=' _711, `true`
  br _697, ^2546, ^2530

2546:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _710
  _703 = bif:'=:=' _710, `true`
  br _703, ^2542, ^2543

2542:
  %% guard_SUITE.erl:1414
  _2506 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2506
  _2545 = succeeded:body _2506
  br ^1

2543:
  %% Result type:
  %%    'ok'
  ret `ok`

2530:
  %% guard_SUITE.erl:1414
  _2508 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2508
  _2551 = succeeded:body _2508
  br ^1

2517:
  %% guard_SUITE.erl:1414
  _2510 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2510
  _2557 = succeeded:body _2510
  br ^1

1:
  _2511 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2511
}

%% guard_SUITE.erl:1412
%% Counter = 2568
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-16-'`(_673, _672, _671, _670) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _672, 
  %%    _673
  _2509 = bif:'==' _673, _672
  br _2509, ^2511, ^2560

2511:
  %% guard_SUITE.erl:1412
  _2504 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2504
  _2551 = succeeded:body _2504
  br ^1

2560:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _671
  _657 = bif:'=:=' _671, `true`
  br _657, ^2540, ^2524

2540:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _670
  _663 = bif:'=:=' _670, `true`
  br _663, ^2536, ^2537

2536:
  %% guard_SUITE.erl:1412
  _2500 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2500
  _2539 = succeeded:body _2500
  br ^1

2537:
  %% Result type:
  %%    'ok'
  ret `ok`

2524:
  %% guard_SUITE.erl:1412
  _2502 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2502
  _2545 = succeeded:body _2502
  br ^1

1:
  _2505 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2505
}

%% guard_SUITE.erl:1411
%% Counter = 2551
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-15-'`(_633, _632, _631, _630) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _632, 
  %%    _633
  _2503 = bif:'==' _633, _632
  br _2503, ^2534, ^2505

2534:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _630
  _614 = bif:'=:=' _630, `true`
  br _614, ^2512, ^2539

2512:
  %% guard_SUITE.erl:1411
  _2497 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2497
  _2533 = succeeded:body _2497
  br ^1

2539:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _631
  _627 = bif:'=:=' _631, `true`
  br _627, ^2525, ^2524

2525:
  %% Result type:
  %%    'ok'
  ret `ok`

2524:
  %% guard_SUITE.erl:1411
  _2495 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2495
  _2527 = succeeded:body _2495
  br ^1

2505:
  %% guard_SUITE.erl:1411
  _2498 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2498
  _2536 = succeeded:body _2498
  br ^1

1:
  _2499 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2499
}

%% guard_SUITE.erl:1409
%% Counter = 2557
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-14-'`(_595, _594, _593, _592) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _594, 
  %%    _595
  _2498 = bif:'==' _595, _594
  br _2498, ^2500, ^2549

2500:
  %% guard_SUITE.erl:1409
  _2493 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2493
  _2540 = succeeded:body _2493
  br ^1

2549:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _593
  _579 = bif:'=:=' _593, `true`
  br _579, ^2529, ^2513

2529:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _592
  _585 = bif:'=:=' _592, `true`
  br _585, ^2525, ^2526

2525:
  %% guard_SUITE.erl:1409
  _2489 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2489
  _2528 = succeeded:body _2489
  br ^1

2526:
  %% Result type:
  %%    'ok'
  ret `ok`

2513:
  %% guard_SUITE.erl:1409
  _2491 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2491
  _2534 = succeeded:body _2491
  br ^1

1:
  _2494 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2494
}

%% guard_SUITE.erl:1408
%% Counter = 2540
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-13-'`(_549, _548, _547, _546) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _548, 
  %%    _549
  _2492 = bif:'==' _549, _548
  br _2492, ^2523, ^2494

2523:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _546
  _530 = bif:'=:=' _546, `true`
  br _530, ^2501, ^2528

2501:
  %% guard_SUITE.erl:1408
  _2486 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2486
  _2522 = succeeded:body _2486
  br ^1

2528:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _547
  _543 = bif:'=:=' _547, `true`
  br _543, ^2514, ^2513

2514:
  %% Result type:
  %%    'ok'
  ret `ok`

2513:
  %% guard_SUITE.erl:1408
  _2484 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2484
  _2516 = succeeded:body _2484
  br ^1

2494:
  %% guard_SUITE.erl:1408
  _2487 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2487
  _2525 = succeeded:body _2487
  br ^1

1:
  _2488 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2488
}

%% guard_SUITE.erl:1407
%% Counter = 2535
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-12-'`(_507, _506, _505, _504) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _506, 
  %%    _507
  _2487 = bif:'==' _507, _506
  br _2487, ^2518, ^2489

2518:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _504
  _488 = bif:'=:=' _504, `true`
  br _488, ^2496, ^2523

2496:
  %% guard_SUITE.erl:1407
  _2481 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2481
  _2517 = succeeded:body _2481
  br ^1

2523:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _505
  _501 = bif:'=:=' _505, `true`
  br _501, ^2509, ^2508

2509:
  %% Result type:
  %%    'ok'
  ret `ok`

2508:
  %% guard_SUITE.erl:1407
  _2479 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2479
  _2511 = succeeded:body _2479
  br ^1

2489:
  %% guard_SUITE.erl:1407
  _2482 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2482
  _2520 = succeeded:body _2482
  br ^1

1:
  _2483 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2483
}

%% guard_SUITE.erl:1406
%% Counter = 2530
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-11-'`(_465, _464, _463, _462) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _464, 
  %%    _465
  _2482 = bif:'==' _465, _464
  br _2482, ^2513, ^2484

2513:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _462
  _446 = bif:'=:=' _462, `true`
  br _446, ^2491, ^2518

2491:
  %% guard_SUITE.erl:1406
  _2476 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2476
  _2512 = succeeded:body _2476
  br ^1

2518:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _463
  _459 = bif:'=:=' _463, `true`
  br _459, ^2504, ^2503

2504:
  %% Result type:
  %%    'ok'
  ret `ok`

2503:
  %% guard_SUITE.erl:1406
  _2474 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2474
  _2506 = succeeded:body _2474
  br ^1

2484:
  %% guard_SUITE.erl:1406
  _2477 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2477
  _2515 = succeeded:body _2477
  br ^1

1:
  _2478 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2478
}

%% guard_SUITE.erl:1404
%% Counter = 2525
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-10-'`(_423, _422, _421, _420) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _422, 
  %%    _423
  _2477 = bif:'==' _423, _422
  br _2477, ^2508, ^2479

2508:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _420
  _404 = bif:'=:=' _420, `true`
  br _404, ^2486, ^2513

2486:
  %% guard_SUITE.erl:1404
  _2471 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2471
  _2507 = succeeded:body _2471
  br ^1

2513:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _421
  _417 = bif:'=:=' _421, `true`
  br _417, ^2499, ^2498

2499:
  %% Result type:
  %%    'ok'
  ret `ok`

2498:
  %% guard_SUITE.erl:1404
  _2469 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2469
  _2501 = succeeded:body _2469
  br ^1

2479:
  %% guard_SUITE.erl:1404
  _2472 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2472
  _2510 = succeeded:body _2472
  br ^1

1:
  _2473 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2473
}

%% guard_SUITE.erl:1403
%% Counter = 2531
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-9-'`(_383, _382, _381, _380) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _382, 
  %%    _383
  _2472 = bif:'==' _383, _382
  br _2472, ^2474, ^2523

2474:
  %% guard_SUITE.erl:1403
  _2467 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2467
  _2514 = succeeded:body _2467
  br ^1

2523:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _381
  _367 = bif:'=:=' _381, `true`
  br _367, ^2503, ^2487

2503:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _380
  _373 = bif:'=:=' _380, `true`
  br _373, ^2499, ^2500

2499:
  %% guard_SUITE.erl:1403
  _2463 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2463
  _2502 = succeeded:body _2463
  br ^1

2500:
  %% Result type:
  %%    'ok'
  ret `ok`

2487:
  %% guard_SUITE.erl:1403
  _2465 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2465
  _2508 = succeeded:body _2465
  br ^1

1:
  _2468 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2468
}

%% guard_SUITE.erl:1402
%% Counter = 2525
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-8-'`(_343, _342, _341, _340) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _342, 
  %%    _343
  _2466 = bif:'==' _343, _342
  br _2466, ^2468, ^2517

2468:
  %% guard_SUITE.erl:1402
  _2461 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2461
  _2508 = succeeded:body _2461
  br ^1

2517:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _341
  _327 = bif:'=:=' _341, `true`
  br _327, ^2497, ^2481

2497:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _340
  _333 = bif:'=:=' _340, `true`
  br _333, ^2493, ^2494

2493:
  %% guard_SUITE.erl:1402
  _2457 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2457
  _2496 = succeeded:body _2457
  br ^1

2494:
  %% Result type:
  %%    'ok'
  ret `ok`

2481:
  %% guard_SUITE.erl:1402
  _2459 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2459
  _2502 = succeeded:body _2459
  br ^1

1:
  _2462 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2462
}

%% guard_SUITE.erl:1401
%% Counter = 2508
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-7-'`(_303, _302, _301, _300) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _302, 
  %%    _303
  _2460 = bif:'==' _303, _302
  br _2460, ^2491, ^2462

2491:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _300
  _284 = bif:'=:=' _300, `true`
  br _284, ^2469, ^2496

2469:
  %% guard_SUITE.erl:1401
  _2454 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2454
  _2490 = succeeded:body _2454
  br ^1

2496:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _301
  _297 = bif:'=:=' _301, `true`
  br _297, ^2482, ^2481

2482:
  %% Result type:
  %%    'ok'
  ret `ok`

2481:
  %% guard_SUITE.erl:1401
  _2452 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2452
  _2484 = succeeded:body _2452
  br ^1

2462:
  %% guard_SUITE.erl:1401
  _2455 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2455
  _2493 = succeeded:body _2455
  br ^1

1:
  _2456 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2456
}

%% guard_SUITE.erl:1400
%% Counter = 2503
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-6-'`(_267, _266, _265, _264) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _266, 
  %%    _267
  _2455 = bif:'==' _267, _266
  br _2455, ^2486, ^2457

2486:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _248 = bif:'=:=' _264, `true`
  br _248, ^2464, ^2491

2464:
  %% guard_SUITE.erl:1400
  _2449 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2449
  _2485 = succeeded:body _2449
  br ^1

2491:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _265
  _261 = bif:'=:=' _265, `true`
  br _261, ^2477, ^2476

2477:
  %% Result type:
  %%    'ok'
  ret `ok`

2476:
  %% guard_SUITE.erl:1400
  _2447 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2447
  _2479 = succeeded:body _2447
  br ^1

2457:
  %% guard_SUITE.erl:1400
  _2450 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2450
  _2488 = succeeded:body _2450
  br ^1

1:
  _2451 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2451
}

%% guard_SUITE.erl:1399
%% Counter = 2509
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-5-'`(_231, _230, _229, _228) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _230, 
  %%    _231
  _2450 = bif:'==' _231, _230
  br _2450, ^2452, ^2501

2452:
  %% guard_SUITE.erl:1399
  _2445 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2445
  _2492 = succeeded:body _2445
  br ^1

2501:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _229
  _215 = bif:'=:=' _229, `true`
  br _215, ^2481, ^2465

2481:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _228
  _221 = bif:'=:=' _228, `true`
  br _221, ^2477, ^2478

2477:
  %% guard_SUITE.erl:1399
  _2441 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2441
  _2480 = succeeded:body _2441
  br ^1

2478:
  %% Result type:
  %%    'ok'
  ret `ok`

2465:
  %% guard_SUITE.erl:1399
  _2443 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2443
  _2486 = succeeded:body _2443
  br ^1

1:
  _2446 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2446
}

%% guard_SUITE.erl:1398
%% Counter = 2492
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-4-'`(_191, _190, _189, _188) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _190, 
  %%    _191
  _2444 = bif:'==' _191, _190
  br _2444, ^2475, ^2446

2475:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _188
  _172 = bif:'=:=' _188, `true`
  br _172, ^2453, ^2480

2453:
  %% guard_SUITE.erl:1398
  _2438 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2438
  _2474 = succeeded:body _2438
  br ^1

2480:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _189
  _185 = bif:'=:=' _189, `true`
  br _185, ^2466, ^2465

2466:
  %% Result type:
  %%    'ok'
  ret `ok`

2465:
  %% guard_SUITE.erl:1398
  _2436 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2436
  _2468 = succeeded:body _2436
  br ^1

2446:
  %% guard_SUITE.erl:1398
  _2439 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2439
  _2477 = succeeded:body _2439
  br ^1

1:
  _2440 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2440
}

%% guard_SUITE.erl:1397
%% Counter = 2487
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-3-'`(_155, _154, _153, _152) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _154, 
  %%    _155
  _2439 = bif:'==' _155, _154
  br _2439, ^2470, ^2441

2470:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _152
  _136 = bif:'=:=' _152, `true`
  br _136, ^2448, ^2475

2448:
  %% guard_SUITE.erl:1397
  _2433 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2433
  _2469 = succeeded:body _2433
  br ^1

2475:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _149 = bif:'=:=' _153, `true`
  br _149, ^2461, ^2460

2461:
  %% Result type:
  %%    'ok'
  ret `ok`

2460:
  %% guard_SUITE.erl:1397
  _2431 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2431
  _2463 = succeeded:body _2431
  br ^1

2441:
  %% guard_SUITE.erl:1397
  _2434 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2434
  _2472 = succeeded:body _2434
  br ^1

1:
  _2435 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2435
}

%% guard_SUITE.erl:1395
%% Counter = 2482
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-2-'`(_119, _118, _117, _116) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _118, 
  %%    _119
  _2434 = bif:'=:=' _119, _118
  br _2434, ^2465, ^2436

2465:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _100 = bif:'=:=' _116, `true`
  br _100, ^2443, ^2470

2443:
  %% guard_SUITE.erl:1395
  _2428 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2428
  _2464 = succeeded:body _2428
  br ^1

2470:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _113 = bif:'=:=' _117, `true`
  br _113, ^2456, ^2455

2456:
  %% Result type:
  %%    'ok'
  ret `ok`

2455:
  %% guard_SUITE.erl:1395
  _2426 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2426
  _2458 = succeeded:body _2426
  br ^1

2436:
  %% guard_SUITE.erl:1395
  _2429 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2429
  _2467 = succeeded:body _2429
  br ^1

1:
  _2430 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2430
}

%% guard_SUITE.erl:1394
%% Counter = 2477
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-1-'`(_83, _82, _81, _80) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82, 
  %%    _83
  _2429 = bif:'=:=' _83, _82
  br _2429, ^2460, ^2431

2460:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _64 = bif:'=:=' _80, `true`
  br _64, ^2438, ^2465

2438:
  %% guard_SUITE.erl:1394
  _2423 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2423
  _2459 = succeeded:body _2423
  br ^1

2465:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _77 = bif:'=:=' _81, `true`
  br _77, ^2451, ^2450

2451:
  %% Result type:
  %%    'ok'
  ret `ok`

2450:
  %% guard_SUITE.erl:1394
  _2421 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2421
  _2453 = succeeded:body _2421
  br ^1

2431:
  %% guard_SUITE.erl:1394
  _2424 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2424
  _2462 = succeeded:body _2424
  br ^1

1:
  _2425 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2425
}

%% guard_SUITE.erl:1393
%% Counter = 2483
%% bs_ensure_opt: true
function `guard_SUITE`:`'-rel_ops/1-fun-0-'`(_47, _46, _45, _44) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46, 
  %%    _47
  _2424 = bif:'=:=' _47, _46
  br _2424, ^2426, ^2475

2426:
  %% guard_SUITE.erl:1393
  _2419 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2419
  _2466 = succeeded:body _2419
  br ^1

2475:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _31 = bif:'=:=' _45, `true`
  br _31, ^2455, ^2439

2455:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _37 = bif:'=:=' _44, `true`
  br _37, ^2451, ^2452

2451:
  %% guard_SUITE.erl:1393
  _2415 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2415
  _2454 = succeeded:body _2415
  br ^1

2452:
  %% Result type:
  %%    'ok'
  ret `ok`

2439:
  %% guard_SUITE.erl:1393
  _2417 = match_fail `badmatch`, `error`

  %% Unique:
  %%    _2417
  _2460 = succeeded:body _2417
  br ^1

1:
  _2420 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _2420
}

%% guard_SUITE.erl:1282
%% Counter = 20
%% bs_ensure_opt: true
function `guard_SUITE`:`'-variable_is_function_2/0-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1272
%% Counter = 53
%% bs_ensure_opt: true
function `guard_SUITE`:`'-is_function_2/1-fun-4-'`(_26) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1270
%% Counter = 52
%% bs_ensure_opt: true
function `guard_SUITE`:`'-is_function_2/1-fun-3-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1268
%% Counter = 50
%% bs_ensure_opt: true
function `guard_SUITE`:`'-is_function_2/1-fun-2-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1266
%% Counter = 49
%% bs_ensure_opt: true
function `guard_SUITE`:`'-is_function_2/1-fun-1-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1264
%% Counter = 49
%% bs_ensure_opt: true
function `guard_SUITE`:`'-is_function_2/1-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1105
%% Counter = 189
%% bs_ensure_opt: true
%% Parameters
%%    _41 =>
%%     list(1..5)
function `guard_SUITE`:`'-complex_guard/1-lc$^6/1-6-'`(_41) {
0:
  %% Unique:
  %%    _41
  _184 = is_nonempty_list _41
  br _184, ^184, ^185

184:
  %% Argument types:
  %%    _41 => nonempty_list(1..5)
  %% Unique:
  %%    _41
  _111 = get_hd _41

  %% Argument types:
  %%    _41 => nonempty_list(1..5)
  %% Unique:
  %%    _41
  _110 = get_tl _41

  %% guard_SUITE.erl:1105
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _110, 
  %%    _111
  _177 = call (`'-complex_guard/1-lc$^7/1-7-'`/3), `[0,6]`, _110, _111

  %% Unique:
  %%    _177
  _183 = succeeded:body _177
  br _183, ^183, ^1

183:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _177
  ret _177

1:
  _179 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _179

185:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:1105
%% Counter = 188
%% bs_ensure_opt: true
%% Parameters
%%    _43 =>
%%     list(0..6)
%%    _110 =>
%%     list(1..5)
%%    _111 =>
%%     1..5
function `guard_SUITE`:`'-complex_guard/1-lc$^7/1-7-'`(_43, _110, _111) {
0:
  %% Unique:
  %%    _43
  _182 = is_nonempty_list _43
  br _182, ^182, ^184

182:
  %% Argument types:
  %%    _43 => nonempty_list(0..6)
  %% Unique:
  %%    _43
  _116 = get_hd _43

  %% Argument types:
  %%    _43 => nonempty_list(0..6)
  %% Unique:
  %%    _43
  _115 = get_tl _43

  %% guard_SUITE.erl:1105
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _111
  %% Unique:
  %%    _110, 
  %%    _115, 
  %%    _116
  _175 = call (`'-complex_guard/1-lc$^8/1-8-'`/5), `[1,2,3,4,5]`, _110, _111, _115, _116

  %% Unique:
  %%    _175
  _181 = succeeded:body _175
  br _181, ^181, ^1

181:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _175
  ret _175

184:
  %% guard_SUITE.erl:1105
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _110
  _169 = call (`'-complex_guard/1-lc$^6/1-6-'`/1), _110

  %% Unique:
  %%    _169
  _183 = succeeded:body _169
  br _183, ^183, ^1

183:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _169
  ret _169

1:
  _177 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _177
}

%% guard_SUITE.erl:1105
%% Counter = 194
%% bs_ensure_opt: true
%% Parameters
%%    _45 =>
%%     list(1..5)
%%    _110 =>
%%     list(1..5)
%%    _111 =>
%%     1..5
%%    _115 =>
%%     list(0..6)
%%    _116 =>
%%     0..6
function `guard_SUITE`:`'-complex_guard/1-lc$^8/1-8-'`(_45, _110, _111, _115, _116) {
0:
  %% Unique:
  %%    _45
  _189 = is_nonempty_list _45
  br _189, ^189, ^191

189:
  %% Argument types:
  %%    _45 => nonempty_list(1..5)
  %% Unique:
  %%    _45
  _121 = get_hd _45

  %% Argument types:
  %%    _45 => nonempty_list(1..5)
  %% Unique:
  %%    _45
  _120 = get_tl _45
  _183 = new_try_tag `'try'`
  br _183, ^182, ^180

182:
  %% guard_SUITE.erl:1104
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _111, 
  %%    _116
  %% Unique:
  %%    _121
  _172 = call (`do_complex_guard_1`/3), _111, _116, _121

  %% Unique:
  %%    _172
  _184 = succeeded:body _172
  br _184, ^179, ^180

179:
  %% Unique:
  %%    _183
  _187 = kill_try_tag _183
  br ^181

180:
  %% Unique:
  %%    _183
  _185 = landingpad `'try'`, _183

  %% Unique:
  %%    _183
  _186 = kill_try_tag _183
  br ^181

181:
  %% guard_SUITE.erl:1105
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _111, 
  %%    _116
  %% Unique:
  %%    _110, 
  %%    _115, 
  %%    _120
  _173 = call (`'-complex_guard/1-lc$^8/1-8-'`/5), _120, _110, _111, _115, _116

  %% Unique:
  %%    _173
  _188 = succeeded:body _173
  br _188, ^188, ^1

188:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _173
  ret _173

191:
  %% guard_SUITE.erl:1105
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _111
  %% Unique:
  %%    _110, 
  %%    _115
  _170 = call (`'-complex_guard/1-lc$^7/1-7-'`/3), _115, _110, _111

  %% Unique:
  %%    _170
  _190 = succeeded:body _170
  br _190, ^190, ^1

190:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _170
  ret _170

1:
  _175 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _175
}

%% guard_SUITE.erl:1103
%% Counter = 178
%% bs_ensure_opt: true
%% Parameters
%%    _24 =>
%%     list(1..3)
function `guard_SUITE`:`'-complex_guard/1-lc$^3/1-3-'`(_24) {
0:
  %% Unique:
  %%    _24
  _173 = is_nonempty_list _24
  br _173, ^173, ^174

173:
  %% Argument types:
  %%    _24 => nonempty_list(1..3)
  %% Unique:
  %%    _24
  _95 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_list(1..3)
  %% Unique:
  %%    _24
  _94 = get_tl _24

  %% guard_SUITE.erl:1103
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _94, 
  %%    _95
  _166 = call (`'-complex_guard/1-lc$^4/1-4-'`/3), `[1,2,3]`, _94, _95

  %% Unique:
  %%    _166
  _172 = succeeded:body _166
  br _172, ^172, ^1

172:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _166
  ret _166

1:
  _168 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _168

174:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:1103
%% Counter = 177
%% bs_ensure_opt: true
%% Parameters
%%    _26 =>
%%     list(1..3)
%%    _94 =>
%%     list(1..3)
%%    _95 =>
%%     1..3
function `guard_SUITE`:`'-complex_guard/1-lc$^4/1-4-'`(_26, _94, _95) {
0:
  %% Unique:
  %%    _26
  _171 = is_nonempty_list _26
  br _171, ^171, ^173

171:
  %% Argument types:
  %%    _26 => nonempty_list(1..3)
  %% Unique:
  %%    _26
  _100 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_list(1..3)
  %% Unique:
  %%    _26
  _99 = get_tl _26

  %% guard_SUITE.erl:1103
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _95
  %% Unique:
  %%    _94, 
  %%    _99, 
  %%    _100
  _164 = call (`'-complex_guard/1-lc$^5/1-5-'`/5), `[1,2,3]`, _94, _95, _99, _100

  %% Unique:
  %%    _164
  _170 = succeeded:body _164
  br _170, ^170, ^1

170:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _164
  ret _164

173:
  %% guard_SUITE.erl:1103
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _94
  _159 = call (`'-complex_guard/1-lc$^3/1-3-'`/1), _94

  %% Unique:
  %%    _159
  _172 = succeeded:body _159
  br _172, ^172, ^1

172:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _159
  ret _159

1:
  _166 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _166
}

%% guard_SUITE.erl:1103
%% Counter = 181
%% bs_ensure_opt: true
%% Parameters
%%    _28 =>
%%     list(1..3)
%%    _94 =>
%%     list(1..3)
%%    _95 =>
%%     1..3
%%    _99 =>
%%     list(1..3)
%%    _100 =>
%%     1..3
function `guard_SUITE`:`'-complex_guard/1-lc$^5/1-5-'`(_28, _94, _95, _99, _100) {
0:
  %% Unique:
  %%    _28
  _175 = is_nonempty_list _28
  br _175, ^175, ^177

175:
  %% Argument types:
  %%    _28 => nonempty_list(1..3)
  %% Unique:
  %%    _28
  _105 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_list(1..3)
  %% Unique:
  %%    _28
  _104 = get_tl _28

  %% guard_SUITE.erl:1102
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _95, 
  %%    _100
  %% Unique:
  %%    _105
  _106 = call (`do_complex_guard_1`/3), _95, _100, _105

  %% Unique:
  %%    _106
  _168 = succeeded:body _106
  br _168, ^172, ^1

172:
  %% guard_SUITE.erl:1103
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _95, 
  %%    _100
  %% Unique:
  %%    _94, 
  %%    _99, 
  %%    _104
  _161 = call (`'-complex_guard/1-lc$^5/1-5-'`/5), _104, _94, _95, _99, _100

  %% Unique:
  %%    _161
  _171 = succeeded:body _161
  br _171, ^171, ^1

171:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _161
  ret _161

177:
  %% guard_SUITE.erl:1103
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _95
  %% Unique:
  %%    _94, 
  %%    _99
  _160 = call (`'-complex_guard/1-lc$^4/1-4-'`/3), _99, _94, _95

  %% Unique:
  %%    _160
  _176 = succeeded:body _160
  br _176, ^176, ^1

176:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _160
  ret _160

1:
  _164 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _164
}

%% guard_SUITE.erl:1101
%% Counter = 168
%% bs_ensure_opt: true
%% Parameters
%%    _7 =>
%%     list(4..5)
function `guard_SUITE`:`'-complex_guard/1-lc$^0/1-0-'`(_7) {
0:
  %% Unique:
  %%    _7
  _163 = is_nonempty_list _7
  br _163, ^163, ^164

163:
  %% Argument types:
  %%    _7 => nonempty_list(4..5)
  %% Unique:
  %%    _7
  _81 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_list(4..5)
  %% Unique:
  %%    _7
  _80 = get_tl _7

  %% guard_SUITE.erl:1101
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _80, 
  %%    _81
  _156 = call (`'-complex_guard/1-lc$^1/1-1-'`/3), `[4,5]`, _80, _81

  %% Unique:
  %%    _156
  _162 = succeeded:body _156
  br _162, ^162, ^1

162:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _156
  ret _156

1:
  _158 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _158

164:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% guard_SUITE.erl:1101
%% Counter = 167
%% bs_ensure_opt: true
%% Parameters
%%    _9 =>
%%     list(4..5)
%%    _80 =>
%%     list(4..5)
%%    _81 =>
%%     4..5
function `guard_SUITE`:`'-complex_guard/1-lc$^1/1-1-'`(_9, _80, _81) {
0:
  %% Unique:
  %%    _9
  _161 = is_nonempty_list _9
  br _161, ^161, ^163

161:
  %% Argument types:
  %%    _9 => nonempty_list(4..5)
  %% Unique:
  %%    _9
  _85 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_list(4..5)
  %% Unique:
  %%    _9
  _84 = get_tl _9

  %% guard_SUITE.erl:1101
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _81
  %% Unique:
  %%    _80, 
  %%    _84, 
  %%    _85
  _154 = call (`'-complex_guard/1-lc$^2/1-2-'`/5), `[4,5]`, _80, _81, _84, _85

  %% Unique:
  %%    _154
  _160 = succeeded:body _154
  br _160, ^160, ^1

160:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _154
  ret _154

163:
  %% guard_SUITE.erl:1101
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _80
  _149 = call (`'-complex_guard/1-lc$^0/1-0-'`/1), _80

  %% Unique:
  %%    _149
  _162 = succeeded:body _149
  br _162, ^162, ^1

162:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _149
  ret _149

1:
  _156 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _156
}

%% guard_SUITE.erl:1101
%% Counter = 171
%% bs_ensure_opt: true
%% Parameters
%%    _11 =>
%%     list(4..5)
%%    _80 =>
%%     list(4..5)
%%    _81 =>
%%     4..5
%%    _84 =>
%%     list(4..5)
%%    _85 =>
%%     4..5
function `guard_SUITE`:`'-complex_guard/1-lc$^2/1-2-'`(_11, _80, _81, _84, _85) {
0:
  %% Unique:
  %%    _11
  _165 = is_nonempty_list _11
  br _165, ^165, ^167

165:
  %% Argument types:
  %%    _11 => nonempty_list(4..5)
  %% Unique:
  %%    _11
  _89 = get_hd _11

  %% Argument types:
  %%    _11 => nonempty_list(4..5)
  %% Unique:
  %%    _11
  _88 = get_tl _11

  %% guard_SUITE.erl:1100
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _81, 
  %%    _85
  %% Unique:
  %%    _89
  _90 = call (`do_complex_guard_1`/3), _81, _85, _89

  %% Unique:
  %%    _90
  _158 = succeeded:body _90
  br _158, ^162, ^1

162:
  %% guard_SUITE.erl:1101
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _81, 
  %%    _85
  %% Unique:
  %%    _80, 
  %%    _84, 
  %%    _88
  _151 = call (`'-complex_guard/1-lc$^2/1-2-'`/5), _88, _80, _81, _84, _85

  %% Unique:
  %%    _151
  _161 = succeeded:body _151
  br _161, ^161, ^1

161:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _151
  ret _151

167:
  %% guard_SUITE.erl:1101
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _81
  %% Unique:
  %%    _80, 
  %%    _84
  _150 = call (`'-complex_guard/1-lc$^1/1-1-'`/3), _84, _80, _81

  %% Unique:
  %%    _150
  _166 = succeeded:body _150
  br _166, ^166, ^1

166:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _150
  ret _150

1:
  _154 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _154
}

%% guard_SUITE.erl:1075
%% Counter = 30
%% bs_ensure_opt: true
function `guard_SUITE`:`'-old_guard_tests/1-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:1055
%% Counter = 88
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_xor_guards/1-fun-4-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:1056
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _41 = bif:element `42`, ATuple

  %% Aliased:
  %%    _41
  _75 = succeeded:guard _41
  br _75, ^75, ^73

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _42 = bif:'=:=' _41, `true`

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _43 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:1056
  %% Argument types:
  %%    _42 => 'false' | 'true'
  %%    _43 => 'false' | 'true'
  %% Unique:
  %%    _42, 
  %%    _43
  _44 = bif:'xor' _42, _43
  br _44, ^82, ^73

82:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _45 = bif:is_boolean True
  br _45, ^81, ^73

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _47 = bif:is_boolean _41
  br _47, ^79, ^73

79:
  %% Result type:
  %%    'ok'
  ret `ok`

73:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1050
%% Counter = 87
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_xor_guards/1-fun-3-'`(ATuple, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _33 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:1051
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _34 = bif:element `42`, ATuple

  %% Aliased:
  %%    _34
  _74 = succeeded:guard _34
  br _74, ^74, ^72

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _35 = bif:'=:=' _34, `true`

  %% guard_SUITE.erl:1051
  %% Argument types:
  %%    _33 => 'false' | 'true'
  %%    _35 => 'false' | 'true'
  %% Unique:
  %%    _33, 
  %%    _35
  _36 = bif:'xor' _33, _35
  br _36, ^81, ^72

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _37 = bif:is_boolean _34
  br _37, ^80, ^72

80:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _39 = bif:is_boolean True
  br _39, ^78, ^72

78:
  %% Result type:
  %%    'ok'
  ret `ok`

72:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1045
%% Counter = 87
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_xor_guards/1-fun-2-'`(ATuple) {
0:
  %% guard_SUITE.erl:1046
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _24 = bif:element `18`, ATuple

  %% Aliased:
  %%    _24
  _73 = succeeded:guard _24
  br _73, ^73, ^71

73:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _25 = bif:'=:=' _24, `true`

  %% guard_SUITE.erl:1046
  %% Argument types:
  %%    ATuple => {any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), ...}
  %% Aliased:
  %%    ATuple
  _26 = bif:element `42`, ATuple

  %% Aliased:
  %%    _26
  _74 = succeeded:guard _26
  br _74, ^74, ^71

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _27 = bif:'=:=' _26, `true`

  %% guard_SUITE.erl:1046
  %% Argument types:
  %%    _25 => 'false' | 'true'
  %%    _27 => 'false' | 'true'
  %% Unique:
  %%    _25, 
  %%    _27
  _28 = bif:'xor' _25, _27
  br _28, ^81, ^71

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _29 = bif:is_boolean _26
  br _29, ^80, ^71

80:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _31 = bif:is_boolean _24
  br _31, ^78, ^71

78:
  %% Result type:
  %%    'ok'
  ret `ok`

71:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1040
%% Counter = 89
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_xor_guards/1-fun-1-'`(ATuple, False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _12 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:1041
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _13 = bif:element `42`, ATuple

  %% Aliased:
  %%    _13
  _72 = succeeded:guard _13
  br _72, ^72, ^70

72:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _14 = bif:'=:=' _13, `true`

  %% guard_SUITE.erl:1041
  %% Argument types:
  %%    _12 => 'false' | 'true'
  %%    _14 => 'false' | 'true'
  %% Unique:
  %%    _12, 
  %%    _14
  _15 = bif:'xor' _12, _14

  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _16 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:1041
  %% Argument types:
  %%    _15 => 'false' | 'true'
  %%    _16 => 'false' | 'true'
  %% Unique:
  %%    _15, 
  %%    _16
  _17 = bif:'xor' _15, _16
  br _17, ^82, ^70

82:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _18 = bif:is_boolean False
  br _18, ^81, ^70

81:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _20 = bif:is_boolean _13
  br _20, ^78, ^70

78:
  %% Result type:
  %%    'ok'
  ret `ok`

70:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1035
%% Counter = 84
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_xor_guards/1-fun-0-'`(ATuple, False) {
0:
  %% guard_SUITE.erl:1036
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _4 = bif:element `42`, ATuple

  %% Aliased:
  %%    _4
  _71 = succeeded:guard _4
  br _71, ^71, ^69

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _5 = bif:'=:=' _4, `true`

  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _6 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:1036
  %% Argument types:
  %%    _5 => 'false' | 'true'
  %%    _6 => 'false' | 'true'
  %% Unique:
  %%    _5, 
  %%    _6
  _7 = bif:'xor' _5, _6
  br _7, ^78, ^69

78:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _8 = bif:is_boolean False
  br _8, ^77, ^69

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _10 = bif:is_boolean _4
  br _10, ^75, ^69

75:
  %% Result type:
  %%    'ok'
  ret `ok`

69:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1023
%% Counter = 186
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-xor_guard/1-fun-11-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _50 = bif:'=:=' True, `true`

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _51 = bif:'=:=' True, `true`
  _133 = new_try_tag `'catch'`
  br _133, ^131, ^132

131:
  %% guard_SUITE.erl:1024
  %% Argument types:
  %%    _50 => 'false' | 'true'
  %%    _51 => 'false' | 'true'
  %% Unique:
  %%    _50, 
  %%    _51
  _52 = bif:'xor' _50, _51
  br _52, ^164, ^136

164:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _53 = bif:is_boolean True
  br _53, ^141, ^136

141:
  br ^130

136:
  %% guard_SUITE.erl:1024
  _126 = match_fail `if_clause`

  %% Unique:
  %%    _126
  _142 = succeeded:body _126
  br ^132

132:
  %% Unique:
  %%    _133
  _145 = landingpad `'catch'`, _133

  %% Aliased:
  %%    _145
  _143 = extract _145, `0`
  br ^130

130:
  _146 = phi { _143, ^132 }, { `ok`, ^141 }

  %% Aliased:
  %%    _146
  %% Unique:
  %%    _133
  _56 = catch_end _133, _146

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _158 = is_tagged_tuple _56, `2`, `'EXIT'`
  br _158, ^155, ^148

155:
  %% Argument types:
  %%    _56 => {''EXIT'', any()}
  %% Aliased:
  %%    _56
  _97 = get_tuple_element _56, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _152 = is_tagged_tuple _97, `2`, `if_clause`
  br _152, ^149, ^148

149:
  %% Result type:
  %%    'exit'
  ret `exit`

148:
  %% guard_SUITE.erl:1024
  %% Aliased:
  %%    _56
  _127 = match_fail `badmatch`, _56

  %% Unique:
  %%    _127
  _161 = succeeded:body _127
  br ^1

1:
  _128 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _128
}

%% guard_SUITE.erl:1019
%% Counter = 181
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-xor_guard/1-fun-10-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _41 = bif:'=:=' False, `true`

  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _42 = bif:'=:=' False, `true`
  _128 = new_try_tag `'catch'`
  br _128, ^126, ^127

126:
  %% guard_SUITE.erl:1020
  %% Argument types:
  %%    _41 => 'false' | 'true'
  %%    _42 => 'false' | 'true'
  %% Unique:
  %%    _41, 
  %%    _42
  _43 = bif:'xor' _41, _42
  br _43, ^159, ^131

159:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _44 = bif:is_boolean False
  br _44, ^136, ^131

136:
  br ^125

131:
  %% guard_SUITE.erl:1020
  _121 = match_fail `if_clause`

  %% Unique:
  %%    _121
  _137 = succeeded:body _121
  br ^127

127:
  %% Unique:
  %%    _128
  _140 = landingpad `'catch'`, _128

  %% Aliased:
  %%    _140
  _138 = extract _140, `0`
  br ^125

125:
  _141 = phi { _138, ^127 }, { `ok`, ^136 }

  %% Aliased:
  %%    _141
  %% Unique:
  %%    _128
  _47 = catch_end _128, _141

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _153 = is_tagged_tuple _47, `2`, `'EXIT'`
  br _153, ^150, ^143

150:
  %% Argument types:
  %%    _47 => {''EXIT'', any()}
  %% Aliased:
  %%    _47
  _89 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _147 = is_tagged_tuple _89, `2`, `if_clause`
  br _147, ^144, ^143

144:
  %% Result type:
  %%    'exit'
  ret `exit`

143:
  %% guard_SUITE.erl:1020
  %% Aliased:
  %%    _47
  _122 = match_fail `badmatch`, _47

  %% Unique:
  %%    _122
  _156 = succeeded:body _122
  br ^1

1:
  _123 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _123
}

%% guard_SUITE.erl:1018
%% Counter = 134
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-xor_guard/1-fun-9-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _34 = bif:'=:=' False, `true`

  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _35 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:1018
  %% Argument types:
  %%    _34 => 'false' | 'true'
  %%    _35 => 'false' | 'true'
  %% Unique:
  %%    _34, 
  %%    _35
  _36 = bif:'xor' _34, _35
  br _36, ^128, ^120

128:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _37 = bif:is_boolean False
  br _37, ^125, ^120

125:
  %% Result type:
  %%    'ok'
  ret `ok`

120:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1017
%% Counter = 133
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-xor_guard/1-fun-8-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _27 = bif:'=:=' True, `true`

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _28 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:1017
  %% Argument types:
  %%    _27 => 'false' | 'true'
  %%    _28 => 'false' | 'true'
  %% Unique:
  %%    _27, 
  %%    _28
  _29 = bif:'xor' _27, _28
  br _29, ^127, ^119

127:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _30 = bif:is_boolean True
  br _30, ^124, ^119

124:
  %% Result type:
  %%    'ok'
  ret `ok`

119:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:1016
%% Counter = 133
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-xor_guard/1-fun-7-'`(False, True) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _20 = bif:'=:=' False, `true`

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _21 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:1016
  %% Argument types:
  %%    _20 => 'false' | 'true'
  %%    _21 => 'false' | 'true'
  %% Unique:
  %%    _20, 
  %%    _21
  _22 = bif:'xor' _20, _21
  br _22, ^127, ^118

127:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _23 = bif:is_boolean True
  br _23, ^126, ^118

126:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _25 = bif:is_boolean False
  br _25, ^123, ^118

123:
  %% Result type:
  %%    'ok'
  ret `ok`

118:
  %% guard_SUITE.erl:1016
  _115 = match_fail `if_clause`

  %% Unique:
  %%    _115
  _124 = succeeded:body _115
  br ^1

1:
  _116 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _116
}

%% guard_SUITE.erl:1015
%% Counter = 131
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-xor_guard/1-fun-6-'`(False, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _13 = bif:'=:=' True, `true`

  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _14 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:1015
  %% Argument types:
  %%    _13 => 'false' | 'true'
  %%    _14 => 'false' | 'true'
  %% Unique:
  %%    _13, 
  %%    _14
  _15 = bif:'xor' _13, _14
  br _15, ^125, ^116

125:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _16 = bif:is_boolean False
  br _16, ^124, ^116

124:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _18 = bif:is_boolean True
  br _18, ^121, ^116

121:
  %% Result type:
  %%    'ok'
  ret `ok`

116:
  %% guard_SUITE.erl:1015
  _113 = match_fail `if_clause`

  %% Unique:
  %%    _113
  _122 = succeeded:body _113
  br ^1

1:
  _114 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _114
}

%% guard_SUITE.erl:1004
%% Counter = 156
%% bs_ensure_opt: true
function `guard_SUITE`:`'-xor_guard/1-fun-5-'`() {
0:
  br ^155

155:
  _117 = new_try_tag `'catch'`
  br _117, ^115, ^116

115:
  %% guard_SUITE.erl:1005
  _110 = match_fail `if_clause`

  %% Unique:
  %%    _110
  _119 = succeeded:body _110
  br ^116

116:
  %% Unique:
  %%    _117
  _122 = landingpad `'catch'`, _117

  %% Aliased:
  %%    _122
  _120 = extract _122, `0`
  br ^114

114:
  %% Aliased:
  %%    _120
  %% Unique:
  %%    _117
  _8 = catch_end _117, _120

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _135 = is_tagged_tuple _8, `2`, `'EXIT'`
  br _135, ^132, ^125

132:
  %% Argument types:
  %%    _8 => {''EXIT'', any()}
  %% Aliased:
  %%    _8
  _68 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _129 = is_tagged_tuple _68, `2`, `if_clause`
  br _129, ^126, ^125

126:
  %% Result type:
  %%    'exit'
  ret `exit`

125:
  %% guard_SUITE.erl:1005
  %% Aliased:
  %%    _8
  _111 = match_fail `badmatch`, _8

  %% Unique:
  %%    _111
  _138 = succeeded:body _111
  br ^1

1:
  _112 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _112
}

%% guard_SUITE.erl:1000
%% Counter = 152
%% bs_ensure_opt: true
function `guard_SUITE`:`'-xor_guard/1-fun-4-'`() {
0:
  br ^151

151:
  _113 = new_try_tag `'catch'`
  br _113, ^111, ^112

111:
  %% guard_SUITE.erl:1001
  _106 = match_fail `if_clause`

  %% Unique:
  %%    _106
  _115 = succeeded:body _106
  br ^112

112:
  %% Unique:
  %%    _113
  _118 = landingpad `'catch'`, _113

  %% Aliased:
  %%    _118
  _116 = extract _118, `0`
  br ^110

110:
  %% Aliased:
  %%    _116
  %% Unique:
  %%    _113
  _5 = catch_end _113, _116

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _131 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _131, ^128, ^121

128:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _64 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _125 = is_tagged_tuple _64, `2`, `if_clause`
  br _125, ^122, ^121

122:
  %% Result type:
  %%    'exit'
  ret `exit`

121:
  %% guard_SUITE.erl:1001
  %% Aliased:
  %%    _5
  _107 = match_fail `badmatch`, _5

  %% Unique:
  %%    _107
  _134 = succeeded:body _107
  br ^1

1:
  _108 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _108
}

%% guard_SUITE.erl:999
%% Counter = 106
%% bs_ensure_opt: true
function `guard_SUITE`:`'-xor_guard/1-fun-3-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:998
%% Counter = 105
%% bs_ensure_opt: true
function `guard_SUITE`:`'-xor_guard/1-fun-2-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:997
%% Counter = 104
%% bs_ensure_opt: true
function `guard_SUITE`:`'-xor_guard/1-fun-1-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:996
%% Counter = 103
%% bs_ensure_opt: true
function `guard_SUITE`:`'-xor_guard/1-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:968
%% Counter = 275
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-22-'`(ATuple, True) {
0:
  br ^274

274:
  _203 = new_try_tag `'catch'`
  br _203, ^201, ^202

201:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _77 = bif:'=:=' True, `true`
  br _77, ^256, ^212

256:
  %% guard_SUITE.erl:970
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _78 = bif:element `42`, ATuple

  %% Aliased:
  %%    _78
  _209 = succeeded:guard _78
  br _209, ^253, ^207

253:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _79 = bif:'=:=' _78, `true`
  br _79, ^211, ^207

211:
  br ^200

207:
  %% guard_SUITE.erl:971
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _80 = bif:element `42`, ATuple

  %% Aliased:
  %%    _80
  _214 = succeeded:guard _80
  br _214, ^214, ^212

214:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _81 = bif:'=:=' _80, `true`
  br _81, ^216, ^212

216:
  br ^200

212:
  %% guard_SUITE.erl:972
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _83 = bif:element `42`, ATuple

  %% Aliased:
  %%    _83
  _218 = succeeded:guard _83
  br _218, ^218, ^206

218:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _84 = bif:'=:=' _83, `true`
  br _84, ^221, ^206

221:
  br ^200

206:
  %% guard_SUITE.erl:970
  _196 = match_fail `if_clause`

  %% Unique:
  %%    _196
  _222 = succeeded:body _196
  br ^202

202:
  %% Unique:
  %%    _203
  _225 = landingpad `'catch'`, _203

  %% Aliased:
  %%    _225
  _223 = extract _225, `0`
  br ^200

200:
  _226 = phi { _223, ^202 }, { `ok`, ^211 }, { `ok`, ^216 }, { `ok`, ^221 }

  %% Aliased:
  %%    _226
  %% Unique:
  %%    _203
  _87 = catch_end _203, _226

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _238 = is_tagged_tuple _87, `2`, `'EXIT'`
  br _238, ^235, ^228

235:
  %% Argument types:
  %%    _87 => {''EXIT'', any()}
  %% Aliased:
  %%    _87
  _148 = get_tuple_element _87, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _232 = is_tagged_tuple _148, `2`, `if_clause`
  br _232, ^229, ^228

229:
  %% Result type:
  %%    'exit'
  ret `exit`

228:
  %% guard_SUITE.erl:969
  %% Aliased:
  %%    _87
  _197 = match_fail `badmatch`, _87

  %% Unique:
  %%    _197
  _241 = succeeded:body _197
  br ^1

1:
  _198 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _198
}

%% guard_SUITE.erl:966
%% Counter = 207
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-21-'`(ATuple) {
0:
  %% guard_SUITE.erl:966
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _72 = bif:element `42`, ATuple

  %% Aliased:
  %%    _72
  _197 = succeeded:guard _72
  br _197, ^197, ^195

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _73 = bif:'=:=' _72, `true`
  br _73, ^200, ^195

200:
  %% Result type:
  %%    'ok'
  ret `ok`

195:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:965
%% Counter = 202
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-20-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _69 = bif:'=:=' True, `true`
  br _69, ^196, ^194

196:
  %% Result type:
  %%    'ok'
  ret `ok`

194:
  %% guard_SUITE.erl:965
  _191 = match_fail `if_clause`

  %% Unique:
  %%    _191
  _197 = succeeded:body _191
  br ^1

1:
  _192 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _192
}

%% guard_SUITE.erl:963
%% Counter = 201
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-19-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:963
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _65 = bif:element `42`, ATuple

  %% Aliased:
  %%    _65
  _194 = succeeded:guard _65
  br _194, ^194, ^192

194:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _66 = bif:'=:=' _65, `true`
  br _66, ^199, ^192

199:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _67 = bif:'=:=' True, `true`
  br _67, ^196, ^192

196:
  %% Result type:
  %%    'ok'
  ret `ok`

192:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:961
%% Counter = 202
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-18-'`(ATuple, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _61 = bif:'=:=' True, `true`
  br _61, ^200, ^191

200:
  %% guard_SUITE.erl:961
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _62 = bif:element `42`, ATuple

  %% Aliased:
  %%    _62
  _193 = succeeded:guard _62
  br _193, ^197, ^191

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _63 = bif:'=:=' _62, `true`
  br _63, ^195, ^191

195:
  %% Result type:
  %%    'ok'
  ret `ok`

191:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:949
%% Counter = 254
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-17-'`(Glurf, True) {
0:
  br ^253

253:
  _193 = new_try_tag `'catch'`
  br _193, ^235, ^192

235:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _52 = bif:'=:=' Glurf, `true`
  br _52, ^199, ^196

199:
  br ^190

196:
  %% guard_SUITE.erl:951
  _186 = match_fail `if_clause`

  %% Unique:
  %%    _186
  _205 = succeeded:body _186
  br ^192

192:
  %% Unique:
  %%    _193
  _208 = landingpad `'catch'`, _193

  %% Aliased:
  %%    _208
  _206 = extract _208, `0`
  br ^190

190:
  _209 = phi { _206, ^192 }, { `ok`, ^199 }

  %% Aliased:
  %%    _209
  %% Unique:
  %%    _193
  _57 = catch_end _193, _209

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _221 = is_tagged_tuple _57, `2`, `'EXIT'`
  br _221, ^218, ^211

218:
  %% Argument types:
  %%    _57 => {''EXIT'', any()}
  %% Aliased:
  %%    _57
  _122 = get_tuple_element _57, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _215 = is_tagged_tuple _122, `2`, `if_clause`
  br _215, ^212, ^211

212:
  %% Result type:
  %%    'exit'
  ret `exit`

211:
  %% guard_SUITE.erl:950
  %% Aliased:
  %%    _57
  _187 = match_fail `badmatch`, _57

  %% Unique:
  %%    _187
  _224 = succeeded:body _187
  br ^1

1:
  _188 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _188
}

%% guard_SUITE.erl:948
%% Counter = 192
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-16-'`(Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _48 = bif:'=:=' Glurf, `true`
  br _48, ^187, ^185

187:
  %% Result type:
  %%    'ok'
  ret `ok`

185:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:947
%% Counter = 192
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-15-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _45 = bif:'=:=' True, `true`
  br _45, ^186, ^184

186:
  %% Result type:
  %%    'ok'
  ret `ok`

184:
  %% guard_SUITE.erl:947
  _181 = match_fail `if_clause`

  %% Unique:
  %%    _181
  _187 = succeeded:body _181
  br ^1

1:
  _182 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _182
}

%% guard_SUITE.erl:946
%% Counter = 189
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-14-'`(Glurf, True) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _42 = bif:'=:=' Glurf, `true`
  br _42, ^187, ^182

187:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _43 = bif:'=:=' True, `true`
  br _43, ^184, ^182

184:
  %% Result type:
  %%    'ok'
  ret `ok`

182:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:945
%% Counter = 188
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-13-'`(Glurf, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _39 = bif:'=:=' True, `true`
  br _39, ^186, ^181

186:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _40 = bif:'=:=' Glurf, `true`
  br _40, ^183, ^181

183:
  %% Result type:
  %%    'ok'
  ret `ok`

181:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:932
%% Counter = 244
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-12-'`(False, True) {
0:
  br ^243

243:
  _183 = new_try_tag `'catch'`
  br _183, ^225, ^182

225:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _30 = bif:'=:=' False, `true`
  br _30, ^189, ^186

189:
  br ^180

186:
  %% guard_SUITE.erl:934
  _176 = match_fail `if_clause`

  %% Unique:
  %%    _176
  _195 = succeeded:body _176
  br ^182

182:
  %% Unique:
  %%    _183
  _198 = landingpad `'catch'`, _183

  %% Aliased:
  %%    _198
  _196 = extract _198, `0`
  br ^180

180:
  _199 = phi { _196, ^182 }, { `ok`, ^189 }

  %% Aliased:
  %%    _199
  %% Unique:
  %%    _183
  _35 = catch_end _183, _199

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _211 = is_tagged_tuple _35, `2`, `'EXIT'`
  br _211, ^208, ^201

208:
  %% Argument types:
  %%    _35 => {''EXIT'', any()}
  %% Aliased:
  %%    _35
  _111 = get_tuple_element _35, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _205 = is_tagged_tuple _111, `2`, `if_clause`
  br _205, ^202, ^201

202:
  %% Result type:
  %%    'exit'
  ret `exit`

201:
  %% guard_SUITE.erl:933
  %% Aliased:
  %%    _35
  _177 = match_fail `badmatch`, _35

  %% Unique:
  %%    _177
  _214 = succeeded:body _177
  br ^1

1:
  _178 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _178
}

%% guard_SUITE.erl:931
%% Counter = 182
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-11-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _26 = bif:'=:=' False, `true`
  br _26, ^177, ^175

177:
  %% Result type:
  %%    'ok'
  ret `ok`

175:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:930
%% Counter = 182
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-10-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _23 = bif:'=:=' True, `true`
  br _23, ^176, ^174

176:
  %% Result type:
  %%    'ok'
  ret `ok`

174:
  %% guard_SUITE.erl:930
  _171 = match_fail `if_clause`

  %% Unique:
  %%    _171
  _177 = succeeded:body _171
  br ^1

1:
  _172 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _172
}

%% guard_SUITE.erl:929
%% Counter = 179
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-9-'`(False, True) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _20 = bif:'=:=' False, `true`
  br _20, ^177, ^172

177:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _21 = bif:'=:=' True, `true`
  br _21, ^174, ^172

174:
  %% Result type:
  %%    'ok'
  ret `ok`

172:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:928
%% Counter = 178
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-and_guard/1-fun-8-'`(False, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _17 = bif:'=:=' True, `true`
  br _17, ^176, ^171

176:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _18 = bif:'=:=' False, `true`
  br _18, ^173, ^171

173:
  %% Result type:
  %%    'ok'
  ret `ok`

171:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:914
%% Counter = 212
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-7-'`() {
0:
  br ^211

211:
  _173 = new_try_tag `'catch'`
  br _173, ^171, ^172

171:
  %% guard_SUITE.erl:916
  _166 = match_fail `if_clause`

  %% Unique:
  %%    _166
  _175 = succeeded:body _166
  br ^172

172:
  %% Unique:
  %%    _173
  _178 = landingpad `'catch'`, _173

  %% Aliased:
  %%    _178
  _176 = extract _178, `0`
  br ^170

170:
  %% Aliased:
  %%    _176
  %% Unique:
  %%    _173
  _12 = catch_end _173, _176

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _191 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _191, ^188, ^181

188:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _100 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _185 = is_tagged_tuple _100, `2`, `if_clause`
  br _185, ^182, ^181

182:
  %% Result type:
  %%    'exit'
  ret `exit`

181:
  %% guard_SUITE.erl:915
  %% Aliased:
  %%    _12
  _167 = match_fail `badmatch`, _12

  %% Unique:
  %%    _167
  _194 = succeeded:body _167
  br ^1

1:
  _168 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _168
}

%% guard_SUITE.erl:912
%% Counter = 166
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-6-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:911
%% Counter = 165
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-5-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:910
%% Counter = 164
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-4-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:908
%% Counter = 163
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-3-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:907
%% Counter = 162
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-2-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:906
%% Counter = 161
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-1-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:905
%% Counter = 160
%% bs_ensure_opt: true
function `guard_SUITE`:`'-and_guard/1-fun-0-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:776
%% Counter = 191
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-10-'`(ATuple) {
0:
  %% guard_SUITE.erl:778
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _94 = bif:element `1`, ATuple

  %% Aliased:
  %%    _94
  _164 = succeeded:guard _94
  br _164, ^164, ^162

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _95 = bif:'=:=' _94, `true`

  %% guard_SUITE.erl:779
  %% Argument types:
  %%    ATuple => {any(), ...}
  %% Aliased:
  %%    ATuple
  _96 = bif:element `2`, ATuple

  %% Aliased:
  %%    _96
  _165 = succeeded:guard _96
  br _165, ^179, ^162

179:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _97 = bif:'=:=' _96, `true`

  %% guard_SUITE.erl:778
  %% Argument types:
  %%    _95 => 'false' | 'true'
  %%    _97 => 'false' | 'true'
  %% Unique:
  %%    _95, 
  %%    _97
  _98 = bif:'or' _95, _97

  %% guard_SUITE.erl:780
  %% Argument types:
  %%    ATuple => {any(), any(), ...}
  %% Aliased:
  %%    ATuple
  _99 = bif:element `19`, ATuple

  %% Aliased:
  %%    _99
  _167 = succeeded:guard _99
  br _167, ^177, ^162

177:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _100 = bif:'=:=' _99, `true`

  %% guard_SUITE.erl:779
  %% Argument types:
  %%    _98 => 'false' | 'true'
  %%    _100 => 'false' | 'true'
  %% Unique:
  %%    _98, 
  %%    _100
  _101 = bif:'or' _98, _100
  br _101, ^176, ^162

176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _102 = bif:is_boolean _99
  br _102, ^175, ^162

175:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _104 = bif:is_boolean _96
  br _104, ^174, ^162

174:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _106 = bif:is_boolean _94
  br _106, ^172, ^162

172:
  %% Result type:
  %%    'ok'
  ret `ok`

162:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:771
%% Counter = 180
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-9-'`(ATuple) {
0:
  %% guard_SUITE.erl:772
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _85 = bif:element `2`, ATuple

  %% Aliased:
  %%    _85
  _163 = succeeded:guard _85
  br _163, ^163, ^161

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _86 = bif:'=:=' _85, `true`

  %% guard_SUITE.erl:772
  %% Argument types:
  %%    ATuple => {any(), any(), ...}
  %% Aliased:
  %%    ATuple
  _87 = bif:element `42`, ATuple

  %% Aliased:
  %%    _87
  _164 = succeeded:guard _87
  br _164, ^172, ^161

172:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _88 = bif:'=:=' _87, `true`

  %% guard_SUITE.erl:772
  %% Argument types:
  %%    _86 => 'false' | 'true'
  %%    _88 => 'false' | 'true'
  %% Unique:
  %%    _86, 
  %%    _88
  _89 = bif:'or' _86, _88
  br _89, ^171, ^161

171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _90 = bif:is_boolean _87
  br _90, ^170, ^161

170:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _92 = bif:is_boolean _85
  br _92, ^168, ^161

168:
  %% Result type:
  %%    'ok'
  ret `ok`

161:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:765
%% Counter = 175
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-8-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:767
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _78 = bif:element `2`, ATuple

  %% Aliased:
  %%    _78
  _162 = succeeded:guard _78
  br _162, ^162, ^160

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _79 = bif:'=:=' _78, `true`

  %% guard_SUITE.erl:767
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  %% Anno: #{unit => 8}
  _80 = bs_create_bin `integer`, `[1,{segment,1}]`, True, `8`

  %% Aliased:
  %%    _80
  _163 = succeeded:guard _80
  br _163, ^169, ^160

169:
  %% guard_SUITE.erl:767
  %% Argument types:
  %%    _80 => bitstring(8)
  %% Aliased:
  %%    _80
  _81 = bif:'=:=' _80, `<<1>>`

  %% guard_SUITE.erl:767
  %% Argument types:
  %%    _79 => 'false' | 'true'
  %%    _81 => 'false' | 'true'
  %% Unique:
  %%    _79, 
  %%    _81
  _82 = bif:'or' _79, _81
  br _82, ^168, ^160

168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _83 = bif:is_boolean _78
  br _83, ^166, ^160

166:
  %% Result type:
  %%    'ok'
  ret `ok`

160:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:759
%% Counter = 175
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-7-'`(ATuple, False) {
0:
  %% guard_SUITE.erl:761
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  %% Anno: #{unit => 8}
  _71 = bs_create_bin `integer`, `[1,{segment,1}]`, False, `8`

  %% Aliased:
  %%    _71
  _161 = succeeded:guard _71
  br _161, ^161, ^159

161:
  %% guard_SUITE.erl:761
  %% Argument types:
  %%    _71 => bitstring(8)
  %% Aliased:
  %%    _71
  _72 = bif:'=:=' _71, `<<0>>`

  %% guard_SUITE.erl:761
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _73 = bif:element `2`, ATuple

  %% Aliased:
  %%    _73
  _162 = succeeded:guard _73
  br _162, ^168, ^159

168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _74 = bif:'=:=' _73, `true`

  %% guard_SUITE.erl:761
  %% Argument types:
  %%    _72 => 'false' | 'true'
  %%    _74 => 'false' | 'true'
  %% Unique:
  %%    _72, 
  %%    _74
  _75 = bif:'or' _72, _74
  br _75, ^167, ^159

167:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _76 = bif:is_boolean _73
  br _76, ^165, ^159

165:
  %% Result type:
  %%    'ok'
  ret `ok`

159:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:754
%% Counter = 183
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-6-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:755
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _58 = bif:element `1`, ATuple

  %% Aliased:
  %%    _58
  _160 = succeeded:guard _58
  br _160, ^160, ^158

160:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _59 = bif:'=:=' _58, `true`

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _60 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:755
  %% Argument types:
  %%    _59 => 'false' | 'true'
  %%    _60 => 'false' | 'true'
  %% Unique:
  %%    _59, 
  %%    _60
  _61 = bif:'or' _59, _60

  %% guard_SUITE.erl:755
  %% Argument types:
  %%    ATuple => {any(), ...}
  %% Aliased:
  %%    ATuple
  _62 = bif:element `42`, ATuple

  %% Aliased:
  %%    _62
  _162 = succeeded:guard _62
  br _162, ^172, ^158

172:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _63 = bif:'=:=' _62, `true`

  %% guard_SUITE.erl:755
  %% Argument types:
  %%    _61 => 'false' | 'true'
  %%    _63 => 'false' | 'true'
  %% Unique:
  %%    _61, 
  %%    _63
  _64 = bif:'or' _61, _63
  br _64, ^171, ^158

171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _65 = bif:is_boolean _62
  br _65, ^170, ^158

170:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _67 = bif:is_boolean True
  br _67, ^169, ^158

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _69 = bif:is_boolean _58
  br _69, ^167, ^158

167:
  %% Result type:
  %%    'ok'
  ret `ok`

158:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:749
%% Counter = 182
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-5-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:750
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _45 = bif:element `1`, ATuple

  %% Aliased:
  %%    _45
  _159 = succeeded:guard _45
  br _159, ^159, ^157

159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _46 = bif:'=:=' _45, `true`

  %% guard_SUITE.erl:750
  %% Argument types:
  %%    ATuple => {any(), ...}
  %% Aliased:
  %%    ATuple
  _47 = bif:element `42`, ATuple

  %% Aliased:
  %%    _47
  _160 = succeeded:guard _47
  br _160, ^172, ^157

172:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _48 = bif:'=:=' _47, `true`

  %% guard_SUITE.erl:750
  %% Argument types:
  %%    _46 => 'false' | 'true'
  %%    _48 => 'false' | 'true'
  %% Unique:
  %%    _46, 
  %%    _48
  _49 = bif:'or' _46, _48

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _50 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:750
  %% Argument types:
  %%    _49 => 'false' | 'true'
  %%    _50 => 'false' | 'true'
  %% Unique:
  %%    _49, 
  %%    _50
  _51 = bif:'or' _49, _50
  br _51, ^170, ^157

170:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _52 = bif:is_boolean True
  br _52, ^169, ^157

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _54 = bif:is_boolean _47
  br _54, ^168, ^157

168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _56 = bif:is_boolean _45
  br _56, ^166, ^157

166:
  %% Result type:
  %%    'ok'
  ret `ok`

157:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:744
%% Counter = 171
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-4-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:745
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _37 = bif:element `42`, ATuple

  %% Aliased:
  %%    _37
  _158 = succeeded:guard _37
  br _158, ^158, ^156

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _38 = bif:'=:=' _37, `true`
  br _38, ^165, ^169

165:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _41 = bif:is_boolean True
  br _41, ^164, ^156

169:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _39 = bif:'=:=' True, `true`
  br _39, ^164, ^156

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _43 = bif:is_boolean _37
  br _43, ^162, ^156

162:
  %% Result type:
  %%    'ok'
  ret `ok`

156:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:739
%% Counter = 173
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-3-'`(ATuple, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _29 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:740
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _30 = bif:element `42`, ATuple

  %% Aliased:
  %%    _30
  _157 = succeeded:guard _30
  br _157, ^165, ^155

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _31 = bif:'=:=' _30, `true`

  %% guard_SUITE.erl:740
  %% Argument types:
  %%    _29 => 'false' | 'true'
  %%    _31 => 'false' | 'true'
  %% Unique:
  %%    _29, 
  %%    _31
  _32 = bif:'or' _29, _31
  br _32, ^164, ^155

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _33 = bif:is_boolean _30
  br _33, ^163, ^155

163:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _35 = bif:is_boolean True
  br _35, ^161, ^155

161:
  %% Result type:
  %%    'ok'
  ret `ok`

155:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:734
%% Counter = 173
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-2-'`(ATuple) {
0:
  %% guard_SUITE.erl:735
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _20 = bif:element `18`, ATuple

  %% Aliased:
  %%    _20
  _156 = succeeded:guard _20
  br _156, ^156, ^154

156:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _21 = bif:'=:=' _20, `true`

  %% guard_SUITE.erl:735
  %% Argument types:
  %%    ATuple => {any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), any(), ...}
  %% Aliased:
  %%    ATuple
  _22 = bif:element `42`, ATuple

  %% Aliased:
  %%    _22
  _157 = succeeded:guard _22
  br _157, ^165, ^154

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _23 = bif:'=:=' _22, `true`

  %% guard_SUITE.erl:735
  %% Argument types:
  %%    _21 => 'false' | 'true'
  %%    _23 => 'false' | 'true'
  %% Unique:
  %%    _21, 
  %%    _23
  _24 = bif:'or' _21, _23
  br _24, ^164, ^154

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _25 = bif:is_boolean _22
  br _25, ^163, ^154

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _27 = bif:is_boolean _20
  br _27, ^161, ^154

161:
  %% Result type:
  %%    'ok'
  ret `ok`

154:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:729
%% Counter = 171
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-1-'`(ATuple, False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _12 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:730
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _13 = bif:element `42`, ATuple

  %% Aliased:
  %%    _13
  _155 = succeeded:guard _13
  br _155, ^163, ^153

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _14 = bif:'=:=' _13, `true`

  %% guard_SUITE.erl:730
  %% Argument types:
  %%    _12 => 'false' | 'true'
  %%    _14 => 'false' | 'true'
  %% Unique:
  %%    _12, 
  %%    _14
  _15 = bif:'or' _12, _14
  br _15, ^162, ^153

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _16 = bif:is_boolean _13
  br _16, ^161, ^153

161:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _18 = bif:is_boolean False
  br _18, ^159, ^153

159:
  %% Result type:
  %%    'ok'
  ret `ok`

153:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:724
%% Counter = 167
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-more_or_guards/1-fun-0-'`(ATuple, False) {
0:
  %% guard_SUITE.erl:725
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _4 = bif:element `42`, ATuple

  %% Aliased:
  %%    _4
  _154 = succeeded:guard _4
  br _154, ^154, ^152

154:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _5 = bif:'=:=' _4, `true`
  br _5, ^161, ^165

161:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _8 = bif:is_boolean False
  br _8, ^160, ^152

165:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _6 = bif:'=:=' False, `true`
  br _6, ^160, ^152

160:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _10 = bif:is_boolean _4
  br _10, ^158, ^152

158:
  %% Result type:
  %%    'ok'
  ret `ok`

152:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:712
%% Counter = 208
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-15-'`(False) {
0:
  br ^207

207:
  _154 = new_try_tag `'catch'`
  br _154, ^152, ^153

152:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _75 = bif:'=:=' False, `true`
  br _75, ^162, ^157

162:
  br ^151

157:
  %% guard_SUITE.erl:713
  _147 = match_fail `if_clause`

  %% Unique:
  %%    _147
  _163 = succeeded:body _147
  br ^153

153:
  %% Unique:
  %%    _154
  _166 = landingpad `'catch'`, _154

  %% Aliased:
  %%    _166
  _164 = extract _166, `0`
  br ^151

151:
  _167 = phi { _164, ^153 }, { `ok`, ^162 }

  %% Aliased:
  %%    _167
  %% Unique:
  %%    _154
  _81 = catch_end _154, _167

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _179 = is_tagged_tuple _81, `2`, `'EXIT'`
  br _179, ^176, ^169

176:
  %% Argument types:
  %%    _81 => {''EXIT'', any()}
  %% Aliased:
  %%    _81
  _120 = get_tuple_element _81, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _173 = is_tagged_tuple _120, `2`, `if_clause`
  br _173, ^170, ^169

170:
  %% Result type:
  %%    'exit'
  ret `exit`

169:
  %% guard_SUITE.erl:713
  %% Aliased:
  %%    _81
  _148 = match_fail `badmatch`, _81

  %% Unique:
  %%    _148
  _182 = succeeded:body _148
  br ^1

1:
  _149 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _149
}

%% guard_SUITE.erl:710
%% Counter = 160
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-14-'`(Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _68 = bif:'=:=' Glurf, `true`
  br _68, ^151, ^146

151:
  %% Result type:
  %%    'ok'
  ret `ok`

146:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:709
%% Counter = 159
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-13-'`(Glurf, True) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _61 = bif:'=:=' Glurf, `true`
  br _61, ^153, ^157

153:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _64 = bif:is_boolean True
  br _64, ^152, ^145

157:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _62 = bif:'=:=' True, `true`
  br _62, ^152, ^145

152:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _66 = bif:is_boolean Glurf
  br _66, ^150, ^145

150:
  %% Result type:
  %%    'ok'
  ret `ok`

145:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:708
%% Counter = 158
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-12-'`(Glurf, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _54 = bif:'=:=' True, `true`
  br _54, ^152, ^156

152:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _57 = bif:is_boolean Glurf
  br _57, ^151, ^144

156:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _55 = bif:'=:=' Glurf, `true`
  br _55, ^151, ^144

151:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _59 = bif:is_boolean True
  br _59, ^149, ^144

149:
  %% Result type:
  %%    'ok'
  ret `ok`

144:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:706
%% Counter = 157
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-11-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _47 = bif:'=:=' False, `true`
  br _47, ^148, ^143

148:
  %% Result type:
  %%    'ok'
  ret `ok`

143:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:705
%% Counter = 157
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-10-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _40 = bif:'=:=' True, `true`
  br _40, ^147, ^142

147:
  %% Result type:
  %%    'ok'
  ret `ok`

142:
  %% guard_SUITE.erl:705
  _139 = match_fail `if_clause`

  %% Unique:
  %%    _139
  _148 = succeeded:body _139
  br ^1

1:
  _140 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _140
}

%% guard_SUITE.erl:704
%% Counter = 155
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-9-'`(False, True) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _33 = bif:'=:=' False, `true`
  br _33, ^149, ^153

149:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _36 = bif:is_boolean True
  br _36, ^148, ^140

153:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _34 = bif:'=:=' True, `true`
  br _34, ^148, ^140

148:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _38 = bif:is_boolean False
  br _38, ^145, ^140

145:
  %% Result type:
  %%    'ok'
  ret `ok`

140:
  %% guard_SUITE.erl:704
  _137 = match_fail `if_clause`

  %% Unique:
  %%    _137
  _146 = succeeded:body _137
  br ^1

1:
  _138 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _138
}

%% guard_SUITE.erl:703
%% Counter = 153
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-or_guard/1-fun-8-'`(False, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _26 = bif:'=:=' True, `true`
  br _26, ^147, ^151

147:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _29 = bif:is_boolean False
  br _29, ^146, ^138

151:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _27 = bif:'=:=' False, `true`
  br _27, ^146, ^138

146:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _31 = bif:is_boolean True
  br _31, ^143, ^138

143:
  %% Result type:
  %%    'ok'
  ret `ok`

138:
  %% guard_SUITE.erl:703
  _135 = match_fail `if_clause`

  %% Unique:
  %%    _135
  _144 = succeeded:body _135
  br ^1

1:
  _136 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _136
}

%% guard_SUITE.erl:696
%% Counter = 178
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-7-'`() {
0:
  br ^177

177:
  _139 = new_try_tag `'catch'`
  br _139, ^137, ^138

137:
  %% guard_SUITE.erl:697
  _132 = match_fail `if_clause`

  %% Unique:
  %%    _132
  _141 = succeeded:body _132
  br ^138

138:
  %% Unique:
  %%    _139
  _144 = landingpad `'catch'`, _139

  %% Aliased:
  %%    _144
  _142 = extract _144, `0`
  br ^136

136:
  %% Aliased:
  %%    _142
  %% Unique:
  %%    _139
  _23 = catch_end _139, _142

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _157 = is_tagged_tuple _23, `2`, `'EXIT'`
  br _157, ^154, ^147

154:
  %% Argument types:
  %%    _23 => {''EXIT'', any()}
  %% Aliased:
  %%    _23
  _87 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _151 = is_tagged_tuple _87, `2`, `if_clause`
  br _151, ^148, ^147

148:
  %% Result type:
  %%    'exit'
  ret `exit`

147:
  %% guard_SUITE.erl:697
  %% Aliased:
  %%    _23
  _133 = match_fail `badmatch`, _23

  %% Unique:
  %%    _133
  _160 = succeeded:body _133
  br ^1

1:
  _134 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _134
}

%% guard_SUITE.erl:694
%% Counter = 132
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-6-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:693
%% Counter = 131
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-5-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:692
%% Counter = 130
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-4-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:690
%% Counter = 129
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-3-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:689
%% Counter = 128
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-2-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:688
%% Counter = 127
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-1-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:687
%% Counter = 126
%% bs_ensure_opt: true
function `guard_SUITE`:`'-or_guard/1-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:670
%% Counter = 254
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-19-'`(ATuple, True) {
0:
  br ^253

253:
  _182 = new_try_tag `'catch'`
  br _182, ^180, ^181

180:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _70 = bif:'=:=' True, `true`
  br _70, ^235, ^191

235:
  %% guard_SUITE.erl:672
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _71 = bif:element `42`, ATuple

  %% Aliased:
  %%    _71
  _188 = succeeded:guard _71
  br _188, ^232, ^186

232:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _72 = bif:'=:=' _71, `true`
  br _72, ^190, ^186

190:
  br ^179

186:
  %% guard_SUITE.erl:673
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _73 = bif:element `42`, ATuple

  %% Aliased:
  %%    _73
  _193 = succeeded:guard _73
  br _193, ^193, ^191

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _74 = bif:'=:=' _73, `true`
  br _74, ^195, ^191

195:
  br ^179

191:
  %% guard_SUITE.erl:674
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _76 = bif:element `42`, ATuple

  %% Aliased:
  %%    _76
  _197 = succeeded:guard _76
  br _197, ^197, ^185

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _77 = bif:'=:=' _76, `true`
  br _77, ^200, ^185

200:
  br ^179

185:
  %% guard_SUITE.erl:672
  _175 = match_fail `if_clause`

  %% Unique:
  %%    _175
  _201 = succeeded:body _175
  br ^181

181:
  %% Unique:
  %%    _182
  _204 = landingpad `'catch'`, _182

  %% Aliased:
  %%    _204
  _202 = extract _204, `0`
  br ^179

179:
  _205 = phi { _202, ^181 }, { `ok`, ^190 }, { `ok`, ^195 }, { `ok`, ^200 }

  %% Aliased:
  %%    _205
  %% Unique:
  %%    _182
  _80 = catch_end _182, _205

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _217 = is_tagged_tuple _80, `2`, `'EXIT'`
  br _217, ^214, ^207

214:
  %% Argument types:
  %%    _80 => {''EXIT'', any()}
  %% Aliased:
  %%    _80
  _136 = get_tuple_element _80, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _136
  _211 = is_tagged_tuple _136, `2`, `if_clause`
  br _211, ^208, ^207

208:
  %% Result type:
  %%    'exit'
  ret `exit`

207:
  %% guard_SUITE.erl:671
  %% Aliased:
  %%    _80
  _176 = match_fail `badmatch`, _80

  %% Unique:
  %%    _176
  _220 = succeeded:body _176
  br ^1

1:
  _177 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _177
}

%% guard_SUITE.erl:668
%% Counter = 186
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-18-'`(ATuple) {
0:
  %% guard_SUITE.erl:668
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _65 = bif:element `42`, ATuple

  %% Aliased:
  %%    _65
  _176 = succeeded:guard _65
  br _176, ^176, ^174

176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _66 = bif:'=:=' _65, `true`
  br _66, ^179, ^174

179:
  %% Result type:
  %%    'ok'
  ret `ok`

174:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:667
%% Counter = 181
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-17-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _62 = bif:'=:=' True, `true`
  br _62, ^175, ^173

175:
  %% Result type:
  %%    'ok'
  ret `ok`

173:
  %% guard_SUITE.erl:667
  _170 = match_fail `if_clause`

  %% Unique:
  %%    _170
  _176 = succeeded:body _170
  br ^1

1:
  _171 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _171
}

%% guard_SUITE.erl:665
%% Counter = 180
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-16-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:665
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _58 = bif:element `42`, ATuple

  %% Aliased:
  %%    _58
  _173 = succeeded:guard _58
  br _173, ^173, ^171

173:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _59 = bif:'=:=' _58, `true`
  br _59, ^178, ^171

178:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _60 = bif:'=:=' True, `true`
  br _60, ^175, ^171

175:
  %% Result type:
  %%    'ok'
  ret `ok`

171:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:663
%% Counter = 181
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-15-'`(ATuple, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _54 = bif:'=:=' True, `true`
  br _54, ^179, ^170

179:
  %% guard_SUITE.erl:663
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _55 = bif:element `42`, ATuple

  %% Aliased:
  %%    _55
  _172 = succeeded:guard _55
  br _172, ^176, ^170

176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _56 = bif:'=:=' _55, `true`
  br _56, ^174, ^170

174:
  %% Result type:
  %%    'ok'
  ret `ok`

170:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:651
%% Counter = 233
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-14-'`(Glurf, True) {
0:
  br ^232

232:
  _172 = new_try_tag `'catch'`
  br _172, ^214, ^171

214:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _45 = bif:'=:=' Glurf, `true`
  br _45, ^178, ^175

178:
  br ^169

175:
  %% guard_SUITE.erl:653
  _165 = match_fail `if_clause`

  %% Unique:
  %%    _165
  _184 = succeeded:body _165
  br ^171

171:
  %% Unique:
  %%    _172
  _187 = landingpad `'catch'`, _172

  %% Aliased:
  %%    _187
  _185 = extract _187, `0`
  br ^169

169:
  _188 = phi { _185, ^171 }, { `ok`, ^178 }

  %% Aliased:
  %%    _188
  %% Unique:
  %%    _172
  _50 = catch_end _172, _188

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _200 = is_tagged_tuple _50, `2`, `'EXIT'`
  br _200, ^197, ^190

197:
  %% Argument types:
  %%    _50 => {''EXIT'', any()}
  %% Aliased:
  %%    _50
  _110 = get_tuple_element _50, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _194 = is_tagged_tuple _110, `2`, `if_clause`
  br _194, ^191, ^190

191:
  %% Result type:
  %%    'exit'
  ret `exit`

190:
  %% guard_SUITE.erl:652
  %% Aliased:
  %%    _50
  _166 = match_fail `badmatch`, _50

  %% Unique:
  %%    _166
  _203 = succeeded:body _166
  br ^1

1:
  _167 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _167
}

%% guard_SUITE.erl:650
%% Counter = 171
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-13-'`(Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _41 = bif:'=:=' Glurf, `true`
  br _41, ^166, ^164

166:
  %% Result type:
  %%    'ok'
  ret `ok`

164:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:649
%% Counter = 171
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-12-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _38 = bif:'=:=' True, `true`
  br _38, ^165, ^163

165:
  %% Result type:
  %%    'ok'
  ret `ok`

163:
  %% guard_SUITE.erl:649
  _160 = match_fail `if_clause`

  %% Unique:
  %%    _160
  _166 = succeeded:body _160
  br ^1

1:
  _161 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _161
}

%% guard_SUITE.erl:648
%% Counter = 168
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-11-'`(Glurf, True) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _35 = bif:'=:=' Glurf, `true`
  br _35, ^166, ^161

166:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _36 = bif:'=:=' True, `true`
  br _36, ^163, ^161

163:
  %% Result type:
  %%    'ok'
  ret `ok`

161:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:647
%% Counter = 167
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-10-'`(Glurf, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _32 = bif:'=:=' True, `true`
  br _32, ^165, ^160

165:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _33 = bif:'=:=' Glurf, `true`
  br _33, ^162, ^160

162:
  %% Result type:
  %%    'ok'
  ret `ok`

160:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:634
%% Counter = 223
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-9-'`(False, True) {
0:
  br ^222

222:
  _162 = new_try_tag `'catch'`
  br _162, ^204, ^161

204:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _23 = bif:'=:=' False, `true`
  br _23, ^168, ^165

168:
  br ^159

165:
  %% guard_SUITE.erl:636
  _155 = match_fail `if_clause`

  %% Unique:
  %%    _155
  _174 = succeeded:body _155
  br ^161

161:
  %% Unique:
  %%    _162
  _177 = landingpad `'catch'`, _162

  %% Aliased:
  %%    _177
  _175 = extract _177, `0`
  br ^159

159:
  _178 = phi { _175, ^161 }, { `ok`, ^168 }

  %% Aliased:
  %%    _178
  %% Unique:
  %%    _162
  _28 = catch_end _162, _178

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _190 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _190, ^187, ^180

187:
  %% Argument types:
  %%    _28 => {''EXIT'', any()}
  %% Aliased:
  %%    _28
  _99 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _184 = is_tagged_tuple _99, `2`, `if_clause`
  br _184, ^181, ^180

181:
  %% Result type:
  %%    'exit'
  ret `exit`

180:
  %% guard_SUITE.erl:635
  %% Aliased:
  %%    _28
  _156 = match_fail `badmatch`, _28

  %% Unique:
  %%    _156
  _193 = succeeded:body _156
  br ^1

1:
  _157 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _157
}

%% guard_SUITE.erl:633
%% Counter = 161
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-8-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _19 = bif:'=:=' False, `true`
  br _19, ^156, ^154

156:
  %% Result type:
  %%    'ok'
  ret `ok`

154:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:632
%% Counter = 161
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-7-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _16 = bif:'=:=' True, `true`
  br _16, ^155, ^153

155:
  %% Result type:
  %%    'ok'
  ret `ok`

153:
  %% guard_SUITE.erl:632
  _150 = match_fail `if_clause`

  %% Unique:
  %%    _150
  _156 = succeeded:body _150
  br ^1

1:
  _151 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _151
}

%% guard_SUITE.erl:631
%% Counter = 158
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-6-'`(False, True) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _13 = bif:'=:=' False, `true`
  br _13, ^156, ^151

156:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _14 = bif:'=:=' True, `true`
  br _14, ^153, ^151

153:
  %% Result type:
  %%    'ok'
  ret `ok`

151:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:630
%% Counter = 157
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-comma/1-fun-5-'`(False, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _10 = bif:'=:=' True, `true`
  br _10, ^155, ^150

155:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _11 = bif:'=:=' False, `true`
  br _11, ^152, ^150

152:
  %% Result type:
  %%    'ok'
  ret `ok`

150:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:616
%% Counter = 191
%% bs_ensure_opt: true
function `guard_SUITE`:`'-comma/1-fun-4-'`() {
0:
  br ^190

190:
  _152 = new_try_tag `'catch'`
  br _152, ^150, ^151

150:
  %% guard_SUITE.erl:618
  _145 = match_fail `if_clause`

  %% Unique:
  %%    _145
  _154 = succeeded:body _145
  br ^151

151:
  %% Unique:
  %%    _152
  _157 = landingpad `'catch'`, _152

  %% Aliased:
  %%    _157
  _155 = extract _157, `0`
  br ^149

149:
  %% Aliased:
  %%    _155
  %% Unique:
  %%    _152
  _5 = catch_end _152, _155

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _170 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _170, ^167, ^160

167:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _88 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _164 = is_tagged_tuple _88, `2`, `if_clause`
  br _164, ^161, ^160

161:
  %% Result type:
  %%    'exit'
  ret `exit`

160:
  %% guard_SUITE.erl:617
  %% Aliased:
  %%    _5
  _146 = match_fail `badmatch`, _5

  %% Unique:
  %%    _146
  _173 = succeeded:body _146
  br ^1

1:
  _147 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _147
}

%% guard_SUITE.erl:615
%% Counter = 145
%% bs_ensure_opt: true
function `guard_SUITE`:`'-comma/1-fun-3-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:614
%% Counter = 144
%% bs_ensure_opt: true
function `guard_SUITE`:`'-comma/1-fun-2-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:613
%% Counter = 143
%% bs_ensure_opt: true
function `guard_SUITE`:`'-comma/1-fun-1-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:612
%% Counter = 142
%% bs_ensure_opt: true
function `guard_SUITE`:`'-comma/1-fun-0-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:416
%% Counter = 261
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-21-'`(ATuple) {
0:
  br ^260

260:
  _200 = new_try_tag `'catch'`
  br _200, ^198, ^199

198:
  %% guard_SUITE.erl:418
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _70 = bif:element `42`, ATuple

  %% Aliased:
  %%    _70
  _206 = succeeded:guard _70
  br _206, ^236, ^241

236:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _190 = bif:'=:=' _70, `true`
  br _190, ^211, ^241

241:
  %% guard_SUITE.erl:419
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _72 = bif:element `42`, ATuple

  %% Aliased:
  %%    _72
  _209 = succeeded:guard _72
  br _209, ^233, ^203

233:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _192 = bif:'=:=' _72, `true`
  br _192, ^211, ^203

211:
  br ^197

203:
  %% guard_SUITE.erl:418
  _193 = match_fail `if_clause`

  %% Unique:
  %%    _193
  _212 = succeeded:body _193
  br ^199

199:
  %% Unique:
  %%    _200
  _215 = landingpad `'catch'`, _200

  %% Aliased:
  %%    _215
  _213 = extract _215, `0`
  br ^197

197:
  _216 = phi { _213, ^199 }, { `ok`, ^211 }

  %% Aliased:
  %%    _216
  %% Unique:
  %%    _200
  _74 = catch_end _200, _216

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _228 = is_tagged_tuple _74, `2`, `'EXIT'`
  br _228, ^225, ^218

225:
  %% Argument types:
  %%    _74 => {''EXIT'', any()}
  %% Aliased:
  %%    _74
  _132 = get_tuple_element _74, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _222 = is_tagged_tuple _132, `2`, `if_clause`
  br _222, ^219, ^218

219:
  %% Result type:
  %%    'exit'
  ret `exit`

218:
  %% guard_SUITE.erl:417
  %% Aliased:
  %%    _74
  _194 = match_fail `badmatch`, _74

  %% Unique:
  %%    _194
  _231 = succeeded:body _194
  br ^1

1:
  _195 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _195
}

%% guard_SUITE.erl:414
%% Counter = 202
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-20-'`(ATuple, False) {
0:
  %% guard_SUITE.erl:414
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _66 = bif:element `42`, ATuple

  %% Aliased:
  %%    _66
  _191 = succeeded:guard _66
  br _191, ^195, ^199

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _185 = bif:'=:=' _66, `true`
  br _185, ^193, ^199

199:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _68 = bif:'=:=' False, `true`
  br _68, ^193, ^188

193:
  %% Result type:
  %%    'ok'
  ret `ok`

188:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:412
%% Counter = 199
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-19-'`(ATuple, False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _62 = bif:'=:=' False, `true`
  br _62, ^190, ^197

197:
  %% guard_SUITE.erl:412
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _63 = bif:element `42`, ATuple

  %% Aliased:
  %%    _63
  _188 = succeeded:guard _63
  br _188, ^192, ^185

192:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _182 = bif:'=:=' _63, `true`
  br _182, ^190, ^185

190:
  %% Result type:
  %%    'ok'
  ret `ok`

185:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:410
%% Counter = 203
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-18-'`(ATuple) {
0:
  %% guard_SUITE.erl:410
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _57 = bif:element `42`, ATuple

  %% Aliased:
  %%    _57
  _185 = succeeded:guard _57
  br _185, ^195, ^200

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _177 = bif:'=:=' _57, `true`
  br _177, ^190, ^200

200:
  %% guard_SUITE.erl:410
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _59 = bif:element `42`, ATuple

  %% Aliased:
  %%    _59
  _188 = succeeded:guard _59
  br _188, ^192, ^182

192:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _179 = bif:'=:=' _59, `true`
  br _179, ^190, ^182

190:
  %% Result type:
  %%    'ok'
  ret `ok`

182:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:409
%% Counter = 192
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-17-'`(ATuple, True) {
0:
  %% guard_SUITE.erl:409
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _53 = bif:element `42`, ATuple

  %% Aliased:
  %%    _53
  _180 = succeeded:guard _53
  br _180, ^185, ^189

185:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _173 = bif:'=:=' _53, `true`
  br _173, ^182, ^189

189:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _55 = bif:'=:=' True, `true`
  br _55, ^182, ^177

182:
  %% Result type:
  %%    'ok'
  ret `ok`

177:
  %% guard_SUITE.erl:409
  _174 = match_fail `if_clause`

  %% Unique:
  %%    _174
  _183 = succeeded:body _174
  br ^1

1:
  _175 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _175
}

%% guard_SUITE.erl:408
%% Counter = 188
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-16-'`(ATuple, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _49 = bif:'=:=' True, `true`
  br _49, ^178, ^186

186:
  %% guard_SUITE.erl:408
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _50 = bif:element `42`, ATuple

  %% Aliased:
  %%    _50
  _176 = succeeded:guard _50
  br _176, ^181, ^173

181:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _169 = bif:'=:=' _50, `true`
  br _169, ^178, ^173

178:
  %% Result type:
  %%    'ok'
  ret `ok`

173:
  %% guard_SUITE.erl:408
  _170 = match_fail `if_clause`

  %% Unique:
  %%    _170
  _179 = succeeded:body _170
  br ^1

1:
  _171 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _171
}

%% guard_SUITE.erl:399
%% Counter = 219
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-15-'`(Glurf) {
0:
  br ^218

218:
  _172 = new_try_tag `'catch'`
  br _172, ^170, ^171

170:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _43 = bif:'=:=' Glurf, `true`
  br _43, ^177, ^175

177:
  br ^169

175:
  %% guard_SUITE.erl:400
  _165 = match_fail `if_clause`

  %% Unique:
  %%    _165
  _178 = succeeded:body _165
  br ^171

171:
  %% Unique:
  %%    _172
  _181 = landingpad `'catch'`, _172

  %% Aliased:
  %%    _181
  _179 = extract _181, `0`
  br ^169

169:
  _182 = phi { _179, ^171 }, { `ok`, ^177 }

  %% Aliased:
  %%    _182
  %% Unique:
  %%    _172
  _45 = catch_end _172, _182

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _194 = is_tagged_tuple _45, `2`, `'EXIT'`
  br _194, ^191, ^184

191:
  %% Argument types:
  %%    _45 => {''EXIT'', any()}
  %% Aliased:
  %%    _45
  _101 = get_tuple_element _45, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _188 = is_tagged_tuple _101, `2`, `if_clause`
  br _188, ^185, ^184

185:
  %% Result type:
  %%    'exit'
  ret `exit`

184:
  %% guard_SUITE.erl:400
  %% Aliased:
  %%    _45
  _166 = match_fail `badmatch`, _45

  %% Unique:
  %%    _166
  _197 = succeeded:body _166
  br ^1

1:
  _167 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _167
}

%% guard_SUITE.erl:398
%% Counter = 171
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-14-'`(False, Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _40 = bif:'=:=' Glurf, `true`
  br _40, ^166, ^169

169:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _41 = bif:'=:=' False, `true`
  br _41, ^166, ^164

166:
  %% Result type:
  %%    'ok'
  ret `ok`

164:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:397
%% Counter = 170
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-13-'`(False, Glurf) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _37 = bif:'=:=' False, `true`
  br _37, ^165, ^168

168:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _38 = bif:'=:=' Glurf, `true`
  br _38, ^165, ^163

165:
  %% Result type:
  %%    'ok'
  ret `ok`

163:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:396
%% Counter = 169
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-12-'`(Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _34 = bif:'=:=' Glurf, `true`
  br _34, ^164, ^162

164:
  %% Result type:
  %%    'ok'
  ret `ok`

162:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:395
%% Counter = 169
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-11-'`(Glurf, True) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _31 = bif:'=:=' Glurf, `true`
  br _31, ^163, ^167

167:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _32 = bif:'=:=' True, `true`
  br _32, ^163, ^161

163:
  %% Result type:
  %%    'ok'
  ret `ok`

161:
  %% guard_SUITE.erl:395
  _158 = match_fail `if_clause`

  %% Unique:
  %%    _158
  _164 = succeeded:body _158
  br ^1

1:
  _159 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _159
}

%% guard_SUITE.erl:394
%% Counter = 167
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-10-'`(Glurf, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _28 = bif:'=:=' True, `true`
  br _28, ^161, ^165

165:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _29 = bif:'=:=' Glurf, `true`
  br _29, ^161, ^159

161:
  %% Result type:
  %%    'ok'
  ret `ok`

159:
  %% guard_SUITE.erl:394
  _156 = match_fail `if_clause`

  %% Unique:
  %%    _156
  _162 = succeeded:body _156
  br ^1

1:
  _157 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _157
}

%% guard_SUITE.erl:385
%% Counter = 207
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-9-'`(False) {
0:
  br ^206

206:
  _160 = new_try_tag `'catch'`
  br _160, ^158, ^159

158:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _22 = bif:'=:=' False, `true`
  br _22, ^165, ^163

165:
  br ^157

163:
  %% guard_SUITE.erl:386
  _153 = match_fail `if_clause`

  %% Unique:
  %%    _153
  _166 = succeeded:body _153
  br ^159

159:
  %% Unique:
  %%    _160
  _169 = landingpad `'catch'`, _160

  %% Aliased:
  %%    _169
  _167 = extract _169, `0`
  br ^157

157:
  _170 = phi { _167, ^159 }, { `ok`, ^165 }

  %% Aliased:
  %%    _170
  %% Unique:
  %%    _160
  _24 = catch_end _160, _170

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _182 = is_tagged_tuple _24, `2`, `'EXIT'`
  br _182, ^179, ^172

179:
  %% Argument types:
  %%    _24 => {''EXIT'', any()}
  %% Aliased:
  %%    _24
  _91 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _176 = is_tagged_tuple _91, `2`, `if_clause`
  br _176, ^173, ^172

173:
  %% Result type:
  %%    'exit'
  ret `exit`

172:
  %% guard_SUITE.erl:386
  %% Aliased:
  %%    _24
  _154 = match_fail `badmatch`, _24

  %% Unique:
  %%    _154
  _185 = succeeded:body _154
  br ^1

1:
  _155 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _155
}

%% guard_SUITE.erl:384
%% Counter = 159
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-8-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _19 = bif:'=:=' False, `true`
  br _19, ^154, ^152

154:
  %% Result type:
  %%    'ok'
  ret `ok`

152:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:383
%% Counter = 159
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-7-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _16 = bif:'=:=' True, `true`
  br _16, ^153, ^151

153:
  %% Result type:
  %%    'ok'
  ret `ok`

151:
  %% guard_SUITE.erl:383
  _148 = match_fail `if_clause`

  %% Unique:
  %%    _148
  _154 = succeeded:body _148
  br ^1

1:
  _149 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _149
}

%% guard_SUITE.erl:382
%% Counter = 157
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-6-'`(False, True) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _13 = bif:'=:=' False, `true`
  br _13, ^151, ^155

155:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _14 = bif:'=:=' True, `true`
  br _14, ^151, ^149

151:
  %% Result type:
  %%    'ok'
  ret `ok`

149:
  %% guard_SUITE.erl:382
  _146 = match_fail `if_clause`

  %% Unique:
  %%    _146
  _152 = succeeded:body _146
  br ^1

1:
  _147 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _147
}

%% guard_SUITE.erl:381
%% Counter = 155
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-semicolon/1-fun-5-'`(False, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _10 = bif:'=:=' True, `true`
  br _10, ^149, ^153

153:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _11 = bif:'=:=' False, `true`
  br _11, ^149, ^147

149:
  %% Result type:
  %%    'ok'
  ret `ok`

147:
  %% guard_SUITE.erl:381
  _144 = match_fail `if_clause`

  %% Unique:
  %%    _144
  _150 = succeeded:body _144
  br ^1

1:
  _145 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _145
}

%% guard_SUITE.erl:371
%% Counter = 187
%% bs_ensure_opt: true
function `guard_SUITE`:`'-semicolon/1-fun-4-'`() {
0:
  br ^186

186:
  _148 = new_try_tag `'catch'`
  br _148, ^146, ^147

146:
  %% guard_SUITE.erl:372
  _141 = match_fail `if_clause`

  %% Unique:
  %%    _141
  _150 = succeeded:body _141
  br ^147

147:
  %% Unique:
  %%    _148
  _153 = landingpad `'catch'`, _148

  %% Aliased:
  %%    _153
  _151 = extract _153, `0`
  br ^145

145:
  %% Aliased:
  %%    _151
  %% Unique:
  %%    _148
  _5 = catch_end _148, _151

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _166 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _166, ^163, ^156

163:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _82 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _160 = is_tagged_tuple _82, `2`, `if_clause`
  br _160, ^157, ^156

157:
  %% Result type:
  %%    'exit'
  ret `exit`

156:
  %% guard_SUITE.erl:372
  %% Aliased:
  %%    _5
  _142 = match_fail `badmatch`, _5

  %% Unique:
  %%    _142
  _169 = succeeded:body _142
  br ^1

1:
  _143 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _143
}

%% guard_SUITE.erl:370
%% Counter = 141
%% bs_ensure_opt: true
function `guard_SUITE`:`'-semicolon/1-fun-3-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:369
%% Counter = 140
%% bs_ensure_opt: true
function `guard_SUITE`:`'-semicolon/1-fun-2-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:368
%% Counter = 139
%% bs_ensure_opt: true
function `guard_SUITE`:`'-semicolon/1-fun-1-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:367
%% Counter = 138
%% bs_ensure_opt: true
function `guard_SUITE`:`'-semicolon/1-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:254
%% Counter = 115
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-7-'`(ATuple) {
0:
  %% guard_SUITE.erl:254
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _73 = bif:element `1`, ATuple

  %% Aliased:
  %%    _73
  _107 = succeeded:guard _73
  br _107, ^107, ^105

107:
  %% Aliased:
  %%    _73
  _114 = bif:'=:=' _73, `false`
  br _114, ^112, ^105

112:
  %% guard_SUITE.erl:254
  %% Argument types:
  %%    ATuple => {any(), ...}
  %% Aliased:
  %%    ATuple
  _101 = bif:element `3`, ATuple

  %% Aliased:
  %%    _101
  _110 = succeeded:guard _101
  br _110, ^108, ^105

108:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _113 = bif:'=:=' _101, `false`
  br _113, ^113, ^105

113:
  %% Result type:
  %%    'ok'
  ret `ok`

105:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:250
%% Counter = 123
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-6-'`(ATuple) {
0:
  %% guard_SUITE.erl:250
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _20 = bif:element `1`, ATuple

  %% Aliased:
  %%    _20
  _104 = succeeded:guard _20
  br _104, ^104, ^102

104:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _21 = bif:'=:=' _20, `true`

  %% guard_SUITE.erl:250
  %% Argument types:
  %%    ATuple => {any(), ...}
  %% Aliased:
  %%    ATuple
  _22 = bif:element `3`, ATuple

  %% Aliased:
  %%    _22
  _105 = succeeded:guard _22
  br _105, ^115, ^102

115:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _23 = bif:'=:=' _22, `true`

  %% guard_SUITE.erl:250
  %% Argument types:
  %%    _21 => 'false' | 'true'
  %%    _23 => 'false' | 'true'
  %% Unique:
  %%    _21, 
  %%    _23
  _24 = bif:'or' _21, _23
  br _24, ^102, ^113

113:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _26 = bif:is_boolean _22
  br _26, ^112, ^102

112:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _28 = bif:is_boolean _20
  br _28, ^110, ^102

110:
  %% Result type:
  %%    'ok'
  ret `ok`

102:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:247
%% Counter = 106
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-5-'`(ATuple) {
0:
  %% guard_SUITE.erl:247
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _17 = bif:element `1`, ATuple

  %% Aliased:
  %%    _17
  _103 = succeeded:guard _17
  br _103, ^103, ^101

103:
  %% guard_SUITE.erl:247
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _18 = bif:'not' _17

  %% Unique:
  %%    _18
  _104 = succeeded:guard _18
  br _104, ^104, ^101

104:
  %% Argument types:
  %%    _18 => 'false' | 'true'
  %% Unique:
  %%    _18
  _65 = put_tuple `a`, _18

  %% Argument types:
  %%    _65 => {'a', 'false' | 'true'}
  %% Unique:
  %%    _65
  _105 = bif:'=:=' _65, `{a,false}`
  br _105, ^105, ^101

105:
  %% Result type:
  %%    'ok'
  ret `ok`

101:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:245
%% Counter = 105
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-4-'`(ATuple) {
0:
  %% guard_SUITE.erl:245
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _14 = bif:element `2`, ATuple

  %% Aliased:
  %%    _14
  _102 = succeeded:guard _14
  br _102, ^102, ^100

102:
  %% guard_SUITE.erl:245
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _15 = bif:'not' _14

  %% Unique:
  %%    _15
  _103 = succeeded:guard _15
  br _103, ^103, ^100

103:
  %% Argument types:
  %%    _15 => 'false' | 'true'
  %% Unique:
  %%    _15
  _61 = put_tuple `a`, _15

  %% Argument types:
  %%    _61 => {'a', 'false' | 'true'}
  %% Unique:
  %%    _61
  _104 = bif:'=:=' _61, `{a,false}`
  br _104, ^104, ^100

104:
  %% Result type:
  %%    'ok'
  ret `ok`

100:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:242
%% Counter = 103
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-3-'`(ATuple) {
0:
  %% guard_SUITE.erl:242
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _11 = bif:element `3`, ATuple

  %% Aliased:
  %%    _11
  _101 = succeeded:guard _11
  br _101, ^101, ^99

101:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _102 = bif:'=:=' _11, `gurka`
  br _102, ^100, ^99

100:
  %% Result type:
  %%    'ok'
  ret `ok`

99:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:240
%% Counter = 102
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-2-'`(ATuple) {
0:
  %% guard_SUITE.erl:240
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _8 = bif:element `3`, ATuple

  %% Aliased:
  %%    _8
  _100 = succeeded:guard _8
  br _100, ^100, ^98

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _101 = bif:'=:=' _8, `gurka`
  br _101, ^98, ^99

99:
  %% Result type:
  %%    'ok'
  ret `ok`

98:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:238
%% Counter = 101
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-1-'`(ATuple) {
0:
  %% guard_SUITE.erl:238
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _5 = bif:element `2`, ATuple

  %% Aliased:
  %%    _5
  _99 = succeeded:guard _5
  br _99, ^99, ^97

99:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _100 = bif:'=:=' _5, `false`
  br _100, ^98, ^97

98:
  %% Result type:
  %%    'ok'
  ret `ok`

97:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:237
%% Counter = 100
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-complex_not/1-fun-0-'`(ATuple) {
0:
  %% guard_SUITE.erl:237
  %% Argument types:
  %%    ATuple => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    ATuple
  _2 = bif:element `1`, ATuple

  %% Aliased:
  %%    _2
  _98 = succeeded:guard _2
  br _98, ^98, ^96

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _99 = bif:'=:=' _2, `false`
  br _99, ^97, ^96

97:
  %% Result type:
  %%    'ok'
  ret `ok`

96:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:231
%% Counter = 129
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-23-'`(Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _128 = bif:'=:=' Glurf, `true`
  br _128, ^127, ^128

127:
  %% Result type:
  %%    'error'
  ret `error`

128:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:230
%% Counter = 128
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-22-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _127 = bif:'=:=' False, `true`
  br _127, ^126, ^127

126:
  %% Result type:
  %%    'error'
  ret `error`

127:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:229
%% Counter = 127
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-21-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _126 = bif:'=:=' True, `true`
  br _126, ^125, ^126

125:
  %% Result type:
  %%    'error'
  ret `error`

126:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% guard_SUITE.erl:226
%% Counter = 140
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-20-'`(False, True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _69 = bif:'=:=' True, `true`

  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _70 = bif:'=:=' False, `true`

  %% guard_SUITE.erl:226
  %% Argument types:
  %%    _69 => 'false' | 'true'
  %%    _70 => 'false' | 'true'
  %% Unique:
  %%    _69, 
  %%    _70
  _71 = bif:'xor' _69, _70
  br _71, ^124, ^133

133:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _73 = bif:is_boolean False
  br _73, ^132, ^124

132:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _75 = bif:is_boolean True
  br _75, ^130, ^124

130:
  %% Result type:
  %%    'ok'
  ret `ok`

124:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:225
%% Counter = 140
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-19-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _61 = bif:'=:=' True, `true`

  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _62 = bif:'=:=' True, `true`

  %% guard_SUITE.erl:225
  %% Argument types:
  %%    _61 => 'false' | 'true'
  %%    _62 => 'false' | 'true'
  %% Unique:
  %%    _61, 
  %%    _62
  _63 = bif:'xor' _61, _62
  br _63, ^123, ^133

133:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _65 = bif:is_boolean True
  br _65, ^129, ^123

129:
  %% Result type:
  %%    'ok'
  ret `ok`

123:
  %% guard_SUITE.erl:225
  _120 = match_fail `if_clause`

  %% Unique:
  %%    _120
  _130 = succeeded:body _120
  br ^1

1:
  _121 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _121
}

%% guard_SUITE.erl:223
%% Counter = 121
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-18-'`() {
0:
  %% Result type:
  %%    'broken'
  ret `broken`
}

%% guard_SUITE.erl:221
%% Counter = 122
%% bs_ensure_opt: true
%% Parameters
%%    Glurf =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-17-'`(Glurf) {
0:
  %% Argument types:
  %%    Glurf => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    Glurf
  _121 = bif:'=:=' Glurf, `false`
  br _121, ^121, ^120

121:
  %% Result type:
  %%    'ok'
  ret `ok`

120:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:220
%% Counter = 119
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-16-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:218
%% Counter = 122
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
function `guard_SUITE`:`'-basic_not/1-fun-15-'`(ATuple) {
0:
  %% guard_SUITE.erl:218
  %% Argument types:
  %%    ATuple => {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  %% Aliased:
  %%    ATuple
  _52 = get_tuple_element ATuple, `2`

  %% Argument types:
  %%    _52 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _52
  _121 = bif:'=:=' _52, `false`
  br _121, ^119, ^118

119:
  %% Result type:
  %%    'ok'
  ret `ok`

118:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:217
%% Counter = 121
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
function `guard_SUITE`:`'-basic_not/1-fun-14-'`(ATuple) {
0:
  %% guard_SUITE.erl:217
  %% Argument types:
  %%    ATuple => {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  %% Aliased:
  %%    ATuple
  _49 = get_tuple_element ATuple, `1`

  %% Argument types:
  %%    _49 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _49
  _120 = bif:'=:=' _49, `false`
  br _120, ^118, ^117

118:
  %% Result type:
  %%    'ok'
  ret `ok`

117:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:216
%% Counter = 120
%% bs_ensure_opt: true
%% Parameters
%%    ATuple =>
%%     {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
function `guard_SUITE`:`'-basic_not/1-fun-13-'`(ATuple) {
0:
  %% guard_SUITE.erl:216
  %% Argument types:
  %%    ATuple => {atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other(), atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()}
  %% Aliased:
  %%    ATuple
  _46 = get_tuple_element ATuple, `0`

  %% Argument types:
  %%    _46 => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    _46
  _119 = bif:'=:=' _46, `false`
  br _119, ^117, ^116

117:
  %% Result type:
  %%    'ok'
  ret `ok`

116:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:213
%% Counter = 121
%% bs_ensure_opt: true
%% Parameters
%%    A =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    D =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-12-'`(A, D) {
0:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    D => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    D
  _117 = bif:'=<' A, D
  br _117, ^117, ^116

117:
  %% Result type:
  %%    'le'
  ret `le`

116:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    D => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    D
  _119 = bif:'>=' A, D
  br _119, ^119, ^118

119:
  %% Result type:
  %%    'ge'
  ret `ge`

118:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    D => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    D
  _120 = bif:'==' A, D
  br _120, ^115, ^120

115:
  %% Result type:
  %%    'eq'
  ret `eq`

120:
  %% Result type:
  %%    'ne'
  ret `ne`
}

%% guard_SUITE.erl:211
%% Counter = 120
%% bs_ensure_opt: true
%% Parameters
%%    A =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    C =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-11-'`(A, C) {
0:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    C => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    C
  _116 = bif:'=<' A, C
  br _116, ^116, ^115

116:
  %% Result type:
  %%    'le'
  ret `le`

115:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    C => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    C
  _118 = bif:'>=' A, C
  br _118, ^118, ^117

118:
  %% Result type:
  %%    'ge'
  ret `ge`

117:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    C => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    C
  _119 = bif:'==' A, C
  br _119, ^114, ^119

114:
  %% Result type:
  %%    'eq'
  ret `eq`

119:
  %% Result type:
  %%    'ne'
  ret `ne`
}

%% guard_SUITE.erl:209
%% Counter = 119
%% bs_ensure_opt: true
%% Parameters
%%    A =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    B =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-10-'`(A, B) {
0:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    B => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    B
  _115 = bif:'=<' A, B
  br _115, ^115, ^114

115:
  %% Result type:
  %%    'le'
  ret `le`

114:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    B => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    B
  _117 = bif:'>=' A, B
  br _117, ^117, ^116

117:
  %% Result type:
  %%    'ge'
  ret `ge`

116:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    B => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    B
  _118 = bif:'==' A, B
  br _118, ^113, ^118

113:
  %% Result type:
  %%    'eq'
  ret `eq`

118:
  %% Result type:
  %%    'ne'
  ret `ne`
}

%% guard_SUITE.erl:206
%% Counter = 112
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-9-'`() {
0:
  %% Result type:
  %%    'le'
  ret `le`
}

%% guard_SUITE.erl:204
%% Counter = 111
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-8-'`() {
0:
  %% Result type:
  %%    'ge'
  ret `ge`
}

%% guard_SUITE.erl:202
%% Counter = 110
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-7-'`() {
0:
  %% Result type:
  %%    'le'
  ret `le`
}

%% guard_SUITE.erl:200
%% Counter = 116
%% bs_ensure_opt: true
%% Parameters
%%    A =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    D =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-6-'`(A, D) {
0:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    D => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    D
  _111 = bif:'>' A, D
  br _111, ^111, ^110

111:
  %% Result type:
  %%    'gt'
  ret `gt`

110:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    D => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    D
  _113 = bif:'<' A, D
  br _113, ^113, ^114

113:
  %% Result type:
  %%    'lt'
  ret `lt`

114:
  %% Result type:
  %%    'eq'
  ret `eq`
}

%% guard_SUITE.erl:199
%% Counter = 114
%% bs_ensure_opt: true
%% Parameters
%%    A =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    C =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-5-'`(A, C) {
0:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    C => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    C
  _109 = bif:'>' A, C
  br _109, ^109, ^108

109:
  %% Result type:
  %%    'gt'
  ret `gt`

108:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    C => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    C
  _111 = bif:'<' A, C
  br _111, ^111, ^112

111:
  %% Result type:
  %%    'lt'
  ret `lt`

112:
  %% Result type:
  %%    'eq'
  ret `eq`
}

%% guard_SUITE.erl:198
%% Counter = 112
%% bs_ensure_opt: true
%% Parameters
%%    A =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
%%    B =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-4-'`(A, B) {
0:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    B => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    B
  _107 = bif:'>' A, B
  br _107, ^107, ^106

107:
  %% Result type:
  %%    'gt'
  ret `gt`

106:
  %% Argument types:
  %%    A => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %%    B => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    A, 
  %%    B
  _109 = bif:'<' A, B
  br _109, ^109, ^110

109:
  %% Result type:
  %%    'lt'
  ret `lt`

110:
  %% Result type:
  %%    'eq'
  ret `eq`
}

%% guard_SUITE.erl:196
%% Counter = 105
%% bs_ensure_opt: true
%% Parameters
%%    True =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-3-'`(True) {
0:
  %% Argument types:
  %%    True => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    True
  _104 = bif:'=:=' True, `false`
  br _104, ^104, ^103

104:
  %% Result type:
  %%    'ok'
  ret `ok`

103:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:195
%% Counter = 104
%% bs_ensure_opt: true
%% Parameters
%%    False =>
%%     atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
function `guard_SUITE`:`'-basic_not/1-fun-2-'`(False) {
0:
  %% Argument types:
  %%    False => atom() | list('a' | 'b' | 'c' | 1..7) | number() | {...} | other()
  %% Aliased:
  %%    False
  _103 = bif:'=:=' False, `false`
  br _103, ^103, ^102

103:
  %% Result type:
  %%    'ok'
  ret `ok`

102:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:194
%% Counter = 101
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-1-'`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% guard_SUITE.erl:193
%% Counter = 100
%% bs_ensure_opt: true
function `guard_SUITE`:`'-basic_not/1-fun-0-'`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}
