module beam_doc_SUITE.
exports [{all,0},
         {all_string_formats,1},
         {callback,1},
         {deprecated,1},
         {doc_with_file,1},
         {doc_with_file_error,1},
         {docformat,1},
         {docmodule_with_doc_attributes,1},
         {docs_from_ast,1},
         {end_per_group,2},
         {equiv,1},
         {export_all,1},
         {groups,0},
         {hide_moduledoc,1},
         {hide_moduledoc2,1},
         {init_per_group,2},
         {module_info,0},
         {module_info,1},
         {no_doc_attributes,1},
         {private_types,1},
         {singleton_doc,1},
         {singleton_docformat,1},
         {singleton_meta,1},
         {singleton_moduledoc,1},
         {skip_doc,1},
         {slogan,1},
         {spec,1},
         {spec_switch_order,1},
         {types_and_opaques,1},
         {user_defined_type,1},
         {warn_missing_doc,1}].
attributes [].

%% beam_doc_SUITE.erl:18
%% Counter = 4
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list('doc_with_file' | {'group', 'documentation_generation_tests'})
  ret `[{group,documentation_generation_tests},doc_with_file]`
}

%% beam_doc_SUITE.erl:21
%% Counter = 7
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`groups`() {
0:
  %% beam_doc_SUITE.erl:22
  %% Result type:
  %%    nonempty_list(atom())
  _0 = call (`documentation_generation_tests`/0)

  %% Unique:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    _0 => nonempty_list(atom())
  %% Unique:
  %%    _0
  _2 = put_tuple `documentation_generation_tests`, `[parallel]`, _0

  %% Argument types:
  %%    _2 => {'documentation_generation_tests', nonempty_list('parallel'), nonempty_list(atom())}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'documentation_generation_tests', nonempty_list('parallel'), nonempty_list(atom())})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% beam_doc_SUITE.erl:24
%% Counter = 4
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% beam_doc_SUITE.erl:27
%% Counter = 4
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% beam_doc_SUITE.erl:30
%% Counter = 4
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`documentation_generation_tests`() {
0:
  %% Result type:
  %%    nonempty_list(atom())
  ret `[singleton_moduledoc,singleton_doc,docmodule_with_doc_attributes,
  hide_moduledoc,hide_moduledoc2,docformat,singleton_docformat,singleton_meta,
  slogan,types_and_opaques,callback,private_types,export_all,equiv,spec,
  deprecated,warn_missing_doc,doc_with_file_error,all_string_formats,
  spec_switch_order,docs_from_ast,user_defined_type,skip_doc,
  no_doc_attributes]`
}

%% beam_doc_SUITE.erl:57
%% Counter = 65
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`singleton_moduledoc`(_0) {
0:
  %% beam_doc_SUITE.erl:59
  %% Aliased:
  %%    _0
  _15 = call (`default_compile_file`/2), _0, `"singletonmoduledoc"`

  %% Aliased:
  %%    _15
  _33 = succeeded:body _15
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _57 = is_tagged_tuple _15, `2`, `ok`
  br _57, ^54, ^35

54:
  %% Argument types:
  %%    _15 => {'ok', any()}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% beam_doc_SUITE.erl:63
  %% Aliased:
  %%    _16
  _18 = call (`code`:`get_doc`/1), _16

  %% Aliased:
  %%    _18
  _36 = succeeded:body _18
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _50 = is_tagged_tuple _18, `2`, `ok`
  br _50, ^47, ^38

47:
  %% Argument types:
  %%    _18 => {'ok', any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _44 = is_tagged_tuple _19, `7`, `docs_v1`
  br _44, ^41, ^38

41:
  %% Argument types:
  %%    _19 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _19
  _24 = get_tuple_element _19, `3`

  %% beam_doc_SUITE.erl:63
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _13 = bif:'=:=' _24, `<<"text/markdown">>`
  br _13, ^63, ^38

63:
  %% Argument types:
  %%    _19 => {'docs_v1', any(), any(), bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _19
  _23 = get_tuple_element _19, `4`

  %% beam_doc_SUITE.erl:63
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _14 = bif:'=:=' _23, `#{<<"en">> => <<"Moduledoc test module">>}`
  br _14, ^40, ^38

40:
  %% Result type:
  %%    'ok'
  ret `ok`

38:
  %% beam_doc_SUITE.erl:63
  %% Aliased:
  %%    _18
  _29 = match_fail `badmatch`, _18

  %% Unique:
  %%    _29
  _53 = succeeded:body _29
  br ^1

35:
  %% beam_doc_SUITE.erl:59
  %% Aliased:
  %%    _15
  _30 = match_fail `badmatch`, _15

  %% Unique:
  %%    _30
  _60 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% beam_doc_SUITE.erl:66
%% Counter = 107
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`singleton_doc`(_0) {
0:
  %% beam_doc_SUITE.erl:68
  %% Aliased:
  %%    _0
  _21 = call (`default_compile_file`/2), _0, `"singletondoc"`

  %% Aliased:
  %%    _21
  _53 = succeeded:body _21
  br _53, ^53, ^1

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _97 = is_tagged_tuple _21, `2`, `ok`
  br _97, ^94, ^55

94:
  %% Argument types:
  %%    _21 => {'ok', any()}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `1`

  %% beam_doc_SUITE.erl:74
  %% Aliased:
  %%    _22
  _24 = call (`code`:`get_doc`/1), _22

  %% Aliased:
  %%    _24
  _56 = succeeded:body _24
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _90 = is_tagged_tuple _24, `2`, `ok`
  br _90, ^87, ^58

87:
  %% Argument types:
  %%    _24 => {'ok', any()}
  %% Aliased:
  %%    _24
  _25 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _84 = is_tagged_tuple _25, `7`, `docs_v1`
  br _84, ^81, ^58

81:
  %% Argument types:
  %%    _25 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _25
  _32 = get_tuple_element _25, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _80 = bif:'=:=' _32, `1`
  br _80, ^79, ^58

79:
  %% Argument types:
  %%    _25 => {'docs_v1', 1, any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _25
  _29 = get_tuple_element _25, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _78 = bif:'=:=' _29, `none`
  br _78, ^77, ^58

77:
  %% Argument types:
  %%    _25 => {'docs_v1', 1, any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _25
  _27 = get_tuple_element _25, `6`

  %% Aliased:
  %%    _27
  _76 = is_nonempty_list _27
  br _76, ^76, ^58

76:
  %% Argument types:
  %%    _27 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _27
  _35 = get_hd _27

  %% Argument types:
  %%    _27 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _27
  _34 = get_tl _27

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _73 = bif:is_tuple _35
  br _73, ^73, ^58

73:
  %% Argument types:
  %%    _35 => {...}
  %% Aliased:
  %%    _35
  _74 = bif:tuple_size _35

  %% Argument types:
  %%    _74 => 0..16777215
  %% Unique:
  %%    _74
  _75 = bif:'=:=' _74, `5`
  br _75, ^72, ^58

72:
  %% Argument types:
  %%    _35 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _35
  _40 = get_tuple_element _35, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _71 = bif:'=:=' _40, `{function,foo,1}`
  br _71, ^71, ^58

71:
  %% Argument types:
  %%    _35 => {{'function', 'foo', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _35
  _38 = get_tuple_element _35, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _70 = bif:'=:=' _38, `[<<"foo(ok)">>]`
  br _70, ^70, ^58

70:
  %% Aliased:
  %%    _34
  _69 = is_nonempty_list _34
  br _69, ^69, ^58

69:
  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _42 = get_hd _34

  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _41 = get_tl _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _66 = bif:is_tuple _42
  br _66, ^66, ^58

66:
  %% Argument types:
  %%    _42 => {...}
  %% Aliased:
  %%    _42
  _67 = bif:tuple_size _42

  %% Argument types:
  %%    _67 => 0..16777215
  %% Unique:
  %%    _67
  _68 = bif:'=:=' _67, `5`
  br _68, ^65, ^58

65:
  %% Argument types:
  %%    _42 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _42
  _47 = get_tuple_element _42, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _64 = bif:'=:=' _47, `{function,main,0}`
  br _64, ^64, ^58

64:
  %% Argument types:
  %%    _42 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _42
  _45 = get_tuple_element _42, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _63 = bif:'=:=' _45, `[<<"main()">>]`
  br _63, ^63, ^58

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _62 = bif:'=:=' _41, `[]`
  br _62, ^62, ^58

62:
  %% Argument types:
  %%    _25 => {'docs_v1', 1, any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _25
  _30 = get_tuple_element _25, `3`

  %% beam_doc_SUITE.erl:72
  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _19 = bif:'=:=' _30, `<<"text/markdown">>`
  br _19, ^104, ^58

104:
  %% Argument types:
  %%    _35 => {{'function', 'foo', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _35
  _37 = get_tuple_element _35, `3`

  %% beam_doc_SUITE.erl:73
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _17 = bif:'=:=' _37, `#{<<"en">> => <<"Tests multi-clauses">>}`
  br _17, ^105, ^58

105:
  %% Argument types:
  %%    _42 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _42
  _44 = get_tuple_element _42, `3`

  %% beam_doc_SUITE.erl:74
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _18 = bif:'=:=' _44, `#{<<"en">> => <<"Doc test module">>}`
  br _18, ^61, ^58

61:
  %% Result type:
  %%    'ok'
  ret `ok`

58:
  %% beam_doc_SUITE.erl:72
  %% Aliased:
  %%    _24
  _49 = match_fail `badmatch`, _24

  %% Unique:
  %%    _49
  _93 = succeeded:body _49
  br ^1

55:
  %% beam_doc_SUITE.erl:68
  %% Aliased:
  %%    _21
  _50 = match_fail `badmatch`, _21

  %% Unique:
  %%    _50
  _100 = succeeded:body _50
  br ^1

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% beam_doc_SUITE.erl:77
%% Counter = 319
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`docmodule_with_doc_attributes`(_0) {
0:
  %% beam_doc_SUITE.erl:79
  %% Aliased:
  %%    _0
  _50 = call (`default_compile_file`/2), _0, `"docmodule_with_doc_attributes"`

  %% Aliased:
  %%    _50
  _178 = succeeded:body _50
  br _178, ^178, ^1

178:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _300 = is_tagged_tuple _50, `2`, `ok`
  br _300, ^297, ^180

297:
  %% Argument types:
  %%    _50 => {'ok', any()}
  %% Aliased:
  %%    _50
  _51 = get_tuple_element _50, `1`

  %% beam_doc_SUITE.erl:90
  %% Aliased:
  %%    _51
  _53 = call (`code`:`get_doc`/1), _51

  %% Aliased:
  %%    _53
  _181 = succeeded:body _53
  br _181, ^181, ^1

181:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _293 = is_tagged_tuple _53, `2`, `ok`
  br _293, ^290, ^183

290:
  %% Argument types:
  %%    _53 => {'ok', any()}
  %% Aliased:
  %%    _53
  _54 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _287 = is_tagged_tuple _54, `7`, `docs_v1`
  br _287, ^284, ^183

284:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _54
  _60 = get_tuple_element _54, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _283 = bif:'=:=' _60, `erlang`
  br _283, ^282, ^183

282:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), 'erlang', any(), any(), any(), any()}
  %% Aliased:
  %%    _54
  _57 = get_tuple_element _54, `5`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _281 = bif:is_map _57
  br _281, ^281, ^183

281:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), 'erlang', any(), any(), any(), any()}
  %% Aliased:
  %%    _54
  _59 = get_tuple_element _54, `3`

  %% beam_doc_SUITE.erl:86
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _34 = bif:'=:=' _59, `<<"text/markdown">>`
  br _34, ^310, ^183

310:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), 'erlang', bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _54
  _58 = get_tuple_element _54, `4`

  %% beam_doc_SUITE.erl:87
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _35 = bif:'=:=' _58, `#{<<"en">> => <<"Moduledoc test module">>}`
  br _35, ^185, ^183

185:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), 'erlang', bitstring(8), #{bitstring(16)=>bitstring(8)}, any(), any()}
  %% Aliased:
  %%    _54
  _56 = get_tuple_element _54, `6`

  %% Aliased:
  %%    _56
  _279 = is_nonempty_list _56
  br _279, ^279, ^187

279:
  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _65 = get_hd _56

  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _64 = get_tl _56

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _276 = bif:is_tuple _65
  br _276, ^276, ^187

276:
  %% Argument types:
  %%    _65 => {...}
  %% Aliased:
  %%    _65
  _277 = bif:tuple_size _65

  %% Argument types:
  %%    _277 => 0..16777215
  %% Unique:
  %%    _277
  _278 = bif:'=:=' _277, `5`
  br _278, ^275, ^187

275:
  %% Argument types:
  %%    _65 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _65
  _70 = get_tuple_element _65, `0`

  %% Argument types:
  %%    _65 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _65
  _69 = get_tuple_element _65, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _274 = bif:'=:=' _70, `{function,no_docs_multi,1}`
  br _274, ^274, ^187

274:
  %% Argument types:
  %%    _65 => {{'function', 'no_docs_multi', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _65
  _68 = get_tuple_element _65, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _273 = bif:'=:=' _68, `[<<"no_docs_multi/1">>]`
  br _273, ^273, ^187

273:
  %% Argument types:
  %%    _65 => {{'function', 'no_docs_multi', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _65
  _67 = get_tuple_element _65, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _272 = bif:'=:=' _67, `none`
  br _272, ^271, ^187

271:
  %% Argument types:
  %%    _65 => {{'function', 'no_docs_multi', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _65
  _66 = get_tuple_element _65, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _270 = bif:is_map _66
  br _270, ^270, ^187

270:
  %% Aliased:
  %%    _64
  _269 = is_nonempty_list _64
  br _269, ^269, ^187

269:
  %% Argument types:
  %%    _64 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _64
  _72 = get_hd _64

  %% Argument types:
  %%    _64 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _64
  _71 = get_tl _64

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _266 = bif:is_tuple _72
  br _266, ^266, ^187

266:
  %% Argument types:
  %%    _72 => {...}
  %% Aliased:
  %%    _72
  _267 = bif:tuple_size _72

  %% Argument types:
  %%    _267 => 0..16777215
  %% Unique:
  %%    _267
  _268 = bif:'=:=' _267, `5`
  br _268, ^265, ^187

265:
  %% Argument types:
  %%    _72 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _72
  _77 = get_tuple_element _72, `0`

  %% Argument types:
  %%    _72 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _72
  _76 = get_tuple_element _72, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _264 = bif:'=:=' _77, `{function,with_file_docs,0}`
  br _264, ^264, ^187

264:
  %% Argument types:
  %%    _72 => {{'function', 'with_file_docs', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _72
  _75 = get_tuple_element _72, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _263 = bif:'=:=' _75, `[<<"with_file_docs()">>]`
  br _263, ^263, ^187

263:
  %% Argument types:
  %%    _72 => {{'function', 'with_file_docs', 0}, any(), nonempty_list(bitstring(128)), any(), any()}
  %% Aliased:
  %%    _72
  _73 = get_tuple_element _72, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _262 = bif:is_map _73
  br _262, ^262, ^187

262:
  %% Aliased:
  %%    _71
  _261 = is_nonempty_list _71
  br _261, ^261, ^187

261:
  %% Argument types:
  %%    _71 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _71
  _79 = get_hd _71

  %% Argument types:
  %%    _71 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _71
  _78 = get_tl _71

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _258 = bif:is_tuple _79
  br _258, ^258, ^187

258:
  %% Argument types:
  %%    _79 => {...}
  %% Aliased:
  %%    _79
  _259 = bif:tuple_size _79

  %% Argument types:
  %%    _259 => 0..16777215
  %% Unique:
  %%    _259
  _260 = bif:'=:=' _259, `5`
  br _260, ^257, ^187

257:
  %% Argument types:
  %%    _79 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _79
  _84 = get_tuple_element _79, `0`

  %% Argument types:
  %%    _79 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _79
  _83 = get_tuple_element _79, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _256 = bif:'=:=' _84, `{function,no_docs,0}`
  br _256, ^256, ^187

256:
  %% Argument types:
  %%    _79 => {{'function', 'no_docs', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _79
  _82 = get_tuple_element _79, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _255 = bif:'=:=' _82, `[<<"no_docs()">>]`
  br _255, ^255, ^187

255:
  %% Argument types:
  %%    _79 => {{'function', 'no_docs', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _79
  _81 = get_tuple_element _79, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _254 = bif:'=:=' _81, `none`
  br _254, ^253, ^187

253:
  %% Argument types:
  %%    _79 => {{'function', 'no_docs', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _79
  _80 = get_tuple_element _79, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _252 = bif:is_map _80
  br _252, ^252, ^187

252:
  %% Aliased:
  %%    _78
  _251 = is_nonempty_list _78
  br _251, ^251, ^187

251:
  %% Argument types:
  %%    _78 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _78
  _86 = get_hd _78

  %% Argument types:
  %%    _78 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _78
  _85 = get_tl _78

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _248 = bif:is_tuple _86
  br _248, ^248, ^187

248:
  %% Argument types:
  %%    _86 => {...}
  %% Aliased:
  %%    _86
  _249 = bif:tuple_size _86

  %% Argument types:
  %%    _249 => 0..16777215
  %% Unique:
  %%    _249
  _250 = bif:'=:=' _249, `5`
  br _250, ^247, ^187

247:
  %% Argument types:
  %%    _86 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _86
  _91 = get_tuple_element _86, `0`

  %% Argument types:
  %%    _86 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _86
  _90 = get_tuple_element _86, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _246 = bif:'=:=' _91, `{function,ok,0}`
  br _246, ^246, ^187

246:
  %% Argument types:
  %%    _86 => {{'function', 'ok', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _86
  _89 = get_tuple_element _86, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _245 = bif:'=:=' _89, `[<<"ok()">>]`
  br _245, ^245, ^187

245:
  %% Argument types:
  %%    _86 => {{'function', 'ok', 0}, any(), nonempty_list(bitstring(32)), any(), any()}
  %% Aliased:
  %%    _86
  _88 = get_tuple_element _86, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _244 = bif:'=:=' _88, `none`
  br _244, ^243, ^187

243:
  %% Argument types:
  %%    _86 => {{'function', 'ok', 0}, any(), nonempty_list(bitstring(32)), 'none', any()}
  %% Aliased:
  %%    _86
  _87 = get_tuple_element _86, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _242 = bif:is_map _87
  br _242, ^242, ^187

242:
  %% Argument types:
  %%    _87 => map()
  %% Aliased:
  %%    _87
  _92 = get_map_element _87, `authors`

  %% Aliased:
  %%    _92
  _188 = succeeded:guard _92
  br _188, ^188, ^187

188:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _241 = bif:'=:=' _92, `"Someone"`
  br _241, ^241, ^187

241:
  %% Aliased:
  %%    _85
  _240 = is_nonempty_list _85
  br _240, ^240, ^187

240:
  %% Argument types:
  %%    _85 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _85
  _94 = get_hd _85

  %% Argument types:
  %%    _85 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _85
  _93 = get_tl _85

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _237 = bif:is_tuple _94
  br _237, ^237, ^187

237:
  %% Argument types:
  %%    _94 => {...}
  %% Aliased:
  %%    _94
  _238 = bif:tuple_size _94

  %% Argument types:
  %%    _238 => 0..16777215
  %% Unique:
  %%    _238
  _239 = bif:'=:=' _238, `5`
  br _239, ^236, ^187

236:
  %% Argument types:
  %%    _94 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _94
  _99 = get_tuple_element _94, `0`

  %% Argument types:
  %%    _94 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _94
  _98 = get_tuple_element _94, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _233 = is_tagged_tuple _99, `3`, `function`
  br _233, ^230, ^187

230:
  %% Argument types:
  %%    _99 => {'function', any(), any()}
  %% Aliased:
  %%    _99
  _101 = get_tuple_element _99, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _229 = bif:'=:=' _101, `main`
  br _229, ^228, ^187

228:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _227 = bif:'=:=' _93, `[]`
  br _227, ^227, ^187

227:
  %% Argument types:
  %%    _72 => {{'function', 'with_file_docs', 0}, any(), nonempty_list(bitstring(128)), any(), any()}
  %% Aliased:
  %%    _72
  _74 = get_tuple_element _72, `3`

  %% beam_doc_SUITE.erl:94
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _41 = bif:'=:=' _74, `#{<<"en">> => <<"# README\n\nThis is a test">>}`
  br _41, ^306, ^187

306:
  %% Argument types:
  %%    _94 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _94
  _96 = get_tuple_element _94, `3`

  %% beam_doc_SUITE.erl:97
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _42 = bif:'=:=' _96, `#{<<"en">> => <<"Doc test module">>}`
  br _42, ^190, ^187

190:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), 'erlang', bitstring(8), #{bitstring(16)=>bitstring(8)}, any(), any()}
  %% Aliased:
  %%    _54
  _61 = get_tuple_element _54, `1`

  %% beam_doc_SUITE.erl:99
  %% Aliased:
  %%    _61
  _104 = call (`erl_anno`:`line`/1), _61

  %% Aliased:
  %%    _104
  _191 = succeeded:body _104
  br _191, ^191, ^1

191:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _194 = bif:'=:=' _104, `5`
  br _194, ^192, ^193

192:
  %% beam_doc_SUITE.erl:100
  %% Aliased:
  %%    _98
  _112 = call (`erl_anno`:`line`/1), _98

  %% Aliased:
  %%    _112
  _196 = succeeded:body _112
  br _196, ^196, ^1

196:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _199 = bif:'=:=' _112, `10`
  br _199, ^197, ^198

197:
  %% beam_doc_SUITE.erl:101
  %% Aliased:
  %%    _90
  _121 = call (`erl_anno`:`line`/1), _90

  %% Aliased:
  %%    _121
  _201 = succeeded:body _121
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _204 = bif:'=:=' _121, `18`
  br _204, ^202, ^203

202:
  %% beam_doc_SUITE.erl:102
  %% Aliased:
  %%    _83
  _130 = call (`erl_anno`:`line`/1), _83

  %% Aliased:
  %%    _130
  _206 = succeeded:body _130
  br _206, ^206, ^1

206:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _209 = bif:'=:=' _130, `21`
  br _209, ^207, ^208

207:
  %% beam_doc_SUITE.erl:103
  %% Aliased:
  %%    _76
  _139 = call (`erl_anno`:`line`/1), _76

  %% Aliased:
  %%    _139
  _211 = succeeded:body _139
  br _211, ^211, ^1

211:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _214 = bif:'=:=' _139, `1`
  br _214, ^212, ^213

212:
  %% beam_doc_SUITE.erl:104
  %% Aliased:
  %%    _76
  _25 = call (`erl_anno`:`file`/1), _76

  %% Aliased:
  %%    _25
  _216 = succeeded:body _25
  br _216, ^216, ^1

216:
  %% beam_doc_SUITE.erl:104
  %% Aliased:
  %%    _25
  _148 = call (`filename`:`basename`/1), _25

  %% Aliased:
  %%    _148
  _217 = succeeded:body _148
  br _217, ^217, ^1

217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _220 = bif:'=:=' _148, `"README"`
  br _220, ^218, ^219

218:
  %% beam_doc_SUITE.erl:105
  %% Aliased:
  %%    _69
  _157 = call (`erl_anno`:`line`/1), _69

  %% Aliased:
  %%    _157
  _222 = succeeded:body _157
  br _222, ^222, ^1

222:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _225 = bif:'=:=' _157, `28`
  br _225, ^223, ^224

223:
  %% Result type:
  %%    'ok'
  ret `ok`

224:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _159 = put_tuple `value`, _157

  %% Argument types:
  %%    _159 => {'value', any()}
  %% Unique:
  %%    _159
  _160 = put_list _159, `[]`

  %% Argument types:
  %%    _160 => nonempty_list({'value', any()})
  %% Unique:
  %%    _160
  _161 = put_list `{expected,28}`, _160

  %% Argument types:
  %%    _161 => nonempty_list({'expected', 28} | {'value', any()})
  %% Unique:
  %%    _161
  _162 = put_list `{expression,"erl_anno : line ( NoDocsMultiAnno )"}`, _161

  %% Argument types:
  %%    _162 => nonempty_list({'expected', 28} | {'expression', nonempty_list(32..117)} | {'value', any()})
  %% Unique:
  %%    _162
  _163 = put_list `{line,105}`, _162

  %% Argument types:
  %%    _163 => nonempty_list({'expected', 28} | {'expression', nonempty_list(32..117)} | {'line', 105} | {'value', any()})
  %% Unique:
  %%    _163
  _164 = put_list `{module,beam_doc_SUITE}`, _163

  %% Argument types:
  %%    _164 => nonempty_list({'expected', 28} | {'expression', nonempty_list(32..117)} | {'line', 105} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _164
  _165 = put_tuple `assertEqual`, _164

  %% beam_doc_SUITE.erl:105
  %% Unique:
  %%    _165
  _172 = call (`erlang`:`error`/1), _165

  %% Aliased:
  %%    _172
  _226 = succeeded:body _172
  br ^1

219:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _150 = put_tuple `value`, _148

  %% Argument types:
  %%    _150 => {'value', any()}
  %% Unique:
  %%    _150
  _151 = put_list _150, `[]`

  %% Argument types:
  %%    _151 => nonempty_list({'value', any()})
  %% Unique:
  %%    _151
  _152 = put_list `{expected,"README"}`, _151

  %% Argument types:
  %%    _152 => nonempty_list({'expected', nonempty_list(65..82)} | {'value', any()})
  %% Unique:
  %%    _152
  _153 = put_list `{expression,"filename : basename ( erl_anno : file ( FileDocsAnno ) )"}`, _152

  %% Argument types:
  %%    _153 => nonempty_list({'expected', nonempty_list(65..82)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _153
  _154 = put_list `{line,104}`, _153

  %% Argument types:
  %%    _154 => nonempty_list({'expected', nonempty_list(65..82)} | {'expression', nonempty_list(32..115)} | {'line', 104} | {'value', any()})
  %% Unique:
  %%    _154
  _155 = put_list `{module,beam_doc_SUITE}`, _154

  %% Argument types:
  %%    _155 => nonempty_list({'expected', nonempty_list(65..82)} | {'expression', nonempty_list(32..115)} | {'line', 104} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _155
  _156 = put_tuple `assertEqual`, _155

  %% beam_doc_SUITE.erl:104
  %% Unique:
  %%    _156
  _171 = call (`erlang`:`error`/1), _156

  %% Aliased:
  %%    _171
  _221 = succeeded:body _171
  br ^1

213:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _141 = put_tuple `value`, _139

  %% Argument types:
  %%    _141 => {'value', any()}
  %% Unique:
  %%    _141
  _142 = put_list _141, `[]`

  %% Argument types:
  %%    _142 => nonempty_list({'value', any()})
  %% Unique:
  %%    _142
  _143 = put_list `{expected,1}`, _142

  %% Argument types:
  %%    _143 => nonempty_list({'expected', 1} | {'value', any()})
  %% Unique:
  %%    _143
  _144 = put_list `{expression,"erl_anno : line ( FileDocsAnno )"}`, _143

  %% Argument types:
  %%    _144 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _144
  _145 = put_list `{line,103}`, _144

  %% Argument types:
  %%    _145 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..115)} | {'line', 103} | {'value', any()})
  %% Unique:
  %%    _145
  _146 = put_list `{module,beam_doc_SUITE}`, _145

  %% Argument types:
  %%    _146 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..115)} | {'line', 103} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _146
  _147 = put_tuple `assertEqual`, _146

  %% beam_doc_SUITE.erl:103
  %% Unique:
  %%    _147
  _170 = call (`erlang`:`error`/1), _147

  %% Aliased:
  %%    _170
  _215 = succeeded:body _170
  br ^1

208:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _132 = put_tuple `value`, _130

  %% Argument types:
  %%    _132 => {'value', any()}
  %% Unique:
  %%    _132
  _133 = put_list _132, `[]`

  %% Argument types:
  %%    _133 => nonempty_list({'value', any()})
  %% Unique:
  %%    _133
  _134 = put_list `{expected,21}`, _133

  %% Argument types:
  %%    _134 => nonempty_list({'expected', 21} | {'value', any()})
  %% Unique:
  %%    _134
  _135 = put_list `{expression,"erl_anno : line ( NoDocsAnno )"}`, _134

  %% Argument types:
  %%    _135 => nonempty_list({'expected', 21} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _135
  _136 = put_list `{line,102}`, _135

  %% Argument types:
  %%    _136 => nonempty_list({'expected', 21} | {'expression', nonempty_list(32..115)} | {'line', 102} | {'value', any()})
  %% Unique:
  %%    _136
  _137 = put_list `{module,beam_doc_SUITE}`, _136

  %% Argument types:
  %%    _137 => nonempty_list({'expected', 21} | {'expression', nonempty_list(32..115)} | {'line', 102} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _137
  _138 = put_tuple `assertEqual`, _137

  %% beam_doc_SUITE.erl:102
  %% Unique:
  %%    _138
  _169 = call (`erlang`:`error`/1), _138

  %% Aliased:
  %%    _169
  _210 = succeeded:body _169
  br ^1

203:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _123 = put_tuple `value`, _121

  %% Argument types:
  %%    _123 => {'value', any()}
  %% Unique:
  %%    _123
  _124 = put_list _123, `[]`

  %% Argument types:
  %%    _124 => nonempty_list({'value', any()})
  %% Unique:
  %%    _124
  _125 = put_list `{expected,18}`, _124

  %% Argument types:
  %%    _125 => nonempty_list({'expected', 18} | {'value', any()})
  %% Unique:
  %%    _125
  _126 = put_list `{expression,"erl_anno : line ( OkAnno )"}`, _125

  %% Argument types:
  %%    _126 => nonempty_list({'expected', 18} | {'expression', nonempty_list(32..114)} | {'value', any()})
  %% Unique:
  %%    _126
  _127 = put_list `{line,101}`, _126

  %% Argument types:
  %%    _127 => nonempty_list({'expected', 18} | {'expression', nonempty_list(32..114)} | {'line', 101} | {'value', any()})
  %% Unique:
  %%    _127
  _128 = put_list `{module,beam_doc_SUITE}`, _127

  %% Argument types:
  %%    _128 => nonempty_list({'expected', 18} | {'expression', nonempty_list(32..114)} | {'line', 101} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _128
  _129 = put_tuple `assertEqual`, _128

  %% beam_doc_SUITE.erl:101
  %% Unique:
  %%    _129
  _168 = call (`erlang`:`error`/1), _129

  %% Aliased:
  %%    _168
  _205 = succeeded:body _168
  br ^1

198:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _114 = put_tuple `value`, _112

  %% Argument types:
  %%    _114 => {'value', any()}
  %% Unique:
  %%    _114
  _115 = put_list _114, `[]`

  %% Argument types:
  %%    _115 => nonempty_list({'value', any()})
  %% Unique:
  %%    _115
  _116 = put_list `{expected,10}`, _115

  %% Argument types:
  %%    _116 => nonempty_list({'expected', 10} | {'value', any()})
  %% Unique:
  %%    _116
  _117 = put_list `{expression,"erl_anno : line ( MainAnno )"}`, _116

  %% Argument types:
  %%    _117 => nonempty_list({'expected', 10} | {'expression', nonempty_list(32..114)} | {'value', any()})
  %% Unique:
  %%    _117
  _118 = put_list `{line,100}`, _117

  %% Argument types:
  %%    _118 => nonempty_list({'expected', 10} | {'expression', nonempty_list(32..114)} | {'line', 100} | {'value', any()})
  %% Unique:
  %%    _118
  _119 = put_list `{module,beam_doc_SUITE}`, _118

  %% Argument types:
  %%    _119 => nonempty_list({'expected', 10} | {'expression', nonempty_list(32..114)} | {'line', 100} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _119
  _120 = put_tuple `assertEqual`, _119

  %% beam_doc_SUITE.erl:100
  %% Unique:
  %%    _120
  _167 = call (`erlang`:`error`/1), _120

  %% Aliased:
  %%    _167
  _200 = succeeded:body _167
  br ^1

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _105 = put_tuple `value`, _104

  %% Argument types:
  %%    _105 => {'value', any()}
  %% Unique:
  %%    _105
  _106 = put_list _105, `[]`

  %% Argument types:
  %%    _106 => nonempty_list({'value', any()})
  %% Unique:
  %%    _106
  _107 = put_list `{expected,5}`, _106

  %% Argument types:
  %%    _107 => nonempty_list({'expected', 5} | {'value', any()})
  %% Unique:
  %%    _107
  _108 = put_list `{expression,"erl_anno : line ( ModuleAnno )"}`, _107

  %% Argument types:
  %%    _108 => nonempty_list({'expected', 5} | {'expression', nonempty_list(32..117)} | {'value', any()})
  %% Unique:
  %%    _108
  _109 = put_list `{line,99}`, _108

  %% Argument types:
  %%    _109 => nonempty_list({'expected', 5} | {'expression', nonempty_list(32..117)} | {'line', 99} | {'value', any()})
  %% Unique:
  %%    _109
  _110 = put_list `{module,beam_doc_SUITE}`, _109

  %% Argument types:
  %%    _110 => nonempty_list({'expected', 5} | {'expression', nonempty_list(32..117)} | {'line', 99} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _110
  _111 = put_tuple `assertEqual`, _110

  %% beam_doc_SUITE.erl:99
  %% Unique:
  %%    _111
  _166 = call (`erlang`:`error`/1), _111

  %% Aliased:
  %%    _166
  _195 = succeeded:body _166
  br ^1

187:
  %% beam_doc_SUITE.erl:93
  %% Aliased:
  %%    _56
  _173 = match_fail `badmatch`, _56

  %% Unique:
  %%    _173
  _280 = succeeded:body _173
  br ^1

183:
  %% beam_doc_SUITE.erl:84
  %% Aliased:
  %%    _53
  _174 = match_fail `badmatch`, _53

  %% Unique:
  %%    _174
  _296 = succeeded:body _174
  br ^1

180:
  %% beam_doc_SUITE.erl:79
  %% Aliased:
  %%    _50
  _175 = match_fail `badmatch`, _50

  %% Unique:
  %%    _175
  _303 = succeeded:body _175
  br ^1

1:
  _176 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _176
}

%% beam_doc_SUITE.erl:109
%% Counter = 73
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`hide_moduledoc`(_0) {
0:
  %% beam_doc_SUITE.erl:110
  %% Aliased:
  %%    _0
  _8 = call (`default_compile_file`/2), _0, `"hide_moduledoc"`

  %% Aliased:
  %%    _8
  _33 = succeeded:body _8
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _69 = is_tagged_tuple _8, `2`, `ok`
  br _69, ^66, ^35

66:
  %% Argument types:
  %%    _8 => {'ok', any()}
  %% Aliased:
  %%    _8
  _9 = get_tuple_element _8, `1`

  %% beam_doc_SUITE.erl:113
  %% Aliased:
  %%    _9
  _11 = call (`code`:`get_doc`/1), _9

  %% Aliased:
  %%    _11
  _36 = succeeded:body _11
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _62 = is_tagged_tuple _11, `2`, `ok`
  br _62, ^59, ^38

59:
  %% Argument types:
  %%    _11 => {'ok', any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _56 = is_tagged_tuple _12, `7`, `docs_v1`
  br _56, ^53, ^38

53:
  %% Argument types:
  %%    _12 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _12
  _16 = get_tuple_element _12, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _52 = bif:'=:=' _16, `hidden`
  br _52, ^51, ^38

51:
  %% Argument types:
  %%    _12 => {'docs_v1', any(), any(), any(), 'hidden', any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `6`

  %% Aliased:
  %%    _14
  _50 = is_nonempty_list _14
  br _50, ^50, ^38

50:
  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _22 = get_hd _14

  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _21 = get_tl _14

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _47 = bif:is_tuple _22
  br _47, ^47, ^38

47:
  %% Argument types:
  %%    _22 => {...}
  %% Aliased:
  %%    _22
  _48 = bif:tuple_size _22

  %% Argument types:
  %%    _48 => 0..16777215
  %% Unique:
  %%    _48
  _49 = bif:'=:=' _48, `5`
  br _49, ^46, ^38

46:
  %% Argument types:
  %%    _22 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _22
  _27 = get_tuple_element _22, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _45 = bif:'=:=' _27, `{function,main,0}`
  br _45, ^45, ^38

45:
  %% Argument types:
  %%    _22 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _22
  _25 = get_tuple_element _22, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _44 = bif:'=:=' _25, `[<<"main()">>]`
  br _44, ^44, ^38

44:
  %% Argument types:
  %%    _22 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _22
  _24 = get_tuple_element _22, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _43 = bif:is_map _24
  br _43, ^43, ^38

43:
  %% Argument types:
  %%    _24 => map()
  %% Aliased:
  %%    _24
  _28 = get_map_element _24, `<<"en">>`

  %% Aliased:
  %%    _28
  _39 = succeeded:guard _28
  br _39, ^39, ^38

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _42 = bif:'=:=' _28, `<<"Doc test module">>`
  br _42, ^42, ^38

42:
  %% Argument types:
  %%    _22 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _22
  _23 = get_tuple_element _22, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _41 = bif:is_map _23
  br _41, ^41, ^38

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _40 = bif:'=:=' _21, `[]`
  br _40, ^40, ^38

40:
  %% Result type:
  %%    'ok'
  ret `ok`

38:
  %% beam_doc_SUITE.erl:111
  %% Aliased:
  %%    _11
  _29 = match_fail `badmatch`, _11

  %% Unique:
  %%    _29
  _65 = succeeded:body _29
  br ^1

35:
  %% beam_doc_SUITE.erl:110
  %% Aliased:
  %%    _8
  _30 = match_fail `badmatch`, _8

  %% Unique:
  %%    _30
  _72 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% beam_doc_SUITE.erl:117
%% Counter = 90
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`hide_moduledoc2`(_0) {
0:
  %% beam_doc_SUITE.erl:119
  %% Aliased:
  %%    _0
  _9 = call (`default_compile_file`/2), _0, `"hide_moduledoc2"`

  %% Aliased:
  %%    _9
  _40 = succeeded:body _9
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _86 = is_tagged_tuple _9, `2`, `ok`
  br _86, ^83, ^42

83:
  %% Argument types:
  %%    _9 => {'ok', any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% beam_doc_SUITE.erl:122
  %% Aliased:
  %%    _10
  _12 = call (`code`:`get_doc`/1), _10

  %% Aliased:
  %%    _12
  _43 = succeeded:body _12
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _79 = is_tagged_tuple _12, `2`, `ok`
  br _79, ^76, ^45

76:
  %% Argument types:
  %%    _12 => {'ok', any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _73 = is_tagged_tuple _13, `7`, `docs_v1`
  br _73, ^70, ^45

70:
  %% Argument types:
  %%    _13 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _13
  _17 = get_tuple_element _13, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _69 = bif:'=:=' _17, `hidden`
  br _69, ^68, ^45

68:
  %% Argument types:
  %%    _13 => {'docs_v1', any(), any(), any(), 'hidden', any(), any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `6`

  %% Aliased:
  %%    _15
  _67 = is_nonempty_list _15
  br _67, ^67, ^45

67:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _23 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _22 = get_tl _15

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _64 = bif:is_tuple _23
  br _64, ^64, ^45

64:
  %% Argument types:
  %%    _23 => {...}
  %% Aliased:
  %%    _23
  _65 = bif:tuple_size _23

  %% Argument types:
  %%    _65 => 0..16777215
  %% Unique:
  %%    _65
  _66 = bif:'=:=' _65, `5`
  br _66, ^63, ^45

63:
  %% Argument types:
  %%    _23 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _23
  _28 = get_tuple_element _23, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _62 = bif:'=:=' _28, `{function,handle_call,1}`
  br _62, ^62, ^45

62:
  %% Argument types:
  %%    _23 => {{'function', 'handle_call', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _23
  _27 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _61 = bif:'=:=' _27, `{16,2}`
  br _61, ^61, ^45

61:
  %% Argument types:
  %%    _23 => {{'function', 'handle_call', 1}, {16, 2}, any(), any(), any()}
  %% Aliased:
  %%    _23
  _26 = get_tuple_element _23, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _60 = bif:'=:=' _26, `[<<"handle_call/1">>]`
  br _60, ^60, ^45

60:
  %% Argument types:
  %%    _23 => {{'function', 'handle_call', 1}, {16, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _23
  _25 = get_tuple_element _23, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _59 = bif:'=:=' _25, `hidden`
  br _59, ^58, ^45

58:
  %% Argument types:
  %%    _23 => {{'function', 'handle_call', 1}, {16, 2}, nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _57 = bif:is_map _24
  br _57, ^57, ^45

57:
  %% Aliased:
  %%    _22
  _56 = is_nonempty_list _22
  br _56, ^56, ^45

56:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _30 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _29 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _53 = bif:is_tuple _30
  br _53, ^53, ^45

53:
  %% Argument types:
  %%    _30 => {...}
  %% Aliased:
  %%    _30
  _54 = bif:tuple_size _30

  %% Argument types:
  %%    _54 => 0..16777215
  %% Unique:
  %%    _54
  _55 = bif:'=:=' _54, `5`
  br _55, ^52, ^45

52:
  %% Argument types:
  %%    _30 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _30
  _35 = get_tuple_element _30, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _51 = bif:'=:=' _35, `{function,main,0}`
  br _51, ^51, ^45

51:
  %% Argument types:
  %%    _30 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _30
  _33 = get_tuple_element _30, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _50 = bif:'=:=' _33, `[<<"main()">>]`
  br _50, ^50, ^45

50:
  %% Argument types:
  %%    _30 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _30
  _32 = get_tuple_element _30, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _49 = bif:'=:=' _32, `hidden`
  br _49, ^48, ^45

48:
  %% Argument types:
  %%    _30 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), 'hidden', any()}
  %% Aliased:
  %%    _30
  _31 = get_tuple_element _30, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _47 = bif:is_map _31
  br _47, ^47, ^45

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _46 = bif:'=:=' _29, `[]`
  br _46, ^46, ^45

46:
  %% Result type:
  %%    'ok'
  ret `ok`

45:
  %% beam_doc_SUITE.erl:120
  %% Aliased:
  %%    _12
  _36 = match_fail `badmatch`, _12

  %% Unique:
  %%    _36
  _82 = succeeded:body _36
  br ^1

42:
  %% beam_doc_SUITE.erl:119
  %% Aliased:
  %%    _9
  _37 = match_fail `badmatch`, _9

  %% Unique:
  %%    _37
  _89 = succeeded:body _37
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38
}

%% beam_doc_SUITE.erl:125
%% Counter = 98
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`docformat`(_0) {
0:
  %% beam_doc_SUITE.erl:126
  %% Aliased:
  %%    _0
  _20 = call (`default_compile_file`/2), _0, `"docformat"`

  %% Aliased:
  %%    _20
  _48 = succeeded:body _20
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _88 = is_tagged_tuple _20, `2`, `ok`
  br _88, ^85, ^50

85:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% beam_doc_SUITE.erl:134
  %% Aliased:
  %%    _21
  _23 = call (`code`:`get_doc`/1), _21

  %% Aliased:
  %%    _23
  _51 = succeeded:body _23
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _81 = is_tagged_tuple _23, `2`, `ok`
  br _81, ^78, ^53

78:
  %% Argument types:
  %%    _23 => {'ok', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _75 = is_tagged_tuple _24, `7`, `docs_v1`
  br _75, ^72, ^53

72:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _24
  _29 = get_tuple_element _24, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _71 = bif:'=:=' _29, `<<"text/asciidoc">>`
  br _71, ^71, ^53

71:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `6`

  %% Aliased:
  %%    _26
  _70 = is_nonempty_list _26
  br _70, ^70, ^53

70:
  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _34 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _33 = get_tl _26

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _67 = bif:is_tuple _34
  br _67, ^67, ^53

67:
  %% Argument types:
  %%    _34 => {...}
  %% Aliased:
  %%    _34
  _68 = bif:tuple_size _34

  %% Argument types:
  %%    _68 => 0..16777215
  %% Unique:
  %%    _68
  _69 = bif:'=:=' _68, `5`
  br _69, ^66, ^53

66:
  %% Argument types:
  %%    _34 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _39 = get_tuple_element _34, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _63 = is_tagged_tuple _39, `3`, `function`
  br _63, ^60, ^53

60:
  %% Argument types:
  %%    _39 => {'function', any(), any()}
  %% Aliased:
  %%    _39
  _41 = get_tuple_element _39, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _59 = bif:'=:=' _41, `main`
  br _59, ^58, ^53

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _57 = bif:'=:=' _33, `[]`
  br _57, ^57, ^53

57:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _24
  _28 = get_tuple_element _24, `4`

  %% beam_doc_SUITE.erl:133
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _18 = bif:'=:=' _28, `#{<<"en">> => <<"Moduledoc test module">>}`
  br _18, ^95, ^53

95:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), bitstring(8), #{bitstring(16)=>bitstring(8)}, any(), any()}
  %% Aliased:
  %%    _24
  _27 = get_tuple_element _24, `5`

  %% beam_doc_SUITE.erl:133
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _16 = bif:'=:=' _27, `#{deprecated => "Use something else",format => "text/asciidoc",
   otp_doc_vsn => {1,0,0},
   since => "1.0"}`
  br _16, ^96, ^53

96:
  %% Argument types:
  %%    _34 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _36 = get_tuple_element _34, `3`

  %% beam_doc_SUITE.erl:134
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _17 = bif:'=:=' _36, `#{<<"en">> => <<"Doc test module">>}`
  br _17, ^56, ^53

56:
  %% Result type:
  %%    'ok'
  ret `ok`

53:
  %% beam_doc_SUITE.erl:133
  %% Aliased:
  %%    _23
  _44 = match_fail `badmatch`, _23

  %% Unique:
  %%    _44
  _84 = succeeded:body _44
  br ^1

50:
  %% beam_doc_SUITE.erl:126
  %% Aliased:
  %%    _20
  _45 = match_fail `badmatch`, _20

  %% Unique:
  %%    _45
  _91 = succeeded:body _45
  br ^1

1:
  _46 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _46
}

%% beam_doc_SUITE.erl:137
%% Counter = 94
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`singleton_docformat`(_0) {
0:
  %% beam_doc_SUITE.erl:138
  %% Aliased:
  %%    _0
  _20 = call (`default_compile_file`/2), _0, `"singleton_docformat"`

  %% Aliased:
  %%    _20
  _45 = succeeded:body _20
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _82 = is_tagged_tuple _20, `2`, `ok`
  br _82, ^79, ^47

79:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% beam_doc_SUITE.erl:147
  %% Aliased:
  %%    _21
  _23 = call (`code`:`get_doc`/1), _21

  %% Aliased:
  %%    _23
  _48 = succeeded:body _23
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _75 = is_tagged_tuple _23, `2`, `ok`
  br _75, ^72, ^50

72:
  %% Argument types:
  %%    _23 => {'ok', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _69 = is_tagged_tuple _24, `7`, `docs_v1`
  br _69, ^66, ^50

66:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _24
  _30 = get_tuple_element _24, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _65 = bif:'=:=' _30, `erlang`
  br _65, ^64, ^50

64:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), 'erlang', any(), any(), any(), any()}
  %% Aliased:
  %%    _24
  _29 = get_tuple_element _24, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _63 = bif:'=:=' _29, `<<"text/asciidoc">>`
  br _63, ^63, ^50

63:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), 'erlang', bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `6`

  %% Aliased:
  %%    _26
  _62 = is_nonempty_list _26
  br _62, ^62, ^50

62:
  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _34 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _33 = get_tl _26

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _59 = bif:is_tuple _34
  br _59, ^59, ^50

59:
  %% Argument types:
  %%    _34 => {...}
  %% Aliased:
  %%    _34
  _60 = bif:tuple_size _34

  %% Argument types:
  %%    _60 => 0..16777215
  %% Unique:
  %%    _60
  _61 = bif:'=:=' _60, `5`
  br _61, ^58, ^50

58:
  %% Argument types:
  %%    _34 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _39 = get_tuple_element _34, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _57 = bif:'=:=' _39, `{function,main,0}`
  br _57, ^57, ^50

57:
  %% Argument types:
  %%    _34 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _37 = get_tuple_element _34, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _56 = bif:'=:=' _37, `[<<"main()">>]`
  br _56, ^56, ^50

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _55 = bif:'=:=' _33, `[]`
  br _55, ^55, ^50

55:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), 'erlang', bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _24
  _28 = get_tuple_element _24, `4`

  %% beam_doc_SUITE.erl:146
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _18 = bif:'=:=' _28, `#{<<"en">> => <<"Moduledoc test module">>}`
  br _18, ^90, ^50

90:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), 'erlang', bitstring(8), #{bitstring(16)=>bitstring(8)}, any(), any()}
  %% Aliased:
  %%    _24
  _27 = get_tuple_element _24, `5`

  %% beam_doc_SUITE.erl:146
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _16 = bif:'=:=' _27, `#{deprecated => <<"Use something else">>,format => <<"text/asciidoc">>,
   otp_doc_vsn => {1,0,0},
   since => <<"1.0">>}`
  br _16, ^91, ^50

91:
  %% Argument types:
  %%    _34 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _34
  _36 = get_tuple_element _34, `3`

  %% beam_doc_SUITE.erl:147
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _14 = bif:'=:=' _36, `#{<<"en">> => <<"Doc test module\n\nMore info here">>}`
  br _14, ^92, ^50

92:
  %% Argument types:
  %%    _34 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), #{bitstring(16)=>bitstring(8)}, any()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `4`

  %% beam_doc_SUITE.erl:147
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _15 = bif:'=:=' _35, `#{authors => [<<"Beep Bop">>],equiv => <<"main/3">>,since => <<"1.0">>}`
  br _15, ^54, ^50

54:
  %% Result type:
  %%    'ok'
  ret `ok`

50:
  %% beam_doc_SUITE.erl:146
  %% Aliased:
  %%    _23
  _41 = match_fail `badmatch`, _23

  %% Unique:
  %%    _41
  _78 = succeeded:body _41
  br ^1

47:
  %% beam_doc_SUITE.erl:138
  %% Aliased:
  %%    _20
  _42 = match_fail `badmatch`, _20

  %% Unique:
  %%    _42
  _85 = succeeded:body _42
  br ^1

1:
  _43 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _43
}

%% beam_doc_SUITE.erl:150
%% Counter = 111
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`singleton_meta`(_0) {
0:
  %% beam_doc_SUITE.erl:152
  %% Aliased:
  %%    _0
  _14 = call (`default_compile_file`/2), _0, `"singleton_meta"`

  %% Aliased:
  %%    _14
  _49 = succeeded:body _14
  br _49, ^49, ^1

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _103 = is_tagged_tuple _14, `2`, `ok`
  br _103, ^100, ^51

100:
  %% Argument types:
  %%    _14 => {'ok', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% beam_doc_SUITE.erl:159
  %% Aliased:
  %%    _15
  _17 = call (`code`:`get_doc`/1), _15

  %% Aliased:
  %%    _17
  _52 = succeeded:body _17
  br _52, ^52, ^1

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _96 = is_tagged_tuple _17, `2`, `ok`
  br _96, ^93, ^54

93:
  %% Argument types:
  %%    _17 => {'ok', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _90 = is_tagged_tuple _18, `7`, `docs_v1`
  br _90, ^87, ^54

87:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _18
  _24 = get_tuple_element _18, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _86 = bif:'=:=' _24, `erlang`
  br _86, ^85, ^54

85:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), 'erlang', any(), any(), any(), any()}
  %% Aliased:
  %%    _18
  _23 = get_tuple_element _18, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _84 = bif:'=:=' _23, `<<"text/markdown">>`
  br _84, ^84, ^54

84:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), 'erlang', bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _18
  _22 = get_tuple_element _18, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _83 = bif:'=:=' _22, `none`
  br _83, ^82, ^54

82:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), 'erlang', bitstring(8), 'none', any(), any()}
  %% Aliased:
  %%    _18
  _21 = get_tuple_element _18, `5`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _81 = bif:is_map _21
  br _81, ^81, ^54

81:
  %% Argument types:
  %%    _21 => map()
  %% Aliased:
  %%    _21
  _27 = get_map_element _21, `since`

  %% Aliased:
  %%    _27
  _55 = succeeded:guard _27
  br _55, ^55, ^54

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _80 = bif:'=:=' _27, `<<"1.0">>`
  br _80, ^80, ^54

80:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), 'erlang', bitstring(8), 'none', any(), any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `6`

  %% Aliased:
  %%    _20
  _79 = is_nonempty_list _20
  br _79, ^79, ^54

79:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _29 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _28 = get_tl _20

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _76 = bif:is_tuple _29
  br _76, ^76, ^54

76:
  %% Argument types:
  %%    _29 => {...}
  %% Aliased:
  %%    _29
  _77 = bif:tuple_size _29

  %% Argument types:
  %%    _77 => 0..16777215
  %% Unique:
  %%    _77
  _78 = bif:'=:=' _77, `5`
  br _78, ^75, ^54

75:
  %% Argument types:
  %%    _29 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _29
  _34 = get_tuple_element _29, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _74 = bif:'=:=' _34, `{function,main1,0}`
  br _74, ^74, ^54

74:
  %% Argument types:
  %%    _29 => {{'function', 'main1', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _29
  _32 = get_tuple_element _29, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _73 = bif:'=:=' _32, `[<<"main1()">>]`
  br _73, ^73, ^54

73:
  %% Argument types:
  %%    _29 => {{'function', 'main1', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _29
  _30 = get_tuple_element _29, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _72 = bif:is_map _30
  br _72, ^72, ^54

72:
  %% Argument types:
  %%    _30 => map()
  %% Aliased:
  %%    _30
  _36 = get_map_element _30, `equiv`

  %% Aliased:
  %%    _36
  _56 = succeeded:guard _36
  br _56, ^56, ^54

56:
  %% Argument types:
  %%    _30 => map()
  %% Aliased:
  %%    _30
  _35 = get_map_element _30, `since`

  %% Aliased:
  %%    _35
  _57 = succeeded:guard _35
  br _57, ^57, ^54

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _71 = bif:'=:=' _36, `<<"main(_)">>`
  br _71, ^71, ^54

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _70 = bif:'=:=' _35, `<<"1.1">>`
  br _70, ^70, ^54

70:
  %% Aliased:
  %%    _28
  _69 = is_nonempty_list _28
  br _69, ^69, ^54

69:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _38 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _37 = get_tl _28

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _66 = bif:is_tuple _38
  br _66, ^66, ^54

66:
  %% Argument types:
  %%    _38 => {...}
  %% Aliased:
  %%    _38
  _67 = bif:tuple_size _38

  %% Argument types:
  %%    _67 => 0..16777215
  %% Unique:
  %%    _67
  _68 = bif:'=:=' _67, `5`
  br _68, ^65, ^54

65:
  %% Argument types:
  %%    _38 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _38
  _43 = get_tuple_element _38, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _64 = bif:'=:=' _43, `{function,main,0}`
  br _64, ^64, ^54

64:
  %% Argument types:
  %%    _38 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _38
  _41 = get_tuple_element _38, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _63 = bif:'=:=' _41, `[<<"main()">>]`
  br _63, ^63, ^54

63:
  %% Argument types:
  %%    _38 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _38
  _40 = get_tuple_element _38, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _62 = bif:'=:=' _40, `none`
  br _62, ^61, ^54

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _60 = bif:'=:=' _37, `[]`
  br _60, ^60, ^54

60:
  %% Argument types:
  %%    _29 => {{'function', 'main1', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _29
  _31 = get_tuple_element _29, `3`

  %% beam_doc_SUITE.erl:156
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _12 = bif:'=:=' _31, `#{<<"en">> => <<"Returns always ok.">>}`
  br _12, ^109, ^54

109:
  %% Argument types:
  %%    _38 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `4`

  %% beam_doc_SUITE.erl:158
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _13 = bif:'=:=' _39, `#{authors => [<<"Beep Bop">>],equiv => <<"main/3">>,since => <<"1.0">>}`
  br _13, ^59, ^54

59:
  %% Result type:
  %%    'ok'
  ret `ok`

54:
  %% beam_doc_SUITE.erl:155
  %% Aliased:
  %%    _17
  _45 = match_fail `badmatch`, _17

  %% Unique:
  %%    _45
  _99 = succeeded:body _45
  br ^1

51:
  %% beam_doc_SUITE.erl:152
  %% Aliased:
  %%    _14
  _46 = match_fail `badmatch`, _14

  %% Unique:
  %%    _46
  _106 = succeeded:body _46
  br ^1

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _47
}

%% beam_doc_SUITE.erl:162
%% Counter = 269
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`slogan`(_0) {
0:
  %% beam_doc_SUITE.erl:164
  %% Aliased:
  %%    _0
  _35 = call (`default_compile_file`/2), _0, `"slogan"`

  %% Aliased:
  %%    _35
  _126 = succeeded:body _35
  br _126, ^126, ^1

126:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _265 = is_tagged_tuple _35, `2`, `ok`
  br _265, ^262, ^128

262:
  %% Argument types:
  %%    _35 => {'ok', any()}
  %% Aliased:
  %%    _35
  _36 = get_tuple_element _35, `1`

  %% beam_doc_SUITE.erl:170
  %% Aliased:
  %%    _36
  _38 = call (`code`:`get_doc`/1), _36

  %% Aliased:
  %%    _38
  _129 = succeeded:body _38
  br _129, ^129, ^1

129:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _258 = is_tagged_tuple _38, `2`, `ok`
  br _258, ^255, ^131

255:
  %% Argument types:
  %%    _38 => {'ok', any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _252 = is_tagged_tuple _39, `7`, `docs_v1`
  br _252, ^249, ^131

249:
  %% Argument types:
  %%    _39 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _39
  _43 = get_tuple_element _39, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _248 = bif:'=:=' _43, `none`
  br _248, ^247, ^131

247:
  %% Argument types:
  %%    _39 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _39
  _41 = get_tuple_element _39, `6`

  %% Aliased:
  %%    _41
  _246 = is_nonempty_list _41
  br _246, ^246, ^131

246:
  %% Argument types:
  %%    _41 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _41
  _49 = get_hd _41

  %% Argument types:
  %%    _41 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _41
  _48 = get_tl _41

  %% Aliased:
  %%    _48
  _245 = is_nonempty_list _48
  br _245, ^245, ^131

245:
  %% Argument types:
  %%    _48 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _48
  _51 = get_hd _48

  %% Argument types:
  %%    _48 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _48
  _50 = get_tl _48

  %% Aliased:
  %%    _50
  _244 = is_nonempty_list _50
  br _244, ^244, ^131

244:
  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _53 = get_hd _50

  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _52 = get_tl _50

  %% Aliased:
  %%    _52
  _243 = is_nonempty_list _52
  br _243, ^243, ^131

243:
  %% Argument types:
  %%    _52 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _52
  _55 = get_hd _52

  %% Argument types:
  %%    _52 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _52
  _54 = get_tl _52

  %% Aliased:
  %%    _54
  _242 = is_nonempty_list _54
  br _242, ^242, ^131

242:
  %% Argument types:
  %%    _54 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _54
  _57 = get_hd _54

  %% Argument types:
  %%    _54 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _54
  _56 = get_tl _54

  %% Aliased:
  %%    _56
  _241 = is_nonempty_list _56
  br _241, ^241, ^131

241:
  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _59 = get_hd _56

  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _58 = get_tl _56

  %% Aliased:
  %%    _58
  _240 = is_nonempty_list _58
  br _240, ^240, ^131

240:
  %% Argument types:
  %%    _58 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _58
  _61 = get_hd _58

  %% Argument types:
  %%    _58 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _58
  _60 = get_tl _58

  %% Aliased:
  %%    _60
  _239 = is_nonempty_list _60
  br _239, ^239, ^131

239:
  %% Argument types:
  %%    _60 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _60
  _63 = get_hd _60

  %% Argument types:
  %%    _60 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _60
  _62 = get_tl _60

  %% Aliased:
  %%    _62
  _238 = is_nonempty_list _62
  br _238, ^238, ^131

238:
  %% Argument types:
  %%    _62 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _62
  _65 = get_hd _62

  %% Argument types:
  %%    _62 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _62
  _64 = get_tl _62

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _237 = bif:'=:=' _64, `[]`
  br _237, ^237, ^131

237:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _233 = bif:is_tuple _49
  br _233, ^233, ^133

233:
  %% Argument types:
  %%    _49 => {...}
  %% Aliased:
  %%    _49
  _234 = bif:tuple_size _49

  %% Argument types:
  %%    _234 => 0..16777215
  %% Unique:
  %%    _234
  _235 = bif:'=:=' _234, `5`
  br _235, ^232, ^133

232:
  %% Argument types:
  %%    _49 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _49
  _70 = get_tuple_element _49, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _231 = bif:'=:=' _70, `{function,connect,2}`
  br _231, ^231, ^133

231:
  %% Argument types:
  %%    _49 => {{'function', 'connect', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _49
  _68 = get_tuple_element _49, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _230 = bif:'=:=' _68, `[<<"connect(TCPSocket, TLSOptions)">>]`
  br _230, ^230, ^133

230:
  %% Argument types:
  %%    _49 => {{'function', 'connect', 2}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _49
  _67 = get_tuple_element _49, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _229 = bif:'=:=' _67, `none`
  br _229, ^228, ^133

228:
  %% Argument types:
  %%    _49 => {{'function', 'connect', 2}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _49
  _66 = get_tuple_element _49, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _227 = bif:is_map _66
  br _227, ^227, ^133

227:
  %% Argument types:
  %%    _66 => map()
  %% Aliased:
  %%    _66
  _72 = get_map_element _66, `equiv`

  %% Aliased:
  %%    _72
  _134 = succeeded:guard _72
  br _134, ^134, ^133

134:
  %% Argument types:
  %%    _66 => map()
  %% Aliased:
  %%    _66
  _71 = get_map_element _66, `since`

  %% Aliased:
  %%    _71
  _135 = succeeded:guard _71
  br _135, ^135, ^133

135:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _226 = bif:'=:=' _72, `<<"connect/3">>`
  br _226, ^226, ^133

226:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _225 = bif:'=:=' _71, `<<"OTP R14B">>`
  br _225, ^225, ^133

225:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _221 = bif:is_tuple _51
  br _221, ^221, ^137

221:
  %% Argument types:
  %%    _51 => {...}
  %% Aliased:
  %%    _51
  _222 = bif:tuple_size _51

  %% Argument types:
  %%    _222 => 0..16777215
  %% Unique:
  %%    _222
  _223 = bif:'=:=' _222, `5`
  br _223, ^220, ^137

220:
  %% Argument types:
  %%    _51 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _51
  _77 = get_tuple_element _51, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _219 = bif:'=:=' _77, `{function,spec_multiclause_slogan_ignored,1}`
  br _219, ^219, ^137

219:
  %% Argument types:
  %%    _51 => {{'function', 'spec_multiclause_slogan_ignored', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _51
  _75 = get_tuple_element _51, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _218 = bif:'=:=' _75, `[<<"spec_multiclause_slogan_ignored(X)">>]`
  br _218, ^218, ^137

218:
  %% Argument types:
  %%    _51 => {{'function', 'spec_multiclause_slogan_ignored', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _51
  _74 = get_tuple_element _51, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _217 = bif:'=:=' _74, `none`
  br _217, ^216, ^137

216:
  %% Argument types:
  %%    _51 => {{'function', 'spec_multiclause_slogan_ignored', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _51
  _73 = get_tuple_element _51, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _215 = bif:is_map _73
  br _215, ^215, ^137

215:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _211 = bif:is_tuple _53
  br _211, ^211, ^139

211:
  %% Argument types:
  %%    _53 => {...}
  %% Aliased:
  %%    _53
  _212 = bif:tuple_size _53

  %% Argument types:
  %%    _212 => 0..16777215
  %% Unique:
  %%    _212
  _213 = bif:'=:=' _212, `5`
  br _213, ^210, ^139

210:
  %% Argument types:
  %%    _53 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _53
  _82 = get_tuple_element _53, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _209 = bif:'=:=' _82, `{function,spec_no_doc_slogan,1}`
  br _209, ^209, ^139

209:
  %% Argument types:
  %%    _53 => {{'function', 'spec_no_doc_slogan', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _53
  _80 = get_tuple_element _53, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _208 = bif:'=:=' _80, `[<<"spec_no_doc_slogan(Y)">>]`
  br _208, ^208, ^139

208:
  %% Argument types:
  %%    _53 => {{'function', 'spec_no_doc_slogan', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _53
  _79 = get_tuple_element _53, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _207 = bif:'=:=' _79, `none`
  br _207, ^206, ^139

206:
  %% Argument types:
  %%    _53 => {{'function', 'spec_no_doc_slogan', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _53
  _78 = get_tuple_element _53, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _205 = bif:is_map _78
  br _205, ^205, ^139

205:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _201 = bif:is_tuple _55
  br _201, ^201, ^141

201:
  %% Argument types:
  %%    _55 => {...}
  %% Aliased:
  %%    _55
  _202 = bif:tuple_size _55

  %% Argument types:
  %%    _202 => 0..16777215
  %% Unique:
  %%    _202
  _203 = bif:'=:=' _202, `5`
  br _203, ^200, ^141

200:
  %% Argument types:
  %%    _55 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _55
  _87 = get_tuple_element _55, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _199 = bif:'=:=' _87, `{function,no_doc_slogan,1}`
  br _199, ^199, ^141

199:
  %% Argument types:
  %%    _55 => {{'function', 'no_doc_slogan', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _55
  _85 = get_tuple_element _55, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _198 = bif:'=:=' _85, `[<<"no_doc_slogan(X)">>]`
  br _198, ^198, ^141

198:
  %% Argument types:
  %%    _55 => {{'function', 'no_doc_slogan', 1}, any(), nonempty_list(bitstring(128)), any(), any()}
  %% Aliased:
  %%    _55
  _84 = get_tuple_element _55, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _197 = bif:'=:=' _84, `none`
  br _197, ^196, ^141

196:
  %% Argument types:
  %%    _55 => {{'function', 'no_doc_slogan', 1}, any(), nonempty_list(bitstring(128)), 'none', any()}
  %% Aliased:
  %%    _55
  _83 = get_tuple_element _55, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _195 = bif:is_map _83
  br _195, ^195, ^141

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _191 = bif:is_tuple _57
  br _191, ^191, ^143

191:
  %% Argument types:
  %%    _57 => {...}
  %% Aliased:
  %%    _57
  _192 = bif:tuple_size _57

  %% Argument types:
  %%    _192 => 0..16777215
  %% Unique:
  %%    _192
  _193 = bif:'=:=' _192, `5`
  br _193, ^190, ^143

190:
  %% Argument types:
  %%    _57 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _57
  _92 = get_tuple_element _57, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _189 = bif:'=:=' _92, `{function,spec_slogan,2}`
  br _189, ^189, ^143

189:
  %% Argument types:
  %%    _57 => {{'function', 'spec_slogan', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _57
  _90 = get_tuple_element _57, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _188 = bif:'=:=' _90, `[<<"spec_slogan(Y, Z)">>]`
  br _188, ^188, ^143

188:
  %% Argument types:
  %%    _57 => {{'function', 'spec_slogan', 2}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _57
  _88 = get_tuple_element _57, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _187 = bif:is_map _88
  br _187, ^187, ^143

187:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _183 = bif:is_tuple _59
  br _183, ^183, ^145

183:
  %% Argument types:
  %%    _59 => {...}
  %% Aliased:
  %%    _59
  _184 = bif:tuple_size _59

  %% Argument types:
  %%    _184 => 0..16777215
  %% Unique:
  %%    _184
  _185 = bif:'=:=' _184, `5`
  br _185, ^182, ^145

182:
  %% Argument types:
  %%    _59 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _97 = get_tuple_element _59, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _181 = bif:'=:=' _97, `{function,spec_slogan,1}`
  br _181, ^181, ^145

181:
  %% Argument types:
  %%    _59 => {{'function', 'spec_slogan', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _95 = get_tuple_element _59, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _180 = bif:'=:=' _95, `[<<"spec_slogan(Y)">>]`
  br _180, ^180, ^145

180:
  %% Argument types:
  %%    _59 => {{'function', 'spec_slogan', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _59
  _93 = get_tuple_element _59, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _179 = bif:is_map _93
  br _179, ^179, ^145

179:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _175 = bif:is_tuple _61
  br _175, ^175, ^147

175:
  %% Argument types:
  %%    _61 => {...}
  %% Aliased:
  %%    _61
  _176 = bif:tuple_size _61

  %% Argument types:
  %%    _176 => 0..16777215
  %% Unique:
  %%    _176
  _177 = bif:'=:=' _176, `5`
  br _177, ^174, ^147

174:
  %% Argument types:
  %%    _61 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _61
  _102 = get_tuple_element _61, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _173 = bif:'=:=' _102, `{function,no_slogan,1}`
  br _173, ^173, ^147

173:
  %% Argument types:
  %%    _61 => {{'function', 'no_slogan', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _61
  _100 = get_tuple_element _61, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _172 = bif:'=:=' _100, `[<<"no_slogan/1">>]`
  br _172, ^172, ^147

172:
  %% Argument types:
  %%    _61 => {{'function', 'no_slogan', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _61
  _98 = get_tuple_element _61, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _171 = bif:is_map _98
  br _171, ^171, ^147

171:
  %% Argument types:
  %%    _61 => {{'function', 'no_slogan', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _61
  _99 = get_tuple_element _61, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _148 = bif:'=:=' _99, `#{<<"en">> => <<"Not a slogan\n\nTests slogans in multi-clause">>}`
  br _148, ^148, ^147

148:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _167 = bif:is_tuple _63
  br _167, ^167, ^150

167:
  %% Argument types:
  %%    _63 => {...}
  %% Aliased:
  %%    _63
  _168 = bif:tuple_size _63

  %% Argument types:
  %%    _168 => 0..16777215
  %% Unique:
  %%    _168
  _169 = bif:'=:=' _168, `5`
  br _169, ^166, ^150

166:
  %% Argument types:
  %%    _63 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _63
  _107 = get_tuple_element _63, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _165 = bif:'=:=' _107, `{function,bar,0}`
  br _165, ^165, ^150

165:
  %% Argument types:
  %%    _63 => {{'function', 'bar', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _63
  _105 = get_tuple_element _63, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _164 = bif:'=:=' _105, `[<<"bar()">>]`
  br _164, ^164, ^150

164:
  %% Argument types:
  %%    _63 => {{'function', 'bar', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _63
  _103 = get_tuple_element _63, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _163 = bif:is_map _103
  br _163, ^163, ^150

163:
  %% Argument types:
  %%    _63 => {{'function', 'bar', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _63
  _104 = get_tuple_element _63, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _151 = bif:'=:=' _104, `#{<<"en">> => <<"foo()\nNot a slogan since foo =/= bar">>}`
  br _151, ^151, ^150

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _159 = bif:is_tuple _65
  br _159, ^159, ^153

159:
  %% Argument types:
  %%    _65 => {...}
  %% Aliased:
  %%    _65
  _160 = bif:tuple_size _65

  %% Argument types:
  %%    _160 => 0..16777215
  %% Unique:
  %%    _160
  _161 = bif:'=:=' _160, `5`
  br _161, ^158, ^153

158:
  %% Argument types:
  %%    _65 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _65
  _112 = get_tuple_element _65, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _157 = bif:'=:=' _112, `{function,main,1}`
  br _157, ^157, ^153

157:
  %% Argument types:
  %%    _65 => {{'function', 'main', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _65
  _110 = get_tuple_element _65, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _156 = bif:'=:=' _110, `[<<"main(Foo)">>]`
  br _156, ^156, ^153

156:
  %% Argument types:
  %%    _65 => {{'function', 'main', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _65
  _108 = get_tuple_element _65, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _155 = bif:is_map _108
  br _155, ^155, ^153

155:
  %% Argument types:
  %%    _65 => {{'function', 'main', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _65
  _109 = get_tuple_element _65, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _154 = bif:'=:=' _109, `#{<<"en">> => <<"Returns ok.">>}`
  br _154, ^154, ^153

154:
  %% Result type:
  %%    'ok'
  ret `ok`

153:
  %% beam_doc_SUITE.erl:181
  %% Aliased:
  %%    _65
  _113 = match_fail `badmatch`, _65

  %% Unique:
  %%    _113
  _162 = succeeded:body _113
  br ^1

150:
  %% beam_doc_SUITE.erl:180
  %% Aliased:
  %%    _63
  _114 = match_fail `badmatch`, _63

  %% Unique:
  %%    _114
  _170 = succeeded:body _114
  br ^1

147:
  %% beam_doc_SUITE.erl:179
  %% Aliased:
  %%    _61
  _115 = match_fail `badmatch`, _61

  %% Unique:
  %%    _115
  _178 = succeeded:body _115
  br ^1

145:
  %% beam_doc_SUITE.erl:178
  %% Aliased:
  %%    _59
  _116 = match_fail `badmatch`, _59

  %% Unique:
  %%    _116
  _186 = succeeded:body _116
  br ^1

143:
  %% beam_doc_SUITE.erl:177
  %% Aliased:
  %%    _57
  _117 = match_fail `badmatch`, _57

  %% Unique:
  %%    _117
  _194 = succeeded:body _117
  br ^1

141:
  %% beam_doc_SUITE.erl:176
  %% Aliased:
  %%    _55
  _118 = match_fail `badmatch`, _55

  %% Unique:
  %%    _118
  _204 = succeeded:body _118
  br ^1

139:
  %% beam_doc_SUITE.erl:175
  %% Aliased:
  %%    _53
  _119 = match_fail `badmatch`, _53

  %% Unique:
  %%    _119
  _214 = succeeded:body _119
  br ^1

137:
  %% beam_doc_SUITE.erl:174
  %% Aliased:
  %%    _51
  _120 = match_fail `badmatch`, _51

  %% Unique:
  %%    _120
  _224 = succeeded:body _120
  br ^1

133:
  %% beam_doc_SUITE.erl:172
  %% Aliased:
  %%    _49
  _121 = match_fail `badmatch`, _49

  %% Unique:
  %%    _121
  _236 = succeeded:body _121
  br ^1

131:
  %% beam_doc_SUITE.erl:168
  %% Aliased:
  %%    _38
  _122 = match_fail `badmatch`, _38

  %% Unique:
  %%    _122
  _261 = succeeded:body _122
  br ^1

128:
  %% beam_doc_SUITE.erl:164
  %% Aliased:
  %%    _35
  _123 = match_fail `badmatch`, _35

  %% Unique:
  %%    _123
  _268 = succeeded:body _123
  br ^1

1:
  _124 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _124
}

%% beam_doc_SUITE.erl:184
%% Counter = 1021
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`types_and_opaques`(_0) {
0:
  %% beam_doc_SUITE.erl:186
  %% Aliased:
  %%    _0
  _110 = call (`default_compile_file`/3), _0, `"types_and_opaques"`, `[return_warnings]`

  %% Aliased:
  %%    _110
  _483 = succeeded:body _110
  br _483, ^483, ^1

483:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _1003 = is_tagged_tuple _110, `3`, `ok`
  br _1003, ^1002, ^485

1002:
  %% Argument types:
  %%    _110 => {'ok', any(), any()}
  %% Aliased:
  %%    _110
  _112 = get_tuple_element _110, `1`

  %% Argument types:
  %%    _110 => {'ok', any(), any()}
  %% Aliased:
  %%    _110
  _111 = get_tuple_element _110, `2`

  %% beam_doc_SUITE.erl:203
  %% Aliased:
  %%    _112
  _114 = call (`code`:`get_doc`/1), _112

  %% Aliased:
  %%    _114
  _486 = succeeded:body _114
  br _486, ^486, ^1

486:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _996 = is_tagged_tuple _114, `2`, `ok`
  br _996, ^993, ^488

993:
  %% Argument types:
  %%    _114 => {'ok', any()}
  %% Aliased:
  %%    _114
  _115 = get_tuple_element _114, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _990 = is_tagged_tuple _115, `7`, `docs_v1`
  br _990, ^987, ^488

987:
  %% Argument types:
  %%    _115 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _115
  _119 = get_tuple_element _115, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _986 = bif:'=:=' _119, `none`
  br _986, ^985, ^488

985:
  %% Argument types:
  %%    _115 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _115
  _117 = get_tuple_element _115, `6`

  %% Aliased:
  %%    _117
  _984 = is_nonempty_list _117
  br _984, ^984, ^488

984:
  %% Argument types:
  %%    _117 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _117
  _125 = get_hd _117

  %% Argument types:
  %%    _117 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _117
  _124 = get_tl _117

  %% Aliased:
  %%    _124
  _983 = is_nonempty_list _124
  br _983, ^983, ^488

983:
  %% Argument types:
  %%    _124 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _124
  _127 = get_hd _124

  %% Argument types:
  %%    _124 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _124
  _126 = get_tl _124

  %% Aliased:
  %%    _126
  _982 = is_nonempty_list _126
  br _982, ^982, ^488

982:
  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _129 = get_hd _126

  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _128 = get_tl _126

  %% Aliased:
  %%    _128
  _981 = is_nonempty_list _128
  br _981, ^981, ^488

981:
  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _131 = get_hd _128

  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _130 = get_tl _128

  %% Aliased:
  %%    _130
  _980 = is_nonempty_list _130
  br _980, ^980, ^488

980:
  %% Argument types:
  %%    _130 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _130
  _133 = get_hd _130

  %% Argument types:
  %%    _130 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _130
  _132 = get_tl _130

  %% Aliased:
  %%    _132
  _979 = is_nonempty_list _132
  br _979, ^979, ^488

979:
  %% Argument types:
  %%    _132 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _132
  _135 = get_hd _132

  %% Argument types:
  %%    _132 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _132
  _134 = get_tl _132

  %% Aliased:
  %%    _134
  _978 = is_nonempty_list _134
  br _978, ^978, ^488

978:
  %% Argument types:
  %%    _134 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _134
  _137 = get_hd _134

  %% Argument types:
  %%    _134 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _134
  _136 = get_tl _134

  %% Aliased:
  %%    _136
  _977 = is_nonempty_list _136
  br _977, ^977, ^488

977:
  %% Argument types:
  %%    _136 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _136
  _139 = get_hd _136

  %% Argument types:
  %%    _136 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _136
  _138 = get_tl _136

  %% Aliased:
  %%    _138
  _976 = is_nonempty_list _138
  br _976, ^976, ^488

976:
  %% Argument types:
  %%    _138 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _138
  _141 = get_hd _138

  %% Argument types:
  %%    _138 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _138
  _140 = get_tl _138

  %% Aliased:
  %%    _140
  _975 = is_nonempty_list _140
  br _975, ^975, ^488

975:
  %% Argument types:
  %%    _140 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _140
  _143 = get_hd _140

  %% Argument types:
  %%    _140 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _140
  _142 = get_tl _140

  %% Aliased:
  %%    _142
  _974 = is_nonempty_list _142
  br _974, ^974, ^488

974:
  %% Argument types:
  %%    _142 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _142
  _145 = get_hd _142

  %% Argument types:
  %%    _142 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _142
  _144 = get_tl _142

  %% Aliased:
  %%    _144
  _973 = is_nonempty_list _144
  br _973, ^973, ^488

973:
  %% Argument types:
  %%    _144 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _144
  _147 = get_hd _144

  %% Argument types:
  %%    _144 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _144
  _146 = get_tl _144

  %% Aliased:
  %%    _146
  _972 = is_nonempty_list _146
  br _972, ^972, ^488

972:
  %% Argument types:
  %%    _146 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _146
  _149 = get_hd _146

  %% Argument types:
  %%    _146 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _146
  _148 = get_tl _146

  %% Aliased:
  %%    _148
  _971 = is_nonempty_list _148
  br _971, ^971, ^488

971:
  %% Argument types:
  %%    _148 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _148
  _151 = get_hd _148

  %% Argument types:
  %%    _148 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _148
  _150 = get_tl _148

  %% Aliased:
  %%    _150
  _970 = is_nonempty_list _150
  br _970, ^970, ^488

970:
  %% Argument types:
  %%    _150 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _150
  _153 = get_hd _150

  %% Argument types:
  %%    _150 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _150
  _152 = get_tl _150

  %% Aliased:
  %%    _152
  _969 = is_nonempty_list _152
  br _969, ^969, ^488

969:
  %% Argument types:
  %%    _152 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _152
  _155 = get_hd _152

  %% Argument types:
  %%    _152 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _152
  _154 = get_tl _152

  %% Aliased:
  %%    _154
  _968 = is_nonempty_list _154
  br _968, ^968, ^488

968:
  %% Argument types:
  %%    _154 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _154
  _157 = get_hd _154

  %% Argument types:
  %%    _154 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _154
  _156 = get_tl _154

  %% Aliased:
  %%    _156
  _967 = is_nonempty_list _156
  br _967, ^967, ^488

967:
  %% Argument types:
  %%    _156 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _156
  _159 = get_hd _156

  %% Argument types:
  %%    _156 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _156
  _158 = get_tl _156

  %% Aliased:
  %%    _158
  _966 = is_nonempty_list _158
  br _966, ^966, ^488

966:
  %% Argument types:
  %%    _158 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _158
  _161 = get_hd _158

  %% Argument types:
  %%    _158 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _158
  _160 = get_tl _158

  %% Aliased:
  %%    _160
  _965 = is_nonempty_list _160
  br _965, ^965, ^488

965:
  %% Argument types:
  %%    _160 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _160
  _163 = get_hd _160

  %% Argument types:
  %%    _160 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _160
  _162 = get_tl _160

  %% Aliased:
  %%    _162
  _964 = is_nonempty_list _162
  br _964, ^964, ^488

964:
  %% Argument types:
  %%    _162 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _162
  _165 = get_hd _162

  %% Argument types:
  %%    _162 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _162
  _164 = get_tl _162

  %% Aliased:
  %%    _164
  _963 = is_nonempty_list _164
  br _963, ^963, ^488

963:
  %% Argument types:
  %%    _164 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _164
  _167 = get_hd _164

  %% Argument types:
  %%    _164 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _164
  _166 = get_tl _164

  %% Aliased:
  %%    _166
  _962 = is_nonempty_list _166
  br _962, ^962, ^488

962:
  %% Argument types:
  %%    _166 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _166
  _169 = get_hd _166

  %% Argument types:
  %%    _166 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _166
  _168 = get_tl _166

  %% Aliased:
  %%    _168
  _961 = is_nonempty_list _168
  br _961, ^961, ^488

961:
  %% Argument types:
  %%    _168 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _168
  _171 = get_hd _168

  %% Argument types:
  %%    _168 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _168
  _170 = get_tl _168

  %% Aliased:
  %%    _170
  _960 = is_nonempty_list _170
  br _960, ^960, ^488

960:
  %% Argument types:
  %%    _170 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _170
  _173 = get_hd _170

  %% Argument types:
  %%    _170 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _170
  _172 = get_tl _170

  %% Aliased:
  %%    _172
  _959 = is_nonempty_list _172
  br _959, ^959, ^488

959:
  %% Argument types:
  %%    _172 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _172
  _175 = get_hd _172

  %% Argument types:
  %%    _172 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _172
  _174 = get_tl _172

  %% Aliased:
  %%    _174
  _958 = is_nonempty_list _174
  br _958, ^958, ^488

958:
  %% Argument types:
  %%    _174 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _174
  _177 = get_hd _174

  %% Argument types:
  %%    _174 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _174
  _176 = get_tl _174

  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _957 = bif:'=:=' _176, `[]`
  br _957, ^957, ^488

957:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _953 = bif:is_tuple _125
  br _953, ^953, ^490

953:
  %% Argument types:
  %%    _125 => {...}
  %% Aliased:
  %%    _125
  _954 = bif:tuple_size _125

  %% Argument types:
  %%    _954 => 0..16777215
  %% Unique:
  %%    _954
  _955 = bif:'=:=' _954, `5`
  br _955, ^952, ^490

952:
  %% Argument types:
  %%    _125 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _125
  _182 = get_tuple_element _125, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _182
  _951 = bif:'=:=' _182, `{type,public,0}`
  br _951, ^951, ^490

951:
  %% Argument types:
  %%    _125 => {{'type', 'public', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _125
  _181 = get_tuple_element _125, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _181
  _950 = bif:'=:=' _181, `{125,2}`
  br _950, ^950, ^490

950:
  %% Argument types:
  %%    _125 => {{'type', 'public', 0}, {125, 2}, any(), any(), any()}
  %% Aliased:
  %%    _125
  _180 = get_tuple_element _125, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _180
  _949 = bif:'=:=' _180, `[<<"public()">>]`
  br _949, ^949, ^490

949:
  %% Argument types:
  %%    _125 => {{'type', 'public', 0}, {125, 2}, nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _125
  _179 = get_tuple_element _125, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _179
  _948 = bif:'=:=' _179, `none`
  br _948, ^947, ^490

947:
  %% Argument types:
  %%    _125 => {{'type', 'public', 0}, {125, 2}, nonempty_list(bitstring(64)), 'none', any()}
  %% Aliased:
  %%    _125
  _178 = get_tuple_element _125, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _178
  _946 = bif:is_map _178
  br _946, ^946, ^490

946:
  %% Argument types:
  %%    _178 => map()
  %% Aliased:
  %%    _178
  _183 = get_map_element _178, `exported`

  %% Aliased:
  %%    _183
  _491 = succeeded:guard _183
  br _491, ^491, ^490

491:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _183
  _945 = bif:'=:=' _183, `true`
  br _945, ^944, ^490

944:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _940 = bif:is_tuple _127
  br _940, ^940, ^493

940:
  %% Argument types:
  %%    _127 => {...}
  %% Aliased:
  %%    _127
  _941 = bif:tuple_size _127

  %% Argument types:
  %%    _941 => 0..16777215
  %% Unique:
  %%    _941
  _942 = bif:'=:=' _941, `5`
  br _942, ^939, ^493

939:
  %% Argument types:
  %%    _127 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _127
  _188 = get_tuple_element _127, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _188
  _938 = bif:'=:=' _188, `{type,intermediate,0}`
  br _938, ^938, ^493

938:
  %% Argument types:
  %%    _127 => {{'type', 'intermediate', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _127
  _187 = get_tuple_element _127, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _187
  _937 = bif:'=:=' _187, `{124,2}`
  br _937, ^937, ^493

937:
  %% Argument types:
  %%    _127 => {{'type', 'intermediate', 0}, {124, 2}, any(), any(), any()}
  %% Aliased:
  %%    _127
  _186 = get_tuple_element _127, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _186
  _936 = bif:'=:=' _186, `[<<"intermediate()">>]`
  br _936, ^936, ^493

936:
  %% Argument types:
  %%    _127 => {{'type', 'intermediate', 0}, {124, 2}, nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _127
  _185 = get_tuple_element _127, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _185
  _935 = bif:'=:=' _185, `none`
  br _935, ^934, ^493

934:
  %% Argument types:
  %%    _127 => {{'type', 'intermediate', 0}, {124, 2}, nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _127
  _184 = get_tuple_element _127, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _184
  _933 = bif:is_map _184
  br _933, ^933, ^493

933:
  %% Argument types:
  %%    _184 => map()
  %% Aliased:
  %%    _184
  _189 = get_map_element _184, `exported`

  %% Aliased:
  %%    _189
  _494 = succeeded:guard _189
  br _494, ^494, ^493

494:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _189
  _932 = bif:'=:=' _189, `false`
  br _932, ^931, ^493

931:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _927 = bif:is_tuple _129
  br _927, ^927, ^496

927:
  %% Argument types:
  %%    _129 => {...}
  %% Aliased:
  %%    _129
  _928 = bif:tuple_size _129

  %% Argument types:
  %%    _928 => 0..16777215
  %% Unique:
  %%    _928
  _929 = bif:'=:=' _928, `5`
  br _929, ^926, ^496

926:
  %% Argument types:
  %%    _129 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _129
  _194 = get_tuple_element _129, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _925 = bif:'=:=' _194, `{type,hidden_nowarn_type,0}`
  br _925, ^925, ^496

925:
  %% Argument types:
  %%    _129 => {{'type', 'hidden_nowarn_type', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _129
  _193 = get_tuple_element _129, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _193
  _924 = bif:'=:=' _193, `{120,2}`
  br _924, ^924, ^496

924:
  %% Argument types:
  %%    _129 => {{'type', 'hidden_nowarn_type', 0}, {120, 2}, any(), any(), any()}
  %% Aliased:
  %%    _129
  _192 = get_tuple_element _129, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _192
  _923 = bif:'=:=' _192, `[<<"hidden_nowarn_type()">>]`
  br _923, ^923, ^496

923:
  %% Argument types:
  %%    _129 => {{'type', 'hidden_nowarn_type', 0}, {120, 2}, nonempty_list(bitstring(32)), any(), any()}
  %% Aliased:
  %%    _129
  _191 = get_tuple_element _129, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _191
  _922 = bif:'=:=' _191, `hidden`
  br _922, ^921, ^496

921:
  %% Argument types:
  %%    _129 => {{'type', 'hidden_nowarn_type', 0}, {120, 2}, nonempty_list(bitstring(32)), 'hidden', any()}
  %% Aliased:
  %%    _129
  _190 = get_tuple_element _129, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _190
  _920 = bif:is_map _190
  br _920, ^920, ^496

920:
  %% Argument types:
  %%    _190 => map()
  %% Aliased:
  %%    _190
  _195 = get_map_element _190, `exported`

  %% Aliased:
  %%    _195
  _497 = succeeded:guard _195
  br _497, ^497, ^496

497:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _195
  _919 = bif:'=:=' _195, `false`
  br _919, ^918, ^496

918:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _914 = bif:is_tuple _131
  br _914, ^914, ^499

914:
  %% Argument types:
  %%    _131 => {...}
  %% Aliased:
  %%    _131
  _915 = bif:tuple_size _131

  %% Argument types:
  %%    _915 => 0..16777215
  %% Unique:
  %%    _915
  _916 = bif:'=:=' _915, `5`
  br _916, ^913, ^499

913:
  %% Argument types:
  %%    _131 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _131
  _200 = get_tuple_element _131, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _200
  _912 = bif:'=:=' _200, `{type,hidden_type,0}`
  br _912, ^912, ^499

912:
  %% Argument types:
  %%    _131 => {{'type', 'hidden_type', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _131
  _199 = get_tuple_element _131, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _199
  _911 = bif:'=:=' _199, `{117,2}`
  br _911, ^911, ^499

911:
  %% Argument types:
  %%    _131 => {{'type', 'hidden_type', 0}, {117, 2}, any(), any(), any()}
  %% Aliased:
  %%    _131
  _198 = get_tuple_element _131, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _198
  _910 = bif:'=:=' _198, `[<<"hidden_type()">>]`
  br _910, ^910, ^499

910:
  %% Argument types:
  %%    _131 => {{'type', 'hidden_type', 0}, {117, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _131
  _197 = get_tuple_element _131, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _197
  _909 = bif:'=:=' _197, `hidden`
  br _909, ^908, ^499

908:
  %% Argument types:
  %%    _131 => {{'type', 'hidden_type', 0}, {117, 2}, nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _131
  _196 = get_tuple_element _131, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _196
  _907 = bif:is_map _196
  br _907, ^907, ^499

907:
  %% Argument types:
  %%    _196 => map()
  %% Aliased:
  %%    _196
  _201 = get_map_element _196, `exported`

  %% Aliased:
  %%    _201
  _500 = succeeded:guard _201
  br _500, ^500, ^499

500:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _201
  _906 = bif:'=:=' _201, `false`
  br _906, ^905, ^499

905:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _901 = bif:is_tuple _133
  br _901, ^901, ^502

901:
  %% Argument types:
  %%    _133 => {...}
  %% Aliased:
  %%    _133
  _902 = bif:tuple_size _133

  %% Argument types:
  %%    _902 => 0..16777215
  %% Unique:
  %%    _902
  _903 = bif:'=:=' _902, `5`
  br _903, ^900, ^502

900:
  %% Argument types:
  %%    _133 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _133
  _206 = get_tuple_element _133, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _206
  _899 = bif:'=:=' _206, `{type,my_other_private_type,0}`
  br _899, ^899, ^502

899:
  %% Argument types:
  %%    _133 => {{'type', 'my_other_private_type', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _133
  _204 = get_tuple_element _133, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _898 = bif:'=:=' _204, `[<<"my_other_private_type()">>]`
  br _898, ^898, ^502

898:
  %% Argument types:
  %%    _133 => {{'type', 'my_other_private_type', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _133
  _203 = get_tuple_element _133, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _203
  _897 = bif:'=:=' _203, `none`
  br _897, ^896, ^502

896:
  %% Argument types:
  %%    _133 => {{'type', 'my_other_private_type', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _133
  _202 = get_tuple_element _133, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _202
  _895 = bif:is_map _202
  br _895, ^895, ^502

895:
  %% Argument types:
  %%    _202 => map()
  %% Aliased:
  %%    _202
  _207 = get_map_element _202, `exported`

  %% Aliased:
  %%    _207
  _503 = succeeded:guard _207
  br _503, ^503, ^502

503:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _207
  _894 = bif:'=:=' _207, `false`
  br _894, ^893, ^502

893:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _889 = bif:is_tuple _135
  br _889, ^889, ^505

889:
  %% Argument types:
  %%    _135 => {...}
  %% Aliased:
  %%    _135
  _890 = bif:tuple_size _135

  %% Argument types:
  %%    _890 => 0..16777215
  %% Unique:
  %%    _890
  _891 = bif:'=:=' _890, `5`
  br _891, ^888, ^505

888:
  %% Argument types:
  %%    _135 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _212 = get_tuple_element _135, `0`

  %% Argument types:
  %%    _135 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _211 = get_tuple_element _135, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _212
  _887 = bif:'=:=' _212, `{type,my_private_type,0}`
  br _887, ^887, ^505

887:
  %% Argument types:
  %%    _135 => {{'type', 'my_private_type', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _210 = get_tuple_element _135, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _210
  _886 = bif:'=:=' _210, `[<<"my_private_type()">>]`
  br _886, ^886, ^505

886:
  %% Argument types:
  %%    _135 => {{'type', 'my_private_type', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _135
  _209 = get_tuple_element _135, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _209
  _885 = bif:'=:=' _209, `none`
  br _885, ^884, ^505

884:
  %% Argument types:
  %%    _135 => {{'type', 'my_private_type', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _135
  _208 = get_tuple_element _135, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _208
  _883 = bif:is_map _208
  br _883, ^883, ^505

883:
  %% Argument types:
  %%    _208 => map()
  %% Aliased:
  %%    _208
  _213 = get_map_element _208, `exported`

  %% Aliased:
  %%    _213
  _506 = succeeded:guard _213
  br _506, ^506, ^505

506:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _213
  _882 = bif:'=:=' _213, `false`
  br _882, ^881, ^505

881:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _877 = bif:is_tuple _137
  br _877, ^877, ^508

877:
  %% Argument types:
  %%    _137 => {...}
  %% Aliased:
  %%    _137
  _878 = bif:tuple_size _137

  %% Argument types:
  %%    _878 => 0..16777215
  %% Unique:
  %%    _878
  _879 = bif:'=:=' _878, `5`
  br _879, ^876, ^508

876:
  %% Argument types:
  %%    _137 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _137
  _218 = get_tuple_element _137, `0`

  %% Argument types:
  %%    _137 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _137
  _217 = get_tuple_element _137, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _218
  _875 = bif:'=:=' _218, `{type,mymap,0}`
  br _875, ^875, ^508

875:
  %% Argument types:
  %%    _137 => {{'type', 'mymap', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _137
  _216 = get_tuple_element _137, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _216
  _874 = bif:'=:=' _216, `[<<"mymap()">>]`
  br _874, ^874, ^508

874:
  %% Argument types:
  %%    _137 => {{'type', 'mymap', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _137
  _215 = get_tuple_element _137, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _215
  _873 = bif:'=:=' _215, `none`
  br _873, ^872, ^508

872:
  %% Argument types:
  %%    _137 => {{'type', 'mymap', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _137
  _214 = get_tuple_element _137, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _214
  _871 = bif:is_map _214
  br _871, ^871, ^508

871:
  %% Argument types:
  %%    _214 => map()
  %% Aliased:
  %%    _214
  _219 = get_map_element _214, `exported`

  %% Aliased:
  %%    _219
  _509 = succeeded:guard _219
  br _509, ^509, ^508

509:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _219
  _870 = bif:'=:=' _219, `false`
  br _870, ^869, ^508

869:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _865 = bif:is_tuple _139
  br _865, ^865, ^511

865:
  %% Argument types:
  %%    _139 => {...}
  %% Aliased:
  %%    _139
  _866 = bif:tuple_size _139

  %% Argument types:
  %%    _866 => 0..16777215
  %% Unique:
  %%    _866
  _867 = bif:'=:=' _866, `5`
  br _867, ^864, ^511

864:
  %% Argument types:
  %%    _139 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _139
  _224 = get_tuple_element _139, `0`

  %% Argument types:
  %%    _139 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _139
  _223 = get_tuple_element _139, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _224
  _863 = bif:'=:=' _224, `{type,state_enter,0}`
  br _863, ^863, ^511

863:
  %% Argument types:
  %%    _139 => {{'type', 'state_enter', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _139
  _222 = get_tuple_element _139, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _222
  _862 = bif:'=:=' _222, `[<<"state_enter()">>]`
  br _862, ^862, ^511

862:
  %% Argument types:
  %%    _139 => {{'type', 'state_enter', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _139
  _221 = get_tuple_element _139, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _221
  _861 = bif:'=:=' _221, `none`
  br _861, ^860, ^511

860:
  %% Argument types:
  %%    _139 => {{'type', 'state_enter', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _139
  _220 = get_tuple_element _139, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _220
  _859 = bif:is_map _220
  br _859, ^859, ^511

859:
  %% Argument types:
  %%    _220 => map()
  %% Aliased:
  %%    _220
  _225 = get_map_element _220, `exported`

  %% Aliased:
  %%    _225
  _512 = succeeded:guard _225
  br _512, ^512, ^511

512:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _225
  _858 = bif:'=:=' _225, `false`
  br _858, ^857, ^511

857:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _853 = bif:is_tuple _141
  br _853, ^853, ^514

853:
  %% Argument types:
  %%    _141 => {...}
  %% Aliased:
  %%    _141
  _854 = bif:tuple_size _141

  %% Argument types:
  %%    _854 => 0..16777215
  %% Unique:
  %%    _854
  _855 = bif:'=:=' _854, `5`
  br _855, ^852, ^514

852:
  %% Argument types:
  %%    _141 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _141
  _230 = get_tuple_element _141, `0`

  %% Argument types:
  %%    _141 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _141
  _229 = get_tuple_element _141, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _230
  _851 = bif:'=:=' _230, `{type,callback_mode,0}`
  br _851, ^851, ^514

851:
  %% Argument types:
  %%    _141 => {{'type', 'callback_mode', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _141
  _228 = get_tuple_element _141, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _228
  _850 = bif:'=:=' _228, `[<<"callback_mode()">>]`
  br _850, ^850, ^514

850:
  %% Argument types:
  %%    _141 => {{'type', 'callback_mode', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _141
  _227 = get_tuple_element _141, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _227
  _849 = bif:'=:=' _227, `none`
  br _849, ^848, ^514

848:
  %% Argument types:
  %%    _141 => {{'type', 'callback_mode', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _141
  _226 = get_tuple_element _141, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _226
  _847 = bif:is_map _226
  br _847, ^847, ^514

847:
  %% Argument types:
  %%    _226 => map()
  %% Aliased:
  %%    _226
  _231 = get_map_element _226, `exported`

  %% Aliased:
  %%    _231
  _515 = succeeded:guard _231
  br _515, ^515, ^514

515:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _846 = bif:'=:=' _231, `false`
  br _846, ^845, ^514

845:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _841 = bif:is_tuple _143
  br _841, ^841, ^517

841:
  %% Argument types:
  %%    _143 => {...}
  %% Aliased:
  %%    _143
  _842 = bif:tuple_size _143

  %% Argument types:
  %%    _842 => 0..16777215
  %% Unique:
  %%    _842
  _843 = bif:'=:=' _842, `5`
  br _843, ^840, ^517

840:
  %% Argument types:
  %%    _143 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _236 = get_tuple_element _143, `0`

  %% Argument types:
  %%    _143 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _235 = get_tuple_element _143, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _236
  _839 = bif:'=:=' _236, `{type,callback_mode_result,0}`
  br _839, ^839, ^517

839:
  %% Argument types:
  %%    _143 => {{'type', 'callback_mode_result', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _234 = get_tuple_element _143, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _234
  _838 = bif:'=:=' _234, `[<<"callback_mode_result()">>]`
  br _838, ^838, ^517

838:
  %% Argument types:
  %%    _143 => {{'type', 'callback_mode_result', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _143
  _233 = get_tuple_element _143, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _233
  _837 = bif:'=:=' _233, `none`
  br _837, ^836, ^517

836:
  %% Argument types:
  %%    _143 => {{'type', 'callback_mode_result', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _143
  _232 = get_tuple_element _143, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _232
  _835 = bif:is_map _232
  br _835, ^835, ^517

835:
  %% Argument types:
  %%    _232 => map()
  %% Aliased:
  %%    _232
  _237 = get_map_element _232, `exported`

  %% Aliased:
  %%    _237
  _518 = succeeded:guard _237
  br _518, ^518, ^517

518:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _237
  _834 = bif:'=:=' _237, `true`
  br _834, ^833, ^517

833:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _829 = bif:is_tuple _145
  br _829, ^829, ^520

829:
  %% Argument types:
  %%    _145 => {...}
  %% Aliased:
  %%    _145
  _830 = bif:tuple_size _145

  %% Argument types:
  %%    _830 => 0..16777215
  %% Unique:
  %%    _830
  _831 = bif:'=:=' _830, `5`
  br _831, ^828, ^520

828:
  %% Argument types:
  %%    _145 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _145
  _242 = get_tuple_element _145, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _242
  _827 = bif:'=:=' _242, `{type,encoding_func,0}`
  br _827, ^827, ^520

827:
  %% Argument types:
  %%    _145 => {{'type', 'encoding_func', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _145
  _240 = get_tuple_element _145, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _240
  _826 = bif:'=:=' _240, `[<<"encoding_func()">>]`
  br _826, ^826, ^520

826:
  %% Argument types:
  %%    _145 => {{'type', 'encoding_func', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _145
  _239 = get_tuple_element _145, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _825 = bif:'=:=' _239, `none`
  br _825, ^824, ^520

824:
  %% Argument types:
  %%    _145 => {{'type', 'encoding_func', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _145
  _238 = get_tuple_element _145, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _238
  _823 = bif:is_map _238
  br _823, ^823, ^520

823:
  %% Argument types:
  %%    _238 => map()
  %% Aliased:
  %%    _238
  _243 = get_map_element _238, `exported`

  %% Aliased:
  %%    _243
  _521 = succeeded:guard _243
  br _521, ^521, ^520

521:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _243
  _822 = bif:'=:=' _243, `false`
  br _822, ^821, ^520

821:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _817 = bif:is_tuple _147
  br _817, ^817, ^523

817:
  %% Argument types:
  %%    _147 => {...}
  %% Aliased:
  %%    _147
  _818 = bif:tuple_size _147

  %% Argument types:
  %%    _818 => 0..16777215
  %% Unique:
  %%    _818
  _819 = bif:'=:=' _818, `5`
  br _819, ^816, ^523

816:
  %% Argument types:
  %%    _147 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _147
  _248 = get_tuple_element _147, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _248
  _815 = bif:'=:=' _248, `{type,three,0}`
  br _815, ^815, ^523

815:
  %% Argument types:
  %%    _147 => {{'type', 'three', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _147
  _246 = get_tuple_element _147, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _246
  _814 = bif:'=:=' _246, `[<<"three()">>]`
  br _814, ^814, ^523

814:
  %% Argument types:
  %%    _147 => {{'type', 'three', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _147
  _245 = get_tuple_element _147, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _813 = bif:'=:=' _245, `none`
  br _813, ^812, ^523

812:
  %% Argument types:
  %%    _147 => {{'type', 'three', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _147
  _244 = get_tuple_element _147, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _244
  _811 = bif:is_map _244
  br _811, ^811, ^523

811:
  %% Argument types:
  %%    _244 => map()
  %% Aliased:
  %%    _244
  _249 = get_map_element _244, `exported`

  %% Aliased:
  %%    _249
  _524 = succeeded:guard _249
  br _524, ^524, ^523

524:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _249
  _810 = bif:'=:=' _249, `false`
  br _810, ^809, ^523

809:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _805 = bif:is_tuple _149
  br _805, ^805, ^526

805:
  %% Argument types:
  %%    _149 => {...}
  %% Aliased:
  %%    _149
  _806 = bif:tuple_size _149

  %% Argument types:
  %%    _806 => 0..16777215
  %% Unique:
  %%    _806
  _807 = bif:'=:=' _806, `5`
  br _807, ^804, ^526

804:
  %% Argument types:
  %%    _149 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _149
  _254 = get_tuple_element _149, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _254
  _803 = bif:'=:=' _254, `{type,two,0}`
  br _803, ^803, ^526

803:
  %% Argument types:
  %%    _149 => {{'type', 'two', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _149
  _252 = get_tuple_element _149, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _252
  _802 = bif:'=:=' _252, `[<<"two()">>]`
  br _802, ^802, ^526

802:
  %% Argument types:
  %%    _149 => {{'type', 'two', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _149
  _251 = get_tuple_element _149, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _251
  _801 = bif:'=:=' _251, `none`
  br _801, ^800, ^526

800:
  %% Argument types:
  %%    _149 => {{'type', 'two', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _149
  _250 = get_tuple_element _149, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _250
  _799 = bif:is_map _250
  br _799, ^799, ^526

799:
  %% Argument types:
  %%    _250 => map()
  %% Aliased:
  %%    _250
  _255 = get_map_element _250, `exported`

  %% Aliased:
  %%    _255
  _527 = succeeded:guard _255
  br _527, ^527, ^526

527:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _255
  _798 = bif:'=:=' _255, `false`
  br _798, ^797, ^526

797:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _793 = bif:is_tuple _151
  br _793, ^793, ^529

793:
  %% Argument types:
  %%    _151 => {...}
  %% Aliased:
  %%    _151
  _794 = bif:tuple_size _151

  %% Argument types:
  %%    _794 => 0..16777215
  %% Unique:
  %%    _794
  _795 = bif:'=:=' _794, `5`
  br _795, ^792, ^529

792:
  %% Argument types:
  %%    _151 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _151
  _260 = get_tuple_element _151, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _791 = bif:'=:=' _260, `{type,one,0}`
  br _791, ^791, ^529

791:
  %% Argument types:
  %%    _151 => {{'type', 'one', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _151
  _258 = get_tuple_element _151, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _258
  _790 = bif:'=:=' _258, `[<<"one()">>]`
  br _790, ^790, ^529

790:
  %% Argument types:
  %%    _151 => {{'type', 'one', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _151
  _257 = get_tuple_element _151, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _257
  _789 = bif:'=:=' _257, `none`
  br _789, ^788, ^529

788:
  %% Argument types:
  %%    _151 => {{'type', 'one', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _151
  _256 = get_tuple_element _151, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _256
  _787 = bif:is_map _256
  br _787, ^787, ^529

787:
  %% Argument types:
  %%    _256 => map()
  %% Aliased:
  %%    _256
  _261 = get_map_element _256, `exported`

  %% Aliased:
  %%    _261
  _530 = succeeded:guard _261
  br _530, ^530, ^529

530:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _261
  _786 = bif:'=:=' _261, `false`
  br _786, ^785, ^529

785:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _781 = bif:is_tuple _153
  br _781, ^781, ^532

781:
  %% Argument types:
  %%    _153 => {...}
  %% Aliased:
  %%    _153
  _782 = bif:tuple_size _153

  %% Argument types:
  %%    _782 => 0..16777215
  %% Unique:
  %%    _782
  _783 = bif:'=:=' _782, `5`
  br _783, ^780, ^532

780:
  %% Argument types:
  %%    _153 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _153
  _266 = get_tuple_element _153, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _266
  _779 = bif:'=:=' _266, `{type,hidden,0}`
  br _779, ^779, ^532

779:
  %% Argument types:
  %%    _153 => {{'type', 'hidden', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _153
  _264 = get_tuple_element _153, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _778 = bif:'=:=' _264, `[<<"hidden()">>]`
  br _778, ^778, ^532

778:
  %% Argument types:
  %%    _153 => {{'type', 'hidden', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _153
  _263 = get_tuple_element _153, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _263
  _777 = bif:'=:=' _263, `hidden`
  br _777, ^776, ^532

776:
  %% Argument types:
  %%    _153 => {{'type', 'hidden', 0}, any(), nonempty_list(bitstring(64)), 'hidden', any()}
  %% Aliased:
  %%    _153
  _262 = get_tuple_element _153, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _262
  _775 = bif:is_map _262
  br _775, ^775, ^532

775:
  %% Argument types:
  %%    _262 => map()
  %% Aliased:
  %%    _262
  _267 = get_map_element _262, `exported`

  %% Aliased:
  %%    _267
  _533 = succeeded:guard _267
  br _533, ^533, ^532

533:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _774 = bif:'=:=' _267, `true`
  br _774, ^773, ^532

773:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _155
  _769 = bif:is_tuple _155
  br _769, ^769, ^535

769:
  %% Argument types:
  %%    _155 => {...}
  %% Aliased:
  %%    _155
  _770 = bif:tuple_size _155

  %% Argument types:
  %%    _770 => 0..16777215
  %% Unique:
  %%    _770
  _771 = bif:'=:=' _770, `5`
  br _771, ^768, ^535

768:
  %% Argument types:
  %%    _155 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _155
  _272 = get_tuple_element _155, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _272
  _767 = bif:'=:=' _272, `{type,hidden_false,0}`
  br _767, ^767, ^535

767:
  %% Argument types:
  %%    _155 => {{'type', 'hidden_false', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _155
  _270 = get_tuple_element _155, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _270
  _766 = bif:'=:=' _270, `[<<"hidden_false()">>]`
  br _766, ^766, ^535

766:
  %% Argument types:
  %%    _155 => {{'type', 'hidden_false', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _155
  _269 = get_tuple_element _155, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _269
  _765 = bif:'=:=' _269, `hidden`
  br _765, ^764, ^535

764:
  %% Argument types:
  %%    _155 => {{'type', 'hidden_false', 0}, any(), nonempty_list(bitstring(16)), 'hidden', any()}
  %% Aliased:
  %%    _155
  _268 = get_tuple_element _155, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _268
  _763 = bif:is_map _268
  br _763, ^763, ^535

763:
  %% Argument types:
  %%    _268 => map()
  %% Aliased:
  %%    _268
  _274 = get_map_element _268, `authors`

  %% Aliased:
  %%    _274
  _536 = succeeded:guard _274
  br _536, ^536, ^535

536:
  %% Argument types:
  %%    _268 => map()
  %% Aliased:
  %%    _268
  _273 = get_map_element _268, `exported`

  %% Aliased:
  %%    _273
  _537 = succeeded:guard _273
  br _537, ^537, ^535

537:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _274
  _762 = bif:'=:=' _274, `"Someone else"`
  br _762, ^762, ^535

762:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _273
  _761 = bif:'=:=' _273, `true`
  br _761, ^760, ^535

760:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _756 = bif:is_tuple _157
  br _756, ^756, ^539

756:
  %% Argument types:
  %%    _157 => {...}
  %% Aliased:
  %%    _157
  _757 = bif:tuple_size _157

  %% Argument types:
  %%    _757 => 0..16777215
  %% Unique:
  %%    _757
  _758 = bif:'=:=' _757, `5`
  br _758, ^755, ^539

755:
  %% Argument types:
  %%    _157 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _157
  _279 = get_tuple_element _157, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _279
  _754 = bif:'=:=' _279, `{type,mmaybe,1}`
  br _754, ^754, ^539

754:
  %% Argument types:
  %%    _157 => {{'type', 'mmaybe', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _157
  _277 = get_tuple_element _157, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _277
  _753 = bif:'=:=' _277, `[<<"mmaybe(X)">>]`
  br _753, ^753, ^539

753:
  %% Argument types:
  %%    _157 => {{'type', 'mmaybe', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _157
  _276 = get_tuple_element _157, `3`

  %% beam_doc_SUITE.erl:225
  %% Argument types:
  %%    
  %% Aliased:
  %%    _276
  _83 = bif:'=:=' _276, `#{<<"en">> => <<"mmaybe(X) ::= nothing | X.\n\nRepresents a maybe type.">>}`
  br _83, ^1009, ^539

1009:
  %% Argument types:
  %%    _157 => {{'type', 'mmaybe', 1}, any(), nonempty_list(bitstring(8)), #{bitstring(16)=>bitstring(32)}, any()}
  %% Aliased:
  %%    _157
  _275 = get_tuple_element _157, `4`

  %% beam_doc_SUITE.erl:225
  %% Argument types:
  %%    
  %% Aliased:
  %%    _275
  _84 = bif:'=:=' _275, `#{authors => "Someone else",exported => true}`
  br _84, ^541, ^539

541:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _749 = bif:is_tuple _159
  br _749, ^749, ^543

749:
  %% Argument types:
  %%    _159 => {...}
  %% Aliased:
  %%    _159
  _750 = bif:tuple_size _159

  %% Argument types:
  %%    _750 => 0..16777215
  %% Unique:
  %%    _750
  _751 = bif:'=:=' _750, `5`
  br _751, ^748, ^543

748:
  %% Argument types:
  %%    _159 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _159
  _285 = get_tuple_element _159, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _285
  _747 = bif:'=:=' _285, `{type,unnamed,0}`
  br _747, ^747, ^543

747:
  %% Argument types:
  %%    _159 => {{'type', 'unnamed', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _159
  _284 = get_tuple_element _159, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _284
  _746 = bif:'=:=' _284, `{30,2}`
  br _746, ^746, ^543

746:
  %% Argument types:
  %%    _159 => {{'type', 'unnamed', 0}, {30, 2}, any(), any(), any()}
  %% Aliased:
  %%    _159
  _283 = get_tuple_element _159, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _283
  _745 = bif:'=:=' _283, `[<<"unnamed()">>]`
  br _745, ^745, ^543

745:
  %% Argument types:
  %%    _159 => {{'type', 'unnamed', 0}, {30, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _159
  _281 = get_tuple_element _159, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _281
  _744 = bif:is_map _281
  br _744, ^744, ^543

744:
  %% Argument types:
  %%    _281 => map()
  %% Aliased:
  %%    _281
  _287 = get_map_element _281, `equiv`

  %% Aliased:
  %%    _287
  _544 = succeeded:guard _287
  br _544, ^544, ^543

544:
  %% Argument types:
  %%    _281 => map()
  %% Aliased:
  %%    _281
  _286 = get_map_element _281, `exported`

  %% Aliased:
  %%    _286
  _545 = succeeded:guard _286
  br _545, ^545, ^543

545:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _287
  _743 = bif:'=:=' _287, `<<"non_neg_integer()">>`
  br _743, ^743, ^543

743:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _286
  _742 = bif:'=:=' _286, `true`
  br _742, ^741, ^543

741:
  %% Argument types:
  %%    _159 => {{'type', 'unnamed', 0}, {30, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _159
  _282 = get_tuple_element _159, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  _546 = bif:'=:=' _282, `#{<<"en">> => <<"Represents the name of a person that cannot be named.">>}`
  br _546, ^546, ^543

546:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _737 = bif:is_tuple _161
  br _737, ^737, ^548

737:
  %% Argument types:
  %%    _161 => {...}
  %% Aliased:
  %%    _161
  _738 = bif:tuple_size _161

  %% Argument types:
  %%    _738 => 0..16777215
  %% Unique:
  %%    _738
  _739 = bif:'=:=' _738, `5`
  br _739, ^736, ^548

736:
  %% Argument types:
  %%    _161 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _161
  _292 = get_tuple_element _161, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _292
  _735 = bif:'=:=' _292, `{type,param,1}`
  br _735, ^735, ^548

735:
  %% Argument types:
  %%    _161 => {{'type', 'param', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _161
  _290 = get_tuple_element _161, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _290
  _734 = bif:'=:=' _290, `[<<"param(X)">>]`
  br _734, ^734, ^548

734:
  %% Argument types:
  %%    _161 => {{'type', 'param', 1}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _161
  _288 = get_tuple_element _161, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _288
  _733 = bif:is_map _288
  br _733, ^733, ^548

733:
  %% Argument types:
  %%    _288 => map()
  %% Aliased:
  %%    _288
  _294 = get_map_element _288, `equiv`

  %% Aliased:
  %%    _294
  _549 = succeeded:guard _294
  br _549, ^549, ^548

549:
  %% Argument types:
  %%    _288 => map()
  %% Aliased:
  %%    _288
  _293 = get_map_element _288, `exported`

  %% Aliased:
  %%    _293
  _550 = succeeded:guard _293
  br _550, ^550, ^548

550:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _294
  _732 = bif:'=:=' _294, `<<"madeup()">>`
  br _732, ^732, ^548

732:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _293
  _731 = bif:'=:=' _293, `true`
  br _731, ^730, ^548

730:
  %% Argument types:
  %%    _161 => {{'type', 'param', 1}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _161
  _289 = get_tuple_element _161, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _289
  _551 = bif:'=:=' _289, `#{<<"en">> => <<"Tests generics">>}`
  br _551, ^551, ^548

551:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _726 = bif:is_tuple _163
  br _726, ^726, ^553

726:
  %% Argument types:
  %%    _163 => {...}
  %% Aliased:
  %%    _163
  _727 = bif:tuple_size _163

  %% Argument types:
  %%    _727 => 0..16777215
  %% Unique:
  %%    _727
  _728 = bif:'=:=' _727, `5`
  br _728, ^725, ^553

725:
  %% Argument types:
  %%    _163 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _163
  _299 = get_tuple_element _163, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _299
  _724 = bif:'=:=' _299, `{type,natural_number,0}`
  br _724, ^724, ^553

724:
  %% Argument types:
  %%    _163 => {{'type', 'natural_number', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _163
  _297 = get_tuple_element _163, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _297
  _723 = bif:'=:=' _297, `[<<"natural_number()">>]`
  br _723, ^723, ^553

723:
  %% Argument types:
  %%    _163 => {{'type', 'natural_number', 0}, any(), nonempty_list(bitstring(128)), any(), any()}
  %% Aliased:
  %%    _163
  _296 = get_tuple_element _163, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _296
  _722 = bif:'=:=' _296, `none`
  br _722, ^721, ^553

721:
  %% Argument types:
  %%    _163 => {{'type', 'natural_number', 0}, any(), nonempty_list(bitstring(128)), 'none', any()}
  %% Aliased:
  %%    _163
  _295 = get_tuple_element _163, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _295
  _554 = bif:'=:=' _295, `#{equiv => <<"non_neg_integer/0">>,exported => true,since => "1.0"}`
  br _554, ^554, ^553

554:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _165
  _717 = bif:is_tuple _165
  br _717, ^717, ^556

717:
  %% Argument types:
  %%    _165 => {...}
  %% Aliased:
  %%    _165
  _718 = bif:tuple_size _165

  %% Argument types:
  %%    _718 => 0..16777215
  %% Unique:
  %%    _718
  _719 = bif:'=:=' _718, `5`
  br _719, ^716, ^556

716:
  %% Argument types:
  %%    _165 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _165
  _304 = get_tuple_element _165, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _304
  _715 = bif:'=:=' _304, `{type,name,1}`
  br _715, ^715, ^556

715:
  %% Argument types:
  %%    _165 => {{'type', 'name', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _165
  _302 = get_tuple_element _165, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _302
  _714 = bif:'=:=' _302, `[<<"name(_)">>]`
  br _714, ^714, ^556

714:
  %% Argument types:
  %%    _165 => {{'type', 'name', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _165
  _300 = get_tuple_element _165, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _300
  _713 = bif:is_map _300
  br _713, ^713, ^556

713:
  %% Argument types:
  %%    _300 => map()
  %% Aliased:
  %%    _300
  _305 = get_map_element _300, `exported`

  %% Aliased:
  %%    _305
  _557 = succeeded:guard _305
  br _557, ^557, ^556

557:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _305
  _712 = bif:'=:=' _305, `true`
  br _712, ^711, ^556

711:
  %% Argument types:
  %%    _165 => {{'type', 'name', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _165
  _301 = get_tuple_element _165, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _301
  _558 = bif:'=:=' _301, `#{<<"en">> => <<"Represents the name of a person.">>}`
  br _558, ^558, ^556

558:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _707 = bif:is_tuple _167
  br _707, ^707, ^560

707:
  %% Argument types:
  %%    _167 => {...}
  %% Aliased:
  %%    _167
  _708 = bif:tuple_size _167

  %% Argument types:
  %%    _708 => 0..16777215
  %% Unique:
  %%    _708
  _709 = bif:'=:=' _708, `5`
  br _709, ^706, ^560

706:
  %% Argument types:
  %%    _167 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _167
  _310 = get_tuple_element _167, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _310
  _705 = bif:'=:=' _310, `{type,hidden_included_type,0}`
  br _705, ^705, ^560

705:
  %% Argument types:
  %%    _167 => {{'type', 'hidden_included_type', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _167
  _307 = get_tuple_element _167, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _307
  _704 = bif:'=:=' _307, `hidden`
  br _704, ^703, ^560

703:
  %% Argument types:
  %%    _167 => {{'type', 'hidden_included_type', 0}, any(), any(), 'hidden', any()}
  %% Aliased:
  %%    _167
  _306 = get_tuple_element _167, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _306
  _702 = bif:is_map _306
  br _702, ^702, ^560

702:
  %% Argument types:
  %%    _306 => map()
  %% Aliased:
  %%    _306
  _311 = get_map_element _306, `exported`

  %% Aliased:
  %%    _311
  _561 = succeeded:guard _311
  br _561, ^561, ^560

561:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _311
  _701 = bif:'=:=' _311, `false`
  br _701, ^700, ^560

700:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _169
  _696 = bif:is_tuple _169
  br _696, ^696, ^563

696:
  %% Argument types:
  %%    _169 => {...}
  %% Aliased:
  %%    _169
  _697 = bif:tuple_size _169

  %% Argument types:
  %%    _697 => 0..16777215
  %% Unique:
  %%    _697
  _698 = bif:'=:=' _697, `5`
  br _698, ^695, ^563

695:
  %% Argument types:
  %%    _169 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _169
  _316 = get_tuple_element _169, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _316
  _694 = bif:'=:=' _316, `{function,uses_public,0}`
  br _694, ^694, ^563

694:
  %% Argument types:
  %%    _169 => {{'function', 'uses_public', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _169
  _315 = get_tuple_element _169, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _315
  _693 = bif:'=:=' _315, `{128,1}`
  br _693, ^693, ^563

693:
  %% Argument types:
  %%    _169 => {{'function', 'uses_public', 0}, {128, 1}, any(), any(), any()}
  %% Aliased:
  %%    _169
  _314 = get_tuple_element _169, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _314
  _692 = bif:'=:=' _314, `[<<"uses_public()">>]`
  br _692, ^692, ^563

692:
  %% Argument types:
  %%    _169 => {{'function', 'uses_public', 0}, {128, 1}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _169
  _313 = get_tuple_element _169, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _313
  _691 = bif:'=:=' _313, `none`
  br _691, ^690, ^563

690:
  %% Argument types:
  %%    _169 => {{'function', 'uses_public', 0}, {128, 1}, nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _169
  _312 = get_tuple_element _169, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _312
  _689 = bif:is_map _312
  br _689, ^689, ^563

689:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _685 = bif:is_tuple _171
  br _685, ^685, ^565

685:
  %% Argument types:
  %%    _171 => {...}
  %% Aliased:
  %%    _171
  _686 = bif:tuple_size _171

  %% Argument types:
  %%    _686 => 0..16777215
  %% Unique:
  %%    _686
  _687 = bif:'=:=' _686, `5`
  br _687, ^684, ^565

684:
  %% Argument types:
  %%    _171 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _171
  _321 = get_tuple_element _171, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _321
  _683 = bif:'=:=' _321, `{function,ignore_type_from_hidden_fun,0}`
  br _683, ^683, ^565

683:
  %% Argument types:
  %%    _171 => {{'function', 'ignore_type_from_hidden_fun', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _171
  _319 = get_tuple_element _171, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _319
  _682 = bif:'=:=' _319, `[<<"ignore_type_from_hidden_fun()">>]`
  br _682, ^682, ^565

682:
  %% Argument types:
  %%    _171 => {{'function', 'ignore_type_from_hidden_fun', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _171
  _318 = get_tuple_element _171, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _318
  _681 = bif:'=:=' _318, `hidden`
  br _681, ^680, ^565

680:
  %% Argument types:
  %%    _171 => {{'function', 'ignore_type_from_hidden_fun', 0}, any(), nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _171
  _317 = get_tuple_element _171, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _317
  _679 = bif:is_map _317
  br _679, ^679, ^565

679:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _173
  _675 = bif:is_tuple _173
  br _675, ^675, ^567

675:
  %% Argument types:
  %%    _173 => {...}
  %% Aliased:
  %%    _173
  _676 = bif:tuple_size _173

  %% Argument types:
  %%    _676 => 0..16777215
  %% Unique:
  %%    _676
  _677 = bif:'=:=' _676, `5`
  br _677, ^674, ^567

674:
  %% Argument types:
  %%    _173 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _173
  _326 = get_tuple_element _173, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _326
  _673 = bif:'=:=' _326, `{function,map_fun,0}`
  br _673, ^673, ^567

673:
  %% Argument types:
  %%    _173 => {{'function', 'map_fun', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _173
  _324 = get_tuple_element _173, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _324
  _672 = bif:'=:=' _324, `[<<"map_fun()">>]`
  br _672, ^672, ^567

672:
  %% Argument types:
  %%    _173 => {{'function', 'map_fun', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _173
  _323 = get_tuple_element _173, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _323
  _671 = bif:'=:=' _323, `none`
  br _671, ^670, ^567

670:
  %% Argument types:
  %%    _173 => {{'function', 'map_fun', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _173
  _322 = get_tuple_element _173, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _322
  _669 = bif:is_map _322
  br _669, ^669, ^567

669:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _175
  _665 = bif:is_tuple _175
  br _665, ^665, ^569

665:
  %% Argument types:
  %%    _175 => {...}
  %% Aliased:
  %%    _175
  _666 = bif:tuple_size _175

  %% Argument types:
  %%    _666 => 0..16777215
  %% Unique:
  %%    _666
  _667 = bif:'=:=' _666, `5`
  br _667, ^664, ^569

664:
  %% Argument types:
  %%    _175 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _175
  _331 = get_tuple_element _175, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _331
  _663 = bif:'=:=' _331, `{function,private_encoding_func,2}`
  br _663, ^663, ^569

663:
  %% Argument types:
  %%    _175 => {{'function', 'private_encoding_func', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _175
  _329 = get_tuple_element _175, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _329
  _662 = bif:'=:=' _329, `[<<"private_encoding_func(Data, Options)">>]`
  br _662, ^662, ^569

662:
  %% Argument types:
  %%    _175 => {{'function', 'private_encoding_func', 2}, any(), nonempty_list(bitstring(32)), any(), any()}
  %% Aliased:
  %%    _175
  _328 = get_tuple_element _175, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _328
  _661 = bif:'=:=' _328, `none`
  br _661, ^660, ^569

660:
  %% Argument types:
  %%    _175 => {{'function', 'private_encoding_func', 2}, any(), nonempty_list(bitstring(32)), 'none', any()}
  %% Aliased:
  %%    _175
  _327 = get_tuple_element _175, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _327
  _659 = bif:is_map _327
  br _659, ^659, ^569

659:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _177
  _655 = bif:is_tuple _177
  br _655, ^655, ^571

655:
  %% Argument types:
  %%    _177 => {...}
  %% Aliased:
  %%    _177
  _656 = bif:tuple_size _177

  %% Argument types:
  %%    _656 => 0..16777215
  %% Unique:
  %%    _656
  _657 = bif:'=:=' _656, `5`
  br _657, ^654, ^571

654:
  %% Argument types:
  %%    _177 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _177
  _336 = get_tuple_element _177, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _336
  _653 = bif:'=:=' _336, `{function,foo,0}`
  br _653, ^653, ^571

653:
  %% Argument types:
  %%    _177 => {{'function', 'foo', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _177
  _334 = get_tuple_element _177, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _334
  _652 = bif:'=:=' _334, `[<<"foo()">>]`
  br _652, ^652, ^571

652:
  %% Argument types:
  %%    _177 => {{'function', 'foo', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _177
  _333 = get_tuple_element _177, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _333
  _651 = bif:'=:=' _333, `none`
  br _651, ^650, ^571

650:
  %% Argument types:
  %%    _177 => {{'function', 'foo', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _177
  _332 = get_tuple_element _177, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _332
  _649 = bif:is_map _332
  br _649, ^649, ^571

649:
  %% Argument types:
  %%    _133 => {{'type', 'my_other_private_type', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _133
  _205 = get_tuple_element _133, `1`

  %% beam_doc_SUITE.erl:240
  %% Aliased:
  %%    _205
  _337 = call (`erl_anno`:`line`/1), _205

  %% Aliased:
  %%    _337
  _572 = succeeded:body _337
  br _572, ^572, ^1

572:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _337
  _575 = bif:'=:=' _337, `103`
  br _575, ^573, ^574

573:
  %% beam_doc_SUITE.erl:241
  %% Aliased:
  %%    _211
  _345 = call (`erl_anno`:`line`/1), _211

  %% Aliased:
  %%    _345
  _577 = succeeded:body _345
  br _577, ^577, ^1

577:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _345
  _580 = bif:'=:=' _345, `102`
  br _580, ^578, ^579

578:
  %% beam_doc_SUITE.erl:242
  %% Aliased:
  %%    _217
  _354 = call (`erl_anno`:`line`/1), _217

  %% Aliased:
  %%    _354
  _582 = succeeded:body _354
  br _582, ^582, ^1

582:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _354
  _585 = bif:'=:=' _354, `99`
  br _585, ^583, ^584

583:
  %% beam_doc_SUITE.erl:243
  %% Aliased:
  %%    _223
  _363 = call (`erl_anno`:`line`/1), _223

  %% Aliased:
  %%    _363
  _587 = succeeded:body _363
  br _587, ^587, ^1

587:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _363
  _590 = bif:'=:=' _363, `96`
  br _590, ^588, ^589

588:
  %% beam_doc_SUITE.erl:244
  %% Aliased:
  %%    _229
  _372 = call (`erl_anno`:`line`/1), _229

  %% Aliased:
  %%    _372
  _592 = succeeded:body _372
  br _592, ^592, ^1

592:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _372
  _595 = bif:'=:=' _372, `95`
  br _595, ^593, ^594

593:
  %% beam_doc_SUITE.erl:245
  %% Aliased:
  %%    _235
  _381 = call (`erl_anno`:`line`/1), _235

  %% Aliased:
  %%    _381
  _597 = succeeded:body _381
  br _597, ^597, ^1

597:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _381
  _600 = bif:'=:=' _381, `93`
  br _600, ^598, ^599

598:
  %% Aliased:
  %%    _111
  _647 = is_nonempty_list _111
  br _647, ^647, ^603

647:
  %% Argument types:
  %%    _111 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _111
  _391 = get_hd _111

  %% Argument types:
  %%    _111 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _111
  _390 = get_tl _111

  %% Argument types:
  %%    
  %% Aliased:
  %%    _391
  _644 = bif:is_tuple _391
  br _644, ^644, ^603

644:
  %% Argument types:
  %%    _391 => {...}
  %% Aliased:
  %%    _391
  _645 = bif:tuple_size _391

  %% Argument types:
  %%    _645 => 0..16777215
  %% Unique:
  %%    _645
  _646 = bif:'=:=' _645, `2`
  br _646, ^643, ^603

643:
  %% Argument types:
  %%    _391 => {any(), any()}
  %% Aliased:
  %%    _391
  _392 = get_tuple_element _391, `1`

  %% Aliased:
  %%    _390
  _642 = is_nonempty_list _390
  br _642, ^642, ^603

642:
  %% Argument types:
  %%    _390 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _390
  _395 = get_hd _390

  %% Argument types:
  %%    _390 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _390
  _394 = get_tl _390

  %% Argument types:
  %%    
  %% Aliased:
  %%    _395
  _639 = bif:is_tuple _395
  br _639, ^639, ^603

639:
  %% Argument types:
  %%    _395 => {...}
  %% Aliased:
  %%    _395
  _640 = bif:tuple_size _395

  %% Argument types:
  %%    _640 => 0..16777215
  %% Unique:
  %%    _640
  _641 = bif:'=:=' _640, `2`
  br _641, ^638, ^603

638:
  %% Argument types:
  %%    _395 => {any(), any()}
  %% Aliased:
  %%    _395
  _396 = get_tuple_element _395, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _394
  _637 = bif:'=:=' _394, `[]`
  br _637, ^637, ^603

637:
  %% Argument types:
  %%    _391 => {any(), any()}
  %% Aliased:
  %%    _391
  _393 = get_tuple_element _391, `0`

  %% beam_doc_SUITE.erl:248
  %% Aliased:
  %%    _393
  _398 = call (`filename`:`basename`/1), _393

  %% Aliased:
  %%    _398
  _604 = succeeded:body _398
  br _604, ^604, ^1

604:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _398
  _607 = bif:'=:=' _398, `"types_and_opaques.erl"`
  br _607, ^605, ^606

605:
  %% beam_doc_SUITE.erl:250
  %% Aliased:
  %%    _392
  _407 = call (`lists`:`nth`/2), `4`, _392

  %% Aliased:
  %%    _407
  _609 = succeeded:body _407
  br _609, ^609, ^1

609:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _407
  _612 = bif:'=:=' _407, `{{117,2},beam_doc,{hidden_type_used_in_exported_fun,{hidden_type,0}}}`
  br _612, ^610, ^611

610:
  %% Argument types:
  %%    _395 => {any(), any()}
  %% Aliased:
  %%    _395
  _397 = get_tuple_element _395, `0`

  %% beam_doc_SUITE.erl:252
  %% Aliased:
  %%    _397
  _416 = call (`filename`:`basename`/1), _397

  %% Aliased:
  %%    _416
  _614 = succeeded:body _416
  br _614, ^614, ^1

614:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _416
  _617 = bif:'=:=' _416, `"types_and_opaques.hrl"`
  br _617, ^615, ^616

615:
  %% beam_doc_SUITE.erl:254
  %% Aliased:
  %%    _396
  _425 = call (`lists`:`nth`/2), `1`, _396

  %% Aliased:
  %%    _425
  _619 = succeeded:body _425
  br _619, ^619, ^1

619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _425
  _622 = bif:'=:=' _425, `{{1,2},beam_doc,{hidden_type_used_in_exported_fun,{hidden_included_type,0}}}`
  br _622, ^620, ^621

620:
  %% beam_doc_SUITE.erl:257
  %% Aliased:
  %%    _0
  _434 = call (`default_compile_file`/3), _0, `"types_and_opaques"`, `[return_warnings,nowarn_hidden_doc,nowarn_unused_type]`

  %% Aliased:
  %%    _434
  _624 = succeeded:body _434
  br _624, ^624, ^1

624:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _434
  _633 = is_tagged_tuple _434, `3`, `ok`
  br _633, ^630, ^626

630:
  %% Argument types:
  %%    _434 => {'ok', any(), any()}
  %% Aliased:
  %%    _434
  _435 = get_tuple_element _434, `2`

  %% Aliased:
  %%    _435
  _629 = is_nonempty_list _435
  br _629, ^629, ^626

629:
  %% Argument types:
  %%    _435 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _435
  _438 = get_tl _435

  %% Argument types:
  %%    
  %% Aliased:
  %%    _438
  _628 = bif:'=:=' _438, `[]`
  br _628, ^628, ^626

628:
  %% Argument types:
  %%    _434 => {'ok', any(), any()}
  %% Aliased:
  %%    _434
  _436 = get_tuple_element _434, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112, 
  %%    _436
  _627 = bif:'=:=' _436, _112
  br _627, ^627, ^626

627:
  %% Result type:
  %%    'ok'
  ret `ok`

626:
  %% beam_doc_SUITE.erl:256
  %% Aliased:
  %%    _434
  _450 = match_fail `badmatch`, _434

  %% Unique:
  %%    _450
  _636 = succeeded:body _450
  br ^1

621:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _425
  _427 = put_tuple `value`, _425

  %% Argument types:
  %%    _427 => {'value', any()}
  %% Unique:
  %%    _427
  _428 = put_list _427, `[]`

  %% Argument types:
  %%    _428 => nonempty_list({'value', any()})
  %% Unique:
  %%    _428
  _429 = put_list `{expected,{{1,2},
            beam_doc,
            {hidden_type_used_in_exported_fun,{hidden_included_type,0}}}}`, _428

  %% Argument types:
  %%    _429 => nonempty_list({'expected', {{1, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_included_type', 0}}}} | {'value', any()})
  %% Unique:
  %%    _429
  _430 = put_list `{expression,"lists : nth ( 1 , HrlWs )"}`, _429

  %% Argument types:
  %%    _430 => nonempty_list({'expected', {{1, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_included_type', 0}}}} | {'expression', nonempty_list(32..116)} | {'value', any()})
  %% Unique:
  %%    _430
  _431 = put_list `{line,254}`, _430

  %% Argument types:
  %%    _431 => nonempty_list({'expected', {{1, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_included_type', 0}}}} | {'expression', nonempty_list(32..116)} | {'line', 254} | {'value', any()})
  %% Unique:
  %%    _431
  _432 = put_list `{module,beam_doc_SUITE}`, _431

  %% Argument types:
  %%    _432 => nonempty_list({'expected', {{1, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_included_type', 0}}}} | {'expression', nonempty_list(32..116)} | {'line', 254} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _432
  _433 = put_tuple `assertEqual`, _432

  %% beam_doc_SUITE.erl:254
  %% Unique:
  %%    _433
  _449 = call (`erlang`:`error`/1), _433

  %% Aliased:
  %%    _449
  _623 = succeeded:body _449
  br ^1

616:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _416
  _418 = put_tuple `value`, _416

  %% Argument types:
  %%    _418 => {'value', any()}
  %% Unique:
  %%    _418
  _419 = put_list _418, `[]`

  %% Argument types:
  %%    _419 => nonempty_list({'value', any()})
  %% Unique:
  %%    _419
  _420 = put_list `{expected,"types_and_opaques.hrl"}`, _419

  %% Argument types:
  %%    _420 => nonempty_list({'expected', nonempty_list(46..121)} | {'value', any()})
  %% Unique:
  %%    _420
  _421 = put_list `{expression,"filename : basename ( HrlFile )"}`, _420

  %% Argument types:
  %%    _421 => nonempty_list({'expected', nonempty_list(46..121)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _421
  _422 = put_list `{line,252}`, _421

  %% Argument types:
  %%    _422 => nonempty_list({'expected', nonempty_list(46..121)} | {'expression', nonempty_list(32..115)} | {'line', 252} | {'value', any()})
  %% Unique:
  %%    _422
  _423 = put_list `{module,beam_doc_SUITE}`, _422

  %% Argument types:
  %%    _423 => nonempty_list({'expected', nonempty_list(46..121)} | {'expression', nonempty_list(32..115)} | {'line', 252} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _423
  _424 = put_tuple `assertEqual`, _423

  %% beam_doc_SUITE.erl:252
  %% Unique:
  %%    _424
  _448 = call (`erlang`:`error`/1), _424

  %% Aliased:
  %%    _448
  _618 = succeeded:body _448
  br ^1

611:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _407
  _409 = put_tuple `value`, _407

  %% Argument types:
  %%    _409 => {'value', any()}
  %% Unique:
  %%    _409
  _410 = put_list _409, `[]`

  %% Argument types:
  %%    _410 => nonempty_list({'value', any()})
  %% Unique:
  %%    _410
  _411 = put_list `{expected,{{117,2},
            beam_doc,
            {hidden_type_used_in_exported_fun,{hidden_type,0}}}}`, _410

  %% Argument types:
  %%    _411 => nonempty_list({'expected', {{117, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_type', 0}}}} | {'value', any()})
  %% Unique:
  %%    _411
  _412 = put_list `{expression,"lists : nth ( 4 , Ws )"}`, _411

  %% Argument types:
  %%    _412 => nonempty_list({'expected', {{117, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_type', 0}}}} | {'expression', nonempty_list(32..116)} | {'value', any()})
  %% Unique:
  %%    _412
  _413 = put_list `{line,250}`, _412

  %% Argument types:
  %%    _413 => nonempty_list({'expected', {{117, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_type', 0}}}} | {'expression', nonempty_list(32..116)} | {'line', 250} | {'value', any()})
  %% Unique:
  %%    _413
  _414 = put_list `{module,beam_doc_SUITE}`, _413

  %% Argument types:
  %%    _414 => nonempty_list({'expected', {{117, 2}, 'beam_doc', {'hidden_type_used_in_exported_fun', {'hidden_type', 0}}}} | {'expression', nonempty_list(32..116)} | {'line', 250} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _414
  _415 = put_tuple `assertEqual`, _414

  %% beam_doc_SUITE.erl:250
  %% Unique:
  %%    _415
  _447 = call (`erlang`:`error`/1), _415

  %% Aliased:
  %%    _447
  _613 = succeeded:body _447
  br ^1

606:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _398
  _400 = put_tuple `value`, _398

  %% Argument types:
  %%    _400 => {'value', any()}
  %% Unique:
  %%    _400
  _401 = put_list _400, `[]`

  %% Argument types:
  %%    _401 => nonempty_list({'value', any()})
  %% Unique:
  %%    _401
  _402 = put_list `{expected,"types_and_opaques.erl"}`, _401

  %% Argument types:
  %%    _402 => nonempty_list({'expected', nonempty_list(46..121)} | {'value', any()})
  %% Unique:
  %%    _402
  _403 = put_list `{expression,"filename : basename ( File )"}`, _402

  %% Argument types:
  %%    _403 => nonempty_list({'expected', nonempty_list(46..121)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _403
  _404 = put_list `{line,248}`, _403

  %% Argument types:
  %%    _404 => nonempty_list({'expected', nonempty_list(46..121)} | {'expression', nonempty_list(32..115)} | {'line', 248} | {'value', any()})
  %% Unique:
  %%    _404
  _405 = put_list `{module,beam_doc_SUITE}`, _404

  %% Argument types:
  %%    _405 => nonempty_list({'expected', nonempty_list(46..121)} | {'expression', nonempty_list(32..115)} | {'line', 248} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _405
  _406 = put_tuple `assertEqual`, _405

  %% beam_doc_SUITE.erl:248
  %% Unique:
  %%    _406
  _446 = call (`erlang`:`error`/1), _406

  %% Aliased:
  %%    _446
  _608 = succeeded:body _446
  br ^1

603:
  %% beam_doc_SUITE.erl:247
  %% Aliased:
  %%    _111
  _451 = match_fail `badmatch`, _111

  %% Unique:
  %%    _451
  _648 = succeeded:body _451
  br ^1

599:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _381
  _383 = put_tuple `value`, _381

  %% Argument types:
  %%    _383 => {'value', any()}
  %% Unique:
  %%    _383
  _384 = put_list _383, `[]`

  %% Argument types:
  %%    _384 => nonempty_list({'value', any()})
  %% Unique:
  %%    _384
  _385 = put_list `{expected,93}`, _384

  %% Argument types:
  %%    _385 => nonempty_list({'expected', 93} | {'value', any()})
  %% Unique:
  %%    _385
  _386 = put_list `{expression,"erl_anno : line ( CallbackResultLine )"}`, _385

  %% Argument types:
  %%    _386 => nonempty_list({'expected', 93} | {'expression', nonempty_list(32..117)} | {'value', any()})
  %% Unique:
  %%    _386
  _387 = put_list `{line,245}`, _386

  %% Argument types:
  %%    _387 => nonempty_list({'expected', 93} | {'expression', nonempty_list(32..117)} | {'line', 245} | {'value', any()})
  %% Unique:
  %%    _387
  _388 = put_list `{module,beam_doc_SUITE}`, _387

  %% Argument types:
  %%    _388 => nonempty_list({'expected', 93} | {'expression', nonempty_list(32..117)} | {'line', 245} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _388
  _389 = put_tuple `assertEqual`, _388

  %% beam_doc_SUITE.erl:245
  %% Unique:
  %%    _389
  _445 = call (`erlang`:`error`/1), _389

  %% Aliased:
  %%    _445
  _601 = succeeded:body _445
  br ^1

594:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _372
  _374 = put_tuple `value`, _372

  %% Argument types:
  %%    _374 => {'value', any()}
  %% Unique:
  %%    _374
  _375 = put_list _374, `[]`

  %% Argument types:
  %%    _375 => nonempty_list({'value', any()})
  %% Unique:
  %%    _375
  _376 = put_list `{expected,95}`, _375

  %% Argument types:
  %%    _376 => nonempty_list({'expected', 95} | {'value', any()})
  %% Unique:
  %%    _376
  _377 = put_list `{expression,"erl_anno : line ( CallbackModeLine )"}`, _376

  %% Argument types:
  %%    _377 => nonempty_list({'expected', 95} | {'expression', nonempty_list(32..114)} | {'value', any()})
  %% Unique:
  %%    _377
  _378 = put_list `{line,244}`, _377

  %% Argument types:
  %%    _378 => nonempty_list({'expected', 95} | {'expression', nonempty_list(32..114)} | {'line', 244} | {'value', any()})
  %% Unique:
  %%    _378
  _379 = put_list `{module,beam_doc_SUITE}`, _378

  %% Argument types:
  %%    _379 => nonempty_list({'expected', 95} | {'expression', nonempty_list(32..114)} | {'line', 244} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _379
  _380 = put_tuple `assertEqual`, _379

  %% beam_doc_SUITE.erl:244
  %% Unique:
  %%    _380
  _444 = call (`erlang`:`error`/1), _380

  %% Aliased:
  %%    _444
  _596 = succeeded:body _444
  br ^1

589:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _363
  _365 = put_tuple `value`, _363

  %% Argument types:
  %%    _365 => {'value', any()}
  %% Unique:
  %%    _365
  _366 = put_list _365, `[]`

  %% Argument types:
  %%    _366 => nonempty_list({'value', any()})
  %% Unique:
  %%    _366
  _367 = put_list `{expected,96}`, _366

  %% Argument types:
  %%    _367 => nonempty_list({'expected', 96} | {'value', any()})
  %% Unique:
  %%    _367
  _368 = put_list `{expression,"erl_anno : line ( StateEnterLine )"}`, _367

  %% Argument types:
  %%    _368 => nonempty_list({'expected', 96} | {'expression', nonempty_list(32..116)} | {'value', any()})
  %% Unique:
  %%    _368
  _369 = put_list `{line,243}`, _368

  %% Argument types:
  %%    _369 => nonempty_list({'expected', 96} | {'expression', nonempty_list(32..116)} | {'line', 243} | {'value', any()})
  %% Unique:
  %%    _369
  _370 = put_list `{module,beam_doc_SUITE}`, _369

  %% Argument types:
  %%    _370 => nonempty_list({'expected', 96} | {'expression', nonempty_list(32..116)} | {'line', 243} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _370
  _371 = put_tuple `assertEqual`, _370

  %% beam_doc_SUITE.erl:243
  %% Unique:
  %%    _371
  _443 = call (`erlang`:`error`/1), _371

  %% Aliased:
  %%    _443
  _591 = succeeded:body _443
  br ^1

584:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _354
  _356 = put_tuple `value`, _354

  %% Argument types:
  %%    _356 => {'value', any()}
  %% Unique:
  %%    _356
  _357 = put_list _356, `[]`

  %% Argument types:
  %%    _357 => nonempty_list({'value', any()})
  %% Unique:
  %%    _357
  _358 = put_list `{expected,99}`, _357

  %% Argument types:
  %%    _358 => nonempty_list({'expected', 99} | {'value', any()})
  %% Unique:
  %%    _358
  _359 = put_list `{expression,"erl_anno : line ( MyMapLine )"}`, _358

  %% Argument types:
  %%    _359 => nonempty_list({'expected', 99} | {'expression', nonempty_list(32..121)} | {'value', any()})
  %% Unique:
  %%    _359
  _360 = put_list `{line,242}`, _359

  %% Argument types:
  %%    _360 => nonempty_list({'expected', 99} | {'expression', nonempty_list(32..121)} | {'line', 242} | {'value', any()})
  %% Unique:
  %%    _360
  _361 = put_list `{module,beam_doc_SUITE}`, _360

  %% Argument types:
  %%    _361 => nonempty_list({'expected', 99} | {'expression', nonempty_list(32..121)} | {'line', 242} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _361
  _362 = put_tuple `assertEqual`, _361

  %% beam_doc_SUITE.erl:242
  %% Unique:
  %%    _362
  _442 = call (`erlang`:`error`/1), _362

  %% Aliased:
  %%    _442
  _586 = succeeded:body _442
  br ^1

579:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _345
  _347 = put_tuple `value`, _345

  %% Argument types:
  %%    _347 => {'value', any()}
  %% Unique:
  %%    _347
  _348 = put_list _347, `[]`

  %% Argument types:
  %%    _348 => nonempty_list({'value', any()})
  %% Unique:
  %%    _348
  _349 = put_list `{expected,102}`, _348

  %% Argument types:
  %%    _349 => nonempty_list({'expected', 102} | {'value', any()})
  %% Unique:
  %%    _349
  _350 = put_list `{expression,"erl_anno : line ( MyPrivateTypeLine )"}`, _349

  %% Argument types:
  %%    _350 => nonempty_list({'expected', 102} | {'expression', nonempty_list(32..121)} | {'value', any()})
  %% Unique:
  %%    _350
  _351 = put_list `{line,241}`, _350

  %% Argument types:
  %%    _351 => nonempty_list({'expected', 102} | {'expression', nonempty_list(32..121)} | {'line', 241} | {'value', any()})
  %% Unique:
  %%    _351
  _352 = put_list `{module,beam_doc_SUITE}`, _351

  %% Argument types:
  %%    _352 => nonempty_list({'expected', 102} | {'expression', nonempty_list(32..121)} | {'line', 241} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _352
  _353 = put_tuple `assertEqual`, _352

  %% beam_doc_SUITE.erl:241
  %% Unique:
  %%    _353
  _441 = call (`erlang`:`error`/1), _353

  %% Aliased:
  %%    _441
  _581 = succeeded:body _441
  br ^1

574:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _337
  _338 = put_tuple `value`, _337

  %% Argument types:
  %%    _338 => {'value', any()}
  %% Unique:
  %%    _338
  _339 = put_list _338, `[]`

  %% Argument types:
  %%    _339 => nonempty_list({'value', any()})
  %% Unique:
  %%    _339
  _340 = put_list `{expected,103}`, _339

  %% Argument types:
  %%    _340 => nonempty_list({'expected', 103} | {'value', any()})
  %% Unique:
  %%    _340
  _341 = put_list `{expression,"erl_anno : line ( MyOtherPrivateTypeLine )"}`, _340

  %% Argument types:
  %%    _341 => nonempty_list({'expected', 103} | {'expression', nonempty_list(32..121)} | {'value', any()})
  %% Unique:
  %%    _341
  _342 = put_list `{line,240}`, _341

  %% Argument types:
  %%    _342 => nonempty_list({'expected', 103} | {'expression', nonempty_list(32..121)} | {'line', 240} | {'value', any()})
  %% Unique:
  %%    _342
  _343 = put_list `{module,beam_doc_SUITE}`, _342

  %% Argument types:
  %%    _343 => nonempty_list({'expected', 103} | {'expression', nonempty_list(32..121)} | {'line', 240} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _343
  _344 = put_tuple `assertEqual`, _343

  %% beam_doc_SUITE.erl:240
  %% Unique:
  %%    _344
  _440 = call (`erlang`:`error`/1), _344

  %% Aliased:
  %%    _440
  _576 = succeeded:body _440
  br ^1

571:
  %% beam_doc_SUITE.erl:238
  %% Aliased:
  %%    _177
  _452 = match_fail `badmatch`, _177

  %% Unique:
  %%    _452
  _658 = succeeded:body _452
  br ^1

569:
  %% beam_doc_SUITE.erl:237
  %% Aliased:
  %%    _175
  _453 = match_fail `badmatch`, _175

  %% Unique:
  %%    _453
  _668 = succeeded:body _453
  br ^1

567:
  %% beam_doc_SUITE.erl:236
  %% Aliased:
  %%    _173
  _454 = match_fail `badmatch`, _173

  %% Unique:
  %%    _454
  _678 = succeeded:body _454
  br ^1

565:
  %% beam_doc_SUITE.erl:235
  %% Aliased:
  %%    _171
  _455 = match_fail `badmatch`, _171

  %% Unique:
  %%    _455
  _688 = succeeded:body _455
  br ^1

563:
  %% beam_doc_SUITE.erl:234
  %% Aliased:
  %%    _169
  _456 = match_fail `badmatch`, _169

  %% Unique:
  %%    _456
  _699 = succeeded:body _456
  br ^1

560:
  %% beam_doc_SUITE.erl:232
  %% Aliased:
  %%    _167
  _457 = match_fail `badmatch`, _167

  %% Unique:
  %%    _457
  _710 = succeeded:body _457
  br ^1

556:
  %% beam_doc_SUITE.erl:231
  %% Aliased:
  %%    _165
  _458 = match_fail `badmatch`, _165

  %% Unique:
  %%    _458
  _720 = succeeded:body _458
  br ^1

553:
  %% beam_doc_SUITE.erl:230
  %% Aliased:
  %%    _163
  _459 = match_fail `badmatch`, _163

  %% Unique:
  %%    _459
  _729 = succeeded:body _459
  br ^1

548:
  %% beam_doc_SUITE.erl:228
  %% Aliased:
  %%    _161
  _460 = match_fail `badmatch`, _161

  %% Unique:
  %%    _460
  _740 = succeeded:body _460
  br ^1

543:
  %% beam_doc_SUITE.erl:226
  %% Aliased:
  %%    _159
  _461 = match_fail `badmatch`, _159

  %% Unique:
  %%    _461
  _752 = succeeded:body _461
  br ^1

539:
  %% beam_doc_SUITE.erl:225
  %% Aliased:
  %%    _157
  _462 = match_fail `badmatch`, _157

  %% Unique:
  %%    _462
  _759 = succeeded:body _462
  br ^1

535:
  %% beam_doc_SUITE.erl:223
  %% Aliased:
  %%    _155
  _463 = match_fail `badmatch`, _155

  %% Unique:
  %%    _463
  _772 = succeeded:body _463
  br ^1

532:
  %% beam_doc_SUITE.erl:222
  %% Aliased:
  %%    _153
  _464 = match_fail `badmatch`, _153

  %% Unique:
  %%    _464
  _784 = succeeded:body _464
  br ^1

529:
  %% beam_doc_SUITE.erl:221
  %% Aliased:
  %%    _151
  _465 = match_fail `badmatch`, _151

  %% Unique:
  %%    _465
  _796 = succeeded:body _465
  br ^1

526:
  %% beam_doc_SUITE.erl:220
  %% Aliased:
  %%    _149
  _466 = match_fail `badmatch`, _149

  %% Unique:
  %%    _466
  _808 = succeeded:body _466
  br ^1

523:
  %% beam_doc_SUITE.erl:219
  %% Aliased:
  %%    _147
  _467 = match_fail `badmatch`, _147

  %% Unique:
  %%    _467
  _820 = succeeded:body _467
  br ^1

520:
  %% beam_doc_SUITE.erl:218
  %% Aliased:
  %%    _145
  _468 = match_fail `badmatch`, _145

  %% Unique:
  %%    _468
  _832 = succeeded:body _468
  br ^1

517:
  %% beam_doc_SUITE.erl:216
  %% Aliased:
  %%    _143
  _469 = match_fail `badmatch`, _143

  %% Unique:
  %%    _469
  _844 = succeeded:body _469
  br ^1

514:
  %% beam_doc_SUITE.erl:215
  %% Aliased:
  %%    _141
  _470 = match_fail `badmatch`, _141

  %% Unique:
  %%    _470
  _856 = succeeded:body _470
  br ^1

511:
  %% beam_doc_SUITE.erl:214
  %% Aliased:
  %%    _139
  _471 = match_fail `badmatch`, _139

  %% Unique:
  %%    _471
  _868 = succeeded:body _471
  br ^1

508:
  %% beam_doc_SUITE.erl:213
  %% Aliased:
  %%    _137
  _472 = match_fail `badmatch`, _137

  %% Unique:
  %%    _472
  _880 = succeeded:body _472
  br ^1

505:
  %% beam_doc_SUITE.erl:211
  %% Aliased:
  %%    _135
  _473 = match_fail `badmatch`, _135

  %% Unique:
  %%    _473
  _892 = succeeded:body _473
  br ^1

502:
  %% beam_doc_SUITE.erl:209
  %% Aliased:
  %%    _133
  _474 = match_fail `badmatch`, _133

  %% Unique:
  %%    _474
  _904 = succeeded:body _474
  br ^1

499:
  %% beam_doc_SUITE.erl:208
  %% Aliased:
  %%    _131
  _475 = match_fail `badmatch`, _131

  %% Unique:
  %%    _475
  _917 = succeeded:body _475
  br ^1

496:
  %% beam_doc_SUITE.erl:207
  %% Aliased:
  %%    _129
  _476 = match_fail `badmatch`, _129

  %% Unique:
  %%    _476
  _930 = succeeded:body _476
  br ^1

493:
  %% beam_doc_SUITE.erl:206
  %% Aliased:
  %%    _127
  _477 = match_fail `badmatch`, _127

  %% Unique:
  %%    _477
  _943 = succeeded:body _477
  br ^1

490:
  %% beam_doc_SUITE.erl:205
  %% Aliased:
  %%    _125
  _478 = match_fail `badmatch`, _125

  %% Unique:
  %%    _478
  _956 = succeeded:body _478
  br ^1

488:
  %% beam_doc_SUITE.erl:195
  %% Aliased:
  %%    _114
  _479 = match_fail `badmatch`, _114

  %% Unique:
  %%    _479
  _999 = succeeded:body _479
  br ^1

485:
  %% beam_doc_SUITE.erl:186
  %% Aliased:
  %%    _110
  _480 = match_fail `badmatch`, _110

  %% Unique:
  %%    _480
  _1006 = succeeded:body _480
  br ^1

1:
  _481 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _481
}

%% beam_doc_SUITE.erl:261
%% Counter = 394
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`callback`(_0) {
0:
  %% beam_doc_SUITE.erl:264
  %% Aliased:
  %%    _0
  _45 = call (`default_compile_file`/3), _0, `"callback"`, `[return_warnings,report]`

  %% Aliased:
  %%    _45
  _193 = succeeded:body _45
  br _193, ^193, ^1

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _378 = is_tagged_tuple _45, `3`, `ok`
  br _378, ^375, ^195

375:
  %% Argument types:
  %%    _45 => {'ok', any(), any()}
  %% Aliased:
  %%    _45
  _46 = get_tuple_element _45, `2`

  %% Aliased:
  %%    _46
  _374 = is_nonempty_list _46
  br _374, ^374, ^195

374:
  %% Argument types:
  %%    _46 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _46
  _50 = get_hd _46

  %% Argument types:
  %%    _46 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _46
  _49 = get_tl _46

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _371 = bif:is_tuple _50
  br _371, ^371, ^195

371:
  %% Argument types:
  %%    _50 => {...}
  %% Aliased:
  %%    _50
  _372 = bif:tuple_size _50

  %% Argument types:
  %%    _372 => 0..16777215
  %% Unique:
  %%    _372
  _373 = bif:'=:=' _372, `2`
  br _373, ^370, ^195

370:
  %% Argument types:
  %%    _50 => {any(), any()}
  %% Aliased:
  %%    _50
  _51 = get_tuple_element _50, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _369 = bif:'=:=' _49, `[]`
  br _369, ^369, ^195

369:
  %% Argument types:
  %%    _45 => {'ok', any(), any()}
  %% Aliased:
  %%    _45
  _47 = get_tuple_element _45, `1`

  %% beam_doc_SUITE.erl:286
  %% Aliased:
  %%    _47
  _53 = call (`code`:`get_doc`/1), _47

  %% Aliased:
  %%    _53
  _196 = succeeded:body _53
  br _196, ^196, ^1

196:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _365 = is_tagged_tuple _53, `2`, `ok`
  br _365, ^362, ^198

362:
  %% Argument types:
  %%    _53 => {'ok', any()}
  %% Aliased:
  %%    _53
  _54 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _359 = is_tagged_tuple _54, `7`, `docs_v1`
  br _359, ^356, ^198

356:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _54
  _58 = get_tuple_element _54, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _355 = bif:'=:=' _58, `none`
  br _355, ^354, ^198

354:
  %% Argument types:
  %%    _54 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _54
  _56 = get_tuple_element _54, `6`

  %% Aliased:
  %%    _56
  _353 = is_nonempty_list _56
  br _353, ^353, ^198

353:
  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _64 = get_hd _56

  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _63 = get_tl _56

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _350 = bif:is_tuple _64
  br _350, ^350, ^198

350:
  %% Argument types:
  %%    _64 => {...}
  %% Aliased:
  %%    _64
  _351 = bif:tuple_size _64

  %% Argument types:
  %%    _351 => 0..16777215
  %% Unique:
  %%    _351
  _352 = bif:'=:=' _351, `5`
  br _352, ^349, ^198

349:
  %% Argument types:
  %%    _64 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _64
  _69 = get_tuple_element _64, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _348 = bif:'=:=' _69, `{callback,nowarn,1}`
  br _348, ^348, ^198

348:
  %% Argument types:
  %%    _64 => {{'callback', 'nowarn', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _64
  _68 = get_tuple_element _64, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _347 = bif:'=:=' _68, `{39,2}`
  br _347, ^347, ^198

347:
  %% Argument types:
  %%    _64 => {{'callback', 'nowarn', 1}, {39, 2}, any(), any(), any()}
  %% Aliased:
  %%    _64
  _67 = get_tuple_element _64, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _346 = bif:'=:=' _67, `[<<"nowarn(Arg)">>]`
  br _346, ^346, ^198

346:
  %% Argument types:
  %%    _64 => {{'callback', 'nowarn', 1}, {39, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _64
  _66 = get_tuple_element _64, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _345 = bif:'=:=' _66, `hidden`
  br _345, ^344, ^198

344:
  %% Argument types:
  %%    _64 => {{'callback', 'nowarn', 1}, {39, 2}, nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _64
  _65 = get_tuple_element _64, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _343 = bif:is_map _65
  br _343, ^343, ^198

343:
  %% Aliased:
  %%    _63
  _342 = is_nonempty_list _63
  br _342, ^342, ^198

342:
  %% Argument types:
  %%    _63 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _63
  _71 = get_hd _63

  %% Argument types:
  %%    _63 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _63
  _70 = get_tl _63

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _339 = bif:is_tuple _71
  br _339, ^339, ^198

339:
  %% Argument types:
  %%    _71 => {...}
  %% Aliased:
  %%    _71
  _340 = bif:tuple_size _71

  %% Argument types:
  %%    _340 => 0..16777215
  %% Unique:
  %%    _340
  _341 = bif:'=:=' _340, `5`
  br _341, ^338, ^198

338:
  %% Argument types:
  %%    _71 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _71
  _76 = get_tuple_element _71, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _337 = bif:'=:=' _76, `{callback,warn,0}`
  br _337, ^337, ^198

337:
  %% Argument types:
  %%    _71 => {{'callback', 'warn', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _71
  _75 = get_tuple_element _71, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _336 = bif:'=:=' _75, `{36,2}`
  br _336, ^336, ^198

336:
  %% Argument types:
  %%    _71 => {{'callback', 'warn', 0}, {36, 2}, any(), any(), any()}
  %% Aliased:
  %%    _71
  _74 = get_tuple_element _71, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _335 = bif:'=:=' _74, `[<<"warn()">>]`
  br _335, ^335, ^198

335:
  %% Argument types:
  %%    _71 => {{'callback', 'warn', 0}, {36, 2}, nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _71
  _73 = get_tuple_element _71, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _334 = bif:'=:=' _73, `hidden`
  br _334, ^333, ^198

333:
  %% Argument types:
  %%    _71 => {{'callback', 'warn', 0}, {36, 2}, nonempty_list(bitstring(16)), 'hidden', any()}
  %% Aliased:
  %%    _71
  _72 = get_tuple_element _71, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _332 = bif:is_map _72
  br _332, ^332, ^198

332:
  %% Aliased:
  %%    _70
  _331 = is_nonempty_list _70
  br _331, ^331, ^198

331:
  %% Argument types:
  %%    _70 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _70
  _78 = get_hd _70

  %% Argument types:
  %%    _70 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _70
  _77 = get_tl _70

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _328 = bif:is_tuple _78
  br _328, ^328, ^198

328:
  %% Argument types:
  %%    _78 => {...}
  %% Aliased:
  %%    _78
  _329 = bif:tuple_size _78

  %% Argument types:
  %%    _329 => 0..16777215
  %% Unique:
  %%    _329
  _330 = bif:'=:=' _329, `5`
  br _330, ^327, ^198

327:
  %% Argument types:
  %%    _78 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _78
  _83 = get_tuple_element _78, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _326 = bif:'=:=' _83, `{callback,bounded,1}`
  br _326, ^326, ^198

326:
  %% Argument types:
  %%    _78 => {{'callback', 'bounded', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _78
  _81 = get_tuple_element _78, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _325 = bif:'=:=' _81, `[<<"bounded(X)">>]`
  br _325, ^325, ^198

325:
  %% Argument types:
  %%    _78 => {{'callback', 'bounded', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _78
  _80 = get_tuple_element _78, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _324 = bif:'=:=' _80, `none`
  br _324, ^323, ^198

323:
  %% Argument types:
  %%    _78 => {{'callback', 'bounded', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _78
  _79 = get_tuple_element _78, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _322 = bif:is_map _79
  br _322, ^322, ^198

322:
  %% Aliased:
  %%    _77
  _321 = is_nonempty_list _77
  br _321, ^321, ^198

321:
  %% Argument types:
  %%    _77 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _77
  _85 = get_hd _77

  %% Argument types:
  %%    _77 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _77
  _84 = get_tl _77

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _318 = bif:is_tuple _85
  br _318, ^318, ^198

318:
  %% Argument types:
  %%    _85 => {...}
  %% Aliased:
  %%    _85
  _319 = bif:tuple_size _85

  %% Argument types:
  %%    _319 => 0..16777215
  %% Unique:
  %%    _319
  _320 = bif:'=:=' _319, `5`
  br _320, ^317, ^198

317:
  %% Argument types:
  %%    _85 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _85
  _90 = get_tuple_element _85, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _316 = bif:'=:=' _90, `{callback,multi,1}`
  br _316, ^316, ^198

316:
  %% Argument types:
  %%    _85 => {{'callback', 'multi', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _85
  _88 = get_tuple_element _85, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _315 = bif:'=:=' _88, `[<<"multi(Argument)">>]`
  br _315, ^315, ^198

315:
  %% Argument types:
  %%    _85 => {{'callback', 'multi', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _85
  _87 = get_tuple_element _85, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _314 = bif:is_map _87
  br _314, ^314, ^198

314:
  %% Argument types:
  %%    _87 => map()
  %% Aliased:
  %%    _87
  _91 = get_map_element _87, `<<"en">>`

  %% Aliased:
  %%    _91
  _199 = succeeded:guard _91
  br _199, ^199, ^198

199:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _313 = bif:'=:=' _91, `<<"A multiclause callback with slogan docs">>`
  br _313, ^313, ^198

313:
  %% Argument types:
  %%    _85 => {{'callback', 'multi', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _85
  _86 = get_tuple_element _85, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _312 = bif:is_map _86
  br _312, ^312, ^198

312:
  %% Aliased:
  %%    _84
  _311 = is_nonempty_list _84
  br _311, ^311, ^198

311:
  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _93 = get_hd _84

  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _92 = get_tl _84

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _308 = bif:is_tuple _93
  br _308, ^308, ^198

308:
  %% Argument types:
  %%    _93 => {...}
  %% Aliased:
  %%    _93
  _309 = bif:tuple_size _93

  %% Argument types:
  %%    _309 => 0..16777215
  %% Unique:
  %%    _309
  _310 = bif:'=:=' _309, `5`
  br _310, ^307, ^198

307:
  %% Argument types:
  %%    _93 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _93
  _98 = get_tuple_element _93, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _306 = bif:'=:=' _98, `{callback,multi_no_slogan,1}`
  br _306, ^306, ^198

306:
  %% Argument types:
  %%    _93 => {{'callback', 'multi_no_slogan', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _93
  _96 = get_tuple_element _93, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _305 = bif:'=:=' _96, `[<<"multi_no_slogan/1">>]`
  br _305, ^305, ^198

305:
  %% Argument types:
  %%    _93 => {{'callback', 'multi_no_slogan', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _93
  _95 = get_tuple_element _93, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _304 = bif:'=:=' _95, `none`
  br _304, ^303, ^198

303:
  %% Argument types:
  %%    _93 => {{'callback', 'multi_no_slogan', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _93
  _94 = get_tuple_element _93, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _302 = bif:is_map _94
  br _302, ^302, ^198

302:
  %% Aliased:
  %%    _92
  _301 = is_nonempty_list _92
  br _301, ^301, ^198

301:
  %% Argument types:
  %%    _92 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _92
  _100 = get_hd _92

  %% Argument types:
  %%    _92 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _92
  _99 = get_tl _92

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _298 = bif:is_tuple _100
  br _298, ^298, ^198

298:
  %% Argument types:
  %%    _100 => {...}
  %% Aliased:
  %%    _100
  _299 = bif:tuple_size _100

  %% Argument types:
  %%    _299 => 0..16777215
  %% Unique:
  %%    _299
  _300 = bif:'=:=' _299, `5`
  br _300, ^297, ^198

297:
  %% Argument types:
  %%    _100 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _100
  _105 = get_tuple_element _100, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _296 = bif:'=:=' _105, `{callback,ann,1}`
  br _296, ^296, ^198

296:
  %% Argument types:
  %%    _100 => {{'callback', 'ann', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _100
  _103 = get_tuple_element _100, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _295 = bif:'=:=' _103, `[<<"ann(X)">>]`
  br _295, ^295, ^198

295:
  %% Argument types:
  %%    _100 => {{'callback', 'ann', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _100
  _102 = get_tuple_element _100, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _294 = bif:'=:=' _102, `none`
  br _294, ^293, ^198

293:
  %% Argument types:
  %%    _100 => {{'callback', 'ann', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _100
  _101 = get_tuple_element _100, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _292 = bif:is_map _101
  br _292, ^292, ^198

292:
  %% Aliased:
  %%    _99
  _291 = is_nonempty_list _99
  br _291, ^291, ^198

291:
  %% Argument types:
  %%    _99 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _99
  _107 = get_hd _99

  %% Argument types:
  %%    _99 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _99
  _106 = get_tl _99

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _288 = bif:is_tuple _107
  br _288, ^288, ^198

288:
  %% Argument types:
  %%    _107 => {...}
  %% Aliased:
  %%    _107
  _289 = bif:tuple_size _107

  %% Argument types:
  %%    _289 => 0..16777215
  %% Unique:
  %%    _289
  _290 = bif:'=:=' _289, `5`
  br _290, ^287, ^198

287:
  %% Argument types:
  %%    _107 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _107
  _112 = get_tuple_element _107, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _286 = bif:'=:=' _112, `{callback,param,1}`
  br _286, ^286, ^198

286:
  %% Argument types:
  %%    _107 => {{'callback', 'param', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _107
  _110 = get_tuple_element _107, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _285 = bif:'=:=' _110, `[<<"param(X)">>]`
  br _285, ^285, ^198

285:
  %% Argument types:
  %%    _107 => {{'callback', 'param', 1}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _107
  _109 = get_tuple_element _107, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _284 = bif:'=:=' _109, `none`
  br _284, ^283, ^198

283:
  %% Argument types:
  %%    _107 => {{'callback', 'param', 1}, any(), nonempty_list(bitstring(64)), 'none', any()}
  %% Aliased:
  %%    _107
  _108 = get_tuple_element _107, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _282 = bif:is_map _108
  br _282, ^282, ^198

282:
  %% Aliased:
  %%    _106
  _281 = is_nonempty_list _106
  br _281, ^281, ^198

281:
  %% Argument types:
  %%    _106 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _106
  _114 = get_hd _106

  %% Argument types:
  %%    _106 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _106
  _113 = get_tl _106

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _278 = bif:is_tuple _114
  br _278, ^278, ^198

278:
  %% Argument types:
  %%    _114 => {...}
  %% Aliased:
  %%    _114
  _279 = bif:tuple_size _114

  %% Argument types:
  %%    _279 => 0..16777215
  %% Unique:
  %%    _279
  _280 = bif:'=:=' _279, `5`
  br _280, ^277, ^198

277:
  %% Argument types:
  %%    _114 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _114
  _119 = get_tuple_element _114, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _276 = bif:'=:=' _119, `{callback,change_order,0}`
  br _276, ^276, ^198

276:
  %% Argument types:
  %%    _114 => {{'callback', 'change_order', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _114
  _117 = get_tuple_element _114, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _275 = bif:'=:=' _117, `[<<"change_order()">>]`
  br _275, ^275, ^198

275:
  %% Argument types:
  %%    _114 => {{'callback', 'change_order', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _114
  _115 = get_tuple_element _114, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _274 = bif:is_map _115
  br _274, ^274, ^198

274:
  %% Argument types:
  %%    _115 => map()
  %% Aliased:
  %%    _115
  _120 = get_map_element _115, `equiv`

  %% Aliased:
  %%    _120
  _200 = succeeded:guard _120
  br _200, ^200, ^198

200:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _273 = bif:'=:=' _120, `<<"ok()">>`
  br _273, ^273, ^198

273:
  %% Aliased:
  %%    _113
  _272 = is_nonempty_list _113
  br _272, ^272, ^198

272:
  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _122 = get_hd _113

  %% Argument types:
  %%    _113 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _113
  _121 = get_tl _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _269 = bif:is_tuple _122
  br _269, ^269, ^198

269:
  %% Argument types:
  %%    _122 => {...}
  %% Aliased:
  %%    _122
  _270 = bif:tuple_size _122

  %% Argument types:
  %%    _270 => 0..16777215
  %% Unique:
  %%    _270
  _271 = bif:'=:=' _270, `5`
  br _271, ^268, ^198

268:
  %% Argument types:
  %%    _122 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _122
  _127 = get_tuple_element _122, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _267 = bif:'=:=' _127, `{callback,all_ok,0}`
  br _267, ^267, ^198

267:
  %% Argument types:
  %%    _122 => {{'callback', 'all_ok', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _122
  _125 = get_tuple_element _122, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _266 = bif:'=:=' _125, `[<<"all_ok()">>]`
  br _266, ^266, ^198

266:
  %% Argument types:
  %%    _122 => {{'callback', 'all_ok', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _122
  _123 = get_tuple_element _122, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _265 = bif:is_map _123
  br _265, ^265, ^198

265:
  %% Aliased:
  %%    _121
  _264 = is_nonempty_list _121
  br _264, ^264, ^198

264:
  %% Argument types:
  %%    _121 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _121
  _129 = get_hd _121

  %% Argument types:
  %%    _121 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _121
  _128 = get_tl _121

  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _261 = bif:is_tuple _129
  br _261, ^261, ^198

261:
  %% Argument types:
  %%    _129 => {...}
  %% Aliased:
  %%    _129
  _262 = bif:tuple_size _129

  %% Argument types:
  %%    _262 => 0..16777215
  %% Unique:
  %%    _262
  _263 = bif:'=:=' _262, `5`
  br _263, ^260, ^198

260:
  %% Argument types:
  %%    _129 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _129
  _134 = get_tuple_element _129, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _259 = bif:'=:=' _134, `{function,main2,0}`
  br _259, ^259, ^198

259:
  %% Argument types:
  %%    _129 => {{'function', 'main2', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _129
  _132 = get_tuple_element _129, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _258 = bif:'=:=' _132, `[<<"main2()">>]`
  br _258, ^258, ^198

258:
  %% Argument types:
  %%    _129 => {{'function', 'main2', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _129
  _131 = get_tuple_element _129, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _257 = bif:is_map _131
  br _257, ^257, ^198

257:
  %% Argument types:
  %%    _131 => map()
  %% Aliased:
  %%    _131
  _135 = get_map_element _131, `<<"en">>`

  %% Aliased:
  %%    _135
  _201 = succeeded:guard _135
  br _201, ^201, ^198

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _256 = bif:'=:=' _135, `<<"Second main">>`
  br _256, ^256, ^198

256:
  %% Argument types:
  %%    _129 => {{'function', 'main2', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _129
  _130 = get_tuple_element _129, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _255 = bif:is_map _130
  br _255, ^255, ^198

255:
  %% Argument types:
  %%    _130 => map()
  %% Aliased:
  %%    _130
  _136 = get_map_element _130, `equiv`

  %% Aliased:
  %%    _136
  _202 = succeeded:guard _136
  br _202, ^202, ^198

202:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _136
  _254 = bif:'=:=' _136, `<<"main()">>`
  br _254, ^254, ^198

254:
  %% Aliased:
  %%    _128
  _253 = is_nonempty_list _128
  br _253, ^253, ^198

253:
  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _138 = get_hd _128

  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _137 = get_tl _128

  %% Argument types:
  %%    
  %% Aliased:
  %%    _138
  _250 = bif:is_tuple _138
  br _250, ^250, ^198

250:
  %% Argument types:
  %%    _138 => {...}
  %% Aliased:
  %%    _138
  _251 = bif:tuple_size _138

  %% Argument types:
  %%    _251 => 0..16777215
  %% Unique:
  %%    _251
  _252 = bif:'=:=' _251, `5`
  br _252, ^249, ^198

249:
  %% Argument types:
  %%    _138 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _138
  _143 = get_tuple_element _138, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _248 = bif:'=:=' _143, `{function,main,0}`
  br _248, ^248, ^198

248:
  %% Argument types:
  %%    _138 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _138
  _141 = get_tuple_element _138, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _247 = bif:'=:=' _141, `[<<"main()">>]`
  br _247, ^247, ^198

247:
  %% Argument types:
  %%    _138 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _138
  _139 = get_tuple_element _138, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _246 = bif:is_map _139
  br _246, ^246, ^198

246:
  %% Aliased:
  %%    _137
  _245 = is_nonempty_list _137
  br _245, ^245, ^198

245:
  %% Argument types:
  %%    _137 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _137
  _145 = get_hd _137

  %% Argument types:
  %%    _137 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _137
  _144 = get_tl _137

  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _242 = bif:is_tuple _145
  br _242, ^242, ^198

242:
  %% Argument types:
  %%    _145 => {...}
  %% Aliased:
  %%    _145
  _243 = bif:tuple_size _145

  %% Argument types:
  %%    _243 => 0..16777215
  %% Unique:
  %%    _243
  _244 = bif:'=:=' _243, `5`
  br _244, ^241, ^198

241:
  %% Argument types:
  %%    _145 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _145
  _150 = get_tuple_element _145, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _150
  _240 = bif:'=:=' _150, `{function,all_ok,0}`
  br _240, ^240, ^198

240:
  %% Argument types:
  %%    _145 => {{'function', 'all_ok', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _145
  _148 = get_tuple_element _145, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _239 = bif:'=:=' _148, `[<<"all_ok()">>]`
  br _239, ^239, ^198

239:
  %% Argument types:
  %%    _145 => {{'function', 'all_ok', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _145
  _146 = get_tuple_element _145, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _146
  _238 = bif:is_map _146
  br _238, ^238, ^198

238:
  %% Argument types:
  %%    _146 => map()
  %% Aliased:
  %%    _146
  _151 = get_map_element _146, `equiv`

  %% Aliased:
  %%    _151
  _203 = succeeded:guard _151
  br _203, ^203, ^198

203:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _237 = bif:'=:=' _151, `<<"ok/0">>`
  br _237, ^237, ^198

237:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _144
  _236 = bif:'=:=' _144, `[]`
  br _236, ^236, ^198

236:
  %% Argument types:
  %%    _114 => {{'callback', 'change_order', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _114
  _116 = get_tuple_element _114, `3`

  %% beam_doc_SUITE.erl:278
  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _40 = bif:'=:=' _116, `#{<<"en">> => <<"Test changing order">>}`
  br _40, ^386, ^198

386:
  %% Argument types:
  %%    _122 => {{'callback', 'all_ok', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _122
  _124 = get_tuple_element _122, `3`

  %% beam_doc_SUITE.erl:280
  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _38 = bif:'=:=' _124, `#{<<"en">> => <<"Callback fn that always returns ok.">>}`
  br _38, ^387, ^198

387:
  %% Argument types:
  %%    _138 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _138
  _140 = get_tuple_element _138, `3`

  %% beam_doc_SUITE.erl:283
  %% Argument types:
  %%    
  %% Aliased:
  %%    _140
  _36 = bif:'=:=' _140, `#{<<"en">> => <<"all_ok()\n\nCalls all_ok/0">>}`
  br _36, ^388, ^198

388:
  %% Argument types:
  %%    _145 => {{'function', 'all_ok', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _145
  _147 = get_tuple_element _145, `3`

  %% beam_doc_SUITE.erl:284
  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _37 = bif:'=:=' _147, `#{<<"en">> => <<"This is a test">>}`
  br _37, ^207, ^198

207:
  %% Argument types:
  %%    _50 => {any(), any()}
  %% Aliased:
  %%    _50
  _52 = get_tuple_element _50, `0`

  %% beam_doc_SUITE.erl:288
  %% Aliased:
  %%    _52
  _153 = call (`filename`:`basename`/1), _52

  %% Aliased:
  %%    _153
  _208 = succeeded:body _153
  br _208, ^208, ^1

208:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _211 = bif:'=:=' _153, `"callback.erl"`
  br _211, ^209, ^210

209:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _161 = put_list _51, `[]`

  %% beam_doc_SUITE.erl:289
  %% Unique:
  %%    _161
  _185 = call (`io`:`format`/2), `"Warnings: ~p~n"`, _161

  %% Aliased:
  %%    _185
  _213 = succeeded:body _185
  br _213, ^213, ^1

213:
  %% beam_doc_SUITE.erl:290
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _162 = bif:length _51

  %% Unique:
  %%    _162
  _214 = succeeded:body _162
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _162 => 0..288230376151711743
  %% Unique:
  %%    _162
  _217 = bif:'=:=' _162, `1`
  br _217, ^215, ^216

215:
  %% beam_doc_SUITE.erl:291
  %% Aliased:
  %%    _51
  _171 = call (`lists`:`nth`/2), `1`, _51

  %% Aliased:
  %%    _171
  _219 = succeeded:body _171
  br _219, ^219, ^1

219:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _222 = bif:'=:=' _171, `{{36,2},beam_doc,{hidden_callback,{warn,0}}}`
  br _222, ^220, ^221

220:
  %% beam_doc_SUITE.erl:294
  %% Aliased:
  %%    _0
  _180 = call (`default_compile_file`/3), _0, `"callback"`, `[return_warnings,report,nowarn_hidden_doc]`

  %% Aliased:
  %%    _180
  _224 = succeeded:body _180
  br _224, ^224, ^1

224:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _180
  _232 = is_tagged_tuple _180, `3`, `ok`
  br _232, ^229, ^226

229:
  %% Argument types:
  %%    _180 => {'ok', any(), any()}
  %% Aliased:
  %%    _180
  _181 = get_tuple_element _180, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _181
  _228 = bif:'=:=' _181, `[]`
  br _228, ^228, ^226

228:
  %% Argument types:
  %%    _180 => {'ok', any(), nil()}
  %% Aliased:
  %%    _180
  _182 = get_tuple_element _180, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47, 
  %%    _182
  _227 = bif:'=:=' _182, _47
  br _227, ^227, ^226

227:
  %% Result type:
  %%    'ok'
  ret `ok`

226:
  %% beam_doc_SUITE.erl:293
  %% Aliased:
  %%    _180
  _188 = match_fail `badmatch`, _180

  %% Unique:
  %%    _188
  _235 = succeeded:body _188
  br ^1

221:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _173 = put_tuple `value`, _171

  %% Argument types:
  %%    _173 => {'value', any()}
  %% Unique:
  %%    _173
  _174 = put_list _173, `[]`

  %% Argument types:
  %%    _174 => nonempty_list({'value', any()})
  %% Unique:
  %%    _174
  _175 = put_list `{pattern,"{ { 36 , 2 } , beam_doc , { hidden_callback , { warn , 0 } } }"}`, _174

  %% Argument types:
  %%    _175 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _175
  _176 = put_list `{expression,"lists : nth ( 1 , Warnings )"}`, _175

  %% Argument types:
  %%    _176 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _176
  _177 = put_list `{line,291}`, _176

  %% Argument types:
  %%    _177 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 291} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _177
  _178 = put_list `{module,beam_doc_SUITE}`, _177

  %% Argument types:
  %%    _178 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 291} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _178
  _179 = put_tuple `assertMatch`, _178

  %% beam_doc_SUITE.erl:291
  %% Unique:
  %%    _179
  _187 = call (`erlang`:`error`/1), _179

  %% Aliased:
  %%    _187
  _223 = succeeded:body _187
  br ^1

216:
  %% Argument types:
  %%    _162 => 0..288230376151711743
  %% Unique:
  %%    _162
  _164 = put_tuple `value`, _162

  %% Argument types:
  %%    _164 => {'value', 0..288230376151711743}
  %% Unique:
  %%    _164
  _165 = put_list _164, `[]`

  %% Argument types:
  %%    _165 => nonempty_list({'value', 0..288230376151711743})
  %% Unique:
  %%    _165
  _166 = put_list `{expected,1}`, _165

  %% Argument types:
  %%    _166 => nonempty_list({'expected', 1} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _166
  _167 = put_list `{expression,"length ( Warnings )"}`, _166

  %% Argument types:
  %%    _167 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..116)} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _167
  _168 = put_list `{line,290}`, _167

  %% Argument types:
  %%    _168 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..116)} | {'line', 290} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _168
  _169 = put_list `{module,beam_doc_SUITE}`, _168

  %% Argument types:
  %%    _169 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..116)} | {'line', 290} | {'module', 'beam_doc_SUITE'} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _169
  _170 = put_tuple `assertEqual`, _169

  %% beam_doc_SUITE.erl:290
  %% Unique:
  %%    _170
  _186 = call (`erlang`:`error`/1), _170

  %% Aliased:
  %%    _186
  _218 = succeeded:body _186
  br ^1

210:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _154 = put_tuple `value`, _153

  %% Argument types:
  %%    _154 => {'value', any()}
  %% Unique:
  %%    _154
  _155 = put_list _154, `[]`

  %% Argument types:
  %%    _155 => nonempty_list({'value', any()})
  %% Unique:
  %%    _155
  _156 = put_list `{expected,"callback.erl"}`, _155

  %% Argument types:
  %%    _156 => nonempty_list({'expected', nonempty_list(46..114)} | {'value', any()})
  %% Unique:
  %%    _156
  _157 = put_list `{expression,"filename : basename ( File )"}`, _156

  %% Argument types:
  %%    _157 => nonempty_list({'expected', nonempty_list(46..114)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _157
  _158 = put_list `{line,288}`, _157

  %% Argument types:
  %%    _158 => nonempty_list({'expected', nonempty_list(46..114)} | {'expression', nonempty_list(32..115)} | {'line', 288} | {'value', any()})
  %% Unique:
  %%    _158
  _159 = put_list `{module,beam_doc_SUITE}`, _158

  %% Argument types:
  %%    _159 => nonempty_list({'expected', nonempty_list(46..114)} | {'expression', nonempty_list(32..115)} | {'line', 288} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _159
  _160 = put_tuple `assertEqual`, _159

  %% beam_doc_SUITE.erl:288
  %% Unique:
  %%    _160
  _184 = call (`erlang`:`error`/1), _160

  %% Aliased:
  %%    _184
  _212 = succeeded:body _184
  br ^1

198:
  %% beam_doc_SUITE.erl:269
  %% Aliased:
  %%    _53
  _189 = match_fail `badmatch`, _53

  %% Unique:
  %%    _189
  _368 = succeeded:body _189
  br ^1

195:
  %% beam_doc_SUITE.erl:263
  %% Aliased:
  %%    _45
  _190 = match_fail `badmatch`, _45

  %% Unique:
  %%    _190
  _381 = succeeded:body _190
  br ^1

1:
  _191 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _191
}

%% beam_doc_SUITE.erl:298
%% Counter = 996
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`private_types`(_0) {
0:
  %% beam_doc_SUITE.erl:300
  %% Aliased:
  %%    _0
  _103 = call (`default_compile_file`/2), _0, `"private_types"`

  %% Aliased:
  %%    _103
  _556 = succeeded:body _103
  br _556, ^556, ^1

556:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _966 = is_tagged_tuple _103, `2`, `ok`
  br _966, ^963, ^558

963:
  %% Argument types:
  %%    _103 => {'ok', any()}
  %% Aliased:
  %%    _103
  _104 = get_tuple_element _103, `1`

  %% beam_doc_SUITE.erl:313
  %% Aliased:
  %%    _104
  _106 = call (`code`:`get_doc`/1), _104

  %% Aliased:
  %%    _106
  _559 = succeeded:body _106
  br _559, ^559, ^1

559:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _959 = is_tagged_tuple _106, `2`, `ok`
  br _959, ^956, ^561

956:
  %% Argument types:
  %%    _106 => {'ok', any()}
  %% Aliased:
  %%    _106
  _107 = get_tuple_element _106, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _953 = is_tagged_tuple _107, `7`, `docs_v1`
  br _953, ^950, ^561

950:
  %% Argument types:
  %%    _107 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _107
  _111 = get_tuple_element _107, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _949 = bif:'=:=' _111, `none`
  br _949, ^948, ^561

948:
  %% Argument types:
  %%    _107 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _107
  _109 = get_tuple_element _107, `6`

  %% Aliased:
  %%    _109
  _947 = is_nonempty_list _109
  br _947, ^947, ^561

947:
  %% Argument types:
  %%    _109 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _109
  _117 = get_hd _109

  %% Argument types:
  %%    _109 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _109
  _116 = get_tl _109

  %% Aliased:
  %%    _116
  _946 = is_nonempty_list _116
  br _946, ^946, ^561

946:
  %% Argument types:
  %%    _116 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _116
  _119 = get_hd _116

  %% Argument types:
  %%    _116 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _116
  _118 = get_tl _116

  %% Aliased:
  %%    _118
  _945 = is_nonempty_list _118
  br _945, ^945, ^561

945:
  %% Argument types:
  %%    _118 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _118
  _121 = get_hd _118

  %% Argument types:
  %%    _118 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _118
  _120 = get_tl _118

  %% Aliased:
  %%    _120
  _944 = is_nonempty_list _120
  br _944, ^944, ^561

944:
  %% Argument types:
  %%    _120 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _120
  _123 = get_hd _120

  %% Argument types:
  %%    _120 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _120
  _122 = get_tl _120

  %% Aliased:
  %%    _122
  _943 = is_nonempty_list _122
  br _943, ^943, ^561

943:
  %% Argument types:
  %%    _122 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _122
  _125 = get_hd _122

  %% Argument types:
  %%    _122 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _122
  _124 = get_tl _122

  %% Aliased:
  %%    _124
  _942 = is_nonempty_list _124
  br _942, ^942, ^561

942:
  %% Argument types:
  %%    _124 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _124
  _127 = get_hd _124

  %% Argument types:
  %%    _124 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _124
  _126 = get_tl _124

  %% Aliased:
  %%    _126
  _941 = is_nonempty_list _126
  br _941, ^941, ^561

941:
  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _129 = get_hd _126

  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _128 = get_tl _126

  %% Aliased:
  %%    _128
  _940 = is_nonempty_list _128
  br _940, ^940, ^561

940:
  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _131 = get_hd _128

  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _130 = get_tl _128

  %% Aliased:
  %%    _130
  _939 = is_nonempty_list _130
  br _939, ^939, ^561

939:
  %% Argument types:
  %%    _130 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _130
  _133 = get_hd _130

  %% Argument types:
  %%    _130 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _130
  _132 = get_tl _130

  %% Aliased:
  %%    _132
  _938 = is_nonempty_list _132
  br _938, ^938, ^561

938:
  %% Argument types:
  %%    _132 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _132
  _135 = get_hd _132

  %% Argument types:
  %%    _132 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _132
  _134 = get_tl _132

  %% Aliased:
  %%    _134
  _937 = is_nonempty_list _134
  br _937, ^937, ^561

937:
  %% Argument types:
  %%    _134 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _134
  _137 = get_hd _134

  %% Argument types:
  %%    _134 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _134
  _136 = get_tl _134

  %% Aliased:
  %%    _136
  _936 = is_nonempty_list _136
  br _936, ^936, ^561

936:
  %% Argument types:
  %%    _136 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _136
  _139 = get_hd _136

  %% Argument types:
  %%    _136 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _136
  _138 = get_tl _136

  %% Aliased:
  %%    _138
  _935 = is_nonempty_list _138
  br _935, ^935, ^561

935:
  %% Argument types:
  %%    _138 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _138
  _141 = get_hd _138

  %% Argument types:
  %%    _138 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _138
  _140 = get_tl _138

  %% Aliased:
  %%    _140
  _934 = is_nonempty_list _140
  br _934, ^934, ^561

934:
  %% Argument types:
  %%    _140 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _140
  _143 = get_hd _140

  %% Argument types:
  %%    _140 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _140
  _142 = get_tl _140

  %% Aliased:
  %%    _142
  _933 = is_nonempty_list _142
  br _933, ^933, ^561

933:
  %% Argument types:
  %%    _142 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _142
  _145 = get_hd _142

  %% Argument types:
  %%    _142 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _142
  _144 = get_tl _142

  %% Aliased:
  %%    _144
  _932 = is_nonempty_list _144
  br _932, ^932, ^561

932:
  %% Argument types:
  %%    _144 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _144
  _147 = get_hd _144

  %% Argument types:
  %%    _144 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _144
  _146 = get_tl _144

  %% Aliased:
  %%    _146
  _931 = is_nonempty_list _146
  br _931, ^931, ^561

931:
  %% Argument types:
  %%    _146 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _146
  _149 = get_hd _146

  %% Argument types:
  %%    _146 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _146
  _148 = get_tl _146

  %% Aliased:
  %%    _148
  _930 = is_nonempty_list _148
  br _930, ^930, ^561

930:
  %% Argument types:
  %%    _148 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _148
  _151 = get_hd _148

  %% Argument types:
  %%    _148 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _148
  _150 = get_tl _148

  %% Aliased:
  %%    _150
  _929 = is_nonempty_list _150
  br _929, ^929, ^561

929:
  %% Argument types:
  %%    _150 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _150
  _153 = get_hd _150

  %% Argument types:
  %%    _150 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _150
  _152 = get_tl _150

  %% Aliased:
  %%    _152
  _928 = is_nonempty_list _152
  br _928, ^928, ^561

928:
  %% Argument types:
  %%    _152 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _152
  _155 = get_hd _152

  %% Argument types:
  %%    _152 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _152
  _154 = get_tl _152

  %% Aliased:
  %%    _154
  _927 = is_nonempty_list _154
  br _927, ^927, ^561

927:
  %% Argument types:
  %%    _154 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _154
  _157 = get_hd _154

  %% Argument types:
  %%    _154 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _154
  _156 = get_tl _154

  %% Aliased:
  %%    _156
  _926 = is_nonempty_list _156
  br _926, ^926, ^561

926:
  %% Argument types:
  %%    _156 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _156
  _159 = get_hd _156

  %% Argument types:
  %%    _156 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _156
  _158 = get_tl _156

  %% Aliased:
  %%    _158
  _925 = is_nonempty_list _158
  br _925, ^925, ^561

925:
  %% Argument types:
  %%    _158 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _158
  _161 = get_hd _158

  %% Argument types:
  %%    _158 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _158
  _160 = get_tl _158

  %% Aliased:
  %%    _160
  _924 = is_nonempty_list _160
  br _924, ^924, ^561

924:
  %% Argument types:
  %%    _160 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _160
  _163 = get_hd _160

  %% Argument types:
  %%    _160 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _160
  _162 = get_tl _160

  %% Aliased:
  %%    _162
  _923 = is_nonempty_list _162
  br _923, ^923, ^561

923:
  %% Argument types:
  %%    _162 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _162
  _165 = get_hd _162

  %% Argument types:
  %%    _162 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _162
  _164 = get_tl _162

  %% Aliased:
  %%    _164
  _922 = is_nonempty_list _164
  br _922, ^922, ^561

922:
  %% Argument types:
  %%    _164 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _164
  _167 = get_hd _164

  %% Argument types:
  %%    _164 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _164
  _166 = get_tl _164

  %% Argument types:
  %%    
  %% Aliased:
  %%    _166
  _921 = bif:'=:=' _166, `[]`
  br _921, ^921, ^561

921:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _572 = bif:is_tuple _117
  br _572, ^572, ^563

572:
  %% Argument types:
  %%    _117 => {...}
  %% Aliased:
  %%    _117
  _573 = bif:tuple_size _117

  %% Argument types:
  %%    _573 => 0..16777215
  %% Unique:
  %%    _573
  _574 = bif:'=:=' _573, `5`
  br _574, ^571, ^563

571:
  %% Argument types:
  %%    _117 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _117
  _179 = get_tuple_element _117, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _179
  _570 = bif:'=:=' _179, `{type,remote_type_t,1}`
  br _570, ^570, ^563

570:
  %% Argument types:
  %%    _117 => {{'type', 'remote_type_t', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _117
  _176 = get_tuple_element _117, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _569 = bif:'=:=' _176, `none`
  br _569, ^568, ^563

568:
  %% Argument types:
  %%    _117 => {{'type', 'remote_type_t', 1}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _117
  _175 = get_tuple_element _117, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _175
  _567 = bif:is_map _175
  br _567, ^567, ^563

567:
  %% Argument types:
  %%    _175 => map()
  %% Aliased:
  %%    _175
  _180 = get_map_element _175, `exported`

  %% Aliased:
  %%    _180
  _564 = succeeded:guard _180
  br _564, ^564, ^563

564:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _180
  _566 = bif:'=:=' _180, `false`
  br _566, ^562, ^563

562:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _586 = bif:is_tuple _119
  br _586, ^586, ^577

586:
  %% Argument types:
  %%    _119 => {...}
  %% Aliased:
  %%    _119
  _587 = bif:tuple_size _119

  %% Argument types:
  %%    _587 => 0..16777215
  %% Unique:
  %%    _587
  _588 = bif:'=:=' _587, `5`
  br _588, ^585, ^577

585:
  %% Argument types:
  %%    _119 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _119
  _193 = get_tuple_element _119, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _193
  _584 = bif:'=:=' _193, `{type,tuple_t,0}`
  br _584, ^584, ^577

584:
  %% Argument types:
  %%    _119 => {{'type', 'tuple_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _119
  _190 = get_tuple_element _119, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _190
  _583 = bif:'=:=' _190, `none`
  br _583, ^582, ^577

582:
  %% Argument types:
  %%    _119 => {{'type', 'tuple_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _119
  _189 = get_tuple_element _119, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _189
  _581 = bif:is_map _189
  br _581, ^581, ^577

581:
  %% Argument types:
  %%    _189 => map()
  %% Aliased:
  %%    _189
  _194 = get_map_element _189, `exported`

  %% Aliased:
  %%    _194
  _578 = succeeded:guard _194
  br _578, ^578, ^577

578:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _580 = bif:'=:=' _194, `false`
  br _580, ^576, ^577

576:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _600 = bif:is_tuple _121
  br _600, ^600, ^591

600:
  %% Argument types:
  %%    _121 => {...}
  %% Aliased:
  %%    _121
  _601 = bif:tuple_size _121

  %% Argument types:
  %%    _601 => 0..16777215
  %% Unique:
  %%    _601
  _602 = bif:'=:=' _601, `5`
  br _602, ^599, ^591

599:
  %% Argument types:
  %%    _121 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _121
  _207 = get_tuple_element _121, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _207
  _598 = bif:'=:=' _207, `{type,record_a_t,0}`
  br _598, ^598, ^591

598:
  %% Argument types:
  %%    _121 => {{'type', 'record_a_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _121
  _204 = get_tuple_element _121, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _597 = bif:'=:=' _204, `none`
  br _597, ^596, ^591

596:
  %% Argument types:
  %%    _121 => {{'type', 'record_a_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _121
  _203 = get_tuple_element _121, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _203
  _595 = bif:is_map _203
  br _595, ^595, ^591

595:
  %% Argument types:
  %%    _203 => map()
  %% Aliased:
  %%    _203
  _208 = get_map_element _203, `exported`

  %% Aliased:
  %%    _208
  _592 = succeeded:guard _208
  br _592, ^592, ^591

592:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _208
  _594 = bif:'=:=' _208, `false`
  br _594, ^590, ^591

590:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _614 = bif:is_tuple _123
  br _614, ^614, ^605

614:
  %% Argument types:
  %%    _123 => {...}
  %% Aliased:
  %%    _123
  _615 = bif:tuple_size _123

  %% Argument types:
  %%    _615 => 0..16777215
  %% Unique:
  %%    _615
  _616 = bif:'=:=' _615, `5`
  br _616, ^613, ^605

613:
  %% Argument types:
  %%    _123 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _123
  _221 = get_tuple_element _123, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _221
  _612 = bif:'=:=' _221, `{type,record_inline_t,0}`
  br _612, ^612, ^605

612:
  %% Argument types:
  %%    _123 => {{'type', 'record_inline_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _123
  _218 = get_tuple_element _123, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _218
  _611 = bif:'=:=' _218, `none`
  br _611, ^610, ^605

610:
  %% Argument types:
  %%    _123 => {{'type', 'record_inline_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _123
  _217 = get_tuple_element _123, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _217
  _609 = bif:is_map _217
  br _609, ^609, ^605

609:
  %% Argument types:
  %%    _217 => map()
  %% Aliased:
  %%    _217
  _222 = get_map_element _217, `exported`

  %% Aliased:
  %%    _222
  _606 = succeeded:guard _222
  br _606, ^606, ^605

606:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _222
  _608 = bif:'=:=' _222, `false`
  br _608, ^604, ^605

604:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _628 = bif:is_tuple _125
  br _628, ^628, ^619

628:
  %% Argument types:
  %%    _125 => {...}
  %% Aliased:
  %%    _125
  _629 = bif:tuple_size _125

  %% Argument types:
  %%    _629 => 0..16777215
  %% Unique:
  %%    _629
  _630 = bif:'=:=' _629, `5`
  br _630, ^627, ^619

627:
  %% Argument types:
  %%    _125 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _125
  _235 = get_tuple_element _125, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _235
  _626 = bif:'=:=' _235, `{type,map_value_2_t,0}`
  br _626, ^626, ^619

626:
  %% Argument types:
  %%    _125 => {{'type', 'map_value_2_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _125
  _232 = get_tuple_element _125, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _232
  _625 = bif:'=:=' _232, `none`
  br _625, ^624, ^619

624:
  %% Argument types:
  %%    _125 => {{'type', 'map_value_2_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _125
  _231 = get_tuple_element _125, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _623 = bif:is_map _231
  br _623, ^623, ^619

623:
  %% Argument types:
  %%    _231 => map()
  %% Aliased:
  %%    _231
  _236 = get_map_element _231, `exported`

  %% Aliased:
  %%    _236
  _620 = succeeded:guard _236
  br _620, ^620, ^619

620:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _236
  _622 = bif:'=:=' _236, `false`
  br _622, ^618, ^619

618:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _642 = bif:is_tuple _127
  br _642, ^642, ^633

642:
  %% Argument types:
  %%    _127 => {...}
  %% Aliased:
  %%    _127
  _643 = bif:tuple_size _127

  %% Argument types:
  %%    _643 => 0..16777215
  %% Unique:
  %%    _643
  _644 = bif:'=:=' _643, `5`
  br _644, ^641, ^633

641:
  %% Argument types:
  %%    _127 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _127
  _249 = get_tuple_element _127, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _249
  _640 = bif:'=:=' _249, `{type,map_key_2_t,0}`
  br _640, ^640, ^633

640:
  %% Argument types:
  %%    _127 => {{'type', 'map_key_2_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _127
  _246 = get_tuple_element _127, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _246
  _639 = bif:'=:=' _246, `none`
  br _639, ^638, ^633

638:
  %% Argument types:
  %%    _127 => {{'type', 'map_key_2_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _127
  _245 = get_tuple_element _127, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _637 = bif:is_map _245
  br _637, ^637, ^633

637:
  %% Argument types:
  %%    _245 => map()
  %% Aliased:
  %%    _245
  _250 = get_map_element _245, `exported`

  %% Aliased:
  %%    _250
  _634 = succeeded:guard _250
  br _634, ^634, ^633

634:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _250
  _636 = bif:'=:=' _250, `false`
  br _636, ^632, ^633

632:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _656 = bif:is_tuple _129
  br _656, ^656, ^647

656:
  %% Argument types:
  %%    _129 => {...}
  %% Aliased:
  %%    _129
  _657 = bif:tuple_size _129

  %% Argument types:
  %%    _657 => 0..16777215
  %% Unique:
  %%    _657
  _658 = bif:'=:=' _657, `5`
  br _658, ^655, ^647

655:
  %% Argument types:
  %%    _129 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _129
  _263 = get_tuple_element _129, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _263
  _654 = bif:'=:=' _263, `{type,map_value_t,0}`
  br _654, ^654, ^647

654:
  %% Argument types:
  %%    _129 => {{'type', 'map_value_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _129
  _260 = get_tuple_element _129, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _653 = bif:'=:=' _260, `none`
  br _653, ^652, ^647

652:
  %% Argument types:
  %%    _129 => {{'type', 'map_value_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _129
  _259 = get_tuple_element _129, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _259
  _651 = bif:is_map _259
  br _651, ^651, ^647

651:
  %% Argument types:
  %%    _259 => map()
  %% Aliased:
  %%    _259
  _264 = get_map_element _259, `exported`

  %% Aliased:
  %%    _264
  _648 = succeeded:guard _264
  br _648, ^648, ^647

648:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _650 = bif:'=:=' _264, `false`
  br _650, ^646, ^647

646:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _670 = bif:is_tuple _131
  br _670, ^670, ^661

670:
  %% Argument types:
  %%    _131 => {...}
  %% Aliased:
  %%    _131
  _671 = bif:tuple_size _131

  %% Argument types:
  %%    _671 => 0..16777215
  %% Unique:
  %%    _671
  _672 = bif:'=:=' _671, `5`
  br _672, ^669, ^661

669:
  %% Argument types:
  %%    _131 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _131
  _277 = get_tuple_element _131, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _277
  _668 = bif:'=:=' _277, `{type,map_key_t,0}`
  br _668, ^668, ^661

668:
  %% Argument types:
  %%    _131 => {{'type', 'map_key_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _131
  _274 = get_tuple_element _131, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _274
  _667 = bif:'=:=' _274, `none`
  br _667, ^666, ^661

666:
  %% Argument types:
  %%    _131 => {{'type', 'map_key_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _131
  _273 = get_tuple_element _131, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _273
  _665 = bif:is_map _273
  br _665, ^665, ^661

665:
  %% Argument types:
  %%    _273 => map()
  %% Aliased:
  %%    _273
  _278 = get_map_element _273, `exported`

  %% Aliased:
  %%    _278
  _662 = succeeded:guard _278
  br _662, ^662, ^661

662:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _278
  _664 = bif:'=:=' _278, `false`
  br _664, ^660, ^661

660:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _684 = bif:is_tuple _133
  br _684, ^684, ^675

684:
  %% Argument types:
  %%    _133 => {...}
  %% Aliased:
  %%    _133
  _685 = bif:tuple_size _133

  %% Argument types:
  %%    _685 => 0..16777215
  %% Unique:
  %%    _685
  _686 = bif:'=:=' _685, `5`
  br _686, ^683, ^675

683:
  %% Argument types:
  %%    _133 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _133
  _291 = get_tuple_element _133, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _291
  _682 = bif:'=:=' _291, `{type,fun_ret_2_t,0}`
  br _682, ^682, ^675

682:
  %% Argument types:
  %%    _133 => {{'type', 'fun_ret_2_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _133
  _288 = get_tuple_element _133, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _288
  _681 = bif:'=:=' _288, `none`
  br _681, ^680, ^675

680:
  %% Argument types:
  %%    _133 => {{'type', 'fun_ret_2_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _133
  _287 = get_tuple_element _133, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _287
  _679 = bif:is_map _287
  br _679, ^679, ^675

679:
  %% Argument types:
  %%    _287 => map()
  %% Aliased:
  %%    _287
  _292 = get_map_element _287, `exported`

  %% Aliased:
  %%    _292
  _676 = succeeded:guard _292
  br _676, ^676, ^675

676:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _292
  _678 = bif:'=:=' _292, `false`
  br _678, ^674, ^675

674:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _698 = bif:is_tuple _135
  br _698, ^698, ^689

698:
  %% Argument types:
  %%    _135 => {...}
  %% Aliased:
  %%    _135
  _699 = bif:tuple_size _135

  %% Argument types:
  %%    _699 => 0..16777215
  %% Unique:
  %%    _699
  _700 = bif:'=:=' _699, `5`
  br _700, ^697, ^689

697:
  %% Argument types:
  %%    _135 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _305 = get_tuple_element _135, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _305
  _696 = bif:'=:=' _305, `{type,fun_ret_t,0}`
  br _696, ^696, ^689

696:
  %% Argument types:
  %%    _135 => {{'type', 'fun_ret_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _302 = get_tuple_element _135, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _302
  _695 = bif:'=:=' _302, `none`
  br _695, ^694, ^689

694:
  %% Argument types:
  %%    _135 => {{'type', 'fun_ret_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _135
  _301 = get_tuple_element _135, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _301
  _693 = bif:is_map _301
  br _693, ^693, ^689

693:
  %% Argument types:
  %%    _301 => map()
  %% Aliased:
  %%    _301
  _306 = get_map_element _301, `exported`

  %% Aliased:
  %%    _306
  _690 = succeeded:guard _306
  br _690, ^690, ^689

690:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _306
  _692 = bif:'=:=' _306, `false`
  br _692, ^688, ^689

688:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _712 = bif:is_tuple _137
  br _712, ^712, ^703

712:
  %% Argument types:
  %%    _137 => {...}
  %% Aliased:
  %%    _137
  _713 = bif:tuple_size _137

  %% Argument types:
  %%    _713 => 0..16777215
  %% Unique:
  %%    _713
  _714 = bif:'=:=' _713, `5`
  br _714, ^711, ^703

711:
  %% Argument types:
  %%    _137 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _137
  _319 = get_tuple_element _137, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _319
  _710 = bif:'=:=' _319, `{type,fun_t,0}`
  br _710, ^710, ^703

710:
  %% Argument types:
  %%    _137 => {{'type', 'fun_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _137
  _316 = get_tuple_element _137, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _316
  _709 = bif:'=:=' _316, `none`
  br _709, ^708, ^703

708:
  %% Argument types:
  %%    _137 => {{'type', 'fun_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _137
  _315 = get_tuple_element _137, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _315
  _707 = bif:is_map _315
  br _707, ^707, ^703

707:
  %% Argument types:
  %%    _315 => map()
  %% Aliased:
  %%    _315
  _320 = get_map_element _315, `exported`

  %% Aliased:
  %%    _320
  _704 = succeeded:guard _320
  br _704, ^704, ^703

704:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _320
  _706 = bif:'=:=' _320, `false`
  br _706, ^702, ^703

702:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _726 = bif:is_tuple _139
  br _726, ^726, ^717

726:
  %% Argument types:
  %%    _139 => {...}
  %% Aliased:
  %%    _139
  _727 = bif:tuple_size _139

  %% Argument types:
  %%    _727 => 0..16777215
  %% Unique:
  %%    _727
  _728 = bif:'=:=' _727, `5`
  br _728, ^725, ^717

725:
  %% Argument types:
  %%    _139 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _139
  _333 = get_tuple_element _139, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _333
  _724 = bif:'=:=' _333, `{type,complex,1}`
  br _724, ^724, ^717

724:
  %% Argument types:
  %%    _139 => {{'type', 'complex', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _139
  _330 = get_tuple_element _139, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _330
  _723 = bif:'=:=' _330, `none`
  br _723, ^722, ^717

722:
  %% Argument types:
  %%    _139 => {{'type', 'complex', 1}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _139
  _329 = get_tuple_element _139, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _329
  _721 = bif:is_map _329
  br _721, ^721, ^717

721:
  %% Argument types:
  %%    _329 => map()
  %% Aliased:
  %%    _329
  _334 = get_map_element _329, `exported`

  %% Aliased:
  %%    _334
  _718 = succeeded:guard _334
  br _718, ^718, ^717

718:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _334
  _720 = bif:'=:=' _334, `true`
  br _720, ^716, ^717

716:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _740 = bif:is_tuple _141
  br _740, ^740, ^731

740:
  %% Argument types:
  %%    _141 => {...}
  %% Aliased:
  %%    _141
  _741 = bif:tuple_size _141

  %% Argument types:
  %%    _741 => 0..16777215
  %% Unique:
  %%    _741
  _742 = bif:'=:=' _741, `5`
  br _742, ^739, ^731

739:
  %% Argument types:
  %%    _141 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _141
  _347 = get_tuple_element _141, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _347
  _738 = bif:'=:=' _347, `{type,bounded_ret_t,0}`
  br _738, ^738, ^731

738:
  %% Argument types:
  %%    _141 => {{'type', 'bounded_ret_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _141
  _344 = get_tuple_element _141, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _344
  _737 = bif:'=:=' _344, `none`
  br _737, ^736, ^731

736:
  %% Argument types:
  %%    _141 => {{'type', 'bounded_ret_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _141
  _343 = get_tuple_element _141, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _343
  _735 = bif:is_map _343
  br _735, ^735, ^731

735:
  %% Argument types:
  %%    _343 => map()
  %% Aliased:
  %%    _343
  _348 = get_map_element _343, `exported`

  %% Aliased:
  %%    _348
  _732 = succeeded:guard _348
  br _732, ^732, ^731

732:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _348
  _734 = bif:'=:=' _348, `false`
  br _734, ^730, ^731

730:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _754 = bif:is_tuple _143
  br _754, ^754, ^745

754:
  %% Argument types:
  %%    _143 => {...}
  %% Aliased:
  %%    _143
  _755 = bif:tuple_size _143

  %% Argument types:
  %%    _755 => 0..16777215
  %% Unique:
  %%    _755
  _756 = bif:'=:=' _755, `5`
  br _756, ^753, ^745

753:
  %% Argument types:
  %%    _143 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _361 = get_tuple_element _143, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _361
  _752 = bif:'=:=' _361, `{type,arg_t,0}`
  br _752, ^752, ^745

752:
  %% Argument types:
  %%    _143 => {{'type', 'arg_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _358 = get_tuple_element _143, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _358
  _751 = bif:'=:=' _358, `none`
  br _751, ^750, ^745

750:
  %% Argument types:
  %%    _143 => {{'type', 'arg_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _143
  _357 = get_tuple_element _143, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _357
  _749 = bif:is_map _357
  br _749, ^749, ^745

749:
  %% Argument types:
  %%    _357 => map()
  %% Aliased:
  %%    _357
  _362 = get_map_element _357, `exported`

  %% Aliased:
  %%    _362
  _746 = succeeded:guard _362
  br _746, ^746, ^745

746:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _362
  _748 = bif:'=:=' _362, `false`
  br _748, ^744, ^745

744:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _768 = bif:is_tuple _145
  br _768, ^768, ^759

768:
  %% Argument types:
  %%    _145 => {...}
  %% Aliased:
  %%    _145
  _769 = bif:tuple_size _145

  %% Argument types:
  %%    _769 => 0..16777215
  %% Unique:
  %%    _769
  _770 = bif:'=:=' _769, `5`
  br _770, ^767, ^759

767:
  %% Argument types:
  %%    _145 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _145
  _375 = get_tuple_element _145, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _375
  _766 = bif:'=:=' _375, `{type,bounded_arg_t,0}`
  br _766, ^766, ^759

766:
  %% Argument types:
  %%    _145 => {{'type', 'bounded_arg_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _145
  _372 = get_tuple_element _145, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _372
  _765 = bif:'=:=' _372, `none`
  br _765, ^764, ^759

764:
  %% Argument types:
  %%    _145 => {{'type', 'bounded_arg_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _145
  _371 = get_tuple_element _145, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _371
  _763 = bif:is_map _371
  br _763, ^763, ^759

763:
  %% Argument types:
  %%    _371 => map()
  %% Aliased:
  %%    _371
  _376 = get_map_element _371, `exported`

  %% Aliased:
  %%    _376
  _760 = succeeded:guard _376
  br _760, ^760, ^759

760:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _376
  _762 = bif:'=:=' _376, `false`
  br _762, ^758, ^759

758:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _784 = bif:is_tuple _147
  br _784, ^784, ^773

784:
  %% Argument types:
  %%    _147 => {...}
  %% Aliased:
  %%    _147
  _785 = bif:tuple_size _147

  %% Argument types:
  %%    _785 => 0..16777215
  %% Unique:
  %%    _785
  _786 = bif:'=:=' _785, `5`
  br _786, ^783, ^773

783:
  %% Argument types:
  %%    _147 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _147
  _389 = get_tuple_element _147, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _389
  _782 = bif:'=:=' _389, `{type,private,0}`
  br _782, ^782, ^773

782:
  %% Argument types:
  %%    _147 => {{'type', 'private', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _147
  _388 = get_tuple_element _147, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _388
  _781 = bif:'=:=' _388, `{30,2}`
  br _781, ^781, ^773

781:
  %% Argument types:
  %%    _147 => {{'type', 'private', 0}, {30, 2}, any(), any(), any()}
  %% Aliased:
  %%    _147
  _387 = get_tuple_element _147, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _387
  _780 = bif:'=:=' _387, `[<<"private()">>]`
  br _780, ^780, ^773

780:
  %% Argument types:
  %%    _147 => {{'type', 'private', 0}, {30, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _147
  _386 = get_tuple_element _147, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _386
  _779 = bif:'=:=' _386, `hidden`
  br _779, ^778, ^773

778:
  %% Argument types:
  %%    _147 => {{'type', 'private', 0}, {30, 2}, nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _147
  _385 = get_tuple_element _147, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _385
  _777 = bif:is_map _385
  br _777, ^777, ^773

777:
  %% Argument types:
  %%    _385 => map()
  %% Aliased:
  %%    _385
  _390 = get_map_element _385, `exported`

  %% Aliased:
  %%    _390
  _774 = succeeded:guard _390
  br _774, ^774, ^773

774:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _390
  _776 = bif:'=:=' _390, `false`
  br _776, ^772, ^773

772:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _799 = bif:is_tuple _149
  br _799, ^799, ^789

799:
  %% Argument types:
  %%    _149 => {...}
  %% Aliased:
  %%    _149
  _800 = bif:tuple_size _149

  %% Argument types:
  %%    _800 => 0..16777215
  %% Unique:
  %%    _800
  _801 = bif:'=:=' _800, `5`
  br _801, ^798, ^789

798:
  %% Argument types:
  %%    _149 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _149
  _403 = get_tuple_element _149, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _403
  _797 = bif:'=:=' _403, `{type,hidden_export_t,0}`
  br _797, ^797, ^789

797:
  %% Argument types:
  %%    _149 => {{'type', 'hidden_export_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _149
  _401 = get_tuple_element _149, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _401
  _796 = bif:'=:=' _401, `[<<"hidden_export_t()">>]`
  br _796, ^796, ^789

796:
  %% Argument types:
  %%    _149 => {{'type', 'hidden_export_t', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _149
  _400 = get_tuple_element _149, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _400
  _795 = bif:'=:=' _400, `hidden`
  br _795, ^794, ^789

794:
  %% Argument types:
  %%    _149 => {{'type', 'hidden_export_t', 0}, any(), nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _149
  _399 = get_tuple_element _149, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _399
  _793 = bif:is_map _399
  br _793, ^793, ^789

793:
  %% Argument types:
  %%    _399 => map()
  %% Aliased:
  %%    _399
  _404 = get_map_element _399, `exported`

  %% Aliased:
  %%    _404
  _790 = succeeded:guard _404
  br _790, ^790, ^789

790:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _404
  _792 = bif:'=:=' _404, `true`
  br _792, ^788, ^789

788:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _813 = bif:is_tuple _151
  br _813, ^813, ^804

813:
  %% Argument types:
  %%    _151 => {...}
  %% Aliased:
  %%    _151
  _814 = bif:tuple_size _151

  %% Argument types:
  %%    _814 => 0..16777215
  %% Unique:
  %%    _814
  _815 = bif:'=:=' _814, `5`
  br _815, ^812, ^804

812:
  %% Argument types:
  %%    _151 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _151
  _417 = get_tuple_element _151, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _417
  _811 = bif:'=:=' _417, `{type,private_cb_t,0}`
  br _811, ^811, ^804

811:
  %% Argument types:
  %%    _151 => {{'type', 'private_cb_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _151
  _414 = get_tuple_element _151, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _414
  _810 = bif:'=:=' _414, `none`
  br _810, ^809, ^804

809:
  %% Argument types:
  %%    _151 => {{'type', 'private_cb_t', 0}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _151
  _413 = get_tuple_element _151, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _413
  _808 = bif:is_map _413
  br _808, ^808, ^804

808:
  %% Argument types:
  %%    _413 => map()
  %% Aliased:
  %%    _413
  _418 = get_map_element _413, `exported`

  %% Aliased:
  %%    _418
  _805 = succeeded:guard _418
  br _805, ^805, ^804

805:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _418
  _807 = bif:'=:=' _418, `false`
  br _807, ^803, ^804

803:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _828 = bif:is_tuple _153
  br _828, ^828, ^818

828:
  %% Argument types:
  %%    _153 => {...}
  %% Aliased:
  %%    _153
  _829 = bif:tuple_size _153

  %% Argument types:
  %%    _829 => 0..16777215
  %% Unique:
  %%    _829
  _830 = bif:'=:=' _829, `5`
  br _830, ^827, ^818

827:
  %% Argument types:
  %%    _153 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _153
  _431 = get_tuple_element _153, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _431
  _826 = bif:'=:=' _431, `{type,opaque_t,0}`
  br _826, ^826, ^818

826:
  %% Argument types:
  %%    _153 => {{'type', 'opaque_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _153
  _429 = get_tuple_element _153, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _429
  _825 = bif:'=:=' _429, `[<<"opaque_t()">>]`
  br _825, ^825, ^818

825:
  %% Argument types:
  %%    _153 => {{'type', 'opaque_t', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _153
  _428 = get_tuple_element _153, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _428
  _824 = bif:'=:=' _428, `none`
  br _824, ^823, ^818

823:
  %% Argument types:
  %%    _153 => {{'type', 'opaque_t', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _153
  _427 = get_tuple_element _153, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _427
  _822 = bif:is_map _427
  br _822, ^822, ^818

822:
  %% Argument types:
  %%    _427 => map()
  %% Aliased:
  %%    _427
  _432 = get_map_element _427, `exported`

  %% Aliased:
  %%    _432
  _819 = succeeded:guard _432
  br _819, ^819, ^818

819:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _432
  _821 = bif:'=:=' _432, `true`
  br _821, ^817, ^818

817:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _155
  _843 = bif:is_tuple _155
  br _843, ^843, ^833

843:
  %% Argument types:
  %%    _155 => {...}
  %% Aliased:
  %%    _155
  _844 = bif:tuple_size _155

  %% Argument types:
  %%    _844 => 0..16777215
  %% Unique:
  %%    _844
  _845 = bif:'=:=' _844, `5`
  br _845, ^842, ^833

842:
  %% Argument types:
  %%    _155 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _155
  _445 = get_tuple_element _155, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _445
  _841 = bif:'=:=' _445, `{type,public_t,0}`
  br _841, ^841, ^833

841:
  %% Argument types:
  %%    _155 => {{'type', 'public_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _155
  _443 = get_tuple_element _155, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _443
  _840 = bif:'=:=' _443, `[<<"public_t()">>]`
  br _840, ^840, ^833

840:
  %% Argument types:
  %%    _155 => {{'type', 'public_t', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _155
  _442 = get_tuple_element _155, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _442
  _839 = bif:'=:=' _442, `none`
  br _839, ^838, ^833

838:
  %% Argument types:
  %%    _155 => {{'type', 'public_t', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _155
  _441 = get_tuple_element _155, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _441
  _837 = bif:is_map _441
  br _837, ^837, ^833

837:
  %% Argument types:
  %%    _441 => map()
  %% Aliased:
  %%    _441
  _446 = get_map_element _441, `exported`

  %% Aliased:
  %%    _446
  _834 = succeeded:guard _446
  br _834, ^834, ^833

834:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _446
  _836 = bif:'=:=' _446, `true`
  br _836, ^832, ^833

832:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _858 = bif:is_tuple _157
  br _858, ^858, ^848

858:
  %% Argument types:
  %%    _157 => {...}
  %% Aliased:
  %%    _157
  _859 = bif:tuple_size _157

  %% Argument types:
  %%    _859 => 0..16777215
  %% Unique:
  %%    _859
  _860 = bif:'=:=' _859, `5`
  br _860, ^857, ^848

857:
  %% Argument types:
  %%    _157 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _157
  _459 = get_tuple_element _157, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _459
  _856 = bif:'=:=' _459, `{type,private_t,0}`
  br _856, ^856, ^848

856:
  %% Argument types:
  %%    _157 => {{'type', 'private_t', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _157
  _457 = get_tuple_element _157, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _457
  _855 = bif:'=:=' _457, `[<<"private_t()">>]`
  br _855, ^855, ^848

855:
  %% Argument types:
  %%    _157 => {{'type', 'private_t', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _157
  _456 = get_tuple_element _157, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _456
  _854 = bif:'=:=' _456, `none`
  br _854, ^853, ^848

853:
  %% Argument types:
  %%    _157 => {{'type', 'private_t', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _157
  _455 = get_tuple_element _157, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _455
  _852 = bif:is_map _455
  br _852, ^852, ^848

852:
  %% Argument types:
  %%    _455 => map()
  %% Aliased:
  %%    _455
  _460 = get_map_element _455, `exported`

  %% Aliased:
  %%    _460
  _849 = succeeded:guard _460
  br _849, ^849, ^848

849:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _460
  _851 = bif:'=:=' _460, `false`
  br _851, ^847, ^848

847:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _869 = bif:is_tuple _159
  br _869, ^869, ^863

869:
  %% Argument types:
  %%    _159 => {...}
  %% Aliased:
  %%    _159
  _870 = bif:tuple_size _159

  %% Argument types:
  %%    _870 => 0..16777215
  %% Unique:
  %%    _870
  _871 = bif:'=:=' _870, `5`
  br _871, ^868, ^863

868:
  %% Argument types:
  %%    _159 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _159
  _473 = get_tuple_element _159, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _473
  _867 = bif:'=:=' _473, `{callback,bar,1}`
  br _867, ^867, ^863

867:
  %% Argument types:
  %%    _159 => {{'callback', 'bar', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _159
  _470 = get_tuple_element _159, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _470
  _866 = bif:'=:=' _470, `none`
  br _866, ^865, ^863

865:
  %% Argument types:
  %%    _159 => {{'callback', 'bar', 1}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _159
  _469 = get_tuple_element _159, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _469
  _864 = bif:is_map _469
  br _864, ^862, ^863

862:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _880 = bif:is_tuple _161
  br _880, ^880, ^874

880:
  %% Argument types:
  %%    _161 => {...}
  %% Aliased:
  %%    _161
  _881 = bif:tuple_size _161

  %% Argument types:
  %%    _881 => 0..16777215
  %% Unique:
  %%    _881
  _882 = bif:'=:=' _881, `5`
  br _882, ^879, ^874

879:
  %% Argument types:
  %%    _161 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _161
  _486 = get_tuple_element _161, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _486
  _878 = bif:'=:=' _486, `{function,bounded,2}`
  br _878, ^878, ^874

878:
  %% Argument types:
  %%    _161 => {{'function', 'bounded', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _161
  _483 = get_tuple_element _161, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _483
  _877 = bif:'=:=' _483, `none`
  br _877, ^876, ^874

876:
  %% Argument types:
  %%    _161 => {{'function', 'bounded', 2}, any(), any(), 'none', any()}
  %% Aliased:
  %%    _161
  _482 = get_tuple_element _161, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _482
  _875 = bif:is_map _482
  br _875, ^873, ^874

873:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _893 = bif:is_tuple _163
  br _893, ^893, ^885

893:
  %% Argument types:
  %%    _163 => {...}
  %% Aliased:
  %%    _163
  _894 = bif:tuple_size _163

  %% Argument types:
  %%    _894 => 0..16777215
  %% Unique:
  %%    _894
  _895 = bif:'=:=' _894, `5`
  br _895, ^892, ^885

892:
  %% Argument types:
  %%    _163 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _163
  _499 = get_tuple_element _163, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _499
  _891 = bif:'=:=' _499, `{function,hidden_type_exposed,0}`
  br _891, ^891, ^885

891:
  %% Argument types:
  %%    _163 => {{'function', 'hidden_type_exposed', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _163
  _498 = get_tuple_element _163, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _498
  _890 = bif:'=:=' _498, `{34,1}`
  br _890, ^890, ^885

890:
  %% Argument types:
  %%    _163 => {{'function', 'hidden_type_exposed', 0}, {34, 1}, any(), any(), any()}
  %% Aliased:
  %%    _163
  _497 = get_tuple_element _163, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _497
  _889 = bif:'=:=' _497, `[<<"hidden_type_exposed()">>]`
  br _889, ^889, ^885

889:
  %% Argument types:
  %%    _163 => {{'function', 'hidden_type_exposed', 0}, {34, 1}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _163
  _496 = get_tuple_element _163, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _496
  _888 = bif:'=:=' _496, `none`
  br _888, ^887, ^885

887:
  %% Argument types:
  %%    _163 => {{'function', 'hidden_type_exposed', 0}, {34, 1}, nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _163
  _495 = get_tuple_element _163, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _495
  _886 = bif:is_map _495
  br _886, ^884, ^885

884:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _165
  _905 = bif:is_tuple _165
  br _905, ^905, ^898

905:
  %% Argument types:
  %%    _165 => {...}
  %% Aliased:
  %%    _165
  _906 = bif:tuple_size _165

  %% Argument types:
  %%    _906 => 0..16777215
  %% Unique:
  %%    _906
  _907 = bif:'=:=' _906, `5`
  br _907, ^904, ^898

904:
  %% Argument types:
  %%    _165 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _165
  _512 = get_tuple_element _165, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _512
  _903 = bif:'=:=' _512, `{function,hidden,0}`
  br _903, ^903, ^898

903:
  %% Argument types:
  %%    _165 => {{'function', 'hidden', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _165
  _510 = get_tuple_element _165, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _510
  _902 = bif:'=:=' _510, `[<<"hidden()">>]`
  br _902, ^902, ^898

902:
  %% Argument types:
  %%    _165 => {{'function', 'hidden', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _165
  _509 = get_tuple_element _165, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _509
  _901 = bif:'=:=' _509, `hidden`
  br _901, ^900, ^898

900:
  %% Argument types:
  %%    _165 => {{'function', 'hidden', 0}, any(), nonempty_list(bitstring(64)), 'hidden', any()}
  %% Aliased:
  %%    _165
  _508 = get_tuple_element _165, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _508
  _899 = bif:is_map _508
  br _899, ^897, ^898

897:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _917 = bif:is_tuple _167
  br _917, ^917, ^910

917:
  %% Argument types:
  %%    _167 => {...}
  %% Aliased:
  %%    _167
  _918 = bif:tuple_size _167

  %% Argument types:
  %%    _918 => 0..16777215
  %% Unique:
  %%    _918
  _919 = bif:'=:=' _918, `5`
  br _919, ^916, ^910

916:
  %% Argument types:
  %%    _167 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _167
  _525 = get_tuple_element _167, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _525
  _915 = bif:'=:=' _525, `{function,bar,0}`
  br _915, ^915, ^910

915:
  %% Argument types:
  %%    _167 => {{'function', 'bar', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _167
  _523 = get_tuple_element _167, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _523
  _914 = bif:'=:=' _523, `[<<"bar()">>]`
  br _914, ^914, ^910

914:
  %% Argument types:
  %%    _167 => {{'function', 'bar', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _167
  _522 = get_tuple_element _167, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _522
  _913 = bif:'=:=' _522, `none`
  br _913, ^912, ^910

912:
  %% Argument types:
  %%    _167 => {{'function', 'bar', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _167
  _521 = get_tuple_element _167, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _521
  _911 = bif:is_map _521
  br _911, ^909, ^910

909:
  %% Result type:
  %%    'ok'
  ret `ok`

910:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _514 = put_tuple `value`, _167

  %% Argument types:
  %%    _514 => {'value', any()}
  %% Unique:
  %%    _514
  _515 = put_list _514, `[]`

  %% Argument types:
  %%    _515 => nonempty_list({'value', any()})
  %% Unique:
  %%    _515
  _516 = put_list `{pattern,"{ { function , bar , 0 } , _ , [ << \"bar()\" >> ] , none , # { } }"}`, _515

  %% Argument types:
  %%    _516 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _516
  _517 = put_list `{expression,"Bar"}`, _516

  %% Argument types:
  %%    _517 => nonempty_list({'expression', nonempty_list(66..114)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _517
  _518 = put_list `{line,340}`, _517

  %% Argument types:
  %%    _518 => nonempty_list({'expression', nonempty_list(66..114)} | {'line', 340} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _518
  _519 = put_list `{module,beam_doc_SUITE}`, _518

  %% Argument types:
  %%    _519 => nonempty_list({'expression', nonempty_list(66..114)} | {'line', 340} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _519
  _520 = put_tuple `assertMatch`, _519

  %% beam_doc_SUITE.erl:340
  %% Unique:
  %%    _520
  _551 = call (`erlang`:`error`/1), _520

  %% Aliased:
  %%    _551
  _920 = succeeded:body _551
  br ^1

898:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _165
  _501 = put_tuple `value`, _165

  %% Argument types:
  %%    _501 => {'value', any()}
  %% Unique:
  %%    _501
  _502 = put_list _501, `[]`

  %% Argument types:
  %%    _502 => nonempty_list({'value', any()})
  %% Unique:
  %%    _502
  _503 = put_list `{pattern,"{ { function , hidden , 0 } , _ , [ << \"hidden()\" >> ] , hidden , # { } }"}`, _502

  %% Argument types:
  %%    _503 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _503
  _504 = put_list `{expression,"Hidden"}`, _503

  %% Argument types:
  %%    _504 => nonempty_list({'expression', nonempty_list(72..110)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _504
  _505 = put_list `{line,339}`, _504

  %% Argument types:
  %%    _505 => nonempty_list({'expression', nonempty_list(72..110)} | {'line', 339} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _505
  _506 = put_list `{module,beam_doc_SUITE}`, _505

  %% Argument types:
  %%    _506 => nonempty_list({'expression', nonempty_list(72..110)} | {'line', 339} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _506
  _507 = put_tuple `assertMatch`, _506

  %% beam_doc_SUITE.erl:339
  %% Unique:
  %%    _507
  _550 = call (`erlang`:`error`/1), _507

  %% Aliased:
  %%    _550
  _908 = succeeded:body _550
  br ^1

885:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _488 = put_tuple `value`, _163

  %% Argument types:
  %%    _488 => {'value', any()}
  %% Unique:
  %%    _488
  _489 = put_list _488, `[]`

  %% Argument types:
  %%    _489 => nonempty_list({'value', any()})
  %% Unique:
  %%    _489
  _490 = put_list `{pattern,"{ { function , hidden_type_exposed , 0 } , { 34 , 1 } , [ << \"hidden_type_exposed()\" >> ] , none , # { } }"}`, _489

  %% Argument types:
  %%    _490 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _490
  _491 = put_list `{expression,"HiddenTypeExposed"}`, _490

  %% Argument types:
  %%    _491 => nonempty_list({'expression', nonempty_list(69..121)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _491
  _492 = put_list `{line,338}`, _491

  %% Argument types:
  %%    _492 => nonempty_list({'expression', nonempty_list(69..121)} | {'line', 338} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _492
  _493 = put_list `{module,beam_doc_SUITE}`, _492

  %% Argument types:
  %%    _493 => nonempty_list({'expression', nonempty_list(69..121)} | {'line', 338} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _493
  _494 = put_tuple `assertMatch`, _493

  %% beam_doc_SUITE.erl:338
  %% Unique:
  %%    _494
  _549 = call (`erlang`:`error`/1), _494

  %% Aliased:
  %%    _549
  _896 = succeeded:body _549
  br ^1

874:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _475 = put_tuple `value`, _161

  %% Argument types:
  %%    _475 => {'value', any()}
  %% Unique:
  %%    _475
  _476 = put_list _475, `[]`

  %% Argument types:
  %%    _476 => nonempty_list({'value', any()})
  %% Unique:
  %%    _476
  _477 = put_list `{pattern,"{ { function , bounded , 2 } , _ , _ , none , # { } }"}`, _476

  %% Argument types:
  %%    _477 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _477
  _478 = put_list `{expression,"Bounded"}`, _477

  %% Argument types:
  %%    _478 => nonempty_list({'expression', nonempty_list(66..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _478
  _479 = put_list `{line,337}`, _478

  %% Argument types:
  %%    _479 => nonempty_list({'expression', nonempty_list(66..117)} | {'line', 337} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _479
  _480 = put_list `{module,beam_doc_SUITE}`, _479

  %% Argument types:
  %%    _480 => nonempty_list({'expression', nonempty_list(66..117)} | {'line', 337} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _480
  _481 = put_tuple `assertMatch`, _480

  %% beam_doc_SUITE.erl:337
  %% Unique:
  %%    _481
  _548 = call (`erlang`:`error`/1), _481

  %% Aliased:
  %%    _548
  _883 = succeeded:body _548
  br ^1

863:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _462 = put_tuple `value`, _159

  %% Argument types:
  %%    _462 => {'value', any()}
  %% Unique:
  %%    _462
  _463 = put_list _462, `[]`

  %% Argument types:
  %%    _463 => nonempty_list({'value', any()})
  %% Unique:
  %%    _463
  _464 = put_list `{pattern,"{ { callback , bar , 1 } , _ , _ , none , # { } }"}`, _463

  %% Argument types:
  %%    _464 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _464
  _465 = put_list `{expression,"CBar"}`, _464

  %% Argument types:
  %%    _465 => nonempty_list({'expression', nonempty_list(66..114)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _465
  _466 = put_list `{line,336}`, _465

  %% Argument types:
  %%    _466 => nonempty_list({'expression', nonempty_list(66..114)} | {'line', 336} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _466
  _467 = put_list `{module,beam_doc_SUITE}`, _466

  %% Argument types:
  %%    _467 => nonempty_list({'expression', nonempty_list(66..114)} | {'line', 336} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _467
  _468 = put_tuple `assertMatch`, _467

  %% beam_doc_SUITE.erl:336
  %% Unique:
  %%    _468
  _547 = call (`erlang`:`error`/1), _468

  %% Aliased:
  %%    _547
  _872 = succeeded:body _547
  br ^1

848:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _448 = put_tuple `value`, _157

  %% Argument types:
  %%    _448 => {'value', any()}
  %% Unique:
  %%    _448
  _449 = put_list _448, `[]`

  %% Argument types:
  %%    _449 => nonempty_list({'value', any()})
  %% Unique:
  %%    _449
  _450 = put_list `{pattern,"{ { type , private_t , 0 } , _ , [ << \"private_t()\" >> ] , none , # { exported := false } }"}`, _449

  %% Argument types:
  %%    _450 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _450
  _451 = put_list `{expression,"PrivateT"}`, _450

  %% Argument types:
  %%    _451 => nonempty_list({'expression', nonempty_list(80..118)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _451
  _452 = put_list `{line,335}`, _451

  %% Argument types:
  %%    _452 => nonempty_list({'expression', nonempty_list(80..118)} | {'line', 335} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _452
  _453 = put_list `{module,beam_doc_SUITE}`, _452

  %% Argument types:
  %%    _453 => nonempty_list({'expression', nonempty_list(80..118)} | {'line', 335} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _453
  _454 = put_tuple `assertMatch`, _453

  %% beam_doc_SUITE.erl:335
  %% Unique:
  %%    _454
  _546 = call (`erlang`:`error`/1), _454

  %% Aliased:
  %%    _546
  _861 = succeeded:body _546
  br ^1

833:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _155
  _434 = put_tuple `value`, _155

  %% Argument types:
  %%    _434 => {'value', any()}
  %% Unique:
  %%    _434
  _435 = put_list _434, `[]`

  %% Argument types:
  %%    _435 => nonempty_list({'value', any()})
  %% Unique:
  %%    _435
  _436 = put_list `{pattern,"{ { type , public_t , 0 } , _ , [ << \"public_t()\" >> ] , none , # { exported := true } }"}`, _435

  %% Argument types:
  %%    _436 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _436
  _437 = put_list `{expression,"PublicT"}`, _436

  %% Argument types:
  %%    _437 => nonempty_list({'expression', nonempty_list(80..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _437
  _438 = put_list `{line,334}`, _437

  %% Argument types:
  %%    _438 => nonempty_list({'expression', nonempty_list(80..117)} | {'line', 334} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _438
  _439 = put_list `{module,beam_doc_SUITE}`, _438

  %% Argument types:
  %%    _439 => nonempty_list({'expression', nonempty_list(80..117)} | {'line', 334} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _439
  _440 = put_tuple `assertMatch`, _439

  %% beam_doc_SUITE.erl:334
  %% Unique:
  %%    _440
  _545 = call (`erlang`:`error`/1), _440

  %% Aliased:
  %%    _545
  _846 = succeeded:body _545
  br ^1

818:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _420 = put_tuple `value`, _153

  %% Argument types:
  %%    _420 => {'value', any()}
  %% Unique:
  %%    _420
  _421 = put_list _420, `[]`

  %% Argument types:
  %%    _421 => nonempty_list({'value', any()})
  %% Unique:
  %%    _421
  _422 = put_list `{pattern,"{ { type , opaque_t , 0 } , _ , [ << \"opaque_t()\" >> ] , none , # { exported := true } }"}`, _421

  %% Argument types:
  %%    _422 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _422
  _423 = put_list `{expression,"OpaqueT"}`, _422

  %% Argument types:
  %%    _423 => nonempty_list({'expression', nonempty_list(79..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _423
  _424 = put_list `{line,333}`, _423

  %% Argument types:
  %%    _424 => nonempty_list({'expression', nonempty_list(79..117)} | {'line', 333} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _424
  _425 = put_list `{module,beam_doc_SUITE}`, _424

  %% Argument types:
  %%    _425 => nonempty_list({'expression', nonempty_list(79..117)} | {'line', 333} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _425
  _426 = put_tuple `assertMatch`, _425

  %% beam_doc_SUITE.erl:333
  %% Unique:
  %%    _426
  _544 = call (`erlang`:`error`/1), _426

  %% Aliased:
  %%    _544
  _831 = succeeded:body _544
  br ^1

804:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _406 = put_tuple `value`, _151

  %% Argument types:
  %%    _406 => {'value', any()}
  %% Unique:
  %%    _406
  _407 = put_list _406, `[]`

  %% Argument types:
  %%    _407 => nonempty_list({'value', any()})
  %% Unique:
  %%    _407
  _408 = put_list `{pattern,"{ { type , private_cb_t , 0 } , _ , _ , none , # { exported := false } }"}`, _407

  %% Argument types:
  %%    _408 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _408
  _409 = put_list `{expression,"PrivateCBT"}`, _408

  %% Argument types:
  %%    _409 => nonempty_list({'expression', nonempty_list(66..118)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _409
  _410 = put_list `{line,332}`, _409

  %% Argument types:
  %%    _410 => nonempty_list({'expression', nonempty_list(66..118)} | {'line', 332} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _410
  _411 = put_list `{module,beam_doc_SUITE}`, _410

  %% Argument types:
  %%    _411 => nonempty_list({'expression', nonempty_list(66..118)} | {'line', 332} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _411
  _412 = put_tuple `assertMatch`, _411

  %% beam_doc_SUITE.erl:332
  %% Unique:
  %%    _412
  _543 = call (`erlang`:`error`/1), _412

  %% Aliased:
  %%    _543
  _816 = succeeded:body _543
  br ^1

789:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _392 = put_tuple `value`, _149

  %% Argument types:
  %%    _392 => {'value', any()}
  %% Unique:
  %%    _392
  _393 = put_list _392, `[]`

  %% Argument types:
  %%    _393 => nonempty_list({'value', any()})
  %% Unique:
  %%    _393
  _394 = put_list `{pattern,"{ { type , hidden_export_t , 0 } , _ , [ << \"hidden_export_t()\" >> ] , hidden , # { exported := true } }"}`, _393

  %% Argument types:
  %%    _394 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _394
  _395 = put_list `{expression,"HiddenExportT"}`, _394

  %% Argument types:
  %%    _395 => nonempty_list({'expression', nonempty_list(69..120)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _395
  _396 = put_list `{line,331}`, _395

  %% Argument types:
  %%    _396 => nonempty_list({'expression', nonempty_list(69..120)} | {'line', 331} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _396
  _397 = put_list `{module,beam_doc_SUITE}`, _396

  %% Argument types:
  %%    _397 => nonempty_list({'expression', nonempty_list(69..120)} | {'line', 331} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _397
  _398 = put_tuple `assertMatch`, _397

  %% beam_doc_SUITE.erl:331
  %% Unique:
  %%    _398
  _542 = call (`erlang`:`error`/1), _398

  %% Aliased:
  %%    _542
  _802 = succeeded:body _542
  br ^1

773:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _147
  _378 = put_tuple `value`, _147

  %% Argument types:
  %%    _378 => {'value', any()}
  %% Unique:
  %%    _378
  _379 = put_list _378, `[]`

  %% Argument types:
  %%    _379 => nonempty_list({'value', any()})
  %% Unique:
  %%    _379
  _380 = put_list `{pattern,"{ { type , private , 0 } , { 30 , 2 } , [ << \"private()\" >> ] , hidden , # { exported := false } }"}`, _379

  %% Argument types:
  %%    _380 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _380
  _381 = put_list `{expression,"Private"}`, _380

  %% Argument types:
  %%    _381 => nonempty_list({'expression', nonempty_list(80..118)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _381
  _382 = put_list `{line,330}`, _381

  %% Argument types:
  %%    _382 => nonempty_list({'expression', nonempty_list(80..118)} | {'line', 330} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _382
  _383 = put_list `{module,beam_doc_SUITE}`, _382

  %% Argument types:
  %%    _383 => nonempty_list({'expression', nonempty_list(80..118)} | {'line', 330} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _383
  _384 = put_tuple `assertMatch`, _383

  %% beam_doc_SUITE.erl:330
  %% Unique:
  %%    _384
  _541 = call (`erlang`:`error`/1), _384

  %% Aliased:
  %%    _541
  _787 = succeeded:body _541
  br ^1

759:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _364 = put_tuple `value`, _145

  %% Argument types:
  %%    _364 => {'value', any()}
  %% Unique:
  %%    _364
  _365 = put_list _364, `[]`

  %% Argument types:
  %%    _365 => nonempty_list({'value', any()})
  %% Unique:
  %%    _365
  _366 = put_list `{pattern,"{ { type , bounded_arg_t , 0 } , _ , _ , none , # { exported := false } }"}`, _365

  %% Argument types:
  %%    _366 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _366
  _367 = put_list `{expression,"BoundedArgT"}`, _366

  %% Argument types:
  %%    _367 => nonempty_list({'expression', nonempty_list(65..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _367
  _368 = put_list `{line,329}`, _367

  %% Argument types:
  %%    _368 => nonempty_list({'expression', nonempty_list(65..117)} | {'line', 329} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _368
  _369 = put_list `{module,beam_doc_SUITE}`, _368

  %% Argument types:
  %%    _369 => nonempty_list({'expression', nonempty_list(65..117)} | {'line', 329} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _369
  _370 = put_tuple `assertMatch`, _369

  %% beam_doc_SUITE.erl:329
  %% Unique:
  %%    _370
  _540 = call (`erlang`:`error`/1), _370

  %% Aliased:
  %%    _540
  _771 = succeeded:body _540
  br ^1

745:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _350 = put_tuple `value`, _143

  %% Argument types:
  %%    _350 => {'value', any()}
  %% Unique:
  %%    _350
  _351 = put_list _350, `[]`

  %% Argument types:
  %%    _351 => nonempty_list({'value', any()})
  %% Unique:
  %%    _351
  _352 = put_list `{pattern,"{ { type , arg_t , 0 } , _ , _ , none , # { exported := false } }"}`, _351

  %% Argument types:
  %%    _352 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _352
  _353 = put_list `{expression,"ArgT"}`, _352

  %% Argument types:
  %%    _353 => nonempty_list({'expression', nonempty_list(65..114)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _353
  _354 = put_list `{line,328}`, _353

  %% Argument types:
  %%    _354 => nonempty_list({'expression', nonempty_list(65..114)} | {'line', 328} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _354
  _355 = put_list `{module,beam_doc_SUITE}`, _354

  %% Argument types:
  %%    _355 => nonempty_list({'expression', nonempty_list(65..114)} | {'line', 328} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _355
  _356 = put_tuple `assertMatch`, _355

  %% beam_doc_SUITE.erl:328
  %% Unique:
  %%    _356
  _539 = call (`erlang`:`error`/1), _356

  %% Aliased:
  %%    _539
  _757 = succeeded:body _539
  br ^1

731:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _336 = put_tuple `value`, _141

  %% Argument types:
  %%    _336 => {'value', any()}
  %% Unique:
  %%    _336
  _337 = put_list _336, `[]`

  %% Argument types:
  %%    _337 => nonempty_list({'value', any()})
  %% Unique:
  %%    _337
  _338 = put_list `{pattern,"{ { type , bounded_ret_t , 0 } , _ , _ , none , # { exported := false } }"}`, _337

  %% Argument types:
  %%    _338 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _338
  _339 = put_list `{expression,"BoundedRetT"}`, _338

  %% Argument types:
  %%    _339 => nonempty_list({'expression', nonempty_list(66..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _339
  _340 = put_list `{line,327}`, _339

  %% Argument types:
  %%    _340 => nonempty_list({'expression', nonempty_list(66..117)} | {'line', 327} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _340
  _341 = put_list `{module,beam_doc_SUITE}`, _340

  %% Argument types:
  %%    _341 => nonempty_list({'expression', nonempty_list(66..117)} | {'line', 327} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _341
  _342 = put_tuple `assertMatch`, _341

  %% beam_doc_SUITE.erl:327
  %% Unique:
  %%    _342
  _538 = call (`erlang`:`error`/1), _342

  %% Aliased:
  %%    _538
  _743 = succeeded:body _538
  br ^1

717:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _322 = put_tuple `value`, _139

  %% Argument types:
  %%    _322 => {'value', any()}
  %% Unique:
  %%    _322
  _323 = put_list _322, `[]`

  %% Argument types:
  %%    _323 => nonempty_list({'value', any()})
  %% Unique:
  %%    _323
  _324 = put_list `{pattern,"{ { type , complex , 1 } , _ , _ , none , # { exported := true } }"}`, _323

  %% Argument types:
  %%    _324 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _324
  _325 = put_list `{expression,"Complex"}`, _324

  %% Argument types:
  %%    _325 => nonempty_list({'expression', nonempty_list(67..120)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _325
  _326 = put_list `{line,326}`, _325

  %% Argument types:
  %%    _326 => nonempty_list({'expression', nonempty_list(67..120)} | {'line', 326} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _326
  _327 = put_list `{module,beam_doc_SUITE}`, _326

  %% Argument types:
  %%    _327 => nonempty_list({'expression', nonempty_list(67..120)} | {'line', 326} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _327
  _328 = put_tuple `assertMatch`, _327

  %% beam_doc_SUITE.erl:326
  %% Unique:
  %%    _328
  _537 = call (`erlang`:`error`/1), _328

  %% Aliased:
  %%    _537
  _729 = succeeded:body _537
  br ^1

703:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _308 = put_tuple `value`, _137

  %% Argument types:
  %%    _308 => {'value', any()}
  %% Unique:
  %%    _308
  _309 = put_list _308, `[]`

  %% Argument types:
  %%    _309 => nonempty_list({'value', any()})
  %% Unique:
  %%    _309
  _310 = put_list `{pattern,"{ { type , fun_t , 0 } , _ , _ , none , # { exported := false } }"}`, _309

  %% Argument types:
  %%    _310 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _310
  _311 = put_list `{expression,"FunT"}`, _310

  %% Argument types:
  %%    _311 => nonempty_list({'expression', nonempty_list(70..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _311
  _312 = put_list `{line,325}`, _311

  %% Argument types:
  %%    _312 => nonempty_list({'expression', nonempty_list(70..117)} | {'line', 325} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _312
  _313 = put_list `{module,beam_doc_SUITE}`, _312

  %% Argument types:
  %%    _313 => nonempty_list({'expression', nonempty_list(70..117)} | {'line', 325} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _313
  _314 = put_tuple `assertMatch`, _313

  %% beam_doc_SUITE.erl:325
  %% Unique:
  %%    _314
  _536 = call (`erlang`:`error`/1), _314

  %% Aliased:
  %%    _536
  _715 = succeeded:body _536
  br ^1

689:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _294 = put_tuple `value`, _135

  %% Argument types:
  %%    _294 => {'value', any()}
  %% Unique:
  %%    _294
  _295 = put_list _294, `[]`

  %% Argument types:
  %%    _295 => nonempty_list({'value', any()})
  %% Unique:
  %%    _295
  _296 = put_list `{pattern,"{ { type , fun_ret_t , 0 } , _ , _ , none , # { exported := false } }"}`, _295

  %% Argument types:
  %%    _296 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _296
  _297 = put_list `{expression,"FunRetT"}`, _296

  %% Argument types:
  %%    _297 => nonempty_list({'expression', nonempty_list(70..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _297
  _298 = put_list `{line,324}`, _297

  %% Argument types:
  %%    _298 => nonempty_list({'expression', nonempty_list(70..117)} | {'line', 324} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _298
  _299 = put_list `{module,beam_doc_SUITE}`, _298

  %% Argument types:
  %%    _299 => nonempty_list({'expression', nonempty_list(70..117)} | {'line', 324} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _299
  _300 = put_tuple `assertMatch`, _299

  %% beam_doc_SUITE.erl:324
  %% Unique:
  %%    _300
  _535 = call (`erlang`:`error`/1), _300

  %% Aliased:
  %%    _535
  _701 = succeeded:body _535
  br ^1

675:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _280 = put_tuple `value`, _133

  %% Argument types:
  %%    _280 => {'value', any()}
  %% Unique:
  %%    _280
  _281 = put_list _280, `[]`

  %% Argument types:
  %%    _281 => nonempty_list({'value', any()})
  %% Unique:
  %%    _281
  _282 = put_list `{pattern,"{ { type , fun_ret_2_t , 0 } , _ , _ , none , # { exported := false } }"}`, _281

  %% Argument types:
  %%    _282 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _282
  _283 = put_list `{expression,"FunRet2T"}`, _282

  %% Argument types:
  %%    _283 => nonempty_list({'expression', nonempty_list(50..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _283
  _284 = put_list `{line,323}`, _283

  %% Argument types:
  %%    _284 => nonempty_list({'expression', nonempty_list(50..117)} | {'line', 323} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _284
  _285 = put_list `{module,beam_doc_SUITE}`, _284

  %% Argument types:
  %%    _285 => nonempty_list({'expression', nonempty_list(50..117)} | {'line', 323} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _285
  _286 = put_tuple `assertMatch`, _285

  %% beam_doc_SUITE.erl:323
  %% Unique:
  %%    _286
  _534 = call (`erlang`:`error`/1), _286

  %% Aliased:
  %%    _534
  _687 = succeeded:body _534
  br ^1

661:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _266 = put_tuple `value`, _131

  %% Argument types:
  %%    _266 => {'value', any()}
  %% Unique:
  %%    _266
  _267 = put_list _266, `[]`

  %% Argument types:
  %%    _267 => nonempty_list({'value', any()})
  %% Unique:
  %%    _267
  _268 = put_list `{pattern,"{ { type , map_key_t , 0 } , _ , _ , none , # { exported := false } }"}`, _267

  %% Argument types:
  %%    _268 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _268
  _269 = put_list `{expression,"MapKeyT"}`, _268

  %% Argument types:
  %%    _269 => nonempty_list({'expression', nonempty_list(75..121)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _269
  _270 = put_list `{line,322}`, _269

  %% Argument types:
  %%    _270 => nonempty_list({'expression', nonempty_list(75..121)} | {'line', 322} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _270
  _271 = put_list `{module,beam_doc_SUITE}`, _270

  %% Argument types:
  %%    _271 => nonempty_list({'expression', nonempty_list(75..121)} | {'line', 322} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _271
  _272 = put_tuple `assertMatch`, _271

  %% beam_doc_SUITE.erl:322
  %% Unique:
  %%    _272
  _533 = call (`erlang`:`error`/1), _272

  %% Aliased:
  %%    _533
  _673 = succeeded:body _533
  br ^1

647:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _252 = put_tuple `value`, _129

  %% Argument types:
  %%    _252 => {'value', any()}
  %% Unique:
  %%    _252
  _253 = put_list _252, `[]`

  %% Argument types:
  %%    _253 => nonempty_list({'value', any()})
  %% Unique:
  %%    _253
  _254 = put_list `{pattern,"{ { type , map_value_t , 0 } , _ , _ , none , # { exported := false } }"}`, _253

  %% Argument types:
  %%    _254 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _254
  _255 = put_list `{expression,"MapValueT"}`, _254

  %% Argument types:
  %%    _255 => nonempty_list({'expression', nonempty_list(77..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _255
  _256 = put_list `{line,321}`, _255

  %% Argument types:
  %%    _256 => nonempty_list({'expression', nonempty_list(77..117)} | {'line', 321} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _256
  _257 = put_list `{module,beam_doc_SUITE}`, _256

  %% Argument types:
  %%    _257 => nonempty_list({'expression', nonempty_list(77..117)} | {'line', 321} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _257
  _258 = put_tuple `assertMatch`, _257

  %% beam_doc_SUITE.erl:321
  %% Unique:
  %%    _258
  _532 = call (`erlang`:`error`/1), _258

  %% Aliased:
  %%    _532
  _659 = succeeded:body _532
  br ^1

633:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _238 = put_tuple `value`, _127

  %% Argument types:
  %%    _238 => {'value', any()}
  %% Unique:
  %%    _238
  _239 = put_list _238, `[]`

  %% Argument types:
  %%    _239 => nonempty_list({'value', any()})
  %% Unique:
  %%    _239
  _240 = put_list `{pattern,"{ { type , map_key_2_t , 0 } , _ , _ , none , # { exported := false } }"}`, _239

  %% Argument types:
  %%    _240 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _240
  _241 = put_list `{expression,"MapKey2T"}`, _240

  %% Argument types:
  %%    _241 => nonempty_list({'expression', nonempty_list(50..121)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _241
  _242 = put_list `{line,320}`, _241

  %% Argument types:
  %%    _242 => nonempty_list({'expression', nonempty_list(50..121)} | {'line', 320} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _242
  _243 = put_list `{module,beam_doc_SUITE}`, _242

  %% Argument types:
  %%    _243 => nonempty_list({'expression', nonempty_list(50..121)} | {'line', 320} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _243
  _244 = put_tuple `assertMatch`, _243

  %% beam_doc_SUITE.erl:320
  %% Unique:
  %%    _244
  _531 = call (`erlang`:`error`/1), _244

  %% Aliased:
  %%    _531
  _645 = succeeded:body _531
  br ^1

619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _224 = put_tuple `value`, _125

  %% Argument types:
  %%    _224 => {'value', any()}
  %% Unique:
  %%    _224
  _225 = put_list _224, `[]`

  %% Argument types:
  %%    _225 => nonempty_list({'value', any()})
  %% Unique:
  %%    _225
  _226 = put_list `{pattern,"{ { type , map_value_2_t , 0 } , _ , _ , none , # { exported := false } }"}`, _225

  %% Argument types:
  %%    _226 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _226
  _227 = put_list `{expression,"MapValue2T"}`, _226

  %% Argument types:
  %%    _227 => nonempty_list({'expression', nonempty_list(50..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _227
  _228 = put_list `{line,319}`, _227

  %% Argument types:
  %%    _228 => nonempty_list({'expression', nonempty_list(50..117)} | {'line', 319} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _228
  _229 = put_list `{module,beam_doc_SUITE}`, _228

  %% Argument types:
  %%    _229 => nonempty_list({'expression', nonempty_list(50..117)} | {'line', 319} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _229
  _230 = put_tuple `assertMatch`, _229

  %% beam_doc_SUITE.erl:319
  %% Unique:
  %%    _230
  _530 = call (`erlang`:`error`/1), _230

  %% Aliased:
  %%    _530
  _631 = succeeded:body _530
  br ^1

605:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _210 = put_tuple `value`, _123

  %% Argument types:
  %%    _210 => {'value', any()}
  %% Unique:
  %%    _210
  _211 = put_list _210, `[]`

  %% Argument types:
  %%    _211 => nonempty_list({'value', any()})
  %% Unique:
  %%    _211
  _212 = put_list `{pattern,"{ { type , record_inline_t , 0 } , _ , _ , none , # { exported := false } }"}`, _211

  %% Argument types:
  %%    _212 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _212
  _213 = put_list `{expression,"RecordInlineT"}`, _212

  %% Argument types:
  %%    _213 => nonempty_list({'expression', nonempty_list(73..114)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _213
  _214 = put_list `{line,318}`, _213

  %% Argument types:
  %%    _214 => nonempty_list({'expression', nonempty_list(73..114)} | {'line', 318} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _214
  _215 = put_list `{module,beam_doc_SUITE}`, _214

  %% Argument types:
  %%    _215 => nonempty_list({'expression', nonempty_list(73..114)} | {'line', 318} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _215
  _216 = put_tuple `assertMatch`, _215

  %% beam_doc_SUITE.erl:318
  %% Unique:
  %%    _216
  _529 = call (`erlang`:`error`/1), _216

  %% Aliased:
  %%    _529
  _617 = succeeded:body _529
  br ^1

591:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _196 = put_tuple `value`, _121

  %% Argument types:
  %%    _196 => {'value', any()}
  %% Unique:
  %%    _196
  _197 = put_list _196, `[]`

  %% Argument types:
  %%    _197 => nonempty_list({'value', any()})
  %% Unique:
  %%    _197
  _198 = put_list `{pattern,"{ { type , record_a_t , 0 } , _ , _ , none , # { exported := false } }"}`, _197

  %% Argument types:
  %%    _198 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _198
  _199 = put_list `{expression,"RecordAT"}`, _198

  %% Argument types:
  %%    _199 => nonempty_list({'expression', nonempty_list(65..114)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _199
  _200 = put_list `{line,317}`, _199

  %% Argument types:
  %%    _200 => nonempty_list({'expression', nonempty_list(65..114)} | {'line', 317} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _200
  _201 = put_list `{module,beam_doc_SUITE}`, _200

  %% Argument types:
  %%    _201 => nonempty_list({'expression', nonempty_list(65..114)} | {'line', 317} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _201
  _202 = put_tuple `assertMatch`, _201

  %% beam_doc_SUITE.erl:317
  %% Unique:
  %%    _202
  _528 = call (`erlang`:`error`/1), _202

  %% Aliased:
  %%    _528
  _603 = succeeded:body _528
  br ^1

577:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _182 = put_tuple `value`, _119

  %% Argument types:
  %%    _182 => {'value', any()}
  %% Unique:
  %%    _182
  _183 = put_list _182, `[]`

  %% Argument types:
  %%    _183 => nonempty_list({'value', any()})
  %% Unique:
  %%    _183
  _184 = put_list `{pattern,"{ { type , tuple_t , 0 } , _ , _ , none , # { exported := false } }"}`, _183

  %% Argument types:
  %%    _184 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _184
  _185 = put_list `{expression,"TupleT"}`, _184

  %% Argument types:
  %%    _185 => nonempty_list({'expression', nonempty_list(84..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _185
  _186 = put_list `{line,316}`, _185

  %% Argument types:
  %%    _186 => nonempty_list({'expression', nonempty_list(84..117)} | {'line', 316} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _186
  _187 = put_list `{module,beam_doc_SUITE}`, _186

  %% Argument types:
  %%    _187 => nonempty_list({'expression', nonempty_list(84..117)} | {'line', 316} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _187
  _188 = put_tuple `assertMatch`, _187

  %% beam_doc_SUITE.erl:316
  %% Unique:
  %%    _188
  _527 = call (`erlang`:`error`/1), _188

  %% Aliased:
  %%    _527
  _589 = succeeded:body _527
  br ^1

563:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _168 = put_tuple `value`, _117

  %% Argument types:
  %%    _168 => {'value', any()}
  %% Unique:
  %%    _168
  _169 = put_list _168, `[]`

  %% Argument types:
  %%    _169 => nonempty_list({'value', any()})
  %% Unique:
  %%    _169
  _170 = put_list `{pattern,"{ { type , remote_type_t , 1 } , _ , _ , none , # { exported := false } }"}`, _169

  %% Argument types:
  %%    _170 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _170
  _171 = put_list `{expression,"RemoteTypeT"}`, _170

  %% Argument types:
  %%    _171 => nonempty_list({'expression', nonempty_list(82..121)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _171
  _172 = put_list `{line,315}`, _171

  %% Argument types:
  %%    _172 => nonempty_list({'expression', nonempty_list(82..121)} | {'line', 315} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _172
  _173 = put_list `{module,beam_doc_SUITE}`, _172

  %% Argument types:
  %%    _173 => nonempty_list({'expression', nonempty_list(82..121)} | {'line', 315} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _173
  _174 = put_tuple `assertMatch`, _173

  %% beam_doc_SUITE.erl:315
  %% Unique:
  %%    _174
  _526 = call (`erlang`:`error`/1), _174

  %% Aliased:
  %%    _526
  _575 = succeeded:body _526
  br ^1

561:
  %% beam_doc_SUITE.erl:302
  %% Aliased:
  %%    _106
  _552 = match_fail `badmatch`, _106

  %% Unique:
  %%    _552
  _962 = succeeded:body _552
  br ^1

558:
  %% beam_doc_SUITE.erl:300
  %% Aliased:
  %%    _103
  _553 = match_fail `badmatch`, _103

  %% Unique:
  %%    _553
  _969 = succeeded:body _553
  br ^1

1:
  _554 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _554
}

%% beam_doc_SUITE.erl:345
%% Counter = 126
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`export_all`(_0) {
0:
  %% beam_doc_SUITE.erl:347
  %% Aliased:
  %%    _0
  _18 = call (`default_compile_file`/2), _0, `"export_all"`

  %% Aliased:
  %%    _18
  _60 = succeeded:body _18
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _118 = is_tagged_tuple _18, `2`, `ok`
  br _118, ^115, ^62

115:
  %% Argument types:
  %%    _18 => {'ok', any()}
  %% Aliased:
  %%    _18
  _19 = get_tuple_element _18, `1`

  %% beam_doc_SUITE.erl:356
  %% Aliased:
  %%    _19
  _21 = call (`code`:`get_doc`/1), _19

  %% Aliased:
  %%    _21
  _63 = succeeded:body _21
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _111 = is_tagged_tuple _21, `2`, `ok`
  br _111, ^108, ^65

108:
  %% Argument types:
  %%    _21 => {'ok', any()}
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _105 = is_tagged_tuple _22, `7`, `docs_v1`
  br _105, ^102, ^65

102:
  %% Argument types:
  %%    _22 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _22
  _26 = get_tuple_element _22, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _101 = bif:'=:=' _26, `none`
  br _101, ^100, ^65

100:
  %% Argument types:
  %%    _22 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _22
  _24 = get_tuple_element _22, `6`

  %% Aliased:
  %%    _24
  _99 = is_nonempty_list _24
  br _99, ^99, ^65

99:
  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _32 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _31 = get_tl _24

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _96 = bif:is_tuple _32
  br _96, ^96, ^65

96:
  %% Argument types:
  %%    _32 => {...}
  %% Aliased:
  %%    _32
  _97 = bif:tuple_size _32

  %% Argument types:
  %%    _97 => 0..16777215
  %% Unique:
  %%    _97
  _98 = bif:'=:=' _97, `5`
  br _98, ^95, ^65

95:
  %% Argument types:
  %%    _32 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _32
  _37 = get_tuple_element _32, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _94 = bif:'=:=' _37, `{function,main2,0}`
  br _94, ^94, ^65

94:
  %% Argument types:
  %%    _32 => {{'function', 'main2', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _32
  _35 = get_tuple_element _32, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _93 = bif:'=:=' _35, `[<<"main2()">>]`
  br _93, ^93, ^65

93:
  %% Argument types:
  %%    _32 => {{'function', 'main2', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _32
  _34 = get_tuple_element _32, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _92 = bif:is_map _34
  br _92, ^92, ^65

92:
  %% Argument types:
  %%    _34 => map()
  %% Aliased:
  %%    _34
  _38 = get_map_element _34, `<<"en">>`

  %% Aliased:
  %%    _38
  _66 = succeeded:guard _38
  br _66, ^66, ^65

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _91 = bif:'=:=' _38, `<<"Second main">>`
  br _91, ^91, ^65

91:
  %% Argument types:
  %%    _32 => {{'function', 'main2', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _32
  _33 = get_tuple_element _32, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _90 = bif:is_map _33
  br _90, ^90, ^65

90:
  %% Argument types:
  %%    _33 => map()
  %% Aliased:
  %%    _33
  _39 = get_map_element _33, `equiv`

  %% Aliased:
  %%    _39
  _67 = succeeded:guard _39
  br _67, ^67, ^65

67:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _89 = bif:'=:=' _39, `<<"main()">>`
  br _89, ^89, ^65

89:
  %% Aliased:
  %%    _31
  _88 = is_nonempty_list _31
  br _88, ^88, ^65

88:
  %% Argument types:
  %%    _31 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _31
  _41 = get_hd _31

  %% Argument types:
  %%    _31 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _31
  _40 = get_tl _31

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _85 = bif:is_tuple _41
  br _85, ^85, ^65

85:
  %% Argument types:
  %%    _41 => {...}
  %% Aliased:
  %%    _41
  _86 = bif:tuple_size _41

  %% Argument types:
  %%    _86 => 0..16777215
  %% Unique:
  %%    _86
  _87 = bif:'=:=' _86, `5`
  br _87, ^84, ^65

84:
  %% Argument types:
  %%    _41 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _41
  _46 = get_tuple_element _41, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _83 = bif:'=:=' _46, `{function,main,0}`
  br _83, ^83, ^65

83:
  %% Argument types:
  %%    _41 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _41
  _44 = get_tuple_element _41, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _82 = bif:'=:=' _44, `[<<"main()">>]`
  br _82, ^82, ^65

82:
  %% Argument types:
  %%    _41 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _41
  _42 = get_tuple_element _41, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _81 = bif:is_map _42
  br _81, ^81, ^65

81:
  %% Aliased:
  %%    _40
  _80 = is_nonempty_list _40
  br _80, ^80, ^65

80:
  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _40
  _48 = get_hd _40

  %% Argument types:
  %%    _40 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _40
  _47 = get_tl _40

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _77 = bif:is_tuple _48
  br _77, ^77, ^65

77:
  %% Argument types:
  %%    _48 => {...}
  %% Aliased:
  %%    _48
  _78 = bif:tuple_size _48

  %% Argument types:
  %%    _78 => 0..16777215
  %% Unique:
  %%    _78
  _79 = bif:'=:=' _78, `5`
  br _79, ^76, ^65

76:
  %% Argument types:
  %%    _48 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _48
  _53 = get_tuple_element _48, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _75 = bif:'=:=' _53, `{function,all_ok,0}`
  br _75, ^75, ^65

75:
  %% Argument types:
  %%    _48 => {{'function', 'all_ok', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _48
  _51 = get_tuple_element _48, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _74 = bif:'=:=' _51, `[<<"all_ok()">>]`
  br _74, ^74, ^65

74:
  %% Argument types:
  %%    _48 => {{'function', 'all_ok', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _48
  _49 = get_tuple_element _48, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _73 = bif:is_map _49
  br _73, ^73, ^65

73:
  %% Argument types:
  %%    _49 => map()
  %% Aliased:
  %%    _49
  _54 = get_map_element _49, `equiv`

  %% Aliased:
  %%    _54
  _68 = succeeded:guard _54
  br _68, ^68, ^65

68:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _72 = bif:'=:=' _54, `<<"ok/0">>`
  br _72, ^72, ^65

72:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _71 = bif:'=:=' _47, `[]`
  br _71, ^71, ^65

71:
  %% Argument types:
  %%    _41 => {{'function', 'main', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _41
  _43 = get_tuple_element _41, `3`

  %% beam_doc_SUITE.erl:353
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _16 = bif:'=:=' _43, `#{<<"en">> => <<"all_ok()\n\nCalls all_ok/0">>}`
  br _16, ^124, ^65

124:
  %% Argument types:
  %%    _48 => {{'function', 'all_ok', 0}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _48
  _50 = get_tuple_element _48, `3`

  %% beam_doc_SUITE.erl:354
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _17 = bif:'=:=' _50, `#{<<"en">> => <<"This is a test">>}`
  br _17, ^70, ^65

70:
  %% Result type:
  %%    'ok'
  ret `ok`

65:
  %% beam_doc_SUITE.erl:350
  %% Aliased:
  %%    _21
  _56 = match_fail `badmatch`, _21

  %% Unique:
  %%    _56
  _114 = succeeded:body _56
  br ^1

62:
  %% beam_doc_SUITE.erl:347
  %% Aliased:
  %%    _18
  _57 = match_fail `badmatch`, _18

  %% Unique:
  %%    _57
  _121 = succeeded:body _57
  br ^1

1:
  _58 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _58
}

%% beam_doc_SUITE.erl:359
%% Counter = 94
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`equiv`(_0) {
0:
  %% beam_doc_SUITE.erl:361
  %% Aliased:
  %%    _0
  _11 = call (`default_compile_file`/2), _0, `"equiv"`

  %% Aliased:
  %%    _11
  _43 = succeeded:body _11
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _90 = is_tagged_tuple _11, `2`, `ok`
  br _90, ^87, ^45

87:
  %% Argument types:
  %%    _11 => {'ok', any()}
  %% Aliased:
  %%    _11
  _12 = get_tuple_element _11, `1`

  %% beam_doc_SUITE.erl:367
  %% Aliased:
  %%    _12
  _14 = call (`code`:`get_doc`/1), _12

  %% Aliased:
  %%    _14
  _46 = succeeded:body _14
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _83 = is_tagged_tuple _14, `2`, `ok`
  br _83, ^80, ^48

80:
  %% Argument types:
  %%    _14 => {'ok', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _77 = is_tagged_tuple _15, `7`, `docs_v1`
  br _77, ^74, ^48

74:
  %% Argument types:
  %%    _15 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _15
  _19 = get_tuple_element _15, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _73 = bif:'=:=' _19, `none`
  br _73, ^72, ^48

72:
  %% Argument types:
  %%    _15 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `6`

  %% Aliased:
  %%    _17
  _71 = is_nonempty_list _17
  br _71, ^71, ^48

71:
  %% Argument types:
  %%    _17 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _17
  _25 = get_hd _17

  %% Argument types:
  %%    _17 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _17
  _24 = get_tl _17

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _68 = bif:is_tuple _25
  br _68, ^68, ^48

68:
  %% Argument types:
  %%    _25 => {...}
  %% Aliased:
  %%    _25
  _69 = bif:tuple_size _25

  %% Argument types:
  %%    _69 => 0..16777215
  %% Unique:
  %%    _69
  _70 = bif:'=:=' _69, `5`
  br _70, ^67, ^48

67:
  %% Argument types:
  %%    _25 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _25
  _30 = get_tuple_element _25, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _66 = bif:'=:=' _30, `{function,main,2}`
  br _66, ^66, ^48

66:
  %% Argument types:
  %%    _25 => {{'function', 'main', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _25
  _28 = get_tuple_element _25, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _65 = bif:'=:=' _28, `[<<"main(A, B)">>]`
  br _65, ^65, ^48

65:
  %% Argument types:
  %%    _25 => {{'function', 'main', 2}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _25
  _27 = get_tuple_element _25, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _64 = bif:'=:=' _27, `none`
  br _64, ^63, ^48

63:
  %% Argument types:
  %%    _25 => {{'function', 'main', 2}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _25
  _26 = get_tuple_element _25, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _62 = bif:is_map _26
  br _62, ^62, ^48

62:
  %% Aliased:
  %%    _24
  _61 = is_nonempty_list _24
  br _61, ^61, ^48

61:
  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _32 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _31 = get_tl _24

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _58 = bif:is_tuple _32
  br _58, ^58, ^48

58:
  %% Argument types:
  %%    _32 => {...}
  %% Aliased:
  %%    _32
  _59 = bif:tuple_size _32

  %% Argument types:
  %%    _59 => 0..16777215
  %% Unique:
  %%    _59
  _60 = bif:'=:=' _59, `5`
  br _60, ^57, ^48

57:
  %% Argument types:
  %%    _32 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _32
  _37 = get_tuple_element _32, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _56 = bif:'=:=' _37, `{function,main,1}`
  br _56, ^56, ^48

56:
  %% Argument types:
  %%    _32 => {{'function', 'main', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _32
  _35 = get_tuple_element _32, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _55 = bif:'=:=' _35, `[<<"main(A)">>]`
  br _55, ^55, ^48

55:
  %% Argument types:
  %%    _32 => {{'function', 'main', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _32
  _34 = get_tuple_element _32, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _54 = bif:'=:=' _34, `none`
  br _54, ^53, ^48

53:
  %% Argument types:
  %%    _32 => {{'function', 'main', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _32
  _33 = get_tuple_element _32, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _52 = bif:is_map _33
  br _52, ^52, ^48

52:
  %% Argument types:
  %%    _33 => map()
  %% Aliased:
  %%    _33
  _38 = get_map_element _33, `equiv`

  %% Aliased:
  %%    _38
  _49 = succeeded:guard _38
  br _49, ^49, ^48

49:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _51 = bif:'=:=' _38, `<<"main(A, 1)">>`
  br _51, ^51, ^48

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _50 = bif:'=:=' _31, `[]`
  br _50, ^50, ^48

50:
  %% Result type:
  %%    'ok'
  ret `ok`

48:
  %% beam_doc_SUITE.erl:362
  %% Aliased:
  %%    _14
  _39 = match_fail `badmatch`, _14

  %% Unique:
  %%    _39
  _86 = succeeded:body _39
  br ^1

45:
  %% beam_doc_SUITE.erl:361
  %% Aliased:
  %%    _11
  _40 = match_fail `badmatch`, _11

  %% Unique:
  %%    _40
  _93 = succeeded:body _40
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% beam_doc_SUITE.erl:370
%% Counter = 155
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`spec`(_0) {
0:
  %% beam_doc_SUITE.erl:372
  %% Aliased:
  %%    _0
  _14 = call (`default_compile_file`/2), _0, `"spec"`

  %% Aliased:
  %%    _14
  _69 = succeeded:body _14
  br _69, ^69, ^1

69:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _151 = is_tagged_tuple _14, `2`, `ok`
  br _151, ^148, ^71

148:
  %% Argument types:
  %%    _14 => {'ok', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% beam_doc_SUITE.erl:378
  %% Aliased:
  %%    _15
  _17 = call (`code`:`get_doc`/1), _15

  %% Aliased:
  %%    _17
  _72 = succeeded:body _17
  br _72, ^72, ^1

72:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _144 = is_tagged_tuple _17, `2`, `ok`
  br _144, ^141, ^74

141:
  %% Argument types:
  %%    _17 => {'ok', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _138 = is_tagged_tuple _18, `7`, `docs_v1`
  br _138, ^135, ^74

135:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _18
  _22 = get_tuple_element _18, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _134 = bif:is_map _22
  br _134, ^134, ^74

134:
  %% Argument types:
  %%    _22 => map()
  %% Aliased:
  %%    _22
  _27 = get_map_element _22, `<<"en">>`

  %% Aliased:
  %%    _27
  _75 = succeeded:guard _27
  br _75, ^75, ^74

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _133 = bif:'=:=' _27, `<<>>`
  br _133, ^133, ^74

133:
  %% Argument types:
  %%    _18 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `6`

  %% Aliased:
  %%    _20
  _132 = is_nonempty_list _20
  br _132, ^132, ^74

132:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _29 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _28 = get_tl _20

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _129 = bif:is_tuple _29
  br _129, ^129, ^74

129:
  %% Argument types:
  %%    _29 => {...}
  %% Aliased:
  %%    _29
  _130 = bif:tuple_size _29

  %% Argument types:
  %%    _130 => 0..16777215
  %% Unique:
  %%    _130
  _131 = bif:'=:=' _130, `5`
  br _131, ^128, ^74

128:
  %% Argument types:
  %%    _29 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _29
  _34 = get_tuple_element _29, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _127 = bif:'=:=' _34, `{type,no,0}`
  br _127, ^127, ^74

127:
  %% Argument types:
  %%    _29 => {{'type', 'no', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _29
  _32 = get_tuple_element _29, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _126 = bif:'=:=' _32, `[<<"no()">>]`
  br _126, ^126, ^74

126:
  %% Argument types:
  %%    _29 => {{'type', 'no', 0}, any(), nonempty_list(bitstring(32)), any(), any()}
  %% Aliased:
  %%    _29
  _31 = get_tuple_element _29, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _125 = bif:'=:=' _31, `none`
  br _125, ^124, ^74

124:
  %% Argument types:
  %%    _29 => {{'type', 'no', 0}, any(), nonempty_list(bitstring(32)), 'none', any()}
  %% Aliased:
  %%    _29
  _30 = get_tuple_element _29, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _123 = bif:is_map _30
  br _123, ^123, ^74

123:
  %% Argument types:
  %%    _30 => map()
  %% Aliased:
  %%    _30
  _35 = get_map_element _30, `exported`

  %% Aliased:
  %%    _35
  _76 = succeeded:guard _35
  br _76, ^76, ^74

76:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _122 = bif:'=:=' _35, `false`
  br _122, ^121, ^74

121:
  %% Aliased:
  %%    _28
  _120 = is_nonempty_list _28
  br _120, ^120, ^74

120:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _37 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _36 = get_tl _28

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _117 = bif:is_tuple _37
  br _117, ^117, ^74

117:
  %% Argument types:
  %%    _37 => {...}
  %% Aliased:
  %%    _37
  _118 = bif:tuple_size _37

  %% Argument types:
  %%    _118 => 0..16777215
  %% Unique:
  %%    _118
  _119 = bif:'=:=' _118, `5`
  br _119, ^116, ^74

116:
  %% Argument types:
  %%    _37 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _37
  _42 = get_tuple_element _37, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _115 = bif:'=:=' _42, `{type,yes,0}`
  br _115, ^115, ^74

115:
  %% Argument types:
  %%    _37 => {{'type', 'yes', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _37
  _40 = get_tuple_element _37, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _114 = bif:'=:=' _40, `[<<"yes()">>]`
  br _114, ^114, ^74

114:
  %% Argument types:
  %%    _37 => {{'type', 'yes', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _37
  _39 = get_tuple_element _37, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _113 = bif:'=:=' _39, `none`
  br _113, ^112, ^74

112:
  %% Argument types:
  %%    _37 => {{'type', 'yes', 0}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _37
  _38 = get_tuple_element _37, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _111 = bif:is_map _38
  br _111, ^111, ^74

111:
  %% Argument types:
  %%    _38 => map()
  %% Aliased:
  %%    _38
  _43 = get_map_element _38, `exported`

  %% Aliased:
  %%    _43
  _77 = succeeded:guard _43
  br _77, ^77, ^74

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _110 = bif:'=:=' _43, `false`
  br _110, ^109, ^74

109:
  %% Aliased:
  %%    _36
  _108 = is_nonempty_list _36
  br _108, ^108, ^74

108:
  %% Argument types:
  %%    _36 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _36
  _45 = get_hd _36

  %% Argument types:
  %%    _36 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _36
  _44 = get_tl _36

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _105 = bif:is_tuple _45
  br _105, ^105, ^74

105:
  %% Argument types:
  %%    _45 => {...}
  %% Aliased:
  %%    _45
  _106 = bif:tuple_size _45

  %% Argument types:
  %%    _106 => 0..16777215
  %% Unique:
  %%    _106
  _107 = bif:'=:=' _106, `5`
  br _107, ^104, ^74

104:
  %% Argument types:
  %%    _45 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _45
  _50 = get_tuple_element _45, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _103 = bif:'=:=' _50, `{callback,me,1}`
  br _103, ^103, ^74

103:
  %% Argument types:
  %%    _45 => {{'callback', 'me', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _45
  _48 = get_tuple_element _45, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _102 = bif:'=:=' _48, `[<<"me/1">>]`
  br _102, ^102, ^74

102:
  %% Argument types:
  %%    _45 => {{'callback', 'me', 1}, any(), nonempty_list(bitstring(32)), any(), any()}
  %% Aliased:
  %%    _45
  _47 = get_tuple_element _45, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _101 = bif:'=:=' _47, `none`
  br _101, ^100, ^74

100:
  %% Argument types:
  %%    _45 => {{'callback', 'me', 1}, any(), nonempty_list(bitstring(32)), 'none', any()}
  %% Aliased:
  %%    _45
  _46 = get_tuple_element _45, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _99 = bif:is_map _46
  br _99, ^99, ^74

99:
  %% Aliased:
  %%    _44
  _98 = is_nonempty_list _44
  br _98, ^98, ^74

98:
  %% Argument types:
  %%    _44 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _44
  _52 = get_hd _44

  %% Argument types:
  %%    _44 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _44
  _51 = get_tl _44

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _95 = bif:is_tuple _52
  br _95, ^95, ^74

95:
  %% Argument types:
  %%    _52 => {...}
  %% Aliased:
  %%    _52
  _96 = bif:tuple_size _52

  %% Argument types:
  %%    _96 => 0..16777215
  %% Unique:
  %%    _96
  _97 = bif:'=:=' _96, `5`
  br _97, ^94, ^74

94:
  %% Argument types:
  %%    _52 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _52
  _57 = get_tuple_element _52, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _93 = bif:'=:=' _57, `{function,baz,1}`
  br _93, ^93, ^74

93:
  %% Argument types:
  %%    _52 => {{'function', 'baz', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _52
  _55 = get_tuple_element _52, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _92 = bif:'=:=' _55, `[<<"baz(X)">>]`
  br _92, ^92, ^74

92:
  %% Argument types:
  %%    _52 => {{'function', 'baz', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _52
  _54 = get_tuple_element _52, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _91 = bif:'=:=' _54, `none`
  br _91, ^90, ^74

90:
  %% Argument types:
  %%    _52 => {{'function', 'baz', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _52
  _53 = get_tuple_element _52, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _89 = bif:is_map _53
  br _89, ^89, ^74

89:
  %% Aliased:
  %%    _51
  _88 = is_nonempty_list _51
  br _88, ^88, ^74

88:
  %% Argument types:
  %%    _51 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _51
  _59 = get_hd _51

  %% Argument types:
  %%    _51 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _51
  _58 = get_tl _51

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _85 = bif:is_tuple _59
  br _85, ^85, ^74

85:
  %% Argument types:
  %%    _59 => {...}
  %% Aliased:
  %%    _59
  _86 = bif:tuple_size _59

  %% Argument types:
  %%    _86 => 0..16777215
  %% Unique:
  %%    _86
  _87 = bif:'=:=' _86, `5`
  br _87, ^84, ^74

84:
  %% Argument types:
  %%    _59 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _64 = get_tuple_element _59, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _83 = bif:'=:=' _64, `{function,foo,1}`
  br _83, ^83, ^74

83:
  %% Argument types:
  %%    _59 => {{'function', 'foo', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _62 = get_tuple_element _59, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _82 = bif:'=:=' _62, `[<<"foo(X)">>]`
  br _82, ^82, ^74

82:
  %% Argument types:
  %%    _59 => {{'function', 'foo', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _59
  _61 = get_tuple_element _59, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _81 = bif:'=:=' _61, `none`
  br _81, ^80, ^74

80:
  %% Argument types:
  %%    _59 => {{'function', 'foo', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _79 = bif:is_map _60
  br _79, ^79, ^74

79:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _78 = bif:'=:=' _58, `[]`
  br _78, ^78, ^74

78:
  %% Result type:
  %%    'ok'
  ret `ok`

74:
  %% beam_doc_SUITE.erl:373
  %% Aliased:
  %%    _17
  _65 = match_fail `badmatch`, _17

  %% Unique:
  %%    _65
  _147 = succeeded:body _65
  br ^1

71:
  %% beam_doc_SUITE.erl:372
  %% Aliased:
  %%    _14
  _66 = match_fail `badmatch`, _14

  %% Unique:
  %%    _66
  _154 = succeeded:body _66
  br ^1

1:
  _67 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _67
}

%% beam_doc_SUITE.erl:381
%% Counter = 57
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`user_defined_type`(_0) {
0:
  %% beam_doc_SUITE.erl:383
  %% Aliased:
  %%    _0
  _9 = call (`default_compile_file`/2), _0, `"user_defined_type"`

  %% Aliased:
  %%    _9
  _27 = succeeded:body _9
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _53 = is_tagged_tuple _9, `2`, `ok`
  br _53, ^50, ^29

50:
  %% Argument types:
  %%    _9 => {'ok', any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% beam_doc_SUITE.erl:384
  %% Aliased:
  %%    _10
  _12 = call (`code`:`get_doc`/1), _10

  %% Aliased:
  %%    _12
  _30 = succeeded:body _12
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _46 = is_tagged_tuple _12, `2`, `ok`
  br _46, ^43, ^32

43:
  %% Argument types:
  %%    _12 => {'ok', any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _40 = is_tagged_tuple _13, `7`, `docs_v1`
  br _40, ^37, ^32

37:
  %% Argument types:
  %%    _13 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _13
  _17 = get_tuple_element _13, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _36 = bif:is_map _17
  br _36, ^36, ^32

36:
  %% Argument types:
  %%    _17 => map()
  %% Aliased:
  %%    _17
  _22 = get_map_element _17, `<<"en">>`

  %% Aliased:
  %%    _22
  _33 = succeeded:guard _22
  br _33, ^33, ^32

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _35 = bif:'=:=' _22, `<<>>`
  br _35, ^35, ^32

35:
  %% Argument types:
  %%    _13 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `6`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _34 = bif:'=:=' _15, `[]`
  br _34, ^34, ^32

34:
  %% Result type:
  %%    'ok'
  ret `ok`

32:
  %% beam_doc_SUITE.erl:384
  %% Aliased:
  %%    _12
  _23 = match_fail `badmatch`, _12

  %% Unique:
  %%    _23
  _49 = succeeded:body _23
  br ^1

29:
  %% beam_doc_SUITE.erl:383
  %% Aliased:
  %%    _9
  _24 = match_fail `badmatch`, _9

  %% Unique:
  %%    _24
  _56 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% beam_doc_SUITE.erl:387
%% Counter = 600
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`deprecated`(_0) {
0:
  %% beam_doc_SUITE.erl:389
  %% Aliased:
  %%    _0
  _44 = call (`default_compile_file`/2), _0, `"deprecated"`

  %% Aliased:
  %%    _44
  _259 = succeeded:body _44
  br _259, ^259, ^1

259:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _596 = is_tagged_tuple _44, `2`, `ok`
  br _596, ^593, ^261

593:
  %% Argument types:
  %%    _44 => {'ok', any()}
  %% Aliased:
  %%    _44
  _45 = get_tuple_element _44, `1`

  %% beam_doc_SUITE.erl:398
  %% Aliased:
  %%    _45
  _47 = call (`code`:`get_doc`/1), _45

  %% Aliased:
  %%    _47
  _262 = succeeded:body _47
  br _262, ^262, ^1

262:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _589 = is_tagged_tuple _47, `2`, `ok`
  br _589, ^586, ^264

586:
  %% Argument types:
  %%    _47 => {'ok', any()}
  %% Aliased:
  %%    _47
  _48 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _583 = is_tagged_tuple _48, `7`, `docs_v1`
  br _583, ^580, ^264

580:
  %% Argument types:
  %%    _48 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _48
  _52 = get_tuple_element _48, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _579 = bif:'=:=' _52, `none`
  br _579, ^578, ^264

578:
  %% Argument types:
  %%    _48 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _48
  _50 = get_tuple_element _48, `6`

  %% Aliased:
  %%    _50
  _577 = is_nonempty_list _50
  br _577, ^577, ^264

577:
  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _58 = get_hd _50

  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _57 = get_tl _50

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _574 = bif:is_tuple _58
  br _574, ^574, ^264

574:
  %% Argument types:
  %%    _58 => {...}
  %% Aliased:
  %%    _58
  _575 = bif:tuple_size _58

  %% Argument types:
  %%    _575 => 0..16777215
  %% Unique:
  %%    _575
  _576 = bif:'=:=' _575, `5`
  br _576, ^573, ^264

573:
  %% Argument types:
  %%    _58 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _58
  _63 = get_tuple_element _58, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _572 = bif:'=:=' _63, `{type,test,1}`
  br _572, ^572, ^264

572:
  %% Argument types:
  %%    _58 => {{'type', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _58
  _61 = get_tuple_element _58, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _571 = bif:'=:=' _61, `[<<"test(N)">>]`
  br _571, ^571, ^264

571:
  %% Argument types:
  %%    _58 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _58
  _60 = get_tuple_element _58, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _570 = bif:'=:=' _60, `none`
  br _570, ^569, ^264

569:
  %% Argument types:
  %%    _58 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _58
  _59 = get_tuple_element _58, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _568 = bif:is_map _59
  br _568, ^568, ^264

568:
  %% Argument types:
  %%    _59 => map()
  %% Aliased:
  %%    _59
  _64 = get_map_element _59, `deprecated`

  %% Aliased:
  %%    _64
  _265 = succeeded:guard _64
  br _265, ^265, ^264

265:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _567 = bif:'=:=' _64, `<<"the type deprecated:test(_) is deprecated; Deprecation reason">>`
  br _567, ^567, ^264

567:
  %% Aliased:
  %%    _57
  _566 = is_nonempty_list _57
  br _566, ^566, ^264

566:
  %% Argument types:
  %%    _57 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _57
  _66 = get_hd _57

  %% Argument types:
  %%    _57 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _57
  _65 = get_tl _57

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _563 = bif:is_tuple _66
  br _563, ^563, ^264

563:
  %% Argument types:
  %%    _66 => {...}
  %% Aliased:
  %%    _66
  _564 = bif:tuple_size _66

  %% Argument types:
  %%    _564 => 0..16777215
  %% Unique:
  %%    _564
  _565 = bif:'=:=' _564, `5`
  br _565, ^562, ^264

562:
  %% Argument types:
  %%    _66 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _66
  _71 = get_tuple_element _66, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _561 = bif:'=:=' _71, `{type,test,0}`
  br _561, ^561, ^264

561:
  %% Argument types:
  %%    _66 => {{'type', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _66
  _69 = get_tuple_element _66, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _560 = bif:'=:=' _69, `[<<"test()">>]`
  br _560, ^560, ^264

560:
  %% Argument types:
  %%    _66 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _66
  _68 = get_tuple_element _66, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _559 = bif:'=:=' _68, `none`
  br _559, ^558, ^264

558:
  %% Argument types:
  %%    _66 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _66
  _67 = get_tuple_element _66, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _557 = bif:is_map _67
  br _557, ^557, ^264

557:
  %% Argument types:
  %%    _67 => map()
  %% Aliased:
  %%    _67
  _72 = get_map_element _67, `deprecated`

  %% Aliased:
  %%    _72
  _266 = succeeded:guard _72
  br _266, ^266, ^264

266:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _556 = bif:'=:=' _72, `<<"the type deprecated:test() is deprecated; see the documentation for details">>`
  br _556, ^556, ^264

556:
  %% Aliased:
  %%    _65
  _555 = is_nonempty_list _65
  br _555, ^555, ^264

555:
  %% Argument types:
  %%    _65 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _65
  _74 = get_hd _65

  %% Argument types:
  %%    _65 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _65
  _73 = get_tl _65

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _552 = bif:is_tuple _74
  br _552, ^552, ^264

552:
  %% Argument types:
  %%    _74 => {...}
  %% Aliased:
  %%    _74
  _553 = bif:tuple_size _74

  %% Argument types:
  %%    _553 => 0..16777215
  %% Unique:
  %%    _553
  _554 = bif:'=:=' _553, `5`
  br _554, ^551, ^264

551:
  %% Argument types:
  %%    _74 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _74
  _79 = get_tuple_element _74, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _550 = bif:'=:=' _79, `{callback,test,1}`
  br _550, ^550, ^264

550:
  %% Argument types:
  %%    _74 => {{'callback', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _74
  _77 = get_tuple_element _74, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _549 = bif:'=:=' _77, `[<<"test(N)">>]`
  br _549, ^549, ^264

549:
  %% Argument types:
  %%    _74 => {{'callback', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _74
  _76 = get_tuple_element _74, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _548 = bif:'=:=' _76, `none`
  br _548, ^547, ^264

547:
  %% Argument types:
  %%    _74 => {{'callback', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _74
  _75 = get_tuple_element _74, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _546 = bif:is_map _75
  br _546, ^546, ^264

546:
  %% Argument types:
  %%    _75 => map()
  %% Aliased:
  %%    _75
  _80 = get_map_element _75, `deprecated`

  %% Aliased:
  %%    _80
  _267 = succeeded:guard _80
  br _267, ^267, ^264

267:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _545 = bif:'=:=' _80, `<<"the callback deprecated:test(_) is deprecated; Deprecation reason">>`
  br _545, ^545, ^264

545:
  %% Aliased:
  %%    _73
  _544 = is_nonempty_list _73
  br _544, ^544, ^264

544:
  %% Argument types:
  %%    _73 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _73
  _82 = get_hd _73

  %% Argument types:
  %%    _73 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _73
  _81 = get_tl _73

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _541 = bif:is_tuple _82
  br _541, ^541, ^264

541:
  %% Argument types:
  %%    _82 => {...}
  %% Aliased:
  %%    _82
  _542 = bif:tuple_size _82

  %% Argument types:
  %%    _542 => 0..16777215
  %% Unique:
  %%    _542
  _543 = bif:'=:=' _542, `5`
  br _543, ^540, ^264

540:
  %% Argument types:
  %%    _82 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _82
  _87 = get_tuple_element _82, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _539 = bif:'=:=' _87, `{callback,test,0}`
  br _539, ^539, ^264

539:
  %% Argument types:
  %%    _82 => {{'callback', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _82
  _85 = get_tuple_element _82, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _538 = bif:'=:=' _85, `[<<"test()">>]`
  br _538, ^538, ^264

538:
  %% Argument types:
  %%    _82 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _537 = bif:'=:=' _84, `none`
  br _537, ^536, ^264

536:
  %% Argument types:
  %%    _82 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _82
  _83 = get_tuple_element _82, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _535 = bif:is_map _83
  br _535, ^535, ^264

535:
  %% Argument types:
  %%    _83 => map()
  %% Aliased:
  %%    _83
  _88 = get_map_element _83, `deprecated`

  %% Aliased:
  %%    _88
  _268 = succeeded:guard _88
  br _268, ^268, ^264

268:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _534 = bif:'=:=' _88, `<<"Meta reason">>`
  br _534, ^534, ^264

534:
  %% Aliased:
  %%    _81
  _533 = is_nonempty_list _81
  br _533, ^533, ^264

533:
  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _90 = get_hd _81

  %% Argument types:
  %%    _81 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _81
  _89 = get_tl _81

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _530 = bif:is_tuple _90
  br _530, ^530, ^264

530:
  %% Argument types:
  %%    _90 => {...}
  %% Aliased:
  %%    _90
  _531 = bif:tuple_size _90

  %% Argument types:
  %%    _531 => 0..16777215
  %% Unique:
  %%    _531
  _532 = bif:'=:=' _531, `5`
  br _532, ^529, ^264

529:
  %% Argument types:
  %%    _90 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _90
  _95 = get_tuple_element _90, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _528 = bif:'=:=' _95, `{function,test,2}`
  br _528, ^528, ^264

528:
  %% Argument types:
  %%    _90 => {{'function', 'test', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _90
  _93 = get_tuple_element _90, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _527 = bif:'=:=' _93, `[<<"test(N, M)">>]`
  br _527, ^527, ^264

527:
  %% Argument types:
  %%    _90 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _90
  _92 = get_tuple_element _90, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _526 = bif:'=:=' _92, `none`
  br _526, ^525, ^264

525:
  %% Argument types:
  %%    _90 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _90
  _91 = get_tuple_element _90, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _524 = bif:is_map _91
  br _524, ^524, ^264

524:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _96 = get_map_element _91, `deprecated`

  %% Aliased:
  %%    _96
  _269 = succeeded:guard _96
  br _269, ^269, ^264

269:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _523 = bif:'=:=' _96, `<<"Meta reason">>`
  br _523, ^523, ^264

523:
  %% Aliased:
  %%    _89
  _522 = is_nonempty_list _89
  br _522, ^522, ^264

522:
  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _98 = get_hd _89

  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _97 = get_tl _89

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _519 = bif:is_tuple _98
  br _519, ^519, ^264

519:
  %% Argument types:
  %%    _98 => {...}
  %% Aliased:
  %%    _98
  _520 = bif:tuple_size _98

  %% Argument types:
  %%    _520 => 0..16777215
  %% Unique:
  %%    _520
  _521 = bif:'=:=' _520, `5`
  br _521, ^518, ^264

518:
  %% Argument types:
  %%    _98 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _98
  _103 = get_tuple_element _98, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _517 = bif:'=:=' _103, `{function,test,1}`
  br _517, ^517, ^264

517:
  %% Argument types:
  %%    _98 => {{'function', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _98
  _101 = get_tuple_element _98, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _516 = bif:'=:=' _101, `[<<"test(N)">>]`
  br _516, ^516, ^264

516:
  %% Argument types:
  %%    _98 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _98
  _100 = get_tuple_element _98, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _515 = bif:'=:=' _100, `none`
  br _515, ^514, ^264

514:
  %% Argument types:
  %%    _98 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _98
  _99 = get_tuple_element _98, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _513 = bif:is_map _99
  br _513, ^513, ^264

513:
  %% Argument types:
  %%    _99 => map()
  %% Aliased:
  %%    _99
  _104 = get_map_element _99, `deprecated`

  %% Aliased:
  %%    _104
  _270 = succeeded:guard _104
  br _270, ^270, ^264

270:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _512 = bif:'=:=' _104, `<<"deprecated:test/1 is deprecated; Deprecation reason">>`
  br _512, ^512, ^264

512:
  %% Aliased:
  %%    _97
  _511 = is_nonempty_list _97
  br _511, ^511, ^264

511:
  %% Argument types:
  %%    _97 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _97
  _106 = get_hd _97

  %% Argument types:
  %%    _97 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _97
  _105 = get_tl _97

  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _508 = bif:is_tuple _106
  br _508, ^508, ^264

508:
  %% Argument types:
  %%    _106 => {...}
  %% Aliased:
  %%    _106
  _509 = bif:tuple_size _106

  %% Argument types:
  %%    _509 => 0..16777215
  %% Unique:
  %%    _509
  _510 = bif:'=:=' _509, `5`
  br _510, ^507, ^264

507:
  %% Argument types:
  %%    _106 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _106
  _111 = get_tuple_element _106, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _506 = bif:'=:=' _111, `{function,test,0}`
  br _506, ^506, ^264

506:
  %% Argument types:
  %%    _106 => {{'function', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _106
  _109 = get_tuple_element _106, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _505 = bif:'=:=' _109, `[<<"test()">>]`
  br _505, ^505, ^264

505:
  %% Argument types:
  %%    _106 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _106
  _108 = get_tuple_element _106, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _504 = bif:'=:=' _108, `none`
  br _504, ^503, ^264

503:
  %% Argument types:
  %%    _106 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _106
  _107 = get_tuple_element _106, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _502 = bif:is_map _107
  br _502, ^502, ^264

502:
  %% Argument types:
  %%    _107 => map()
  %% Aliased:
  %%    _107
  _112 = get_map_element _107, `deprecated`

  %% Aliased:
  %%    _112
  _271 = succeeded:guard _112
  br _271, ^271, ^264

271:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _501 = bif:'=:=' _112, `<<"deprecated:test/0 is deprecated; see the documentation for details">>`
  br _501, ^501, ^264

501:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _500 = bif:'=:=' _105, `[]`
  br _500, ^500, ^264

500:
  %% beam_doc_SUITE.erl:400
  %% Aliased:
  %%    _0
  _113 = call (`default_compile_file`/3), _0, `"deprecated"`, `[{d,'TEST_WILDCARD'},{d,'REASON',next_major_release}]`

  %% Aliased:
  %%    _113
  _272 = succeeded:body _113
  br _272, ^272, ^1

272:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _496 = is_tagged_tuple _113, `2`, `ok`
  br _496, ^493, ^274

493:
  %% Argument types:
  %%    _113 => {'ok', any()}
  %% Aliased:
  %%    _113
  _114 = get_tuple_element _113, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45, 
  %%    _114
  _275 = bif:'=:=' _114, _45
  br _275, ^275, ^274

275:
  %% beam_doc_SUITE.erl:410
  %% Aliased:
  %%    _45
  _116 = call (`code`:`get_doc`/1), _45

  %% Aliased:
  %%    _116
  _276 = succeeded:body _116
  br _276, ^276, ^1

276:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _489 = is_tagged_tuple _116, `2`, `ok`
  br _489, ^486, ^278

486:
  %% Argument types:
  %%    _116 => {'ok', any()}
  %% Aliased:
  %%    _116
  _117 = get_tuple_element _116, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _483 = is_tagged_tuple _117, `7`, `docs_v1`
  br _483, ^480, ^278

480:
  %% Argument types:
  %%    _117 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _117
  _121 = get_tuple_element _117, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _479 = bif:'=:=' _121, `none`
  br _479, ^478, ^278

478:
  %% Argument types:
  %%    _117 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _117
  _119 = get_tuple_element _117, `6`

  %% Aliased:
  %%    _119
  _477 = is_nonempty_list _119
  br _477, ^477, ^278

477:
  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _127 = get_hd _119

  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _126 = get_tl _119

  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _474 = bif:is_tuple _127
  br _474, ^474, ^278

474:
  %% Argument types:
  %%    _127 => {...}
  %% Aliased:
  %%    _127
  _475 = bif:tuple_size _127

  %% Argument types:
  %%    _475 => 0..16777215
  %% Unique:
  %%    _475
  _476 = bif:'=:=' _475, `5`
  br _476, ^473, ^278

473:
  %% Argument types:
  %%    _127 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _127
  _132 = get_tuple_element _127, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _472 = bif:'=:=' _132, `{type,test,1}`
  br _472, ^472, ^278

472:
  %% Argument types:
  %%    _127 => {{'type', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _127
  _130 = get_tuple_element _127, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _471 = bif:'=:=' _130, `[<<"test(N)">>]`
  br _471, ^471, ^278

471:
  %% Argument types:
  %%    _127 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _127
  _129 = get_tuple_element _127, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _470 = bif:'=:=' _129, `none`
  br _470, ^469, ^278

469:
  %% Argument types:
  %%    _127 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _127
  _128 = get_tuple_element _127, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _468 = bif:is_map _128
  br _468, ^468, ^278

468:
  %% Argument types:
  %%    _128 => map()
  %% Aliased:
  %%    _128
  _133 = get_map_element _128, `deprecated`

  %% Aliased:
  %%    _133
  _279 = succeeded:guard _133
  br _279, ^279, ^278

279:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _133
  _467 = bif:'=:=' _133, `<<"the type deprecated:test(_) is deprecated; see the documentation for details">>`
  br _467, ^467, ^278

467:
  %% Aliased:
  %%    _126
  _466 = is_nonempty_list _126
  br _466, ^466, ^278

466:
  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _135 = get_hd _126

  %% Argument types:
  %%    _126 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _126
  _134 = get_tl _126

  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _463 = bif:is_tuple _135
  br _463, ^463, ^278

463:
  %% Argument types:
  %%    _135 => {...}
  %% Aliased:
  %%    _135
  _464 = bif:tuple_size _135

  %% Argument types:
  %%    _464 => 0..16777215
  %% Unique:
  %%    _464
  _465 = bif:'=:=' _464, `5`
  br _465, ^462, ^278

462:
  %% Argument types:
  %%    _135 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _140 = get_tuple_element _135, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _140
  _461 = bif:'=:=' _140, `{type,test,0}`
  br _461, ^461, ^278

461:
  %% Argument types:
  %%    _135 => {{'type', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _135
  _138 = get_tuple_element _135, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _138
  _460 = bif:'=:=' _138, `[<<"test()">>]`
  br _460, ^460, ^278

460:
  %% Argument types:
  %%    _135 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _135
  _137 = get_tuple_element _135, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _459 = bif:'=:=' _137, `none`
  br _459, ^458, ^278

458:
  %% Argument types:
  %%    _135 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _135
  _136 = get_tuple_element _135, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _136
  _457 = bif:is_map _136
  br _457, ^457, ^278

457:
  %% Argument types:
  %%    _136 => map()
  %% Aliased:
  %%    _136
  _141 = get_map_element _136, `deprecated`

  %% Aliased:
  %%    _141
  _280 = succeeded:guard _141
  br _280, ^280, ^278

280:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _456 = bif:'=:=' _141, `<<"the type deprecated:test() is deprecated; see the documentation for details">>`
  br _456, ^456, ^278

456:
  %% Aliased:
  %%    _134
  _455 = is_nonempty_list _134
  br _455, ^455, ^278

455:
  %% Argument types:
  %%    _134 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _134
  _143 = get_hd _134

  %% Argument types:
  %%    _134 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _134
  _142 = get_tl _134

  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _452 = bif:is_tuple _143
  br _452, ^452, ^278

452:
  %% Argument types:
  %%    _143 => {...}
  %% Aliased:
  %%    _143
  _453 = bif:tuple_size _143

  %% Argument types:
  %%    _453 => 0..16777215
  %% Unique:
  %%    _453
  _454 = bif:'=:=' _453, `5`
  br _454, ^451, ^278

451:
  %% Argument types:
  %%    _143 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _148 = get_tuple_element _143, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _450 = bif:'=:=' _148, `{callback,test,1}`
  br _450, ^450, ^278

450:
  %% Argument types:
  %%    _143 => {{'callback', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _143
  _146 = get_tuple_element _143, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _146
  _449 = bif:'=:=' _146, `[<<"test(N)">>]`
  br _449, ^449, ^278

449:
  %% Argument types:
  %%    _143 => {{'callback', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _143
  _145 = get_tuple_element _143, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _448 = bif:'=:=' _145, `none`
  br _448, ^447, ^278

447:
  %% Argument types:
  %%    _143 => {{'callback', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _143
  _144 = get_tuple_element _143, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _144
  _446 = bif:is_map _144
  br _446, ^446, ^278

446:
  %% Argument types:
  %%    _144 => map()
  %% Aliased:
  %%    _144
  _149 = get_map_element _144, `deprecated`

  %% Aliased:
  %%    _149
  _281 = succeeded:guard _149
  br _281, ^281, ^278

281:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _149
  _445 = bif:'=:=' _149, `<<"the callback deprecated:test(_) is deprecated; will be removed in the next major release. See the documentation for details">>`
  br _445, ^445, ^278

445:
  %% Aliased:
  %%    _142
  _444 = is_nonempty_list _142
  br _444, ^444, ^278

444:
  %% Argument types:
  %%    _142 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _142
  _151 = get_hd _142

  %% Argument types:
  %%    _142 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _142
  _150 = get_tl _142

  %% Argument types:
  %%    
  %% Aliased:
  %%    _151
  _441 = bif:is_tuple _151
  br _441, ^441, ^278

441:
  %% Argument types:
  %%    _151 => {...}
  %% Aliased:
  %%    _151
  _442 = bif:tuple_size _151

  %% Argument types:
  %%    _442 => 0..16777215
  %% Unique:
  %%    _442
  _443 = bif:'=:=' _442, `5`
  br _443, ^440, ^278

440:
  %% Argument types:
  %%    _151 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _151
  _156 = get_tuple_element _151, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _156
  _439 = bif:'=:=' _156, `{callback,test,0}`
  br _439, ^439, ^278

439:
  %% Argument types:
  %%    _151 => {{'callback', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _151
  _154 = get_tuple_element _151, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _154
  _438 = bif:'=:=' _154, `[<<"test()">>]`
  br _438, ^438, ^278

438:
  %% Argument types:
  %%    _151 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _151
  _153 = get_tuple_element _151, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  _437 = bif:'=:=' _153, `none`
  br _437, ^436, ^278

436:
  %% Argument types:
  %%    _151 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _151
  _152 = get_tuple_element _151, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _152
  _435 = bif:is_map _152
  br _435, ^435, ^278

435:
  %% Argument types:
  %%    _152 => map()
  %% Aliased:
  %%    _152
  _157 = get_map_element _152, `deprecated`

  %% Aliased:
  %%    _157
  _282 = succeeded:guard _157
  br _282, ^282, ^278

282:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _157
  _434 = bif:'=:=' _157, `<<"Meta reason">>`
  br _434, ^434, ^278

434:
  %% Aliased:
  %%    _150
  _433 = is_nonempty_list _150
  br _433, ^433, ^278

433:
  %% Argument types:
  %%    _150 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _150
  _159 = get_hd _150

  %% Argument types:
  %%    _150 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _150
  _158 = get_tl _150

  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _430 = bif:is_tuple _159
  br _430, ^430, ^278

430:
  %% Argument types:
  %%    _159 => {...}
  %% Aliased:
  %%    _159
  _431 = bif:tuple_size _159

  %% Argument types:
  %%    _431 => 0..16777215
  %% Unique:
  %%    _431
  _432 = bif:'=:=' _431, `5`
  br _432, ^429, ^278

429:
  %% Argument types:
  %%    _159 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _159
  _164 = get_tuple_element _159, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _164
  _428 = bif:'=:=' _164, `{function,test,2}`
  br _428, ^428, ^278

428:
  %% Argument types:
  %%    _159 => {{'function', 'test', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _159
  _162 = get_tuple_element _159, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _162
  _427 = bif:'=:=' _162, `[<<"test(N, M)">>]`
  br _427, ^427, ^278

427:
  %% Argument types:
  %%    _159 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _159
  _161 = get_tuple_element _159, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _426 = bif:'=:=' _161, `none`
  br _426, ^425, ^278

425:
  %% Argument types:
  %%    _159 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _159
  _160 = get_tuple_element _159, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _160
  _424 = bif:is_map _160
  br _424, ^424, ^278

424:
  %% Argument types:
  %%    _160 => map()
  %% Aliased:
  %%    _160
  _165 = get_map_element _160, `deprecated`

  %% Aliased:
  %%    _165
  _283 = succeeded:guard _165
  br _283, ^283, ^278

283:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _165
  _423 = bif:'=:=' _165, `<<"Meta reason">>`
  br _423, ^423, ^278

423:
  %% Aliased:
  %%    _158
  _422 = is_nonempty_list _158
  br _422, ^422, ^278

422:
  %% Argument types:
  %%    _158 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _158
  _167 = get_hd _158

  %% Argument types:
  %%    _158 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _158
  _166 = get_tl _158

  %% Argument types:
  %%    
  %% Aliased:
  %%    _167
  _419 = bif:is_tuple _167
  br _419, ^419, ^278

419:
  %% Argument types:
  %%    _167 => {...}
  %% Aliased:
  %%    _167
  _420 = bif:tuple_size _167

  %% Argument types:
  %%    _420 => 0..16777215
  %% Unique:
  %%    _420
  _421 = bif:'=:=' _420, `5`
  br _421, ^418, ^278

418:
  %% Argument types:
  %%    _167 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _167
  _172 = get_tuple_element _167, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _172
  _417 = bif:'=:=' _172, `{function,test,1}`
  br _417, ^417, ^278

417:
  %% Argument types:
  %%    _167 => {{'function', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _167
  _170 = get_tuple_element _167, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _170
  _416 = bif:'=:=' _170, `[<<"test(N)">>]`
  br _416, ^416, ^278

416:
  %% Argument types:
  %%    _167 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _167
  _169 = get_tuple_element _167, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _169
  _415 = bif:'=:=' _169, `none`
  br _415, ^414, ^278

414:
  %% Argument types:
  %%    _167 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _167
  _168 = get_tuple_element _167, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _413 = bif:is_map _168
  br _413, ^413, ^278

413:
  %% Argument types:
  %%    _168 => map()
  %% Aliased:
  %%    _168
  _173 = get_map_element _168, `deprecated`

  %% Aliased:
  %%    _173
  _284 = succeeded:guard _173
  br _284, ^284, ^278

284:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _173
  _412 = bif:'=:=' _173, `<<"deprecated:test/1 is deprecated; will be removed in the next major release. See the documentation for details">>`
  br _412, ^412, ^278

412:
  %% Aliased:
  %%    _166
  _411 = is_nonempty_list _166
  br _411, ^411, ^278

411:
  %% Argument types:
  %%    _166 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _166
  _175 = get_hd _166

  %% Argument types:
  %%    _166 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _166
  _174 = get_tl _166

  %% Argument types:
  %%    
  %% Aliased:
  %%    _175
  _408 = bif:is_tuple _175
  br _408, ^408, ^278

408:
  %% Argument types:
  %%    _175 => {...}
  %% Aliased:
  %%    _175
  _409 = bif:tuple_size _175

  %% Argument types:
  %%    _409 => 0..16777215
  %% Unique:
  %%    _409
  _410 = bif:'=:=' _409, `5`
  br _410, ^407, ^278

407:
  %% Argument types:
  %%    _175 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _175
  _180 = get_tuple_element _175, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _180
  _406 = bif:'=:=' _180, `{function,test,0}`
  br _406, ^406, ^278

406:
  %% Argument types:
  %%    _175 => {{'function', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _175
  _178 = get_tuple_element _175, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _178
  _405 = bif:'=:=' _178, `[<<"test()">>]`
  br _405, ^405, ^278

405:
  %% Argument types:
  %%    _175 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _175
  _177 = get_tuple_element _175, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _177
  _404 = bif:'=:=' _177, `none`
  br _404, ^403, ^278

403:
  %% Argument types:
  %%    _175 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _175
  _176 = get_tuple_element _175, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _402 = bif:is_map _176
  br _402, ^402, ^278

402:
  %% Argument types:
  %%    _176 => map()
  %% Aliased:
  %%    _176
  _181 = get_map_element _176, `deprecated`

  %% Aliased:
  %%    _181
  _285 = succeeded:guard _181
  br _285, ^285, ^278

285:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _181
  _401 = bif:'=:=' _181, `<<"deprecated:test/0 is deprecated; see the documentation for details">>`
  br _401, ^401, ^278

401:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _174
  _400 = bif:'=:=' _174, `[]`
  br _400, ^400, ^278

400:
  %% beam_doc_SUITE.erl:412
  %% Aliased:
  %%    _0
  _182 = call (`default_compile_file`/3), _0, `"deprecated"`, `[{d,'ALL_WILDCARD'},{d,'REASON',next_version},{d,'TREASON',eventually}]`

  %% Aliased:
  %%    _182
  _286 = succeeded:body _182
  br _286, ^286, ^1

286:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _182
  _396 = is_tagged_tuple _182, `2`, `ok`
  br _396, ^393, ^288

393:
  %% Argument types:
  %%    _182 => {'ok', any()}
  %% Aliased:
  %%    _182
  _183 = get_tuple_element _182, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45, 
  %%    _183
  _289 = bif:'=:=' _183, _45
  br _289, ^289, ^288

289:
  %% beam_doc_SUITE.erl:423
  %% Aliased:
  %%    _45
  _185 = call (`code`:`get_doc`/1), _45

  %% Aliased:
  %%    _185
  _290 = succeeded:body _185
  br _290, ^290, ^1

290:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _185
  _389 = is_tagged_tuple _185, `2`, `ok`
  br _389, ^386, ^292

386:
  %% Argument types:
  %%    _185 => {'ok', any()}
  %% Aliased:
  %%    _185
  _186 = get_tuple_element _185, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _186
  _383 = is_tagged_tuple _186, `7`, `docs_v1`
  br _383, ^380, ^292

380:
  %% Argument types:
  %%    _186 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _186
  _190 = get_tuple_element _186, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _190
  _379 = bif:'=:=' _190, `none`
  br _379, ^378, ^292

378:
  %% Argument types:
  %%    _186 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _186
  _188 = get_tuple_element _186, `6`

  %% Aliased:
  %%    _188
  _377 = is_nonempty_list _188
  br _377, ^377, ^292

377:
  %% Argument types:
  %%    _188 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _188
  _196 = get_hd _188

  %% Argument types:
  %%    _188 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _188
  _195 = get_tl _188

  %% Argument types:
  %%    
  %% Aliased:
  %%    _196
  _374 = bif:is_tuple _196
  br _374, ^374, ^292

374:
  %% Argument types:
  %%    _196 => {...}
  %% Aliased:
  %%    _196
  _375 = bif:tuple_size _196

  %% Argument types:
  %%    _375 => 0..16777215
  %% Unique:
  %%    _375
  _376 = bif:'=:=' _375, `5`
  br _376, ^373, ^292

373:
  %% Argument types:
  %%    _196 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _196
  _201 = get_tuple_element _196, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _201
  _372 = bif:'=:=' _201, `{type,test,1}`
  br _372, ^372, ^292

372:
  %% Argument types:
  %%    _196 => {{'type', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _196
  _199 = get_tuple_element _196, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _199
  _371 = bif:'=:=' _199, `[<<"test(N)">>]`
  br _371, ^371, ^292

371:
  %% Argument types:
  %%    _196 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _196
  _198 = get_tuple_element _196, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _198
  _370 = bif:'=:=' _198, `none`
  br _370, ^369, ^292

369:
  %% Argument types:
  %%    _196 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _196
  _197 = get_tuple_element _196, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _197
  _368 = bif:is_map _197
  br _368, ^368, ^292

368:
  %% Argument types:
  %%    _197 => map()
  %% Aliased:
  %%    _197
  _202 = get_map_element _197, `deprecated`

  %% Aliased:
  %%    _202
  _293 = succeeded:guard _202
  br _293, ^293, ^292

293:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _202
  _367 = bif:'=:=' _202, `<<"the type deprecated:test(_) is deprecated; will be removed in a future release. See the documentation for details">>`
  br _367, ^367, ^292

367:
  %% Aliased:
  %%    _195
  _366 = is_nonempty_list _195
  br _366, ^366, ^292

366:
  %% Argument types:
  %%    _195 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _195
  _204 = get_hd _195

  %% Argument types:
  %%    _195 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _195
  _203 = get_tl _195

  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _363 = bif:is_tuple _204
  br _363, ^363, ^292

363:
  %% Argument types:
  %%    _204 => {...}
  %% Aliased:
  %%    _204
  _364 = bif:tuple_size _204

  %% Argument types:
  %%    _364 => 0..16777215
  %% Unique:
  %%    _364
  _365 = bif:'=:=' _364, `5`
  br _365, ^362, ^292

362:
  %% Argument types:
  %%    _204 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _204
  _209 = get_tuple_element _204, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _209
  _361 = bif:'=:=' _209, `{type,test,0}`
  br _361, ^361, ^292

361:
  %% Argument types:
  %%    _204 => {{'type', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _204
  _207 = get_tuple_element _204, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _207
  _360 = bif:'=:=' _207, `[<<"test()">>]`
  br _360, ^360, ^292

360:
  %% Argument types:
  %%    _204 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _204
  _206 = get_tuple_element _204, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _206
  _359 = bif:'=:=' _206, `none`
  br _359, ^358, ^292

358:
  %% Argument types:
  %%    _204 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _204
  _205 = get_tuple_element _204, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _205
  _357 = bif:is_map _205
  br _357, ^357, ^292

357:
  %% Argument types:
  %%    _205 => map()
  %% Aliased:
  %%    _205
  _210 = get_map_element _205, `deprecated`

  %% Aliased:
  %%    _210
  _294 = succeeded:guard _210
  br _294, ^294, ^292

294:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _210
  _356 = bif:'=:=' _210, `<<"the type deprecated:test() is deprecated; see the documentation for details">>`
  br _356, ^356, ^292

356:
  %% Aliased:
  %%    _203
  _355 = is_nonempty_list _203
  br _355, ^355, ^292

355:
  %% Argument types:
  %%    _203 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _203
  _212 = get_hd _203

  %% Argument types:
  %%    _203 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _203
  _211 = get_tl _203

  %% Argument types:
  %%    
  %% Aliased:
  %%    _212
  _352 = bif:is_tuple _212
  br _352, ^352, ^292

352:
  %% Argument types:
  %%    _212 => {...}
  %% Aliased:
  %%    _212
  _353 = bif:tuple_size _212

  %% Argument types:
  %%    _353 => 0..16777215
  %% Unique:
  %%    _353
  _354 = bif:'=:=' _353, `5`
  br _354, ^351, ^292

351:
  %% Argument types:
  %%    _212 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _212
  _217 = get_tuple_element _212, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _217
  _350 = bif:'=:=' _217, `{callback,test,1}`
  br _350, ^350, ^292

350:
  %% Argument types:
  %%    _212 => {{'callback', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _212
  _215 = get_tuple_element _212, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _215
  _349 = bif:'=:=' _215, `[<<"test(N)">>]`
  br _349, ^349, ^292

349:
  %% Argument types:
  %%    _212 => {{'callback', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _212
  _214 = get_tuple_element _212, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _214
  _348 = bif:'=:=' _214, `none`
  br _348, ^347, ^292

347:
  %% Argument types:
  %%    _212 => {{'callback', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _212
  _213 = get_tuple_element _212, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _213
  _346 = bif:is_map _213
  br _346, ^346, ^292

346:
  %% Argument types:
  %%    _213 => map()
  %% Aliased:
  %%    _213
  _218 = get_map_element _213, `deprecated`

  %% Aliased:
  %%    _218
  _295 = succeeded:guard _218
  br _295, ^295, ^292

295:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _218
  _345 = bif:'=:=' _218, `<<"the callback deprecated:test(_) is deprecated; will be removed in the next version. See the documentation for details">>`
  br _345, ^345, ^292

345:
  %% Aliased:
  %%    _211
  _344 = is_nonempty_list _211
  br _344, ^344, ^292

344:
  %% Argument types:
  %%    _211 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _211
  _220 = get_hd _211

  %% Argument types:
  %%    _211 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _211
  _219 = get_tl _211

  %% Argument types:
  %%    
  %% Aliased:
  %%    _220
  _341 = bif:is_tuple _220
  br _341, ^341, ^292

341:
  %% Argument types:
  %%    _220 => {...}
  %% Aliased:
  %%    _220
  _342 = bif:tuple_size _220

  %% Argument types:
  %%    _342 => 0..16777215
  %% Unique:
  %%    _342
  _343 = bif:'=:=' _342, `5`
  br _343, ^340, ^292

340:
  %% Argument types:
  %%    _220 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _220
  _225 = get_tuple_element _220, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _225
  _339 = bif:'=:=' _225, `{callback,test,0}`
  br _339, ^339, ^292

339:
  %% Argument types:
  %%    _220 => {{'callback', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _220
  _223 = get_tuple_element _220, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _223
  _338 = bif:'=:=' _223, `[<<"test()">>]`
  br _338, ^338, ^292

338:
  %% Argument types:
  %%    _220 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _220
  _222 = get_tuple_element _220, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _222
  _337 = bif:'=:=' _222, `none`
  br _337, ^336, ^292

336:
  %% Argument types:
  %%    _220 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _220
  _221 = get_tuple_element _220, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _221
  _335 = bif:is_map _221
  br _335, ^335, ^292

335:
  %% Argument types:
  %%    _221 => map()
  %% Aliased:
  %%    _221
  _226 = get_map_element _221, `deprecated`

  %% Aliased:
  %%    _226
  _296 = succeeded:guard _226
  br _296, ^296, ^292

296:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _226
  _334 = bif:'=:=' _226, `<<"Meta reason">>`
  br _334, ^334, ^292

334:
  %% Aliased:
  %%    _219
  _333 = is_nonempty_list _219
  br _333, ^333, ^292

333:
  %% Argument types:
  %%    _219 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _219
  _228 = get_hd _219

  %% Argument types:
  %%    _219 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _219
  _227 = get_tl _219

  %% Argument types:
  %%    
  %% Aliased:
  %%    _228
  _330 = bif:is_tuple _228
  br _330, ^330, ^292

330:
  %% Argument types:
  %%    _228 => {...}
  %% Aliased:
  %%    _228
  _331 = bif:tuple_size _228

  %% Argument types:
  %%    _331 => 0..16777215
  %% Unique:
  %%    _331
  _332 = bif:'=:=' _331, `5`
  br _332, ^329, ^292

329:
  %% Argument types:
  %%    _228 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _228
  _233 = get_tuple_element _228, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _233
  _328 = bif:'=:=' _233, `{function,test,2}`
  br _328, ^328, ^292

328:
  %% Argument types:
  %%    _228 => {{'function', 'test', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _228
  _231 = get_tuple_element _228, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _327 = bif:'=:=' _231, `[<<"test(N, M)">>]`
  br _327, ^327, ^292

327:
  %% Argument types:
  %%    _228 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _228
  _230 = get_tuple_element _228, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _230
  _326 = bif:'=:=' _230, `none`
  br _326, ^325, ^292

325:
  %% Argument types:
  %%    _228 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _228
  _229 = get_tuple_element _228, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _229
  _324 = bif:is_map _229
  br _324, ^324, ^292

324:
  %% Argument types:
  %%    _229 => map()
  %% Aliased:
  %%    _229
  _234 = get_map_element _229, `deprecated`

  %% Aliased:
  %%    _234
  _297 = succeeded:guard _234
  br _297, ^297, ^292

297:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _234
  _323 = bif:'=:=' _234, `<<"Meta reason">>`
  br _323, ^323, ^292

323:
  %% Aliased:
  %%    _227
  _322 = is_nonempty_list _227
  br _322, ^322, ^292

322:
  %% Argument types:
  %%    _227 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _227
  _236 = get_hd _227

  %% Argument types:
  %%    _227 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _227
  _235 = get_tl _227

  %% Argument types:
  %%    
  %% Aliased:
  %%    _236
  _319 = bif:is_tuple _236
  br _319, ^319, ^292

319:
  %% Argument types:
  %%    _236 => {...}
  %% Aliased:
  %%    _236
  _320 = bif:tuple_size _236

  %% Argument types:
  %%    _320 => 0..16777215
  %% Unique:
  %%    _320
  _321 = bif:'=:=' _320, `5`
  br _321, ^318, ^292

318:
  %% Argument types:
  %%    _236 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _236
  _241 = get_tuple_element _236, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _241
  _317 = bif:'=:=' _241, `{function,test,1}`
  br _317, ^317, ^292

317:
  %% Argument types:
  %%    _236 => {{'function', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _236
  _239 = get_tuple_element _236, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _316 = bif:'=:=' _239, `[<<"test(N)">>]`
  br _316, ^316, ^292

316:
  %% Argument types:
  %%    _236 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _236
  _238 = get_tuple_element _236, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _238
  _315 = bif:'=:=' _238, `none`
  br _315, ^314, ^292

314:
  %% Argument types:
  %%    _236 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _236
  _237 = get_tuple_element _236, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _237
  _313 = bif:is_map _237
  br _313, ^313, ^292

313:
  %% Argument types:
  %%    _237 => map()
  %% Aliased:
  %%    _237
  _242 = get_map_element _237, `deprecated`

  %% Aliased:
  %%    _242
  _298 = succeeded:guard _242
  br _298, ^298, ^292

298:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _242
  _312 = bif:'=:=' _242, `<<"deprecated:test/1 is deprecated; will be removed in the next version. See the documentation for details">>`
  br _312, ^312, ^292

312:
  %% Aliased:
  %%    _235
  _311 = is_nonempty_list _235
  br _311, ^311, ^292

311:
  %% Argument types:
  %%    _235 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _235
  _244 = get_hd _235

  %% Argument types:
  %%    _235 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _235
  _243 = get_tl _235

  %% Argument types:
  %%    
  %% Aliased:
  %%    _244
  _308 = bif:is_tuple _244
  br _308, ^308, ^292

308:
  %% Argument types:
  %%    _244 => {...}
  %% Aliased:
  %%    _244
  _309 = bif:tuple_size _244

  %% Argument types:
  %%    _309 => 0..16777215
  %% Unique:
  %%    _309
  _310 = bif:'=:=' _309, `5`
  br _310, ^307, ^292

307:
  %% Argument types:
  %%    _244 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _244
  _249 = get_tuple_element _244, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _249
  _306 = bif:'=:=' _249, `{function,test,0}`
  br _306, ^306, ^292

306:
  %% Argument types:
  %%    _244 => {{'function', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _244
  _247 = get_tuple_element _244, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _247
  _305 = bif:'=:=' _247, `[<<"test()">>]`
  br _305, ^305, ^292

305:
  %% Argument types:
  %%    _244 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _244
  _246 = get_tuple_element _244, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _246
  _304 = bif:'=:=' _246, `none`
  br _304, ^303, ^292

303:
  %% Argument types:
  %%    _244 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _244
  _245 = get_tuple_element _244, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _302 = bif:is_map _245
  br _302, ^302, ^292

302:
  %% Argument types:
  %%    _245 => map()
  %% Aliased:
  %%    _245
  _250 = get_map_element _245, `deprecated`

  %% Aliased:
  %%    _250
  _299 = succeeded:guard _250
  br _299, ^299, ^292

299:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _250
  _301 = bif:'=:=' _250, `<<"deprecated:test/0 is deprecated; see the documentation for details">>`
  br _301, ^301, ^292

301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _243
  _300 = bif:'=:=' _243, `[]`
  br _300, ^300, ^292

300:
  %% Result type:
  %%    'ok'
  ret `ok`

292:
  %% beam_doc_SUITE.erl:415
  %% Aliased:
  %%    _185
  _251 = match_fail `badmatch`, _185

  %% Unique:
  %%    _251
  _392 = succeeded:body _251
  br ^1

288:
  %% beam_doc_SUITE.erl:412
  %% Aliased:
  %%    _182
  _252 = match_fail `badmatch`, _182

  %% Unique:
  %%    _252
  _399 = succeeded:body _252
  br ^1

278:
  %% beam_doc_SUITE.erl:402
  %% Aliased:
  %%    _116
  _253 = match_fail `badmatch`, _116

  %% Unique:
  %%    _253
  _492 = succeeded:body _253
  br ^1

274:
  %% beam_doc_SUITE.erl:400
  %% Aliased:
  %%    _113
  _254 = match_fail `badmatch`, _113

  %% Unique:
  %%    _254
  _499 = succeeded:body _254
  br ^1

264:
  %% beam_doc_SUITE.erl:390
  %% Aliased:
  %%    _47
  _255 = match_fail `badmatch`, _47

  %% Unique:
  %%    _255
  _592 = succeeded:body _255
  br ^1

261:
  %% beam_doc_SUITE.erl:389
  %% Aliased:
  %%    _44
  _256 = match_fail `badmatch`, _44

  %% Unique:
  %%    _256
  _599 = succeeded:body _256
  br ^1

1:
  _257 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _257
}

%% beam_doc_SUITE.erl:426
%% Counter = 23
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`warn_missing_doc`(_0) {
0:
  %% beam_doc_SUITE.erl:428
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`warn_missing_doc`/3), _0, `[function,type,callback]`, `[warn_missing_doc]`

  %% Unique:
  %%    _2
  _13 = succeeded:body _2
  br _13, ^13, ^1

13:
  %% beam_doc_SUITE.erl:429
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _3 = call (`warn_missing_doc`/3), _0, `[function]`, `[warn_missing_doc_functions]`

  %% Unique:
  %%    _3
  _14 = succeeded:body _3
  br _14, ^14, ^1

14:
  %% beam_doc_SUITE.erl:430
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _4 = call (`warn_missing_doc`/3), _0, `[function,type]`, `[warn_missing_doc_functions,warn_missing_doc_types]`

  %% Unique:
  %%    _4
  _15 = succeeded:body _4
  br _15, ^15, ^1

15:
  %% beam_doc_SUITE.erl:431
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _5 = call (`warn_missing_doc`/3), _0, `[type,callback]`, `[warn_missing_doc_types,warn_missing_doc_callbacks]`

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br _16, ^16, ^1

16:
  %% beam_doc_SUITE.erl:432
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _6 = call (`warn_missing_doc`/3), _0, `[callback]`, `[warn_missing_doc_callbacks]`

  %% Unique:
  %%    _6
  _17 = succeeded:body _6
  br _17, ^17, ^1

17:
  %% beam_doc_SUITE.erl:434
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _7 = call (`warn_missing_doc`/3), _0, `[type,callback]`, `[warn_missing_doc,nowarn_missing_doc_functions]`

  %% Unique:
  %%    _7
  _18 = succeeded:body _7
  br _18, ^18, ^1

18:
  %% beam_doc_SUITE.erl:435
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _8 = call (`warn_missing_doc`/3), _0, `[function,callback]`, `[warn_missing_doc,nowarn_missing_doc_types]`

  %% Unique:
  %%    _8
  _19 = succeeded:body _8
  br _19, ^19, ^1

19:
  %% beam_doc_SUITE.erl:436
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _9 = call (`warn_missing_doc`/3), _0, `[type]`, `[warn_missing_doc,nowarn_missing_doc_callbacks,nowarn_missing_doc_functions]`

  %% Unique:
  %%    _9
  _20 = succeeded:body _9
  br _20, ^20, ^1

20:
  %% beam_doc_SUITE.erl:437
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _10 = call (`warn_missing_doc`/3), _0, `[]`, `[warn_missing_doc_functions,nowarn_missing_doc]`

  %% Unique:
  %%    _10
  _21 = succeeded:body _10
  br _21, ^22, ^1

22:
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% beam_doc_SUITE.erl:441
%% Counter = 509
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     list('callback' | 'function' | 'type')
%%    _2 =>
%%     nonempty_list(atom())
function `beam_doc_SUITE`:`warn_missing_doc`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _2 => nonempty_list(atom())
  %% Unique:
  %%    _2
  _80 = put_list `report`, _2

  %% Argument types:
  %%    _80 => nonempty_list(atom())
  %% Unique:
  %%    _80
  _81 = put_list `return_warnings`, _80

  %% beam_doc_SUITE.erl:444
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _81
  _82 = call (`default_compile_file`/3), _0, `"warn_missing_doc"`, _81

  %% Aliased:
  %%    _82
  _287 = succeeded:body _82
  br _287, ^287, ^1

287:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _486 = is_tagged_tuple _82, `3`, `ok`
  br _486, ^485, ^289

485:
  %% Argument types:
  %%    _82 => {'ok', any(), any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `1`

  %% Argument types:
  %%    _82 => {'ok', any(), any()}
  %% Aliased:
  %%    _82
  _83 = get_tuple_element _82, `2`

  %% beam_doc_SUITE.erl:453
  %% Aliased:
  %%    _84
  _86 = call (`code`:`get_doc`/1), _84

  %% Aliased:
  %%    _86
  _290 = succeeded:body _86
  br _290, ^290, ^1

290:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _479 = is_tagged_tuple _86, `2`, `ok`
  br _479, ^476, ^292

476:
  %% Argument types:
  %%    _86 => {'ok', any()}
  %% Aliased:
  %%    _86
  _87 = get_tuple_element _86, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _473 = is_tagged_tuple _87, `7`, `docs_v1`
  br _473, ^470, ^292

470:
  %% Argument types:
  %%    _87 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _87
  _91 = get_tuple_element _87, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _469 = bif:'=:=' _91, `none`
  br _469, ^468, ^292

468:
  %% Argument types:
  %%    _87 => {'docs_v1', any(), any(), any(), 'none', any(), any()}
  %% Aliased:
  %%    _87
  _89 = get_tuple_element _87, `6`

  %% Aliased:
  %%    _89
  _467 = is_nonempty_list _89
  br _467, ^467, ^292

467:
  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _97 = get_hd _89

  %% Argument types:
  %%    _89 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _89
  _96 = get_tl _89

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _464 = bif:is_tuple _97
  br _464, ^464, ^292

464:
  %% Argument types:
  %%    _97 => {...}
  %% Aliased:
  %%    _97
  _465 = bif:tuple_size _97

  %% Argument types:
  %%    _465 => 0..16777215
  %% Unique:
  %%    _465
  _466 = bif:'=:=' _465, `5`
  br _466, ^463, ^292

463:
  %% Argument types:
  %%    _97 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _97
  _102 = get_tuple_element _97, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _462 = bif:'=:=' _102, `{type,test,1}`
  br _462, ^462, ^292

462:
  %% Argument types:
  %%    _97 => {{'type', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _97
  _100 = get_tuple_element _97, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100
  _461 = bif:'=:=' _100, `[<<"test(N)">>]`
  br _461, ^461, ^292

461:
  %% Argument types:
  %%    _97 => {{'type', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _97
  _99 = get_tuple_element _97, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _460 = bif:'=:=' _99, `none`
  br _460, ^459, ^292

459:
  %% Aliased:
  %%    _96
  _458 = is_nonempty_list _96
  br _458, ^458, ^292

458:
  %% Argument types:
  %%    _96 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _96
  _104 = get_hd _96

  %% Argument types:
  %%    _96 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _96
  _103 = get_tl _96

  %% Argument types:
  %%    
  %% Aliased:
  %%    _104
  _455 = bif:is_tuple _104
  br _455, ^455, ^292

455:
  %% Argument types:
  %%    _104 => {...}
  %% Aliased:
  %%    _104
  _456 = bif:tuple_size _104

  %% Argument types:
  %%    _456 => 0..16777215
  %% Unique:
  %%    _456
  _457 = bif:'=:=' _456, `5`
  br _457, ^454, ^292

454:
  %% Argument types:
  %%    _104 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _104
  _109 = get_tuple_element _104, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _453 = bif:'=:=' _109, `{type,test,0}`
  br _453, ^453, ^292

453:
  %% Argument types:
  %%    _104 => {{'type', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _104
  _107 = get_tuple_element _104, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _452 = bif:'=:=' _107, `[<<"test()">>]`
  br _452, ^452, ^292

452:
  %% Argument types:
  %%    _104 => {{'type', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _104
  _106 = get_tuple_element _104, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _451 = bif:'=:=' _106, `none`
  br _451, ^450, ^292

450:
  %% Aliased:
  %%    _103
  _449 = is_nonempty_list _103
  br _449, ^449, ^292

449:
  %% Argument types:
  %%    _103 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _103
  _111 = get_hd _103

  %% Argument types:
  %%    _103 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _103
  _110 = get_tl _103

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _446 = bif:is_tuple _111
  br _446, ^446, ^292

446:
  %% Argument types:
  %%    _111 => {...}
  %% Aliased:
  %%    _111
  _447 = bif:tuple_size _111

  %% Argument types:
  %%    _447 => 0..16777215
  %% Unique:
  %%    _447
  _448 = bif:'=:=' _447, `5`
  br _448, ^445, ^292

445:
  %% Argument types:
  %%    _111 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _111
  _116 = get_tuple_element _111, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _116
  _444 = bif:'=:=' _116, `{callback,test,0}`
  br _444, ^444, ^292

444:
  %% Argument types:
  %%    _111 => {{'callback', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _111
  _114 = get_tuple_element _111, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _443 = bif:'=:=' _114, `[<<"test()">>]`
  br _443, ^443, ^292

443:
  %% Argument types:
  %%    _111 => {{'callback', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _111
  _113 = get_tuple_element _111, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _113
  _442 = bif:'=:=' _113, `none`
  br _442, ^441, ^292

441:
  %% Aliased:
  %%    _110
  _440 = is_nonempty_list _110
  br _440, ^440, ^292

440:
  %% Argument types:
  %%    _110 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _110
  _118 = get_hd _110

  %% Argument types:
  %%    _110 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _110
  _117 = get_tl _110

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _437 = bif:is_tuple _118
  br _437, ^437, ^292

437:
  %% Argument types:
  %%    _118 => {...}
  %% Aliased:
  %%    _118
  _438 = bif:tuple_size _118

  %% Argument types:
  %%    _438 => 0..16777215
  %% Unique:
  %%    _438
  _439 = bif:'=:=' _438, `5`
  br _439, ^436, ^292

436:
  %% Argument types:
  %%    _118 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _118
  _123 = get_tuple_element _118, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _435 = bif:'=:=' _123, `{function,test,1}`
  br _435, ^435, ^292

435:
  %% Argument types:
  %%    _118 => {{'function', 'test', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _118
  _121 = get_tuple_element _118, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _434 = bif:'=:=' _121, `[<<"test(N)">>]`
  br _434, ^434, ^292

434:
  %% Argument types:
  %%    _118 => {{'function', 'test', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _118
  _120 = get_tuple_element _118, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _433 = bif:'=:=' _120, `none`
  br _433, ^432, ^292

432:
  %% Aliased:
  %%    _117
  _431 = is_nonempty_list _117
  br _431, ^431, ^292

431:
  %% Argument types:
  %%    _117 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _117
  _125 = get_hd _117

  %% Argument types:
  %%    _117 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _117
  _124 = get_tl _117

  %% Argument types:
  %%    
  %% Aliased:
  %%    _125
  _428 = bif:is_tuple _125
  br _428, ^428, ^292

428:
  %% Argument types:
  %%    _125 => {...}
  %% Aliased:
  %%    _125
  _429 = bif:tuple_size _125

  %% Argument types:
  %%    _429 => 0..16777215
  %% Unique:
  %%    _429
  _430 = bif:'=:=' _429, `5`
  br _430, ^427, ^292

427:
  %% Argument types:
  %%    _125 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _125
  _130 = get_tuple_element _125, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _426 = bif:'=:=' _130, `{function,test,0}`
  br _426, ^426, ^292

426:
  %% Argument types:
  %%    _125 => {{'function', 'test', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _125
  _128 = get_tuple_element _125, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _425 = bif:'=:=' _128, `[<<"test()">>]`
  br _425, ^425, ^292

425:
  %% Argument types:
  %%    _125 => {{'function', 'test', 0}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _125
  _127 = get_tuple_element _125, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _424 = bif:'=:=' _127, `none`
  br _424, ^423, ^292

423:
  %% Aliased:
  %%    _124
  _422 = is_nonempty_list _124
  br _422, ^422, ^292

422:
  %% Argument types:
  %%    _124 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _124
  _132 = get_hd _124

  %% Argument types:
  %%    _124 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _124
  _131 = get_tl _124

  %% Argument types:
  %%    
  %% Aliased:
  %%    _132
  _419 = bif:is_tuple _132
  br _419, ^419, ^292

419:
  %% Argument types:
  %%    _132 => {...}
  %% Aliased:
  %%    _132
  _420 = bif:tuple_size _132

  %% Argument types:
  %%    _420 => 0..16777215
  %% Unique:
  %%    _420
  _421 = bif:'=:=' _420, `5`
  br _421, ^418, ^292

418:
  %% Argument types:
  %%    _132 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _132
  _137 = get_tuple_element _132, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _417 = bif:'=:=' _137, `{function,test,2}`
  br _417, ^417, ^292

417:
  %% Argument types:
  %%    _132 => {{'function', 'test', 2}, any(), any(), any(), any()}
  %% Aliased:
  %%    _132
  _135 = get_tuple_element _132, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _135
  _416 = bif:'=:=' _135, `[<<"test(N, M)">>]`
  br _416, ^416, ^292

416:
  %% Argument types:
  %%    _132 => {{'function', 'test', 2}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _132
  _134 = get_tuple_element _132, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _134
  _415 = bif:'=:=' _134, `none`
  br _415, ^414, ^292

414:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _413 = bif:'=:=' _131, `[]`
  br _413, ^413, ^292

413:
  %% Argument types:
  %%    _1 => list('callback' | 'function' | 'type')
  %% Aliased:
  %%    _1
  _299 = bif:'=:=' _1, `[]`
  br _299, ^299, ^294

299:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _297 = bif:'=:=' _83, `[]`
  br _297, ^297, ^296

297:
  %% Result type:
  %%    'ok'
  ret `ok`

296:
  %% Argument types:
  %%    _83 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _83
  _255 = put_tuple `value`, _83

  %% Argument types:
  %%    _255 => {'value', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()}
  %% Unique:
  %%    _255
  _256 = put_list _255, `[]`

  %% Argument types:
  %%    _256 => nonempty_list({'value', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()})
  %% Unique:
  %%    _256
  _257 = put_list `{expected,[]}`, _256

  %% Argument types:
  %%    _257 => nonempty_list({'expected', nil()} | {'value', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()})
  %% Unique:
  %%    _257
  _258 = put_list `{expression,"Ws"}`, _257

  %% Argument types:
  %%    _258 => nonempty_list({'expected', nil()} | {'expression', nonempty_list(87..115)} | {'value', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()})
  %% Unique:
  %%    _258
  _259 = put_list `{line,457}`, _258

  %% Argument types:
  %%    _259 => nonempty_list({'expected', nil()} | {'expression', nonempty_list(87..115)} | {'line', 457} | {'value', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()})
  %% Unique:
  %%    _259
  _260 = put_list `{module,beam_doc_SUITE}`, _259

  %% Argument types:
  %%    _260 => nonempty_list({'expected', nil()} | {'expression', nonempty_list(87..115)} | {'line', 457} | {'module', 'beam_doc_SUITE'} | {'value', atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()})
  %% Unique:
  %%    _260
  _261 = put_tuple `assertEqual`, _260

  %% beam_doc_SUITE.erl:457
  %% Unique:
  %%    _261
  _262 = call (`erlang`:`error`/1), _261

  %% Aliased:
  %%    _262
  _298 = succeeded:body _262
  br ^1

294:
  %% Aliased:
  %%    _83
  _411 = is_nonempty_list _83
  br _411, ^411, ^301

411:
  %% Argument types:
  %%    _83 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _83
  _139 = get_hd _83

  %% Argument types:
  %%    _83 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _83
  _138 = get_tl _83

  %% Argument types:
  %%    
  %% Aliased:
  %%    _139
  _408 = bif:is_tuple _139
  br _408, ^408, ^301

408:
  %% Argument types:
  %%    _139 => {...}
  %% Aliased:
  %%    _139
  _409 = bif:tuple_size _139

  %% Argument types:
  %%    _409 => 0..16777215
  %% Unique:
  %%    _409
  _410 = bif:'=:=' _409, `2`
  br _410, ^407, ^301

407:
  %% Argument types:
  %%    _139 => {any(), any()}
  %% Aliased:
  %%    _139
  _140 = get_tuple_element _139, `1`

  %% beam_doc_SUITE.erl:462
  %% Aliased:
  %%    _1
  _142 = call (`lists`:`member`/2), `type`, _1

  %% Aliased:
  %%    _142
  _302 = succeeded:body _142
  br _302, ^302, ^1

302:
  br _142, ^306, ^305

306:
  br ^303

305:
  br ^303

303:
  _15 = phi { `[]`, ^305 }, { `[2]`, ^306 }

  %% beam_doc_SUITE.erl:463
  %% Aliased:
  %%    _1
  _143 = call (`lists`:`member`/2), `callback`, _1

  %% Aliased:
  %%    _143
  _308 = succeeded:body _143
  br _308, ^308, ^1

308:
  br _143, ^312, ^311

312:
  br ^309

311:
  br ^309

309:
  _13 = phi { `[]`, ^311 }, { `[1]`, ^312 }

  %% beam_doc_SUITE.erl:464
  %% Aliased:
  %%    _1
  _144 = call (`lists`:`member`/2), `function`, _1

  %% Aliased:
  %%    _144
  _314 = succeeded:body _144
  br _314, ^314, ^1

314:
  br _144, ^318, ^317

318:
  br ^315

317:
  br ^315

315:
  _11 = phi { `[]`, ^317 }, { `[2]`, ^318 }

  %% Argument types:
  %%    _11 => list(2)
  %% Unique:
  %%    _11
  _145 = put_list _11, `[]`

  %% Argument types:
  %%    _13 => list(1)
  %%    _145 => nonempty_list(list(2))
  %% Unique:
  %%    _13, 
  %%    _145
  _146 = put_list _13, _145

  %% Argument types:
  %%    _15 => list(2)
  %%    _146 => nonempty_list(list(1..2))
  %% Unique:
  %%    _15, 
  %%    _146
  _147 = put_list _15, _146

  %% beam_doc_SUITE.erl:461
  %% Unique:
  %%    _147
  _16 = call (`lists`:`flatten`/1), _147

  %% Aliased:
  %%    _16
  _320 = succeeded:body _16
  br _320, ^320, ^1

320:
  %% beam_doc_SUITE.erl:460
  %% Aliased:
  %%    _16
  _17 = call (`lists`:`sum`/1), _16

  %% Aliased:
  %%    _17
  _321 = succeeded:body _17
  br _321, ^321, ^1

321:
  %% beam_doc_SUITE.erl:460
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  ExpectedWarningCount = bif:'+' _17, `1`

  %% Unique:
  %%    ExpectedWarningCount
  _322 = succeeded:body ExpectedWarningCount
  br _322, ^322, ^1

322:
  %% Argument types:
  %%    _139 => {any(), any()}
  %% Aliased:
  %%    _139
  _141 = get_tuple_element _139, `0`

  %% beam_doc_SUITE.erl:466
  %% Aliased:
  %%    _141
  _148 = call (`filename`:`basename`/1), _141

  %% Aliased:
  %%    _148
  _323 = succeeded:body _148
  br _323, ^323, ^1

323:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _326 = bif:'=:=' _148, `"warn_missing_doc.erl"`
  br _326, ^324, ^325

324:
  %% beam_doc_SUITE.erl:467
  %% Argument types:
  %%    
  %% Aliased:
  %%    _140
  _156 = bif:length _140

  %% Unique:
  %%    _156
  _328 = succeeded:body _156
  br _328, ^328, ^1

328:
  %% Argument types:
  %%    _156 => 0..288230376151711743
  %%    ExpectedWarningCount => number()
  %% Unique:
  %%    _156, 
  %%    ExpectedWarningCount
  _331 = bif:'=:=' _156, ExpectedWarningCount
  br _331, ^329, ^330

329:
  %% beam_doc_SUITE.erl:468
  %% Aliased:
  %%    _140
  _166 = call (`lists`:`nth`/2), `1`, _140

  %% Aliased:
  %%    _166
  _333 = succeeded:body _166
  br _333, ^333, ^1

333:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _166
  _336 = bif:'=:=' _166, `{1,beam_doc,missing_moduledoc}`
  br _336, ^334, ^335

334:
  %% beam_doc_SUITE.erl:470
  %% Aliased:
  %%    _1
  _175 = call (`lists`:`member`/2), `type`, _1

  %% Aliased:
  %%    _175
  _338 = succeeded:body _175
  br _338, ^338, ^1

338:
  br _175, ^352, ^351

352:
  %% beam_doc_SUITE.erl:472
  %% Aliased:
  %%    _140
  _176 = call (`lists`:`nth`/2), `2`, _140

  %% Aliased:
  %%    _176
  _341 = succeeded:body _176
  br _341, ^341, ^1

341:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _344 = bif:'=:=' _176, `{{6,2},beam_doc,{missing_doc,{type,test,0}}}`
  br _344, ^342, ^343

342:
  %% beam_doc_SUITE.erl:473
  %% Aliased:
  %%    _140
  _185 = call (`lists`:`nth`/2), `3`, _140

  %% Aliased:
  %%    _185
  _346 = succeeded:body _185
  br _346, ^346, ^1

346:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _185
  _349 = bif:'=:=' _185, `{{7,2},beam_doc,{missing_doc,{type,test,1}}}`
  br _349, ^347, ^348

347:
  br ^339

348:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _185
  _187 = put_tuple `value`, _185

  %% Argument types:
  %%    _187 => {'value', any()}
  %% Unique:
  %%    _187
  _188 = put_list _187, `[]`

  %% Argument types:
  %%    _188 => nonempty_list({'value', any()})
  %% Unique:
  %%    _188
  _189 = put_list `{pattern,"{ { 7 , 2 } , beam_doc , { missing_doc , { type , test , 1 } } }"}`, _188

  %% Argument types:
  %%    _189 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _189
  _190 = put_list `{expression,"lists : nth ( 3 , Warnings )"}`, _189

  %% Argument types:
  %%    _190 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _190
  _191 = put_list `{line,473}`, _190

  %% Argument types:
  %%    _191 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 473} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _191
  _192 = put_list `{module,beam_doc_SUITE}`, _191

  %% Argument types:
  %%    _192 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 473} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _192
  _193 = put_tuple `assertMatch`, _192

  %% beam_doc_SUITE.erl:473
  %% Unique:
  %%    _193
  _270 = call (`erlang`:`error`/1), _193

  %% Aliased:
  %%    _270
  _350 = succeeded:body _270
  br ^1

343:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _178 = put_tuple `value`, _176

  %% Argument types:
  %%    _178 => {'value', any()}
  %% Unique:
  %%    _178
  _179 = put_list _178, `[]`

  %% Argument types:
  %%    _179 => nonempty_list({'value', any()})
  %% Unique:
  %%    _179
  _180 = put_list `{pattern,"{ { 6 , 2 } , beam_doc , { missing_doc , { type , test , 0 } } }"}`, _179

  %% Argument types:
  %%    _180 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _180
  _181 = put_list `{expression,"lists : nth ( 2 , Warnings )"}`, _180

  %% Argument types:
  %%    _181 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _181
  _182 = put_list `{line,472}`, _181

  %% Argument types:
  %%    _182 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 472} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _182
  _183 = put_list `{module,beam_doc_SUITE}`, _182

  %% Argument types:
  %%    _183 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 472} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _183
  _184 = put_tuple `assertMatch`, _183

  %% beam_doc_SUITE.erl:472
  %% Unique:
  %%    _184
  _269 = call (`erlang`:`error`/1), _184

  %% Aliased:
  %%    _269
  _345 = succeeded:body _269
  br ^1

351:
  br ^339

339:
  _32 = phi { `4`, ^347 }, { `2`, ^351 }

  %% beam_doc_SUITE.erl:480
  %% Aliased:
  %%    _1
  _194 = call (`lists`:`member`/2), `callback`, _1

  %% Aliased:
  %%    _194
  _354 = succeeded:body _194
  br _354, ^354, ^1

354:
  br _194, ^364, ^363

364:
  %% beam_doc_SUITE.erl:482
  %% Aliased:
  %%    _32, 
  %%    _140
  _195 = call (`lists`:`nth`/2), _32, _140

  %% Aliased:
  %%    _195
  _357 = succeeded:body _195
  br _357, ^357, ^1

357:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _195
  _360 = bif:'=:=' _195, `{{9,2},beam_doc,{missing_doc,{callback,test,0}}}`
  br _360, ^358, ^359

358:
  %% beam_doc_SUITE.erl:483
  %% Argument types:
  %%    _32 => 2..4
  %% Unique:
  %%    _32
  _273 = bif:'+' _32, `1`
  br ^355

359:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _195
  _197 = put_tuple `value`, _195

  %% Argument types:
  %%    _197 => {'value', any()}
  %% Unique:
  %%    _197
  _198 = put_list _197, `[]`

  %% Argument types:
  %%    _198 => nonempty_list({'value', any()})
  %% Unique:
  %%    _198
  _199 = put_list `{pattern,"{ { 9 , 2 } , beam_doc , { missing_doc , { callback , test , 0 } } }"}`, _198

  %% Argument types:
  %%    _199 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _199
  _200 = put_list `{expression,"lists : nth ( TypePos , Warnings )"}`, _199

  %% Argument types:
  %%    _200 => nonempty_list({'expression', nonempty_list(32..121)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _200
  _201 = put_list `{line,482}`, _200

  %% Argument types:
  %%    _201 => nonempty_list({'expression', nonempty_list(32..121)} | {'line', 482} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _201
  _202 = put_list `{module,beam_doc_SUITE}`, _201

  %% Argument types:
  %%    _202 => nonempty_list({'expression', nonempty_list(32..121)} | {'line', 482} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _202
  _203 = put_tuple `assertMatch`, _202

  %% beam_doc_SUITE.erl:482
  %% Unique:
  %%    _203
  _272 = call (`erlang`:`error`/1), _203

  %% Aliased:
  %%    _272
  _361 = succeeded:body _272
  br ^1

363:
  br ^355

355:
  _37 = phi { _273, ^358 }, { _32, ^363 }

  %% beam_doc_SUITE.erl:488
  %% Aliased:
  %%    _1
  _204 = call (`lists`:`member`/2), `function`, _1

  %% Aliased:
  %%    _204
  _366 = succeeded:body _204
  br _366, ^366, ^1

366:
  br _204, ^405, ^404

405:
  %% beam_doc_SUITE.erl:490
  %% Aliased:
  %%    _37, 
  %%    _140
  _205 = call (`lists`:`nth`/2), _37, _140

  %% Aliased:
  %%    _205
  _369 = succeeded:body _205
  br _369, ^369, ^1

369:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _205
  _372 = bif:'=:=' _205, `{{13,1},beam_doc,{missing_doc,{function,test,0}}}`
  br _372, ^370, ^371

370:
  %% beam_doc_SUITE.erl:491
  %% Argument types:
  %%    _37 => 2..'+inf'
  %% Unique:
  %%    _37
  _41 = bif:'+' _37, `1`

  %% Unique:
  %%    _41
  _374 = succeeded:body _41
  br _374, ^374, ^1

374:
  %% beam_doc_SUITE.erl:491
  %% Aliased:
  %%    _140
  %% Unique:
  %%    _41
  _214 = call (`lists`:`nth`/2), _41, _140

  %% Aliased:
  %%    _214
  _375 = succeeded:body _214
  br _375, ^375, ^1

375:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _214
  _378 = bif:'=:=' _214, `{{14,1},beam_doc,{missing_doc,{function,test,1}}}`
  br _378, ^376, ^377

376:
  %% Aliased:
  %%    _138
  _402 = is_nonempty_list _138
  br _402, ^402, ^381

402:
  %% Argument types:
  %%    _138 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _138
  _224 = get_hd _138

  %% Argument types:
  %%    _138 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _138
  _223 = get_tl _138

  %% Argument types:
  %%    
  %% Aliased:
  %%    _224
  _399 = bif:is_tuple _224
  br _399, ^399, ^381

399:
  %% Argument types:
  %%    _224 => {...}
  %% Aliased:
  %%    _224
  _400 = bif:tuple_size _224

  %% Argument types:
  %%    _400 => 0..16777215
  %% Unique:
  %%    _400
  _401 = bif:'=:=' _400, `2`
  br _401, ^398, ^381

398:
  %% Argument types:
  %%    _224 => {any(), any()}
  %% Aliased:
  %%    _224
  _225 = get_tuple_element _224, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _223
  _397 = bif:'=:=' _223, `[]`
  br _397, ^397, ^381

397:
  %% Argument types:
  %%    _224 => {any(), any()}
  %% Aliased:
  %%    _224
  _226 = get_tuple_element _224, `0`

  %% beam_doc_SUITE.erl:493
  %% Aliased:
  %%    _226
  _227 = call (`filename`:`basename`/1), _226

  %% Aliased:
  %%    _227
  _382 = succeeded:body _227
  br _382, ^382, ^1

382:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _227
  _385 = bif:'=:=' _227, `"warn_missing_doc.hrl"`
  br _385, ^383, ^384

383:
  %% beam_doc_SUITE.erl:494
  %% Argument types:
  %%    
  %% Aliased:
  %%    _225
  _236 = bif:length _225

  %% Unique:
  %%    _236
  _387 = succeeded:body _236
  br _387, ^387, ^1

387:
  %% Argument types:
  %%    _236 => 0..288230376151711743
  %% Unique:
  %%    _236
  _390 = bif:'=:=' _236, `1`
  br _390, ^388, ^389

388:
  %% beam_doc_SUITE.erl:495
  %% Aliased:
  %%    _225
  _245 = call (`lists`:`nth`/2), `1`, _225

  %% Aliased:
  %%    _245
  _392 = succeeded:body _245
  br _392, ^392, ^1

392:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _395 = bif:'=:=' _245, `{{2,1},beam_doc,{missing_doc,{function,test,2}}}`
  br _395, ^395, ^394

395:
  %% Result type:
  %%    'ok'
  ret `ok`

394:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _247 = put_tuple `value`, _245

  %% Argument types:
  %%    _247 => {'value', any()}
  %% Unique:
  %%    _247
  _248 = put_list _247, `[]`

  %% Argument types:
  %%    _248 => nonempty_list({'value', any()})
  %% Unique:
  %%    _248
  _249 = put_list `{pattern,"{ { 2 , 1 } , beam_doc , { missing_doc , { function , test , 2 } } }"}`, _248

  %% Argument types:
  %%    _249 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _249
  _250 = put_list `{expression,"lists : nth ( 1 , HrlWarnings )"}`, _249

  %% Argument types:
  %%    _250 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _250
  _251 = put_list `{line,495}`, _250

  %% Argument types:
  %%    _251 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 495} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _251
  _252 = put_list `{module,beam_doc_SUITE}`, _251

  %% Argument types:
  %%    _252 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 495} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _252
  _253 = put_tuple `assertMatch`, _252

  %% beam_doc_SUITE.erl:495
  %% Unique:
  %%    _253
  _279 = call (`erlang`:`error`/1), _253

  %% Aliased:
  %%    _279
  _396 = succeeded:body _279
  br ^1

389:
  %% Argument types:
  %%    _236 => 0..288230376151711743
  %% Unique:
  %%    _236
  _238 = put_tuple `value`, _236

  %% Argument types:
  %%    _238 => {'value', 0..288230376151711743}
  %% Unique:
  %%    _238
  _239 = put_list _238, `[]`

  %% Argument types:
  %%    _239 => nonempty_list({'value', 0..288230376151711743})
  %% Unique:
  %%    _239
  _240 = put_list `{expected,1}`, _239

  %% Argument types:
  %%    _240 => nonempty_list({'expected', 1} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _240
  _241 = put_list `{expression,"length ( HrlWarnings )"}`, _240

  %% Argument types:
  %%    _241 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..116)} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _241
  _242 = put_list `{line,494}`, _241

  %% Argument types:
  %%    _242 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..116)} | {'line', 494} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _242
  _243 = put_list `{module,beam_doc_SUITE}`, _242

  %% Argument types:
  %%    _243 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..116)} | {'line', 494} | {'module', 'beam_doc_SUITE'} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _243
  _244 = put_tuple `assertEqual`, _243

  %% beam_doc_SUITE.erl:494
  %% Unique:
  %%    _244
  _278 = call (`erlang`:`error`/1), _244

  %% Aliased:
  %%    _278
  _391 = succeeded:body _278
  br ^1

384:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _227
  _229 = put_tuple `value`, _227

  %% Argument types:
  %%    _229 => {'value', any()}
  %% Unique:
  %%    _229
  _230 = put_list _229, `[]`

  %% Argument types:
  %%    _230 => nonempty_list({'value', any()})
  %% Unique:
  %%    _230
  _231 = put_list `{expected,"warn_missing_doc.hrl"}`, _230

  %% Argument types:
  %%    _231 => nonempty_list({'expected', nonempty_list(46..119)} | {'value', any()})
  %% Unique:
  %%    _231
  _232 = put_list `{expression,"filename : basename ( HrlFile )"}`, _231

  %% Argument types:
  %%    _232 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _232
  _233 = put_list `{line,493}`, _232

  %% Argument types:
  %%    _233 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'line', 493} | {'value', any()})
  %% Unique:
  %%    _233
  _234 = put_list `{module,beam_doc_SUITE}`, _233

  %% Argument types:
  %%    _234 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'line', 493} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _234
  _235 = put_tuple `assertEqual`, _234

  %% beam_doc_SUITE.erl:493
  %% Unique:
  %%    _235
  _277 = call (`erlang`:`error`/1), _235

  %% Aliased:
  %%    _277
  _386 = succeeded:body _277
  br ^1

381:
  %% beam_doc_SUITE.erl:492
  %% Aliased:
  %%    _138
  _280 = match_fail `badmatch`, _138

  %% Unique:
  %%    _280
  _403 = succeeded:body _280
  br ^1

377:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _214
  _216 = put_tuple `value`, _214

  %% Argument types:
  %%    _216 => {'value', any()}
  %% Unique:
  %%    _216
  _217 = put_list _216, `[]`

  %% Argument types:
  %%    _217 => nonempty_list({'value', any()})
  %% Unique:
  %%    _217
  _218 = put_list `{pattern,"{ { 14 , 1 } , beam_doc , { missing_doc , { function , test , 1 } } }"}`, _217

  %% Argument types:
  %%    _218 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _218
  _219 = put_list `{expression,"lists : nth ( CBPos + 1 , Warnings )"}`, _218

  %% Argument types:
  %%    _219 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _219
  _220 = put_list `{line,491}`, _219

  %% Argument types:
  %%    _220 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 491} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _220
  _221 = put_list `{module,beam_doc_SUITE}`, _220

  %% Argument types:
  %%    _221 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 491} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _221
  _222 = put_tuple `assertMatch`, _221

  %% beam_doc_SUITE.erl:491
  %% Unique:
  %%    _222
  _276 = call (`erlang`:`error`/1), _222

  %% Aliased:
  %%    _276
  _379 = succeeded:body _276
  br ^1

371:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _205
  _207 = put_tuple `value`, _205

  %% Argument types:
  %%    _207 => {'value', any()}
  %% Unique:
  %%    _207
  _208 = put_list _207, `[]`

  %% Argument types:
  %%    _208 => nonempty_list({'value', any()})
  %% Unique:
  %%    _208
  _209 = put_list `{pattern,"{ { 13 , 1 } , beam_doc , { missing_doc , { function , test , 0 } } }"}`, _208

  %% Argument types:
  %%    _209 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _209
  _210 = put_list `{expression,"lists : nth ( CBPos , Warnings )"}`, _209

  %% Argument types:
  %%    _210 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _210
  _211 = put_list `{line,490}`, _210

  %% Argument types:
  %%    _211 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 490} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _211
  _212 = put_list `{module,beam_doc_SUITE}`, _211

  %% Argument types:
  %%    _212 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 490} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _212
  _213 = put_tuple `assertMatch`, _212

  %% beam_doc_SUITE.erl:490
  %% Unique:
  %%    _213
  _275 = call (`erlang`:`error`/1), _213

  %% Aliased:
  %%    _275
  _373 = succeeded:body _275
  br ^1

404:
  %% Result type:
  %%    'ok'
  ret `ok`

335:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _166
  _168 = put_tuple `value`, _166

  %% Argument types:
  %%    _168 => {'value', any()}
  %% Unique:
  %%    _168
  _169 = put_list _168, `[]`

  %% Argument types:
  %%    _169 => nonempty_list({'value', any()})
  %% Unique:
  %%    _169
  _170 = put_list `{pattern,"{ 1 , beam_doc , missing_moduledoc }"}`, _169

  %% Argument types:
  %%    _170 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _170
  _171 = put_list `{expression,"lists : nth ( 1 , Warnings )"}`, _170

  %% Argument types:
  %%    _171 => nonempty_list({'expression', nonempty_list(32..116)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _171
  _172 = put_list `{line,468}`, _171

  %% Argument types:
  %%    _172 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 468} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _172
  _173 = put_list `{module,beam_doc_SUITE}`, _172

  %% Argument types:
  %%    _173 => nonempty_list({'expression', nonempty_list(32..116)} | {'line', 468} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _173
  _174 = put_tuple `assertMatch`, _173

  %% beam_doc_SUITE.erl:468
  %% Unique:
  %%    _174
  _268 = call (`erlang`:`error`/1), _174

  %% Aliased:
  %%    _268
  _337 = succeeded:body _268
  br ^1

330:
  %% Argument types:
  %%    _156 => 0..288230376151711743
  %% Unique:
  %%    _156
  _158 = put_tuple `value`, _156

  %% Argument types:
  %%    _158 => {'value', 0..288230376151711743}
  %% Unique:
  %%    _158
  _159 = put_list _158, `[]`

  %% Argument types:
  %%    ExpectedWarningCount => number()
  %% Unique:
  %%    ExpectedWarningCount
  _160 = put_tuple `expected`, ExpectedWarningCount

  %% Argument types:
  %%    _160 => {'expected', number()}
  %%    _159 => nonempty_list({'value', 0..288230376151711743})
  %% Unique:
  %%    _159, 
  %%    _160
  _161 = put_list _160, _159

  %% Argument types:
  %%    _161 => nonempty_list({'expected', number()} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _161
  _162 = put_list `{expression,"length ( Warnings )"}`, _161

  %% Argument types:
  %%    _162 => nonempty_list({'expected', number()} | {'expression', nonempty_list(32..116)} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _162
  _163 = put_list `{line,467}`, _162

  %% Argument types:
  %%    _163 => nonempty_list({'expected', number()} | {'expression', nonempty_list(32..116)} | {'line', 467} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _163
  _164 = put_list `{module,beam_doc_SUITE}`, _163

  %% Argument types:
  %%    _164 => nonempty_list({'expected', number()} | {'expression', nonempty_list(32..116)} | {'line', 467} | {'module', 'beam_doc_SUITE'} | {'value', 0..288230376151711743})
  %% Unique:
  %%    _164
  _165 = put_tuple `assertEqual`, _164

  %% beam_doc_SUITE.erl:467
  %% Unique:
  %%    _165
  _267 = call (`erlang`:`error`/1), _165

  %% Aliased:
  %%    _267
  _332 = succeeded:body _267
  br ^1

325:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _149 = put_tuple `value`, _148

  %% Argument types:
  %%    _149 => {'value', any()}
  %% Unique:
  %%    _149
  _150 = put_list _149, `[]`

  %% Argument types:
  %%    _150 => nonempty_list({'value', any()})
  %% Unique:
  %%    _150
  _151 = put_list `{expected,"warn_missing_doc.erl"}`, _150

  %% Argument types:
  %%    _151 => nonempty_list({'expected', nonempty_list(46..119)} | {'value', any()})
  %% Unique:
  %%    _151
  _152 = put_list `{expression,"filename : basename ( File )"}`, _151

  %% Argument types:
  %%    _152 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _152
  _153 = put_list `{line,466}`, _152

  %% Argument types:
  %%    _153 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'line', 466} | {'value', any()})
  %% Unique:
  %%    _153
  _154 = put_list `{module,beam_doc_SUITE}`, _153

  %% Argument types:
  %%    _154 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'line', 466} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _154
  _155 = put_tuple `assertEqual`, _154

  %% beam_doc_SUITE.erl:466
  %% Unique:
  %%    _155
  _266 = call (`erlang`:`error`/1), _155

  %% Aliased:
  %%    _266
  _327 = succeeded:body _266
  br ^1

301:
  %% beam_doc_SUITE.erl:459
  %% Aliased:
  %%    _83
  _282 = match_fail `badmatch`, _83

  %% Unique:
  %%    _282
  _412 = succeeded:body _282
  br ^1

292:
  %% beam_doc_SUITE.erl:446
  %% Aliased:
  %%    _86
  _283 = match_fail `badmatch`, _86

  %% Unique:
  %%    _283
  _482 = succeeded:body _283
  br ^1

289:
  %% beam_doc_SUITE.erl:443
  %% Aliased:
  %%    _82
  _284 = match_fail `badmatch`, _82

  %% Unique:
  %%    _284
  _489 = succeeded:body _284
  br ^1

1:
  _285 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _285
}

%% beam_doc_SUITE.erl:501
%% Counter = 288
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`doc_with_file`(_0) {
0:
  %% beam_doc_SUITE.erl:503
  _34 = call (`file`:`get_cwd`/0)

  %% Aliased:
  %%    _34
  _138 = succeeded:body _34
  br _138, ^138, ^1

138:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _279 = is_tagged_tuple _34, `2`, `ok`
  br _279, ^276, ^140

276:
  %% Argument types:
  %%    _34 => {'ok', any()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `1`
  _145 = new_try_tag `'try'`
  br _145, ^144, ^142

144:
  %% beam_doc_SUITE.erl:505
  %% Aliased:
  %%    _0
  _3 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _3
  _146 = succeeded:body _3
  br _146, ^146, ^142

146:
  %% beam_doc_SUITE.erl:505
  %% Aliased:
  %%    _3
  _37 = call (`file`:`set_cwd`/1), _3

  %% Aliased:
  %%    _37
  _147 = succeeded:body _37
  br _147, ^147, ^142

147:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _258 = bif:'=:=' _37, `ok`
  br _258, ^257, ^149

257:
  %% beam_doc_SUITE.erl:506
  %% Aliased:
  %%    _0
  _38 = call (`default_compile_file`/3), _0, `"doc_with_file"`, `[{i,"./folder"}]`

  %% Aliased:
  %%    _38
  _150 = succeeded:body _38
  br _150, ^150, ^142

150:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _253 = is_tagged_tuple _38, `2`, `ok`
  br _253, ^250, ^152

250:
  %% Argument types:
  %%    _38 => {'ok', any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `1`

  %% beam_doc_SUITE.erl:515
  %% Aliased:
  %%    _39
  _41 = call (`code`:`get_doc`/1), _39

  %% Aliased:
  %%    _41
  _153 = succeeded:body _41
  br _153, ^153, ^142

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _246 = is_tagged_tuple _41, `2`, `ok`
  br _246, ^243, ^155

243:
  %% Argument types:
  %%    _41 => {'ok', any()}
  %% Aliased:
  %%    _41
  _42 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _240 = is_tagged_tuple _42, `7`, `docs_v1`
  br _240, ^237, ^155

237:
  %% Argument types:
  %%    _42 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _42
  _46 = get_tuple_element _42, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _236 = bif:is_map _46
  br _236, ^236, ^155

236:
  %% Argument types:
  %%    _46 => map()
  %% Aliased:
  %%    _46
  _51 = get_map_element _46, `<<"en">>`

  %% Aliased:
  %%    _51
  _156 = succeeded:guard _51
  br _156, ^156, ^155

156:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _235 = bif:'=:=' _51, `<<"# README\n\nThis is a test">>`
  br _235, ^235, ^155

235:
  %% Argument types:
  %%    _42 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _42
  _44 = get_tuple_element _42, `6`

  %% Aliased:
  %%    _44
  _234 = is_nonempty_list _44
  br _234, ^234, ^155

234:
  %% Argument types:
  %%    _44 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _44
  _53 = get_hd _44

  %% Argument types:
  %%    _44 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _44
  _52 = get_tl _44

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _231 = bif:is_tuple _53
  br _231, ^231, ^155

231:
  %% Argument types:
  %%    _53 => {...}
  %% Aliased:
  %%    _53
  _232 = bif:tuple_size _53

  %% Argument types:
  %%    _232 => 0..16777215
  %% Unique:
  %%    _232
  _233 = bif:'=:=' _232, `5`
  br _233, ^230, ^155

230:
  %% Argument types:
  %%    _53 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _53
  _58 = get_tuple_element _53, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _229 = bif:'=:=' _58, `{type,bar,1}`
  br _229, ^229, ^155

229:
  %% Argument types:
  %%    _53 => {{'type', 'bar', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _53
  _56 = get_tuple_element _53, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _228 = bif:'=:=' _56, `[<<"bar(X)">>]`
  br _228, ^228, ^155

228:
  %% Argument types:
  %%    _53 => {{'type', 'bar', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _53
  _55 = get_tuple_element _53, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _227 = bif:'=:=' _55, `none`
  br _227, ^226, ^155

226:
  %% Argument types:
  %%    _53 => {{'type', 'bar', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _53
  _54 = get_tuple_element _53, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _225 = bif:is_map _54
  br _225, ^225, ^155

225:
  %% Argument types:
  %%    _54 => map()
  %% Aliased:
  %%    _54
  _59 = get_map_element _54, `exported`

  %% Aliased:
  %%    _59
  _157 = succeeded:guard _59
  br _157, ^157, ^155

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _224 = bif:'=:=' _59, `false`
  br _224, ^223, ^155

223:
  %% Aliased:
  %%    _52
  _222 = is_nonempty_list _52
  br _222, ^222, ^155

222:
  %% Argument types:
  %%    _52 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _52
  _61 = get_hd _52

  %% Argument types:
  %%    _52 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _52
  _60 = get_tl _52

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _219 = bif:is_tuple _61
  br _219, ^219, ^155

219:
  %% Argument types:
  %%    _61 => {...}
  %% Aliased:
  %%    _61
  _220 = bif:tuple_size _61

  %% Argument types:
  %%    _220 => 0..16777215
  %% Unique:
  %%    _220
  _221 = bif:'=:=' _220, `5`
  br _221, ^218, ^155

218:
  %% Argument types:
  %%    _61 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _61
  _66 = get_tuple_element _61, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _217 = bif:'=:=' _66, `{type,foo,1}`
  br _217, ^217, ^155

217:
  %% Argument types:
  %%    _61 => {{'type', 'foo', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _61
  _64 = get_tuple_element _61, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _216 = bif:'=:=' _64, `[<<"foo(X)">>]`
  br _216, ^216, ^155

216:
  %% Argument types:
  %%    _61 => {{'type', 'foo', 1}, any(), nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _61
  _63 = get_tuple_element _61, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _215 = bif:'=:=' _63, `none`
  br _215, ^214, ^155

214:
  %% Argument types:
  %%    _61 => {{'type', 'foo', 1}, any(), nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _61
  _62 = get_tuple_element _61, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62
  _213 = bif:is_map _62
  br _213, ^213, ^155

213:
  %% Argument types:
  %%    _62 => map()
  %% Aliased:
  %%    _62
  _67 = get_map_element _62, `exported`

  %% Aliased:
  %%    _67
  _158 = succeeded:guard _67
  br _158, ^158, ^155

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _212 = bif:'=:=' _67, `true`
  br _212, ^211, ^155

211:
  %% Aliased:
  %%    _60
  _210 = is_nonempty_list _60
  br _210, ^210, ^155

210:
  %% Argument types:
  %%    _60 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _60
  _69 = get_hd _60

  %% Argument types:
  %%    _60 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _60
  _68 = get_tl _60

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _207 = bif:is_tuple _69
  br _207, ^207, ^155

207:
  %% Argument types:
  %%    _69 => {...}
  %% Aliased:
  %%    _69
  _208 = bif:tuple_size _69

  %% Argument types:
  %%    _208 => 0..16777215
  %% Unique:
  %%    _208
  _209 = bif:'=:=' _208, `5`
  br _209, ^206, ^155

206:
  %% Argument types:
  %%    _69 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _69
  _74 = get_tuple_element _69, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _205 = bif:'=:=' _74, `{type,private_type_exported,0}`
  br _205, ^205, ^155

205:
  %% Argument types:
  %%    _69 => {{'type', 'private_type_exported', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _69
  _72 = get_tuple_element _69, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _204 = bif:'=:=' _72, `[<<"private_type_exported()">>]`
  br _204, ^204, ^155

204:
  %% Argument types:
  %%    _69 => {{'type', 'private_type_exported', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _69
  _71 = get_tuple_element _69, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _203 = bif:is_map _71
  br _203, ^203, ^155

203:
  %% Argument types:
  %%    _71 => map()
  %% Aliased:
  %%    _71
  _75 = get_map_element _71, `<<"en">>`

  %% Aliased:
  %%    _75
  _159 = succeeded:guard _75
  br _159, ^159, ^155

159:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _202 = bif:'=:=' _75, `<<"# TYPES\n\nTest">>`
  br _202, ^202, ^155

202:
  %% Argument types:
  %%    _69 => {{'type', 'private_type_exported', 0}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _69
  _70 = get_tuple_element _69, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _201 = bif:is_map _70
  br _201, ^201, ^155

201:
  %% Argument types:
  %%    _70 => map()
  %% Aliased:
  %%    _70
  _76 = get_map_element _70, `exported`

  %% Aliased:
  %%    _76
  _160 = succeeded:guard _76
  br _160, ^160, ^155

160:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _200 = bif:'=:=' _76, `false`
  br _200, ^199, ^155

199:
  %% Aliased:
  %%    _68
  _198 = is_nonempty_list _68
  br _198, ^198, ^155

198:
  %% Argument types:
  %%    _68 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _68
  _78 = get_hd _68

  %% Argument types:
  %%    _68 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _68
  _77 = get_tl _68

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _195 = bif:is_tuple _78
  br _195, ^195, ^155

195:
  %% Argument types:
  %%    _78 => {...}
  %% Aliased:
  %%    _78
  _196 = bif:tuple_size _78

  %% Argument types:
  %%    _196 => 0..16777215
  %% Unique:
  %%    _196
  _197 = bif:'=:=' _196, `5`
  br _197, ^194, ^155

194:
  %% Argument types:
  %%    _78 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _78
  _83 = get_tuple_element _78, `0`

  %% Argument types:
  %%    _78 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _78
  _82 = get_tuple_element _78, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _193 = bif:'=:=' _83, `{function,main2,1}`
  br _193, ^193, ^155

193:
  %% Argument types:
  %%    _78 => {{'function', 'main2', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _78
  _81 = get_tuple_element _78, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _192 = bif:'=:=' _81, `[<<"main2(I)">>]`
  br _192, ^192, ^155

192:
  %% Argument types:
  %%    _78 => {{'function', 'main2', 1}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _78
  _80 = get_tuple_element _78, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _191 = bif:is_map _80
  br _191, ^191, ^155

191:
  %% Argument types:
  %%    _80 => map()
  %% Aliased:
  %%    _80
  _84 = get_map_element _80, `<<"en">>`

  %% Aliased:
  %%    _84
  _161 = succeeded:guard _84
  br _161, ^161, ^155

161:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _190 = bif:'=:=' _84, `<<"# File\n\ntesting fetching docs from other folders">>`
  br _190, ^190, ^155

190:
  %% Argument types:
  %%    _78 => {{'function', 'main2', 1}, any(), nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _78
  _79 = get_tuple_element _78, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _189 = bif:is_map _79
  br _189, ^189, ^155

189:
  %% Aliased:
  %%    _77
  _188 = is_nonempty_list _77
  br _188, ^188, ^155

188:
  %% Argument types:
  %%    _77 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _77
  _86 = get_hd _77

  %% Argument types:
  %%    _77 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _77
  _85 = get_tl _77

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _185 = bif:is_tuple _86
  br _185, ^185, ^155

185:
  %% Argument types:
  %%    _86 => {...}
  %% Aliased:
  %%    _86
  _186 = bif:tuple_size _86

  %% Argument types:
  %%    _186 => 0..16777215
  %% Unique:
  %%    _186
  _187 = bif:'=:=' _186, `5`
  br _187, ^184, ^155

184:
  %% Argument types:
  %%    _86 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _86
  _91 = get_tuple_element _86, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _183 = bif:'=:=' _91, `{function,main,1}`
  br _183, ^183, ^155

183:
  %% Argument types:
  %%    _86 => {{'function', 'main', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _86
  _89 = get_tuple_element _86, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _182 = bif:'=:=' _89, `[<<"main(Var)">>]`
  br _182, ^182, ^155

182:
  %% Argument types:
  %%    _86 => {{'function', 'main', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _86
  _88 = get_tuple_element _86, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _181 = bif:is_map _88
  br _181, ^181, ^155

181:
  %% Argument types:
  %%    _88 => map()
  %% Aliased:
  %%    _88
  _92 = get_map_element _88, `<<"en">>`

  %% Aliased:
  %%    _92
  _162 = succeeded:guard _92
  br _162, ^162, ^155

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _180 = bif:'=:=' _92, `<<"# Fun\n\nTest importing function">>`
  br _180, ^180, ^155

180:
  %% Argument types:
  %%    _86 => {{'function', 'main', 1}, any(), nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _86
  _87 = get_tuple_element _86, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _179 = bif:is_map _87
  br _179, ^179, ^155

179:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _178 = bif:'=:=' _85, `[]`
  br _178, ^178, ^155

178:
  %% Argument types:
  %%    _42 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _42
  _49 = get_tuple_element _42, `1`

  %% beam_doc_SUITE.erl:517
  %% Aliased:
  %%    _49
  _93 = call (`erl_anno`:`line`/1), _49

  %% Aliased:
  %%    _93
  _163 = succeeded:body _93
  br _163, ^163, ^142

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _166 = bif:'=:=' _93, `1`
  br _166, ^164, ^165

164:
  %% beam_doc_SUITE.erl:518
  %% Aliased:
  %%    _82
  _101 = call (`erl_anno`:`line`/1), _82

  %% Aliased:
  %%    _101
  _168 = succeeded:body _101
  br _168, ^168, ^142

168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _171 = bif:'=:=' _101, `1`
  br _171, ^169, ^170

169:
  %% beam_doc_SUITE.erl:519
  %% Aliased:
  %%    _82
  _110 = call (`erl_anno`:`file`/1), _82

  %% Aliased:
  %%    _110
  _173 = succeeded:body _110
  br _173, ^173, ^142

173:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _176 = bif:'=:=' _110, `"./folder/FILE"`
  br _176, ^148, ^175

148:
  %% Unique:
  %%    _145
  _275 = kill_try_tag _145

  %% beam_doc_SUITE.erl:522
  %% Aliased:
  %%    _35
  _119 = call (`file`:`set_cwd`/1), _35

  %% Aliased:
  %%    _119
  _260 = succeeded:body _119
  br _260, ^260, ^1

260:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _119
  _264 = bif:'=:=' _119, `ok`
  br _264, ^263, ^262

263:
  %% Result type:
  %%    'ok'
  ret `ok`

262:
  %% beam_doc_SUITE.erl:504
  %% Aliased:
  %%    _119
  _132 = match_fail `badmatch`, _119

  %% Unique:
  %%    _132
  _265 = succeeded:body _132
  br ^1

175:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _112 = put_tuple `value`, _110

  %% Argument types:
  %%    _112 => {'value', any()}
  %% Unique:
  %%    _112
  _113 = put_list _112, `[]`

  %% Argument types:
  %%    _113 => nonempty_list({'value', any()})
  %% Unique:
  %%    _113
  _114 = put_list `{expected,"./folder/FILE"}`, _113

  %% Argument types:
  %%    _114 => nonempty_list({'expected', nonempty_list(46..114)} | {'value', any()})
  %% Unique:
  %%    _114
  _115 = put_list `{expression,"erl_anno : file ( Main2Anno )"}`, _114

  %% Argument types:
  %%    _115 => nonempty_list({'expected', nonempty_list(46..114)} | {'expression', nonempty_list(32..114)} | {'value', any()})
  %% Unique:
  %%    _115
  _116 = put_list `{line,519}`, _115

  %% Argument types:
  %%    _116 => nonempty_list({'expected', nonempty_list(46..114)} | {'expression', nonempty_list(32..114)} | {'line', 519} | {'value', any()})
  %% Unique:
  %%    _116
  _117 = put_list `{module,beam_doc_SUITE}`, _116

  %% Argument types:
  %%    _117 => nonempty_list({'expected', nonempty_list(46..114)} | {'expression', nonempty_list(32..114)} | {'line', 519} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _117
  _118 = put_tuple `assertEqual`, _117

  %% beam_doc_SUITE.erl:519
  %% Unique:
  %%    _118
  _128 = call (`erlang`:`error`/1), _118

  %% Aliased:
  %%    _128
  _177 = succeeded:body _128
  br ^142

170:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _103 = put_tuple `value`, _101

  %% Argument types:
  %%    _103 => {'value', any()}
  %% Unique:
  %%    _103
  _104 = put_list _103, `[]`

  %% Argument types:
  %%    _104 => nonempty_list({'value', any()})
  %% Unique:
  %%    _104
  _105 = put_list `{expected,1}`, _104

  %% Argument types:
  %%    _105 => nonempty_list({'expected', 1} | {'value', any()})
  %% Unique:
  %%    _105
  _106 = put_list `{expression,"erl_anno : line ( Main2Anno )"}`, _105

  %% Argument types:
  %%    _106 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..114)} | {'value', any()})
  %% Unique:
  %%    _106
  _107 = put_list `{line,518}`, _106

  %% Argument types:
  %%    _107 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..114)} | {'line', 518} | {'value', any()})
  %% Unique:
  %%    _107
  _108 = put_list `{module,beam_doc_SUITE}`, _107

  %% Argument types:
  %%    _108 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..114)} | {'line', 518} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _108
  _109 = put_tuple `assertEqual`, _108

  %% beam_doc_SUITE.erl:518
  %% Unique:
  %%    _109
  _127 = call (`erlang`:`error`/1), _109

  %% Aliased:
  %%    _127
  _172 = succeeded:body _127
  br ^142

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _94 = put_tuple `value`, _93

  %% Argument types:
  %%    _94 => {'value', any()}
  %% Unique:
  %%    _94
  _95 = put_list _94, `[]`

  %% Argument types:
  %%    _95 => nonempty_list({'value', any()})
  %% Unique:
  %%    _95
  _96 = put_list `{expected,1}`, _95

  %% Argument types:
  %%    _96 => nonempty_list({'expected', 1} | {'value', any()})
  %% Unique:
  %%    _96
  _97 = put_list `{expression,"erl_anno : line ( ModuleAnno )"}`, _96

  %% Argument types:
  %%    _97 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..117)} | {'value', any()})
  %% Unique:
  %%    _97
  _98 = put_list `{line,517}`, _97

  %% Argument types:
  %%    _98 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..117)} | {'line', 517} | {'value', any()})
  %% Unique:
  %%    _98
  _99 = put_list `{module,beam_doc_SUITE}`, _98

  %% Argument types:
  %%    _99 => nonempty_list({'expected', 1} | {'expression', nonempty_list(32..117)} | {'line', 517} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _99
  _100 = put_tuple `assertEqual`, _99

  %% beam_doc_SUITE.erl:517
  %% Unique:
  %%    _100
  _126 = call (`erlang`:`error`/1), _100

  %% Aliased:
  %%    _126
  _167 = succeeded:body _126
  br ^142

155:
  %% beam_doc_SUITE.erl:507
  %% Aliased:
  %%    _41
  _129 = match_fail `badmatch`, _41

  %% Unique:
  %%    _129
  _249 = succeeded:body _129
  br ^142

152:
  %% beam_doc_SUITE.erl:506
  %% Aliased:
  %%    _38
  _130 = match_fail `badmatch`, _38

  %% Unique:
  %%    _130
  _256 = succeeded:body _130
  br ^142

149:
  %% beam_doc_SUITE.erl:505
  %% Aliased:
  %%    _37
  _131 = match_fail `badmatch`, _37

  %% Unique:
  %%    _131
  _259 = succeeded:body _131
  br ^142

142:
  %% Unique:
  %%    _145
  _273 = landingpad `'try'`, _145

  %% Aliased:
  %%    _273
  _21 = extract _273, `1`

  %% Aliased:
  %%    _273
  _20 = extract _273, `2`

  %% Unique:
  %%    _145
  _274 = kill_try_tag _145
  br ^287

287:
  %% beam_doc_SUITE.erl:522
  %% Aliased:
  %%    _35
  _120 = call (`file`:`set_cwd`/1), _35

  %% Aliased:
  %%    _120
  _266 = succeeded:body _120
  br _266, ^266, ^1

266:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _271 = bif:'=:=' _120, `ok`
  br _271, ^270, ^268

270:
  %% Aliased:
  %%    _20, 
  %%    _21
  _133 = resume _20, _21

  %% Unique:
  %%    _133
  _269 = succeeded:body _133
  br ^1

268:
  %% beam_doc_SUITE.erl:504
  %% Aliased:
  %%    _120
  _134 = match_fail `badmatch`, _120

  %% Unique:
  %%    _134
  _272 = succeeded:body _134
  br ^1

140:
  %% beam_doc_SUITE.erl:503
  %% Aliased:
  %%    _34
  _135 = match_fail `badmatch`, _34

  %% Unique:
  %%    _135
  _282 = succeeded:body _135
  br ^1

1:
  _136 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _136
}

%% beam_doc_SUITE.erl:525
%% Counter = 73
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`doc_with_file_error`(_0) {
0:
  %% beam_doc_SUITE.erl:527
  %% Aliased:
  %%    _0
  _12 = call (`default_compile_file`/3), _0, `"doc_with_file_error"`, `[return_warnings]`

  %% Aliased:
  %%    _12
  _37 = succeeded:body _12
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _68 = is_tagged_tuple _12, `3`, `ok`
  br _68, ^65, ^39

65:
  %% Argument types:
  %%    _12 => {'ok', any(), any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `2`

  %% Aliased:
  %%    _13
  _63 = is_nonempty_list _13
  br _63, ^63, ^41

63:
  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _17 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _16 = get_tl _13

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _60 = bif:is_tuple _17
  br _60, ^60, ^41

60:
  %% Argument types:
  %%    _17 => {...}
  %% Aliased:
  %%    _17
  _61 = bif:tuple_size _17

  %% Argument types:
  %%    _61 => 0..16777215
  %% Unique:
  %%    _61
  _62 = bif:'=:=' _61, `2`
  br _62, ^59, ^41

59:
  %% Argument types:
  %%    _17 => {any(), any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _58 = bif:'=:=' _18, `[{{6,2},epp,{moduledoc,file,"doesnotexist"}},
  {{8,2},epp,{doc,file,"doesnotexist"}},
  {{11,2},epp,{doc,file,"doesnotexist"}}]`
  br _58, ^58, ^41

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _57 = bif:'=:=' _16, `[]`
  br _57, ^57, ^41

57:
  %% Argument types:
  %%    _17 => {any(), nonempty_list({{6, 2}, 'epp', {'moduledoc', 'file', nonempty_list(100..120)}} | {{8, 2}, 'epp', {'doc', 'file', nonempty_list(100..120)}} | {{11, 2}, 'epp', {'doc', 'file', nonempty_list(100..120)}})}
  %% Aliased:
  %%    _17
  _19 = get_tuple_element _17, `0`

  %% beam_doc_SUITE.erl:534
  %% Aliased:
  %%    _19
  _20 = call (`filename`:`basename`/1), _19

  %% Aliased:
  %%    _20
  _42 = succeeded:body _20
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _45 = bif:'=:=' _20, `"doc_with_file_error.erl"`
  br _45, ^43, ^44

43:
  %% beam_doc_SUITE.erl:536
  %% Aliased:
  %%    _0
  _28 = call (`default_compile_file`/3), _0, `"doc_with_file_error"`, `[report]`

  %% Aliased:
  %%    _28
  _47 = succeeded:body _28
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _53 = is_tagged_tuple _28, `2`, `ok`
  br _53, ^50, ^49

50:
  %% Result type:
  %%    'ok'
  ret `ok`

49:
  %% beam_doc_SUITE.erl:536
  %% Aliased:
  %%    _28
  _32 = match_fail `badmatch`, _28

  %% Unique:
  %%    _32
  _56 = succeeded:body _32
  br ^1

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _21 = put_tuple `value`, _20

  %% Argument types:
  %%    _21 => {'value', any()}
  %% Unique:
  %%    _21
  _22 = put_list _21, `[]`

  %% Argument types:
  %%    _22 => nonempty_list({'value', any()})
  %% Unique:
  %%    _22
  _23 = put_list `{expected,"doc_with_file_error.erl"}`, _22

  %% Argument types:
  %%    _23 => nonempty_list({'expected', nonempty_list(46..119)} | {'value', any()})
  %% Unique:
  %%    _23
  _24 = put_list `{expression,"filename : basename ( File )"}`, _23

  %% Argument types:
  %%    _24 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'value', any()})
  %% Unique:
  %%    _24
  _25 = put_list `{line,534}`, _24

  %% Argument types:
  %%    _25 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'line', 534} | {'value', any()})
  %% Unique:
  %%    _25
  _26 = put_list `{module,beam_doc_SUITE}`, _25

  %% Argument types:
  %%    _26 => nonempty_list({'expected', nonempty_list(46..119)} | {'expression', nonempty_list(32..115)} | {'line', 534} | {'module', 'beam_doc_SUITE'} | {'value', any()})
  %% Unique:
  %%    _26
  _27 = put_tuple `assertEqual`, _26

  %% beam_doc_SUITE.erl:534
  %% Unique:
  %%    _27
  _31 = call (`erlang`:`error`/1), _27

  %% Aliased:
  %%    _31
  _46 = succeeded:body _31
  br ^1

41:
  %% beam_doc_SUITE.erl:529
  %% Aliased:
  %%    _13
  _33 = match_fail `badmatch`, _13

  %% Unique:
  %%    _33
  _64 = succeeded:body _33
  br ^1

39:
  %% beam_doc_SUITE.erl:527
  %% Aliased:
  %%    _12
  _34 = match_fail `badmatch`, _12

  %% Unique:
  %%    _34
  _71 = succeeded:body _34
  br ^1

1:
  _35 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _35
}

%% beam_doc_SUITE.erl:540
%% Counter = 176
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`all_string_formats`(_0) {
0:
  %% beam_doc_SUITE.erl:542
  %% Aliased:
  %%    _0
  _20 = call (`default_compile_file`/2), _0, `"all_string_formats"`

  %% Aliased:
  %%    _20
  _86 = succeeded:body _20
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _172 = is_tagged_tuple _20, `2`, `ok`
  br _172, ^169, ^88

169:
  %% Argument types:
  %%    _20 => {'ok', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% beam_doc_SUITE.erl:552
  %% Aliased:
  %%    _21
  _23 = call (`code`:`get_doc`/1), _21

  %% Aliased:
  %%    _23
  _89 = succeeded:body _23
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _165 = is_tagged_tuple _23, `2`, `ok`
  br _165, ^162, ^91

162:
  %% Argument types:
  %%    _23 => {'ok', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _159 = is_tagged_tuple _24, `7`, `docs_v1`
  br _159, ^156, ^91

156:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _24
  _28 = get_tuple_element _24, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _155 = bif:is_map _28
  br _155, ^155, ^91

155:
  %% Argument types:
  %%    _28 => map()
  %% Aliased:
  %%    _28
  _33 = get_map_element _28, `<<"en">>`

  %% Aliased:
  %%    _33
  _92 = succeeded:guard _33
  br _92, ^92, ^91

92:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _154 = bif:'=:=' _33, `<<"Moduledoc test module">>`
  br _154, ^154, ^91

154:
  %% Argument types:
  %%    _24 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `6`

  %% Aliased:
  %%    _26
  _153 = is_nonempty_list _26
  br _153, ^153, ^91

153:
  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _35 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _34 = get_tl _26

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _150 = bif:is_tuple _35
  br _150, ^150, ^91

150:
  %% Argument types:
  %%    _35 => {...}
  %% Aliased:
  %%    _35
  _151 = bif:tuple_size _35

  %% Argument types:
  %%    _151 => 0..16777215
  %% Unique:
  %%    _151
  _152 = bif:'=:=' _151, `5`
  br _152, ^149, ^91

149:
  %% Argument types:
  %%    _35 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _35
  _40 = get_tuple_element _35, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _148 = bif:'=:=' _40, `{function,six,0}`
  br _148, ^148, ^91

148:
  %% Argument types:
  %%    _35 => {{'function', 'six', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _35
  _37 = get_tuple_element _35, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _147 = bif:is_map _37
  br _147, ^147, ^91

147:
  %% Argument types:
  %%    _37 => map()
  %% Aliased:
  %%    _37
  _41 = get_map_element _37, `<<"en">>`

  %% Aliased:
  %%    _41
  _93 = succeeded:guard _41
  br _93, ^93, ^91

93:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _146 = bif:'=:=' _41, `<<"all_string_formats-all_string_formats">>`
  br _146, ^146, ^91

146:
  %% Argument types:
  %%    _35 => {{'function', 'six', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _35
  _36 = get_tuple_element _35, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _145 = bif:is_map _36
  br _145, ^145, ^91

145:
  %% Aliased:
  %%    _34
  _144 = is_nonempty_list _34
  br _144, ^144, ^91

144:
  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _43 = get_hd _34

  %% Argument types:
  %%    _34 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _34
  _42 = get_tl _34

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _141 = bif:is_tuple _43
  br _141, ^141, ^91

141:
  %% Argument types:
  %%    _43 => {...}
  %% Aliased:
  %%    _43
  _142 = bif:tuple_size _43

  %% Argument types:
  %%    _142 => 0..16777215
  %% Unique:
  %%    _142
  _143 = bif:'=:=' _142, `5`
  br _143, ^140, ^91

140:
  %% Argument types:
  %%    _43 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _43
  _48 = get_tuple_element _43, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _139 = bif:'=:=' _48, `{function,five,0}`
  br _139, ^139, ^91

139:
  %% Argument types:
  %%    _43 => {{'function', 'five', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _43
  _45 = get_tuple_element _43, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _138 = bif:is_map _45
  br _138, ^138, ^91

138:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _49 = get_map_element _45, `<<"en">>`

  %% Aliased:
  %%    _49
  _94 = succeeded:guard _49
  br _94, ^94, ^91

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _137 = bif:'=:=' _49, `<<"all_string_formats-Doc module">>`
  br _137, ^137, ^91

137:
  %% Argument types:
  %%    _43 => {{'function', 'five', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _43
  _44 = get_tuple_element _43, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _136 = bif:is_map _44
  br _136, ^136, ^91

136:
  %% Aliased:
  %%    _42
  _135 = is_nonempty_list _42
  br _135, ^135, ^91

135:
  %% Argument types:
  %%    _42 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _42
  _51 = get_hd _42

  %% Argument types:
  %%    _42 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _42
  _50 = get_tl _42

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _132 = bif:is_tuple _51
  br _132, ^132, ^91

132:
  %% Argument types:
  %%    _51 => {...}
  %% Aliased:
  %%    _51
  _133 = bif:tuple_size _51

  %% Argument types:
  %%    _133 => 0..16777215
  %% Unique:
  %%    _133
  _134 = bif:'=:=' _133, `5`
  br _134, ^131, ^91

131:
  %% Argument types:
  %%    _51 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _51
  _56 = get_tuple_element _51, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _130 = bif:'=:=' _56, `{function,four,0}`
  br _130, ^130, ^91

130:
  %% Argument types:
  %%    _51 => {{'function', 'four', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _51
  _53 = get_tuple_element _51, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _129 = bif:is_map _53
  br _129, ^129, ^91

129:
  %% Argument types:
  %%    _53 => map()
  %% Aliased:
  %%    _53
  _57 = get_map_element _53, `<<"en">>`

  %% Aliased:
  %%    _57
  _95 = succeeded:guard _57
  br _95, ^95, ^91

95:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _128 = bif:'=:=' _57, `<<"Doc test mÃ¶dule">>`
  br _128, ^128, ^91

128:
  %% Argument types:
  %%    _51 => {{'function', 'four', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _51
  _52 = get_tuple_element _51, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _127 = bif:is_map _52
  br _127, ^127, ^91

127:
  %% Aliased:
  %%    _50
  _126 = is_nonempty_list _50
  br _126, ^126, ^91

126:
  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _59 = get_hd _50

  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _58 = get_tl _50

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _123 = bif:is_tuple _59
  br _123, ^123, ^91

123:
  %% Argument types:
  %%    _59 => {...}
  %% Aliased:
  %%    _59
  _124 = bif:tuple_size _59

  %% Argument types:
  %%    _124 => 0..16777215
  %% Unique:
  %%    _124
  _125 = bif:'=:=' _124, `5`
  br _125, ^122, ^91

122:
  %% Argument types:
  %%    _59 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _64 = get_tuple_element _59, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _121 = bif:'=:=' _64, `{function,three,0}`
  br _121, ^121, ^91

121:
  %% Argument types:
  %%    _59 => {{'function', 'three', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _61 = get_tuple_element _59, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _120 = bif:is_map _61
  br _120, ^120, ^91

120:
  %% Argument types:
  %%    _61 => map()
  %% Aliased:
  %%    _61
  _65 = get_map_element _61, `<<"en">>`

  %% Aliased:
  %%    _65
  _96 = succeeded:guard _65
  br _96, ^96, ^91

96:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _119 = bif:'=:=' _65, `<<"Doctestmodule">>`
  br _119, ^119, ^91

119:
  %% Argument types:
  %%    _59 => {{'function', 'three', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _118 = bif:is_map _60
  br _118, ^118, ^91

118:
  %% Aliased:
  %%    _58
  _117 = is_nonempty_list _58
  br _117, ^117, ^91

117:
  %% Argument types:
  %%    _58 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _58
  _67 = get_hd _58

  %% Argument types:
  %%    _58 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _58
  _66 = get_tl _58

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _114 = bif:is_tuple _67
  br _114, ^114, ^91

114:
  %% Argument types:
  %%    _67 => {...}
  %% Aliased:
  %%    _67
  _115 = bif:tuple_size _67

  %% Argument types:
  %%    _115 => 0..16777215
  %% Unique:
  %%    _115
  _116 = bif:'=:=' _115, `5`
  br _116, ^113, ^91

113:
  %% Argument types:
  %%    _67 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _67
  _72 = get_tuple_element _67, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _112 = bif:'=:=' _72, `{function,two,0}`
  br _112, ^112, ^91

112:
  %% Argument types:
  %%    _67 => {{'function', 'two', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _67
  _69 = get_tuple_element _67, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _111 = bif:is_map _69
  br _111, ^111, ^91

111:
  %% Argument types:
  %%    _69 => map()
  %% Aliased:
  %%    _69
  _73 = get_map_element _69, `<<"en">>`

  %% Aliased:
  %%    _73
  _97 = succeeded:guard _73
  br _97, ^97, ^91

97:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _110 = bif:'=:=' _73, `<<"Doc test module">>`
  br _110, ^110, ^91

110:
  %% Argument types:
  %%    _67 => {{'function', 'two', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _67
  _68 = get_tuple_element _67, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _109 = bif:is_map _68
  br _109, ^109, ^91

109:
  %% Aliased:
  %%    _66
  _108 = is_nonempty_list _66
  br _108, ^108, ^91

108:
  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _75 = get_hd _66

  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _74 = get_tl _66

  %% Argument types:
  %%    
  %% Aliased:
  %%    _75
  _105 = bif:is_tuple _75
  br _105, ^105, ^91

105:
  %% Argument types:
  %%    _75 => {...}
  %% Aliased:
  %%    _75
  _106 = bif:tuple_size _75

  %% Argument types:
  %%    _106 => 0..16777215
  %% Unique:
  %%    _106
  _107 = bif:'=:=' _106, `5`
  br _107, ^104, ^91

104:
  %% Argument types:
  %%    _75 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _75
  _80 = get_tuple_element _75, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _103 = bif:'=:=' _80, `{function,one,0}`
  br _103, ^103, ^91

103:
  %% Argument types:
  %%    _75 => {{'function', 'one', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _75
  _77 = get_tuple_element _75, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _102 = bif:is_map _77
  br _102, ^102, ^91

102:
  %% Argument types:
  %%    _77 => map()
  %% Aliased:
  %%    _77
  _81 = get_map_element _77, `<<"en">>`

  %% Aliased:
  %%    _81
  _98 = succeeded:guard _81
  br _98, ^98, ^91

98:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _101 = bif:'=:=' _81, `<<"Doc test module">>`
  br _101, ^101, ^91

101:
  %% Argument types:
  %%    _75 => {{'function', 'one', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _75
  _76 = get_tuple_element _75, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _100 = bif:is_map _76
  br _100, ^100, ^91

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _99 = bif:'=:=' _74, `[]`
  br _99, ^99, ^91

99:
  %% Result type:
  %%    'ok'
  ret `ok`

91:
  %% beam_doc_SUITE.erl:544
  %% Aliased:
  %%    _23
  _82 = match_fail `badmatch`, _23

  %% Unique:
  %%    _82
  _168 = succeeded:body _82
  br ^1

88:
  %% beam_doc_SUITE.erl:542
  %% Aliased:
  %%    _20
  _83 = match_fail `badmatch`, _20

  %% Unique:
  %%    _83
  _175 = succeeded:body _83
  br ^1

1:
  _84 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _84
}

%% beam_doc_SUITE.erl:555
%% Counter = 147
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`spec_switch_order`(_0) {
0:
  %% beam_doc_SUITE.erl:557
  %% Aliased:
  %%    _0
  _13 = call (`default_compile_file`/2), _0, `"spec_switch_order"`

  %% Aliased:
  %%    _13
  _63 = succeeded:body _13
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _143 = is_tagged_tuple _13, `2`, `ok`
  br _143, ^140, ^65

140:
  %% Argument types:
  %%    _13 => {'ok', any()}
  %% Aliased:
  %%    _13
  _14 = get_tuple_element _13, `1`

  %% beam_doc_SUITE.erl:560
  %% Aliased:
  %%    _14
  _16 = call (`code`:`get_doc`/1), _14

  %% Aliased:
  %%    _16
  _66 = succeeded:body _16
  br _66, ^66, ^1

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _136 = is_tagged_tuple _16, `2`, `ok`
  br _136, ^133, ^68

133:
  %% Argument types:
  %%    _16 => {'ok', any()}
  %% Aliased:
  %%    _16
  _17 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _130 = is_tagged_tuple _17, `7`, `docs_v1`
  br _130, ^127, ^68

127:
  %% Argument types:
  %%    _17 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _17
  _19 = get_tuple_element _17, `6`

  %% Aliased:
  %%    _19
  _126 = is_nonempty_list _19
  br _126, ^126, ^68

126:
  %% Argument types:
  %%    _19 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _19
  _27 = get_hd _19

  %% Argument types:
  %%    _19 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _19
  _26 = get_tl _19

  %% Aliased:
  %%    _26
  _125 = is_nonempty_list _26
  br _125, ^125, ^68

125:
  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _29 = get_hd _26

  %% Argument types:
  %%    _26 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _26
  _28 = get_tl _26

  %% Aliased:
  %%    _28
  _124 = is_nonempty_list _28
  br _124, ^124, ^68

124:
  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _31 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _28
  _30 = get_tl _28

  %% Aliased:
  %%    _30
  _123 = is_nonempty_list _30
  br _123, ^123, ^68

123:
  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _33 = get_hd _30

  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _32 = get_tl _30

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _122 = bif:'=:=' _32, `[]`
  br _122, ^122, ^68

122:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _118 = bif:is_tuple _27
  br _118, ^118, ^70

118:
  %% Argument types:
  %%    _27 => {...}
  %% Aliased:
  %%    _27
  _119 = bif:tuple_size _27

  %% Argument types:
  %%    _119 => 0..16777215
  %% Unique:
  %%    _119
  _120 = bif:'=:=' _119, `5`
  br _120, ^117, ^70

117:
  %% Argument types:
  %%    _27 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _27
  _38 = get_tuple_element _27, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _116 = bif:'=:=' _38, `{function,not_false,0}`
  br _116, ^116, ^70

116:
  %% Argument types:
  %%    _27 => {{'function', 'not_false', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _27
  _37 = get_tuple_element _27, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _115 = bif:'=:=' _37, `{52,1}`
  br _115, ^115, ^70

115:
  %% Argument types:
  %%    _27 => {{'function', 'not_false', 0}, {52, 1}, any(), any(), any()}
  %% Aliased:
  %%    _27
  _36 = get_tuple_element _27, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _114 = bif:'=:=' _36, `[<<"not_false()">>]`
  br _114, ^114, ^70

114:
  %% Argument types:
  %%    _27 => {{'function', 'not_false', 0}, {52, 1}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _27
  _35 = get_tuple_element _27, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _113 = bif:'=:=' _35, `none`
  br _113, ^112, ^70

112:
  %% Argument types:
  %%    _27 => {{'function', 'not_false', 0}, {52, 1}, nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _27
  _34 = get_tuple_element _27, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _111 = bif:is_map _34
  br _111, ^111, ^70

111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _107 = bif:is_tuple _29
  br _107, ^107, ^72

107:
  %% Argument types:
  %%    _29 => {...}
  %% Aliased:
  %%    _29
  _108 = bif:tuple_size _29

  %% Argument types:
  %%    _108 => 0..16777215
  %% Unique:
  %%    _108
  _109 = bif:'=:=' _108, `5`
  br _109, ^106, ^72

106:
  %% Argument types:
  %%    _29 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _29
  _43 = get_tuple_element _29, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _105 = bif:'=:=' _43, `{function,other,0}`
  br _105, ^105, ^72

105:
  %% Argument types:
  %%    _29 => {{'function', 'other', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _29
  _42 = get_tuple_element _29, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _42
  _104 = bif:'=:=' _42, `{36,2}`
  br _104, ^104, ^72

104:
  %% Argument types:
  %%    _29 => {{'function', 'other', 0}, {36, 2}, any(), any(), any()}
  %% Aliased:
  %%    _29
  _41 = get_tuple_element _29, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _103 = bif:'=:=' _41, `[<<"other()">>]`
  br _103, ^103, ^72

103:
  %% Argument types:
  %%    _29 => {{'function', 'other', 0}, {36, 2}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _29
  _40 = get_tuple_element _29, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _102 = bif:'=:=' _40, `hidden`
  br _102, ^101, ^72

101:
  %% Argument types:
  %%    _29 => {{'function', 'other', 0}, {36, 2}, nonempty_list(bitstring(8)), 'hidden', any()}
  %% Aliased:
  %%    _29
  _39 = get_tuple_element _29, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _100 = bif:is_map _39
  br _100, ^100, ^72

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _96 = bif:is_tuple _31
  br _96, ^96, ^74

96:
  %% Argument types:
  %%    _31 => {...}
  %% Aliased:
  %%    _31
  _97 = bif:tuple_size _31

  %% Argument types:
  %%    _97 => 0..16777215
  %% Unique:
  %%    _97
  _98 = bif:'=:=' _97, `5`
  br _98, ^95, ^74

95:
  %% Argument types:
  %%    _31 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _31
  _48 = get_tuple_element _31, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _94 = bif:'=:=' _48, `{function,bar,1}`
  br _94, ^94, ^74

94:
  %% Argument types:
  %%    _31 => {{'function', 'bar', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _31
  _47 = get_tuple_element _31, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _93 = bif:'=:=' _47, `{30,2}`
  br _93, ^93, ^74

93:
  %% Argument types:
  %%    _31 => {{'function', 'bar', 1}, {30, 2}, any(), any(), any()}
  %% Aliased:
  %%    _31
  _46 = get_tuple_element _31, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _92 = bif:'=:=' _46, `[<<"bar(X)">>]`
  br _92, ^92, ^74

92:
  %% Argument types:
  %%    _31 => {{'function', 'bar', 1}, {30, 2}, nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _31
  _45 = get_tuple_element _31, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _91 = bif:'=:=' _45, `hidden`
  br _91, ^90, ^74

90:
  %% Argument types:
  %%    _31 => {{'function', 'bar', 1}, {30, 2}, nonempty_list(bitstring(16)), 'hidden', any()}
  %% Aliased:
  %%    _31
  _44 = get_tuple_element _31, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _89 = bif:is_map _44
  br _89, ^89, ^74

89:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _85 = bif:is_tuple _33
  br _85, ^85, ^76

85:
  %% Argument types:
  %%    _33 => {...}
  %% Aliased:
  %%    _33
  _86 = bif:tuple_size _33

  %% Argument types:
  %%    _86 => 0..16777215
  %% Unique:
  %%    _86
  _87 = bif:'=:=' _86, `5`
  br _87, ^84, ^76

84:
  %% Argument types:
  %%    _33 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _33
  _53 = get_tuple_element _33, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _83 = bif:'=:=' _53, `{function,foo,1}`
  br _83, ^83, ^76

83:
  %% Argument types:
  %%    _33 => {{'function', 'foo', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _33
  _52 = get_tuple_element _33, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _82 = bif:'=:=' _52, `{22,2}`
  br _82, ^82, ^76

82:
  %% Argument types:
  %%    _33 => {{'function', 'foo', 1}, {22, 2}, any(), any(), any()}
  %% Aliased:
  %%    _33
  _51 = get_tuple_element _33, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _81 = bif:'=:=' _51, `[<<"foo(Var)">>]`
  br _81, ^81, ^76

81:
  %% Argument types:
  %%    _33 => {{'function', 'foo', 1}, {22, 2}, nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _33
  _50 = get_tuple_element _33, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _80 = bif:is_map _50
  br _80, ^80, ^76

80:
  %% Argument types:
  %%    _50 => map()
  %% Aliased:
  %%    _50
  _54 = get_map_element _50, `<<"en">>`

  %% Aliased:
  %%    _54
  _77 = succeeded:guard _54
  br _77, ^77, ^76

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _79 = bif:'=:=' _54, `<<"Foo does X">>`
  br _79, ^79, ^76

79:
  %% Argument types:
  %%    _33 => {{'function', 'foo', 1}, {22, 2}, nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _33
  _49 = get_tuple_element _33, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _78 = bif:is_map _49
  br _78, ^78, ^76

78:
  %% Result type:
  %%    {{'function', 'foo', 1}, {22, 2}, nonempty_list(bitstring(64)), any(), any()}
  %% Aliased:
  %%    _33
  ret _33

76:
  %% beam_doc_SUITE.erl:564
  %% Aliased:
  %%    _33
  _55 = match_fail `badmatch`, _33

  %% Unique:
  %%    _55
  _88 = succeeded:body _55
  br ^1

74:
  %% beam_doc_SUITE.erl:563
  %% Aliased:
  %%    _31
  _56 = match_fail `badmatch`, _31

  %% Unique:
  %%    _56
  _99 = succeeded:body _56
  br ^1

72:
  %% beam_doc_SUITE.erl:562
  %% Aliased:
  %%    _29
  _57 = match_fail `badmatch`, _29

  %% Unique:
  %%    _57
  _110 = succeeded:body _57
  br ^1

70:
  %% beam_doc_SUITE.erl:561
  %% Aliased:
  %%    _27
  _58 = match_fail `badmatch`, _27

  %% Unique:
  %%    _58
  _121 = succeeded:body _58
  br ^1

68:
  %% beam_doc_SUITE.erl:559
  %% Aliased:
  %%    _16
  _59 = match_fail `badmatch`, _16

  %% Unique:
  %%    _59
  _139 = succeeded:body _59
  br ^1

65:
  %% beam_doc_SUITE.erl:557
  %% Aliased:
  %%    _13
  _60 = match_fail `badmatch`, _13

  %% Unique:
  %%    _60
  _146 = succeeded:body _60
  br ^1

1:
  _61 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _61
}

%% beam_doc_SUITE.erl:566
%% Counter = 130
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`skip_doc`(_0) {
0:
  %% beam_doc_SUITE.erl:568
  %% Aliased:
  %%    _0
  _7 = call (`default_compile_file`/3), _0, `"skip_doc"`, `[no_docs]`

  %% Aliased:
  %%    _7
  _48 = succeeded:body _7
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _126 = is_tagged_tuple _7, `2`, `ok`
  br _126, ^123, ^50

123:
  %% Argument types:
  %%    _7 => {'ok', any()}
  %% Aliased:
  %%    _7
  _8 = get_tuple_element _7, `1`

  %% beam_doc_SUITE.erl:574
  %% Aliased:
  %%    _8
  _10 = call (`code`:`get_doc`/1), _8

  %% Aliased:
  %%    _10
  _51 = succeeded:body _10
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _119 = is_tagged_tuple _10, `2`, `ok`
  br _119, ^116, ^53

116:
  %% Argument types:
  %%    _10 => {'ok', any()}
  %% Aliased:
  %%    _10
  _11 = get_tuple_element _10, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _113 = is_tagged_tuple _11, `7`, `docs_v1`
  br _113, ^110, ^53

110:
  %% Argument types:
  %%    _11 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _11
  _18 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _109 = bif:'=:=' _18, `0`
  br _109, ^108, ^53

108:
  %% Argument types:
  %%    _11 => {'docs_v1', 0, any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _11
  _17 = get_tuple_element _11, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _107 = bif:'=:=' _17, `erlang`
  br _107, ^106, ^53

106:
  %% Argument types:
  %%    _11 => {'docs_v1', 0, 'erlang', any(), any(), any(), any()}
  %% Aliased:
  %%    _11
  _16 = get_tuple_element _11, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _105 = bif:'=:=' _16, `<<"application/erlang+html">>`
  br _105, ^105, ^53

105:
  %% Argument types:
  %%    _11 => {'docs_v1', 0, 'erlang', bitstring(8), any(), any(), any()}
  %% Aliased:
  %%    _11
  _15 = get_tuple_element _11, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _104 = bif:'=:=' _15, `none`
  br _104, ^103, ^53

103:
  %% Argument types:
  %%    _11 => {'docs_v1', 0, 'erlang', bitstring(8), 'none', any(), any()}
  %% Aliased:
  %%    _11
  _14 = get_tuple_element _11, `5`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _102 = bif:is_map _14
  br _102, ^102, ^53

102:
  %% Argument types:
  %%    _14 => map()
  %% Aliased:
  %%    _14
  _21 = get_map_element _14, `generated`

  %% Aliased:
  %%    _21
  _54 = succeeded:guard _21
  br _54, ^54, ^53

54:
  %% Argument types:
  %%    _14 => map()
  %% Aliased:
  %%    _14
  _20 = get_map_element _14, `otp_doc_vsn`

  %% Aliased:
  %%    _20
  _55 = succeeded:guard _20
  br _55, ^55, ^53

55:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _101 = bif:'=:=' _21, `true`
  br _101, ^100, ^53

100:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _99 = bif:'=:=' _20, `{1,0,0}`
  br _99, ^99, ^53

99:
  %% Argument types:
  %%    _11 => {'docs_v1', 0, 'erlang', bitstring(8), 'none', any(), any()}
  %% Aliased:
  %%    _11
  _13 = get_tuple_element _11, `6`

  %% Aliased:
  %%    _13
  _98 = is_nonempty_list _13
  br _98, ^98, ^53

98:
  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _23 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _22 = get_tl _13

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _95 = bif:is_tuple _23
  br _95, ^95, ^53

95:
  %% Argument types:
  %%    _23 => {...}
  %% Aliased:
  %%    _23
  _96 = bif:tuple_size _23

  %% Argument types:
  %%    _96 => 0..16777215
  %% Unique:
  %%    _96
  _97 = bif:'=:=' _96, `5`
  br _97, ^94, ^53

94:
  %% Argument types:
  %%    _23 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _23
  _28 = get_tuple_element _23, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _93 = bif:'=:=' _28, `{function,main,0}`
  br _93, ^93, ^53

93:
  %% Argument types:
  %%    _23 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _23
  _27 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _92 = bif:'=:=' _27, `{8,1}`
  br _92, ^92, ^53

92:
  %% Argument types:
  %%    _23 => {{'function', 'main', 0}, {8, 1}, any(), any(), any()}
  %% Aliased:
  %%    _23
  _26 = get_tuple_element _23, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _91 = bif:'=:=' _26, `[<<"main/0">>]`
  br _91, ^91, ^53

91:
  %% Argument types:
  %%    _23 => {{'function', 'main', 0}, {8, 1}, nonempty_list(bitstring(16)), any(), any()}
  %% Aliased:
  %%    _23
  _25 = get_tuple_element _23, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _90 = bif:'=:=' _25, `none`
  br _90, ^89, ^53

89:
  %% Argument types:
  %%    _23 => {{'function', 'main', 0}, {8, 1}, nonempty_list(bitstring(16)), 'none', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _88 = bif:is_map _24
  br _88, ^88, ^53

88:
  %% Aliased:
  %%    _22
  _87 = is_nonempty_list _22
  br _87, ^87, ^53

87:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _30 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _29 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _84 = bif:is_tuple _30
  br _84, ^84, ^53

84:
  %% Argument types:
  %%    _30 => {...}
  %% Aliased:
  %%    _30
  _85 = bif:tuple_size _30

  %% Argument types:
  %%    _85 => 0..16777215
  %% Unique:
  %%    _85
  _86 = bif:'=:=' _85, `5`
  br _86, ^83, ^53

83:
  %% Argument types:
  %%    _30 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _30
  _35 = get_tuple_element _30, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _82 = bif:'=:=' _35, `{function,foo,1}`
  br _82, ^82, ^53

82:
  %% Argument types:
  %%    _30 => {{'function', 'foo', 1}, any(), any(), any(), any()}
  %% Aliased:
  %%    _30
  _34 = get_tuple_element _30, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _81 = bif:'=:=' _34, `{16,1}`
  br _81, ^81, ^53

81:
  %% Argument types:
  %%    _30 => {{'function', 'foo', 1}, {16, 1}, any(), any(), any()}
  %% Aliased:
  %%    _30
  _33 = get_tuple_element _30, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _80 = bif:'=:=' _33, `[<<"foo/1">>]`
  br _80, ^80, ^53

80:
  %% Argument types:
  %%    _30 => {{'function', 'foo', 1}, {16, 1}, nonempty_list(bitstring(8)), any(), any()}
  %% Aliased:
  %%    _30
  _32 = get_tuple_element _30, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _79 = bif:'=:=' _32, `none`
  br _79, ^78, ^53

78:
  %% Argument types:
  %%    _30 => {{'function', 'foo', 1}, {16, 1}, nonempty_list(bitstring(8)), 'none', any()}
  %% Aliased:
  %%    _30
  _31 = get_tuple_element _30, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _77 = bif:is_map _31
  br _77, ^77, ^53

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _76 = bif:'=:=' _29, `[]`
  br _76, ^76, ^53

76:
  %% beam_doc_SUITE.erl:577
  %% Aliased:
  %%    _8
  _36 = call (`code`:`get_doc`/2), _8, `#{sources => [eep48]}`

  %% Aliased:
  %%    _36
  _56 = succeeded:body _36
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _74 = bif:'=:=' _36, `{error,missing}`
  br _74, ^74, ^58

74:
  %% beam_doc_SUITE.erl:579
  %% Aliased:
  %%    _0
  _37 = call (`compile_file`/3), _0, `"skip_doc"`, `[report,return_errors,no_docs]`

  %% Aliased:
  %%    _37
  _59 = succeeded:body _37
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _70 = is_tagged_tuple _37, `2`, `ok`
  br _70, ^67, ^61

67:
  %% beam_doc_SUITE.erl:580
  %% Aliased:
  %%    _8
  _40 = call (`code`:`get_doc`/1), _8

  %% Aliased:
  %%    _40
  _62 = succeeded:body _40
  br _62, ^62, ^1

62:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _65 = bif:'=:=' _40, `{error,missing}`
  br _65, ^65, ^64

65:
  %% Result type:
  %%    'ok'
  ret `ok`

64:
  %% beam_doc_SUITE.erl:580
  %% Aliased:
  %%    _40
  _41 = match_fail `badmatch`, _40

  %% Unique:
  %%    _41
  _66 = succeeded:body _41
  br ^1

61:
  %% beam_doc_SUITE.erl:579
  %% Aliased:
  %%    _37
  _42 = match_fail `badmatch`, _37

  %% Unique:
  %%    _42
  _73 = succeeded:body _42
  br ^1

58:
  %% beam_doc_SUITE.erl:576
  %% Aliased:
  %%    _36
  _43 = match_fail `badmatch`, _36

  %% Unique:
  %%    _43
  _75 = succeeded:body _43
  br ^1

53:
  %% beam_doc_SUITE.erl:570
  %% Aliased:
  %%    _10
  _44 = match_fail `badmatch`, _10

  %% Unique:
  %%    _44
  _122 = succeeded:body _44
  br ^1

50:
  %% beam_doc_SUITE.erl:568
  %% Aliased:
  %%    _7
  _45 = match_fail `badmatch`, _7

  %% Unique:
  %%    _45
  _129 = succeeded:body _45
  br ^1

1:
  _46 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _46
}

%% beam_doc_SUITE.erl:583
%% Counter = 27
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`no_doc_attributes`(_0) {
0:
  %% beam_doc_SUITE.erl:585
  %% Aliased:
  %%    _0
  _4 = call (`default_compile_file`/3), _0, `"no_doc_attributes"`, `[]`

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _23 = is_tagged_tuple _4, `2`, `ok`
  br _23, ^20, ^14

20:
  %% Argument types:
  %%    _4 => {'ok', any()}
  %% Aliased:
  %%    _4
  _5 = get_tuple_element _4, `1`

  %% beam_doc_SUITE.erl:588
  %% Aliased:
  %%    _5
  _7 = call (`code`:`get_doc`/2), _5, `#{sources => [eep48]}`

  %% Aliased:
  %%    _7
  _15 = succeeded:body _7
  br _15, ^15, ^1

15:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _18 = bif:'=:=' _7, `{error,missing}`
  br _18, ^18, ^17

18:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  %% beam_doc_SUITE.erl:587
  %% Aliased:
  %%    _7
  _8 = match_fail `badmatch`, _7

  %% Unique:
  %%    _8
  _19 = succeeded:body _8
  br ^1

14:
  %% beam_doc_SUITE.erl:585
  %% Aliased:
  %%    _4
  _9 = match_fail `badmatch`, _4

  %% Unique:
  %%    _9
  _26 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% beam_doc_SUITE.erl:592
%% Counter = 237
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`docs_from_ast`(_0) {
0:
  %% beam_doc_SUITE.erl:601
  %% Result type:
  %%    list(any())
  _2 = call (`scan_and_parse`/1), `"-module(test).\n-moduledoc \"moduledoc\".\n-export([main/0]).\n-doc \"main\".\nmain() -> ok."`

  %% Aliased:
  %%    _2
  _106 = succeeded:body _2
  br _106, ^106, ^1

106:
  %% beam_doc_SUITE.erl:601
  %% Aliased:
  %%    _2
  _23 = call (`compile`:`forms`/2), _2, `[debug_info]`

  %% Aliased:
  %%    _23
  _107 = succeeded:body _23
  br _107, ^107, ^1

107:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _230 = is_tagged_tuple _23, `3`, `ok`
  br _230, ^227, ^109

227:
  %% Argument types:
  %%    _23 => {'ok', any(), any()}
  %% Aliased:
  %%    _23
  _25 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _25
  _226 = bif:'=:=' _25, `test`
  br _226, ^225, ^109

225:
  %% Argument types:
  %%    _23 => {'ok', 'test', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `2`

  %% beam_doc_SUITE.erl:602
  %% Aliased:
  %%    _24
  _27 = call (`beam_lib`:`chunks`/2), _24, `[documentation]`

  %% Aliased:
  %%    _27
  _110 = succeeded:body _27
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _221 = is_tagged_tuple _27, `2`, `ok`
  br _221, ^218, ^112

218:
  %% Argument types:
  %%    _27 => {'ok', any()}
  %% Aliased:
  %%    _27
  _28 = get_tuple_element _27, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _215 = is_tagged_tuple _28, `2`, `test`
  br _215, ^212, ^112

212:
  %% Argument types:
  %%    _28 => {'test', any()}
  %% Aliased:
  %%    _28
  _30 = get_tuple_element _28, `1`

  %% Aliased:
  %%    _30
  _211 = is_nonempty_list _30
  br _211, ^211, ^112

211:
  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _33 = get_hd _30

  %% Argument types:
  %%    _30 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _30
  _32 = get_tl _30

  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _208 = is_tagged_tuple _33, `2`, `documentation`
  br _208, ^205, ^112

205:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _204 = bif:'=:=' _32, `[]`
  br _204, ^204, ^112

204:
  %% Argument types:
  %%    _33 => {'documentation', any()}
  %% Aliased:
  %%    _33
  _34 = get_tuple_element _33, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _135 = is_tagged_tuple _34, `7`, `docs_v1`
  br _135, ^132, ^114

132:
  %% Argument types:
  %%    _34 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _48 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _131 = bif:'=:=' _48, `2`
  br _131, ^130, ^114

130:
  %% Argument types:
  %%    _34 => {'docs_v1', 2, any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _45 = get_tuple_element _34, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _129 = bif:is_map _45
  br _129, ^129, ^114

129:
  %% Argument types:
  %%    _45 => map()
  %% Aliased:
  %%    _45
  _50 = get_map_element _45, `<<"en">>`

  %% Aliased:
  %%    _50
  _115 = succeeded:guard _50
  br _115, ^115, ^114

115:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _128 = bif:'=:=' _50, `<<"moduledoc">>`
  br _128, ^128, ^114

128:
  %% Argument types:
  %%    _34 => {'docs_v1', 2, any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _34
  _43 = get_tuple_element _34, `6`

  %% Aliased:
  %%    _43
  _127 = is_nonempty_list _43
  br _127, ^127, ^114

127:
  %% Argument types:
  %%    _43 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _43
  _52 = get_hd _43

  %% Argument types:
  %%    _43 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _43
  _51 = get_tl _43

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _124 = bif:is_tuple _52
  br _124, ^124, ^114

124:
  %% Argument types:
  %%    _52 => {...}
  %% Aliased:
  %%    _52
  _125 = bif:tuple_size _52

  %% Argument types:
  %%    _125 => 0..16777215
  %% Unique:
  %%    _125
  _126 = bif:'=:=' _125, `5`
  br _126, ^123, ^114

123:
  %% Argument types:
  %%    _52 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _52
  _57 = get_tuple_element _52, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _122 = bif:'=:=' _57, `{function,main,0}`
  br _122, ^122, ^114

122:
  %% Argument types:
  %%    _52 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _52
  _56 = get_tuple_element _52, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _121 = bif:'=:=' _56, `4`
  br _121, ^120, ^114

120:
  %% Argument types:
  %%    _52 => {{'function', 'main', 0}, 4, any(), any(), any()}
  %% Aliased:
  %%    _52
  _54 = get_tuple_element _52, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _119 = bif:is_map _54
  br _119, ^119, ^114

119:
  %% Argument types:
  %%    _54 => map()
  %% Aliased:
  %%    _54
  _58 = get_map_element _54, `<<"en">>`

  %% Aliased:
  %%    _58
  _116 = succeeded:guard _58
  br _116, ^116, ^114

116:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _118 = bif:'=:=' _58, `<<"main">>`
  br _118, ^118, ^114

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _117 = bif:'=:=' _51, `[]`
  br _117, ^113, ^114

113:
  %% beam_doc_SUITE.erl:610
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _24
  _97 = call (`check_no_doc_attributes`/1), _24

  %% Unique:
  %%    _97
  _139 = succeeded:body _97
  br _139, ^139, ^1

139:
  %% beam_doc_SUITE.erl:612
  %% Result type:
  %%    list(any())
  _7 = call (`scan_and_parse`/1), `"-module(test).\n-moduledoc \"moduledoc\".\n-export([main/0]).\n-doc \"main\".\nmain() -> ok."`

  %% Aliased:
  %%    _7
  _140 = succeeded:body _7
  br _140, ^140, ^1

140:
  %% beam_doc_SUITE.erl:612
  %% Aliased:
  %%    _7
  _59 = call (`compile`:`forms`/2), _7, `[beam_docs,debug_info,{source,"test.erl"}]`

  %% Aliased:
  %%    _59
  _141 = succeeded:body _59
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _200 = is_tagged_tuple _59, `3`, `ok`
  br _200, ^197, ^143

197:
  %% Argument types:
  %%    _59 => {'ok', any(), any()}
  %% Aliased:
  %%    _59
  _61 = get_tuple_element _59, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _196 = bif:'=:=' _61, `test`
  br _196, ^195, ^143

195:
  %% Argument types:
  %%    _59 => {'ok', 'test', any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `2`

  %% beam_doc_SUITE.erl:613
  %% Aliased:
  %%    _60
  _63 = call (`beam_lib`:`chunks`/2), _60, `[documentation]`

  %% Aliased:
  %%    _63
  _144 = succeeded:body _63
  br _144, ^144, ^1

144:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _191 = is_tagged_tuple _63, `2`, `ok`
  br _191, ^188, ^146

188:
  %% Argument types:
  %%    _63 => {'ok', any()}
  %% Aliased:
  %%    _63
  _64 = get_tuple_element _63, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _185 = is_tagged_tuple _64, `2`, `test`
  br _185, ^182, ^146

182:
  %% Argument types:
  %%    _64 => {'test', any()}
  %% Aliased:
  %%    _64
  _66 = get_tuple_element _64, `1`

  %% Aliased:
  %%    _66
  _181 = is_nonempty_list _66
  br _181, ^181, ^146

181:
  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _69 = get_hd _66

  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _68 = get_tl _66

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _178 = is_tagged_tuple _69, `2`, `documentation`
  br _178, ^175, ^146

175:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _174 = bif:'=:=' _68, `[]`
  br _174, ^174, ^146

174:
  %% Argument types:
  %%    _69 => {'documentation', any()}
  %% Aliased:
  %%    _69
  _70 = get_tuple_element _69, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _169 = is_tagged_tuple _70, `7`, `docs_v1`
  br _169, ^166, ^148

166:
  %% Argument types:
  %%    _70 => {'docs_v1', any(), any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _70
  _85 = get_tuple_element _70, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _165 = bif:'=:=' _85, `2`
  br _165, ^164, ^148

164:
  %% Argument types:
  %%    _70 => {'docs_v1', 2, any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _70
  _82 = get_tuple_element _70, `4`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _163 = bif:is_map _82
  br _163, ^163, ^148

163:
  %% Argument types:
  %%    _82 => map()
  %% Aliased:
  %%    _82
  _87 = get_map_element _82, `<<"en">>`

  %% Aliased:
  %%    _87
  _149 = succeeded:guard _87
  br _149, ^149, ^148

149:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _162 = bif:'=:=' _87, `<<"moduledoc">>`
  br _162, ^162, ^148

162:
  %% Argument types:
  %%    _70 => {'docs_v1', 2, any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _70
  _80 = get_tuple_element _70, `6`

  %% Aliased:
  %%    _80
  _161 = is_nonempty_list _80
  br _161, ^161, ^148

161:
  %% Argument types:
  %%    _80 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _80
  _89 = get_hd _80

  %% Argument types:
  %%    _80 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _80
  _88 = get_tl _80

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _158 = bif:is_tuple _89
  br _158, ^158, ^148

158:
  %% Argument types:
  %%    _89 => {...}
  %% Aliased:
  %%    _89
  _159 = bif:tuple_size _89

  %% Argument types:
  %%    _159 => 0..16777215
  %% Unique:
  %%    _159
  _160 = bif:'=:=' _159, `5`
  br _160, ^157, ^148

157:
  %% Argument types:
  %%    _89 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _89
  _94 = get_tuple_element _89, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _156 = bif:'=:=' _94, `{function,main,0}`
  br _156, ^156, ^148

156:
  %% Argument types:
  %%    _89 => {{'function', 'main', 0}, any(), any(), any(), any()}
  %% Aliased:
  %%    _89
  _93 = get_tuple_element _89, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _155 = bif:'=:=' _93, `4`
  br _155, ^154, ^148

154:
  %% Argument types:
  %%    _89 => {{'function', 'main', 0}, 4, any(), any(), any()}
  %% Aliased:
  %%    _89
  _91 = get_tuple_element _89, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _91
  _153 = bif:is_map _91
  br _153, ^153, ^148

153:
  %% Argument types:
  %%    _91 => map()
  %% Aliased:
  %%    _91
  _95 = get_map_element _91, `<<"en">>`

  %% Aliased:
  %%    _95
  _150 = succeeded:guard _95
  br _150, ^150, ^148

150:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _152 = bif:'=:=' _95, `<<"main">>`
  br _152, ^152, ^148

152:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _88
  _151 = bif:'=:=' _88, `[]`
  br _151, ^147, ^148

147:
  %% beam_doc_SUITE.erl:621
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _60
  _99 = call (`check_no_doc_attributes`/1), _60

  %% Unique:
  %%    _99
  _173 = succeeded:body _99
  br _173, ^236, ^1

236:
  ret _99

148:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _73 = put_tuple `value`, _70

  %% Argument types:
  %%    _73 => {'value', any()}
  %% Unique:
  %%    _73
  _74 = put_list _73, `[]`

  %% Argument types:
  %%    _74 => nonempty_list({'value', any()})
  %% Unique:
  %%    _74
  _75 = put_list `{pattern,"# docs_v1 { module_doc = # { << \"en\" >> := << \"moduledoc\" >> } , anno = 2 , docs = [ { { function , main , 0 } , 4 , _ , # { << \"en\" >> := << \"main\" >> } , _ } ] }"}`, _74

  %% Argument types:
  %%    _75 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _75
  _76 = put_list `{expression,"DocsWSource"}`, _75

  %% Argument types:
  %%    _76 => nonempty_list({'expression', nonempty_list(68..117)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _76
  _77 = put_list `{line,619}`, _76

  %% Argument types:
  %%    _77 => nonempty_list({'expression', nonempty_list(68..117)} | {'line', 619} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _77
  _78 = put_list `{module,beam_doc_SUITE}`, _77

  %% Argument types:
  %%    _78 => nonempty_list({'expression', nonempty_list(68..117)} | {'line', 619} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _78
  _79 = put_tuple `assertMatch`, _78

  %% beam_doc_SUITE.erl:619
  %% Unique:
  %%    _79
  _98 = call (`erlang`:`error`/1), _79

  %% Aliased:
  %%    _98
  _172 = succeeded:body _98
  br ^1

146:
  %% beam_doc_SUITE.erl:613
  %% Aliased:
  %%    _63
  _100 = match_fail `badmatch`, _63

  %% Unique:
  %%    _100
  _194 = succeeded:body _100
  br ^1

143:
  %% beam_doc_SUITE.erl:612
  %% Aliased:
  %%    _59
  _101 = match_fail `badmatch`, _59

  %% Unique:
  %%    _101
  _203 = succeeded:body _101
  br ^1

114:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _36 = put_tuple `value`, _34

  %% Argument types:
  %%    _36 => {'value', any()}
  %% Unique:
  %%    _36
  _37 = put_list _36, `[]`

  %% Argument types:
  %%    _37 => nonempty_list({'value', any()})
  %% Unique:
  %%    _37
  _38 = put_list `{pattern,"# docs_v1 { module_doc = # { << \"en\" >> := << \"moduledoc\" >> } , anno = 2 , docs = [ { { function , main , 0 } , 4 , _ , # { << \"en\" >> := << \"main\" >> } , _ } ] }"}`, _37

  %% Argument types:
  %%    _38 => nonempty_list({'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _38
  _39 = put_list `{expression,"Docs"}`, _38

  %% Argument types:
  %%    _39 => nonempty_list({'expression', nonempty_list(68..115)} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _39
  _40 = put_list `{line,607}`, _39

  %% Argument types:
  %%    _40 => nonempty_list({'expression', nonempty_list(68..115)} | {'line', 607} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _40
  _41 = put_list `{module,beam_doc_SUITE}`, _40

  %% Argument types:
  %%    _41 => nonempty_list({'expression', nonempty_list(68..115)} | {'line', 607} | {'module', 'beam_doc_SUITE'} | {'pattern', nonempty_list(32..125)} | {'value', any()})
  %% Unique:
  %%    _41
  _42 = put_tuple `assertMatch`, _41

  %% beam_doc_SUITE.erl:607
  %% Unique:
  %%    _42
  _96 = call (`erlang`:`error`/1), _42

  %% Aliased:
  %%    _96
  _138 = succeeded:body _96
  br ^1

112:
  %% beam_doc_SUITE.erl:602
  %% Aliased:
  %%    _27
  _102 = match_fail `badmatch`, _27

  %% Unique:
  %%    _102
  _224 = succeeded:body _102
  br ^1

109:
  %% beam_doc_SUITE.erl:601
  %% Aliased:
  %%    _23
  _103 = match_fail `badmatch`, _23

  %% Unique:
  %%    _103
  _233 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% beam_doc_SUITE.erl:624
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(10..120)
function `beam_doc_SUITE`:`scan_and_parse`(_0) {
0:
  %% beam_doc_SUITE.erl:625
  %% Unique:
  %%    _0
  _4 = call (`erl_scan`:`string`/1), _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _19 = is_tagged_tuple _4, `3`, `ok`
  br _19, ^16, ^14

16:
  %% Argument types:
  %%    _4 => {'ok', any(), any()}
  %% Aliased:
  %%    _4
  _6 = get_tuple_element _4, `1`

  %% beam_doc_SUITE.erl:626
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _6
  _8 = call (`parse`/1), _6

  %% Aliased:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _8
  ret _8

14:
  %% beam_doc_SUITE.erl:625
  %% Aliased:
  %%    _4
  _9 = match_fail `badmatch`, _4

  %% Unique:
  %%    _9
  _22 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% beam_doc_SUITE.erl:628
%% Counter = 49
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`parse`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _25 = bif:'=:=' _0, `[]`
  br _25, ^25, ^24

25:
  %% Result type:
  %%    nil()
  ret `[]`

24:
  %% Result type:
  %%    'false' | 'true'
  _4 = make_fun (`'-parse/1-fun-0-'`/1)

  %% beam_doc_SUITE.erl:630
  %% Aliased:
  %%    _0, 
  %%    _4
  _9 = call (`lists`:`splitwith`/2), _4, _0

  %% Aliased:
  %%    _9
  _26 = succeeded:body _9
  br _26, ^42, ^1

42:
  %% Argument types:
  %%    _9 => {list(any()), maybe_improper_list(any(), any())}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% Aliased:
  %%    _10
  _41 = is_nonempty_list _10
  br _41, ^41, ^28

41:
  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _13 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _12 = get_tl _10

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _14 = put_list _13, `[]`

  %% Argument types:
  %%    _9 => {list(any()), maybe_improper_list(any(), any())}
  %% Aliased:
  %%    _9
  _11 = get_tuple_element _9, `0`

  %% beam_doc_SUITE.erl:631
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _14
  _6 = call (`erlang`:`'++'`/2), _11, _14

  %% beam_doc_SUITE.erl:631
  %% Aliased:
  %%    _6
  _15 = call (`erl_parse`:`parse_form`/1), _6

  %% Aliased:
  %%    _15
  _30 = succeeded:body _15
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _37 = is_tagged_tuple _15, `2`, `ok`
  br _37, ^34, ^32

34:
  %% beam_doc_SUITE.erl:632
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _12
  _8 = call (`parse`/1), _12

  %% Aliased:
  %%    _8
  _33 = succeeded:body _8
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _15 => {'ok', any()}
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% Argument types:
  %%    _8 => list(any())
  %% Aliased:
  %%    _8, 
  %%    _16
  _19 = put_list _16, _8
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _19
  ret _19

32:
  %% beam_doc_SUITE.erl:631
  %% Aliased:
  %%    _15
  _20 = match_fail `badmatch`, _15

  %% Unique:
  %%    _20
  _40 = succeeded:body _20
  br ^1

28:
  %% beam_doc_SUITE.erl:630
  %% Aliased:
  %%    _9
  _21 = match_fail `badmatch`, _9

  %% Unique:
  %%    _21
  _46 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% beam_doc_SUITE.erl:634
%% Counter = 54
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(50..121)
%%    _2 =>
%%     nonempty_list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'})
function `beam_doc_SUITE`:`compile_file`(_0, _1, _2) {
0:
  %% beam_doc_SUITE.erl:635
  %% Unique:
  %%    _1
  ErlModName = call (`erlang`:`'++'`/2), _1, `".erl"`

  %% beam_doc_SUITE.erl:636
  %% Aliased:
  %%    _0
  _4 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _4
  _32 = succeeded:body _4
  br _32, ^32, ^1

32:
  %% beam_doc_SUITE.erl:636
  %% Aliased:
  %%    _4, 
  %%    ErlModName
  Filename = call (`filename`:`join`/2), _4, ErlModName

  %% Aliased:
  %%    Filename
  _33 = succeeded:body Filename
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    _2 => nonempty_list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'})
  %% Aliased:
  %%    _2
  _19 = put_list _2, `[]`

  %% Argument types:
  %%    _19 => nonempty_list(nonempty_list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'}))
  %% Aliased:
  %%    Filename
  %% Unique:
  %%    _19
  _20 = put_list Filename, _19

  %% beam_doc_SUITE.erl:637
  %% Unique:
  %%    _20
  _26 = call (`io`:`format`/2), `"Compiling: ~ts~n~p~n"`, _20

  %% Aliased:
  %%    _26
  _34 = succeeded:body _26
  br _34, ^34, ^1

34:
  %% beam_doc_SUITE.erl:638
  %% Aliased:
  %%    _2, 
  %%    Filename
  _21 = call (`compile`:`file`/2), Filename, _2

  %% Aliased:
  %%    _21
  _35 = succeeded:body _21
  br _35, ^35, ^1

35:
  %% beam_doc_SUITE.erl:639
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _6 = bif:element `1`, _21

  %% Aliased:
  %%    _6
  _39 = succeeded:guard _6
  br _39, ^39, ^37

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _40 = bif:'=:=' _6, `ok`
  br _40, ^40, ^37

40:
  %% beam_doc_SUITE.erl:640
  %% Argument types:
  %%    _21 => {any(), ...}
  %% Aliased:
  %%    _21
  ModName = bif:element `2`, _21

  %% Aliased:
  %%    ModName
  _41 = succeeded:body ModName
  br _41, ^41, ^1

41:
  %% Result type:
  %%    'false' | 'true'
  _10 = make_fun (`'-compile_file/3-fun-0-'`/1)

  %% beam_doc_SUITE.erl:641
  %% Aliased:
  %%    _2, 
  %%    _10
  _22 = call (`lists`:`search`/2), _10, _2

  %% Aliased:
  %%    _22
  _42 = succeeded:body _22
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    _22 => 'false' | {'value', any()}
  %% Aliased:
  %%    _22
  _51 = bif:'=:=' _22, `false`
  br _51, ^47, ^44

47:
  %% beam_doc_SUITE.erl:643
  %% Aliased:
  %%    ModName
  _12 = call (`code`:`which`/1), ModName

  %% Aliased:
  %%    _12
  _48 = succeeded:body _12
  br _48, ^48, ^1

48:
  %% beam_doc_SUITE.erl:643
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _12
  _28 = call (`check_no_doc_attributes`/1), _12

  %% Unique:
  %%    _28
  _49 = succeeded:body _28
  br _49, ^49, ^1

49:
  %% Result type:
  %%    {any(), any(), ...}
  %% Aliased:
  %%    _21
  ret _21

44:
  %% Result type:
  %%    {any(), any(), ...}
  %% Aliased:
  %%    _21
  ret _21

37:
  %% Aliased:
  %%    _21
  ret _21

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% beam_doc_SUITE.erl:652
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(50..121)
function `beam_doc_SUITE`:`default_compile_file`(_0, _1) {
0:
  %% beam_doc_SUITE.erl:653
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  _2 = call (`default_compile_file`/3), _0, _1, `[]`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_doc_SUITE.erl:654
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _1 =>
%%     nonempty_list(50..121)
%%    _2 =>
%%     list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'})
function `beam_doc_SUITE`:`default_compile_file`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _2 => list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'})
  %% Unique:
  %%    _2
  _4 = put_list `debug_info`, _2

  %% Argument types:
  %%    _4 => nonempty_list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'})
  %% Unique:
  %%    _4
  _5 = put_list `return_errors`, _4

  %% Argument types:
  %%    _5 => nonempty_list(atom() | {'d', ''ALL_WILDCARD'' | ''TEST_WILDCARD''} | {'i', nonempty_list(46..114)} | {'d', ''REASON'' | ''TREASON'', 'eventually' | 'next_major_release' | 'next_version'})
  %% Unique:
  %%    _5
  _3 = put_list `report`, _5

  %% beam_doc_SUITE.erl:655
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1, 
  %%    _3
  _6 = call (`compile_file`/3), _0, _1, _3

  %% Aliased:
  %%    _6
  _9 = succeeded:body _6
  br _9, ^9, ^1

9:
  %% Aliased:
  %%    _6
  ret _6

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_doc_SUITE.erl:659
%% Counter = 85
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`check_no_doc_attributes`(_0) {
0:
  %% beam_doc_SUITE.erl:663
  %% Aliased:
  %%    _0
  _14 = call (`beam_lib`:`chunks`/2), _0, `[debug_info]`

  %% Aliased:
  %%    _14
  _38 = succeeded:body _14
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _80 = is_tagged_tuple _14, `2`, `ok`
  br _80, ^77, ^40

77:
  %% Argument types:
  %%    _14 => {'ok', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _74 = bif:is_tuple _15
  br _74, ^74, ^40

74:
  %% Argument types:
  %%    _15 => {...}
  %% Aliased:
  %%    _15
  _75 = bif:tuple_size _15

  %% Argument types:
  %%    _75 => 0..16777215
  %% Unique:
  %%    _75
  _76 = bif:'=:=' _75, `2`
  br _76, ^73, ^40

73:
  %% Argument types:
  %%    _15 => {any(), any()}
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `1`

  %% Aliased:
  %%    _17
  _72 = is_nonempty_list _17
  br _72, ^72, ^40

72:
  %% Argument types:
  %%    _17 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _17
  _20 = get_hd _17

  %% Argument types:
  %%    _17 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _17
  _19 = get_tl _17

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _69 = is_tagged_tuple _20, `2`, `debug_info`
  br _69, ^66, ^40

66:
  %% Argument types:
  %%    _20 => {'debug_info', any()}
  %% Aliased:
  %%    _20
  _21 = get_tuple_element _20, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _63 = is_tagged_tuple _21, `3`, `debug_info_v1`
  br _63, ^60, ^40

60:
  %% Argument types:
  %%    _21 => {'debug_info_v1', any(), any()}
  %% Aliased:
  %%    _21
  _24 = get_tuple_element _21, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _59 = bif:'=:=' _24, `erl_abstract_code`
  br _59, ^58, ^40

58:
  %% Argument types:
  %%    _21 => {'debug_info_v1', 'erl_abstract_code', any()}
  %% Aliased:
  %%    _21
  _23 = get_tuple_element _21, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _55 = bif:is_tuple _23
  br _55, ^55, ^40

55:
  %% Argument types:
  %%    _23 => {...}
  %% Aliased:
  %%    _23
  _56 = bif:tuple_size _23

  %% Argument types:
  %%    _56 => 0..16777215
  %% Unique:
  %%    _56
  _57 = bif:'=:=' _56, `2`
  br _57, ^54, ^40

54:
  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _26 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _53 = bif:'=:=' _19, `[]`
  br _53, ^53, ^40

53:
  %% Result type:
  %%    'false' | 'true'
  _11 = make_fun (`'-check_no_doc_attributes/1-fun-0-'`/1)

  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _27 = get_tuple_element _23, `0`

  %% beam_doc_SUITE.erl:664
  %% Aliased:
  %%    _11, 
  %%    _27
  _30 = call (`lists`:`search`/2), _11, _27

  %% Aliased:
  %%    _30
  _41 = succeeded:body _30
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    _30 => 'false' | {'value', any()}
  %% Aliased:
  %%    _30
  _51 = bif:'=:=' _30, `false`
  br _51, ^50, ^43

50:
  %% beam_doc_SUITE.erl:670
  %% Aliased:
  %%    _26
  _31 = call (`lists`:`member`/2), `no_docs`, _26

  %% Aliased:
  %%    _31
  _44 = succeeded:body _31
  br _44, ^44, ^1

44:
  br _31, ^46, ^47

46:
  %% beam_doc_SUITE.erl:670
  _33 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _33
  _49 = succeeded:body _33
  br ^1

47:
  %% Result type:
  %%    'ok'
  ret `ok`

43:
  %% beam_doc_SUITE.erl:664
  %% Aliased:
  %%    _30
  _34 = match_fail `badmatch`, _30

  %% Unique:
  %%    _34
  _52 = succeeded:body _34
  br ^1

40:
  %% beam_doc_SUITE.erl:660
  %% Aliased:
  %%    _14
  _35 = match_fail `badmatch`, _14

  %% Unique:
  %%    _35
  _83 = succeeded:body _35
  br ^1

1:
  _36 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _36
}

%% Counter = 6
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `beam_doc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `beam_doc_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_doc_SUITE.erl:665
%% Counter = 44
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`'-check_no_doc_attributes/1-fun-0-'`(_9) {
0:
  %% beam_doc_SUITE.erl:666
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _3 = bif:element `1`, _9

  %% Aliased:
  %%    _3
  _35 = succeeded:body _3
  br _35, ^35, ^1

35:
  %% beam_doc_SUITE.erl:666
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _28 = bif:'=:=' _3, `attribute`
  br _28, ^43, ^42

43:
  %% beam_doc_SUITE.erl:668
  %% Argument types:
  %%    _9 => {any(), ...}
  %% Aliased:
  %%    _9
  _5 = bif:element `3`, _9

  %% Aliased:
  %%    _5
  _37 = succeeded:body _5
  br _37, ^37, ^1

37:
  %% beam_doc_SUITE.erl:668
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _29 = bif:'=:=' _5, `doc`
  br _29, ^40, ^39

40:
  %% Result type:
  %%    'true'
  ret `true`

39:
  %% beam_doc_SUITE.erl:668
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _32 = bif:'=:=' _5, `moduledoc`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _32
  ret _32

42:
  %% Result type:
  %%    'false'
  ret `false`

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% beam_doc_SUITE.erl:641
%% Counter = 30
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`'-compile_file/3-fun-0-'`(_8) {
0:
  %% beam_doc_SUITE.erl:641
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _27 = bif:'=:=' _8, `no_docs`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _27
  ret _27
}

%% beam_doc_SUITE.erl:630
%% Counter = 22
%% bs_ensure_opt: true
function `beam_doc_SUITE`:`'-parse/1-fun-0-'`(_2) {
0:
  %% beam_doc_SUITE.erl:630
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _1 = bif:element `1`, _2

  %% Aliased:
  %%    _1
  _21 = succeeded:body _1
  br _21, ^21, ^1

21:
  %% beam_doc_SUITE.erl:630
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _18 = bif:'=/=' _1, `dot`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _18
  ret _18

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}
