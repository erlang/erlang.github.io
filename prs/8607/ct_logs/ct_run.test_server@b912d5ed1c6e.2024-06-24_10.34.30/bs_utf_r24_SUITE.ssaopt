module bs_utf_r24_SUITE.
exports [{all,0},
         {coverage,1},
         {end_per_group,2},
         {end_per_suite,1},
         {extreme_tripping,1},
         {groups,0},
         {guard,1},
         {init_per_group,2},
         {init_per_suite,1},
         {literals,1},
         {module_info,0},
         {module_info,1},
         {suite,0},
         {unused_utf_char,1},
         {utf16_roundtrip,1},
         {utf32_roundtrip,1},
         {utf8_roundtrip,1},
         {verify_highest_opcode,1}].
attributes [].

%% bs_utf_r24_SUITE.erl:32
%% Counter = 4
function `bs_utf_r24_SUITE`:`suite`() {
0:
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% bs_utf_r24_SUITE.erl:34
%% Counter = 4
function `bs_utf_r24_SUITE`:`all`() {
0:
  ret `[verify_highest_opcode,utf8_roundtrip,unused_utf_char,utf16_roundtrip,
  utf32_roundtrip,guard,extreme_tripping,literals,coverage]`
}

%% bs_utf_r24_SUITE.erl:40
%% Counter = 4
function `bs_utf_r24_SUITE`:`groups`() {
0:
  ret `[]`
}

%% bs_utf_r24_SUITE.erl:43
%% Counter = 6
function `bs_utf_r24_SUITE`:`init_per_suite`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:44
  _2 = call (`test_lib`:`recompile`/1), `bs_utf_r24_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:47
%% Counter = 4
function `bs_utf_r24_SUITE`:`end_per_suite`(_0) {
0:
  ret `ok`
}

%% bs_utf_r24_SUITE.erl:50
%% Counter = 4
function `bs_utf_r24_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% bs_utf_r24_SUITE.erl:53
%% Counter = 4
function `bs_utf_r24_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% bs_utf_r24_SUITE.erl:56
%% Counter = 4
function `bs_utf_r24_SUITE`:`verify_highest_opcode`(_0) {
0:
  ret `ok`
}

%% bs_utf_r24_SUITE.erl:78
%% Counter = 25
function `bs_utf_r24_SUITE`:`utf8_roundtrip`(_0) {
0:
  %% Aliased:
  %%    _0
  _21 = bif:is_list _0
  br _21, ^21, ^20

21:
  %% bs_utf_r24_SUITE.erl:79
  _3 = call (`utf_data`/0)

  %% Unique:
  %%    _3
  _22 = succeeded:body _3
  br _22, ^22, ^1

22:
  %% bs_utf_r24_SUITE.erl:79
  %% Unique:
  %%    _3
  _16 = call (`'-utf8_roundtrip/1-lc$^0/1-0-'`/1), _3

  %% Aliased:
  %%    _16
  _23 = succeeded:body _16
  br _23, ^23, ^1

23:
  ret `ok`

20:
  %% bs_utf_r24_SUITE.erl:78
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf8_roundtrip/1-',1}}
  _17 = match_fail `function_clause`, _0

  %% Unique:
  %%    _17
  _24 = succeeded:body _17
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _17
  ret _17

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  ret _18
}

%% bs_utf_r24_SUITE.erl:82
%% Counter = 71
function `bs_utf_r24_SUITE`:`utf8_roundtrip_1`(_0) {
0:
  %% Unique:
  %%    _0
  _67 = bif:is_tuple _0
  br _67, ^67, ^52

67:
  %% Unique:
  %%    _0
  _68 = bif:tuple_size _0

  %% Unique:
  %%    _68
  _69 = bif:'=:=' _68, `3`
  br _69, ^66, ^52

66:
  %% Unique:
  %%    _0
  _25 = get_tuple_element _0, `0`

  %% Unique:
  %%    _0
  _24 = get_tuple_element _0, `1`

  %% Unique:
  %%    _0
  _23 = get_tuple_element _0, `2`

  %% Aliased:
  %%    _23, 
  %%    _24
  _53 = bif:'=:=' _23, _24
  br _53, ^53, ^52

53:
  %% bs_utf_r24_SUITE.erl:83
  %% Aliased:
  %%    _24
  _26 = call (`utf8_to_list`/1), _24

  %% Aliased:
  %%    _26
  _54 = succeeded:body _26
  br _54, ^54, ^1

54:
  %% Aliased:
  %%    _25, 
  %%    _26
  _57 = bif:'=:=' _26, _25
  br _57, ^57, ^56

57:
  %% bs_utf_r24_SUITE.erl:84
  %% Aliased:
  %%    _25
  _27 = call (`list_to_utf8`/1), _25

  %% Unique:
  %%    _27
  _58 = succeeded:body _27
  br _58, ^58, ^1

58:
  %% Aliased:
  %%    _24
  %% Unique:
  %%    _27
  _61 = bif:'=:=' _27, _24
  br _61, ^61, ^60

61:
  %% bs_utf_r24_SUITE.erl:85
  %% Aliased:
  %%    _25
  _42 = call (`'-utf8_roundtrip_1/1-lc$^0/1-0-'`/1), _25

  %% Aliased:
  %%    _42
  _62 = succeeded:body _42
  br _62, ^62, ^1

62:
  %% bs_utf_r24_SUITE.erl:86
  %% Aliased:
  %%    _25
  _46 = call (`'-utf8_roundtrip_1/1-lc$^1/1-1-'`/1), _25

  %% Aliased:
  %%    _46
  _63 = succeeded:body _46
  br _63, ^63, ^1

63:
  ret `ok`

60:
  %% bs_utf_r24_SUITE.erl:84
  %% Unique:
  %%    _27
  _47 = match_fail `badmatch`, _27

  %% Unique:
  %%    _47
  _64 = succeeded:body _47
  br _64, ^64, ^1

64:
  %% Unique:
  %%    _47
  ret _47

56:
  %% bs_utf_r24_SUITE.erl:83
  %% Aliased:
  %%    _26
  _48 = match_fail `badmatch`, _26

  %% Unique:
  %%    _48
  _65 = succeeded:body _48
  br _65, ^65, ^1

65:
  %% Unique:
  %%    _48
  ret _48

52:
  %% bs_utf_r24_SUITE.erl:82
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf8_roundtrip_1/1-',1}}
  _49 = match_fail `function_clause`, _0

  %% Unique:
  %%    _49
  _70 = succeeded:body _49
  br _70, ^70, ^1

70:
  %% Unique:
  %%    _49
  ret _49

1:
  _50 = call (`erlang`:`error`/1), `badarg`
  ret _50
}

%% bs_utf_r24_SUITE.erl:89
%% Counter = 13
function `bs_utf_r24_SUITE`:`utf8_guard`(_0, _1) {
0:
  %% bs_utf_r24_SUITE.erl:89
  %% Aliased:
  %%    _0
  _2 = bs_create_bin `binary`, `[1]`, `<<"*">>`, `all`, `utf8`, `[0,{segment,2}]`, _0, `undefined`

  %% Aliased:
  %%    _2
  _11 = succeeded:guard _2
  br _11, ^11, ^9

11:
  %% Aliased:
  %%    _1, 
  %%    _2
  _12 = bif:'=:=' _2, _1
  br _12, ^10, ^9

10:
  ret `ok`

9:
  ret `error`
}

%% bs_utf_r24_SUITE.erl:92
%% Counter = 21
function `bs_utf_r24_SUITE`:`utf8_to_list`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^12

18:
  %% bs_utf_r24_SUITE.erl:92
  %% Aliased:
  %%    _3
  _4 = bs_match `utf8`, _3, `[unsigned,big]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% bs_utf_r24_SUITE.erl:92
  %% Aliased:
  %%    _4
  _6 = bs_match `binary`, _4, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^13

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% bs_utf_r24_SUITE.erl:93
  %% Aliased:
  %%    _7
  _1 = call (`utf8_to_list`/1), _7

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _1, 
  %%    _5
  _8 = put_list _5, _1
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _3
  _17 = bs_test_tail _3, `0`
  br _17, ^17, ^12

17:
  ret `[]`

12:
  %% bs_utf_r24_SUITE.erl:92
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf8_to_list/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br _19, ^19, ^1

19:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:96
%% Counter = 6
function `bs_utf_r24_SUITE`:`list_to_utf8`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:97
  %% Aliased:
  %%    _0
  _2 = call (`list_to_utf8`/2), _0, `<<>>`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:99
%% Counter = 19
function `bs_utf_r24_SUITE`:`list_to_utf8`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _16 = is_nonempty_list _0
  br _16, ^16, ^13

16:
  %% Aliased:
  %%    _0
  _7 = get_hd _0

  %% Aliased:
  %%    _0
  _6 = get_tl _0

  %% bs_utf_r24_SUITE.erl:100
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf8`, `[0,{segment,2}]`, _7, `undefined`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% bs_utf_r24_SUITE.erl:100
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _2
  _8 = call (`list_to_utf8`/2), _6, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `[]`
  br _17, ^17, ^12

17:
  %% Unique:
  %%    _1
  ret _1

12:
  %% bs_utf_r24_SUITE.erl:99
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-list_to_utf8/2-',2}}
  _9 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:103
%% Counter = 32
function `bs_utf_r24_SUITE`:`unused_utf_char`(_0) {
0:
  %% Aliased:
  %%    _0
  _28 = bif:is_list _0
  br _28, ^28, ^27

28:
  %% bs_utf_r24_SUITE.erl:105
  _3 = call (`utf_data`/0)

  %% Unique:
  %%    _3
  _29 = succeeded:body _3
  br _29, ^29, ^1

29:
  %% bs_utf_r24_SUITE.erl:105
  %% Unique:
  %%    _3
  _23 = call (`'-unused_utf_char/1-lc$^0/1-0-'`/1), _3

  %% Aliased:
  %%    _23
  _30 = succeeded:body _23
  br _30, ^30, ^1

30:
  ret `ok`

27:
  %% bs_utf_r24_SUITE.erl:103
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-unused_utf_char/1-',1}}
  _24 = match_fail `function_clause`, _0

  %% Unique:
  %%    _24
  _31 = succeeded:body _24
  br _31, ^31, ^1

31:
  %% Unique:
  %%    _24
  ret _24

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  ret _25
}

%% bs_utf_r24_SUITE.erl:108
%% Counter = 6
function `bs_utf_r24_SUITE`:`utf8_len`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:109
  %% Unique:
  %%    _0
  _2 = call (`utf8_len`/2), _0, `0`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:111
%% Counter = 25
function `bs_utf_r24_SUITE`:`utf8_len`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _7 = bs_start_match `new`, _0

  %% Aliased:
  %%    _7
  _23 = succeeded:guard _7
  br _23, ^23, ^16

23:
  %% bs_utf_r24_SUITE.erl:111
  %% Aliased:
  %%    _7
  _8 = bs_match `skip`, _7, `utf8`, `[unsigned,big]`

  %% Aliased:
  %%    _8
  _18 = succeeded:guard _8
  br _18, ^18, ^17

18:
  %% bs_utf_r24_SUITE.erl:111
  %% Aliased:
  %%    _8
  _10 = bs_match `binary`, _8, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _10
  _19 = succeeded:guard _10
  br _19, ^19, ^17

19:
  %% Aliased:
  %%    _10
  _11 = bs_extract _10

  %% bs_utf_r24_SUITE.erl:112
  %% Unique:
  %%    _1
  _2 = bif:'+' _1, `1`

  %% Unique:
  %%    _2
  _20 = succeeded:body _2
  br _20, ^20, ^1

20:
  %% bs_utf_r24_SUITE.erl:112
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _2
  _12 = call (`utf8_len`/2), _11, _2

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Unique:
  %%    _12
  ret _12

17:
  %% Aliased:
  %%    _7
  _22 = bs_test_tail _7, `0`
  br _22, ^22, ^16

22:
  %% Unique:
  %%    _1
  ret _1

16:
  %% bs_utf_r24_SUITE.erl:111
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf8_len/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _24 = succeeded:body _13
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  ret _14
}

%% bs_utf_r24_SUITE.erl:115
%% Counter = 89
function `bs_utf_r24_SUITE`:`utf16_roundtrip`(_0) {
0:
  %% Aliased:
  %%    _0
  _41 = bif:is_list _0
  br _41, ^41, ^40

41:
  %% bs_utf_r24_SUITE.erl:116
  _17 = call (`utf16_data`/0)

  %% Unique:
  %%    _17
  _42 = succeeded:body _17
  br _42, ^42, ^1

42:
  %% Unique:
  %%    _17
  _80 = bif:is_tuple _17
  br _80, ^80, ^44

80:
  %% Unique:
  %%    _17
  _81 = bif:tuple_size _17

  %% Unique:
  %%    _81
  _82 = bif:'=:=' _81, `5`
  br _82, ^79, ^44

79:
  %% Unique:
  %%    _17
  _22 = get_tuple_element _17, `0`

  %% Unique:
  %%    _17
  _21 = get_tuple_element _17, `1`

  %% Unique:
  %%    _17
  _20 = get_tuple_element _17, `2`

  %% bs_utf_r24_SUITE.erl:116
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _20
  _11 = bif:'=:=' _20, _21
  br _11, ^87, ^44

87:
  %% Unique:
  %%    _17
  _19 = get_tuple_element _17, `3`

  %% Unique:
  %%    _17
  _18 = get_tuple_element _17, `4`

  %% bs_utf_r24_SUITE.erl:116
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _18
  _12 = bif:'=:=' _18, _19
  br _12, ^46, ^44

46:
  %% bs_utf_r24_SUITE.erl:117
  %% Aliased:
  %%    _21
  _24 = call (`utf16_big_len`/1), _21

  %% Unique:
  %%    _24
  _47 = succeeded:body _24
  br _47, ^47, ^1

47:
  %% Unique:
  %%    _24
  _77 = bif:'=:=' _24, `4`
  br _77, ^76, ^49

76:
  %% bs_utf_r24_SUITE.erl:118
  %% Aliased:
  %%    _19
  _25 = call (`utf16_little_len`/1), _19

  %% Unique:
  %%    _25
  _50 = succeeded:body _25
  br _50, ^50, ^1

50:
  %% Unique:
  %%    _25
  _74 = bif:'=:=' _25, `4`
  br _74, ^73, ^52

73:
  %% bs_utf_r24_SUITE.erl:119
  %% Aliased:
  %%    _21
  _26 = call (`big_utf16_to_list`/1), _21

  %% Aliased:
  %%    _26
  _53 = succeeded:body _26
  br _53, ^53, ^1

53:
  %% Aliased:
  %%    _22, 
  %%    _26
  _56 = bif:'=:=' _26, _22
  br _56, ^56, ^55

56:
  %% bs_utf_r24_SUITE.erl:120
  %% Aliased:
  %%    _19
  _27 = call (`little_utf16_to_list`/1), _19

  %% Aliased:
  %%    _27
  _57 = succeeded:body _27
  br _57, ^57, ^1

57:
  %% Aliased:
  %%    _22, 
  %%    _27
  _60 = bif:'=:=' _27, _22
  br _60, ^60, ^59

60:
  %% bs_utf_r24_SUITE.erl:122
  %% Aliased:
  %%    _22
  _28 = call (`list_to_big_utf16`/1), _22

  %% Unique:
  %%    _28
  _61 = succeeded:body _28
  br _61, ^61, ^1

61:
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _28
  _64 = bif:'=:=' _28, _21
  br _64, ^64, ^63

64:
  %% bs_utf_r24_SUITE.erl:123
  %% Aliased:
  %%    _22
  _29 = call (`list_to_little_utf16`/1), _22

  %% Unique:
  %%    _29
  _65 = succeeded:body _29
  br _65, ^65, ^1

65:
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _29
  _68 = bif:'=:=' _29, _19
  br _68, ^68, ^67

68:
  ret `ok`

67:
  %% bs_utf_r24_SUITE.erl:123
  %% Unique:
  %%    _29
  _30 = match_fail `badmatch`, _29

  %% Unique:
  %%    _30
  _69 = succeeded:body _30
  br _69, ^69, ^1

69:
  %% Unique:
  %%    _30
  ret _30

63:
  %% bs_utf_r24_SUITE.erl:122
  %% Unique:
  %%    _28
  _31 = match_fail `badmatch`, _28

  %% Unique:
  %%    _31
  _70 = succeeded:body _31
  br _70, ^70, ^1

70:
  %% Unique:
  %%    _31
  ret _31

59:
  %% bs_utf_r24_SUITE.erl:120
  %% Aliased:
  %%    _27
  _32 = match_fail `badmatch`, _27

  %% Unique:
  %%    _32
  _71 = succeeded:body _32
  br _71, ^71, ^1

71:
  %% Unique:
  %%    _32
  ret _32

55:
  %% bs_utf_r24_SUITE.erl:119
  %% Aliased:
  %%    _26
  _33 = match_fail `badmatch`, _26

  %% Unique:
  %%    _33
  _72 = succeeded:body _33
  br _72, ^72, ^1

72:
  %% Unique:
  %%    _33
  ret _33

52:
  %% bs_utf_r24_SUITE.erl:118
  %% Unique:
  %%    _25
  _34 = match_fail `badmatch`, _25

  %% Unique:
  %%    _34
  _75 = succeeded:body _34
  br _75, ^75, ^1

75:
  %% Unique:
  %%    _34
  ret _34

49:
  %% bs_utf_r24_SUITE.erl:117
  %% Unique:
  %%    _24
  _35 = match_fail `badmatch`, _24

  %% Unique:
  %%    _35
  _78 = succeeded:body _35
  br _78, ^78, ^1

78:
  %% Unique:
  %%    _35
  ret _35

44:
  %% bs_utf_r24_SUITE.erl:116
  %% Unique:
  %%    _17
  _36 = match_fail `badmatch`, _17

  %% Unique:
  %%    _36
  _83 = succeeded:body _36
  br _83, ^83, ^1

83:
  %% Unique:
  %%    _36
  ret _36

40:
  %% bs_utf_r24_SUITE.erl:115
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf16_roundtrip/1-',1}}
  _37 = match_fail `function_clause`, _0

  %% Unique:
  %%    _37
  _84 = succeeded:body _37
  br _84, ^84, ^1

84:
  %% Unique:
  %%    _37
  ret _37

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  ret _38
}

%% bs_utf_r24_SUITE.erl:127
%% Counter = 6
function `bs_utf_r24_SUITE`:`utf16_big_len`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:128
  %% Aliased:
  %%    _0
  _2 = call (`utf16_big_len`/2), _0, `0`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:130
%% Counter = 25
function `bs_utf_r24_SUITE`:`utf16_big_len`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _7 = bs_start_match `new`, _0

  %% Aliased:
  %%    _7
  _23 = succeeded:guard _7
  br _23, ^23, ^16

23:
  %% bs_utf_r24_SUITE.erl:130
  %% Aliased:
  %%    _7
  _8 = bs_match `skip`, _7, `utf16`, `[unsigned,big]`

  %% Aliased:
  %%    _8
  _18 = succeeded:guard _8
  br _18, ^18, ^17

18:
  %% bs_utf_r24_SUITE.erl:130
  %% Aliased:
  %%    _8
  _10 = bs_match `binary`, _8, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _10
  _19 = succeeded:guard _10
  br _19, ^19, ^17

19:
  %% Aliased:
  %%    _10
  _11 = bs_extract _10

  %% bs_utf_r24_SUITE.erl:131
  %% Unique:
  %%    _1
  _2 = bif:'+' _1, `1`

  %% Unique:
  %%    _2
  _20 = succeeded:body _2
  br _20, ^20, ^1

20:
  %% bs_utf_r24_SUITE.erl:131
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _2
  _12 = call (`utf16_big_len`/2), _11, _2

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Unique:
  %%    _12
  ret _12

17:
  %% Aliased:
  %%    _7
  _22 = bs_test_tail _7, `0`
  br _22, ^22, ^16

22:
  %% Unique:
  %%    _1
  ret _1

16:
  %% bs_utf_r24_SUITE.erl:130
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf16_big_len/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _24 = succeeded:body _13
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  ret _14
}

%% bs_utf_r24_SUITE.erl:134
%% Counter = 6
function `bs_utf_r24_SUITE`:`utf16_little_len`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:135
  %% Aliased:
  %%    _0
  _2 = call (`utf16_little_len`/2), _0, `0`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:137
%% Counter = 25
function `bs_utf_r24_SUITE`:`utf16_little_len`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _7 = bs_start_match `new`, _0

  %% Aliased:
  %%    _7
  _23 = succeeded:guard _7
  br _23, ^23, ^16

23:
  %% bs_utf_r24_SUITE.erl:137
  %% Aliased:
  %%    _7
  _8 = bs_match `skip`, _7, `utf16`, `[unsigned,little]`

  %% Aliased:
  %%    _8
  _18 = succeeded:guard _8
  br _18, ^18, ^17

18:
  %% bs_utf_r24_SUITE.erl:137
  %% Aliased:
  %%    _8
  _10 = bs_match `binary`, _8, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _10
  _19 = succeeded:guard _10
  br _19, ^19, ^17

19:
  %% Aliased:
  %%    _10
  _11 = bs_extract _10

  %% bs_utf_r24_SUITE.erl:138
  %% Unique:
  %%    _1
  _2 = bif:'+' _1, `1`

  %% Unique:
  %%    _2
  _20 = succeeded:body _2
  br _20, ^20, ^1

20:
  %% bs_utf_r24_SUITE.erl:138
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _2
  _12 = call (`utf16_little_len`/2), _11, _2

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Unique:
  %%    _12
  ret _12

17:
  %% Aliased:
  %%    _7
  _22 = bs_test_tail _7, `0`
  br _22, ^22, ^16

22:
  %% Unique:
  %%    _1
  ret _1

16:
  %% bs_utf_r24_SUITE.erl:137
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf16_little_len/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _24 = succeeded:body _13
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  ret _14
}

%% bs_utf_r24_SUITE.erl:141
%% Counter = 6
function `bs_utf_r24_SUITE`:`list_to_big_utf16`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:142
  %% Aliased:
  %%    _0
  _2 = call (`list_to_big_utf16`/2), _0, `<<>>`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:144
%% Counter = 19
function `bs_utf_r24_SUITE`:`list_to_big_utf16`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _16 = is_nonempty_list _0
  br _16, ^16, ^13

16:
  %% Aliased:
  %%    _0
  _7 = get_hd _0

  %% Aliased:
  %%    _0
  _6 = get_tl _0

  %% bs_utf_r24_SUITE.erl:145
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf16`, `[0,{segment,2}]`, _7, `undefined`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% bs_utf_r24_SUITE.erl:145
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _2
  _8 = call (`list_to_big_utf16`/2), _6, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `[]`
  br _17, ^17, ^12

17:
  %% Unique:
  %%    _1
  ret _1

12:
  %% bs_utf_r24_SUITE.erl:144
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-list_to_big_utf16/2-',2}}
  _9 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:148
%% Counter = 6
function `bs_utf_r24_SUITE`:`list_to_little_utf16`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:149
  %% Aliased:
  %%    _0
  _2 = call (`list_to_little_utf16`/2), _0, `<<>>`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:151
%% Counter = 19
function `bs_utf_r24_SUITE`:`list_to_little_utf16`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _16 = is_nonempty_list _0
  br _16, ^16, ^13

16:
  %% Aliased:
  %%    _0
  _7 = get_hd _0

  %% Aliased:
  %%    _0
  _6 = get_tl _0

  %% bs_utf_r24_SUITE.erl:152
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf16`, `[0,little,{segment,2}]`, _7, `undefined`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% bs_utf_r24_SUITE.erl:152
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _2
  _8 = call (`list_to_little_utf16`/2), _6, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `[]`
  br _17, ^17, ^12

17:
  %% Unique:
  %%    _1
  ret _1

12:
  %% bs_utf_r24_SUITE.erl:151
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-list_to_little_utf16/2-',2}}
  _9 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:155
%% Counter = 21
function `bs_utf_r24_SUITE`:`big_utf16_to_list`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^12

18:
  %% bs_utf_r24_SUITE.erl:155
  %% Aliased:
  %%    _3
  _4 = bs_match `utf16`, _3, `[unsigned,big]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% bs_utf_r24_SUITE.erl:155
  %% Aliased:
  %%    _4
  _6 = bs_match `binary`, _4, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^13

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% bs_utf_r24_SUITE.erl:156
  %% Aliased:
  %%    _7
  _1 = call (`big_utf16_to_list`/1), _7

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _1, 
  %%    _5
  _8 = put_list _5, _1
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _3
  _17 = bs_test_tail _3, `0`
  br _17, ^17, ^12

17:
  ret `[]`

12:
  %% bs_utf_r24_SUITE.erl:155
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-big_utf16_to_list/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br _19, ^19, ^1

19:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:159
%% Counter = 21
function `bs_utf_r24_SUITE`:`little_utf16_to_list`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^12

18:
  %% bs_utf_r24_SUITE.erl:159
  %% Aliased:
  %%    _3
  _4 = bs_match `utf16`, _3, `[unsigned,little]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% bs_utf_r24_SUITE.erl:159
  %% Aliased:
  %%    _4
  _6 = bs_match `binary`, _4, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^13

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% bs_utf_r24_SUITE.erl:160
  %% Aliased:
  %%    _7
  _1 = call (`little_utf16_to_list`/1), _7

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _1, 
  %%    _5
  _8 = put_list _5, _1
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _3
  _17 = bs_test_tail _3, `0`
  br _17, ^17, ^12

17:
  ret `[]`

12:
  %% bs_utf_r24_SUITE.erl:159
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-little_utf16_to_list/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br _19, ^19, ^1

19:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:163
%% Counter = 89
function `bs_utf_r24_SUITE`:`utf32_roundtrip`(_0) {
0:
  %% Aliased:
  %%    _0
  _41 = bif:is_list _0
  br _41, ^41, ^40

41:
  %% bs_utf_r24_SUITE.erl:164
  _17 = call (`utf32_data`/0)

  %% Unique:
  %%    _17
  _42 = succeeded:body _17
  br _42, ^42, ^1

42:
  %% Unique:
  %%    _17
  _80 = bif:is_tuple _17
  br _80, ^80, ^44

80:
  %% Unique:
  %%    _17
  _81 = bif:tuple_size _17

  %% Unique:
  %%    _81
  _82 = bif:'=:=' _81, `5`
  br _82, ^79, ^44

79:
  %% Unique:
  %%    _17
  _22 = get_tuple_element _17, `0`

  %% Unique:
  %%    _17
  _21 = get_tuple_element _17, `1`

  %% Unique:
  %%    _17
  _20 = get_tuple_element _17, `2`

  %% bs_utf_r24_SUITE.erl:164
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _20
  _11 = bif:'=:=' _20, _21
  br _11, ^87, ^44

87:
  %% Unique:
  %%    _17
  _19 = get_tuple_element _17, `3`

  %% Unique:
  %%    _17
  _18 = get_tuple_element _17, `4`

  %% bs_utf_r24_SUITE.erl:164
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _18
  _12 = bif:'=:=' _18, _19
  br _12, ^46, ^44

46:
  %% bs_utf_r24_SUITE.erl:165
  %% Aliased:
  %%    _21
  _24 = call (`utf32_big_len`/1), _21

  %% Unique:
  %%    _24
  _47 = succeeded:body _24
  br _47, ^47, ^1

47:
  %% Unique:
  %%    _24
  _77 = bif:'=:=' _24, `4`
  br _77, ^76, ^49

76:
  %% bs_utf_r24_SUITE.erl:166
  %% Aliased:
  %%    _19
  _25 = call (`utf32_little_len`/1), _19

  %% Unique:
  %%    _25
  _50 = succeeded:body _25
  br _50, ^50, ^1

50:
  %% Unique:
  %%    _25
  _74 = bif:'=:=' _25, `4`
  br _74, ^73, ^52

73:
  %% bs_utf_r24_SUITE.erl:167
  %% Aliased:
  %%    _21
  _26 = call (`big_utf32_to_list`/1), _21

  %% Aliased:
  %%    _26
  _53 = succeeded:body _26
  br _53, ^53, ^1

53:
  %% Aliased:
  %%    _22, 
  %%    _26
  _56 = bif:'=:=' _26, _22
  br _56, ^56, ^55

56:
  %% bs_utf_r24_SUITE.erl:168
  %% Aliased:
  %%    _19
  _27 = call (`little_utf32_to_list`/1), _19

  %% Aliased:
  %%    _27
  _57 = succeeded:body _27
  br _57, ^57, ^1

57:
  %% Aliased:
  %%    _22, 
  %%    _27
  _60 = bif:'=:=' _27, _22
  br _60, ^60, ^59

60:
  %% bs_utf_r24_SUITE.erl:170
  %% Aliased:
  %%    _22
  _28 = call (`list_to_big_utf32`/1), _22

  %% Unique:
  %%    _28
  _61 = succeeded:body _28
  br _61, ^61, ^1

61:
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _28
  _64 = bif:'=:=' _28, _21
  br _64, ^64, ^63

64:
  %% bs_utf_r24_SUITE.erl:171
  %% Aliased:
  %%    _22
  _29 = call (`list_to_little_utf32`/1), _22

  %% Unique:
  %%    _29
  _65 = succeeded:body _29
  br _65, ^65, ^1

65:
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _29
  _68 = bif:'=:=' _29, _19
  br _68, ^68, ^67

68:
  ret `ok`

67:
  %% bs_utf_r24_SUITE.erl:171
  %% Unique:
  %%    _29
  _30 = match_fail `badmatch`, _29

  %% Unique:
  %%    _30
  _69 = succeeded:body _30
  br _69, ^69, ^1

69:
  %% Unique:
  %%    _30
  ret _30

63:
  %% bs_utf_r24_SUITE.erl:170
  %% Unique:
  %%    _28
  _31 = match_fail `badmatch`, _28

  %% Unique:
  %%    _31
  _70 = succeeded:body _31
  br _70, ^70, ^1

70:
  %% Unique:
  %%    _31
  ret _31

59:
  %% bs_utf_r24_SUITE.erl:168
  %% Aliased:
  %%    _27
  _32 = match_fail `badmatch`, _27

  %% Unique:
  %%    _32
  _71 = succeeded:body _32
  br _71, ^71, ^1

71:
  %% Unique:
  %%    _32
  ret _32

55:
  %% bs_utf_r24_SUITE.erl:167
  %% Aliased:
  %%    _26
  _33 = match_fail `badmatch`, _26

  %% Unique:
  %%    _33
  _72 = succeeded:body _33
  br _72, ^72, ^1

72:
  %% Unique:
  %%    _33
  ret _33

52:
  %% bs_utf_r24_SUITE.erl:166
  %% Unique:
  %%    _25
  _34 = match_fail `badmatch`, _25

  %% Unique:
  %%    _34
  _75 = succeeded:body _34
  br _75, ^75, ^1

75:
  %% Unique:
  %%    _34
  ret _34

49:
  %% bs_utf_r24_SUITE.erl:165
  %% Unique:
  %%    _24
  _35 = match_fail `badmatch`, _24

  %% Unique:
  %%    _35
  _78 = succeeded:body _35
  br _78, ^78, ^1

78:
  %% Unique:
  %%    _35
  ret _35

44:
  %% bs_utf_r24_SUITE.erl:164
  %% Unique:
  %%    _17
  _36 = match_fail `badmatch`, _17

  %% Unique:
  %%    _36
  _83 = succeeded:body _36
  br _83, ^83, ^1

83:
  %% Unique:
  %%    _36
  ret _36

40:
  %% bs_utf_r24_SUITE.erl:163
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf32_roundtrip/1-',1}}
  _37 = match_fail `function_clause`, _0

  %% Unique:
  %%    _37
  _84 = succeeded:body _37
  br _84, ^84, ^1

84:
  %% Unique:
  %%    _37
  ret _37

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  ret _38
}

%% bs_utf_r24_SUITE.erl:175
%% Counter = 6
function `bs_utf_r24_SUITE`:`utf32_big_len`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:176
  %% Aliased:
  %%    _0
  _2 = call (`utf32_big_len`/2), _0, `0`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:178
%% Counter = 25
function `bs_utf_r24_SUITE`:`utf32_big_len`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _7 = bs_start_match `new`, _0

  %% Aliased:
  %%    _7
  _23 = succeeded:guard _7
  br _23, ^23, ^16

23:
  %% bs_utf_r24_SUITE.erl:178
  %% Aliased:
  %%    _7
  _8 = bs_match `skip`, _7, `utf32`, `[unsigned,big]`

  %% Aliased:
  %%    _8
  _18 = succeeded:guard _8
  br _18, ^18, ^17

18:
  %% bs_utf_r24_SUITE.erl:178
  %% Aliased:
  %%    _8
  _10 = bs_match `binary`, _8, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _10
  _19 = succeeded:guard _10
  br _19, ^19, ^17

19:
  %% Aliased:
  %%    _10
  _11 = bs_extract _10

  %% bs_utf_r24_SUITE.erl:179
  %% Unique:
  %%    _1
  _2 = bif:'+' _1, `1`

  %% Unique:
  %%    _2
  _20 = succeeded:body _2
  br _20, ^20, ^1

20:
  %% bs_utf_r24_SUITE.erl:179
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _2
  _12 = call (`utf32_big_len`/2), _11, _2

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Unique:
  %%    _12
  ret _12

17:
  %% Aliased:
  %%    _7
  _22 = bs_test_tail _7, `0`
  br _22, ^22, ^16

22:
  %% Unique:
  %%    _1
  ret _1

16:
  %% bs_utf_r24_SUITE.erl:178
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf32_big_len/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _24 = succeeded:body _13
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  ret _14
}

%% bs_utf_r24_SUITE.erl:182
%% Counter = 6
function `bs_utf_r24_SUITE`:`utf32_little_len`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:183
  %% Aliased:
  %%    _0
  _2 = call (`utf32_little_len`/2), _0, `0`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:185
%% Counter = 25
function `bs_utf_r24_SUITE`:`utf32_little_len`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _7 = bs_start_match `new`, _0

  %% Aliased:
  %%    _7
  _23 = succeeded:guard _7
  br _23, ^23, ^16

23:
  %% bs_utf_r24_SUITE.erl:185
  %% Aliased:
  %%    _7
  _8 = bs_match `skip`, _7, `utf32`, `[unsigned,little]`

  %% Aliased:
  %%    _8
  _18 = succeeded:guard _8
  br _18, ^18, ^17

18:
  %% bs_utf_r24_SUITE.erl:185
  %% Aliased:
  %%    _8
  _10 = bs_match `binary`, _8, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _10
  _19 = succeeded:guard _10
  br _19, ^19, ^17

19:
  %% Aliased:
  %%    _10
  _11 = bs_extract _10

  %% bs_utf_r24_SUITE.erl:186
  %% Unique:
  %%    _1
  _2 = bif:'+' _1, `1`

  %% Unique:
  %%    _2
  _20 = succeeded:body _2
  br _20, ^20, ^1

20:
  %% bs_utf_r24_SUITE.erl:186
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _2
  _12 = call (`utf32_little_len`/2), _11, _2

  %% Unique:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Unique:
  %%    _12
  ret _12

17:
  %% Aliased:
  %%    _7
  _22 = bs_test_tail _7, `0`
  br _22, ^22, ^16

22:
  %% Unique:
  %%    _1
  ret _1

16:
  %% bs_utf_r24_SUITE.erl:185
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf32_little_len/2-',2}}
  _13 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _13
  _24 = succeeded:body _13
  br _24, ^24, ^1

24:
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  ret _14
}

%% bs_utf_r24_SUITE.erl:189
%% Counter = 6
function `bs_utf_r24_SUITE`:`list_to_big_utf32`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:190
  %% Aliased:
  %%    _0
  _2 = call (`list_to_big_utf32`/2), _0, `<<>>`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:192
%% Counter = 19
function `bs_utf_r24_SUITE`:`list_to_big_utf32`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _16 = is_nonempty_list _0
  br _16, ^16, ^13

16:
  %% Aliased:
  %%    _0
  _7 = get_hd _0

  %% Aliased:
  %%    _0
  _6 = get_tl _0

  %% bs_utf_r24_SUITE.erl:193
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf32`, `[0,{segment,2}]`, _7, `undefined`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% bs_utf_r24_SUITE.erl:193
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _2
  _8 = call (`list_to_big_utf32`/2), _6, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `[]`
  br _17, ^17, ^12

17:
  %% Unique:
  %%    _1
  ret _1

12:
  %% bs_utf_r24_SUITE.erl:192
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-list_to_big_utf32/2-',2}}
  _9 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:196
%% Counter = 6
function `bs_utf_r24_SUITE`:`list_to_little_utf32`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:197
  %% Aliased:
  %%    _0
  _2 = call (`list_to_little_utf32`/2), _0, `<<>>`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:199
%% Counter = 19
function `bs_utf_r24_SUITE`:`list_to_little_utf32`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _16 = is_nonempty_list _0
  br _16, ^16, ^13

16:
  %% Aliased:
  %%    _0
  _7 = get_hd _0

  %% Aliased:
  %%    _0
  _6 = get_tl _0

  %% bs_utf_r24_SUITE.erl:200
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf32`, `[0,little,{segment,2}]`, _7, `undefined`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% bs_utf_r24_SUITE.erl:200
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _2
  _8 = call (`list_to_little_utf32`/2), _6, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `[]`
  br _17, ^17, ^12

17:
  %% Unique:
  %%    _1
  ret _1

12:
  %% bs_utf_r24_SUITE.erl:199
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-list_to_little_utf32/2-',2}}
  _9 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:203
%% Counter = 21
function `bs_utf_r24_SUITE`:`big_utf32_to_list`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^12

18:
  %% bs_utf_r24_SUITE.erl:203
  %% Aliased:
  %%    _3
  _4 = bs_match `utf32`, _3, `[unsigned,big]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% bs_utf_r24_SUITE.erl:203
  %% Aliased:
  %%    _4
  _6 = bs_match `binary`, _4, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^13

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% bs_utf_r24_SUITE.erl:204
  %% Aliased:
  %%    _7
  _1 = call (`big_utf32_to_list`/1), _7

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _1, 
  %%    _5
  _8 = put_list _5, _1
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _3
  _17 = bs_test_tail _3, `0`
  br _17, ^17, ^12

17:
  ret `[]`

12:
  %% bs_utf_r24_SUITE.erl:203
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-big_utf32_to_list/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br _19, ^19, ^1

19:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:207
%% Counter = 21
function `bs_utf_r24_SUITE`:`little_utf32_to_list`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^12

18:
  %% bs_utf_r24_SUITE.erl:207
  %% Aliased:
  %%    _3
  _4 = bs_match `utf32`, _3, `[unsigned,little]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% bs_utf_r24_SUITE.erl:207
  %% Aliased:
  %%    _4
  _6 = bs_match `binary`, _4, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^13

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% bs_utf_r24_SUITE.erl:208
  %% Aliased:
  %%    _7
  _1 = call (`little_utf32_to_list`/1), _7

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _1, 
  %%    _5
  _8 = put_list _5, _1
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _3
  _17 = bs_test_tail _3, `0`
  br _17, ^17, ^12

17:
  ret `[]`

12:
  %% bs_utf_r24_SUITE.erl:207
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-little_utf32_to_list/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br _19, ^19, ^1

19:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:212
%% Counter = 17
function `bs_utf_r24_SUITE`:`guard`(_0) {
0:
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% bs_utf_r24_SUITE.erl:213
  _3 = call (`do_guard`/1), `55296`

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Unique:
  %%    _3
  _14 = bif:'=:=' _3, `error`
  br _14, ^13, ^12

13:
  ret `ok`

12:
  %% bs_utf_r24_SUITE.erl:213
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _15 = succeeded:body _4
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _4
  ret _4

8:
  %% bs_utf_r24_SUITE.erl:212
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-guard/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br _16, ^16, ^1

16:
  %% Unique:
  %%    _5
  ret _5

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  ret _6
}

%% bs_utf_r24_SUITE.erl:216
%% Counter = 34
function `bs_utf_r24_SUITE`:`do_guard`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:216
  %% Aliased:
  %%    _0
  _1 = bs_create_bin `utf8`, `[0,{segment,1}]`, _0, `undefined`

  %% Aliased:
  %%    _1
  _22 = succeeded:guard _1
  br _22, ^22, ^20

22:
  %% bs_utf_r24_SUITE.erl:216
  %% Aliased:
  %%    _1
  _2 = bif:byte_size _1

  %% Unique:
  %%    _2
  _23 = succeeded:guard _2
  br _23, ^23, ^20

23:
  %% Unique:
  %%    _2
  _24 = bif:'=:=' _2, `42`
  br _24, ^20, ^24

24:
  ret `ok`

20:
  %% bs_utf_r24_SUITE.erl:217
  %% Aliased:
  %%    _0
  _3 = bs_create_bin `utf16`, `[0,{segment,1}]`, _0, `undefined`

  %% Aliased:
  %%    _3
  _27 = succeeded:guard _3
  br _27, ^27, ^25

27:
  %% bs_utf_r24_SUITE.erl:217
  %% Aliased:
  %%    _3
  _4 = bif:byte_size _3

  %% Unique:
  %%    _4
  _28 = succeeded:guard _4
  br _28, ^28, ^25

28:
  %% Unique:
  %%    _4
  _29 = bif:'=:=' _4, `42`
  br _29, ^25, ^29

29:
  ret `ok`

25:
  %% bs_utf_r24_SUITE.erl:218
  %% Aliased:
  %%    _0
  _5 = bs_create_bin `utf32`, `[0,{segment,1}]`, _0, `undefined`

  %% Aliased:
  %%    _5
  _31 = succeeded:guard _5
  br _31, ^31, ^19

31:
  %% bs_utf_r24_SUITE.erl:218
  %% Aliased:
  %%    _5
  _6 = bif:byte_size _5

  %% Unique:
  %%    _6
  _32 = succeeded:guard _6
  br _32, ^32, ^19

32:
  %% Unique:
  %%    _6
  _33 = bif:'=:=' _6, `42`
  br _33, ^19, ^33

33:
  ret `ok`

19:
  ret `error`
}

%% bs_utf_r24_SUITE.erl:224
%% Counter = 43
function `bs_utf_r24_SUITE`:`extreme_tripping`(_0) {
0:
  %% Aliased:
  %%    _0
  _22 = bif:is_list _0
  br _22, ^22, ^21

22:
  %% bs_utf_r24_SUITE.erl:225
  Unicode = call (`lists`:`seq`/2), `0`, `1024`

  %% Aliased:
  %%    Unicode
  _23 = succeeded:body Unicode
  br _23, ^23, ^1

23:
  %% bs_utf_r24_SUITE.erl:226
  %% Aliased:
  %%    Unicode
  Utf8 = call (`unicode_to_utf8`/2), Unicode, `<<>>`

  %% Aliased:
  %%    Utf8
  _24 = succeeded:body Utf8
  br _24, ^24, ^1

24:
  %% bs_utf_r24_SUITE.erl:227
  %% Aliased:
  %%    Utf8
  Utf16 = call (`utf8_to_utf16`/2), Utf8, `<<>>`

  %% Unique:
  %%    Utf16
  _25 = succeeded:body Utf16
  br _25, ^25, ^1

25:
  %% bs_utf_r24_SUITE.erl:228
  %% Aliased:
  %%    Utf8
  Utf32 = call (`utf8_to_utf32`/2), Utf8, `<<>>`

  %% Aliased:
  %%    Utf32
  _26 = succeeded:body Utf32
  br _26, ^26, ^1

26:
  %% bs_utf_r24_SUITE.erl:229
  %% Unique:
  %%    Utf16
  _12 = call (`utf16_to_utf32`/2), Utf16, `<<>>`

  %% Unique:
  %%    _12
  _27 = succeeded:body _12
  br _27, ^27, ^1

27:
  %% Aliased:
  %%    Utf32
  %% Unique:
  %%    _12
  _30 = bif:'=:=' _12, Utf32
  br _30, ^30, ^29

30:
  %% bs_utf_r24_SUITE.erl:230
  %% Aliased:
  %%    Utf32
  _13 = call (`utf32_to_utf8`/2), Utf32, `<<>>`

  %% Unique:
  %%    _13
  _31 = succeeded:body _13
  br _31, ^31, ^1

31:
  %% Aliased:
  %%    Utf8
  %% Unique:
  %%    _13
  _34 = bif:'=:=' _13, Utf8
  br _34, ^34, ^33

34:
  %% bs_utf_r24_SUITE.erl:231
  %% Aliased:
  %%    Utf32
  _14 = call (`utf32_to_unicode`/1), Utf32

  %% Aliased:
  %%    _14
  _35 = succeeded:body _14
  br _35, ^35, ^1

35:
  %% Aliased:
  %%    _14, 
  %%    Unicode
  _38 = bif:'=:=' _14, Unicode
  br _38, ^38, ^37

38:
  ret `ok`

37:
  %% bs_utf_r24_SUITE.erl:231
  %% Aliased:
  %%    _14
  _15 = match_fail `badmatch`, _14

  %% Unique:
  %%    _15
  _39 = succeeded:body _15
  br _39, ^39, ^1

39:
  %% Unique:
  %%    _15
  ret _15

33:
  %% bs_utf_r24_SUITE.erl:230
  %% Unique:
  %%    _13
  _16 = match_fail `badmatch`, _13

  %% Unique:
  %%    _16
  _40 = succeeded:body _16
  br _40, ^40, ^1

40:
  %% Unique:
  %%    _16
  ret _16

29:
  %% bs_utf_r24_SUITE.erl:229
  %% Unique:
  %%    _12
  _17 = match_fail `badmatch`, _12

  %% Unique:
  %%    _17
  _41 = succeeded:body _17
  br _41, ^41, ^1

41:
  %% Unique:
  %%    _17
  ret _17

21:
  %% bs_utf_r24_SUITE.erl:224
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-extreme_tripping/1-',1}}
  _18 = match_fail `function_clause`, _0

  %% Unique:
  %%    _18
  _42 = succeeded:body _18
  br _42, ^42, ^1

42:
  %% Unique:
  %%    _18
  ret _18

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  ret _19
}

%% bs_utf_r24_SUITE.erl:234
%% Counter = 19
function `bs_utf_r24_SUITE`:`unicode_to_utf8`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _16 = is_nonempty_list _0
  br _16, ^16, ^13

16:
  %% Aliased:
  %%    _0
  _7 = get_hd _0

  %% Aliased:
  %%    _0
  _6 = get_tl _0

  %% bs_utf_r24_SUITE.erl:235
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf8`, `[0,{segment,2}]`, _7, `undefined`

  %% Unique:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% bs_utf_r24_SUITE.erl:235
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _2
  _8 = call (`unicode_to_utf8`/2), _6, _2

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br _15, ^15, ^1

15:
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _0
  _17 = bif:'=:=' _0, `[]`
  br _17, ^17, ^12

17:
  %% Unique:
  %%    _1
  ret _1

12:
  %% bs_utf_r24_SUITE.erl:234
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-unicode_to_utf8/2-',2}}
  _9 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _9
  _18 = succeeded:body _9
  br _18, ^18, ^1

18:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:238
%% Counter = 24
function `bs_utf_r24_SUITE`:`utf8_to_utf16`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _6 = bs_start_match `new`, _0

  %% Aliased:
  %%    _6
  _22 = succeeded:guard _6
  br _22, ^22, ^15

22:
  %% bs_utf_r24_SUITE.erl:238
  %% Aliased:
  %%    _6
  _7 = bs_match `utf8`, _6, `[unsigned,big]`

  %% Aliased:
  %%    _7
  _17 = succeeded:guard _7
  br _17, ^17, ^16

17:
  %% Aliased:
  %%    _7
  _8 = bs_extract _7

  %% bs_utf_r24_SUITE.erl:238
  %% Aliased:
  %%    _7
  _9 = bs_match `binary`, _7, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _9
  _18 = succeeded:guard _9
  br _18, ^18, ^16

18:
  %% Aliased:
  %%    _9
  _10 = bs_extract _9

  %% bs_utf_r24_SUITE.erl:239
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf16`, `[0,{segment,2}]`, _8, `undefined`

  %% Unique:
  %%    _2
  _19 = succeeded:body _2
  br _19, ^19, ^1

19:
  %% bs_utf_r24_SUITE.erl:239
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _2
  _11 = call (`utf8_to_utf16`/2), _10, _2

  %% Unique:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Unique:
  %%    _11
  ret _11

16:
  %% Aliased:
  %%    _6
  _21 = bs_test_tail _6, `0`
  br _21, ^21, ^15

21:
  %% Unique:
  %%    _1
  ret _1

15:
  %% bs_utf_r24_SUITE.erl:238
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf8_to_utf16/2-',2}}
  _12 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _12
  _23 = succeeded:body _12
  br _23, ^23, ^1

23:
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% bs_utf_r24_SUITE.erl:242
%% Counter = 24
function `bs_utf_r24_SUITE`:`utf16_to_utf32`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _6 = bs_start_match `new`, _0

  %% Aliased:
  %%    _6
  _22 = succeeded:guard _6
  br _22, ^22, ^15

22:
  %% bs_utf_r24_SUITE.erl:242
  %% Aliased:
  %%    _6
  _7 = bs_match `utf16`, _6, `[unsigned,big]`

  %% Aliased:
  %%    _7
  _17 = succeeded:guard _7
  br _17, ^17, ^16

17:
  %% Aliased:
  %%    _7
  _8 = bs_extract _7

  %% bs_utf_r24_SUITE.erl:242
  %% Aliased:
  %%    _7
  _9 = bs_match `binary`, _7, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _9
  _18 = succeeded:guard _9
  br _18, ^18, ^16

18:
  %% Aliased:
  %%    _9
  _10 = bs_extract _9

  %% bs_utf_r24_SUITE.erl:243
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf32`, `[0,{segment,2}]`, _8, `undefined`

  %% Unique:
  %%    _2
  _19 = succeeded:body _2
  br _19, ^19, ^1

19:
  %% bs_utf_r24_SUITE.erl:243
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _2
  _11 = call (`utf16_to_utf32`/2), _10, _2

  %% Unique:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Unique:
  %%    _11
  ret _11

16:
  %% Aliased:
  %%    _6
  _21 = bs_test_tail _6, `0`
  br _21, ^21, ^15

21:
  %% Unique:
  %%    _1
  ret _1

15:
  %% bs_utf_r24_SUITE.erl:242
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf16_to_utf32/2-',2}}
  _12 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _12
  _23 = succeeded:body _12
  br _23, ^23, ^1

23:
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% bs_utf_r24_SUITE.erl:246
%% Counter = 24
function `bs_utf_r24_SUITE`:`utf8_to_utf32`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _6 = bs_start_match `new`, _0

  %% Aliased:
  %%    _6
  _22 = succeeded:guard _6
  br _22, ^22, ^15

22:
  %% bs_utf_r24_SUITE.erl:246
  %% Aliased:
  %%    _6
  _7 = bs_match `utf8`, _6, `[unsigned,big]`

  %% Aliased:
  %%    _7
  _17 = succeeded:guard _7
  br _17, ^17, ^16

17:
  %% Aliased:
  %%    _7
  _8 = bs_extract _7

  %% bs_utf_r24_SUITE.erl:246
  %% Aliased:
  %%    _7
  _9 = bs_match `binary`, _7, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _9
  _18 = succeeded:guard _9
  br _18, ^18, ^16

18:
  %% Aliased:
  %%    _9
  _10 = bs_extract _9

  %% bs_utf_r24_SUITE.erl:247
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf32`, `[0,{segment,2}]`, _8, `undefined`

  %% Unique:
  %%    _2
  _19 = succeeded:body _2
  br _19, ^19, ^1

19:
  %% bs_utf_r24_SUITE.erl:247
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _2
  _11 = call (`utf8_to_utf32`/2), _10, _2

  %% Unique:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Unique:
  %%    _11
  ret _11

16:
  %% Aliased:
  %%    _6
  _21 = bs_test_tail _6, `0`
  br _21, ^21, ^15

21:
  %% Unique:
  %%    _1
  ret _1

15:
  %% bs_utf_r24_SUITE.erl:246
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf8_to_utf32/2-',2}}
  _12 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _12
  _23 = succeeded:body _12
  br _23, ^23, ^1

23:
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% bs_utf_r24_SUITE.erl:250
%% Counter = 24
function `bs_utf_r24_SUITE`:`utf32_to_utf8`(_0, _1) {
0:
  %% Aliased:
  %%    _0
  _6 = bs_start_match `new`, _0

  %% Aliased:
  %%    _6
  _22 = succeeded:guard _6
  br _22, ^22, ^15

22:
  %% bs_utf_r24_SUITE.erl:250
  %% Aliased:
  %%    _6
  _7 = bs_match `utf32`, _6, `[unsigned,big]`

  %% Aliased:
  %%    _7
  _17 = succeeded:guard _7
  br _17, ^17, ^16

17:
  %% Aliased:
  %%    _7
  _8 = bs_extract _7

  %% bs_utf_r24_SUITE.erl:250
  %% Aliased:
  %%    _7
  _9 = bs_match `binary`, _7, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _9
  _18 = succeeded:guard _9
  br _18, ^18, ^16

18:
  %% Aliased:
  %%    _9
  _10 = bs_extract _9

  %% bs_utf_r24_SUITE.erl:251
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _1
  %% Anno: #{first_fragment_dies => true}
  _2 = bs_create_bin `append`, `[8,{segment,1}]`, _1, `all`, `utf8`, `[0,{segment,2}]`, _8, `undefined`

  %% Unique:
  %%    _2
  _19 = succeeded:body _2
  br _19, ^19, ^1

19:
  %% bs_utf_r24_SUITE.erl:251
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _2
  _11 = call (`utf32_to_utf8`/2), _10, _2

  %% Unique:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  %% Unique:
  %%    _11
  ret _11

16:
  %% Aliased:
  %%    _6
  _21 = bs_test_tail _6, `0`
  br _21, ^21, ^15

21:
  %% Unique:
  %%    _1
  ret _1

15:
  %% bs_utf_r24_SUITE.erl:250
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-utf32_to_utf8/2-',2}}
  _12 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _12
  _23 = succeeded:body _12
  br _23, ^23, ^1

23:
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  ret _13
}

%% bs_utf_r24_SUITE.erl:254
%% Counter = 21
function `bs_utf_r24_SUITE`:`utf32_to_unicode`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _18 = succeeded:guard _3
  br _18, ^18, ^12

18:
  %% bs_utf_r24_SUITE.erl:254
  %% Aliased:
  %%    _3
  _4 = bs_match `utf32`, _3, `[unsigned,big]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% bs_utf_r24_SUITE.erl:254
  %% Aliased:
  %%    _4
  _6 = bs_match `binary`, _4, `[unsigned,big]`, `all`, `8`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^13

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% bs_utf_r24_SUITE.erl:255
  %% Aliased:
  %%    _7
  _1 = call (`utf32_to_unicode`/1), _7

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% Aliased:
  %%    _1, 
  %%    _5
  _8 = put_list _5, _1
  %% Unique:
  %%    _8
  ret _8

13:
  %% Aliased:
  %%    _3
  _17 = bs_test_tail _3, `0`
  br _17, ^17, ^12

17:
  ret `[]`

12:
  %% bs_utf_r24_SUITE.erl:254
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-utf32_to_unicode/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _19 = succeeded:body _9
  br _19, ^19, ^1

19:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:258
%% Counter = 1092
function `bs_utf_r24_SUITE`:`literals`(_0) {
0:
  %% Aliased:
  %%    _0
  _265 = bif:is_list _0
  br _265, ^265, ^264

265:
  %% bs_utf_r24_SUITE.erl:259
  _88 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _88
  _266 = succeeded:body _88
  br _266, ^266, ^1

266:
  %% Unique:
  %%    _88
  _834 = bif:'=:=' _88, `<<>>`
  br _834, ^834, ^268

834:
  %% bs_utf_r24_SUITE.erl:260
  _89 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _89
  _269 = succeeded:body _89
  br _269, ^269, ^1

269:
  %% Unique:
  %%    _89
  _832 = bif:'=:=' _89, `<<>>`
  br _832, ^832, ^271

832:
  %% bs_utf_r24_SUITE.erl:261
  _90 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _90
  _272 = succeeded:body _90
  br _272, ^272, ^1

272:
  %% Unique:
  %%    _90
  _830 = bif:'=:=' _90, `<<>>`
  br _830, ^830, ^274

830:
  %% bs_utf_r24_SUITE.erl:262
  _91 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _91
  _275 = succeeded:body _91
  br _275, ^275, ^1

275:
  %% Unique:
  %%    _91
  _828 = bif:'=:=' _91, `<<>>`
  br _828, ^828, ^277

828:
  %% bs_utf_r24_SUITE.erl:263
  _92 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _92
  _278 = succeeded:body _92
  br _278, ^278, ^1

278:
  %% Unique:
  %%    _92
  _826 = bif:'=:=' _92, `<<>>`
  br _826, ^826, ^280

826:
  %% bs_utf_r24_SUITE.erl:264
  _93 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _93
  _281 = succeeded:body _93
  br _281, ^281, ^1

281:
  %% Unique:
  %%    _93
  _824 = bif:'=:=' _93, `<<>>`
  br _824, ^824, ^283

824:
  %% bs_utf_r24_SUITE.erl:265
  _94 = call (`id`/1), `<<>>`

  %% Unique:
  %%    _94
  _284 = succeeded:body _94
  br _284, ^284, ^1

284:
  %% Unique:
  %%    _94
  _822 = bif:'=:=' _94, `<<>>`
  br _822, ^822, ^286

822:
  %% bs_utf_r24_SUITE.erl:267
  _95 = call (`match_literal`/1), `<<"abc">>`

  %% Unique:
  %%    _95
  _287 = succeeded:body _95
  br _287, ^287, ^1

287:
  %% Unique:
  %%    _95
  _820 = bif:'=:=' _95, `abc_utf8`
  br _820, ^819, ^289

819:
  %% bs_utf_r24_SUITE.erl:268
  _96 = call (`match_literal`/1), `<<"abc">>`

  %% Unique:
  %%    _96
  _290 = succeeded:body _96
  br _290, ^290, ^1

290:
  %% Unique:
  %%    _96
  _817 = bif:'=:=' _96, `abc_utf8`
  br _817, ^816, ^292

816:
  %% bs_utf_r24_SUITE.erl:269
  _97 = call (`match_literal`/1), `<<"abc">>`

  %% Unique:
  %%    _97
  _293 = succeeded:body _97
  br _293, ^293, ^1

293:
  %% Unique:
  %%    _97
  _814 = bif:'=:=' _97, `abc_utf8`
  br _814, ^813, ^295

813:
  %% bs_utf_r24_SUITE.erl:271
  _98 = call (`match_literal`/1), `<<0,97,0,98,0,99>>`

  %% Unique:
  %%    _98
  _296 = succeeded:body _98
  br _296, ^296, ^1

296:
  %% Unique:
  %%    _98
  _811 = bif:'=:=' _98, `abc_utf16be`
  br _811, ^810, ^298

810:
  %% bs_utf_r24_SUITE.erl:272
  _99 = call (`match_literal`/1), `<<0,97,0,98,0,99>>`

  %% Unique:
  %%    _99
  _299 = succeeded:body _99
  br _299, ^299, ^1

299:
  %% Unique:
  %%    _99
  _808 = bif:'=:=' _99, `abc_utf16be`
  br _808, ^807, ^301

807:
  %% bs_utf_r24_SUITE.erl:273
  _100 = call (`match_literal`/1), `<<97,0,98,0,99,0>>`

  %% Unique:
  %%    _100
  _302 = succeeded:body _100
  br _302, ^302, ^1

302:
  %% Unique:
  %%    _100
  _805 = bif:'=:=' _100, `abc_utf16le`
  br _805, ^804, ^304

804:
  %% bs_utf_r24_SUITE.erl:274
  _101 = call (`match_literal`/1), `<<97,0,98,0,99,0>>`

  %% Unique:
  %%    _101
  _305 = succeeded:body _101
  br _305, ^305, ^1

305:
  %% Unique:
  %%    _101
  _802 = bif:'=:=' _101, `abc_utf16le`
  br _802, ^801, ^307

801:
  %% bs_utf_r24_SUITE.erl:276
  _102 = call (`match_literal`/1), `<<0,0,0,97,0,0,0,98,0,0,0,99>>`

  %% Unique:
  %%    _102
  _308 = succeeded:body _102
  br _308, ^308, ^1

308:
  %% Unique:
  %%    _102
  _799 = bif:'=:=' _102, `abc_utf32be`
  br _799, ^798, ^310

798:
  %% bs_utf_r24_SUITE.erl:277
  _103 = call (`match_literal`/1), `<<0,0,0,97,0,0,0,98,0,0,0,99>>`

  %% Unique:
  %%    _103
  _311 = succeeded:body _103
  br _311, ^311, ^1

311:
  %% Unique:
  %%    _103
  _796 = bif:'=:=' _103, `abc_utf32be`
  br _796, ^795, ^313

795:
  %% bs_utf_r24_SUITE.erl:278
  _104 = call (`match_literal`/1), `<<97,0,0,0,98,0,0,0,99,0,0,0>>`

  %% Unique:
  %%    _104
  _314 = succeeded:body _104
  br _314, ^314, ^1

314:
  %% Unique:
  %%    _104
  _793 = bif:'=:=' _104, `abc_utf32le`
  br _793, ^792, ^316

792:
  %% bs_utf_r24_SUITE.erl:279
  _105 = call (`match_literal`/1), `<<97,0,0,0,98,0,0,0,99,0,0,0>>`

  %% Unique:
  %%    _105
  _317 = succeeded:body _105
  br _317, ^317, ^1

317:
  %% Unique:
  %%    _105
  _790 = bif:'=:=' _105, `abc_utf32le`
  br _790, ^789, ^319

789:
  %% bs_utf_r24_SUITE.erl:281
  _106 = call (`match_literal`/1), `<<208,156,208,176,209,129,209,130,208,181,209,128,32,208,184,32,208,156,208,
   176,209,128,208,179,208,176,209,128,208,184,209,130,208,176>>`

  %% Unique:
  %%    _106
  _320 = succeeded:body _106
  br _320, ^320, ^1

320:
  %% Unique:
  %%    _106
  _787 = bif:'=:=' _106, `mm_utf8`
  br _787, ^786, ^322

786:
  %% bs_utf_r24_SUITE.erl:282
  _107 = call (`match_literal`/1), `<<4,28,4,48,4,65,4,66,4,53,4,64,0,32,4,56,0,32,4,28,4,48,4,64,4,51,4,48,4,64,
   4,56,4,66,4,48>>`

  %% Unique:
  %%    _107
  _323 = succeeded:body _107
  br _323, ^323, ^1

323:
  %% Unique:
  %%    _107
  _784 = bif:'=:=' _107, `mm_utf16be`
  br _784, ^783, ^325

783:
  %% bs_utf_r24_SUITE.erl:283
  _108 = call (`match_literal`/1), `<<0,0,4,28,0,0,4,48,0,0,4,65,0,0,4,66,0,0,4,53,0,0,4,64,0,0,0,32,0,0,4,56,0,0,
   0,32,0,0,4,28,0,0,4,48,0,0,4,64,0,0,4,51,0,0,4,48,0,0,4,64,0,0,4,56,0,0,4,
   66,0,0,4,48>>`

  %% Unique:
  %%    _108
  _326 = succeeded:body _108
  br _326, ^326, ^1

326:
  %% Unique:
  %%    _108
  _781 = bif:'=:=' _108, `mm_utf32be`
  br _781, ^780, ^328

780:
  %% bs_utf_r24_SUITE.erl:285
  _109 = call (`match_literal`/1), `<<"bjÃ¶rn">>`

  %% Unique:
  %%    _109
  _329 = succeeded:body _109
  br _329, ^329, ^1

329:
  %% Unique:
  %%    _109
  _778 = bif:'=:=' _109, `bjorn_utf8`
  br _778, ^777, ^331

777:
  %% bs_utf_r24_SUITE.erl:286
  _110 = call (`match_literal`/1), `<<"bjÃ¶rn">>`

  %% Unique:
  %%    _110
  _332 = succeeded:body _110
  br _332, ^332, ^1

332:
  %% Unique:
  %%    _110
  _775 = bif:'=:=' _110, `bjorn_utf8`
  br _775, ^774, ^334

774:
  %% bs_utf_r24_SUITE.erl:288
  _111 = call (`match_literal`/1), `<<0,98,0,106,0,246,0,114,0,110>>`

  %% Unique:
  %%    _111
  _335 = succeeded:body _111
  br _335, ^335, ^1

335:
  %% Unique:
  %%    _111
  _772 = bif:'=:=' _111, `bjorn_utf16be`
  br _772, ^771, ^337

771:
  %% bs_utf_r24_SUITE.erl:289
  _112 = call (`match_literal`/1), `<<0,98,0,106,0,246,0,114,0,110>>`

  %% Unique:
  %%    _112
  _338 = succeeded:body _112
  br _338, ^338, ^1

338:
  %% Unique:
  %%    _112
  _769 = bif:'=:=' _112, `bjorn_utf16be`
  br _769, ^768, ^340

768:
  %% bs_utf_r24_SUITE.erl:290
  _113 = call (`match_literal`/1), `<<98,0,106,0,246,0,114,0,110,0>>`

  %% Unique:
  %%    _113
  _341 = succeeded:body _113
  br _341, ^341, ^1

341:
  %% Unique:
  %%    _113
  _766 = bif:'=:=' _113, `bjorn_utf16le`
  br _766, ^765, ^343

765:
  %% bs_utf_r24_SUITE.erl:291
  _114 = call (`match_literal`/1), `<<98,0,106,0,246,0,114,0,110,0>>`

  %% Unique:
  %%    _114
  _344 = succeeded:body _114
  br _344, ^344, ^1

344:
  %% Unique:
  %%    _114
  _763 = bif:'=:=' _114, `bjorn_utf16le`
  br _763, ^1062, ^346

1062:
  br ^1077

1077:
  _352 = new_try_tag `'catch'`
  br _352, ^350, ^351

350:
  %% bs_utf_r24_SUITE.erl:298
  _183 = bs_create_bin `utf8`, `[0,{segment,1}]`, `-1`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _183
  _354 = succeeded:body _183
  br _354, ^354, ^351

354:
  br ^349

351:
  %% Unique:
  %%    _352
  _357 = landingpad `'catch'`, _352

  %% Aliased:
  %%    _357
  _355 = extract _357, `0`
  br ^349

349:
  _358 = phi { _355, ^351 }, { _183, ^354 }

  %% Aliased:
  %%    _358
  %% Unique:
  %%    _352
  _31 = catch_end _352, _358

  %% Aliased:
  %%    _31
  _756 = is_tagged_tuple _31, `2`, `'EXIT'`
  br _756, ^755, ^360

755:
  %% Aliased:
  %%    _31
  _117 = get_tuple_element _31, `0`

  %% Aliased:
  %%    _117
  _754 = bif:'=:=' _117, `'EXIT'`
  br _754, ^753, ^360

753:
  %% Aliased:
  %%    _31
  _116 = get_tuple_element _31, `1`

  %% Aliased:
  %%    _116
  _750 = is_tagged_tuple _116, `2`, `badarg`
  br _750, ^749, ^360

749:
  %% Aliased:
  %%    _116
  _119 = get_tuple_element _116, `0`

  %% Aliased:
  %%    _119
  _748 = bif:'=:=' _119, `badarg`
  br _748, ^1063, ^360

1063:
  br ^1078

1078:
  _364 = new_try_tag `'catch'`
  br _364, ^362, ^363

362:
  %% bs_utf_r24_SUITE.erl:299
  _185 = bs_create_bin `utf16`, `[0,{segment,1}]`, `-1`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _185
  _366 = succeeded:body _185
  br _366, ^366, ^363

366:
  br ^361

363:
  %% Unique:
  %%    _364
  _369 = landingpad `'catch'`, _364

  %% Aliased:
  %%    _369
  _367 = extract _369, `0`
  br ^361

361:
  _370 = phi { _367, ^363 }, { _185, ^366 }

  %% Aliased:
  %%    _370
  %% Unique:
  %%    _364
  _34 = catch_end _364, _370

  %% Aliased:
  %%    _34
  _743 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _743, ^742, ^372

742:
  %% Aliased:
  %%    _34
  _121 = get_tuple_element _34, `0`

  %% Aliased:
  %%    _121
  _741 = bif:'=:=' _121, `'EXIT'`
  br _741, ^740, ^372

740:
  %% Aliased:
  %%    _34
  _120 = get_tuple_element _34, `1`

  %% Aliased:
  %%    _120
  _737 = is_tagged_tuple _120, `2`, `badarg`
  br _737, ^736, ^372

736:
  %% Aliased:
  %%    _120
  _123 = get_tuple_element _120, `0`

  %% Aliased:
  %%    _123
  _735 = bif:'=:=' _123, `badarg`
  br _735, ^1064, ^372

1064:
  br ^1079

1079:
  _376 = new_try_tag `'catch'`
  br _376, ^374, ^375

374:
  %% bs_utf_r24_SUITE.erl:300
  _187 = bs_create_bin `utf16`, `[0,little,{segment,1}]`, `-1`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _187
  _378 = succeeded:body _187
  br _378, ^378, ^375

378:
  br ^373

375:
  %% Unique:
  %%    _376
  _381 = landingpad `'catch'`, _376

  %% Aliased:
  %%    _381
  _379 = extract _381, `0`
  br ^373

373:
  _382 = phi { _379, ^375 }, { _187, ^378 }

  %% Aliased:
  %%    _382
  %% Unique:
  %%    _376
  _37 = catch_end _376, _382

  %% Aliased:
  %%    _37
  _730 = is_tagged_tuple _37, `2`, `'EXIT'`
  br _730, ^729, ^384

729:
  %% Aliased:
  %%    _37
  _125 = get_tuple_element _37, `0`

  %% Aliased:
  %%    _125
  _728 = bif:'=:=' _125, `'EXIT'`
  br _728, ^727, ^384

727:
  %% Aliased:
  %%    _37
  _124 = get_tuple_element _37, `1`

  %% Aliased:
  %%    _124
  _724 = is_tagged_tuple _124, `2`, `badarg`
  br _724, ^723, ^384

723:
  %% Aliased:
  %%    _124
  _127 = get_tuple_element _124, `0`

  %% Aliased:
  %%    _127
  _722 = bif:'=:=' _127, `badarg`
  br _722, ^1065, ^384

1065:
  br ^1080

1080:
  _388 = new_try_tag `'catch'`
  br _388, ^386, ^387

386:
  %% bs_utf_r24_SUITE.erl:301
  _189 = bs_create_bin `utf32`, `[0,{segment,1}]`, `-1`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _189
  _390 = succeeded:body _189
  br _390, ^390, ^387

390:
  br ^385

387:
  %% Unique:
  %%    _388
  _393 = landingpad `'catch'`, _388

  %% Aliased:
  %%    _393
  _391 = extract _393, `0`
  br ^385

385:
  _394 = phi { _391, ^387 }, { _189, ^390 }

  %% Aliased:
  %%    _394
  %% Unique:
  %%    _388
  _40 = catch_end _388, _394

  %% Aliased:
  %%    _40
  _717 = is_tagged_tuple _40, `2`, `'EXIT'`
  br _717, ^716, ^396

716:
  %% Aliased:
  %%    _40
  _129 = get_tuple_element _40, `0`

  %% Aliased:
  %%    _129
  _715 = bif:'=:=' _129, `'EXIT'`
  br _715, ^714, ^396

714:
  %% Aliased:
  %%    _40
  _128 = get_tuple_element _40, `1`

  %% Aliased:
  %%    _128
  _711 = is_tagged_tuple _128, `2`, `badarg`
  br _711, ^710, ^396

710:
  %% Aliased:
  %%    _128
  _131 = get_tuple_element _128, `0`

  %% Aliased:
  %%    _131
  _709 = bif:'=:=' _131, `badarg`
  br _709, ^1066, ^396

1066:
  br ^1081

1081:
  _400 = new_try_tag `'catch'`
  br _400, ^398, ^399

398:
  %% bs_utf_r24_SUITE.erl:302
  _191 = bs_create_bin `utf32`, `[0,little,{segment,1}]`, `-1`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _191
  _402 = succeeded:body _191
  br _402, ^402, ^399

402:
  br ^397

399:
  %% Unique:
  %%    _400
  _405 = landingpad `'catch'`, _400

  %% Aliased:
  %%    _405
  _403 = extract _405, `0`
  br ^397

397:
  _406 = phi { _403, ^399 }, { _191, ^402 }

  %% Aliased:
  %%    _406
  %% Unique:
  %%    _400
  _43 = catch_end _400, _406

  %% Aliased:
  %%    _43
  _704 = is_tagged_tuple _43, `2`, `'EXIT'`
  br _704, ^703, ^408

703:
  %% Aliased:
  %%    _43
  _133 = get_tuple_element _43, `0`

  %% Aliased:
  %%    _133
  _702 = bif:'=:=' _133, `'EXIT'`
  br _702, ^701, ^408

701:
  %% Aliased:
  %%    _43
  _132 = get_tuple_element _43, `1`

  %% Aliased:
  %%    _132
  _698 = is_tagged_tuple _132, `2`, `badarg`
  br _698, ^697, ^408

697:
  %% Aliased:
  %%    _132
  _135 = get_tuple_element _132, `0`

  %% Aliased:
  %%    _135
  _696 = bif:'=:=' _135, `badarg`
  br _696, ^1067, ^408

1067:
  br ^1082

1082:
  _412 = new_try_tag `'catch'`
  br _412, ^410, ^411

410:
  %% bs_utf_r24_SUITE.erl:303
  _193 = bs_create_bin `utf8`, `[0,{segment,1}]`, `55296`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _193
  _414 = succeeded:body _193
  br _414, ^414, ^411

414:
  br ^409

411:
  %% Unique:
  %%    _412
  _417 = landingpad `'catch'`, _412

  %% Aliased:
  %%    _417
  _415 = extract _417, `0`
  br ^409

409:
  _418 = phi { _415, ^411 }, { _193, ^414 }

  %% Aliased:
  %%    _418
  %% Unique:
  %%    _412
  _45 = catch_end _412, _418

  %% Aliased:
  %%    _45
  _691 = is_tagged_tuple _45, `2`, `'EXIT'`
  br _691, ^690, ^420

690:
  %% Aliased:
  %%    _45
  _137 = get_tuple_element _45, `0`

  %% Aliased:
  %%    _137
  _689 = bif:'=:=' _137, `'EXIT'`
  br _689, ^688, ^420

688:
  %% Aliased:
  %%    _45
  _136 = get_tuple_element _45, `1`

  %% Aliased:
  %%    _136
  _685 = is_tagged_tuple _136, `2`, `badarg`
  br _685, ^684, ^420

684:
  %% Aliased:
  %%    _136
  _139 = get_tuple_element _136, `0`

  %% Aliased:
  %%    _139
  _683 = bif:'=:=' _139, `badarg`
  br _683, ^1068, ^420

1068:
  br ^1083

1083:
  _424 = new_try_tag `'catch'`
  br _424, ^422, ^423

422:
  %% bs_utf_r24_SUITE.erl:304
  _195 = bs_create_bin `utf16`, `[0,{segment,1}]`, `55296`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _195
  _426 = succeeded:body _195
  br _426, ^426, ^423

426:
  br ^421

423:
  %% Unique:
  %%    _424
  _429 = landingpad `'catch'`, _424

  %% Aliased:
  %%    _429
  _427 = extract _429, `0`
  br ^421

421:
  _430 = phi { _427, ^423 }, { _195, ^426 }

  %% Aliased:
  %%    _430
  %% Unique:
  %%    _424
  _47 = catch_end _424, _430

  %% Aliased:
  %%    _47
  _678 = is_tagged_tuple _47, `2`, `'EXIT'`
  br _678, ^677, ^432

677:
  %% Aliased:
  %%    _47
  _141 = get_tuple_element _47, `0`

  %% Aliased:
  %%    _141
  _676 = bif:'=:=' _141, `'EXIT'`
  br _676, ^675, ^432

675:
  %% Aliased:
  %%    _47
  _140 = get_tuple_element _47, `1`

  %% Aliased:
  %%    _140
  _672 = is_tagged_tuple _140, `2`, `badarg`
  br _672, ^671, ^432

671:
  %% Aliased:
  %%    _140
  _143 = get_tuple_element _140, `0`

  %% Aliased:
  %%    _143
  _670 = bif:'=:=' _143, `badarg`
  br _670, ^1069, ^432

1069:
  br ^1084

1084:
  _436 = new_try_tag `'catch'`
  br _436, ^434, ^435

434:
  %% bs_utf_r24_SUITE.erl:305
  _197 = bs_create_bin `utf16`, `[0,little,{segment,1}]`, `55296`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _197
  _438 = succeeded:body _197
  br _438, ^438, ^435

438:
  br ^433

435:
  %% Unique:
  %%    _436
  _441 = landingpad `'catch'`, _436

  %% Aliased:
  %%    _441
  _439 = extract _441, `0`
  br ^433

433:
  _442 = phi { _439, ^435 }, { _197, ^438 }

  %% Aliased:
  %%    _442
  %% Unique:
  %%    _436
  _49 = catch_end _436, _442

  %% Aliased:
  %%    _49
  _665 = is_tagged_tuple _49, `2`, `'EXIT'`
  br _665, ^664, ^444

664:
  %% Aliased:
  %%    _49
  _145 = get_tuple_element _49, `0`

  %% Aliased:
  %%    _145
  _663 = bif:'=:=' _145, `'EXIT'`
  br _663, ^662, ^444

662:
  %% Aliased:
  %%    _49
  _144 = get_tuple_element _49, `1`

  %% Aliased:
  %%    _144
  _659 = is_tagged_tuple _144, `2`, `badarg`
  br _659, ^658, ^444

658:
  %% Aliased:
  %%    _144
  _147 = get_tuple_element _144, `0`

  %% Aliased:
  %%    _147
  _657 = bif:'=:=' _147, `badarg`
  br _657, ^1070, ^444

1070:
  br ^1085

1085:
  _448 = new_try_tag `'catch'`
  br _448, ^446, ^447

446:
  %% bs_utf_r24_SUITE.erl:306
  _199 = bs_create_bin `utf32`, `[0,{segment,1}]`, `55296`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _199
  _450 = succeeded:body _199
  br _450, ^450, ^447

450:
  br ^445

447:
  %% Unique:
  %%    _448
  _453 = landingpad `'catch'`, _448

  %% Aliased:
  %%    _453
  _451 = extract _453, `0`
  br ^445

445:
  _454 = phi { _451, ^447 }, { _199, ^450 }

  %% Aliased:
  %%    _454
  %% Unique:
  %%    _448
  _51 = catch_end _448, _454

  %% Aliased:
  %%    _51
  _652 = is_tagged_tuple _51, `2`, `'EXIT'`
  br _652, ^651, ^456

651:
  %% Aliased:
  %%    _51
  _149 = get_tuple_element _51, `0`

  %% Aliased:
  %%    _149
  _650 = bif:'=:=' _149, `'EXIT'`
  br _650, ^649, ^456

649:
  %% Aliased:
  %%    _51
  _148 = get_tuple_element _51, `1`

  %% Aliased:
  %%    _148
  _646 = is_tagged_tuple _148, `2`, `badarg`
  br _646, ^645, ^456

645:
  %% Aliased:
  %%    _148
  _151 = get_tuple_element _148, `0`

  %% Aliased:
  %%    _151
  _644 = bif:'=:=' _151, `badarg`
  br _644, ^1071, ^456

1071:
  br ^1086

1086:
  _460 = new_try_tag `'catch'`
  br _460, ^458, ^459

458:
  %% bs_utf_r24_SUITE.erl:307
  _201 = bs_create_bin `utf32`, `[0,little,{segment,1}]`, `55296`, `undefined`, `binary`, `[1]`, `<<0>>`, `all`

  %% Aliased:
  %%    _201
  _462 = succeeded:body _201
  br _462, ^462, ^459

462:
  br ^457

459:
  %% Unique:
  %%    _460
  _465 = landingpad `'catch'`, _460

  %% Aliased:
  %%    _465
  _463 = extract _465, `0`
  br ^457

457:
  _466 = phi { _463, ^459 }, { _201, ^462 }

  %% Aliased:
  %%    _466
  %% Unique:
  %%    _460
  _53 = catch_end _460, _466

  %% Aliased:
  %%    _53
  _639 = is_tagged_tuple _53, `2`, `'EXIT'`
  br _639, ^638, ^468

638:
  %% Aliased:
  %%    _53
  _153 = get_tuple_element _53, `0`

  %% Aliased:
  %%    _153
  _637 = bif:'=:=' _153, `'EXIT'`
  br _637, ^636, ^468

636:
  %% Aliased:
  %%    _53
  _152 = get_tuple_element _53, `1`

  %% Aliased:
  %%    _152
  _633 = is_tagged_tuple _152, `2`, `badarg`
  br _633, ^632, ^468

632:
  %% Aliased:
  %%    _152
  _155 = get_tuple_element _152, `0`

  %% Aliased:
  %%    _155
  _631 = bif:'=:=' _155, `badarg`
  br _631, ^1072, ^468

1072:
  br ^1087

1087:
  _472 = new_try_tag `'catch'`
  br _472, ^470, ^471

470:
  %% bs_utf_r24_SUITE.erl:310
  _203 = bs_create_bin `utf8`, `[0,{segment,1}]`, `1114112`, `undefined`

  %% Aliased:
  %%    _203
  _474 = succeeded:body _203
  br _474, ^474, ^471

474:
  br ^469

471:
  %% Unique:
  %%    _472
  _477 = landingpad `'catch'`, _472

  %% Aliased:
  %%    _477
  _475 = extract _477, `0`
  br ^469

469:
  _478 = phi { _475, ^471 }, { _203, ^474 }

  %% Aliased:
  %%    _478
  %% Unique:
  %%    _472
  _56 = catch_end _472, _478

  %% Aliased:
  %%    _56
  _626 = is_tagged_tuple _56, `2`, `'EXIT'`
  br _626, ^625, ^480

625:
  %% Aliased:
  %%    _56
  _157 = get_tuple_element _56, `0`

  %% Aliased:
  %%    _157
  _624 = bif:'=:=' _157, `'EXIT'`
  br _624, ^623, ^480

623:
  %% Aliased:
  %%    _56
  _156 = get_tuple_element _56, `1`

  %% Aliased:
  %%    _156
  _620 = is_tagged_tuple _156, `2`, `badarg`
  br _620, ^619, ^480

619:
  %% Aliased:
  %%    _156
  _159 = get_tuple_element _156, `0`

  %% Aliased:
  %%    _159
  _618 = bif:'=:=' _159, `badarg`
  br _618, ^1073, ^480

1073:
  br ^1088

1088:
  _484 = new_try_tag `'catch'`
  br _484, ^482, ^483

482:
  %% bs_utf_r24_SUITE.erl:311
  _205 = bs_create_bin `utf16`, `[0,{segment,1}]`, `1114112`, `undefined`

  %% Aliased:
  %%    _205
  _486 = succeeded:body _205
  br _486, ^486, ^483

486:
  br ^481

483:
  %% Unique:
  %%    _484
  _489 = landingpad `'catch'`, _484

  %% Aliased:
  %%    _489
  _487 = extract _489, `0`
  br ^481

481:
  _490 = phi { _487, ^483 }, { _205, ^486 }

  %% Aliased:
  %%    _490
  %% Unique:
  %%    _484
  _58 = catch_end _484, _490

  %% Aliased:
  %%    _58
  _613 = is_tagged_tuple _58, `2`, `'EXIT'`
  br _613, ^612, ^492

612:
  %% Aliased:
  %%    _58
  _161 = get_tuple_element _58, `0`

  %% Aliased:
  %%    _161
  _611 = bif:'=:=' _161, `'EXIT'`
  br _611, ^610, ^492

610:
  %% Aliased:
  %%    _58
  _160 = get_tuple_element _58, `1`

  %% Aliased:
  %%    _160
  _607 = is_tagged_tuple _160, `2`, `badarg`
  br _607, ^606, ^492

606:
  %% Aliased:
  %%    _160
  _163 = get_tuple_element _160, `0`

  %% Aliased:
  %%    _163
  _605 = bif:'=:=' _163, `badarg`
  br _605, ^1074, ^492

1074:
  br ^1089

1089:
  _496 = new_try_tag `'catch'`
  br _496, ^494, ^495

494:
  %% bs_utf_r24_SUITE.erl:312
  _207 = bs_create_bin `utf16`, `[0,little,{segment,1}]`, `1114112`, `undefined`

  %% Aliased:
  %%    _207
  _498 = succeeded:body _207
  br _498, ^498, ^495

498:
  br ^493

495:
  %% Unique:
  %%    _496
  _501 = landingpad `'catch'`, _496

  %% Aliased:
  %%    _501
  _499 = extract _501, `0`
  br ^493

493:
  _502 = phi { _499, ^495 }, { _207, ^498 }

  %% Aliased:
  %%    _502
  %% Unique:
  %%    _496
  _60 = catch_end _496, _502

  %% Aliased:
  %%    _60
  _600 = is_tagged_tuple _60, `2`, `'EXIT'`
  br _600, ^599, ^504

599:
  %% Aliased:
  %%    _60
  _165 = get_tuple_element _60, `0`

  %% Aliased:
  %%    _165
  _598 = bif:'=:=' _165, `'EXIT'`
  br _598, ^597, ^504

597:
  %% Aliased:
  %%    _60
  _164 = get_tuple_element _60, `1`

  %% Aliased:
  %%    _164
  _594 = is_tagged_tuple _164, `2`, `badarg`
  br _594, ^593, ^504

593:
  %% Aliased:
  %%    _164
  _167 = get_tuple_element _164, `0`

  %% Aliased:
  %%    _167
  _592 = bif:'=:=' _167, `badarg`
  br _592, ^1075, ^504

1075:
  br ^1090

1090:
  _508 = new_try_tag `'catch'`
  br _508, ^506, ^507

506:
  %% bs_utf_r24_SUITE.erl:313
  _209 = bs_create_bin `utf32`, `[0,{segment,1}]`, `1114112`, `undefined`

  %% Aliased:
  %%    _209
  _510 = succeeded:body _209
  br _510, ^510, ^507

510:
  br ^505

507:
  %% Unique:
  %%    _508
  _513 = landingpad `'catch'`, _508

  %% Aliased:
  %%    _513
  _511 = extract _513, `0`
  br ^505

505:
  _514 = phi { _511, ^507 }, { _209, ^510 }

  %% Aliased:
  %%    _514
  %% Unique:
  %%    _508
  _62 = catch_end _508, _514

  %% Aliased:
  %%    _62
  _587 = is_tagged_tuple _62, `2`, `'EXIT'`
  br _587, ^586, ^516

586:
  %% Aliased:
  %%    _62
  _169 = get_tuple_element _62, `0`

  %% Aliased:
  %%    _169
  _585 = bif:'=:=' _169, `'EXIT'`
  br _585, ^584, ^516

584:
  %% Aliased:
  %%    _62
  _168 = get_tuple_element _62, `1`

  %% Aliased:
  %%    _168
  _581 = is_tagged_tuple _168, `2`, `badarg`
  br _581, ^580, ^516

580:
  %% Aliased:
  %%    _168
  _171 = get_tuple_element _168, `0`

  %% Aliased:
  %%    _171
  _579 = bif:'=:=' _171, `badarg`
  br _579, ^1076, ^516

1076:
  br ^1091

1091:
  _520 = new_try_tag `'catch'`
  br _520, ^518, ^519

518:
  %% bs_utf_r24_SUITE.erl:314
  _211 = bs_create_bin `utf32`, `[0,little,{segment,1}]`, `1114112`, `undefined`

  %% Aliased:
  %%    _211
  _522 = succeeded:body _211
  br _522, ^522, ^519

522:
  br ^517

519:
  %% Unique:
  %%    _520
  _525 = landingpad `'catch'`, _520

  %% Aliased:
  %%    _525
  _523 = extract _525, `0`
  br ^517

517:
  _526 = phi { _523, ^519 }, { _211, ^522 }

  %% Aliased:
  %%    _526
  %% Unique:
  %%    _520
  _64 = catch_end _520, _526

  %% Aliased:
  %%    _64
  _574 = is_tagged_tuple _64, `2`, `'EXIT'`
  br _574, ^573, ^528

573:
  %% Aliased:
  %%    _64
  _173 = get_tuple_element _64, `0`

  %% Aliased:
  %%    _173
  _572 = bif:'=:=' _173, `'EXIT'`
  br _572, ^571, ^528

571:
  %% Aliased:
  %%    _64
  _172 = get_tuple_element _64, `1`

  %% Aliased:
  %%    _172
  _568 = is_tagged_tuple _172, `2`, `badarg`
  br _568, ^567, ^528

567:
  %% Aliased:
  %%    _172
  _175 = get_tuple_element _172, `0`

  %% Aliased:
  %%    _175
  _566 = bif:'=:=' _175, `badarg`
  br _566, ^565, ^528

565:
  %% bs_utf_r24_SUITE.erl:317
  _176 = call (`bad_literal_match`/1), `<<237,160,128>>`

  %% Unique:
  %%    _176
  _529 = succeeded:body _176
  br _529, ^529, ^1

529:
  %% Unique:
  %%    _176
  _563 = bif:'=:=' _176, `error`
  br _563, ^562, ^531

562:
  %% bs_utf_r24_SUITE.erl:318
  _177 = call (`bad_literal_match`/1), `<<244,144,128,128>>`

  %% Unique:
  %%    _177
  _532 = succeeded:body _177
  br _532, ^532, ^1

532:
  %% Unique:
  %%    _177
  _560 = bif:'=:=' _177, `error`
  br _560, ^559, ^534

559:
  %% bs_utf_r24_SUITE.erl:320
  _178 = call (`bad_literal_match`/1), `<<0,0,216,0>>`

  %% Unique:
  %%    _178
  _535 = succeeded:body _178
  br _535, ^535, ^1

535:
  %% Unique:
  %%    _178
  _557 = bif:'=:=' _178, `error`
  br _557, ^556, ^537

556:
  %% bs_utf_r24_SUITE.erl:321
  _179 = call (`bad_literal_match`/1), `<<0,17,0,0>>`

  %% Unique:
  %%    _179
  _538 = succeeded:body _179
  br _538, ^538, ^1

538:
  %% Unique:
  %%    _179
  _554 = bif:'=:=' _179, `error`
  br _554, ^553, ^540

553:
  %% bs_utf_r24_SUITE.erl:322
  _180 = call (`bad_literal_match`/1), `<<0,216,0,0>>`

  %% Unique:
  %%    _180
  _541 = succeeded:body _180
  br _541, ^541, ^1

541:
  %% Unique:
  %%    _180
  _551 = bif:'=:=' _180, `error`
  br _551, ^550, ^543

550:
  %% bs_utf_r24_SUITE.erl:323
  _181 = call (`bad_literal_match`/1), `<<0,0,17,0>>`

  %% Unique:
  %%    _181
  _544 = succeeded:body _181
  br _544, ^544, ^1

544:
  %% Unique:
  %%    _181
  _548 = bif:'=:=' _181, `error`
  br _548, ^547, ^546

547:
  ret `ok`

546:
  %% bs_utf_r24_SUITE.erl:323
  %% Unique:
  %%    _181
  _212 = match_fail `badmatch`, _181

  %% Unique:
  %%    _212
  _549 = succeeded:body _212
  br _549, ^549, ^1

549:
  %% Unique:
  %%    _212
  ret _212

543:
  %% bs_utf_r24_SUITE.erl:322
  %% Unique:
  %%    _180
  _213 = match_fail `badmatch`, _180

  %% Unique:
  %%    _213
  _552 = succeeded:body _213
  br _552, ^552, ^1

552:
  %% Unique:
  %%    _213
  ret _213

540:
  %% bs_utf_r24_SUITE.erl:321
  %% Unique:
  %%    _179
  _214 = match_fail `badmatch`, _179

  %% Unique:
  %%    _214
  _555 = succeeded:body _214
  br _555, ^555, ^1

555:
  %% Unique:
  %%    _214
  ret _214

537:
  %% bs_utf_r24_SUITE.erl:320
  %% Unique:
  %%    _178
  _215 = match_fail `badmatch`, _178

  %% Unique:
  %%    _215
  _558 = succeeded:body _215
  br _558, ^558, ^1

558:
  %% Unique:
  %%    _215
  ret _215

534:
  %% bs_utf_r24_SUITE.erl:318
  %% Unique:
  %%    _177
  _216 = match_fail `badmatch`, _177

  %% Unique:
  %%    _216
  _561 = succeeded:body _216
  br _561, ^561, ^1

561:
  %% Unique:
  %%    _216
  ret _216

531:
  %% bs_utf_r24_SUITE.erl:317
  %% Unique:
  %%    _176
  _217 = match_fail `badmatch`, _176

  %% Unique:
  %%    _217
  _564 = succeeded:body _217
  br _564, ^564, ^1

564:
  %% Unique:
  %%    _217
  ret _217

528:
  %% bs_utf_r24_SUITE.erl:314
  %% Aliased:
  %%    _64
  _218 = match_fail `badmatch`, _64

  %% Unique:
  %%    _218
  _577 = succeeded:body _218
  br _577, ^577, ^1

577:
  %% Unique:
  %%    _218
  ret _218

516:
  %% bs_utf_r24_SUITE.erl:313
  %% Aliased:
  %%    _62
  _219 = match_fail `badmatch`, _62

  %% Unique:
  %%    _219
  _590 = succeeded:body _219
  br _590, ^590, ^1

590:
  %% Unique:
  %%    _219
  ret _219

504:
  %% bs_utf_r24_SUITE.erl:312
  %% Aliased:
  %%    _60
  _220 = match_fail `badmatch`, _60

  %% Unique:
  %%    _220
  _603 = succeeded:body _220
  br _603, ^603, ^1

603:
  %% Unique:
  %%    _220
  ret _220

492:
  %% bs_utf_r24_SUITE.erl:311
  %% Aliased:
  %%    _58
  _221 = match_fail `badmatch`, _58

  %% Unique:
  %%    _221
  _616 = succeeded:body _221
  br _616, ^616, ^1

616:
  %% Unique:
  %%    _221
  ret _221

480:
  %% bs_utf_r24_SUITE.erl:310
  %% Aliased:
  %%    _56
  _222 = match_fail `badmatch`, _56

  %% Unique:
  %%    _222
  _629 = succeeded:body _222
  br _629, ^629, ^1

629:
  %% Unique:
  %%    _222
  ret _222

468:
  %% bs_utf_r24_SUITE.erl:307
  %% Aliased:
  %%    _53
  _223 = match_fail `badmatch`, _53

  %% Unique:
  %%    _223
  _642 = succeeded:body _223
  br _642, ^642, ^1

642:
  %% Unique:
  %%    _223
  ret _223

456:
  %% bs_utf_r24_SUITE.erl:306
  %% Aliased:
  %%    _51
  _224 = match_fail `badmatch`, _51

  %% Unique:
  %%    _224
  _655 = succeeded:body _224
  br _655, ^655, ^1

655:
  %% Unique:
  %%    _224
  ret _224

444:
  %% bs_utf_r24_SUITE.erl:305
  %% Aliased:
  %%    _49
  _225 = match_fail `badmatch`, _49

  %% Unique:
  %%    _225
  _668 = succeeded:body _225
  br _668, ^668, ^1

668:
  %% Unique:
  %%    _225
  ret _225

432:
  %% bs_utf_r24_SUITE.erl:304
  %% Aliased:
  %%    _47
  _226 = match_fail `badmatch`, _47

  %% Unique:
  %%    _226
  _681 = succeeded:body _226
  br _681, ^681, ^1

681:
  %% Unique:
  %%    _226
  ret _226

420:
  %% bs_utf_r24_SUITE.erl:303
  %% Aliased:
  %%    _45
  _227 = match_fail `badmatch`, _45

  %% Unique:
  %%    _227
  _694 = succeeded:body _227
  br _694, ^694, ^1

694:
  %% Unique:
  %%    _227
  ret _227

408:
  %% bs_utf_r24_SUITE.erl:302
  %% Aliased:
  %%    _43
  _228 = match_fail `badmatch`, _43

  %% Unique:
  %%    _228
  _707 = succeeded:body _228
  br _707, ^707, ^1

707:
  %% Unique:
  %%    _228
  ret _228

396:
  %% bs_utf_r24_SUITE.erl:301
  %% Aliased:
  %%    _40
  _229 = match_fail `badmatch`, _40

  %% Unique:
  %%    _229
  _720 = succeeded:body _229
  br _720, ^720, ^1

720:
  %% Unique:
  %%    _229
  ret _229

384:
  %% bs_utf_r24_SUITE.erl:300
  %% Aliased:
  %%    _37
  _230 = match_fail `badmatch`, _37

  %% Unique:
  %%    _230
  _733 = succeeded:body _230
  br _733, ^733, ^1

733:
  %% Unique:
  %%    _230
  ret _230

372:
  %% bs_utf_r24_SUITE.erl:299
  %% Aliased:
  %%    _34
  _231 = match_fail `badmatch`, _34

  %% Unique:
  %%    _231
  _746 = succeeded:body _231
  br _746, ^746, ^1

746:
  %% Unique:
  %%    _231
  ret _231

360:
  %% bs_utf_r24_SUITE.erl:298
  %% Aliased:
  %%    _31
  _232 = match_fail `badmatch`, _31

  %% Unique:
  %%    _232
  _759 = succeeded:body _232
  br _759, ^759, ^1

759:
  %% Unique:
  %%    _232
  ret _232

346:
  %% bs_utf_r24_SUITE.erl:291
  %% Unique:
  %%    _114
  _234 = match_fail `badmatch`, _114

  %% Unique:
  %%    _234
  _764 = succeeded:body _234
  br _764, ^764, ^1

764:
  %% Unique:
  %%    _234
  ret _234

343:
  %% bs_utf_r24_SUITE.erl:290
  %% Unique:
  %%    _113
  _235 = match_fail `badmatch`, _113

  %% Unique:
  %%    _235
  _767 = succeeded:body _235
  br _767, ^767, ^1

767:
  %% Unique:
  %%    _235
  ret _235

340:
  %% bs_utf_r24_SUITE.erl:289
  %% Unique:
  %%    _112
  _236 = match_fail `badmatch`, _112

  %% Unique:
  %%    _236
  _770 = succeeded:body _236
  br _770, ^770, ^1

770:
  %% Unique:
  %%    _236
  ret _236

337:
  %% bs_utf_r24_SUITE.erl:288
  %% Unique:
  %%    _111
  _237 = match_fail `badmatch`, _111

  %% Unique:
  %%    _237
  _773 = succeeded:body _237
  br _773, ^773, ^1

773:
  %% Unique:
  %%    _237
  ret _237

334:
  %% bs_utf_r24_SUITE.erl:286
  %% Unique:
  %%    _110
  _238 = match_fail `badmatch`, _110

  %% Unique:
  %%    _238
  _776 = succeeded:body _238
  br _776, ^776, ^1

776:
  %% Unique:
  %%    _238
  ret _238

331:
  %% bs_utf_r24_SUITE.erl:285
  %% Unique:
  %%    _109
  _239 = match_fail `badmatch`, _109

  %% Unique:
  %%    _239
  _779 = succeeded:body _239
  br _779, ^779, ^1

779:
  %% Unique:
  %%    _239
  ret _239

328:
  %% bs_utf_r24_SUITE.erl:283
  %% Unique:
  %%    _108
  _240 = match_fail `badmatch`, _108

  %% Unique:
  %%    _240
  _782 = succeeded:body _240
  br _782, ^782, ^1

782:
  %% Unique:
  %%    _240
  ret _240

325:
  %% bs_utf_r24_SUITE.erl:282
  %% Unique:
  %%    _107
  _241 = match_fail `badmatch`, _107

  %% Unique:
  %%    _241
  _785 = succeeded:body _241
  br _785, ^785, ^1

785:
  %% Unique:
  %%    _241
  ret _241

322:
  %% bs_utf_r24_SUITE.erl:281
  %% Unique:
  %%    _106
  _242 = match_fail `badmatch`, _106

  %% Unique:
  %%    _242
  _788 = succeeded:body _242
  br _788, ^788, ^1

788:
  %% Unique:
  %%    _242
  ret _242

319:
  %% bs_utf_r24_SUITE.erl:279
  %% Unique:
  %%    _105
  _243 = match_fail `badmatch`, _105

  %% Unique:
  %%    _243
  _791 = succeeded:body _243
  br _791, ^791, ^1

791:
  %% Unique:
  %%    _243
  ret _243

316:
  %% bs_utf_r24_SUITE.erl:278
  %% Unique:
  %%    _104
  _244 = match_fail `badmatch`, _104

  %% Unique:
  %%    _244
  _794 = succeeded:body _244
  br _794, ^794, ^1

794:
  %% Unique:
  %%    _244
  ret _244

313:
  %% bs_utf_r24_SUITE.erl:277
  %% Unique:
  %%    _103
  _245 = match_fail `badmatch`, _103

  %% Unique:
  %%    _245
  _797 = succeeded:body _245
  br _797, ^797, ^1

797:
  %% Unique:
  %%    _245
  ret _245

310:
  %% bs_utf_r24_SUITE.erl:276
  %% Unique:
  %%    _102
  _246 = match_fail `badmatch`, _102

  %% Unique:
  %%    _246
  _800 = succeeded:body _246
  br _800, ^800, ^1

800:
  %% Unique:
  %%    _246
  ret _246

307:
  %% bs_utf_r24_SUITE.erl:274
  %% Unique:
  %%    _101
  _247 = match_fail `badmatch`, _101

  %% Unique:
  %%    _247
  _803 = succeeded:body _247
  br _803, ^803, ^1

803:
  %% Unique:
  %%    _247
  ret _247

304:
  %% bs_utf_r24_SUITE.erl:273
  %% Unique:
  %%    _100
  _248 = match_fail `badmatch`, _100

  %% Unique:
  %%    _248
  _806 = succeeded:body _248
  br _806, ^806, ^1

806:
  %% Unique:
  %%    _248
  ret _248

301:
  %% bs_utf_r24_SUITE.erl:272
  %% Unique:
  %%    _99
  _249 = match_fail `badmatch`, _99

  %% Unique:
  %%    _249
  _809 = succeeded:body _249
  br _809, ^809, ^1

809:
  %% Unique:
  %%    _249
  ret _249

298:
  %% bs_utf_r24_SUITE.erl:271
  %% Unique:
  %%    _98
  _250 = match_fail `badmatch`, _98

  %% Unique:
  %%    _250
  _812 = succeeded:body _250
  br _812, ^812, ^1

812:
  %% Unique:
  %%    _250
  ret _250

295:
  %% bs_utf_r24_SUITE.erl:269
  %% Unique:
  %%    _97
  _251 = match_fail `badmatch`, _97

  %% Unique:
  %%    _251
  _815 = succeeded:body _251
  br _815, ^815, ^1

815:
  %% Unique:
  %%    _251
  ret _251

292:
  %% bs_utf_r24_SUITE.erl:268
  %% Unique:
  %%    _96
  _252 = match_fail `badmatch`, _96

  %% Unique:
  %%    _252
  _818 = succeeded:body _252
  br _818, ^818, ^1

818:
  %% Unique:
  %%    _252
  ret _252

289:
  %% bs_utf_r24_SUITE.erl:267
  %% Unique:
  %%    _95
  _253 = match_fail `badmatch`, _95

  %% Unique:
  %%    _253
  _821 = succeeded:body _253
  br _821, ^821, ^1

821:
  %% Unique:
  %%    _253
  ret _253

286:
  %% bs_utf_r24_SUITE.erl:265
  %% Unique:
  %%    _94
  _254 = match_fail `badmatch`, _94

  %% Unique:
  %%    _254
  _823 = succeeded:body _254
  br _823, ^823, ^1

823:
  %% Unique:
  %%    _254
  ret _254

283:
  %% bs_utf_r24_SUITE.erl:264
  %% Unique:
  %%    _93
  _255 = match_fail `badmatch`, _93

  %% Unique:
  %%    _255
  _825 = succeeded:body _255
  br _825, ^825, ^1

825:
  %% Unique:
  %%    _255
  ret _255

280:
  %% bs_utf_r24_SUITE.erl:263
  %% Unique:
  %%    _92
  _256 = match_fail `badmatch`, _92

  %% Unique:
  %%    _256
  _827 = succeeded:body _256
  br _827, ^827, ^1

827:
  %% Unique:
  %%    _256
  ret _256

277:
  %% bs_utf_r24_SUITE.erl:262
  %% Unique:
  %%    _91
  _257 = match_fail `badmatch`, _91

  %% Unique:
  %%    _257
  _829 = succeeded:body _257
  br _829, ^829, ^1

829:
  %% Unique:
  %%    _257
  ret _257

274:
  %% bs_utf_r24_SUITE.erl:261
  %% Unique:
  %%    _90
  _258 = match_fail `badmatch`, _90

  %% Unique:
  %%    _258
  _831 = succeeded:body _258
  br _831, ^831, ^1

831:
  %% Unique:
  %%    _258
  ret _258

271:
  %% bs_utf_r24_SUITE.erl:260
  %% Unique:
  %%    _89
  _259 = match_fail `badmatch`, _89

  %% Unique:
  %%    _259
  _833 = succeeded:body _259
  br _833, ^833, ^1

833:
  %% Unique:
  %%    _259
  ret _259

268:
  %% bs_utf_r24_SUITE.erl:259
  %% Unique:
  %%    _88
  _260 = match_fail `badmatch`, _88

  %% Unique:
  %%    _260
  _835 = succeeded:body _260
  br _835, ^835, ^1

835:
  %% Unique:
  %%    _260
  ret _260

264:
  %% bs_utf_r24_SUITE.erl:258
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-literals/1-',1}}
  _261 = match_fail `function_clause`, _0

  %% Unique:
  %%    _261
  _836 = succeeded:body _261
  br _836, ^836, ^1

836:
  %% Unique:
  %%    _261
  ret _261

1:
  _262 = call (`erlang`:`error`/1), `badarg`
  ret _262
}

%% bs_utf_r24_SUITE.erl:327
%% Counter = 373
function `bs_utf_r24_SUITE`:`match_literal`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = bs_start_match `new`, _0

  %% Aliased:
  %%    _2
  _371 = succeeded:guard _2
  br _371, ^371, ^147

371:
  %% bs_utf_r24_SUITE.erl:327
  %% Aliased:
  %%    _2
  _3 = bs_match `integer`, _2, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _3
  _149 = succeeded:guard _3
  br _149, ^149, ^148

149:
  %% Aliased:
  %%    _3
  _4 = bs_extract _3

  %% Aliased:
  %%    _4
  _153 = bif:'=:=' _4, `97`
  br _153, ^152, ^148

152:
  %% Aliased:
  %%    _3
  _5 = bs_match `string`, _3, `<<"bc">>`

  %% Aliased:
  %%    _5
  _150 = succeeded:guard _5
  br _150, ^150, ^148

150:
  %% Aliased:
  %%    _5
  _151 = bs_test_tail _5, `0`
  br _151, ^151, ^148

151:
  ret `abc_utf8`

148:
  %% bs_utf_r24_SUITE.erl:328
  %% Aliased:
  %%    _2
  _6 = bs_match `utf16`, _2, `[unsigned,big]`

  %% Aliased:
  %%    _6
  _155 = succeeded:guard _6
  br _155, ^155, ^154

155:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% Aliased:
  %%    _7
  _164 = bif:'=:=' _7, `97`
  br _164, ^163, ^154

163:
  %% bs_utf_r24_SUITE.erl:328
  %% Aliased:
  %%    _6
  _8 = bs_match `utf16`, _6, `[unsigned,big]`

  %% Aliased:
  %%    _8
  _156 = succeeded:guard _8
  br _156, ^156, ^154

156:
  %% Aliased:
  %%    _8
  _9 = bs_extract _8

  %% Aliased:
  %%    _9
  _162 = bif:'=:=' _9, `98`
  br _162, ^161, ^154

161:
  %% bs_utf_r24_SUITE.erl:328
  %% Aliased:
  %%    _8
  _10 = bs_match `utf16`, _8, `[unsigned,big]`

  %% Aliased:
  %%    _10
  _157 = succeeded:guard _10
  br _157, ^157, ^154

157:
  %% Aliased:
  %%    _10
  _11 = bs_extract _10

  %% Aliased:
  %%    _11
  _160 = bif:'=:=' _11, `99`
  br _160, ^159, ^154

159:
  %% Aliased:
  %%    _10
  _158 = bs_test_tail _10, `0`
  br _158, ^158, ^154

158:
  ret `abc_utf16be`

154:
  %% bs_utf_r24_SUITE.erl:329
  %% Aliased:
  %%    _2
  _12 = bs_match `utf16`, _2, `[unsigned,little]`

  %% Aliased:
  %%    _12
  _166 = succeeded:guard _12
  br _166, ^166, ^165

166:
  %% Aliased:
  %%    _12
  _13 = bs_extract _12

  %% Aliased:
  %%    _13
  _175 = bif:'=:=' _13, `97`
  br _175, ^174, ^165

174:
  %% bs_utf_r24_SUITE.erl:329
  %% Aliased:
  %%    _12
  _14 = bs_match `utf16`, _12, `[unsigned,little]`

  %% Aliased:
  %%    _14
  _167 = succeeded:guard _14
  br _167, ^167, ^165

167:
  %% Aliased:
  %%    _14
  _15 = bs_extract _14

  %% Aliased:
  %%    _15
  _173 = bif:'=:=' _15, `98`
  br _173, ^172, ^165

172:
  %% bs_utf_r24_SUITE.erl:329
  %% Aliased:
  %%    _14
  _16 = bs_match `utf16`, _14, `[unsigned,little]`

  %% Aliased:
  %%    _16
  _168 = succeeded:guard _16
  br _168, ^168, ^165

168:
  %% Aliased:
  %%    _16
  _17 = bs_extract _16

  %% Aliased:
  %%    _17
  _171 = bif:'=:=' _17, `99`
  br _171, ^170, ^165

170:
  %% Aliased:
  %%    _16
  _169 = bs_test_tail _16, `0`
  br _169, ^169, ^165

169:
  ret `abc_utf16le`

165:
  %% bs_utf_r24_SUITE.erl:330
  %% Aliased:
  %%    _2
  _18 = bs_match `utf32`, _2, `[unsigned,big]`

  %% Aliased:
  %%    _18
  _177 = succeeded:guard _18
  br _177, ^177, ^176

177:
  %% Aliased:
  %%    _18
  _19 = bs_extract _18

  %% Aliased:
  %%    _19
  _186 = bif:'=:=' _19, `97`
  br _186, ^185, ^176

185:
  %% bs_utf_r24_SUITE.erl:330
  %% Aliased:
  %%    _18
  _20 = bs_match `utf32`, _18, `[unsigned,big]`

  %% Aliased:
  %%    _20
  _178 = succeeded:guard _20
  br _178, ^178, ^176

178:
  %% Aliased:
  %%    _20
  _21 = bs_extract _20

  %% Aliased:
  %%    _21
  _184 = bif:'=:=' _21, `98`
  br _184, ^183, ^176

183:
  %% bs_utf_r24_SUITE.erl:330
  %% Aliased:
  %%    _20
  _22 = bs_match `utf32`, _20, `[unsigned,big]`

  %% Aliased:
  %%    _22
  _179 = succeeded:guard _22
  br _179, ^179, ^176

179:
  %% Aliased:
  %%    _22
  _23 = bs_extract _22

  %% Aliased:
  %%    _23
  _182 = bif:'=:=' _23, `99`
  br _182, ^181, ^176

181:
  %% Aliased:
  %%    _22
  _180 = bs_test_tail _22, `0`
  br _180, ^180, ^176

180:
  ret `abc_utf32be`

176:
  %% bs_utf_r24_SUITE.erl:331
  %% Aliased:
  %%    _2
  _24 = bs_match `utf32`, _2, `[unsigned,little]`

  %% Aliased:
  %%    _24
  _188 = succeeded:guard _24
  br _188, ^188, ^187

188:
  %% Aliased:
  %%    _24
  _25 = bs_extract _24

  %% Aliased:
  %%    _25
  _197 = bif:'=:=' _25, `97`
  br _197, ^196, ^187

196:
  %% bs_utf_r24_SUITE.erl:331
  %% Aliased:
  %%    _24
  _26 = bs_match `utf32`, _24, `[unsigned,little]`

  %% Aliased:
  %%    _26
  _189 = succeeded:guard _26
  br _189, ^189, ^187

189:
  %% Aliased:
  %%    _26
  _27 = bs_extract _26

  %% Aliased:
  %%    _27
  _195 = bif:'=:=' _27, `98`
  br _195, ^194, ^187

194:
  %% bs_utf_r24_SUITE.erl:331
  %% Aliased:
  %%    _26
  _28 = bs_match `utf32`, _26, `[unsigned,little]`

  %% Aliased:
  %%    _28
  _190 = succeeded:guard _28
  br _190, ^190, ^187

190:
  %% Aliased:
  %%    _28
  _29 = bs_extract _28

  %% Aliased:
  %%    _29
  _193 = bif:'=:=' _29, `99`
  br _193, ^192, ^187

192:
  %% Aliased:
  %%    _28
  _191 = bs_test_tail _28, `0`
  br _191, ^191, ^187

191:
  ret `abc_utf32le`

187:
  %% bs_utf_r24_SUITE.erl:332
  %% Aliased:
  %%    _2
  _30 = bs_match `integer`, _2, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _30
  _199 = succeeded:guard _30
  br _199, ^199, ^198

199:
  %% Aliased:
  %%    _30
  _31 = bs_extract _30

  %% Aliased:
  %%    _31
  _218 = bif:'=:=' _31, `208`
  br _218, ^217, ^198

217:
  %% Aliased:
  %%    _30
  _47 = bs_match `string`, _30, `<<156,208,176,209,129,209,130,208,181,209,128,32,208,184,32,208,156,208,176,
   209,128,208,179,208,176,209,128,208,184,209,130,208,176>>`

  %% Aliased:
  %%    _47
  _215 = succeeded:guard _47
  br _215, ^215, ^198

215:
  %% Aliased:
  %%    _47
  _216 = bs_test_tail _47, `0`
  br _216, ^216, ^198

216:
  ret `mm_utf8`

198:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _2
  _48 = bs_match `utf16`, _2, `[unsigned,big]`

  %% Aliased:
  %%    _48
  _220 = succeeded:guard _48
  br _220, ^220, ^219

220:
  %% Aliased:
  %%    _48
  _49 = bs_extract _48

  %% Aliased:
  %%    _49
  _274 = bif:'=:=' _49, `1052`
  br _274, ^273, ^219

273:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _48
  _50 = bs_match `utf16`, _48, `[unsigned,big]`

  %% Aliased:
  %%    _50
  _221 = succeeded:guard _50
  br _221, ^221, ^219

221:
  %% Aliased:
  %%    _50
  _51 = bs_extract _50

  %% Aliased:
  %%    _51
  _272 = bif:'=:=' _51, `1072`
  br _272, ^271, ^219

271:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _50
  _52 = bs_match `utf16`, _50, `[unsigned,big]`

  %% Aliased:
  %%    _52
  _222 = succeeded:guard _52
  br _222, ^222, ^219

222:
  %% Aliased:
  %%    _52
  _53 = bs_extract _52

  %% Aliased:
  %%    _53
  _270 = bif:'=:=' _53, `1089`
  br _270, ^269, ^219

269:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _52
  _54 = bs_match `utf16`, _52, `[unsigned,big]`

  %% Aliased:
  %%    _54
  _223 = succeeded:guard _54
  br _223, ^223, ^219

223:
  %% Aliased:
  %%    _54
  _55 = bs_extract _54

  %% Aliased:
  %%    _55
  _268 = bif:'=:=' _55, `1090`
  br _268, ^267, ^219

267:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _54
  _56 = bs_match `utf16`, _54, `[unsigned,big]`

  %% Aliased:
  %%    _56
  _224 = succeeded:guard _56
  br _224, ^224, ^219

224:
  %% Aliased:
  %%    _56
  _57 = bs_extract _56

  %% Aliased:
  %%    _57
  _266 = bif:'=:=' _57, `1077`
  br _266, ^265, ^219

265:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _56
  _58 = bs_match `utf16`, _56, `[unsigned,big]`

  %% Aliased:
  %%    _58
  _225 = succeeded:guard _58
  br _225, ^225, ^219

225:
  %% Aliased:
  %%    _58
  _59 = bs_extract _58

  %% Aliased:
  %%    _59
  _264 = bif:'=:=' _59, `1088`
  br _264, ^263, ^219

263:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _58
  _60 = bs_match `utf16`, _58, `[unsigned,big]`

  %% Aliased:
  %%    _60
  _226 = succeeded:guard _60
  br _226, ^226, ^219

226:
  %% Aliased:
  %%    _60
  _61 = bs_extract _60

  %% Aliased:
  %%    _61
  _262 = bif:'=:=' _61, `32`
  br _262, ^261, ^219

261:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _60
  _62 = bs_match `utf16`, _60, `[unsigned,big]`

  %% Aliased:
  %%    _62
  _227 = succeeded:guard _62
  br _227, ^227, ^219

227:
  %% Aliased:
  %%    _62
  _63 = bs_extract _62

  %% Aliased:
  %%    _63
  _260 = bif:'=:=' _63, `1080`
  br _260, ^259, ^219

259:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _62
  _64 = bs_match `utf16`, _62, `[unsigned,big]`

  %% Aliased:
  %%    _64
  _228 = succeeded:guard _64
  br _228, ^228, ^219

228:
  %% Aliased:
  %%    _64
  _65 = bs_extract _64

  %% Aliased:
  %%    _65
  _258 = bif:'=:=' _65, `32`
  br _258, ^257, ^219

257:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _64
  _66 = bs_match `utf16`, _64, `[unsigned,big]`

  %% Aliased:
  %%    _66
  _229 = succeeded:guard _66
  br _229, ^229, ^219

229:
  %% Aliased:
  %%    _66
  _67 = bs_extract _66

  %% Aliased:
  %%    _67
  _256 = bif:'=:=' _67, `1052`
  br _256, ^255, ^219

255:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _66
  _68 = bs_match `utf16`, _66, `[unsigned,big]`

  %% Aliased:
  %%    _68
  _230 = succeeded:guard _68
  br _230, ^230, ^219

230:
  %% Aliased:
  %%    _68
  _69 = bs_extract _68

  %% Aliased:
  %%    _69
  _254 = bif:'=:=' _69, `1072`
  br _254, ^253, ^219

253:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _68
  _70 = bs_match `utf16`, _68, `[unsigned,big]`

  %% Aliased:
  %%    _70
  _231 = succeeded:guard _70
  br _231, ^231, ^219

231:
  %% Aliased:
  %%    _70
  _71 = bs_extract _70

  %% Aliased:
  %%    _71
  _252 = bif:'=:=' _71, `1088`
  br _252, ^251, ^219

251:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _70
  _72 = bs_match `utf16`, _70, `[unsigned,big]`

  %% Aliased:
  %%    _72
  _232 = succeeded:guard _72
  br _232, ^232, ^219

232:
  %% Aliased:
  %%    _72
  _73 = bs_extract _72

  %% Aliased:
  %%    _73
  _250 = bif:'=:=' _73, `1075`
  br _250, ^249, ^219

249:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _72
  _74 = bs_match `utf16`, _72, `[unsigned,big]`

  %% Aliased:
  %%    _74
  _233 = succeeded:guard _74
  br _233, ^233, ^219

233:
  %% Aliased:
  %%    _74
  _75 = bs_extract _74

  %% Aliased:
  %%    _75
  _248 = bif:'=:=' _75, `1072`
  br _248, ^247, ^219

247:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _74
  _76 = bs_match `utf16`, _74, `[unsigned,big]`

  %% Aliased:
  %%    _76
  _234 = succeeded:guard _76
  br _234, ^234, ^219

234:
  %% Aliased:
  %%    _76
  _77 = bs_extract _76

  %% Aliased:
  %%    _77
  _246 = bif:'=:=' _77, `1088`
  br _246, ^245, ^219

245:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _76
  _78 = bs_match `utf16`, _76, `[unsigned,big]`

  %% Aliased:
  %%    _78
  _235 = succeeded:guard _78
  br _235, ^235, ^219

235:
  %% Aliased:
  %%    _78
  _79 = bs_extract _78

  %% Aliased:
  %%    _79
  _244 = bif:'=:=' _79, `1080`
  br _244, ^243, ^219

243:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _78
  _80 = bs_match `utf16`, _78, `[unsigned,big]`

  %% Aliased:
  %%    _80
  _236 = succeeded:guard _80
  br _236, ^236, ^219

236:
  %% Aliased:
  %%    _80
  _81 = bs_extract _80

  %% Aliased:
  %%    _81
  _242 = bif:'=:=' _81, `1090`
  br _242, ^241, ^219

241:
  %% bs_utf_r24_SUITE.erl:333
  %% Aliased:
  %%    _80
  _82 = bs_match `utf16`, _80, `[unsigned,big]`

  %% Aliased:
  %%    _82
  _237 = succeeded:guard _82
  br _237, ^237, ^219

237:
  %% Aliased:
  %%    _82
  _83 = bs_extract _82

  %% Aliased:
  %%    _83
  _240 = bif:'=:=' _83, `1072`
  br _240, ^239, ^219

239:
  %% Aliased:
  %%    _82
  _238 = bs_test_tail _82, `0`
  br _238, ^238, ^219

238:
  ret `mm_utf16be`

219:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _2
  _84 = bs_match `utf32`, _2, `[unsigned,big]`

  %% Aliased:
  %%    _84
  _276 = succeeded:guard _84
  br _276, ^276, ^275

276:
  %% Aliased:
  %%    _84
  _85 = bs_extract _84

  %% Aliased:
  %%    _85
  _330 = bif:'=:=' _85, `1052`
  br _330, ^329, ^275

329:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _84
  _86 = bs_match `utf32`, _84, `[unsigned,big]`

  %% Aliased:
  %%    _86
  _277 = succeeded:guard _86
  br _277, ^277, ^275

277:
  %% Aliased:
  %%    _86
  _87 = bs_extract _86

  %% Aliased:
  %%    _87
  _328 = bif:'=:=' _87, `1072`
  br _328, ^327, ^275

327:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _86
  _88 = bs_match `utf32`, _86, `[unsigned,big]`

  %% Aliased:
  %%    _88
  _278 = succeeded:guard _88
  br _278, ^278, ^275

278:
  %% Aliased:
  %%    _88
  _89 = bs_extract _88

  %% Aliased:
  %%    _89
  _326 = bif:'=:=' _89, `1089`
  br _326, ^325, ^275

325:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _88
  _90 = bs_match `utf32`, _88, `[unsigned,big]`

  %% Aliased:
  %%    _90
  _279 = succeeded:guard _90
  br _279, ^279, ^275

279:
  %% Aliased:
  %%    _90
  _91 = bs_extract _90

  %% Aliased:
  %%    _91
  _324 = bif:'=:=' _91, `1090`
  br _324, ^323, ^275

323:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _90
  _92 = bs_match `utf32`, _90, `[unsigned,big]`

  %% Aliased:
  %%    _92
  _280 = succeeded:guard _92
  br _280, ^280, ^275

280:
  %% Aliased:
  %%    _92
  _93 = bs_extract _92

  %% Aliased:
  %%    _93
  _322 = bif:'=:=' _93, `1077`
  br _322, ^321, ^275

321:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _92
  _94 = bs_match `utf32`, _92, `[unsigned,big]`

  %% Aliased:
  %%    _94
  _281 = succeeded:guard _94
  br _281, ^281, ^275

281:
  %% Aliased:
  %%    _94
  _95 = bs_extract _94

  %% Aliased:
  %%    _95
  _320 = bif:'=:=' _95, `1088`
  br _320, ^319, ^275

319:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _94
  _96 = bs_match `utf32`, _94, `[unsigned,big]`

  %% Aliased:
  %%    _96
  _282 = succeeded:guard _96
  br _282, ^282, ^275

282:
  %% Aliased:
  %%    _96
  _97 = bs_extract _96

  %% Aliased:
  %%    _97
  _318 = bif:'=:=' _97, `32`
  br _318, ^317, ^275

317:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _96
  _98 = bs_match `utf32`, _96, `[unsigned,big]`

  %% Aliased:
  %%    _98
  _283 = succeeded:guard _98
  br _283, ^283, ^275

283:
  %% Aliased:
  %%    _98
  _99 = bs_extract _98

  %% Aliased:
  %%    _99
  _316 = bif:'=:=' _99, `1080`
  br _316, ^315, ^275

315:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _98
  _100 = bs_match `utf32`, _98, `[unsigned,big]`

  %% Aliased:
  %%    _100
  _284 = succeeded:guard _100
  br _284, ^284, ^275

284:
  %% Aliased:
  %%    _100
  _101 = bs_extract _100

  %% Aliased:
  %%    _101
  _314 = bif:'=:=' _101, `32`
  br _314, ^313, ^275

313:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _100
  _102 = bs_match `utf32`, _100, `[unsigned,big]`

  %% Aliased:
  %%    _102
  _285 = succeeded:guard _102
  br _285, ^285, ^275

285:
  %% Aliased:
  %%    _102
  _103 = bs_extract _102

  %% Aliased:
  %%    _103
  _312 = bif:'=:=' _103, `1052`
  br _312, ^311, ^275

311:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _102
  _104 = bs_match `utf32`, _102, `[unsigned,big]`

  %% Aliased:
  %%    _104
  _286 = succeeded:guard _104
  br _286, ^286, ^275

286:
  %% Aliased:
  %%    _104
  _105 = bs_extract _104

  %% Aliased:
  %%    _105
  _310 = bif:'=:=' _105, `1072`
  br _310, ^309, ^275

309:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _104
  _106 = bs_match `utf32`, _104, `[unsigned,big]`

  %% Aliased:
  %%    _106
  _287 = succeeded:guard _106
  br _287, ^287, ^275

287:
  %% Aliased:
  %%    _106
  _107 = bs_extract _106

  %% Aliased:
  %%    _107
  _308 = bif:'=:=' _107, `1088`
  br _308, ^307, ^275

307:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _106
  _108 = bs_match `utf32`, _106, `[unsigned,big]`

  %% Aliased:
  %%    _108
  _288 = succeeded:guard _108
  br _288, ^288, ^275

288:
  %% Aliased:
  %%    _108
  _109 = bs_extract _108

  %% Aliased:
  %%    _109
  _306 = bif:'=:=' _109, `1075`
  br _306, ^305, ^275

305:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _108
  _110 = bs_match `utf32`, _108, `[unsigned,big]`

  %% Aliased:
  %%    _110
  _289 = succeeded:guard _110
  br _289, ^289, ^275

289:
  %% Aliased:
  %%    _110
  _111 = bs_extract _110

  %% Aliased:
  %%    _111
  _304 = bif:'=:=' _111, `1072`
  br _304, ^303, ^275

303:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _110
  _112 = bs_match `utf32`, _110, `[unsigned,big]`

  %% Aliased:
  %%    _112
  _290 = succeeded:guard _112
  br _290, ^290, ^275

290:
  %% Aliased:
  %%    _112
  _113 = bs_extract _112

  %% Aliased:
  %%    _113
  _302 = bif:'=:=' _113, `1088`
  br _302, ^301, ^275

301:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _112
  _114 = bs_match `utf32`, _112, `[unsigned,big]`

  %% Aliased:
  %%    _114
  _291 = succeeded:guard _114
  br _291, ^291, ^275

291:
  %% Aliased:
  %%    _114
  _115 = bs_extract _114

  %% Aliased:
  %%    _115
  _300 = bif:'=:=' _115, `1080`
  br _300, ^299, ^275

299:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _114
  _116 = bs_match `utf32`, _114, `[unsigned,big]`

  %% Aliased:
  %%    _116
  _292 = succeeded:guard _116
  br _292, ^292, ^275

292:
  %% Aliased:
  %%    _116
  _117 = bs_extract _116

  %% Aliased:
  %%    _117
  _298 = bif:'=:=' _117, `1090`
  br _298, ^297, ^275

297:
  %% bs_utf_r24_SUITE.erl:334
  %% Aliased:
  %%    _116
  _118 = bs_match `utf32`, _116, `[unsigned,big]`

  %% Aliased:
  %%    _118
  _293 = succeeded:guard _118
  br _293, ^293, ^275

293:
  %% Aliased:
  %%    _118
  _119 = bs_extract _118

  %% Aliased:
  %%    _119
  _296 = bif:'=:=' _119, `1072`
  br _296, ^295, ^275

295:
  %% Aliased:
  %%    _118
  _294 = bs_test_tail _118, `0`
  br _294, ^294, ^275

294:
  ret `mm_utf32be`

275:
  %% bs_utf_r24_SUITE.erl:335
  %% Aliased:
  %%    _2
  _120 = bs_match `integer`, _2, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _120
  _332 = succeeded:guard _120
  br _332, ^332, ^331

332:
  %% Aliased:
  %%    _120
  _121 = bs_extract _120

  %% Aliased:
  %%    _121
  _337 = bif:'=:=' _121, `98`
  br _337, ^336, ^331

336:
  %% Aliased:
  %%    _120
  _123 = bs_match `string`, _120, `<<"jÃ¶rn">>`

  %% Aliased:
  %%    _123
  _334 = succeeded:guard _123
  br _334, ^334, ^331

334:
  %% Aliased:
  %%    _123
  _335 = bs_test_tail _123, `0`
  br _335, ^335, ^331

335:
  ret `bjorn_utf8`

331:
  %% bs_utf_r24_SUITE.erl:336
  %% Aliased:
  %%    _2
  _124 = bs_match `utf16`, _2, `[unsigned,big]`

  %% Aliased:
  %%    _124
  _339 = succeeded:guard _124
  br _339, ^339, ^338

339:
  %% Aliased:
  %%    _124
  _125 = bs_extract _124

  %% Aliased:
  %%    _125
  _354 = bif:'=:=' _125, `98`
  br _354, ^353, ^338

353:
  %% bs_utf_r24_SUITE.erl:336
  %% Aliased:
  %%    _124
  _126 = bs_match `utf16`, _124, `[unsigned,big]`

  %% Aliased:
  %%    _126
  _340 = succeeded:guard _126
  br _340, ^340, ^338

340:
  %% Aliased:
  %%    _126
  _127 = bs_extract _126

  %% Aliased:
  %%    _127
  _352 = bif:'=:=' _127, `106`
  br _352, ^351, ^338

351:
  %% bs_utf_r24_SUITE.erl:336
  %% Aliased:
  %%    _126
  _128 = bs_match `utf16`, _126, `[unsigned,big]`

  %% Aliased:
  %%    _128
  _341 = succeeded:guard _128
  br _341, ^341, ^338

341:
  %% Aliased:
  %%    _128
  _129 = bs_extract _128

  %% Aliased:
  %%    _129
  _350 = bif:'=:=' _129, `246`
  br _350, ^349, ^338

349:
  %% bs_utf_r24_SUITE.erl:336
  %% Aliased:
  %%    _128
  _130 = bs_match `utf16`, _128, `[unsigned,big]`

  %% Aliased:
  %%    _130
  _342 = succeeded:guard _130
  br _342, ^342, ^338

342:
  %% Aliased:
  %%    _130
  _131 = bs_extract _130

  %% Aliased:
  %%    _131
  _348 = bif:'=:=' _131, `114`
  br _348, ^347, ^338

347:
  %% bs_utf_r24_SUITE.erl:336
  %% Aliased:
  %%    _130
  _132 = bs_match `utf16`, _130, `[unsigned,big]`

  %% Aliased:
  %%    _132
  _343 = succeeded:guard _132
  br _343, ^343, ^338

343:
  %% Aliased:
  %%    _132
  _133 = bs_extract _132

  %% Aliased:
  %%    _133
  _346 = bif:'=:=' _133, `110`
  br _346, ^345, ^338

345:
  %% Aliased:
  %%    _132
  _344 = bs_test_tail _132, `0`
  br _344, ^344, ^338

344:
  ret `bjorn_utf16be`

338:
  %% bs_utf_r24_SUITE.erl:337
  %% Aliased:
  %%    _2
  _134 = bs_match `utf16`, _2, `[unsigned,little]`

  %% Aliased:
  %%    _134
  _355 = succeeded:guard _134
  br _355, ^355, ^147

355:
  %% Aliased:
  %%    _134
  _135 = bs_extract _134

  %% Aliased:
  %%    _135
  _370 = bif:'=:=' _135, `98`
  br _370, ^369, ^147

369:
  %% bs_utf_r24_SUITE.erl:337
  %% Aliased:
  %%    _134
  _136 = bs_match `utf16`, _134, `[unsigned,little]`

  %% Aliased:
  %%    _136
  _356 = succeeded:guard _136
  br _356, ^356, ^147

356:
  %% Aliased:
  %%    _136
  _137 = bs_extract _136

  %% Aliased:
  %%    _137
  _368 = bif:'=:=' _137, `106`
  br _368, ^367, ^147

367:
  %% bs_utf_r24_SUITE.erl:337
  %% Aliased:
  %%    _136
  _138 = bs_match `utf16`, _136, `[unsigned,little]`

  %% Aliased:
  %%    _138
  _357 = succeeded:guard _138
  br _357, ^357, ^147

357:
  %% Aliased:
  %%    _138
  _139 = bs_extract _138

  %% Aliased:
  %%    _139
  _366 = bif:'=:=' _139, `246`
  br _366, ^365, ^147

365:
  %% bs_utf_r24_SUITE.erl:337
  %% Aliased:
  %%    _138
  _140 = bs_match `utf16`, _138, `[unsigned,little]`

  %% Aliased:
  %%    _140
  _358 = succeeded:guard _140
  br _358, ^358, ^147

358:
  %% Aliased:
  %%    _140
  _141 = bs_extract _140

  %% Aliased:
  %%    _141
  _364 = bif:'=:=' _141, `114`
  br _364, ^363, ^147

363:
  %% bs_utf_r24_SUITE.erl:337
  %% Aliased:
  %%    _140
  _142 = bs_match `utf16`, _140, `[unsigned,little]`

  %% Aliased:
  %%    _142
  _359 = succeeded:guard _142
  br _359, ^359, ^147

359:
  %% Aliased:
  %%    _142
  _143 = bs_extract _142

  %% Aliased:
  %%    _143
  _362 = bif:'=:=' _143, `110`
  br _362, ^361, ^147

361:
  %% Aliased:
  %%    _142
  _360 = bs_test_tail _142, `0`
  br _360, ^360, ^147

360:
  ret `bjorn_utf16le`

147:
  %% bs_utf_r24_SUITE.erl:327
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-match_literal/1-',1}}
  _144 = match_fail `function_clause`, _0

  %% Unique:
  %%    _144
  _372 = succeeded:body _144
  br _372, ^372, ^1

372:
  %% Unique:
  %%    _144
  ret _144

1:
  _145 = call (`erlang`:`error`/1), `badarg`
  ret _145
}

%% bs_utf_r24_SUITE.erl:339
%% Counter = 28
function `bs_utf_r24_SUITE`:`bad_literal_match`(_0) {
0:
  %% Aliased:
  %%    _0
  _3 = bs_start_match `new`, _0

  %% Aliased:
  %%    _3
  _27 = succeeded:guard _3
  br _27, ^27, ^12

27:
  %% bs_utf_r24_SUITE.erl:339
  %% Aliased:
  %%    _3
  _4 = bs_match `utf8`, _3, `[unsigned,big]`

  %% Aliased:
  %%    _4
  _14 = succeeded:guard _4
  br _14, ^14, ^13

14:
  %% Aliased:
  %%    _4
  _5 = bs_extract _4

  %% Aliased:
  %%    _5
  _17 = bif:'=:=' _5, `55296`
  br _17, ^16, ^13

16:
  %% Aliased:
  %%    _4
  _15 = bs_test_tail _4, `0`
  br _15, ^15, ^13

15:
  ret `ok`

13:
  %% bs_utf_r24_SUITE.erl:341
  %% Aliased:
  %%    _3
  _6 = bs_match `utf32`, _3, `[unsigned,big]`

  %% Aliased:
  %%    _6
  _19 = succeeded:guard _6
  br _19, ^19, ^18

19:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6

  %% Aliased:
  %%    _7
  _22 = bif:'=:=' _7, `55296`
  br _22, ^21, ^18

21:
  %% Aliased:
  %%    _6
  _20 = bs_test_tail _6, `0`
  br _20, ^20, ^18

20:
  ret `ok`

18:
  %% bs_utf_r24_SUITE.erl:343
  %% Aliased:
  %%    _3
  _8 = bs_match `utf32`, _3, `[unsigned,little]`

  %% Aliased:
  %%    _8
  _23 = succeeded:guard _8
  br _23, ^23, ^12

23:
  %% Aliased:
  %%    _8
  _9 = bs_extract _8

  %% Aliased:
  %%    _9
  _26 = bif:'=:=' _9, `55296`
  br _26, ^25, ^12

25:
  %% Aliased:
  %%    _8
  _24 = bs_test_tail _8, `0`
  br _24, ^24, ^12

24:
  ret `ok`

12:
  ret `error`
}

%% bs_utf_r24_SUITE.erl:347
%% Counter = 131
function `bs_utf_r24_SUITE`:`coverage`(_0) {
0:
  %% Aliased:
  %%    _0
  _41 = bif:is_list _0
  br _41, ^41, ^40

41:
  %% bs_utf_r24_SUITE.erl:349
  _10 = call (`coverage_1`/1), `<<225,128,128,240,144,128,128,0>>`

  %% Unique:
  %%    _10
  _42 = succeeded:body _10
  br _42, ^42, ^1

42:
  %% Unique:
  %%    _10
  _110 = bif:'=:=' _10, `0`
  br _110, ^109, ^44

109:
  %% bs_utf_r24_SUITE.erl:350
  _11 = call (`coverage_1`/1), `<<225,128,128,240,144,128,128,1>>`

  %% Unique:
  %%    _11
  _45 = succeeded:body _11
  br _45, ^45, ^1

45:
  %% Unique:
  %%    _11
  _107 = bif:'=:=' _11, `1`
  br _107, ^106, ^47

106:
  %% bs_utf_r24_SUITE.erl:352
  _12 = call (`coverage_2`/1), `<<225,128,128,240,144,128,128,0>>`

  %% Unique:
  %%    _12
  _48 = succeeded:body _12
  br _48, ^48, ^1

48:
  %% Unique:
  %%    _12
  _104 = bif:'=:=' _12, `0`
  br _104, ^103, ^50

103:
  %% bs_utf_r24_SUITE.erl:353
  _13 = call (`coverage_2`/1), `<<208,128,208,129,1>>`

  %% Unique:
  %%    _13
  _51 = succeeded:body _13
  br _51, ^51, ^1

51:
  %% Unique:
  %%    _13
  _101 = bif:'=:=' _13, `1`
  br _101, ^129, ^53

129:
  br ^130

130:
  _57 = new_try_tag `'catch'`
  br _57, ^55, ^56

55:
  %% bs_utf_r24_SUITE.erl:355
  _28 = call (`coverage_3`/1), `1`

  %% Unique:
  %%    _28
  _59 = succeeded:body _28
  br _59, ^59, ^56

59:
  br ^54

56:
  %% Unique:
  %%    _57
  _62 = landingpad `'catch'`, _57

  %% Aliased:
  %%    _62
  _60 = extract _62, `0`
  br ^54

54:
  _63 = phi { _60, ^56 }, { _28, ^59 }

  %% Aliased:
  %%    _63
  %% Unique:
  %%    _57
  _5 = catch_end _57, _63

  %% bs_utf_r24_SUITE.erl:355
  %% Aliased:
  %%    _5
  _29 = call (`fc`/1), _5

  %% Unique:
  %%    _29
  _64 = succeeded:body _29
  br _64, ^64, ^1

64:
  %% bs_utf_r24_SUITE.erl:360
  _14 = call (`cover_test_heap_utf8`/1), `533`

  %% Aliased:
  %%    _14
  _65 = succeeded:body _14
  br _65, ^65, ^1

65:
  %% Aliased:
  %%    _14
  _98 = bif:'=:=' _14, `{ok,<<200,149>>}`
  br _98, ^98, ^67

98:
  %% bs_utf_r24_SUITE.erl:361
  _15 = call (`cover_test_heap_utf16`/1), `1024`

  %% Aliased:
  %%    _15
  _68 = succeeded:body _15
  br _68, ^68, ^1

68:
  %% Aliased:
  %%    _15
  _94 = is_tagged_tuple _15, `2`, `ok`
  br _94, ^93, ^70

93:
  %% Aliased:
  %%    _15
  _17 = get_tuple_element _15, `0`

  %% Aliased:
  %%    _17
  _92 = bif:'=:=' _17, `ok`
  br _92, ^91, ^70

91:
  %% Aliased:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% Aliased:
  %%    _16
  _18 = bs_start_match `new`, _16

  %% Aliased:
  %%    _18
  _90 = succeeded:guard _18
  br _90, ^90, ^70

90:
  %% bs_utf_r24_SUITE.erl:361
  %% Aliased:
  %%    _18
  _19 = bs_match `utf16`, _18, `[unsigned,big]`

  %% Aliased:
  %%    _19
  _71 = succeeded:guard _19
  br _71, ^71, ^70

71:
  %% Aliased:
  %%    _19
  _20 = bs_extract _19

  %% Aliased:
  %%    _20
  _89 = bif:'=:=' _20, `1024`
  br _89, ^88, ^70

88:
  %% Aliased:
  %%    _19
  _87 = bs_test_tail _19, `0`
  br _87, ^87, ^70

87:
  %% bs_utf_r24_SUITE.erl:362
  _21 = call (`cover_test_heap_utf32`/1), `7966`

  %% Aliased:
  %%    _21
  _72 = succeeded:body _21
  br _72, ^72, ^1

72:
  %% Aliased:
  %%    _21
  _83 = is_tagged_tuple _21, `2`, `ok`
  br _83, ^82, ^74

82:
  %% Aliased:
  %%    _21
  _23 = get_tuple_element _21, `0`

  %% Aliased:
  %%    _23
  _81 = bif:'=:=' _23, `ok`
  br _81, ^80, ^74

80:
  %% Aliased:
  %%    _21
  _22 = get_tuple_element _21, `1`

  %% Aliased:
  %%    _22
  _24 = bs_start_match `new`, _22

  %% Aliased:
  %%    _24
  _79 = succeeded:guard _24
  br _79, ^79, ^74

79:
  %% bs_utf_r24_SUITE.erl:362
  %% Aliased:
  %%    _24
  _25 = bs_match `utf32`, _24, `[unsigned,big]`

  %% Aliased:
  %%    _25
  _75 = succeeded:guard _25
  br _75, ^75, ^74

75:
  %% Aliased:
  %%    _25
  _26 = bs_extract _25

  %% Aliased:
  %%    _26
  _78 = bif:'=:=' _26, `7966`
  br _78, ^77, ^74

77:
  %% Aliased:
  %%    _25
  _76 = bs_test_tail _25, `0`
  br _76, ^76, ^74

76:
  ret `ok`

74:
  %% bs_utf_r24_SUITE.erl:362
  %% Aliased:
  %%    _21
  _30 = match_fail `badmatch`, _21

  %% Unique:
  %%    _30
  _86 = succeeded:body _30
  br _86, ^86, ^1

86:
  %% Unique:
  %%    _30
  ret _30

70:
  %% bs_utf_r24_SUITE.erl:361
  %% Aliased:
  %%    _15
  _31 = match_fail `badmatch`, _15

  %% Unique:
  %%    _31
  _97 = succeeded:body _31
  br _97, ^97, ^1

97:
  %% Unique:
  %%    _31
  ret _31

67:
  %% bs_utf_r24_SUITE.erl:360
  %% Aliased:
  %%    _14
  _32 = match_fail `badmatch`, _14

  %% Unique:
  %%    _32
  _99 = succeeded:body _32
  br _99, ^99, ^1

99:
  %% Unique:
  %%    _32
  ret _32

53:
  %% bs_utf_r24_SUITE.erl:353
  %% Unique:
  %%    _13
  _33 = match_fail `badmatch`, _13

  %% Unique:
  %%    _33
  _102 = succeeded:body _33
  br _102, ^102, ^1

102:
  %% Unique:
  %%    _33
  ret _33

50:
  %% bs_utf_r24_SUITE.erl:352
  %% Unique:
  %%    _12
  _34 = match_fail `badmatch`, _12

  %% Unique:
  %%    _34
  _105 = succeeded:body _34
  br _105, ^105, ^1

105:
  %% Unique:
  %%    _34
  ret _34

47:
  %% bs_utf_r24_SUITE.erl:350
  %% Unique:
  %%    _11
  _35 = match_fail `badmatch`, _11

  %% Unique:
  %%    _35
  _108 = succeeded:body _35
  br _108, ^108, ^1

108:
  %% Unique:
  %%    _35
  ret _35

44:
  %% bs_utf_r24_SUITE.erl:349
  %% Unique:
  %%    _10
  _36 = match_fail `badmatch`, _10

  %% Unique:
  %%    _36
  _111 = succeeded:body _36
  br _111, ^111, ^1

111:
  %% Unique:
  %%    _36
  ret _36

40:
  %% bs_utf_r24_SUITE.erl:347
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage/1-',1}}
  _37 = match_fail `function_clause`, _0

  %% Unique:
  %%    _37
  _112 = succeeded:body _37
  br _112, ^112, ^1

112:
  %% Unique:
  %%    _37
  ret _37

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  ret _38
}

%% bs_utf_r24_SUITE.erl:366
%% Counter = 22
function `bs_utf_r24_SUITE`:`coverage_1`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = bs_start_match `new`, _0

  %% Aliased:
  %%    _2
  _20 = succeeded:guard _2
  br _20, ^20, ^11

20:
  %% Aliased:
  %%    _2
  _5 = bs_match `string`, _2, `<<225,128,128,240,144,128>>`

  %% Aliased:
  %%    _5
  _14 = succeeded:guard _5
  br _14, ^14, ^11

14:
  %% bs_utf_r24_SUITE.erl:366
  %% Aliased:
  %%    _5
  _6 = bs_match `integer`, _5, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _6
  _15 = succeeded:guard _6
  br _15, ^15, ^11

15:
  %% Aliased:
  %%    _6
  _7 = bs_extract _6
  switch _7, ^11, [
    { `32768`, ^18 },
    { `32769`, ^19 }
  ]

19:
  %% Aliased:
  %%    _6
  _17 = bs_test_tail _6, `0`
  br _17, ^17, ^11

17:
  ret `1`

18:
  %% Aliased:
  %%    _6
  _16 = bs_test_tail _6, `0`
  br _16, ^16, ^11

16:
  ret `0`

11:
  %% bs_utf_r24_SUITE.erl:366
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage_1/1-',1}}
  _8 = match_fail `function_clause`, _0

  %% Unique:
  %%    _8
  _21 = succeeded:body _8
  br _21, ^21, ^1

21:
  %% Unique:
  %%    _8
  ret _8

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  ret _9
}

%% bs_utf_r24_SUITE.erl:369
%% Counter = 24
function `bs_utf_r24_SUITE`:`coverage_2`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = bs_start_match `new`, _0

  %% Aliased:
  %%    _2
  _22 = succeeded:guard _2
  br _22, ^22, ^12

22:
  %% bs_utf_r24_SUITE.erl:369
  %% Aliased:
  %%    _2
  _3 = bs_match `integer`, _2, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _3
  _13 = succeeded:guard _3
  br _13, ^13, ^12

13:
  %% Aliased:
  %%    _3
  _4 = bs_extract _3
  switch _4, ^12, [
    { `53376`, ^21 },
    { `57728`, ^20 }
  ]

20:
  %% Aliased:
  %%    _3
  _7 = bs_match `string`, _3, `<<128,240,144,128,128,0>>`

  %% Aliased:
  %%    _7
  _16 = succeeded:guard _7
  br _16, ^16, ^12

16:
  %% Aliased:
  %%    _7
  _17 = bs_test_tail _7, `0`
  br _17, ^17, ^12

17:
  ret `0`

21:
  %% Aliased:
  %%    _3
  _8 = bs_match `string`, _3, `<<208,129,1>>`

  %% Aliased:
  %%    _8
  _18 = succeeded:guard _8
  br _18, ^18, ^12

18:
  %% Aliased:
  %%    _8
  _19 = bs_test_tail _8, `0`
  br _19, ^19, ^12

19:
  ret `1`

12:
  %% bs_utf_r24_SUITE.erl:369
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage_2/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _23 = succeeded:body _9
  br _23, ^23, ^1

23:
  %% Unique:
  %%    _9
  ret _9

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  ret _10
}

%% bs_utf_r24_SUITE.erl:372
%% Counter = 6
function `bs_utf_r24_SUITE`:`coverage_3`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:372
  %% Unique:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage_3/1-',1}}
  _2 = match_fail `function_clause`, _0

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:374
%% Counter = 6
function `bs_utf_r24_SUITE`:`cover_test_heap_utf8`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:374
  %% Aliased:
  %%    _0
  _1 = bs_create_bin `utf8`, `[0,{segment,1}]`, _0, `undefined`

  %% Aliased:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _1
  _2 = put_tuple `ok`, _1
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:375
%% Counter = 6
function `bs_utf_r24_SUITE`:`cover_test_heap_utf16`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:375
  %% Aliased:
  %%    _0
  _1 = bs_create_bin `utf16`, `[0,{segment,1}]`, _0, `undefined`

  %% Aliased:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _1
  _2 = put_tuple `ok`, _1
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:376
%% Counter = 6
function `bs_utf_r24_SUITE`:`cover_test_heap_utf32`(_0) {
0:
  %% bs_utf_r24_SUITE.erl:376
  %% Aliased:
  %%    _0
  _1 = bs_create_bin `utf32`, `[0,{segment,1}]`, _0, `undefined`

  %% Aliased:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _1
  _2 = put_tuple `ok`, _1
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:378
%% Counter = 4
function `bs_utf_r24_SUITE`:`utf_data`() {
0:
  ret `[{[65,8802,913,46],
   <<65,226,137,162,206,145,46>>,
   <<65,226,137,162,206,145,46>>},
  {[54620,44397,50612],
   <<237,149,156,234,181,173,236,150,180>>,
   <<237,149,156,234,181,173,236,150,180>>},
  {[26085,26412,35486],
   <<230,151,165,230,156,172,232,170,158>>,
   <<230,151,165,230,156,172,232,170,158>>}]`
}

%% bs_utf_r24_SUITE.erl:401
%% Counter = 4
function `bs_utf_r24_SUITE`:`utf16_data`() {
0:
  ret `{[74565,61,82,97],
  <<216,8,223,69,0,61,0,82,0,97>>,
  <<216,8,223,69,0,61,0,82,0,97>>,
  <<8,216,69,223,61,0,82,0,97,0>>,
  <<8,216,69,223,61,0,82,0,97,0>>}`
}

%% bs_utf_r24_SUITE.erl:420
%% Counter = 4
function `bs_utf_r24_SUITE`:`utf32_data`() {
0:
  ret `{[65,8802,913,46],
  <<0,0,0,65,0,0,34,98,0,0,3,145,0,0,0,46>>,
  <<0,0,0,65,0,0,34,98,0,0,3,145,0,0,0,46>>,
  <<65,0,0,0,98,34,0,0,145,3,0,0,46,0,0,0>>,
  <<65,0,0,0,98,34,0,0,145,3,0,0,46,0,0,0>>}`
}

%% bs_utf_r24_SUITE.erl:435
%% Counter = 24
function `bs_utf_r24_SUITE`:`fc`(_0) {
0:
  %% Aliased:
  %%    _0
  _20 = is_tagged_tuple _0, `2`, `'EXIT'`
  br _20, ^19, ^10

19:
  %% Aliased:
  %%    _0
  _4 = get_tuple_element _0, `0`

  %% Aliased:
  %%    _4
  _18 = bif:'=:=' _4, `'EXIT'`
  br _18, ^17, ^10

17:
  %% Aliased:
  %%    _0
  _3 = get_tuple_element _0, `1`

  %% Aliased:
  %%    _3
  _14 = is_tagged_tuple _3, `2`, `function_clause`
  br _14, ^13, ^10

13:
  %% Aliased:
  %%    _3
  _6 = get_tuple_element _3, `0`

  %% Aliased:
  %%    _6
  _12 = bif:'=:=' _6, `function_clause`
  br _12, ^11, ^10

11:
  ret `ok`

10:
  %% bs_utf_r24_SUITE.erl:435
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-fc/1-',1}}
  _7 = match_fail `function_clause`, _0

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br _23, ^23, ^1

23:
  %% Unique:
  %%    _7
  ret _7

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  ret _8
}

%% bs_utf_r24_SUITE.erl:438
%% Counter = 4
function `bs_utf_r24_SUITE`:`id`(_0) {
0:
  %% Unique:
  %%    _0
  ret _0
}

%% Counter = 6
function `bs_utf_r24_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `bs_utf_r24_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% Counter = 6
function `bs_utf_r24_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `bs_utf_r24_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  ret _3
}

%% bs_utf_r24_SUITE.erl:105
%% Counter = 48
function `bs_utf_r24_SUITE`:`'-unused_utf_char/1-lc$^0/1-0-'`(_4) {
0:
  %% Unique:
  %%    _4
  _41 = is_nonempty_list _4
  br _41, ^41, ^26

41:
  %% Unique:
  %%    _4
  _15 = get_hd _4

  %% Unique:
  %%    _4
  _14 = get_tl _4

  %% Unique:
  %%    _15
  _37 = bif:is_tuple _15
  br _37, ^37, ^27

37:
  %% Unique:
  %%    _15
  _38 = bif:tuple_size _15

  %% Unique:
  %%    _38
  _39 = bif:'=:=' _38, `2`
  br _39, ^36, ^27

36:
  %% Unique:
  %%    _15
  _17 = get_tuple_element _15, `0`

  %% Unique:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% bs_utf_r24_SUITE.erl:104
  %% Unique:
  %%    _16
  _7 = call (`utf8_len`/1), _16

  %% Unique:
  %%    _7
  _28 = succeeded:body _7
  br _28, ^28, ^1

28:
  %% bs_utf_r24_SUITE.erl:104
  %% Unique:
  %%    _17
  _6 = bif:length _17

  %% Unique:
  %%    _6
  _29 = succeeded:body _6
  br _29, ^29, ^1

29:
  %% bs_utf_r24_SUITE.erl:104
  %% Unique:
  %%    _6, 
  %%    _7
  _18 = bif:'=:=' _7, _6
  br _18, ^33, ^31

33:
  %% bs_utf_r24_SUITE.erl:105
  %% Unique:
  %%    _14
  _19 = call (`'-unused_utf_char/1-lc$^0/1-0-'`/1), _14

  %% Aliased:
  %%    _19
  _32 = succeeded:body _19
  br _32, ^32, ^1

32:
  %% Aliased:
  %%    _19
  ret _19

31:
  %% bs_utf_r24_SUITE.erl:104
  _20 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _20
  _35 = succeeded:body _20
  br _35, ^35, ^1

35:
  %% Unique:
  %%    _20
  ret _20

27:
  %% bs_utf_r24_SUITE.erl:105
  %% Unique:
  %%    _14
  _21 = call (`'-unused_utf_char/1-lc$^0/1-0-'`/1), _14

  %% Aliased:
  %%    _21
  _40 = succeeded:body _21
  br _40, ^40, ^1

40:
  %% Aliased:
  %%    _21
  ret _21

26:
  %% Unique:
  %%    _4
  _42 = bif:'=:=' _4, `[]`
  br _42, ^42, ^25

42:
  ret `[]`

25:
  %% Unique:
  %%    _4
  _13 = put_tuple `bad_generator`, _4

  %% bs_utf_r24_SUITE.erl:105
  %% Unique:
  %%    _13
  _22 = call (`erlang`:`error`/1), _13

  %% Aliased:
  %%    _22
  _43 = succeeded:body _22
  br _43, ^43, ^1

43:
  %% Aliased:
  %%    _22
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  ret _23
}

%% bs_utf_r24_SUITE.erl:86
%% Counter = 62
function `bs_utf_r24_SUITE`:`'-utf8_roundtrip_1/1-lc$^1/1-1-'`(_13) {
0:
  %% Aliased:
  %%    _13
  _58 = is_nonempty_list _13
  br _58, ^58, ^49

58:
  %% Aliased:
  %%    _13
  _37 = get_hd _13

  %% Aliased:
  %%    _13
  _36 = get_tl _13

  %% bs_utf_r24_SUITE.erl:86
  %% Aliased:
  %%    _37
  _15 = bs_create_bin `utf8`, `[0,{segment,1}]`, _37, `undefined`

  %% Aliased:
  %%    _15
  _50 = succeeded:body _15
  br _50, ^50, ^1

50:
  %% bs_utf_r24_SUITE.erl:86
  %% Aliased:
  %%    _15, 
  %%    _37
  _38 = call (`utf8_guard`/2), _37, _15

  %% Unique:
  %%    _38
  _51 = succeeded:body _38
  br _51, ^51, ^1

51:
  %% Unique:
  %%    _38
  _56 = bif:'=:=' _38, `error`
  br _56, ^55, ^53

55:
  %% bs_utf_r24_SUITE.erl:86
  %% Aliased:
  %%    _36
  _43 = call (`'-utf8_roundtrip_1/1-lc$^1/1-1-'`/1), _36

  %% Aliased:
  %%    _43
  _54 = succeeded:body _43
  br _54, ^54, ^1

54:
  %% Aliased:
  %%    _43
  ret _43

53:
  %% bs_utf_r24_SUITE.erl:86
  %% Unique:
  %%    _38
  _44 = match_fail `badmatch`, _38

  %% Unique:
  %%    _44
  _57 = succeeded:body _44
  br _57, ^57, ^1

57:
  %% Unique:
  %%    _44
  ret _44

49:
  %% Aliased:
  %%    _13
  _59 = bif:'=:=' _13, `[]`
  br _59, ^59, ^48

59:
  ret `[]`

48:
  %% Aliased:
  %%    _13
  _35 = put_tuple `bad_generator`, _13

  %% bs_utf_r24_SUITE.erl:86
  %% Unique:
  %%    _35
  _45 = call (`erlang`:`error`/1), _35

  %% Aliased:
  %%    _45
  _60 = succeeded:body _45
  br _60, ^60, ^1

60:
  %% Aliased:
  %%    _45
  ret _45

1:
  _46 = call (`erlang`:`error`/1), `badarg`
  ret _46
}

%% bs_utf_r24_SUITE.erl:85
%% Counter = 58
function `bs_utf_r24_SUITE`:`'-utf8_roundtrip_1/1-lc$^0/1-0-'`(_5) {
0:
  %% Aliased:
  %%    _5
  _54 = is_nonempty_list _5
  br _54, ^54, ^45

54:
  %% Aliased:
  %%    _5
  _31 = get_hd _5

  %% Aliased:
  %%    _5
  _30 = get_tl _5

  %% bs_utf_r24_SUITE.erl:85
  %% Aliased:
  %%    _31
  _7 = bs_create_bin `binary`, `[1]`, `<<"*">>`, `all`, `utf8`, `[0,{segment,2}]`, _31, `undefined`

  %% Aliased:
  %%    _7
  _46 = succeeded:body _7
  br _46, ^46, ^1

46:
  %% bs_utf_r24_SUITE.erl:85
  %% Aliased:
  %%    _7, 
  %%    _31
  _32 = call (`utf8_guard`/2), _31, _7

  %% Unique:
  %%    _32
  _47 = succeeded:body _32
  br _47, ^47, ^1

47:
  %% Unique:
  %%    _32
  _52 = bif:'=:=' _32, `ok`
  br _52, ^51, ^49

51:
  %% bs_utf_r24_SUITE.erl:85
  %% Aliased:
  %%    _30
  _39 = call (`'-utf8_roundtrip_1/1-lc$^0/1-0-'`/1), _30

  %% Aliased:
  %%    _39
  _50 = succeeded:body _39
  br _50, ^50, ^1

50:
  %% Aliased:
  %%    _39
  ret _39

49:
  %% bs_utf_r24_SUITE.erl:85
  %% Unique:
  %%    _32
  _40 = match_fail `badmatch`, _32

  %% Unique:
  %%    _40
  _53 = succeeded:body _40
  br _53, ^53, ^1

53:
  %% Unique:
  %%    _40
  ret _40

45:
  %% Aliased:
  %%    _5
  _55 = bif:'=:=' _5, `[]`
  br _55, ^55, ^44

55:
  ret `[]`

44:
  %% Aliased:
  %%    _5
  _29 = put_tuple `bad_generator`, _5

  %% bs_utf_r24_SUITE.erl:85
  %% Unique:
  %%    _29
  _41 = call (`erlang`:`error`/1), _29

  %% Aliased:
  %%    _41
  _56 = succeeded:body _41
  br _56, ^56, ^1

56:
  %% Aliased:
  %%    _41
  ret _41

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  ret _42
}

%% bs_utf_r24_SUITE.erl:79
%% Counter = 27
function `bs_utf_r24_SUITE`:`'-utf8_roundtrip/1-lc$^0/1-0-'`(_4) {
0:
  %% Unique:
  %%    _4
  _22 = is_nonempty_list _4
  br _22, ^22, ^19

22:
  %% Unique:
  %%    _4
  _12 = get_hd _4

  %% Unique:
  %%    _4
  _11 = get_tl _4

  %% bs_utf_r24_SUITE.erl:79
  %% Unique:
  %%    _12
  _13 = call (`utf8_roundtrip_1`/1), _12

  %% Unique:
  %%    _13
  _20 = succeeded:body _13
  br _20, ^20, ^1

20:
  %% bs_utf_r24_SUITE.erl:79
  %% Unique:
  %%    _11
  _14 = call (`'-utf8_roundtrip/1-lc$^0/1-0-'`/1), _11

  %% Aliased:
  %%    _14
  _21 = succeeded:body _14
  br _21, ^21, ^1

21:
  %% Aliased:
  %%    _14
  ret _14

19:
  %% Unique:
  %%    _4
  _23 = bif:'=:=' _4, `[]`
  br _23, ^23, ^18

23:
  ret `[]`

18:
  %% Unique:
  %%    _4
  _10 = put_tuple `bad_generator`, _4

  %% bs_utf_r24_SUITE.erl:79
  %% Unique:
  %%    _10
  _15 = call (`erlang`:`error`/1), _10

  %% Aliased:
  %%    _15
  _24 = succeeded:body _15
  br _24, ^24, ^1

24:
  %% Aliased:
  %%    _15
  ret _15

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  ret _16
}
