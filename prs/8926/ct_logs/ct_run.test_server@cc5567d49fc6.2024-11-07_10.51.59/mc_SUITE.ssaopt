module mc_SUITE.
exports [{all,0},
         {bad_generators,1},
         {basic,1},
         {duplicate_keys,1},
         {end_per_group,2},
         {end_per_suite,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {mixed,1},
         {module_info,0},
         {module_info,1},
         {shadow,1},
         {suite,0}].
attributes [].

%% mc_SUITE.erl:32
%% Counter = 4
%% bs_ensure_opt: true
function `mc_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% mc_SUITE.erl:34
%% Counter = 4
%% bs_ensure_opt: true
function `mc_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% mc_SUITE.erl:37
%% Counter = 7
%% bs_ensure_opt: true
function `mc_SUITE`:`groups`() {
0:
  %% mc_SUITE.erl:38
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[basic,duplicate_keys,mixed,shadow,bad_generators]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list('bad_generators' | 'basic' | 'duplicate_keys' | 'mixed' | 'shadow')}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list('bad_generators' | 'basic' | 'duplicate_keys' | 'mixed' | 'shadow')})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% mc_SUITE.erl:45
%% Counter = 6
%% bs_ensure_opt: true
function `mc_SUITE`:`init_per_suite`(_0) {
0:
  %% mc_SUITE.erl:46
  _2 = call (`test_lib`:`recompile`/1), `mc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% mc_SUITE.erl:49
%% Counter = 4
%% bs_ensure_opt: true
function `mc_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% mc_SUITE.erl:52
%% Counter = 4
%% bs_ensure_opt: true
function `mc_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% mc_SUITE.erl:55
%% Counter = 4
%% bs_ensure_opt: true
function `mc_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% mc_SUITE.erl:60
%% Counter = 1263
%% bs_ensure_opt: true
function `mc_SUITE`:`basic`(_0) {
0:
  %% mc_SUITE.erl:61
  %% Result type:
  %%    'ok'
  _676 = call (`mc_double`/1), `0`

  %% Unique:
  %%    _676
  _840 = succeeded:body _676
  br _840, ^840, ^1

840:
  %% mc_SUITE.erl:62
  %% Result type:
  %%    'ok'
  _677 = call (`mc_double`/1), `1`

  %% Unique:
  %%    _677
  _841 = succeeded:body _677
  br _841, ^841, ^1

841:
  %% mc_SUITE.erl:63
  %% Result type:
  %%    'ok'
  _678 = call (`mc_double`/1), `2`

  %% Unique:
  %%    _678
  _842 = succeeded:body _678
  br _842, ^842, ^1

842:
  %% mc_SUITE.erl:64
  %% Result type:
  %%    'ok'
  _679 = call (`mc_double`/1), `3`

  %% Unique:
  %%    _679
  _843 = succeeded:body _679
  br _843, ^843, ^1

843:
  %% mc_SUITE.erl:65
  %% Result type:
  %%    'ok'
  _680 = call (`mc_double`/1), `4`

  %% Unique:
  %%    _680
  _844 = succeeded:body _680
  br _844, ^844, ^1

844:
  %% mc_SUITE.erl:66
  %% Result type:
  %%    'ok'
  _681 = call (`mc_double`/1), `5`

  %% Unique:
  %%    _681
  _845 = succeeded:body _681
  br _845, ^845, ^1

845:
  %% mc_SUITE.erl:68
  %% Result type:
  %%    'ok'
  _682 = call (`mc_double`/1), `17`

  %% Unique:
  %%    _682
  _846 = succeeded:body _682
  br _846, ^846, ^1

846:
  %% mc_SUITE.erl:69
  %% Result type:
  %%    'ok'
  _683 = call (`mc_double`/1), `18`

  %% Unique:
  %%    _683
  _847 = succeeded:body _683
  br _847, ^847, ^1

847:
  %% mc_SUITE.erl:70
  %% Result type:
  %%    'ok'
  _684 = call (`mc_double`/1), `19`

  %% Unique:
  %%    _684
  _848 = succeeded:body _684
  br _848, ^848, ^1

848:
  %% mc_SUITE.erl:72
  %% Result type:
  %%    'ok'
  _685 = call (`mc_double`/1), `30`

  %% Unique:
  %%    _685
  _849 = succeeded:body _685
  br _849, ^849, ^1

849:
  %% mc_SUITE.erl:73
  %% Result type:
  %%    'ok'
  _686 = call (`mc_double`/1), `31`

  %% Unique:
  %%    _686
  _850 = succeeded:body _686
  br _850, ^850, ^1

850:
  %% mc_SUITE.erl:74
  %% Result type:
  %%    'ok'
  _687 = call (`mc_double`/1), `32`

  %% Unique:
  %%    _687
  _851 = succeeded:body _687
  br _851, ^851, ^1

851:
  %% mc_SUITE.erl:75
  %% Result type:
  %%    'ok'
  _688 = call (`mc_double`/1), `33`

  %% Unique:
  %%    _688
  _852 = succeeded:body _688
  br _852, ^852, ^1

852:
  %% mc_SUITE.erl:76
  %% Result type:
  %%    'ok'
  _689 = call (`mc_double`/1), `34`

  %% Unique:
  %%    _689
  _853 = succeeded:body _689
  br _853, ^853, ^1

853:
  %% mc_SUITE.erl:78
  %% Result type:
  %%    'ok'
  _690 = call (`mc_double`/1), `63`

  %% Unique:
  %%    _690
  _854 = succeeded:body _690
  br _854, ^854, ^1

854:
  %% mc_SUITE.erl:79
  %% Result type:
  %%    'ok'
  _691 = call (`mc_double`/1), `64`

  %% Unique:
  %%    _691
  _855 = succeeded:body _691
  br _855, ^855, ^1

855:
  %% mc_SUITE.erl:80
  %% Result type:
  %%    'ok'
  _692 = call (`mc_double`/1), `65`

  %% Unique:
  %%    _692
  _856 = succeeded:body _692
  br _856, ^856, ^1

856:
  %% mc_SUITE.erl:82
  %% Result type:
  %%    'ok'
  _693 = call (`mc_double`/1), `77`

  %% Unique:
  %%    _693
  _857 = succeeded:body _693
  br _857, ^857, ^1

857:
  %% mc_SUITE.erl:83
  %% Result type:
  %%    'ok'
  _694 = call (`mc_double`/1), `127`

  %% Unique:
  %%    _694
  _858 = succeeded:body _694
  br _858, ^858, ^1

858:
  %% mc_SUITE.erl:84
  %% Result type:
  %%    'ok'
  _695 = call (`mc_double`/1), `128`

  %% Unique:
  %%    _695
  _859 = succeeded:body _695
  br _859, ^859, ^1

859:
  %% mc_SUITE.erl:85
  %% Result type:
  %%    'ok'
  _696 = call (`mc_double`/1), `255`

  %% Unique:
  %%    _696
  _860 = succeeded:body _696
  br _860, ^860, ^1

860:
  %% mc_SUITE.erl:86
  %% Result type:
  %%    'ok'
  _697 = call (`mc_double`/1), `333`

  %% Unique:
  %%    _697
  _861 = succeeded:body _697
  br _861, ^861, ^1

861:
  %% mc_SUITE.erl:87
  %% Result type:
  %%    'ok'
  _698 = call (`mc_double`/1), `444`

  %% Unique:
  %%    _698
  _862 = succeeded:body _698
  br _862, ^862, ^1

862:
  %% mc_SUITE.erl:88
  %% Result type:
  %%    'ok'
  _699 = call (`mc_double`/1), `7777`

  %% Unique:
  %%    _699
  _863 = succeeded:body _699
  br _863, ^863, ^1

863:
  %% mc_SUITE.erl:89
  %% Result type:
  %%    'ok'
  _700 = call (`mc_double`/1), `8765`

  %% Unique:
  %%    _700
  _864 = succeeded:body _700
  br _864, ^864, ^1

864:
  %% mc_SUITE.erl:92
  _6 = call (`id`/1), `#{a => [b]}`

  %% Aliased:
  %%    _6
  _865 = succeeded:body _6
  br _865, ^865, ^1

865:
  %% mc_SUITE.erl:92
  %% Aliased:
  %%    _6
  _300 = call (`erts_internal`:`mc_iterator`/1), _6

  %% Aliased:
  %%    _300
  _866 = succeeded:body _300
  br _866, ^866, ^1

866:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _300
  _870 = bif:'=:=' _300, `[]`
  br _870, ^870, ^1189

870:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _302 = put_tuple `bad_generator`, _6

  %% mc_SUITE.erl:92
  %% Unique:
  %%    _302
  _704 = call (`erlang`:`error`/1), _302

  %% Aliased:
  %%    _704
  _869 = succeeded:body _704
  br ^1

1189:
  %% mc_SUITE.erl:92
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _300
  _10 = call (`'-basic/1-lc$^0/1-0-'`/1), _300

  %% Unique:
  %%    _10
  _871 = succeeded:body _10
  br _871, ^871, ^1

871:
  _303 = call (`maps`:`from_list`/1), `[]`

  %% Aliased:
  %%    _303
  _872 = succeeded:body _303
  br _872, ^1186, ^1

1186:
  %% mc_SUITE.erl:93
  _17 = call (`id`/1), `#{42 => whatever}`

  %% Aliased:
  %%    _17
  _875 = succeeded:body _17
  br _875, ^875, ^1

875:
  %% mc_SUITE.erl:93
  %% Aliased:
  %%    _17
  _313 = call (`erts_internal`:`mc_iterator`/1), _17

  %% Aliased:
  %%    _313
  _876 = succeeded:body _313
  br _876, ^876, ^1

876:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _313
  _880 = bif:'=:=' _313, `[]`
  br _880, ^880, ^1191

880:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _315 = put_tuple `bad_generator`, _17

  %% mc_SUITE.erl:93
  %% Unique:
  %%    _315
  _708 = call (`erlang`:`error`/1), _315

  %% Aliased:
  %%    _708
  _879 = succeeded:body _708
  br ^1

1191:
  %% mc_SUITE.erl:93
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _313
  _21 = call (`'-basic/1-lc$^1/1-1-'`/1), _313

  %% Unique:
  %%    _21
  _881 = succeeded:body _21
  br _881, ^881, ^1

881:
  _316 = call (`maps`:`from_list`/1), `[]`

  %% Aliased:
  %%    _316
  _882 = succeeded:body _316
  br _882, ^1184, ^1

1184:
  %% mc_SUITE.erl:97
  _327 = call (`erts_internal`:`mc_iterator`/1), `#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}`

  %% Aliased:
  %%    _327
  _885 = succeeded:body _327
  br _885, ^885, ^1

885:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _327
  _889 = bif:'=:=' _327, `[]`
  br _889, ^889, ^1192

889:
  %% mc_SUITE.erl:97
  _713 = call (`erlang`:`error`/1), `{bad_generator,#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}}`

  %% Aliased:
  %%    _713
  _888 = succeeded:body _713
  br ^1

1192:
  %% mc_SUITE.erl:97
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _327
  _32 = call (`'-basic/1-lc$^2/1-2-'`/1), _327

  %% Unique:
  %%    _32
  _890 = succeeded:body _32
  br _890, ^890, ^1

890:
  %% mc_SUITE.erl:97
  %% Unique:
  %%    _32
  _329 = call (`lists`:`sort`/1), _32

  %% Aliased:
  %%    _329
  _891 = succeeded:body _329
  br _891, ^891, ^1

891:
  %% Argument types:
  %%    _329 => list(atom())
  %% Aliased:
  %%    _329
  _1182 = bif:'=:=' _329, `[c,d]`
  br _1182, ^1182, ^893

1182:
  %% mc_SUITE.erl:98
  _342 = call (`erts_internal`:`mc_iterator`/1), `#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}`

  %% Aliased:
  %%    _342
  _894 = succeeded:body _342
  br _894, ^894, ^1

894:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _342
  _898 = bif:'=:=' _342, `[]`
  br _898, ^898, ^1193

898:
  %% mc_SUITE.erl:98
  _718 = call (`erlang`:`error`/1), `{bad_generator,#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}}`

  %% Aliased:
  %%    _718
  _897 = succeeded:body _718
  br ^1

1193:
  %% mc_SUITE.erl:98
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _342
  _42 = call (`'-basic/1-lc$^3/1-3-'`/1), _342

  %% Unique:
  %%    _42
  _899 = succeeded:body _42
  br _899, ^899, ^1

899:
  %% mc_SUITE.erl:98
  %% Unique:
  %%    _42
  _344 = call (`lists`:`sort`/1), _42

  %% Aliased:
  %%    _344
  _900 = succeeded:body _344
  br _900, ^900, ^1

900:
  %% Argument types:
  %%    _344 => list(any())
  %% Aliased:
  %%    _344
  _1180 = bif:'=:=' _344, `[{a,b,c},[1,2,3]]`
  br _1180, ^1180, ^902

1180:
  %% mc_SUITE.erl:99
  _359 = call (`erts_internal`:`mc_iterator`/1), `#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}`

  %% Aliased:
  %%    _359
  _903 = succeeded:body _359
  br _903, ^903, ^1

903:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _359
  _907 = bif:'=:=' _359, `[]`
  br _907, ^907, ^1194

907:
  %% mc_SUITE.erl:99
  _723 = call (`erlang`:`error`/1), `{bad_generator,#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}}`

  %% Aliased:
  %%    _723
  _906 = succeeded:body _723
  br ^1

1194:
  %% mc_SUITE.erl:99
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _359
  _52 = call (`'-basic/1-lc$^4/1-4-'`/1), _359

  %% Unique:
  %%    _52
  _908 = succeeded:body _52
  br _908, ^908, ^1

908:
  %% Argument types:
  %%    _52 => list(any())
  %% Unique:
  %%    _52
  _1178 = bif:'=:=' _52, `[1]`
  br _1178, ^1178, ^910

1178:
  %% mc_SUITE.erl:100
  _374 = call (`erts_internal`:`mc_iterator`/1), `#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}`

  %% Aliased:
  %%    _374
  _911 = succeeded:body _374
  br _911, ^911, ^1

911:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _374
  _915 = bif:'=:=' _374, `[]`
  br _915, ^915, ^1195

915:
  %% mc_SUITE.erl:100
  _728 = call (`erlang`:`error`/1), `{bad_generator,#{c => [4,5,6],d => {x,y},{a,1} => {a,b,c},{b,42} => [1,2,3]}}`

  %% Aliased:
  %%    _728
  _914 = succeeded:body _728
  br ^1

1195:
  %% mc_SUITE.erl:100
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _374
  _62 = call (`'-basic/1-lc$^5/1-5-'`/1), _374

  %% Unique:
  %%    _62
  _916 = succeeded:body _62
  br _916, ^916, ^1

916:
  %% mc_SUITE.erl:100
  %% Unique:
  %%    _62
  _376 = call (`lists`:`sort`/1), _62

  %% Aliased:
  %%    _376
  _917 = succeeded:body _376
  br _917, ^917, ^1

917:
  %% Argument types:
  %%    _376 => list(any())
  %% Aliased:
  %%    _376
  _1176 = bif:'=:=' _376, `[c,{b,42}]`
  br _1176, ^1176, ^919

1176:
  %% mc_SUITE.erl:103
  _387 = call (`erts_internal`:`mc_iterator`/1), `#{}`

  %% Aliased:
  %%    _387
  _920 = succeeded:body _387
  br _920, ^920, ^1

920:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _387
  _924 = bif:'=:=' _387, `[]`
  br _924, ^924, ^1196

924:
  %% mc_SUITE.erl:103
  _733 = call (`erlang`:`error`/1), `{bad_generator,#{}}`

  %% Aliased:
  %%    _733
  _923 = succeeded:body _733
  br ^1

1196:
  %% mc_SUITE.erl:103
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _387
  _72 = call (`'-basic/1-lc$^6/1-6-'`/1), _387

  %% Unique:
  %%    _72
  _925 = succeeded:body _72
  br _925, ^925, ^1

925:
  %% Argument types:
  %%    _72 => list(0)
  %% Unique:
  %%    _72
  _1174 = bif:'=:=' _72, `[]`
  br _1174, ^1174, ^927

1174:
  %% mc_SUITE.erl:104
  _399 = call (`erts_internal`:`mc_iterator`/1), `#{x => y}`

  %% Aliased:
  %%    _399
  _928 = succeeded:body _399
  br _928, ^928, ^1

928:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _399
  _932 = bif:'=:=' _399, `[]`
  br _932, ^932, ^1197

932:
  %% mc_SUITE.erl:104
  _738 = call (`erlang`:`error`/1), `{bad_generator,#{x => y}}`

  %% Aliased:
  %%    _738
  _931 = succeeded:body _738
  br ^1

1197:
  %% mc_SUITE.erl:104
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _399
  _82 = call (`'-basic/1-lc$^7/1-7-'`/1), _399

  %% Unique:
  %%    _82
  _933 = succeeded:body _82
  br _933, ^933, ^1

933:
  %% Argument types:
  %%    _82 => list(0)
  %% Unique:
  %%    _82
  _1172 = bif:'=:=' _82, `[]`
  br _1172, ^1172, ^935

1172:
  %% mc_SUITE.erl:105
  _411 = call (`erts_internal`:`mc_iterator`/1), `#{a => b}`

  %% Aliased:
  %%    _411
  _936 = succeeded:body _411
  br _936, ^936, ^1

936:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _411
  _940 = bif:'=:=' _411, `[]`
  br _940, ^940, ^1198

940:
  %% mc_SUITE.erl:105
  _743 = call (`erlang`:`error`/1), `{bad_generator,#{a => b}}`

  %% Aliased:
  %%    _743
  _939 = succeeded:body _743
  br ^1

1198:
  %% mc_SUITE.erl:105
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _411
  _92 = call (`'-basic/1-lc$^8/1-8-'`/1), _411

  %% Unique:
  %%    _92
  _941 = succeeded:body _92
  br _941, ^941, ^1

941:
  %% Argument types:
  %%    _92 => list(0)
  %% Unique:
  %%    _92
  _1170 = bif:'=:=' _92, `[0]`
  br _1170, ^1170, ^943

1170:
  %% mc_SUITE.erl:107
  _413 = call (`erts_internal`:`mc_iterator`/1), `#{}`

  %% Aliased:
  %%    _413
  _944 = succeeded:body _413
  br _944, ^944, ^1

944:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _413
  _948 = bif:'=:=' _413, `[]`
  br _948, ^948, ^1199

948:
  %% mc_SUITE.erl:107
  _744 = call (`erlang`:`error`/1), `{bad_generator,#{}}`

  %% Aliased:
  %%    _744
  _947 = succeeded:body _744
  br ^1

1199:
  %% mc_SUITE.erl:107
  _94 = bs_init_writable `256`

  %% mc_SUITE.erl:107
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _413
  %% Unique:
  %%    _94
  _105 = call (`'-basic/1-lbc$^9/2-9-'`/2), _413, _94

  %% Unique:
  %%    _105
  _949 = succeeded:body _105
  br _949, ^949, ^1

949:
  %% Argument types:
  %%    _105 => bitstring(8,appendable)
  %% Unique:
  %%    _105
  _1168 = bif:'=:=' _105, `<<>>`
  br _1168, ^1168, ^951

1168:
  %% mc_SUITE.erl:108
  _427 = call (`erts_internal`:`mc_iterator`/1), `#{x => y}`

  %% Aliased:
  %%    _427
  _952 = succeeded:body _427
  br _952, ^952, ^1

952:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _427
  _956 = bif:'=:=' _427, `[]`
  br _956, ^956, ^1201

956:
  %% mc_SUITE.erl:108
  _749 = call (`erlang`:`error`/1), `{bad_generator,#{x => y}}`

  %% Aliased:
  %%    _749
  _955 = succeeded:body _749
  br ^1

1201:
  %% mc_SUITE.erl:108
  _107 = bs_init_writable `256`

  %% mc_SUITE.erl:108
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _427
  %% Unique:
  %%    _107
  _118 = call (`'-basic/1-lbc$^10/2-10-'`/2), _427, _107

  %% Unique:
  %%    _118
  _957 = succeeded:body _118
  br _957, ^957, ^1

957:
  %% Argument types:
  %%    _118 => bitstring(8,appendable)
  %% Unique:
  %%    _118
  _1166 = bif:'=:=' _118, `<<>>`
  br _1166, ^1166, ^959

1166:
  %% mc_SUITE.erl:109
  _441 = call (`erts_internal`:`mc_iterator`/1), `#{a => b}`

  %% Aliased:
  %%    _441
  _960 = succeeded:body _441
  br _960, ^960, ^1

960:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _441
  _964 = bif:'=:=' _441, `[]`
  br _964, ^964, ^1203

964:
  %% mc_SUITE.erl:109
  _754 = call (`erlang`:`error`/1), `{bad_generator,#{a => b}}`

  %% Aliased:
  %%    _754
  _963 = succeeded:body _754
  br ^1

1203:
  %% mc_SUITE.erl:109
  _120 = bs_init_writable `256`

  %% mc_SUITE.erl:109
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _441
  %% Unique:
  %%    _120
  _131 = call (`'-basic/1-lbc$^11/2-11-'`/2), _441, _120

  %% Unique:
  %%    _131
  _965 = succeeded:body _131
  br _965, ^965, ^1

965:
  %% Argument types:
  %%    _131 => bitstring(8,appendable)
  %% Unique:
  %%    _131
  _1164 = bif:'=:=' _131, `<<0>>`
  br _1164, ^1164, ^967

1164:
  %% mc_SUITE.erl:112
  %% Result type:
  %%    nonempty_list({{'foo', 1..4, 1..'+inf'}, 1..'+inf'})
  _141 = call (`'-basic/1-lc$^12/1-12-'`/1), `[1,2,3,4]`

  %% Unique:
  %%    _141
  _968 = succeeded:body _141
  br _968, ^968, ^1

968:
  %% Unique:
  %%    _141
  _142 = call (`maps`:`from_list`/1), _141

  %% Aliased:
  %%    _142
  _969 = succeeded:body _142
  br _969, ^969, ^1

969:
  %% mc_SUITE.erl:112
  %% Aliased:
  %%    _142
  RecordMap = call (`id`/1), _142

  %% Aliased:
  %%    RecordMap
  _970 = succeeded:body RecordMap
  br _970, ^970, ^1

970:
  %% mc_SUITE.erl:115
  %% Aliased:
  %%    RecordMap
  _147 = call (`maps`:`to_list`/1), RecordMap

  %% Aliased:
  %%    _147
  _971 = succeeded:body _147
  br _971, ^971, ^1

971:
  %% mc_SUITE.erl:115
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _147
  _151 = call (`'-basic/1-lc$^13/1-13-'`/1), _147

  %% Unique:
  %%    _151
  _972 = succeeded:body _151
  br _972, ^972, ^1

972:
  %% mc_SUITE.erl:114
  %% Unique:
  %%    _151
  EvenMap = call (`maps`:`from_list`/1), _151

  %% Aliased:
  %%    EvenMap
  _973 = succeeded:body EvenMap
  br _973, ^973, ^1

973:
  %% mc_SUITE.erl:118
  %% Aliased:
  %%    RecordMap
  _492 = call (`erts_internal`:`mc_iterator`/1), RecordMap

  %% Aliased:
  %%    _492
  _974 = succeeded:body _492
  br _974, ^974, ^1

974:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _492
  _978 = bif:'=:=' _492, `[]`
  br _978, ^978, ^1206

978:
  %% Argument types:
  %%    
  %% Aliased:
  %%    RecordMap
  _494 = put_tuple `bad_generator`, RecordMap

  %% mc_SUITE.erl:118
  %% Unique:
  %%    _494
  _768 = call (`erlang`:`error`/1), _494

  %% Aliased:
  %%    _768
  _977 = succeeded:body _768
  br ^1

1206:
  %% mc_SUITE.erl:118
  %% Result type:
  %%    list({{'foo', any(), any()}, any()})
  %% Aliased:
  %%    _492
  _162 = call (`'-basic/1-lc$^14/1-14-'`/1), _492

  %% Unique:
  %%    _162
  _979 = succeeded:body _162
  br _979, ^979, ^1

979:
  %% Unique:
  %%    _162
  _495 = call (`maps`:`from_list`/1), _162

  %% Aliased:
  %%    _495
  _980 = succeeded:body _495
  br _980, ^980, ^1

980:
  %% Argument types:
  %%    _495 => #{{'foo', any(), any()}=>any()}
  %%    EvenMap => map()
  %% Aliased:
  %%    _495, 
  %%    EvenMap
  _983 = bif:'=:=' _495, EvenMap
  br _983, ^983, ^982

983:
  %% mc_SUITE.erl:121
  %% Aliased:
  %%    RecordMap
  _167 = call (`maps`:`to_list`/1), RecordMap

  %% Aliased:
  %%    _167
  _984 = succeeded:body _167
  br _984, ^984, ^1

984:
  %% mc_SUITE.erl:121
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _167
  _171 = call (`'-basic/1-lc$^15/1-15-'`/1), _167

  %% Unique:
  %%    _171
  _985 = succeeded:body _171
  br _985, ^985, ^1

985:
  %% mc_SUITE.erl:121
  %% Unique:
  %%    _171
  Odd = call (`lists`:`sort`/1), _171

  %% Aliased:
  %%    Odd
  _986 = succeeded:body Odd
  br _986, ^986, ^1

986:
  %% mc_SUITE.erl:123
  %% Aliased:
  %%    RecordMap
  _528 = call (`erts_internal`:`mc_iterator`/1), RecordMap

  %% Aliased:
  %%    _528
  _987 = succeeded:body _528
  br _987, ^987, ^1

987:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _528
  _991 = bif:'=:=' _528, `[]`
  br _991, ^991, ^1208

991:
  %% Argument types:
  %%    
  %% Aliased:
  %%    RecordMap
  _530 = put_tuple `bad_generator`, RecordMap

  %% mc_SUITE.erl:123
  %% Unique:
  %%    _530
  _776 = call (`erlang`:`error`/1), _530

  %% Aliased:
  %%    _776
  _990 = succeeded:body _776
  br ^1

1208:
  %% mc_SUITE.erl:123
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _528
  _182 = call (`'-basic/1-lc$^16/1-16-'`/1), _528

  %% Unique:
  %%    _182
  _992 = succeeded:body _182
  br _992, ^992, ^1

992:
  %% mc_SUITE.erl:123
  %% Unique:
  %%    _182
  _531 = call (`lists`:`sort`/1), _182

  %% Aliased:
  %%    _531
  _993 = succeeded:body _531
  br _993, ^993, ^1

993:
  %% Argument types:
  %%    _531 => list(any())
  %%    Odd => list(any())
  %% Aliased:
  %%    _531, 
  %%    Odd
  _996 = bif:'=:=' _531, Odd
  br _996, ^996, ^995

996:
  %% mc_SUITE.erl:126
  %% Result type:
  %%    nonempty_list({1..3, 2..'+inf'})
  _190 = call (`'-basic/1-lc$^17/1-17-'`/1), `[1,2,3]`

  %% Unique:
  %%    _190
  _997 = succeeded:body _190
  br _997, ^997, ^1

997:
  %% Unique:
  %%    _190
  _537 = call (`maps`:`from_list`/1), _190

  %% Aliased:
  %%    _537
  _998 = succeeded:body _537
  br _998, ^1160, ^1

1160:
  %% Argument types:
  %%    _537 => #{1..3=>2..'+inf'}
  %% Aliased:
  %%    _537
  _540 = get_map_element _537, `1`

  %% Aliased:
  %%    _540
  _1001 = succeeded:guard _540
  br _1001, ^1001, ^1000

1001:
  %% Argument types:
  %%    _537 => #{1..3=>2..'+inf'}
  %% Aliased:
  %%    _537
  _539 = get_map_element _537, `2`

  %% Aliased:
  %%    _539
  _1002 = succeeded:guard _539
  br _1002, ^1002, ^1000

1002:
  %% Argument types:
  %%    _537 => #{1..3=>2..'+inf'}
  %% Aliased:
  %%    _537
  _538 = get_map_element _537, `3`

  %% Aliased:
  %%    _538
  _1003 = succeeded:guard _538
  br _1003, ^1003, ^1000

1003:
  %% Argument types:
  %%    _540 => 2..'+inf'
  %% Unique:
  %%    _540
  _1159 = bif:'=:=' _540, `2`
  br _1159, ^1158, ^1000

1158:
  %% Argument types:
  %%    _539 => 2..'+inf'
  %% Unique:
  %%    _539
  _1157 = bif:'=:=' _539, `3`
  br _1157, ^1156, ^1000

1156:
  %% Argument types:
  %%    _538 => 2..'+inf'
  %% Unique:
  %%    _538
  _1155 = bif:'=:=' _538, `4`
  br _1155, ^1154, ^1000

1154:
  %% mc_SUITE.erl:127
  %% Result type:
  %%    list({0..255, 1..'+inf'})
  _197 = call (`'-basic/1-lc$^18/1-18-'`/1), `<<1,2,3>>`

  %% Unique:
  %%    _197
  _1004 = succeeded:body _197
  br _1004, ^1004, ^1

1004:
  %% Unique:
  %%    _197
  _554 = call (`maps`:`from_list`/1), _197

  %% Aliased:
  %%    _554
  _1005 = succeeded:body _554
  br _1005, ^1152, ^1

1152:
  %% Argument types:
  %%    _554 => #{0..255=>1..'+inf'}
  %% Aliased:
  %%    _554
  _557 = get_map_element _554, `1`

  %% Aliased:
  %%    _557
  _1008 = succeeded:guard _557
  br _1008, ^1008, ^1007

1008:
  %% Argument types:
  %%    _554 => #{0..255=>1..'+inf'}
  %% Aliased:
  %%    _554
  _556 = get_map_element _554, `2`

  %% Aliased:
  %%    _556
  _1009 = succeeded:guard _556
  br _1009, ^1009, ^1007

1009:
  %% Argument types:
  %%    _554 => #{0..255=>1..'+inf'}
  %% Aliased:
  %%    _554
  _555 = get_map_element _554, `3`

  %% Aliased:
  %%    _555
  _1010 = succeeded:guard _555
  br _1010, ^1010, ^1007

1010:
  %% Argument types:
  %%    _557 => 1..'+inf'
  %% Unique:
  %%    _557
  _1151 = bif:'=:=' _557, `2`
  br _1151, ^1150, ^1007

1150:
  %% Argument types:
  %%    _556 => 1..'+inf'
  %% Unique:
  %%    _556
  _1149 = bif:'=:=' _556, `3`
  br _1149, ^1148, ^1007

1148:
  %% Argument types:
  %%    _555 => 1..'+inf'
  %% Unique:
  %%    _555
  _1147 = bif:'=:=' _555, `4`
  br _1147, ^1146, ^1007

1146:
  %% mc_SUITE.erl:128
  _570 = call (`erts_internal`:`mc_iterator`/1), `#{1 => 2,3 => 4}`

  %% Aliased:
  %%    _570
  _1011 = succeeded:body _570
  br _1011, ^1011, ^1

1011:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _570
  _1015 = bif:'=:=' _570, `[]`
  br _1015, ^1015, ^1209

1015:
  %% mc_SUITE.erl:128
  _785 = call (`erlang`:`error`/1), `{bad_generator,#{1 => 2,3 => 4}}`

  %% Aliased:
  %%    _785
  _1014 = succeeded:body _785
  br ^1

1209:
  %% mc_SUITE.erl:128
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _570
  _209 = call (`'-basic/1-lc$^19/1-19-'`/1), _570

  %% Unique:
  %%    _209
  _1016 = succeeded:body _209
  br _1016, ^1016, ^1

1016:
  %% Unique:
  %%    _209
  _572 = call (`maps`:`from_list`/1), _209

  %% Aliased:
  %%    _572
  _1017 = succeeded:body _572
  br _1017, ^1144, ^1

1144:
  %% Argument types:
  %%    _572 => #{number()=>number()}
  %% Aliased:
  %%    _572
  _574 = get_map_element _572, `2`

  %% Aliased:
  %%    _574
  _1020 = succeeded:guard _574
  br _1020, ^1020, ^1019

1020:
  %% Argument types:
  %%    _572 => #{number()=>number()}
  %% Aliased:
  %%    _572
  _573 = get_map_element _572, `4`

  %% Aliased:
  %%    _573
  _1021 = succeeded:guard _573
  br _1021, ^1021, ^1019

1021:
  %% Argument types:
  %%    _574 => number()
  %% Unique:
  %%    _574
  _1143 = bif:'=:=' _574, `4`
  br _1143, ^1142, ^1019

1142:
  %% Argument types:
  %%    _573 => number()
  %% Unique:
  %%    _573
  _1141 = bif:'=:=' _573, `8`
  br _1141, ^1140, ^1019

1140:
  %% mc_SUITE.erl:131
  %% Result type:
  %%    list({2..3, 3..'+inf'})
  _217 = call (`'-basic/1-lc$^20/1-20-'`/1), `[1,2,3]`

  %% Unique:
  %%    _217
  _1022 = succeeded:body _217
  br _1022, ^1022, ^1

1022:
  %% Unique:
  %%    _217
  _583 = call (`maps`:`from_list`/1), _217

  %% Aliased:
  %%    _583
  _1023 = succeeded:body _583
  br _1023, ^1138, ^1

1138:
  %% Argument types:
  %%    _583 => #{2..3=>3..'+inf'}
  %% Aliased:
  %%    _583
  _585 = get_map_element _583, `2`

  %% Aliased:
  %%    _585
  _1026 = succeeded:guard _585
  br _1026, ^1026, ^1025

1026:
  %% Argument types:
  %%    _583 => #{2..3=>3..'+inf'}
  %% Aliased:
  %%    _583
  _584 = get_map_element _583, `3`

  %% Aliased:
  %%    _584
  _1027 = succeeded:guard _584
  br _1027, ^1027, ^1025

1027:
  %% Argument types:
  %%    _585 => 3..'+inf'
  %% Unique:
  %%    _585
  _1137 = bif:'=:=' _585, `3`
  br _1137, ^1136, ^1025

1136:
  %% Argument types:
  %%    _584 => 3..'+inf'
  %% Unique:
  %%    _584
  _1135 = bif:'=:=' _584, `4`
  br _1135, ^1134, ^1025

1134:
  %% mc_SUITE.erl:132
  %% Result type:
  %%    list({2..255, 3..'+inf'})
  _224 = call (`'-basic/1-lc$^21/1-21-'`/1), `<<1,2,3>>`

  %% Unique:
  %%    _224
  _1028 = succeeded:body _224
  br _1028, ^1028, ^1

1028:
  %% Unique:
  %%    _224
  _601 = call (`maps`:`from_list`/1), _224

  %% Aliased:
  %%    _601
  _1029 = succeeded:body _601
  br _1029, ^1132, ^1

1132:
  %% Argument types:
  %%    _601 => #{2..255=>3..'+inf'}
  %% Aliased:
  %%    _601
  _603 = get_map_element _601, `2`

  %% Aliased:
  %%    _603
  _1032 = succeeded:guard _603
  br _1032, ^1032, ^1031

1032:
  %% Argument types:
  %%    _601 => #{2..255=>3..'+inf'}
  %% Aliased:
  %%    _601
  _602 = get_map_element _601, `3`

  %% Aliased:
  %%    _602
  _1033 = succeeded:guard _602
  br _1033, ^1033, ^1031

1033:
  %% Argument types:
  %%    _603 => 3..'+inf'
  %% Unique:
  %%    _603
  _1131 = bif:'=:=' _603, `3`
  br _1131, ^1130, ^1031

1130:
  %% Argument types:
  %%    _602 => 3..'+inf'
  %% Unique:
  %%    _602
  _1129 = bif:'=:=' _602, `4`
  br _1129, ^1128, ^1031

1128:
  %% mc_SUITE.erl:133
  _620 = call (`erts_internal`:`mc_iterator`/1), `#{1 => 2,3 => 4}`

  %% Aliased:
  %%    _620
  _1034 = succeeded:body _620
  br _1034, ^1034, ^1

1034:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _620
  _1038 = bif:'=:=' _620, `[]`
  br _1038, ^1038, ^1210

1038:
  %% mc_SUITE.erl:133
  _797 = call (`erlang`:`error`/1), `{bad_generator,#{1 => 2,3 => 4}}`

  %% Aliased:
  %%    _797
  _1037 = succeeded:body _797
  br ^1

1210:
  %% mc_SUITE.erl:133
  %% Result type:
  %%    list({number(2, '+inf'), number()})
  %% Aliased:
  %%    _620
  _236 = call (`'-basic/1-lc$^22/1-22-'`/1), _620

  %% Unique:
  %%    _236
  _1039 = succeeded:body _236
  br _1039, ^1039, ^1

1039:
  %% Unique:
  %%    _236
  _622 = call (`maps`:`from_list`/1), _236

  %% Aliased:
  %%    _622
  _1040 = succeeded:body _622
  br _1040, ^1126, ^1

1126:
  %% Argument types:
  %%    _622 => #{number(2, '+inf')=>number()}
  %% Aliased:
  %%    _622
  _623 = get_map_element _622, `4`

  %% Aliased:
  %%    _623
  _1043 = succeeded:guard _623
  br _1043, ^1043, ^1042

1043:
  %% Argument types:
  %%    _623 => number()
  %% Unique:
  %%    _623
  _1125 = bif:'=:=' _623, `8`
  br _1125, ^1257, ^1042

1257:
  br ^1260

1260:
  _1047 = new_try_tag `'catch'`
  br _1047, ^1045, ^1046

1045:
  %% mc_SUITE.erl:136
  %% Result type:
  %%    nonempty_list({1..3, 2..'+inf'})
  _244 = call (`'-basic/1-lc$^23/1-23-'`/1), `[{ok,1},2,{ok,3}]`

  %% Unique:
  %%    _244
  _1049 = succeeded:body _244
  br _1049, ^1049, ^1046

1049:
  %% Unique:
  %%    _244
  _802 = call (`maps`:`from_list`/1), _244

  %% Aliased:
  %%    _802
  _1050 = succeeded:body _802
  br _1050, ^1050, ^1046

1050:
  br ^1044

1046:
  %% Unique:
  %%    _1047
  _1053 = landingpad `'catch'`, _1047

  %% Aliased:
  %%    _1053
  _1051 = extract _1053, `0`
  br ^1044

1044:
  _1054 = phi { _1051, ^1046 }, { _802, ^1050 }

  %% Aliased:
  %%    _1054
  %% Unique:
  %%    _1047
  _245 = catch_end _1047, _1054

  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _1120 = is_tagged_tuple _245, `2`, `'EXIT'`
  br _1120, ^1117, ^1056

1117:
  %% Argument types:
  %%    _245 => {''EXIT'', any()}
  %% Aliased:
  %%    _245
  _633 = get_tuple_element _245, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _633
  _1114 = bif:is_tuple _633
  br _1114, ^1114, ^1056

1114:
  %% Argument types:
  %%    _633 => {...}
  %% Aliased:
  %%    _633
  _1115 = bif:tuple_size _633

  %% Argument types:
  %%    _1115 => 0..16777215
  %% Unique:
  %%    _1115
  _1116 = bif:'=:=' _1115, `2`
  br _1116, ^1113, ^1056

1113:
  %% Argument types:
  %%    _633 => {any(), any()}
  %% Aliased:
  %%    _633
  _636 = get_tuple_element _633, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _636
  _1112 = bif:'=:=' _636, `{badmatch,2}`
  br _1112, ^1258, ^1056

1258:
  br ^1261

1261:
  _1060 = new_try_tag `'catch'`
  br _1060, ^1058, ^1059

1058:
  %% mc_SUITE.erl:137
  %% Result type:
  %%    list({0..127, 1..'+inf'})
  _252 = call (`'-basic/1-lc$^24/1-24-'`/1), `<<1,128,2>>`

  %% Unique:
  %%    _252
  _1062 = succeeded:body _252
  br _1062, ^1062, ^1059

1062:
  %% Unique:
  %%    _252
  _807 = call (`maps`:`from_list`/1), _252

  %% Aliased:
  %%    _807
  _1063 = succeeded:body _807
  br _1063, ^1063, ^1059

1063:
  br ^1057

1059:
  %% Unique:
  %%    _1060
  _1066 = landingpad `'catch'`, _1060

  %% Aliased:
  %%    _1066
  _1064 = extract _1066, `0`
  br ^1057

1057:
  _1067 = phi { _1064, ^1059 }, { _807, ^1063 }

  %% Aliased:
  %%    _1067
  %% Unique:
  %%    _1060
  _253 = catch_end _1060, _1067

  %% Argument types:
  %%    
  %% Aliased:
  %%    _253
  _1108 = is_tagged_tuple _253, `2`, `'EXIT'`
  br _1108, ^1105, ^1069

1105:
  %% Argument types:
  %%    _253 => {''EXIT'', any()}
  %% Aliased:
  %%    _253
  _652 = get_tuple_element _253, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _652
  _1102 = bif:is_tuple _652
  br _1102, ^1102, ^1069

1102:
  %% Argument types:
  %%    _652 => {...}
  %% Aliased:
  %%    _652
  _1103 = bif:tuple_size _652

  %% Argument types:
  %%    _1103 => 0..16777215
  %% Unique:
  %%    _1103
  _1104 = bif:'=:=' _1103, `2`
  br _1104, ^1101, ^1069

1101:
  %% Argument types:
  %%    _652 => {any(), any()}
  %% Aliased:
  %%    _652
  _655 = get_tuple_element _652, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _655
  _1100 = bif:'=:=' _655, `{badmatch,<<128,2>>}`
  br _1100, ^1259, ^1069

1259:
  br ^1262

1262:
  _1073 = new_try_tag `'catch'`
  br _1073, ^1071, ^1072

1071:
  %% mc_SUITE.erl:138
  _670 = call (`erts_internal`:`mc_iterator`/1), `#{1 => ok,2 => error,3 => ok}`

  %% Aliased:
  %%    _670
  _1075 = succeeded:body _670
  br _1075, ^1075, ^1072

1075:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _670
  _1079 = bif:'=:=' _670, `[]`
  br _1079, ^1079, ^1211

1079:
  %% mc_SUITE.erl:138
  _813 = call (`erlang`:`error`/1), `{bad_generator,#{1 => ok,2 => error,3 => ok}}`

  %% Aliased:
  %%    _813
  _1078 = succeeded:body _813
  br ^1072

1211:
  %% mc_SUITE.erl:138
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _670
  _264 = call (`'-basic/1-lc$^25/1-25-'`/1), _670

  %% Unique:
  %%    _264
  _1080 = succeeded:body _264
  br _1080, ^1080, ^1072

1080:
  %% Unique:
  %%    _264
  _814 = call (`maps`:`from_list`/1), _264

  %% Aliased:
  %%    _814
  _1081 = succeeded:body _814
  br _1081, ^1081, ^1072

1081:
  br ^1070

1072:
  %% Unique:
  %%    _1073
  _1084 = landingpad `'catch'`, _1073

  %% Aliased:
  %%    _1084
  _1082 = extract _1084, `0`
  br ^1070

1070:
  _1085 = phi { _1082, ^1072 }, { _814, ^1081 }

  %% Aliased:
  %%    _1085
  %% Unique:
  %%    _1073
  _265 = catch_end _1073, _1085

  %% Argument types:
  %%    
  %% Aliased:
  %%    _265
  _1096 = is_tagged_tuple _265, `2`, `'EXIT'`
  br _1096, ^1093, ^1087

1093:
  %% Argument types:
  %%    _265 => {''EXIT'', any()}
  %% Aliased:
  %%    _265
  _672 = get_tuple_element _265, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _672
  _1090 = bif:is_tuple _672
  br _1090, ^1090, ^1087

1090:
  %% Argument types:
  %%    _672 => {...}
  %% Aliased:
  %%    _672
  _1091 = bif:tuple_size _672

  %% Argument types:
  %%    _1091 => 0..16777215
  %% Unique:
  %%    _1091
  _1092 = bif:'=:=' _1091, `2`
  br _1092, ^1089, ^1087

1089:
  %% Argument types:
  %%    _672 => {any(), any()}
  %% Aliased:
  %%    _672
  _675 = get_tuple_element _672, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _675
  _1088 = bif:'=:=' _675, `{badmatch,{2,error}}`
  br _1088, ^1088, ^1087

1088:
  %% Result type:
  %%    'ok'
  ret `ok`

1087:
  %% mc_SUITE.erl:138
  %% Aliased:
  %%    _265
  _815 = match_fail `badmatch`, _265

  %% Unique:
  %%    _815
  _1099 = succeeded:body _815
  br ^1

1069:
  %% mc_SUITE.erl:137
  %% Aliased:
  %%    _253
  _816 = match_fail `badmatch`, _253

  %% Unique:
  %%    _816
  _1111 = succeeded:body _816
  br ^1

1056:
  %% mc_SUITE.erl:136
  %% Aliased:
  %%    _245
  _817 = match_fail `badmatch`, _245

  %% Unique:
  %%    _817
  _1123 = succeeded:body _817
  br ^1

1042:
  %% mc_SUITE.erl:133
  %% Aliased:
  %%    _622
  _818 = match_fail `badmatch`, _622

  %% Unique:
  %%    _818
  _1127 = succeeded:body _818
  br ^1

1031:
  %% mc_SUITE.erl:132
  %% Aliased:
  %%    _601
  _819 = match_fail `badmatch`, _601

  %% Unique:
  %%    _819
  _1133 = succeeded:body _819
  br ^1

1025:
  %% mc_SUITE.erl:131
  %% Aliased:
  %%    _583
  _820 = match_fail `badmatch`, _583

  %% Unique:
  %%    _820
  _1139 = succeeded:body _820
  br ^1

1019:
  %% mc_SUITE.erl:128
  %% Aliased:
  %%    _572
  _821 = match_fail `badmatch`, _572

  %% Unique:
  %%    _821
  _1145 = succeeded:body _821
  br ^1

1007:
  %% mc_SUITE.erl:127
  %% Aliased:
  %%    _554
  _822 = match_fail `badmatch`, _554

  %% Unique:
  %%    _822
  _1153 = succeeded:body _822
  br ^1

1000:
  %% mc_SUITE.erl:126
  %% Aliased:
  %%    _537
  _823 = match_fail `badmatch`, _537

  %% Unique:
  %%    _823
  _1161 = succeeded:body _823
  br ^1

995:
  %% mc_SUITE.erl:123
  %% Aliased:
  %%    _531
  _824 = match_fail `badmatch`, _531

  %% Unique:
  %%    _824
  _1162 = succeeded:body _824
  br ^1

982:
  %% mc_SUITE.erl:117
  %% Aliased:
  %%    _495
  _825 = match_fail `badmatch`, _495

  %% Unique:
  %%    _825
  _1163 = succeeded:body _825
  br ^1

967:
  %% mc_SUITE.erl:109
  %% Unique:
  %%    _131
  _826 = match_fail `badmatch`, _131

  %% Unique:
  %%    _826
  _1165 = succeeded:body _826
  br ^1

959:
  %% mc_SUITE.erl:108
  %% Unique:
  %%    _118
  _827 = match_fail `badmatch`, _118

  %% Unique:
  %%    _827
  _1167 = succeeded:body _827
  br ^1

951:
  %% mc_SUITE.erl:107
  %% Unique:
  %%    _105
  _828 = match_fail `badmatch`, _105

  %% Unique:
  %%    _828
  _1169 = succeeded:body _828
  br ^1

943:
  %% mc_SUITE.erl:105
  %% Unique:
  %%    _92
  _829 = match_fail `badmatch`, _92

  %% Unique:
  %%    _829
  _1171 = succeeded:body _829
  br ^1

935:
  %% mc_SUITE.erl:104
  %% Unique:
  %%    _82
  _830 = match_fail `badmatch`, _82

  %% Unique:
  %%    _830
  _1173 = succeeded:body _830
  br ^1

927:
  %% mc_SUITE.erl:103
  %% Unique:
  %%    _72
  _831 = match_fail `badmatch`, _72

  %% Unique:
  %%    _831
  _1175 = succeeded:body _831
  br ^1

919:
  %% mc_SUITE.erl:100
  %% Aliased:
  %%    _376
  _832 = match_fail `badmatch`, _376

  %% Unique:
  %%    _832
  _1177 = succeeded:body _832
  br ^1

910:
  %% mc_SUITE.erl:99
  %% Unique:
  %%    _52
  _833 = match_fail `badmatch`, _52

  %% Unique:
  %%    _833
  _1179 = succeeded:body _833
  br ^1

902:
  %% mc_SUITE.erl:98
  %% Aliased:
  %%    _344
  _834 = match_fail `badmatch`, _344

  %% Unique:
  %%    _834
  _1181 = succeeded:body _834
  br ^1

893:
  %% mc_SUITE.erl:97
  %% Aliased:
  %%    _329
  _835 = match_fail `badmatch`, _329

  %% Unique:
  %%    _835
  _1183 = succeeded:body _835
  br ^1

1:
  _838 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _838
}

%% mc_SUITE.erl:142
%% Counter = 280
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0..8765
function `mc_SUITE`:`mc_double`(_0) {
0:
  %% mc_SUITE.erl:143
  %% Aliased:
  %%    _0
  Seq = call (`lists`:`seq`/2), `1`, _0

  %% Aliased:
  %%    Seq
  _209 = succeeded:body Seq
  br _209, ^209, ^1

209:
  %% mc_SUITE.erl:144
  %% Result type:
  %%    list({{'key', any()}, any()})
  %% Aliased:
  %%    Seq
  _7 = call (`'-mc_double/1-lc$^0/1-0-'`/1), Seq

  %% Unique:
  %%    _7
  _210 = succeeded:body _7
  br _210, ^210, ^1

210:
  %% Unique:
  %%    _7
  Map = call (`maps`:`from_list`/1), _7

  %% Aliased:
  %%    Map
  _211 = succeeded:body Map
  br _211, ^211, ^1

211:
  %% mc_SUITE.erl:146
  %% Aliased:
  %%    Map
  _14 = call (`id`/1), Map

  %% Aliased:
  %%    _14
  _212 = succeeded:body _14
  br _212, ^212, ^1

212:
  %% mc_SUITE.erl:146
  %% Aliased:
  %%    _14
  _101 = call (`erts_internal`:`mc_iterator`/1), _14

  %% Aliased:
  %%    _101
  _213 = succeeded:body _101
  br _213, ^213, ^1

213:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _217 = bif:'=:=' _101, `[]`
  br _217, ^217, ^272

217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _103 = put_tuple `bad_generator`, _14

  %% mc_SUITE.erl:146
  %% Unique:
  %%    _103
  _176 = call (`erlang`:`error`/1), _103

  %% Aliased:
  %%    _176
  _216 = succeeded:body _176
  br ^1

272:
  %% mc_SUITE.erl:146
  %% Result type:
  %%    list({any(), number()})
  %% Aliased:
  %%    _101
  _19 = call (`'-mc_double/1-lc$^1/1-1-'`/1), _101

  %% Unique:
  %%    _19
  _218 = succeeded:body _19
  br _218, ^218, ^1

218:
  %% Unique:
  %%    _19
  MapDouble = call (`maps`:`from_list`/1), _19

  %% Aliased:
  %%    MapDouble
  _219 = succeeded:body MapDouble
  br _219, ^219, ^1

219:
  %% mc_SUITE.erl:147
  %% Result type:
  %%    list({{'key', number()}, number()})
  %% Aliased:
  %%    Seq
  _27 = call (`'-mc_double/1-lc$^2/1-2-'`/1), Seq

  %% Unique:
  %%    _27
  _220 = succeeded:body _27
  br _220, ^220, ^1

220:
  %% mc_SUITE.erl:147
  %% Unique:
  %%    _27
  _111 = call (`maps`:`from_list`/1), _27

  %% Aliased:
  %%    _111
  _221 = succeeded:body _111
  br _221, ^221, ^1

221:
  %% Argument types:
  %%    _111 => #{{'key', number()}=>number()}
  %%    MapDouble => #{any()=>number()}
  %% Aliased:
  %%    _111, 
  %%    MapDouble
  _224 = bif:'=:=' _111, MapDouble
  br _224, ^224, ^223

224:
  %% mc_SUITE.erl:149
  %% Aliased:
  %%    _0
  OddKeys = call (`lists`:`seq`/3), `1`, _0, `2`

  %% Aliased:
  %%    OddKeys
  _225 = succeeded:body OddKeys
  br _225, ^225, ^1

225:
  %% mc_SUITE.erl:150
  %% Aliased:
  %%    Map
  _126 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _126
  _226 = succeeded:body _126
  br _226, ^226, ^1

226:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _126
  _230 = bif:'=:=' _126, `[]`
  br _230, ^230, ^274

230:
  %% Argument types:
  %%    Map => #{{'key', any()}=>any()}
  %% Aliased:
  %%    Map
  _128 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:150
  %% Unique:
  %%    _128
  _185 = call (`erlang`:`error`/1), _128

  %% Aliased:
  %%    _185
  _229 = succeeded:body _185
  br ^1

274:
  %% mc_SUITE.erl:150
  %% Result type:
  %%    list(integer())
  %% Aliased:
  %%    _126
  _39 = call (`'-mc_double/1-lc$^3/1-3-'`/1), _126

  %% Unique:
  %%    _39
  _231 = succeeded:body _39
  br _231, ^231, ^1

231:
  %% mc_SUITE.erl:150
  %% Unique:
  %%    _39
  _129 = call (`lists`:`sort`/1), _39

  %% Aliased:
  %%    _129
  _232 = succeeded:body _129
  br _232, ^232, ^1

232:
  %% Argument types:
  %%    _129 => list(integer())
  %% Aliased:
  %%    _129, 
  %%    OddKeys
  _235 = bif:'=:=' _129, OddKeys
  br _235, ^235, ^234

235:
  %% mc_SUITE.erl:153
  %% Aliased:
  %%    Map
  _148 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _148
  _236 = succeeded:body _148
  br _236, ^236, ^1

236:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _148
  _240 = bif:'=:=' _148, `[]`
  br _240, ^240, ^276

240:
  %% Argument types:
  %%    Map => #{{'key', any()}=>any()}
  %% Aliased:
  %%    Map
  _150 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:153
  %% Unique:
  %%    _150
  _192 = call (`erlang`:`error`/1), _150

  %% Aliased:
  %%    _192
  _239 = succeeded:body _192
  br ^1

276:
  %% mc_SUITE.erl:153
  %% Result type:
  %%    list({integer(), nil()})
  %% Aliased:
  %%    _148
  _50 = call (`'-mc_double/1-lc$^4/1-4-'`/1), _148

  %% Unique:
  %%    _50
  _241 = succeeded:body _50
  br _241, ^241, ^1

241:
  %% Unique:
  %%    _50
  OddMap = call (`maps`:`from_list`/1), _50

  %% Aliased:
  %%    OddMap
  _242 = succeeded:body OddMap
  br _242, ^242, ^1

242:
  %% mc_SUITE.erl:155
  %% Aliased:
  %%    Map
  _166 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _166
  _243 = succeeded:body _166
  br _243, ^243, ^1

243:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _166
  _247 = bif:'=:=' _166, `[]`
  br _247, ^247, ^278

247:
  %% Argument types:
  %%    Map => #{{'key', any()}=>any()}
  %% Aliased:
  %%    Map
  _168 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:155
  %% Unique:
  %%    _168
  _198 = call (`erlang`:`error`/1), _168

  %% Aliased:
  %%    _198
  _246 = succeeded:body _198
  br ^1

278:
  %% mc_SUITE.erl:155
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _166
  _63 = call (`'-mc_double/1-lc$^5/1-5-'`/1), _166

  %% Unique:
  %%    _63
  _248 = succeeded:body _63
  br _248, ^248, ^1

248:
  %% Unique:
  %%    _63
  _169 = call (`maps`:`from_list`/1), _63

  %% Aliased:
  %%    _169
  _249 = succeeded:body _169
  br _249, ^249, ^1

249:
  %% Argument types:
  %%    _169 => #{any()=>nil()}
  %%    OddMap => #{integer()=>nil()}
  %% Aliased:
  %%    _169, 
  %%    OddMap
  _252 = bif:'=:=' _169, OddMap
  br _252, ^252, ^251

252:
  %% mc_SUITE.erl:157
  %% Aliased:
  %%    OddMap
  _65 = call (`maps`:`keys`/1), OddMap

  %% Aliased:
  %%    _65
  _253 = succeeded:body _65
  br _253, ^253, ^1

253:
  %% mc_SUITE.erl:157
  %% Aliased:
  %%    _65
  _170 = call (`lists`:`sort`/1), _65

  %% Aliased:
  %%    _170
  _254 = succeeded:body _170
  br _254, ^254, ^1

254:
  %% Argument types:
  %%    _170 => list(integer())
  %%    OddKeys => list(integer())
  %% Aliased:
  %%    _170, 
  %%    OddKeys
  _257 = bif:'=:=' _170, OddKeys
  br _257, ^257, ^256

257:
  %% mc_SUITE.erl:160
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Map
  _199 = call (`test_iterator`/2), Map, `0`

  %% Unique:
  %%    _199
  _258 = succeeded:body _199
  br _258, ^258, ^1

258:
  %% mc_SUITE.erl:161
  %% Argument types:
  %%    Map => #{{'key', any()}=>any()}
  %% Aliased:
  %%    Map
  _67 = bif:map_size Map

  %% mc_SUITE.erl:161
  %% Argument types:
  %%    _67 => 0..288230376151711743
  %% Unique:
  %%    _67
  _68 = bif:'div' _67, `3`

  %% mc_SUITE.erl:161
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Map
  %% Unique:
  %%    _68
  _200 = call (`test_iterator`/2), Map, _68

  %% Unique:
  %%    _200
  _261 = succeeded:body _200
  br _261, ^261, ^1

261:
  %% mc_SUITE.erl:162
  %% Argument types:
  %%    Map => #{{'key', any()}=>any()}
  %% Aliased:
  %%    Map
  _69 = bif:map_size Map

  %% mc_SUITE.erl:162
  %% Argument types:
  %%    _69 => 0..288230376151711743
  %% Unique:
  %%    _69
  _70 = bif:'div' _69, `2`

  %% mc_SUITE.erl:162
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Map
  %% Unique:
  %%    _70
  _201 = call (`test_iterator`/2), Map, _70

  %% Unique:
  %%    _201
  _264 = succeeded:body _201
  br _264, ^264, ^1

264:
  %% mc_SUITE.erl:163
  %% Argument types:
  %%    Map => #{{'key', any()}=>any()}
  %% Aliased:
  %%    Map
  _71 = bif:map_size Map

  %% mc_SUITE.erl:163
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    Map
  %% Unique:
  %%    _71
  _202 = call (`test_iterator`/2), Map, _71

  %% Unique:
  %%    _202
  _266 = succeeded:body _202
  br _266, ^279, ^1

279:
  ret _202

256:
  %% mc_SUITE.erl:157
  %% Aliased:
  %%    _170
  _203 = match_fail `badmatch`, _170

  %% Unique:
  %%    _203
  _267 = succeeded:body _203
  br ^1

251:
  %% mc_SUITE.erl:155
  %% Aliased:
  %%    _169
  _204 = match_fail `badmatch`, _169

  %% Unique:
  %%    _204
  _268 = succeeded:body _204
  br ^1

234:
  %% mc_SUITE.erl:150
  %% Aliased:
  %%    _129
  _205 = match_fail `badmatch`, _129

  %% Unique:
  %%    _205
  _269 = succeeded:body _205
  br ^1

223:
  %% mc_SUITE.erl:147
  %% Aliased:
  %%    _111
  _206 = match_fail `badmatch`, _111

  %% Unique:
  %%    _206
  _270 = succeeded:body _206
  br ^1

1:
  _207 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _207
}

%% mc_SUITE.erl:167
%% Counter = 67
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{{'key', any()}=>any()}
%%    _1 =>
%%     0..288230376151711743
function `mc_SUITE`:`test_iterator`(_0, _1) {
0:
  %% mc_SUITE.erl:168
  %% Aliased:
  %%    _0
  Iter0 = call (`maps`:`iterator`/1), _0

  %% Aliased:
  %%    Iter0
  _44 = succeeded:body Iter0
  br _44, ^44, ^1

44:
  %% mc_SUITE.erl:169
  %% Result type:
  %%    {list({any(), any()}), any()}
  %% Aliased:
  %%    Iter0
  %% Unique:
  %%    _1
  _18 = call (`grab`/3), _1, Iter0, `[]`

  %% Unique:
  %%    _18
  _45 = succeeded:body _18
  br _45, ^59, ^1

59:
  %% Argument types:
  %%    _18 => {list({any(), any()}), any()}
  %% Unique:
  %%    _18
  _20 = get_tuple_element _18, `0`

  %% Argument types:
  %%    _18 => {list({any(), any()}), any()}
  %% Unique:
  %%    _18
  _19 = get_tuple_element _18, `1`

  %% mc_SUITE.erl:170
  %% Aliased:
  %%    _19
  _32 = call (`erts_internal`:`mc_iterator`/1), _19

  %% Aliased:
  %%    _32
  _48 = succeeded:body _32
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _52 = bif:'=:=' _32, `[]`
  br _52, ^52, ^66

52:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _34 = put_tuple `bad_generator`, _19

  %% mc_SUITE.erl:170
  %% Unique:
  %%    _34
  _39 = call (`erlang`:`error`/1), _34

  %% Aliased:
  %%    _39
  _51 = succeeded:body _39
  br ^1

66:
  %% mc_SUITE.erl:170
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _32
  %% Unique:
  %%    _20
  _12 = call (`'-test_iterator/2-lc$^0/1-0-'`/2), _32, _20

  %% Unique:
  %%    _12
  _53 = succeeded:body _12
  br _53, ^53, ^1

53:
  %% mc_SUITE.erl:171
  %% Unique:
  %%    _12
  _35 = call (`maps`:`from_list`/1), _12

  %% Aliased:
  %%    _35
  _54 = succeeded:body _35
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _35 => map()
  %%    _0 => #{{'key', any()}=>any()}
  %% Aliased:
  %%    _0, 
  %%    _35
  _57 = bif:'=:=' _35, _0
  br _57, ^57, ^56

57:
  %% Result type:
  %%    'ok'
  ret `ok`

56:
  %% mc_SUITE.erl:171
  %% Aliased:
  %%    _35
  _40 = match_fail `badmatch`, _35

  %% Unique:
  %%    _40
  _58 = succeeded:body _40
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% mc_SUITE.erl:174
%% Counter = 36
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..288230376151711743
%%    _2 =>
%%     list({any(), any()})
function `mc_SUITE`:`grab`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _0 => '-inf'..288230376151711743
  %% Unique:
  %%    _0
  _21 = bif:'=:=' _0, `0`
  br _21, ^20, ^19

20:
  %% Argument types:
  %%    _2 => list({any(), any()})
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _2
  _13 = put_tuple _2, _1
  %% Result type:
  %%    {list({any(), any()}), any()}
  %% Unique:
  %%    _13
  ret _13

19:
  %% mc_SUITE.erl:177
  %% Aliased:
  %%    _1
  _6 = call (`maps`:`next`/1), _1

  %% Aliased:
  %%    _6
  _22 = succeeded:body _6
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _29 = bif:is_tuple _6
  br _29, ^29, ^25

29:
  %% Argument types:
  %%    _6 => {...}
  %% Aliased:
  %%    _6
  _30 = bif:tuple_size _6

  %% Argument types:
  %%    _30 => 0..16777215
  %% Unique:
  %%    _30
  _31 = bif:'=:=' _30, `3`
  br _31, ^28, ^24

28:
  %% mc_SUITE.erl:181
  %% Argument types:
  %%    _0 => '-inf'..288230376151711743
  %% Unique:
  %%    _0
  _3 = bif:'-' _0, `1`

  %% Unique:
  %%    _3
  _26 = succeeded:body _3
  br _26, ^26, ^1

26:
  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _10 = get_tuple_element _6, `0`

  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _9 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9, 
  %%    _10
  _11 = put_tuple _10, _9

  %% Argument types:
  %%    _11 => {any(), any()}
  %%    _2 => list({any(), any()})
  %% Unique:
  %%    _2, 
  %%    _11
  _12 = put_list _11, _2

  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _8 = get_tuple_element _6, `2`

  %% mc_SUITE.erl:181
  %% Result type:
  %%    {list({any(), any()}), any()}
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _3, 
  %%    _12
  _15 = call (`grab`/3), _3, _8, _12

  %% Unique:
  %%    _15
  _27 = succeeded:body _15
  br _27, ^27, ^1

27:
  %% Result type:
  %%    {list({any(), any()}), any()}
  %% Unique:
  %%    _15
  ret _15

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _33 = bif:'=:=' _6, `none`
  br _33, ^32, ^24

32:
  %% Argument types:
  %%    _2 => list({any(), any()})
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _2
  _14 = put_tuple _2, _1
  %% Result type:
  %%    {list({any(), any()}), any()}
  %% Unique:
  %%    _14
  ret _14

24:
  %% mc_SUITE.erl:177
  %% Aliased:
  %%    _6
  _16 = match_fail `case_clause`, _6

  %% Unique:
  %%    _16
  _34 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% mc_SUITE.erl:184
%% Counter = 81
%% bs_ensure_opt: true
function `mc_SUITE`:`duplicate_keys`(_0) {
0:
  %% mc_SUITE.erl:185
  %% Result type:
  %%    nonempty_list({'x', 'a' | 'b'})
  _6 = call (`'-duplicate_keys/1-lc$^0/1-0-'`/1), `[{a,x},{b,x}]`

  %% Unique:
  %%    _6
  _60 = succeeded:body _6
  br _60, ^60, ^1

60:
  %% Unique:
  %%    _6
  _25 = call (`maps`:`from_list`/1), _6

  %% Aliased:
  %%    _25
  _61 = succeeded:body _25
  br _61, ^79, ^1

79:
  %% Argument types:
  %%    _25 => #{'x'=>'a' | 'b'}
  %% Aliased:
  %%    _25
  _26 = get_map_element _25, `x`

  %% Aliased:
  %%    _26
  _64 = succeeded:guard _26
  br _64, ^64, ^63

64:
  %% Argument types:
  %%    _26 => 'a' | 'b'
  %% Unique:
  %%    _26
  _78 = bif:'=:=' _26, `b`
  br _78, ^77, ^63

77:
  %% mc_SUITE.erl:188
  %% Result type:
  %%    list({'a' | 'b', 0..255})
  _16 = call (`'-duplicate_keys/1-lc$^1/1-1-'`/1), `[a,b]`

  %% Unique:
  %%    _16
  _65 = succeeded:body _16
  br _65, ^65, ^1

65:
  %% Unique:
  %%    _16
  _45 = call (`maps`:`from_list`/1), _16

  %% Aliased:
  %%    _45
  _66 = succeeded:body _45
  br _66, ^75, ^1

75:
  %% Argument types:
  %%    _45 => #{'a' | 'b'=>0..255}
  %% Aliased:
  %%    _45
  _47 = get_map_element _45, `a`

  %% Aliased:
  %%    _47
  _69 = succeeded:guard _47
  br _69, ^69, ^68

69:
  %% Argument types:
  %%    _45 => #{'a' | 'b'=>0..255}
  %% Aliased:
  %%    _45
  _46 = get_map_element _45, `b`

  %% Aliased:
  %%    _46
  _70 = succeeded:guard _46
  br _70, ^70, ^68

70:
  %% Argument types:
  %%    _47 => 0..255
  %% Unique:
  %%    _47
  _74 = bif:'=:=' _47, `4`
  br _74, ^73, ^68

73:
  %% Argument types:
  %%    _46 => 0..255
  %% Unique:
  %%    _46
  _72 = bif:'=:=' _46, `4`
  br _72, ^71, ^68

71:
  %% Result type:
  %%    'ok'
  ret `ok`

68:
  %% mc_SUITE.erl:187
  %% Aliased:
  %%    _45
  _56 = match_fail `badmatch`, _45

  %% Unique:
  %%    _56
  _76 = succeeded:body _56
  br ^1

63:
  %% mc_SUITE.erl:185
  %% Aliased:
  %%    _25
  _57 = match_fail `badmatch`, _25

  %% Unique:
  %%    _57
  _80 = succeeded:body _57
  br ^1

1:
  _58 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _58
}

%% mc_SUITE.erl:192
%% Counter = 114
%% bs_ensure_opt: true
function `mc_SUITE`:`mixed`(_0) {
0:
  %% mc_SUITE.erl:193
  Map = call (`id`/1), `#{1 => 10,2 => 5,3 => 88,4 => 99,5 => 36}`

  %% Aliased:
  %%    Map
  _89 = succeeded:body Map
  br _89, ^89, ^1

89:
  %% mc_SUITE.erl:194
  %% Aliased:
  %%    Map
  _35 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _35
  _90 = succeeded:body _35
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _94 = bif:'=:=' _35, `[]`
  br _94, ^94, ^111

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Map
  _36 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:194
  %% Unique:
  %%    _36
  _73 = call (`erlang`:`error`/1), _36

  %% Aliased:
  %%    _73
  _93 = succeeded:body _73
  br ^1

111:
  %% mc_SUITE.erl:194
  _2 = bs_init_writable `256`

  %% mc_SUITE.erl:194
  %% Result type:
  %%    bitstring(32,appendable)
  %% Aliased:
  %%    _35
  %% Unique:
  %%    _2
  _13 = call (`'-mixed/1-lbc$^0/2-0-'`/2), _35, _2

  %% Unique:
  %%    _13
  _95 = succeeded:body _13
  br _95, ^95, ^1

95:
  %% mc_SUITE.erl:195
  %% Result type:
  %%    list({0..255, 0..16777215})
  %% Unique:
  %%    _13
  _19 = call (`'-mixed/1-lc$^1/1-1-'`/1), _13

  %% Unique:
  %%    _19
  _96 = succeeded:body _19
  br _96, ^96, ^1

96:
  %% mc_SUITE.erl:195
  %% Unique:
  %%    _19
  _67 = call (`maps`:`from_list`/1), _19

  %% Aliased:
  %%    _67
  _97 = succeeded:body _67
  br _97, ^97, ^1

97:
  %% Argument types:
  %%    _67 => #{0..255=>0..16777215}
  %% Aliased:
  %%    _67, 
  %%    Map
  _100 = bif:'=:=' _67, Map
  br _100, ^100, ^99

100:
  %% mc_SUITE.erl:197
  _23 = call (`lists`:`seq`/2), `97`, `122`

  %% Aliased:
  %%    _23
  _101 = succeeded:body _23
  br _101, ^101, ^1

101:
  %% mc_SUITE.erl:197
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _23
  _28 = call (`'-mixed/1-lc$^2/1-2-'`/1), _23

  %% Aliased:
  %%    _28
  _102 = succeeded:body _28
  br _102, ^102, ^1

102:
  %% mc_SUITE.erl:198
  Integers = call (`lists`:`seq`/2), `1`, `64`

  %% Aliased:
  %%    Integers
  _103 = succeeded:body Integers
  br _103, ^103, ^1

103:
  %% mc_SUITE.erl:200
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _28, 
  %%    Integers
  _81 = call (`mixed_1`/2), _28, Integers

  %% Unique:
  %%    _81
  _104 = succeeded:body _81
  br _104, ^104, ^1

104:
  %% mc_SUITE.erl:201
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _28, 
  %%    Integers
  _82 = call (`mixed_2`/2), _28, Integers

  %% Unique:
  %%    _82
  _105 = succeeded:body _82
  br _105, ^105, ^1

105:
  %% mc_SUITE.erl:202
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _28, 
  %%    Integers
  _83 = call (`mixed_3`/2), _28, Integers

  %% Unique:
  %%    _83
  _106 = succeeded:body _83
  br _106, ^106, ^1

106:
  %% mc_SUITE.erl:204
  %% Result type:
  %%    'ok'
  _84 = call (`sum_of_triangular_numbers`/1), `7`

  %% Unique:
  %%    _84
  _107 = succeeded:body _84
  br _107, ^107, ^1

107:
  %% mc_SUITE.erl:205
  %% Result type:
  %%    'ok'
  _85 = call (`sum_of_triangular_numbers`/1), `10`

  %% Unique:
  %%    _85
  _108 = succeeded:body _85
  br _108, ^113, ^1

113:
  ret _85

99:
  %% mc_SUITE.erl:195
  %% Aliased:
  %%    _67
  _86 = match_fail `badmatch`, _67

  %% Unique:
  %%    _86
  _109 = succeeded:body _86
  br ^1

1:
  _87 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _87
}

%% mc_SUITE.erl:209
%% Counter = 194
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
function `mc_SUITE`:`mixed_1`(_0, _1) {
0:
  %% mc_SUITE.erl:210
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _1
  _7 = call (`'-mixed_1/2-lc$^0/1-0-'`/1), _1

  %% Unique:
  %%    _7
  _168 = succeeded:body _7
  br _168, ^168, ^1

168:
  %% Unique:
  %%    _7
  IntegerMap = call (`maps`:`from_list`/1), _7

  %% Aliased:
  %%    IntegerMap
  _169 = succeeded:body IntegerMap
  br _169, ^169, ^1

169:
  %% mc_SUITE.erl:211
  %% Aliased:
  %%    IntegerMap
  _81 = call (`erts_internal`:`mc_iterator`/1), IntegerMap

  %% Aliased:
  %%    _81
  _170 = succeeded:body _81
  br _170, ^170, ^1

170:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _174 = bif:'=:=' _81, `[]`
  br _174, ^174, ^193

174:
  %% Argument types:
  %%    IntegerMap => #{any()=>nil()}
  %% Aliased:
  %%    IntegerMap
  _83 = put_tuple `bad_generator`, IntegerMap

  %% mc_SUITE.erl:211
  %% Unique:
  %%    _83
  _141 = call (`erlang`:`error`/1), _83

  %% Aliased:
  %%    _141
  _173 = succeeded:body _141
  br ^1

193:
  %% mc_SUITE.erl:211
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _81
  _17 = call (`'-mixed_1/2-lc$^1/1-1-'`/1), _81

  %% Aliased:
  %%    _17
  _175 = succeeded:body _17
  br _175, ^175, ^1

175:
  %% mc_SUITE.erl:212
  %% Aliased:
  %%    _17
  _84 = call (`lists`:`sort`/1), _17

  %% Aliased:
  %%    _84
  _176 = succeeded:body _84
  br _176, ^176, ^1

176:
  %% Argument types:
  %%    _84 => list(any())
  %% Aliased:
  %%    _1, 
  %%    _84
  _179 = bif:'=:=' _84, _1
  br _179, ^179, ^178

179:
  %% mc_SUITE.erl:213
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    IntegerMap
  _32 = call (`'-mixed_1/2-lc$^2/1-2-'`/2), _0, IntegerMap

  %% Unique:
  %%    _32
  _180 = succeeded:body _32
  br _180, ^180, ^1

180:
  %% mc_SUITE.erl:214
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    IntegerMap
  _47 = call (`'-mixed_1/2-lc$^4/1-4-'`/2), _0, IntegerMap

  %% Unique:
  %%    _47
  _181 = succeeded:body _47
  br _181, ^181, ^1

181:
  %% Argument types:
  %%    _47 => list({atom(), any()})
  %%    _32 => list({atom(), any()})
  %% Unique:
  %%    _32, 
  %%    _47
  _184 = bif:'=:=' _47, _32
  br _184, ^184, ^183

184:
  %% mc_SUITE.erl:215
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _17
  _58 = call (`'-mixed_1/2-lc$^6/1-6-'`/2), _0, _17

  %% Unique:
  %%    _58
  _185 = succeeded:body _58
  br _185, ^185, ^1

185:
  %% Argument types:
  %%    _58 => list({atom(), any()})
  %%    _32 => list({atom(), any()})
  %% Unique:
  %%    _32, 
  %%    _58
  _188 = bif:'=:=' _58, _32
  br _188, ^188, ^187

188:
  %% Result type:
  %%    'ok'
  ret `ok`

187:
  %% mc_SUITE.erl:215
  %% Unique:
  %%    _58
  _163 = match_fail `badmatch`, _58

  %% Unique:
  %%    _163
  _189 = succeeded:body _163
  br ^1

183:
  %% mc_SUITE.erl:214
  %% Unique:
  %%    _47
  _164 = match_fail `badmatch`, _47

  %% Unique:
  %%    _164
  _190 = succeeded:body _164
  br ^1

178:
  %% mc_SUITE.erl:212
  %% Aliased:
  %%    _84
  _165 = match_fail `badmatch`, _84

  %% Unique:
  %%    _165
  _191 = succeeded:body _165
  br ^1

1:
  _166 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _166
}

%% mc_SUITE.erl:219
%% Counter = 294
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
function `mc_SUITE`:`mixed_2`(_0, _1) {
0:
  %% mc_SUITE.erl:220
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _1
  _7 = call (`'-mixed_2/2-lc$^0/1-0-'`/1), _1

  %% Unique:
  %%    _7
  _239 = succeeded:body _7
  br _239, ^239, ^1

239:
  %% Unique:
  %%    _7
  IntegerMap = call (`maps`:`from_list`/1), _7

  %% Aliased:
  %%    IntegerMap
  _240 = succeeded:body IntegerMap
  br _240, ^240, ^1

240:
  %% mc_SUITE.erl:221
  %% Aliased:
  %%    IntegerMap
  _107 = call (`erts_internal`:`mc_iterator`/1), IntegerMap

  %% Aliased:
  %%    _107
  _241 = succeeded:body _107
  br _241, ^241, ^1

241:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _245 = bif:'=:=' _107, `[]`
  br _245, ^245, ^286

245:
  %% Argument types:
  %%    IntegerMap => #{any()=>nil()}
  %% Aliased:
  %%    IntegerMap
  _109 = put_tuple `bad_generator`, IntegerMap

  %% mc_SUITE.erl:221
  %% Unique:
  %%    _109
  _201 = call (`erlang`:`error`/1), _109

  %% Aliased:
  %%    _201
  _244 = succeeded:body _201
  br ^1

286:
  %% mc_SUITE.erl:221
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _107
  _17 = call (`'-mixed_2/2-lc$^1/1-1-'`/1), _107

  %% Aliased:
  %%    _17
  _246 = succeeded:body _17
  br _246, ^246, ^1

246:
  %% mc_SUITE.erl:222
  %% Aliased:
  %%    IntegerMap
  _110 = call (`erts_internal`:`mc_iterator`/1), IntegerMap

  %% Aliased:
  %%    _110
  _247 = succeeded:body _110
  br _247, ^247, ^1

247:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _251 = bif:'=:=' _110, `[]`
  br _251, ^251, ^288

251:
  %% Argument types:
  %%    IntegerMap => #{any()=>nil()}
  %% Aliased:
  %%    IntegerMap
  _111 = put_tuple `bad_generator`, IntegerMap

  %% mc_SUITE.erl:222
  %% Unique:
  %%    _111
  _202 = call (`erlang`:`error`/1), _111

  %% Aliased:
  %%    _202
  _250 = succeeded:body _202
  br ^1

288:
  %% mc_SUITE.erl:222
  _19 = bs_init_writable `256`

  %% mc_SUITE.erl:222
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _110
  %% Unique:
  %%    _19
  _30 = call (`'-mixed_2/2-lbc$^2/2-2-'`/2), _110, _19

  %% Unique:
  %%    _30
  _252 = succeeded:body _30
  br _252, ^252, ^1

252:
  %% mc_SUITE.erl:223
  %% Aliased:
  %%    _17
  _126 = call (`lists`:`sort`/1), _17

  %% Aliased:
  %%    _126
  _253 = succeeded:body _126
  br _253, ^253, ^1

253:
  %% Argument types:
  %%    _126 => list(any())
  %% Aliased:
  %%    _1, 
  %%    _126
  _256 = bif:'=:=' _126, _1
  br _256, ^256, ^255

256:
  %% mc_SUITE.erl:225
  %% Aliased:
  %%    IntegerMap
  _143 = call (`erts_internal`:`mc_iterator`/1), IntegerMap

  %% Aliased:
  %%    _143
  _257 = succeeded:body _143
  br _257, ^257, ^1

257:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _261 = bif:'=:=' _143, `[]`
  br _261, ^261, ^291

261:
  %% Argument types:
  %%    IntegerMap => #{any()=>nil()}
  %% Aliased:
  %%    IntegerMap
  _145 = put_tuple `bad_generator`, IntegerMap

  %% mc_SUITE.erl:225
  %% Unique:
  %%    _145
  _214 = call (`erlang`:`error`/1), _145

  %% Aliased:
  %%    _214
  _260 = succeeded:body _214
  br ^1

291:
  %% mc_SUITE.erl:225
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _143
  _45 = call (`'-mixed_2/2-lc$^3/1-3-'`/2), _143, _0

  %% Unique:
  %%    _45
  _262 = succeeded:body _45
  br _262, ^262, ^1

262:
  %% mc_SUITE.erl:226
  %% Aliased:
  %%    IntegerMap
  _52 = call (`maps`:`iterator`/1), IntegerMap

  %% Aliased:
  %%    _52
  _263 = succeeded:body _52
  br _263, ^263, ^1

263:
  %% mc_SUITE.erl:226
  %% Aliased:
  %%    _52
  _163 = call (`erts_internal`:`mc_iterator`/1), _52

  %% Aliased:
  %%    _163
  _264 = succeeded:body _163
  br _264, ^264, ^1

264:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _163
  _268 = bif:'=:=' _163, `[]`
  br _268, ^268, ^293

268:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _165 = put_tuple `bad_generator`, _52

  %% mc_SUITE.erl:226
  %% Unique:
  %%    _165
  _222 = call (`erlang`:`error`/1), _165

  %% Aliased:
  %%    _222
  _267 = succeeded:body _222
  br ^1

293:
  %% mc_SUITE.erl:226
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _163
  _60 = call (`'-mixed_2/2-lc$^5/1-5-'`/2), _163, _0

  %% Unique:
  %%    _60
  _269 = succeeded:body _60
  br _269, ^269, ^1

269:
  %% Argument types:
  %%    _60 => list({atom(), any()})
  %%    _45 => list({atom(), any()})
  %% Unique:
  %%    _45, 
  %%    _60
  _272 = bif:'=:=' _60, _45
  br _272, ^272, ^271

272:
  %% mc_SUITE.erl:227
  %% Result type:
  %%    list({atom(), 0..65535})
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _30
  _70 = call (`'-mixed_2/2-lc$^7/1-7-'`/2), _30, _0

  %% Unique:
  %%    _70
  _273 = succeeded:body _70
  br _273, ^273, ^1

273:
  %% Argument types:
  %%    _70 => list({atom(), 0..65535})
  %%    _45 => list({atom(), any()})
  %% Unique:
  %%    _45, 
  %%    _70
  _276 = bif:'=:=' _70, _45
  br _276, ^276, ^275

276:
  %% mc_SUITE.erl:228
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _17
  _81 = call (`'-mixed_2/2-lc$^9/1-9-'`/2), _17, _0

  %% Unique:
  %%    _81
  _277 = succeeded:body _81
  br _277, ^277, ^1

277:
  %% Argument types:
  %%    _81 => list({atom(), any()})
  %%    _45 => list({atom(), 0..65535})
  %% Unique:
  %%    _45, 
  %%    _81
  _280 = bif:'=:=' _81, _45
  br _280, ^280, ^279

280:
  %% Result type:
  %%    'ok'
  ret `ok`

279:
  %% mc_SUITE.erl:228
  %% Unique:
  %%    _81
  _233 = match_fail `badmatch`, _81

  %% Unique:
  %%    _233
  _281 = succeeded:body _233
  br ^1

275:
  %% mc_SUITE.erl:227
  %% Unique:
  %%    _70
  _234 = match_fail `badmatch`, _70

  %% Unique:
  %%    _234
  _282 = succeeded:body _234
  br ^1

271:
  %% mc_SUITE.erl:226
  %% Unique:
  %%    _60
  _235 = match_fail `badmatch`, _60

  %% Unique:
  %%    _235
  _283 = succeeded:body _235
  br ^1

255:
  %% mc_SUITE.erl:223
  %% Aliased:
  %%    _126
  _236 = match_fail `badmatch`, _126

  %% Unique:
  %%    _236
  _284 = succeeded:body _236
  br ^1

1:
  _237 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _237
}

%% mc_SUITE.erl:232
%% Counter = 265
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
function `mc_SUITE`:`mixed_3`(_0, _1) {
0:
  %% mc_SUITE.erl:233
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`lists`:`zip`/3), _0, _1, `trim`

  %% Aliased:
  %%    _4
  _215 = succeeded:body _4
  br _215, ^215, ^1

215:
  %% mc_SUITE.erl:233
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _4
  _8 = call (`'-mixed_3/2-lc$^0/1-0-'`/1), _4

  %% Unique:
  %%    _8
  _216 = succeeded:body _8
  br _216, ^216, ^1

216:
  %% Unique:
  %%    _8
  Map = call (`maps`:`from_list`/1), _8

  %% Aliased:
  %%    Map
  _217 = succeeded:body Map
  br _217, ^217, ^1

217:
  %% mc_SUITE.erl:234
  %% Aliased:
  %%    Map
  _86 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _86
  _218 = succeeded:body _86
  br _218, ^218, ^1

218:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _222 = bif:'=:=' _86, `[]`
  br _222, ^222, ^258

222:
  %% Argument types:
  %%    Map => map()
  %% Aliased:
  %%    Map
  _87 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:234
  %% Unique:
  %%    _87
  _183 = call (`erlang`:`error`/1), _87

  %% Aliased:
  %%    _183
  _221 = succeeded:body _183
  br ^1

258:
  %% mc_SUITE.erl:234
  _10 = bs_init_writable `256`

  %% mc_SUITE.erl:234
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _86
  %% Unique:
  %%    _10
  _21 = call (`'-mixed_3/2-lbc$^1/2-1-'`/2), _86, _10

  %% Unique:
  %%    _21
  _223 = succeeded:body _21
  br _223, ^223, ^1

223:
  %% mc_SUITE.erl:235
  %% Aliased:
  %%    Map
  _114 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _114
  _224 = succeeded:body _114
  br _224, ^224, ^1

224:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _228 = bif:'=:=' _114, `[]`
  br _228, ^228, ^261

228:
  %% Argument types:
  %%    Map => map()
  %% Aliased:
  %%    Map
  _116 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:235
  %% Unique:
  %%    _116
  _190 = call (`erlang`:`error`/1), _116

  %% Aliased:
  %%    _190
  _227 = succeeded:body _190
  br ^1

261:
  %% mc_SUITE.erl:235
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _114
  _31 = call (`'-mixed_3/2-lc$^2/1-2-'`/1), _114

  %% Unique:
  %%    _31
  _229 = succeeded:body _31
  br _229, ^229, ^1

229:
  %% mc_SUITE.erl:235
  %% Unique:
  %%    _31
  _117 = call (`lists`:`unzip`/1), _31

  %% Aliased:
  %%    _117
  _230 = succeeded:body _117
  br _230, ^252, ^1

252:
  %% Argument types:
  %%    _117 => {list(any()), list(any())}
  %% Aliased:
  %%    _117
  _118 = get_tuple_element _117, `1`

  %% mc_SUITE.erl:237
  %% Aliased:
  %%    Map
  _146 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _146
  _233 = succeeded:body _146
  br _233, ^233, ^1

233:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _146
  _237 = bif:'=:=' _146, `[]`
  br _237, ^237, ^264

237:
  %% Argument types:
  %%    Map => map()
  %% Aliased:
  %%    Map
  _148 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:237
  %% Unique:
  %%    _148
  _199 = call (`erlang`:`error`/1), _148

  %% Aliased:
  %%    _199
  _236 = succeeded:body _199
  br ^1

264:
  %% mc_SUITE.erl:237
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _146, 
  %%    Map
  _48 = call (`'-mixed_3/2-lc$^3/1-3-'`/2), _146, Map

  %% Unique:
  %%    _48
  _238 = succeeded:body _48
  br _238, ^238, ^1

238:
  %% mc_SUITE.erl:237
  %% Unique:
  %%    _48
  Combined = call (`lists`:`sort`/1), _48

  %% Aliased:
  %%    Combined
  _239 = succeeded:body Combined
  br _239, ^239, ^1

239:
  %% Argument types:
  %%    _117 => {list(any()), list(any())}
  %% Aliased:
  %%    _117
  _119 = get_tuple_element _117, `0`

  %% mc_SUITE.erl:238
  %% Result type:
  %%    list({any(), 0..65535})
  %% Aliased:
  %%    _119
  %% Unique:
  %%    _21
  _58 = call (`'-mixed_3/2-lc$^5/1-5-'`/2), _119, _21

  %% Unique:
  %%    _58
  _240 = succeeded:body _58
  br _240, ^240, ^1

240:
  %% mc_SUITE.erl:238
  %% Unique:
  %%    _58
  _167 = call (`lists`:`sort`/1), _58

  %% Aliased:
  %%    _167
  _241 = succeeded:body _167
  br _241, ^241, ^1

241:
  %% Argument types:
  %%    _167 => list({any(), 0..65535})
  %%    Combined => list({any(), any()})
  %% Aliased:
  %%    _167, 
  %%    Combined
  _244 = bif:'=:=' _167, Combined
  br _244, ^244, ^243

244:
  %% mc_SUITE.erl:239
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _118, 
  %%    _119
  _69 = call (`'-mixed_3/2-lc$^7/1-7-'`/2), _119, _118

  %% Unique:
  %%    _69
  _245 = succeeded:body _69
  br _245, ^245, ^1

245:
  %% mc_SUITE.erl:239
  %% Unique:
  %%    _69
  _179 = call (`lists`:`sort`/1), _69

  %% Aliased:
  %%    _179
  _246 = succeeded:body _179
  br _246, ^246, ^1

246:
  %% Argument types:
  %%    _179 => list({any(), any()})
  %%    Combined => list({any(), 0..65535})
  %% Aliased:
  %%    _179, 
  %%    Combined
  _249 = bif:'=:=' _179, Combined
  br _249, ^249, ^248

249:
  %% Result type:
  %%    'ok'
  ret `ok`

248:
  %% mc_SUITE.erl:239
  %% Aliased:
  %%    _179
  _210 = match_fail `badmatch`, _179

  %% Unique:
  %%    _210
  _250 = succeeded:body _210
  br ^1

243:
  %% mc_SUITE.erl:238
  %% Aliased:
  %%    _167
  _211 = match_fail `badmatch`, _167

  %% Unique:
  %%    _211
  _251 = succeeded:body _211
  br ^1

1:
  _213 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _213
}

%% mc_SUITE.erl:243
%% Counter = 202
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     7..10
function `mc_SUITE`:`sum_of_triangular_numbers`(_0) {
0:
  %% mc_SUITE.erl:244
  %% Argument types:
  %%    _0 => 7..10
  %% Unique:
  %%    _0
  _2 = bif:'+' _0, `1`

  %% mc_SUITE.erl:244
  %% Argument types:
  %%    _0 => 7..10
  %%    _2 => 8..11
  %% Unique:
  %%    _0, 
  %%    _2
  _3 = bif:'*' _0, _2

  %% Unique:
  %%    _3
  _178 = succeeded:body _3
  br _178, ^178, ^1

178:
  %% mc_SUITE.erl:244
  %% Argument types:
  %%    _0 => 7..10
  %% Unique:
  %%    _0
  _1 = bif:'+' _0, `2`

  %% mc_SUITE.erl:244
  %% Argument types:
  %%    _3 => 56..110
  %%    _1 => 9..12
  %% Unique:
  %%    _1, 
  %%    _3
  _4 = bif:'*' _3, _1

  %% Unique:
  %%    _4
  _180 = succeeded:body _4
  br _180, ^180, ^1

180:
  %% mc_SUITE.erl:244
  %% Argument types:
  %%    _4 => 504..1320
  %% Unique:
  %%    _4
  Sum = bif:'div' _4, `6`

  %% mc_SUITE.erl:245
  %% Unique:
  %%    _0
  _8 = call (`lists`:`seq`/2), `0`, _0

  %% Aliased:
  %%    _8
  _182 = succeeded:body _8
  br _182, ^182, ^1

182:
  %% mc_SUITE.erl:245
  %% Result type:
  %%    list(map())
  %% Aliased:
  %%    _8
  _20 = call (`'-sum_of_triangular_numbers/1-lc$^0/1-0-'`/1), _8

  %% Aliased:
  %%    _20
  _183 = succeeded:body _20
  br _183, ^183, ^1

183:
  %% mc_SUITE.erl:246
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _20
  _34 = call (`'-sum_of_triangular_numbers/1-lc$^2/1-2-'`/1), _20

  %% Unique:
  %%    _34
  _184 = succeeded:body _34
  br _184, ^184, ^1

184:
  %% mc_SUITE.erl:247
  %% Result type:
  %%    list(list(any()))
  %% Aliased:
  %%    _20
  _50 = call (`'-sum_of_triangular_numbers/1-lc$^4/1-4-'`/1), _20

  %% Unique:
  %%    _50
  _185 = succeeded:body _50
  br _185, ^185, ^1

185:
  %% mc_SUITE.erl:247
  %% Unique:
  %%    _50
  _124 = call (`lists`:`flatten`/1), _50

  %% Aliased:
  %%    _124
  _186 = succeeded:body _124
  br _186, ^186, ^1

186:
  %% Argument types:
  %%    _124 => list(any())
  %%    _34 => list(any())
  %% Aliased:
  %%    _124
  %% Unique:
  %%    _34
  _189 = bif:'=:=' _124, _34
  br _189, ^189, ^188

189:
  %% mc_SUITE.erl:248
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _20
  _67 = call (`'-sum_of_triangular_numbers/1-lc$^6/1-6-'`/1), _20

  %% Unique:
  %%    _67
  _190 = succeeded:body _67
  br _190, ^190, ^1

190:
  %% mc_SUITE.erl:248
  %% Unique:
  %%    _67
  _144 = call (`lists`:`sum`/1), _67

  %% Aliased:
  %%    _144
  _191 = succeeded:body _144
  br _191, ^191, ^1

191:
  %% Argument types:
  %%    Sum => 84..220
  %% Aliased:
  %%    _144
  %% Unique:
  %%    Sum
  _194 = bif:'=:=' _144, Sum
  br _194, ^194, ^193

194:
  %% mc_SUITE.erl:249
  %% Unique:
  %%    _34
  _145 = call (`lists`:`sum`/1), _34

  %% Aliased:
  %%    _145
  _195 = succeeded:body _145
  br _195, ^195, ^1

195:
  %% Argument types:
  %%    Sum => 84..220
  %% Aliased:
  %%    _145
  %% Unique:
  %%    Sum
  _198 = bif:'=:=' _145, Sum
  br _198, ^198, ^197

198:
  %% Result type:
  %%    'ok'
  ret `ok`

197:
  %% mc_SUITE.erl:249
  %% Aliased:
  %%    _145
  _172 = match_fail `badmatch`, _145

  %% Unique:
  %%    _172
  _199 = succeeded:body _172
  br ^1

193:
  %% mc_SUITE.erl:248
  %% Aliased:
  %%    _144
  _173 = match_fail `badmatch`, _144

  %% Unique:
  %%    _173
  _200 = succeeded:body _173
  br ^1

188:
  %% mc_SUITE.erl:247
  %% Aliased:
  %%    _124
  _174 = match_fail `badmatch`, _124

  %% Unique:
  %%    _174
  _201 = succeeded:body _174
  br ^1

1:
  _175 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _175
}

%% mc_SUITE.erl:252
%% Counter = 95
%% bs_ensure_opt: true
function `mc_SUITE`:`shadow`(_0) {
0:
  %% mc_SUITE.erl:254
  _51 = call (`id`/1), `nomatch`

  %% Aliased:
  %%    _51
  _63 = succeeded:body _51
  br _63, ^63, ^1

63:
  %% mc_SUITE.erl:255
  _5 = call (`lists`:`seq`/2), `7`, `9`

  %% Aliased:
  %%    _5
  _64 = succeeded:body _5
  br _64, ^64, ^1

64:
  %% mc_SUITE.erl:255
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _5
  _10 = call (`'-shadow/1-lc$^0/1-0-'`/1), _5

  %% Unique:
  %%    _10
  _65 = succeeded:body _10
  br _65, ^65, ^1

65:
  %% Unique:
  %%    _10
  Map = call (`maps`:`from_list`/1), _10

  %% Aliased:
  %%    Map
  _66 = succeeded:body Map
  br _66, ^66, ^1

66:
  %% mc_SUITE.erl:256
  %% Aliased:
  %%    Map
  _33 = call (`id`/1), Map

  %% Aliased:
  %%    _33
  _67 = succeeded:body _33
  br _67, ^67, ^1

67:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _91 = bif:is_map _33
  br _91, ^91, ^69

91:
  %% Argument types:
  %%    _33 => map()
  %% Aliased:
  %%    _33
  _36 = get_map_element _33, `7`

  %% Aliased:
  %%    _36
  _70 = succeeded:guard _36
  br _70, ^70, ^69

70:
  %% Argument types:
  %%    _33 => map()
  %% Aliased:
  %%    _33
  _35 = get_map_element _33, `8`

  %% Aliased:
  %%    _35
  _71 = succeeded:guard _35
  br _71, ^71, ^69

71:
  %% Argument types:
  %%    _33 => map()
  %% Aliased:
  %%    _33
  _34 = get_map_element _33, `9`

  %% Aliased:
  %%    _34
  _72 = succeeded:guard _34
  br _72, ^72, ^69

72:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _90 = bif:'=:=' _36, `8`
  br _90, ^89, ^69

89:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _88 = bif:'=:=' _35, `9`
  br _88, ^87, ^69

87:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _86 = bif:'=:=' _34, `10`
  br _86, ^85, ^69

85:
  %% mc_SUITE.erl:257
  %% Aliased:
  %%    Map
  _18 = call (`id`/1), Map

  %% Aliased:
  %%    _18
  _73 = succeeded:body _18
  br _73, ^73, ^1

73:
  %% mc_SUITE.erl:257
  %% Aliased:
  %%    _18
  _47 = call (`erts_internal`:`mc_iterator`/1), _18

  %% Aliased:
  %%    _47
  _74 = succeeded:body _47
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _78 = bif:'=:=' _47, `[]`
  br _78, ^78, ^94

78:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _49 = put_tuple `bad_generator`, _18

  %% mc_SUITE.erl:257
  %% Unique:
  %%    _49
  _58 = call (`erlang`:`error`/1), _49

  %% Aliased:
  %%    _58
  _77 = succeeded:body _58
  br ^1

94:
  %% mc_SUITE.erl:257
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _47
  _22 = call (`'-shadow/1-lc$^1/1-1-'`/1), _47

  %% Unique:
  %%    _22
  _79 = succeeded:body _22
  br _79, ^79, ^1

79:
  %% mc_SUITE.erl:257
  %% Unique:
  %%    _22
  _50 = call (`lists`:`sort`/1), _22

  %% Aliased:
  %%    _50
  _80 = succeeded:body _50
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _50 => list(number('-inf', 10))
  %% Aliased:
  %%    _50
  _83 = bif:'=:=' _50, `"\b\t"`
  br _83, ^83, ^82

83:
  %% Result type:
  %%    'ok'
  ret `ok`

82:
  %% mc_SUITE.erl:257
  %% Aliased:
  %%    _50
  _59 = match_fail `badmatch`, _50

  %% Unique:
  %%    _59
  _84 = succeeded:body _59
  br ^1

69:
  %% mc_SUITE.erl:256
  %% Aliased:
  %%    _33
  _60 = match_fail `badmatch`, _33

  %% Unique:
  %%    _60
  _92 = succeeded:body _60
  br ^1

1:
  _61 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _61
}

%% mc_SUITE.erl:261
%% Counter = 448
%% bs_ensure_opt: true
function `mc_SUITE`:`bad_generators`(_0) {
0:
  br ^442

442:
  _133 = new_try_tag `'catch'`
  br _133, ^131, ^132

131:
  %% mc_SUITE.erl:270
  %% Result type:
  %%    list({any(), any()})
  _1 = call (`bad_generator`/1), `a`

  %% Unique:
  %%    _1
  _135 = succeeded:body _1
  br _135, ^135, ^132

135:
  %% mc_SUITE.erl:270
  %% Unique:
  %%    _1
  _111 = call (`id`/1), _1

  %% Aliased:
  %%    _111
  _136 = succeeded:body _111
  br _136, ^136, ^132

136:
  br ^130

132:
  %% Unique:
  %%    _133
  _139 = landingpad `'catch'`, _133

  %% Aliased:
  %%    _139
  _137 = extract _139, `0`
  br ^130

130:
  _140 = phi { _137, ^132 }, { _111, ^136 }

  %% Aliased:
  %%    _140
  %% Unique:
  %%    _133
  _2 = catch_end _133, _140

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _342 = is_tagged_tuple _2, `2`, `'EXIT'`
  br _342, ^339, ^142

339:
  %% Argument types:
  %%    _2 => {''EXIT'', any()}
  %% Aliased:
  %%    _2
  _44 = get_tuple_element _2, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _336 = bif:is_tuple _44
  br _336, ^336, ^142

336:
  %% Argument types:
  %%    _44 => {...}
  %% Aliased:
  %%    _44
  _337 = bif:tuple_size _44

  %% Argument types:
  %%    _337 => 0..16777215
  %% Unique:
  %%    _337
  _338 = bif:'=:=' _337, `2`
  br _338, ^335, ^142

335:
  %% Argument types:
  %%    _44 => {any(), any()}
  %% Aliased:
  %%    _44
  _47 = get_tuple_element _44, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _334 = bif:'=:=' _47, `{bad_generator,a}`
  br _334, ^334, ^142

334:
  %% Argument types:
  %%    _44 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _44
  _46 = get_tuple_element _44, `1`

  %% Aliased:
  %%    _46
  _333 = is_nonempty_list _46
  br _333, ^333, ^142

333:
  %% Argument types:
  %%    _46 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _46
  _49 = get_hd _46

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _330 = is_tagged_tuple _49, `4`, `mc_SUITE`
  br _330, ^327, ^142

327:
  %% Argument types:
  %%    _49 => {'mc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _49
  _50 = get_tuple_element _49, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _326 = bif:'=:=' _50, `[{file,"bad_mc.erl"},{line,4}]`
  br _326, ^437, ^142

437:
  br ^443

443:
  _146 = new_try_tag `'catch'`
  br _146, ^144, ^145

144:
  %% mc_SUITE.erl:275
  %% Result type:
  %%    bitstring(32,appendable)
  _4 = call (`bad_generator_bc`/1), `a`

  %% Unique:
  %%    _4
  _148 = succeeded:body _4
  br _148, ^148, ^145

148:
  %% mc_SUITE.erl:275
  %% Unique:
  %%    _4
  _113 = call (`id`/1), _4

  %% Aliased:
  %%    _113
  _149 = succeeded:body _113
  br _149, ^149, ^145

149:
  br ^143

145:
  %% Unique:
  %%    _146
  _152 = landingpad `'catch'`, _146

  %% Aliased:
  %%    _152
  _150 = extract _152, `0`
  br ^143

143:
  _153 = phi { _150, ^145 }, { _113, ^149 }

  %% Aliased:
  %%    _153
  %% Unique:
  %%    _146
  _5 = catch_end _146, _153

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _322 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _322, ^319, ^155

319:
  %% Argument types:
  %%    _5 => {''EXIT'', any()}
  %% Aliased:
  %%    _5
  _54 = get_tuple_element _5, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _316 = bif:is_tuple _54
  br _316, ^316, ^155

316:
  %% Argument types:
  %%    _54 => {...}
  %% Aliased:
  %%    _54
  _317 = bif:tuple_size _54

  %% Argument types:
  %%    _317 => 0..16777215
  %% Unique:
  %%    _317
  _318 = bif:'=:=' _317, `2`
  br _318, ^315, ^155

315:
  %% Argument types:
  %%    _54 => {any(), any()}
  %% Aliased:
  %%    _54
  _57 = get_tuple_element _54, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _314 = bif:'=:=' _57, `{bad_generator,a}`
  br _314, ^314, ^155

314:
  %% Argument types:
  %%    _54 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _54
  _56 = get_tuple_element _54, `1`

  %% Aliased:
  %%    _56
  _313 = is_nonempty_list _56
  br _313, ^313, ^155

313:
  %% Argument types:
  %%    _56 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _56
  _59 = get_hd _56

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _310 = is_tagged_tuple _59, `4`, `mc_SUITE`
  br _310, ^307, ^155

307:
  %% Argument types:
  %%    _59 => {'mc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _306 = bif:'=:=' _60, `[{file,"bad_mc.erl"},{line,7}]`
  br _306, ^438, ^155

438:
  br ^444

444:
  _159 = new_try_tag `'catch'`
  br _159, ^157, ^158

157:
  %% mc_SUITE.erl:280
  %% Result type:
  %%    map()
  _7 = call (`bad_generator_mc`/1), `a`

  %% Aliased:
  %%    _7
  _161 = succeeded:body _7
  br _161, ^161, ^158

161:
  %% mc_SUITE.erl:280
  %% Aliased:
  %%    _7
  _115 = call (`id`/1), _7

  %% Aliased:
  %%    _115
  _162 = succeeded:body _115
  br _162, ^162, ^158

162:
  br ^156

158:
  %% Unique:
  %%    _159
  _165 = landingpad `'catch'`, _159

  %% Aliased:
  %%    _165
  _163 = extract _165, `0`
  br ^156

156:
  _166 = phi { _163, ^158 }, { _115, ^162 }

  %% Aliased:
  %%    _166
  %% Unique:
  %%    _159
  _8 = catch_end _159, _166

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _302 = is_tagged_tuple _8, `2`, `'EXIT'`
  br _302, ^299, ^168

299:
  %% Argument types:
  %%    _8 => {''EXIT'', any()}
  %% Aliased:
  %%    _8
  _64 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _64
  _296 = bif:is_tuple _64
  br _296, ^296, ^168

296:
  %% Argument types:
  %%    _64 => {...}
  %% Aliased:
  %%    _64
  _297 = bif:tuple_size _64

  %% Argument types:
  %%    _297 => 0..16777215
  %% Unique:
  %%    _297
  _298 = bif:'=:=' _297, `2`
  br _298, ^295, ^168

295:
  %% Argument types:
  %%    _64 => {any(), any()}
  %% Aliased:
  %%    _64
  _67 = get_tuple_element _64, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _294 = bif:'=:=' _67, `{bad_generator,a}`
  br _294, ^294, ^168

294:
  %% Argument types:
  %%    _64 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _64
  _66 = get_tuple_element _64, `1`

  %% Aliased:
  %%    _66
  _293 = is_nonempty_list _66
  br _293, ^293, ^168

293:
  %% Argument types:
  %%    _66 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _66
  _69 = get_hd _66

  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _290 = is_tagged_tuple _69, `4`, `mc_SUITE`
  br _290, ^287, ^168

287:
  %% Argument types:
  %%    _69 => {'mc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _69
  _70 = get_tuple_element _69, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _286 = bif:'=:=' _70, `[{file,"bad_mc.erl"},{line,10}]`
  br _286, ^439, ^168

439:
  br ^445

445:
  _172 = new_try_tag `'catch'`
  br _172, ^170, ^171

170:
  %% mc_SUITE.erl:287
  %% Result type:
  %%    list({any(), any()})
  _11 = call (`bad_generator`/1), `[65535|#{}]`

  %% Unique:
  %%    _11
  _174 = succeeded:body _11
  br _174, ^174, ^171

174:
  %% mc_SUITE.erl:287
  %% Unique:
  %%    _11
  _117 = call (`id`/1), _11

  %% Aliased:
  %%    _117
  _175 = succeeded:body _117
  br _175, ^175, ^171

175:
  br ^169

171:
  %% Unique:
  %%    _172
  _178 = landingpad `'catch'`, _172

  %% Aliased:
  %%    _178
  _176 = extract _178, `0`
  br ^169

169:
  _179 = phi { _176, ^171 }, { _117, ^175 }

  %% Aliased:
  %%    _179
  %% Unique:
  %%    _172
  _12 = catch_end _172, _179

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _282 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _282, ^279, ^181

279:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _74 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _74
  _276 = bif:is_tuple _74
  br _276, ^276, ^181

276:
  %% Argument types:
  %%    _74 => {...}
  %% Aliased:
  %%    _74
  _277 = bif:tuple_size _74

  %% Argument types:
  %%    _277 => 0..16777215
  %% Unique:
  %%    _277
  _278 = bif:'=:=' _277, `2`
  br _278, ^275, ^181

275:
  %% Argument types:
  %%    _74 => {any(), any()}
  %% Aliased:
  %%    _74
  _77 = get_tuple_element _74, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _272 = is_tagged_tuple _77, `2`, `bad_generator`
  br _272, ^269, ^181

269:
  %% Argument types:
  %%    _74 => {any(), any()}
  %% Aliased:
  %%    _74
  _76 = get_tuple_element _74, `1`

  %% Aliased:
  %%    _76
  _268 = is_nonempty_list _76
  br _268, ^268, ^181

268:
  %% Argument types:
  %%    _76 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _76
  _81 = get_hd _76

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _265 = is_tagged_tuple _81, `4`, `mc_SUITE`
  br _265, ^262, ^181

262:
  %% Argument types:
  %%    _81 => {'mc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _81
  _82 = get_tuple_element _81, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _261 = bif:'=:=' _82, `[{file,"bad_mc.erl"},{line,4}]`
  br _261, ^261, ^181

261:
  %% Argument types:
  %%    _77 => {'bad_generator', any()}
  %% Aliased:
  %%    _77
  _78 = get_tuple_element _77, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _182 = bif:'=:=' _78, `[65535|#{}]`
  br _182, ^440, ^181

440:
  br ^446

446:
  _186 = new_try_tag `'catch'`
  br _186, ^184, ^185

184:
  %% mc_SUITE.erl:292
  %% Result type:
  %%    bitstring(32,appendable)
  _14 = call (`bad_generator_bc`/1), `[65535|#{}]`

  %% Unique:
  %%    _14
  _188 = succeeded:body _14
  br _188, ^188, ^185

188:
  %% mc_SUITE.erl:292
  %% Unique:
  %%    _14
  _119 = call (`id`/1), _14

  %% Aliased:
  %%    _119
  _189 = succeeded:body _119
  br _189, ^189, ^185

189:
  br ^183

185:
  %% Unique:
  %%    _186
  _192 = landingpad `'catch'`, _186

  %% Aliased:
  %%    _192
  _190 = extract _192, `0`
  br ^183

183:
  _193 = phi { _190, ^185 }, { _119, ^189 }

  %% Aliased:
  %%    _193
  %% Unique:
  %%    _186
  _15 = catch_end _186, _193

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _257 = is_tagged_tuple _15, `2`, `'EXIT'`
  br _257, ^254, ^195

254:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %% Aliased:
  %%    _15
  _86 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _251 = bif:is_tuple _86
  br _251, ^251, ^195

251:
  %% Argument types:
  %%    _86 => {...}
  %% Aliased:
  %%    _86
  _252 = bif:tuple_size _86

  %% Argument types:
  %%    _252 => 0..16777215
  %% Unique:
  %%    _252
  _253 = bif:'=:=' _252, `2`
  br _253, ^250, ^195

250:
  %% Argument types:
  %%    _86 => {any(), any()}
  %% Aliased:
  %%    _86
  _89 = get_tuple_element _86, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _247 = is_tagged_tuple _89, `2`, `bad_generator`
  br _247, ^244, ^195

244:
  %% Argument types:
  %%    _86 => {any(), any()}
  %% Aliased:
  %%    _86
  _88 = get_tuple_element _86, `1`

  %% Aliased:
  %%    _88
  _243 = is_nonempty_list _88
  br _243, ^243, ^195

243:
  %% Argument types:
  %%    _88 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _88
  _93 = get_hd _88

  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _240 = is_tagged_tuple _93, `4`, `mc_SUITE`
  br _240, ^237, ^195

237:
  %% Argument types:
  %%    _93 => {'mc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _93
  _94 = get_tuple_element _93, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _236 = bif:'=:=' _94, `[{file,"bad_mc.erl"},{line,7}]`
  br _236, ^236, ^195

236:
  %% Argument types:
  %%    _89 => {'bad_generator', any()}
  %% Aliased:
  %%    _89
  _90 = get_tuple_element _89, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _196 = bif:'=:=' _90, `[65535|#{}]`
  br _196, ^441, ^195

441:
  br ^447

447:
  _200 = new_try_tag `'catch'`
  br _200, ^198, ^199

198:
  %% mc_SUITE.erl:297
  %% Result type:
  %%    map()
  _17 = call (`bad_generator_mc`/1), `[65535|#{}]`

  %% Aliased:
  %%    _17
  _202 = succeeded:body _17
  br _202, ^202, ^199

202:
  %% mc_SUITE.erl:297
  %% Aliased:
  %%    _17
  _121 = call (`id`/1), _17

  %% Aliased:
  %%    _121
  _203 = succeeded:body _121
  br _203, ^203, ^199

203:
  br ^197

199:
  %% Unique:
  %%    _200
  _206 = landingpad `'catch'`, _200

  %% Aliased:
  %%    _206
  _204 = extract _206, `0`
  br ^197

197:
  _207 = phi { _204, ^199 }, { _121, ^203 }

  %% Aliased:
  %%    _207
  %% Unique:
  %%    _200
  _18 = catch_end _200, _207

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _232 = is_tagged_tuple _18, `2`, `'EXIT'`
  br _232, ^229, ^209

229:
  %% Argument types:
  %%    _18 => {''EXIT'', any()}
  %% Aliased:
  %%    _18
  _98 = get_tuple_element _18, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _226 = bif:is_tuple _98
  br _226, ^226, ^209

226:
  %% Argument types:
  %%    _98 => {...}
  %% Aliased:
  %%    _98
  _227 = bif:tuple_size _98

  %% Argument types:
  %%    _227 => 0..16777215
  %% Unique:
  %%    _227
  _228 = bif:'=:=' _227, `2`
  br _228, ^225, ^209

225:
  %% Argument types:
  %%    _98 => {any(), any()}
  %% Aliased:
  %%    _98
  _101 = get_tuple_element _98, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _222 = is_tagged_tuple _101, `2`, `bad_generator`
  br _222, ^219, ^209

219:
  %% Argument types:
  %%    _98 => {any(), any()}
  %% Aliased:
  %%    _98
  _100 = get_tuple_element _98, `1`

  %% Aliased:
  %%    _100
  _218 = is_nonempty_list _100
  br _218, ^218, ^209

218:
  %% Argument types:
  %%    _100 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _100
  _105 = get_hd _100

  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _215 = is_tagged_tuple _105, `4`, `mc_SUITE`
  br _215, ^212, ^209

212:
  %% Argument types:
  %%    _105 => {'mc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _105
  _106 = get_tuple_element _105, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _106
  _211 = bif:'=:=' _106, `[{file,"bad_mc.erl"},{line,10}]`
  br _211, ^211, ^209

211:
  %% Argument types:
  %%    _101 => {'bad_generator', any()}
  %% Aliased:
  %%    _101
  _102 = get_tuple_element _101, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _210 = bif:'=:=' _102, `[65535|#{}]`
  br _210, ^141, ^209

141:
  %% Result type:
  %%    'ok'
  ret `ok`

209:
  %% mc_SUITE.erl:294
  %% Aliased:
  %%    _18
  _122 = match_fail `badmatch`, _18

  %% Unique:
  %%    _122
  _235 = succeeded:body _122
  br ^1

195:
  %% mc_SUITE.erl:289
  %% Aliased:
  %%    _15
  _123 = match_fail `badmatch`, _15

  %% Unique:
  %%    _123
  _260 = succeeded:body _123
  br ^1

181:
  %% mc_SUITE.erl:284
  %% Aliased:
  %%    _12
  _124 = match_fail `badmatch`, _12

  %% Unique:
  %%    _124
  _285 = succeeded:body _124
  br ^1

168:
  %% mc_SUITE.erl:277
  %% Aliased:
  %%    _8
  _125 = match_fail `badmatch`, _8

  %% Unique:
  %%    _125
  _305 = succeeded:body _125
  br ^1

155:
  %% mc_SUITE.erl:272
  %% Aliased:
  %%    _5
  _126 = match_fail `badmatch`, _5

  %% Unique:
  %%    _126
  _325 = succeeded:body _126
  br ^1

142:
  %% mc_SUITE.erl:267
  %% Aliased:
  %%    _2
  _127 = match_fail `badmatch`, _2

  %% Unique:
  %%    _127
  _345 = succeeded:body _127
  br ^1

1:
  _128 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _128
}

%% mc_SUITE.erl:301
%% Counter = 4
%% bs_ensure_opt: true
function `mc_SUITE`:`id`(_0) {
0:
  %% Aliased:
  %%    _0
  ret _0
}

%% bad_mc.erl:2
%% Counter = 38
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | nonempty_improper_list(65535, #{})
function `mc_SUITE`:`bad_generator`(_0) {
0:
  %% bad_mc.erl:4
  %% Aliased:
  %%    _0
  _20 = call (`erts_internal`:`mc_iterator`/1), _0

  %% Aliased:
  %%    _20
  _30 = succeeded:body _20
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _34 = bif:'=:=' _20, `[]`
  br _34, ^34, ^37

34:
  %% Argument types:
  %%    _0 => 'a' | nonempty_improper_list(65535, #{})
  %% Aliased:
  %%    _0
  _22 = put_tuple `bad_generator`, _0

  %% bad_mc.erl:4
  %% Unique:
  %%    _22
  _26 = call (`erlang`:`error`/1), _22

  %% Aliased:
  %%    _26
  _33 = succeeded:body _26
  br ^1

37:
  %% bad_mc.erl:4
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _20
  _27 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _20

  %% Unique:
  %%    _27
  _35 = succeeded:body _27
  br _35, ^35, ^1

35:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _27
  ret _27

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% bad_mc.erl:5
%% Counter = 46
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | nonempty_improper_list(65535, #{})
function `mc_SUITE`:`bad_generator_bc`(_0) {
0:
  %% bad_mc.erl:7
  %% Aliased:
  %%    _0
  _15 = call (`erts_internal`:`mc_iterator`/1), _0

  %% Aliased:
  %%    _15
  _37 = succeeded:body _15
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _41 = bif:'=:=' _15, `[]`
  br _41, ^41, ^44

41:
  %% Argument types:
  %%    _0 => 'a' | nonempty_improper_list(65535, #{})
  %% Aliased:
  %%    _0
  _16 = put_tuple `bad_generator`, _0

  %% bad_mc.erl:7
  %% Unique:
  %%    _16
  _30 = call (`erlang`:`error`/1), _16

  %% Aliased:
  %%    _30
  _40 = succeeded:body _30
  br ^1

44:
  %% bad_mc.erl:6
  _1 = bs_init_writable `256`

  %% bad_mc.erl:6
  %% Result type:
  %%    bitstring(32,appendable)
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _1
  _34 = call (`'-bad_generator_bc/1-lbc$^0/2-0-'`/2), _15, _1

  %% Unique:
  %%    _34
  _42 = succeeded:body _34
  br _42, ^42, ^1

42:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _34
  ret _34

1:
  _35 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _35
}

%% bad_mc.erl:8
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | nonempty_improper_list(65535, #{})
function `mc_SUITE`:`bad_generator_mc`(_0) {
0:
  %% bad_mc.erl:10
  %% Aliased:
  %%    _0
  _21 = call (`erts_internal`:`mc_iterator`/1), _0

  %% Aliased:
  %%    _21
  _31 = succeeded:body _21
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _35 = bif:'=:=' _21, `[]`
  br _35, ^35, ^39

35:
  %% Argument types:
  %%    _0 => 'a' | nonempty_improper_list(65535, #{})
  %% Aliased:
  %%    _0
  _23 = put_tuple `bad_generator`, _0

  %% bad_mc.erl:10
  %% Unique:
  %%    _23
  _27 = call (`erlang`:`error`/1), _23

  %% Aliased:
  %%    _27
  _34 = succeeded:body _27
  br ^1

39:
  %% bad_mc.erl:10
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _21
  _9 = call (`'-bad_generator_mc/1-lc$^0/1-0-'`/1), _21

  %% Unique:
  %%    _9
  _36 = succeeded:body _9
  br _36, ^36, ^1

36:
  %% Unique:
  %%    _9
  _28 = call (`maps`:`from_list`/1), _9

  %% Aliased:
  %%    _28
  _37 = succeeded:body _28
  br _37, ^37, ^1

37:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _28
  ret _28

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% Counter = 6
%% bs_ensure_opt: true
function `mc_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `mc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `mc_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `mc_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bad_mc.erl:10
%% Counter = 46
%% bs_ensure_opt: true
function `mc_SUITE`:`'-bad_generator_mc/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _33 = is_nonempty_list _6
  br _33, ^43, ^30

43:
  %% bad_mc.erl:10
  %% Aliased:
  %%    _6
  _16 = call (`erts_internal`:`mc_refill`/1), _6

  %% Aliased:
  %%    _16
  _31 = succeeded:body _16
  br _31, ^31, ^1

31:
  %% bad_mc.erl:10
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _16
  _25 = call (`'-bad_generator_mc/1-lc$^0/1-0-'`/1), _16

  %% Unique:
  %%    _25
  _32 = succeeded:body _25
  br _32, ^32, ^1

32:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _25
  ret _25

30:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _37 = bif:is_tuple _6
  br _37, ^37, ^34

37:
  %% Argument types:
  %%    _6 => {...}
  %% Aliased:
  %%    _6
  _38 = bif:tuple_size _6

  %% Argument types:
  %%    _38 => 0..16777215
  %% Unique:
  %%    _38
  _39 = bif:'=:=' _38, `3`
  br _39, ^44, ^29

44:
  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _17 = get_tuple_element _6, `2`

  %% bad_mc.erl:10
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _17
  _8 = call (`'-bad_generator_mc/1-lc$^0/1-0-'`/1), _17

  %% Unique:
  %%    _8
  _35 = succeeded:body _8
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _19 = get_tuple_element _6, `0`

  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _18 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18, 
  %%    _19
  _20 = put_tuple _18, _19

  %% Argument types:
  %%    _20 => {any(), any()}
  %%    _8 => list({any(), any()})
  %% Unique:
  %%    _8, 
  %%    _20
  _24 = put_list _20, _8
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _24
  ret _24

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _41 = bif:'=:=' _6, `none`
  br _41, ^40, ^29

40:
  %% Result type:
  %%    nil()
  ret `[]`

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _13 = put_tuple `bad_generator`, _6

  %% Unique:
  %%    _13
  _26 = call (`erlang`:`error`/1), _13

  %% Aliased:
  %%    _26
  _42 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% bad_mc.erl:6
%% Counter = 53
%% bs_ensure_opt: true
%% Parameters
%%    _7 =>
%%     bitstring(32,appendable)
function `mc_SUITE`:`'-bad_generator_bc/1-lbc$^0/2-0-'`(_8, _7) {
0:
  %% Aliased:
  %%    _8
  _41 = is_nonempty_list _8
  br _41, ^38, ^37

38:
  %% bad_mc.erl:7
  %% Aliased:
  %%    _8
  _26 = call (`erts_internal`:`mc_refill`/1), _8

  %% Aliased:
  %%    _26
  _39 = succeeded:body _26
  br _39, ^39, ^1

39:
  %% bad_mc.erl:7
  %% Result type:
  %%    bitstring(32,appendable)
  %% Aliased:
  %%    _26
  %% Unique:
  %%    _7
  _32 = call (`'-bad_generator_bc/1-lbc$^0/2-0-'`/2), _26, _7

  %% Unique:
  %%    _32
  _40 = succeeded:body _32
  br _40, ^40, ^1

40:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _32
  ret _32

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _46 = bif:is_tuple _8
  br _46, ^46, ^42

46:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _47 = bif:tuple_size _8

  %% Argument types:
  %%    _47 => 0..16777215
  %% Unique:
  %%    _47
  _48 = bif:'=:=' _47, `3`
  br _48, ^45, ^36

45:
  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _29 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _28 = get_tuple_element _8, `1`

  %% bad_mc.erl:6
  %% Result type:
  %%    bitstring(32,appendable)
  %% Argument types:
  %%    _7 => bitstring(32,appendable)
  %% Aliased:
  %%    _28, 
  %%    _29
  %% Unique:
  %%    _7
  %% Anno: #{unit => 32}
  _14 = bs_create_bin `private_append`, `[1,{segment,1}]`, _7, `all`, `integer`, `[1,{segment,2}]`, _29, `8`, `integer`, `[1,{segment,3}]`, _28, `24`

  %% Unique:
  %%    _14
  _43 = succeeded:body _14
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _27 = get_tuple_element _8, `2`

  %% bad_mc.erl:7
  %% Result type:
  %%    bitstring(32,appendable)
  %% Aliased:
  %%    _27
  %% Unique:
  %%    _14
  _31 = call (`'-bad_generator_bc/1-lbc$^0/2-0-'`/2), _27, _14

  %% Unique:
  %%    _31
  _44 = succeeded:body _31
  br _44, ^44, ^1

44:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _31
  ret _31

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _50 = bif:'=:=' _8, `none`
  br _50, ^49, ^36

49:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _7
  ret _7

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _23 = put_tuple `bad_generator`, _8

  %% Unique:
  %%    _23
  _33 = call (`erlang`:`error`/1), _23

  %% Aliased:
  %%    _33
  _51 = succeeded:body _33
  br ^1

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% bad_mc.erl:4
%% Counter = 45
%% bs_ensure_opt: true
function `mc_SUITE`:`'-bad_generator/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _32 = is_nonempty_list _6
  br _32, ^42, ^29

42:
  %% bad_mc.erl:4
  %% Aliased:
  %%    _6
  _15 = call (`erts_internal`:`mc_refill`/1), _6

  %% Aliased:
  %%    _15
  _30 = succeeded:body _15
  br _30, ^30, ^1

30:
  %% bad_mc.erl:4
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _15
  _24 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _15

  %% Unique:
  %%    _24
  _31 = succeeded:body _24
  br _31, ^31, ^1

31:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _24
  ret _24

29:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _36 = bif:is_tuple _6
  br _36, ^36, ^33

36:
  %% Argument types:
  %%    _6 => {...}
  %% Aliased:
  %%    _6
  _37 = bif:tuple_size _6

  %% Argument types:
  %%    _37 => 0..16777215
  %% Unique:
  %%    _37
  _38 = bif:'=:=' _37, `3`
  br _38, ^43, ^28

43:
  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _16 = get_tuple_element _6, `2`

  %% bad_mc.erl:4
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _16
  _8 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _16

  %% Unique:
  %%    _8
  _34 = succeeded:body _8
  br _34, ^34, ^1

34:
  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _18 = get_tuple_element _6, `0`

  %% Argument types:
  %%    _6 => {any(), any(), any()}
  %% Aliased:
  %%    _6
  _17 = get_tuple_element _6, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17, 
  %%    _18
  _19 = put_tuple _18, _17

  %% Argument types:
  %%    _19 => {any(), any()}
  %%    _8 => list({any(), any()})
  %% Unique:
  %%    _8, 
  %%    _19
  _23 = put_list _19, _8
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _23
  ret _23

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _40 = bif:'=:=' _6, `none`
  br _40, ^39, ^28

39:
  %% Result type:
  %%    nil()
  ret `[]`

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _12 = put_tuple `bad_generator`, _6

  %% Unique:
  %%    _12
  _25 = call (`erlang`:`error`/1), _12

  %% Aliased:
  %%    _25
  _41 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% mc_SUITE.erl:257
%% Counter = 79
%% bs_ensure_opt: true
function `mc_SUITE`:`'-shadow/1-lc$^1/1-1-'`(_19) {
0:
  %% Aliased:
  %%    _19
  _64 = is_nonempty_list _19
  br _64, ^77, ^61

77:
  %% mc_SUITE.erl:257
  %% Aliased:
  %%    _19
  _43 = call (`erts_internal`:`mc_refill`/1), _19

  %% Aliased:
  %%    _43
  _62 = succeeded:body _43
  br _62, ^62, ^1

62:
  %% mc_SUITE.erl:257
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _43
  _56 = call (`'-shadow/1-lc$^1/1-1-'`/1), _43

  %% Unique:
  %%    _56
  _63 = succeeded:body _56
  br _63, ^63, ^1

63:
  %% Result type:
  %%    list(number('-inf', 10))
  %% Unique:
  %%    _56
  ret _56

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _71 = bif:is_tuple _19
  br _71, ^71, ^65

71:
  %% Argument types:
  %%    _19 => {...}
  %% Aliased:
  %%    _19
  _72 = bif:tuple_size _19

  %% Argument types:
  %%    _72 => 0..16777215
  %% Unique:
  %%    _72
  _73 = bif:'=:=' _72, `3`
  br _73, ^70, ^60

70:
  %% Argument types:
  %%    _19 => {any(), any(), any()}
  %% Aliased:
  %%    _19
  _45 = get_tuple_element _19, `1`

  %% Argument types:
  %%    _19 => {any(), any(), any()}
  %% Aliased:
  %%    _19
  _44 = get_tuple_element _19, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _67 = bif:'<' _45, `10`
  br _67, ^67, ^66

67:
  %% mc_SUITE.erl:257
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _44
  _21 = call (`'-shadow/1-lc$^1/1-1-'`/1), _44

  %% Unique:
  %%    _21
  _68 = succeeded:body _21
  br _68, ^68, ^1

68:
  %% Argument types:
  %%    _45 => number('-inf', 10)
  %%    _21 => list(number('-inf', 10))
  %% Unique:
  %%    _21, 
  %%    _45
  _54 = put_list _45, _21
  %% Result type:
  %%    nonempty_list(number('-inf', 10))
  %% Unique:
  %%    _54
  ret _54

66:
  %% mc_SUITE.erl:257
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _44
  _55 = call (`'-shadow/1-lc$^1/1-1-'`/1), _44

  %% Unique:
  %%    _55
  _69 = succeeded:body _55
  br _69, ^69, ^1

69:
  %% Result type:
  %%    list(number('-inf', 10))
  %% Unique:
  %%    _55
  ret _55

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _75 = bif:'=:=' _19, `none`
  br _75, ^74, ^60

74:
  %% Result type:
  %%    nil()
  ret `[]`

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _40 = put_tuple `bad_generator`, _19

  %% Unique:
  %%    _40
  _57 = call (`erlang`:`error`/1), _40

  %% Aliased:
  %%    _57
  _76 = succeeded:body _57
  br ^1

1:
  _58 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _58
}

%% mc_SUITE.erl:255
%% Counter = 64
%% bs_ensure_opt: true
function `mc_SUITE`:`'-shadow/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _60 = is_nonempty_list _6
  br _60, ^60, ^57

60:
  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _31 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _30 = get_tl _6

  %% mc_SUITE.erl:255
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _8 = bif:'+' _31, `1`

  %% Unique:
  %%    _8
  _58 = succeeded:body _8
  br _58, ^58, ^1

58:
  %% mc_SUITE.erl:255
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _30
  _9 = call (`'-shadow/1-lc$^0/1-0-'`/1), _30

  %% Unique:
  %%    _9
  _59 = succeeded:body _9
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    _31 => number()
  %%    _8 => number()
  %% Unique:
  %%    _8, 
  %%    _31
  _32 = put_tuple _31, _8

  %% Argument types:
  %%    _32 => {number(), number()}
  %%    _9 => list({number(), number()})
  %% Unique:
  %%    _9, 
  %%    _32
  _52 = put_list _32, _9
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _52
  ret _52

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _61 = bif:'=:=' _6, `[]`
  br _61, ^61, ^56

61:
  %% Result type:
  %%    nil()
  ret `[]`

56:
  %% Argument types:
  %%    _6 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _6
  _29 = put_tuple `bad_generator`, _6

  %% mc_SUITE.erl:255
  %% Unique:
  %%    _29
  _53 = call (`erlang`:`error`/1), _29

  %% Aliased:
  %%    _53
  _62 = succeeded:body _53
  br ^1

1:
  _54 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _54
}

%% mc_SUITE.erl:248
%% Counter = 191
%% bs_ensure_opt: true
%% Parameters
%%    _54 =>
%%     list(map())
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^6/1-6-'`(_54) {
0:
  %% Aliased:
  %%    _54
  _184 = is_nonempty_list _54
  br _184, ^184, ^185

184:
  %% Argument types:
  %%    _54 => nonempty_list(map())
  %% Aliased:
  %%    _54
  _129 = get_hd _54

  %% Argument types:
  %%    _54 => nonempty_list(map())
  %% Aliased:
  %%    _54
  _128 = get_tl _54

  %% mc_SUITE.erl:248
  %% Aliased:
  %%    _129
  _141 = call (`erts_internal`:`mc_iterator`/1), _129

  %% Aliased:
  %%    _141
  _176 = succeeded:body _141
  br _176, ^176, ^1

176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _180 = bif:'=:=' _141, `[]`
  br _180, ^180, ^189

180:
  %% Argument types:
  %%    _129 => map()
  %% Aliased:
  %%    _129
  _143 = put_tuple `bad_generator`, _129

  %% mc_SUITE.erl:248
  %% Unique:
  %%    _143
  _169 = call (`erlang`:`error`/1), _143

  %% Aliased:
  %%    _169
  _179 = succeeded:body _169
  br ^1

189:
  %% mc_SUITE.erl:248
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _141
  _64 = call (`'-sum_of_triangular_numbers/1-lc$^7/1-7-'`/1), _141

  %% Unique:
  %%    _64
  _181 = succeeded:body _64
  br _181, ^181, ^1

181:
  %% mc_SUITE.erl:248
  %% Unique:
  %%    _64
  _65 = call (`lists`:`sum`/1), _64

  %% Aliased:
  %%    _65
  _182 = succeeded:body _65
  br _182, ^182, ^1

182:
  %% mc_SUITE.erl:248
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _128
  _66 = call (`'-sum_of_triangular_numbers/1-lc$^6/1-6-'`/1), _128

  %% Unique:
  %%    _66
  _183 = succeeded:body _66
  br _183, ^183, ^1

183:
  %% Argument types:
  %%    _66 => list(any())
  %% Aliased:
  %%    _65
  %% Unique:
  %%    _66
  _170 = put_list _65, _66
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _170
  ret _170

1:
  _172 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _172

185:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:248
%% Counter = 190
%% bs_ensure_opt: true
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^7/1-7-'`(_61) {
0:
  %% Aliased:
  %%    _61
  _175 = is_nonempty_list _61
  br _175, ^188, ^172

188:
  %% mc_SUITE.erl:248
  %% Aliased:
  %%    _61
  _137 = call (`erts_internal`:`mc_refill`/1), _61

  %% Aliased:
  %%    _137
  _173 = succeeded:body _137
  br _173, ^173, ^1

173:
  %% mc_SUITE.erl:248
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _137
  _167 = call (`'-sum_of_triangular_numbers/1-lc$^7/1-7-'`/1), _137

  %% Unique:
  %%    _167
  _174 = succeeded:body _167
  br _174, ^174, ^1

174:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _167
  ret _167

172:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _182 = bif:is_tuple _61
  br _182, ^182, ^176

182:
  %% Argument types:
  %%    _61 => {...}
  %% Aliased:
  %%    _61
  _183 = bif:tuple_size _61

  %% Argument types:
  %%    _183 => 0..16777215
  %% Unique:
  %%    _183
  _184 = bif:'=:=' _183, `3`
  br _184, ^181, ^171

181:
  %% Argument types:
  %%    _61 => {any(), any(), any()}
  %% Aliased:
  %%    _61
  _140 = get_tuple_element _61, `0`

  %% Argument types:
  %%    _61 => {any(), any(), any()}
  %% Aliased:
  %%    _61
  _139 = get_tuple_element _61, `1`

  %% Argument types:
  %%    _61 => {any(), any(), any()}
  %% Aliased:
  %%    _61
  _138 = get_tuple_element _61, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _139, 
  %%    _140
  _178 = bif:'=:=' _139, _140
  br _178, ^178, ^177

178:
  %% mc_SUITE.erl:248
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _138
  _63 = call (`'-sum_of_triangular_numbers/1-lc$^7/1-7-'`/1), _138

  %% Unique:
  %%    _63
  _179 = succeeded:body _63
  br _179, ^179, ^1

179:
  %% Argument types:
  %%    _63 => list(any())
  %% Aliased:
  %%    _140
  %% Unique:
  %%    _63
  _165 = put_list _140, _63
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _165
  ret _165

177:
  %% mc_SUITE.erl:248
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _138
  _166 = call (`'-sum_of_triangular_numbers/1-lc$^7/1-7-'`/1), _138

  %% Unique:
  %%    _166
  _180 = succeeded:body _166
  br _180, ^180, ^1

180:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _166
  ret _166

176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _186 = bif:'=:=' _61, `none`
  br _186, ^185, ^171

185:
  %% Result type:
  %%    nil()
  ret `[]`

171:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _61
  _134 = put_tuple `bad_generator`, _61

  %% Unique:
  %%    _134
  _168 = call (`erlang`:`error`/1), _134

  %% Aliased:
  %%    _168
  _187 = succeeded:body _168
  br ^1

1:
  _169 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _169
}

%% mc_SUITE.erl:247
%% Counter = 183
%% bs_ensure_opt: true
%% Parameters
%%    _38 =>
%%     list(map())
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^4/1-4-'`(_38) {
0:
  %% Aliased:
  %%    _38
  _176 = is_nonempty_list _38
  br _176, ^176, ^177

176:
  %% Argument types:
  %%    _38 => nonempty_list(map())
  %% Aliased:
  %%    _38
  _109 = get_hd _38

  %% Argument types:
  %%    _38 => nonempty_list(map())
  %% Aliased:
  %%    _38
  _108 = get_tl _38

  %% mc_SUITE.erl:247
  %% Aliased:
  %%    _109
  _121 = call (`erts_internal`:`mc_iterator`/1), _109

  %% Aliased:
  %%    _121
  _169 = succeeded:body _121
  br _169, ^169, ^1

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _173 = bif:'=:=' _121, `[]`
  br _173, ^173, ^181

173:
  %% Argument types:
  %%    _109 => map()
  %% Aliased:
  %%    _109
  _123 = put_tuple `bad_generator`, _109

  %% mc_SUITE.erl:247
  %% Unique:
  %%    _123
  _162 = call (`erlang`:`error`/1), _123

  %% Aliased:
  %%    _162
  _172 = succeeded:body _162
  br ^1

181:
  %% mc_SUITE.erl:247
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _121
  _48 = call (`'-sum_of_triangular_numbers/1-lc$^5/1-5-'`/1), _121

  %% Unique:
  %%    _48
  _174 = succeeded:body _48
  br _174, ^174, ^1

174:
  %% mc_SUITE.erl:247
  %% Result type:
  %%    list(list(any()))
  %% Aliased:
  %%    _108
  _49 = call (`'-sum_of_triangular_numbers/1-lc$^4/1-4-'`/1), _108

  %% Unique:
  %%    _49
  _175 = succeeded:body _49
  br _175, ^175, ^1

175:
  %% Argument types:
  %%    _48 => list(any())
  %%    _49 => list(list(any()))
  %% Unique:
  %%    _48, 
  %%    _49
  _163 = put_list _48, _49
  %% Result type:
  %%    nonempty_list(list(any()))
  %% Unique:
  %%    _163
  ret _163

1:
  _165 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _165

177:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:247
%% Counter = 183
%% bs_ensure_opt: true
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^5/1-5-'`(_45) {
0:
  %% Aliased:
  %%    _45
  _168 = is_nonempty_list _45
  br _168, ^181, ^165

181:
  %% mc_SUITE.erl:247
  %% Aliased:
  %%    _45
  _117 = call (`erts_internal`:`mc_refill`/1), _45

  %% Aliased:
  %%    _117
  _166 = succeeded:body _117
  br _166, ^166, ^1

166:
  %% mc_SUITE.erl:247
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _117
  _160 = call (`'-sum_of_triangular_numbers/1-lc$^5/1-5-'`/1), _117

  %% Unique:
  %%    _160
  _167 = succeeded:body _160
  br _167, ^167, ^1

167:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _160
  ret _160

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _175 = bif:is_tuple _45
  br _175, ^175, ^169

175:
  %% Argument types:
  %%    _45 => {...}
  %% Aliased:
  %%    _45
  _176 = bif:tuple_size _45

  %% Argument types:
  %%    _176 => 0..16777215
  %% Unique:
  %%    _176
  _177 = bif:'=:=' _176, `3`
  br _177, ^174, ^164

174:
  %% Argument types:
  %%    _45 => {any(), any(), any()}
  %% Aliased:
  %%    _45
  _120 = get_tuple_element _45, `0`

  %% Argument types:
  %%    _45 => {any(), any(), any()}
  %% Aliased:
  %%    _45
  _119 = get_tuple_element _45, `1`

  %% Argument types:
  %%    _45 => {any(), any(), any()}
  %% Aliased:
  %%    _45
  _118 = get_tuple_element _45, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _119, 
  %%    _120
  _171 = bif:'=:=' _119, _120
  br _171, ^171, ^170

171:
  %% mc_SUITE.erl:247
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _118
  _47 = call (`'-sum_of_triangular_numbers/1-lc$^5/1-5-'`/1), _118

  %% Unique:
  %%    _47
  _172 = succeeded:body _47
  br _172, ^172, ^1

172:
  %% Argument types:
  %%    _47 => list(any())
  %% Aliased:
  %%    _120
  %% Unique:
  %%    _47
  _158 = put_list _120, _47
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _158
  ret _158

170:
  %% mc_SUITE.erl:247
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _118
  _159 = call (`'-sum_of_triangular_numbers/1-lc$^5/1-5-'`/1), _118

  %% Unique:
  %%    _159
  _173 = succeeded:body _159
  br _173, ^173, ^1

173:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _159
  ret _159

169:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _179 = bif:'=:=' _45, `none`
  br _179, ^178, ^164

178:
  %% Result type:
  %%    nil()
  ret `[]`

164:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _114 = put_tuple `bad_generator`, _45

  %% Unique:
  %%    _114
  _161 = call (`erlang`:`error`/1), _114

  %% Aliased:
  %%    _161
  _180 = succeeded:body _161
  br ^1

1:
  _162 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _162
}

%% mc_SUITE.erl:246
%% Counter = 175
%% bs_ensure_opt: true
%% Parameters
%%    _29 =>
%%     list(map())
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^2/1-2-'`(_29) {
0:
  %% Aliased:
  %%    _29
  _168 = is_nonempty_list _29
  br _168, ^168, ^169

168:
  %% Argument types:
  %%    _29 => nonempty_list(map())
  %% Aliased:
  %%    _29
  _90 = get_hd _29

  %% Argument types:
  %%    _29 => nonempty_list(map())
  %% Aliased:
  %%    _29
  _89 = get_tl _29

  %% mc_SUITE.erl:246
  %% Aliased:
  %%    _90
  _102 = call (`erts_internal`:`mc_iterator`/1), _90

  %% Aliased:
  %%    _102
  _162 = succeeded:body _102
  br _162, ^162, ^1

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _166 = bif:'=:=' _102, `[]`
  br _166, ^166, ^173

166:
  %% Argument types:
  %%    _90 => map()
  %% Aliased:
  %%    _90
  _104 = put_tuple `bad_generator`, _90

  %% mc_SUITE.erl:246
  %% Unique:
  %%    _104
  _155 = call (`erlang`:`error`/1), _104

  %% Aliased:
  %%    _155
  _165 = succeeded:body _155
  br ^1

173:
  %% mc_SUITE.erl:246
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _89, 
  %%    _102
  _156 = call (`'-sum_of_triangular_numbers/1-lc$^3/1-3-'`/2), _102, _89

  %% Unique:
  %%    _156
  _167 = succeeded:body _156
  br _167, ^167, ^1

167:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _156
  ret _156

1:
  _158 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _158

169:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:246
%% Counter = 177
%% bs_ensure_opt: true
%% Parameters
%%    _89 =>
%%     list(map())
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^3/1-3-'`(_31, _89) {
0:
  %% Aliased:
  %%    _31
  _161 = is_nonempty_list _31
  br _161, ^175, ^158

175:
  %% mc_SUITE.erl:246
  %% Aliased:
  %%    _31
  _98 = call (`erts_internal`:`mc_refill`/1), _31

  %% Aliased:
  %%    _98
  _159 = succeeded:body _98
  br _159, ^159, ^1

159:
  %% mc_SUITE.erl:246
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _89, 
  %%    _98
  _153 = call (`'-sum_of_triangular_numbers/1-lc$^3/1-3-'`/2), _98, _89

  %% Unique:
  %%    _153
  _160 = succeeded:body _153
  br _160, ^160, ^1

160:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _153
  ret _153

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _168 = bif:is_tuple _31
  br _168, ^168, ^162

168:
  %% Argument types:
  %%    _31 => {...}
  %% Aliased:
  %%    _31
  _169 = bif:tuple_size _31

  %% Argument types:
  %%    _169 => 0..16777215
  %% Unique:
  %%    _169
  _170 = bif:'=:=' _169, `3`
  br _170, ^167, ^157

167:
  %% Argument types:
  %%    _31 => {any(), any(), any()}
  %% Aliased:
  %%    _31
  _101 = get_tuple_element _31, `0`

  %% Argument types:
  %%    _31 => {any(), any(), any()}
  %% Aliased:
  %%    _31
  _100 = get_tuple_element _31, `1`

  %% Argument types:
  %%    _31 => {any(), any(), any()}
  %% Aliased:
  %%    _31
  _99 = get_tuple_element _31, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _100, 
  %%    _101
  _164 = bif:'=:=' _100, _101
  br _164, ^164, ^163

164:
  %% mc_SUITE.erl:246
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _89, 
  %%    _99
  _33 = call (`'-sum_of_triangular_numbers/1-lc$^3/1-3-'`/2), _99, _89

  %% Unique:
  %%    _33
  _165 = succeeded:body _33
  br _165, ^165, ^1

165:
  %% Argument types:
  %%    _33 => list(any())
  %% Aliased:
  %%    _101
  %% Unique:
  %%    _33
  _151 = put_list _101, _33
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _151
  ret _151

163:
  %% mc_SUITE.erl:246
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _89, 
  %%    _99
  _152 = call (`'-sum_of_triangular_numbers/1-lc$^3/1-3-'`/2), _99, _89

  %% Unique:
  %%    _152
  _166 = succeeded:body _152
  br _166, ^166, ^1

166:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _152
  ret _152

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _173 = bif:'=:=' _31, `none`
  br _173, ^172, ^157

172:
  %% mc_SUITE.erl:246
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _89
  _150 = call (`'-sum_of_triangular_numbers/1-lc$^2/1-2-'`/1), _89

  %% Unique:
  %%    _150
  _171 = succeeded:body _150
  br _171, ^171, ^1

171:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _150
  ret _150

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _31
  _95 = put_tuple `bad_generator`, _31

  %% Unique:
  %%    _95
  _154 = call (`erlang`:`error`/1), _95

  %% Aliased:
  %%    _154
  _174 = succeeded:body _154
  br ^1

1:
  _155 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _155
}

%% mc_SUITE.erl:245
%% Counter = 163
%% bs_ensure_opt: true
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^0/1-0-'`(_9) {
0:
  %% Aliased:
  %%    _9
  _158 = is_nonempty_list _9
  br _158, ^158, ^153

158:
  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _81 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _80 = get_tl _9

  %% mc_SUITE.erl:245
  %% Aliased:
  %%    _81
  _13 = call (`lists`:`seq`/2), `0`, _81

  %% Aliased:
  %%    _13
  _154 = succeeded:body _13
  br _154, ^154, ^1

154:
  %% mc_SUITE.erl:245
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _13
  _17 = call (`'-sum_of_triangular_numbers/1-lc$^1/1-1-'`/1), _13

  %% Unique:
  %%    _17
  _155 = succeeded:body _17
  br _155, ^155, ^1

155:
  %% Unique:
  %%    _17
  _18 = call (`maps`:`from_list`/1), _17

  %% Aliased:
  %%    _18
  _156 = succeeded:body _18
  br _156, ^156, ^1

156:
  %% mc_SUITE.erl:245
  %% Result type:
  %%    list(map())
  %% Aliased:
  %%    _80
  _19 = call (`'-sum_of_triangular_numbers/1-lc$^0/1-0-'`/1), _80

  %% Unique:
  %%    _19
  _157 = succeeded:body _19
  br _157, ^157, ^1

157:
  %% Argument types:
  %%    _18 => map()
  %%    _19 => list(map())
  %% Aliased:
  %%    _18
  %% Unique:
  %%    _19
  _148 = put_list _18, _19
  %% Result type:
  %%    nonempty_list(map())
  %% Unique:
  %%    _148
  ret _148

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _159 = bif:'=:=' _9, `[]`
  br _159, ^159, ^152

159:
  %% Result type:
  %%    nil()
  ret `[]`

152:
  %% Argument types:
  %%    _9 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _9
  _79 = put_tuple `bad_generator`, _9

  %% mc_SUITE.erl:245
  %% Unique:
  %%    _79
  _149 = call (`erlang`:`error`/1), _79

  %% Aliased:
  %%    _149
  _160 = succeeded:body _149
  br ^1

1:
  _150 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _150
}

%% mc_SUITE.erl:245
%% Counter = 158
%% bs_ensure_opt: true
function `mc_SUITE`:`'-sum_of_triangular_numbers/1-lc$^1/1-1-'`(_14) {
0:
  %% Aliased:
  %%    _14
  _153 = is_nonempty_list _14
  br _153, ^153, ^151

153:
  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _85 = get_hd _14

  %% Argument types:
  %%    _14 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _14
  _84 = get_tl _14

  %% mc_SUITE.erl:245
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _84
  _16 = call (`'-sum_of_triangular_numbers/1-lc$^1/1-1-'`/1), _84

  %% Unique:
  %%    _16
  _152 = succeeded:body _16
  br _152, ^152, ^1

152:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _86 = put_tuple _85, _85

  %% Argument types:
  %%    _86 => {any(), any()}
  %%    _16 => list({any(), any()})
  %% Unique:
  %%    _16, 
  %%    _86
  _146 = put_list _86, _16
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _146
  ret _146

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _154 = bif:'=:=' _14, `[]`
  br _154, ^154, ^150

154:
  %% Result type:
  %%    nil()
  ret `[]`

150:
  %% Argument types:
  %%    _14 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _14
  _83 = put_tuple `bad_generator`, _14

  %% mc_SUITE.erl:245
  %% Unique:
  %%    _83
  _147 = call (`erlang`:`error`/1), _83

  %% Aliased:
  %%    _147
  _155 = succeeded:body _147
  br ^1

1:
  _148 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _148
}

%% mc_SUITE.erl:239
%% Counter = 220
%% bs_ensure_opt: true
%% Parameters
%%    _64 =>
%%     list(any())
%%    _118 =>
%%     list(any())
function `mc_SUITE`:`'-mixed_3/2-lc$^7/1-7-'`(_64, _118) {
0:
  %% Aliased:
  %%    _64
  _215 = is_nonempty_list _64
  br _215, ^215, ^216

215:
  %% Argument types:
  %%    _64 => nonempty_list(any())
  %% Aliased:
  %%    _64
  _172 = get_hd _64

  %% Argument types:
  %%    _64 => nonempty_list(any())
  %% Aliased:
  %%    _64
  _171 = get_tl _64

  %% mc_SUITE.erl:239
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _118, 
  %%    _171, 
  %%    _172
  _208 = call (`'-mixed_3/2-lc$^8/1-8-'`/4), _118, _118, _171, _172

  %% Unique:
  %%    _208
  _214 = succeeded:body _208
  br _214, ^214, ^1

214:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _208
  ret _208

1:
  _210 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _210

216:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:239
%% Counter = 219
%% bs_ensure_opt: true
%% Parameters
%%    _66 =>
%%     list(any())
%%    _118 =>
%%     list(any())
%%    _171 =>
%%     list(any())
function `mc_SUITE`:`'-mixed_3/2-lc$^8/1-8-'`(_66, _118, _171, _172) {
0:
  %% Aliased:
  %%    _66
  _213 = is_nonempty_list _66
  br _213, ^213, ^215

213:
  %% Argument types:
  %%    _66 => nonempty_list(any())
  %% Aliased:
  %%    _66
  _177 = get_hd _66

  %% Argument types:
  %%    _66 => nonempty_list(any())
  %% Aliased:
  %%    _66
  _176 = get_tl _66

  %% mc_SUITE.erl:239
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _118, 
  %%    _171, 
  %%    _172, 
  %%    _176
  _68 = call (`'-mixed_3/2-lc$^8/1-8-'`/4), _176, _118, _171, _172

  %% Unique:
  %%    _68
  _212 = succeeded:body _68
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _172, 
  %%    _177
  _178 = put_tuple _172, _177

  %% Argument types:
  %%    _178 => {any(), any()}
  %%    _68 => list({any(), any()})
  %% Unique:
  %%    _68, 
  %%    _178
  _206 = put_list _178, _68
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _206
  ret _206

215:
  %% mc_SUITE.erl:239
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _118, 
  %%    _171
  _205 = call (`'-mixed_3/2-lc$^7/1-7-'`/2), _171, _118

  %% Unique:
  %%    _205
  _214 = succeeded:body _205
  br _214, ^214, ^1

214:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _205
  ret _205

1:
  _208 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _208
}

%% mc_SUITE.erl:238
%% Counter = 215
%% bs_ensure_opt: true
%% Parameters
%%    _21 =>
%%     bitstring(16,appendable)
%%    _53 =>
%%     list(any())
function `mc_SUITE`:`'-mixed_3/2-lc$^5/1-5-'`(_53, _21) {
0:
  %% Aliased:
  %%    _53
  _210 = is_nonempty_list _53
  br _210, ^210, ^211

210:
  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _53
  _153 = get_hd _53

  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _53
  _152 = get_tl _53

  %% mc_SUITE.erl:238
  %% Result type:
  %%    list({any(), 0..65535})
  %% Aliased:
  %%    _152, 
  %%    _153
  %% Unique:
  %%    _21
  _203 = call (`'-mixed_3/2-lc$^6/1-6-'`/4), _21, _21, _152, _153

  %% Unique:
  %%    _203
  _209 = succeeded:body _203
  br _209, ^209, ^1

209:
  %% Result type:
  %%    list({any(), 0..65535})
  %% Unique:
  %%    _203
  ret _203

1:
  _205 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _205

211:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:238
%% Counter = 228
%% bs_ensure_opt: true
%% Parameters
%%    _21 =>
%%     bitstring(16,appendable)
%%    _55 =>
%%     bs_matchable(16)
%%     accepts_match_context
%%    _152 =>
%%     list(any())
function `mc_SUITE`:`'-mixed_3/2-lc$^6/1-6-'`(_55, _21, _152, _153) {
0:
  %% Argument types:
  %%    _55 => bs_matchable(16)
  %% Aliased:
  %%    _55
  %% Anno: #{accepts_match_contexts => true}
  _159 = bs_start_match `new`, _55
  _226 = bs_ensure _159, `16`, `1`
  _227 = succeeded:guard _226
  br _227, ^225, ^222

225:
  %% mc_SUITE.erl:238
  %% Argument types:
  %%    _226 => bs_context(16)
  %% Aliased:
  %%    _159
  %% Anno: #{ensured => true}
  _160 = bs_match `integer`, _226, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _160
  _207 = succeeded:guard _160
  br _207, ^207, ^222

207:
  %% Aliased:
  %%    _160
  _161 = bs_extract _160

  %% mc_SUITE.erl:238
  %% Result type:
  %%    list({any(), 0..65535})
  %% Aliased:
  %%    _152, 
  %%    _153, 
  %%    _160
  %% Unique:
  %%    _21
  %% Anno: #{bsm_info => context_reused}
  _57 = call (`'-mixed_3/2-lc$^6/1-6-'`/4), _160, _21, _152, _153

  %% Unique:
  %%    _57
  _209 = succeeded:body _57
  br _209, ^209, ^1

209:
  %% Argument types:
  %%    _161 => 0..65535
  %% Aliased:
  %%    _153
  %% Unique:
  %%    _161
  _164 = put_tuple _153, _161

  %% Argument types:
  %%    _164 => {any(), 0..65535}
  %%    _57 => list({any(), 0..65535})
  %% Unique:
  %%    _57, 
  %%    _164
  _201 = put_list _164, _57
  %% Result type:
  %%    nonempty_list({any(), 0..65535})
  %% Unique:
  %%    _201
  ret _201

222:
  %% mc_SUITE.erl:238
  %% Result type:
  %%    list({any(), 0..65535})
  %% Aliased:
  %%    _152
  %% Unique:
  %%    _21
  _200 = call (`'-mixed_3/2-lc$^5/1-5-'`/2), _152, _21

  %% Unique:
  %%    _200
  _211 = succeeded:body _200
  br _211, ^211, ^1

211:
  %% Result type:
  %%    list({any(), 0..65535})
  %% Unique:
  %%    _200
  ret _200

1:
  _219 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _219
}

%% mc_SUITE.erl:237
%% Counter = 225
%% bs_ensure_opt: true
%% Parameters
%%    Map =>
%%     map()
function `mc_SUITE`:`'-mixed_3/2-lc$^3/1-3-'`(_43, Map) {
0:
  %% Aliased:
  %%    _43
  _205 = is_nonempty_list _43
  br _205, ^220, ^202

220:
  %% mc_SUITE.erl:237
  %% Aliased:
  %%    _43
  _127 = call (`erts_internal`:`mc_refill`/1), _43

  %% Aliased:
  %%    _127
  _203 = succeeded:body _127
  br _203, ^203, ^1

203:
  %% mc_SUITE.erl:237
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _127, 
  %%    Map
  _197 = call (`'-mixed_3/2-lc$^3/1-3-'`/2), _127, Map

  %% Unique:
  %%    _197
  _204 = succeeded:body _197
  br _204, ^204, ^1

204:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _197
  ret _197

202:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _214 = bif:is_tuple _43
  br _214, ^214, ^206

214:
  %% Argument types:
  %%    _43 => {...}
  %% Aliased:
  %%    _43
  _215 = bif:tuple_size _43

  %% Argument types:
  %%    _215 => 0..16777215
  %% Unique:
  %%    _215
  _216 = bif:'=:=' _215, `3`
  br _216, ^221, ^201

221:
  %% mc_SUITE.erl:237
  %% Aliased:
  %%    Map
  _143 = call (`erts_internal`:`mc_iterator`/1), Map

  %% Aliased:
  %%    _143
  _207 = succeeded:body _143
  br _207, ^207, ^1

207:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _143
  _211 = bif:'=:=' _143, `[]`
  br _211, ^211, ^223

211:
  %% Argument types:
  %%    Map => map()
  %% Aliased:
  %%    Map
  _145 = put_tuple `bad_generator`, Map

  %% mc_SUITE.erl:237
  %% Unique:
  %%    _145
  _195 = call (`erlang`:`error`/1), _145

  %% Aliased:
  %%    _195
  _210 = succeeded:body _195
  br ^1

223:
  %% Argument types:
  %%    _43 => {any(), any(), any()}
  %% Aliased:
  %%    _43
  _130 = get_tuple_element _43, `0`

  %% Argument types:
  %%    _43 => {any(), any(), any()}
  %% Aliased:
  %%    _43
  _128 = get_tuple_element _43, `2`

  %% mc_SUITE.erl:237
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _128, 
  %%    _130, 
  %%    _143, 
  %%    Map
  _196 = call (`'-mixed_3/2-lc$^4/1-4-'`/4), _143, _128, _130, Map

  %% Unique:
  %%    _196
  _212 = succeeded:body _196
  br _212, ^212, ^1

212:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _196
  ret _196

206:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _218 = bif:'=:=' _43, `none`
  br _218, ^217, ^201

217:
  %% Result type:
  %%    nil()
  ret `[]`

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _43
  _124 = put_tuple `bad_generator`, _43

  %% Unique:
  %%    _124
  _198 = call (`erlang`:`error`/1), _124

  %% Aliased:
  %%    _198
  _219 = succeeded:body _198
  br ^1

1:
  _199 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _199
}

%% mc_SUITE.erl:237
%% Counter = 215
%% bs_ensure_opt: true
%% Parameters
%%    Map =>
%%     map()
function `mc_SUITE`:`'-mixed_3/2-lc$^4/1-4-'`(_45, _128, _130, Map) {
0:
  %% Aliased:
  %%    _45
  _201 = is_nonempty_list _45
  br _201, ^212, ^198

212:
  %% mc_SUITE.erl:237
  %% Aliased:
  %%    _45
  _138 = call (`erts_internal`:`mc_refill`/1), _45

  %% Aliased:
  %%    _138
  _199 = succeeded:body _138
  br _199, ^199, ^1

199:
  %% mc_SUITE.erl:237
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _128, 
  %%    _130, 
  %%    _138, 
  %%    Map
  _193 = call (`'-mixed_3/2-lc$^4/1-4-'`/4), _138, _128, _130, Map

  %% Unique:
  %%    _193
  _200 = succeeded:body _193
  br _200, ^200, ^1

200:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _193
  ret _193

198:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _205 = bif:is_tuple _45
  br _205, ^205, ^202

205:
  %% Argument types:
  %%    _45 => {...}
  %% Aliased:
  %%    _45
  _206 = bif:tuple_size _45

  %% Argument types:
  %%    _206 => 0..16777215
  %% Unique:
  %%    _206
  _207 = bif:'=:=' _206, `3`
  br _207, ^204, ^197

204:
  %% Argument types:
  %%    _45 => {any(), any(), any()}
  %% Aliased:
  %%    _45
  _140 = get_tuple_element _45, `1`

  %% Argument types:
  %%    _45 => {any(), any(), any()}
  %% Aliased:
  %%    _45
  _139 = get_tuple_element _45, `2`

  %% mc_SUITE.erl:237
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _128, 
  %%    _130, 
  %%    _139, 
  %%    Map
  _47 = call (`'-mixed_3/2-lc$^4/1-4-'`/4), _139, _128, _130, Map

  %% Unique:
  %%    _47
  _203 = succeeded:body _47
  br _203, ^203, ^1

203:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _130, 
  %%    _140
  _142 = put_tuple _130, _140

  %% Argument types:
  %%    _142 => {any(), any()}
  %%    _47 => list({any(), any()})
  %% Unique:
  %%    _47, 
  %%    _142
  _192 = put_list _142, _47
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _192
  ret _192

202:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _210 = bif:'=:=' _45, `none`
  br _210, ^209, ^197

209:
  %% mc_SUITE.erl:237
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _128, 
  %%    Map
  _191 = call (`'-mixed_3/2-lc$^3/1-3-'`/2), _128, Map

  %% Unique:
  %%    _191
  _208 = succeeded:body _191
  br _208, ^208, ^1

208:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _191
  ret _191

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _135 = put_tuple `bad_generator`, _45

  %% Unique:
  %%    _135
  _194 = call (`erlang`:`error`/1), _135

  %% Aliased:
  %%    _194
  _211 = succeeded:body _194
  br ^1

1:
  _195 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _195
}

%% mc_SUITE.erl:235
%% Counter = 209
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed_3/2-lc$^2/1-2-'`(_28) {
0:
  %% Aliased:
  %%    _28
  _196 = is_nonempty_list _28
  br _196, ^206, ^193

206:
  %% mc_SUITE.erl:235
  %% Aliased:
  %%    _28
  _109 = call (`erts_internal`:`mc_refill`/1), _28

  %% Aliased:
  %%    _109
  _194 = succeeded:body _109
  br _194, ^194, ^1

194:
  %% mc_SUITE.erl:235
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _109
  _188 = call (`'-mixed_3/2-lc$^2/1-2-'`/1), _109

  %% Unique:
  %%    _188
  _195 = succeeded:body _188
  br _195, ^195, ^1

195:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _188
  ret _188

193:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _200 = bif:is_tuple _28
  br _200, ^200, ^197

200:
  %% Argument types:
  %%    _28 => {...}
  %% Aliased:
  %%    _28
  _201 = bif:tuple_size _28

  %% Argument types:
  %%    _201 => 0..16777215
  %% Unique:
  %%    _201
  _202 = bif:'=:=' _201, `3`
  br _202, ^207, ^192

207:
  %% Argument types:
  %%    _28 => {any(), any(), any()}
  %% Aliased:
  %%    _28
  _110 = get_tuple_element _28, `2`

  %% mc_SUITE.erl:235
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _110
  _30 = call (`'-mixed_3/2-lc$^2/1-2-'`/1), _110

  %% Unique:
  %%    _30
  _198 = succeeded:body _30
  br _198, ^198, ^1

198:
  %% Argument types:
  %%    _28 => {any(), any(), any()}
  %% Aliased:
  %%    _28
  _112 = get_tuple_element _28, `0`

  %% Argument types:
  %%    _28 => {any(), any(), any()}
  %% Aliased:
  %%    _28
  _111 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111, 
  %%    _112
  _113 = put_tuple _112, _111

  %% Argument types:
  %%    _113 => {any(), any()}
  %%    _30 => list({any(), any()})
  %% Unique:
  %%    _30, 
  %%    _113
  _187 = put_list _113, _30
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _187
  ret _187

197:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _204 = bif:'=:=' _28, `none`
  br _204, ^203, ^192

203:
  %% Result type:
  %%    nil()
  ret `[]`

192:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _106 = put_tuple `bad_generator`, _28

  %% Unique:
  %%    _106
  _189 = call (`erlang`:`error`/1), _106

  %% Aliased:
  %%    _189
  _205 = succeeded:body _189
  br ^1

1:
  _190 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _190
}

%% mc_SUITE.erl:234
%% Counter = 206
%% bs_ensure_opt: true
%% Parameters
%%    _16 =>
%%     bitstring(16,appendable)
function `mc_SUITE`:`'-mixed_3/2-lbc$^1/2-1-'`(_17, _16) {
0:
  %% Aliased:
  %%    _17
  _194 = is_nonempty_list _17
  br _194, ^191, ^190

191:
  %% mc_SUITE.erl:234
  %% Aliased:
  %%    _17
  _97 = call (`erts_internal`:`mc_refill`/1), _17

  %% Aliased:
  %%    _97
  _192 = succeeded:body _97
  br _192, ^192, ^1

192:
  %% mc_SUITE.erl:234
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _97
  %% Unique:
  %%    _16
  _185 = call (`'-mixed_3/2-lbc$^1/2-1-'`/2), _97, _16

  %% Unique:
  %%    _185
  _193 = succeeded:body _185
  br _193, ^193, ^1

193:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _185
  ret _185

190:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _199 = bif:is_tuple _17
  br _199, ^199, ^195

199:
  %% Argument types:
  %%    _17 => {...}
  %% Aliased:
  %%    _17
  _200 = bif:tuple_size _17

  %% Argument types:
  %%    _200 => 0..16777215
  %% Unique:
  %%    _200
  _201 = bif:'=:=' _200, `3`
  br _201, ^198, ^189

198:
  %% Argument types:
  %%    _17 => {any(), any(), any()}
  %% Aliased:
  %%    _17
  _99 = get_tuple_element _17, `1`

  %% mc_SUITE.erl:234
  %% Result type:
  %%    bitstring(16,appendable)
  %% Argument types:
  %%    _16 => bitstring(16,appendable)
  %% Aliased:
  %%    _99
  %% Unique:
  %%    _16
  %% Anno: #{unit => 16}
  _79 = bs_create_bin `private_append`, `[1,{segment,1}]`, _16, `all`, `integer`, `[1,{segment,2}]`, _99, `16`

  %% Unique:
  %%    _79
  _196 = succeeded:body _79
  br _196, ^196, ^1

196:
  %% Argument types:
  %%    _17 => {any(), any(), any()}
  %% Aliased:
  %%    _17
  _98 = get_tuple_element _17, `2`

  %% mc_SUITE.erl:234
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _98
  %% Unique:
  %%    _79
  _184 = call (`'-mixed_3/2-lbc$^1/2-1-'`/2), _98, _79

  %% Unique:
  %%    _184
  _197 = succeeded:body _184
  br _197, ^197, ^1

197:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _184
  ret _184

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _203 = bif:'=:=' _17, `none`
  br _203, ^202, ^189

202:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _16
  ret _16

189:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _94 = put_tuple `bad_generator`, _17

  %% Unique:
  %%    _94
  _186 = call (`erlang`:`error`/1), _94

  %% Aliased:
  %%    _186
  _204 = succeeded:body _186
  br ^1

1:
  _187 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _187
}

%% mc_SUITE.erl:233
%% Counter = 198
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed_3/2-lc$^0/1-0-'`(_5) {
0:
  %% Aliased:
  %%    _5
  _194 = is_nonempty_list _5
  br _194, ^194, ^186

194:
  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _83 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _5
  _82 = get_tl _5

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _190 = bif:is_tuple _83
  br _190, ^190, ^187

190:
  %% Argument types:
  %%    _83 => {...}
  %% Aliased:
  %%    _83
  _191 = bif:tuple_size _83

  %% Argument types:
  %%    _191 => 0..16777215
  %% Unique:
  %%    _191
  _192 = bif:'=:=' _191, `2`
  br _192, ^189, ^187

189:
  %% mc_SUITE.erl:233
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _82
  _7 = call (`'-mixed_3/2-lc$^0/1-0-'`/1), _82

  %% Unique:
  %%    _7
  _188 = succeeded:body _7
  br _188, ^188, ^1

188:
  %% Argument types:
  %%    _83 => {any(), any()}
  %%    _7 => list({any(), any()})
  %% Aliased:
  %%    _83
  %% Unique:
  %%    _7
  _180 = put_list _83, _7
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _180
  ret _180

187:
  %% mc_SUITE.erl:233
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _82
  _181 = call (`'-mixed_3/2-lc$^0/1-0-'`/1), _82

  %% Unique:
  %%    _181
  _193 = succeeded:body _181
  br _193, ^193, ^1

193:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _181
  ret _181

186:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _195 = bif:'=:=' _5, `[]`
  br _195, ^195, ^185

195:
  %% Result type:
  %%    nil()
  ret `[]`

185:
  %% Argument types:
  %%    _5 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _5
  _81 = put_tuple `bad_generator`, _5

  %% mc_SUITE.erl:233
  %% Unique:
  %%    _81
  _182 = call (`erlang`:`error`/1), _81

  %% Aliased:
  %%    _182
  _196 = succeeded:body _182
  br ^1

1:
  _183 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _183
}

%% mc_SUITE.erl:228
%% Counter = 243
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
%%    _76 =>
%%     list(any())
function `mc_SUITE`:`'-mixed_2/2-lc$^9/1-9-'`(_76, _0) {
0:
  %% Aliased:
  %%    _76
  _238 = is_nonempty_list _76
  br _238, ^238, ^239

238:
  %% Argument types:
  %%    _76 => nonempty_list(any())
  %% Aliased:
  %%    _76
  _188 = get_hd _76

  %% Argument types:
  %%    _76 => nonempty_list(any())
  %% Aliased:
  %%    _76
  _187 = get_tl _76

  %% mc_SUITE.erl:228
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _187, 
  %%    _188
  _231 = call (`'-mixed_2/2-lc$^10/1-10-'`/4), _0, _0, _187, _188

  %% Unique:
  %%    _231
  _237 = succeeded:body _231
  br _237, ^237, ^1

237:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _231
  ret _231

1:
  _233 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _233

239:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:228
%% Counter = 242
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
%%    _78 =>
%%     list(atom())
%%    _187 =>
%%     list(any())
function `mc_SUITE`:`'-mixed_2/2-lc$^10/1-10-'`(_78, _0, _187, _188) {
0:
  %% Aliased:
  %%    _78
  _236 = is_nonempty_list _78
  br _236, ^236, ^238

236:
  %% Argument types:
  %%    _78 => nonempty_list(atom())
  %% Aliased:
  %%    _78
  _193 = get_hd _78

  %% Argument types:
  %%    _78 => nonempty_list(atom())
  %% Aliased:
  %%    _78
  _192 = get_tl _78

  %% mc_SUITE.erl:228
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _187, 
  %%    _188, 
  %%    _192
  _80 = call (`'-mixed_2/2-lc$^10/1-10-'`/4), _192, _0, _187, _188

  %% Unique:
  %%    _80
  _235 = succeeded:body _80
  br _235, ^235, ^1

235:
  %% Argument types:
  %%    _193 => atom()
  %% Aliased:
  %%    _188
  %% Unique:
  %%    _193
  _194 = put_tuple _193, _188

  %% Argument types:
  %%    _194 => {atom(), any()}
  %%    _80 => list({atom(), any()})
  %% Unique:
  %%    _80, 
  %%    _194
  _229 = put_list _194, _80
  %% Result type:
  %%    nonempty_list({atom(), any()})
  %% Unique:
  %%    _229
  ret _229

238:
  %% mc_SUITE.erl:228
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _187
  _228 = call (`'-mixed_2/2-lc$^9/1-9-'`/2), _187, _0

  %% Unique:
  %%    _228
  _237 = succeeded:body _228
  br _237, ^237, ^1

237:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _228
  ret _228

1:
  _231 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _231
}

%% mc_SUITE.erl:227
%% Counter = 251
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
%%    _65 =>
%%     bitstring(16)
%%     accepts_match_context
function `mc_SUITE`:`'-mixed_2/2-lc$^7/1-7-'`(_65, _0) {
0:
  %% Argument types:
  %%    _65 => bitstring(16)
  %% Aliased:
  %%    _65
  %% Anno: #{accepts_match_contexts => true}
  _171 = bs_start_match `new`, _65
  _249 = bs_ensure _171, `16`, `1`
  _250 = succeeded:guard _249
  br _250, ^248, ^235

248:
  %% mc_SUITE.erl:227
  %% Argument types:
  %%    _249 => bs_context(16)
  %% Aliased:
  %%    _171
  %% Anno: #{ensured => true}
  _172 = bs_match `integer`, _249, `[unsigned,big]`, `16`, `1`

  %% Aliased:
  %%    _172
  _232 = succeeded:guard _172
  br _232, ^232, ^235

232:
  %% Aliased:
  %%    _172
  _173 = bs_extract _172

  %% mc_SUITE.erl:227
  %% Aliased:
  %%    _172
  _174 = bs_get_tail _172

  %% mc_SUITE.erl:227
  %% Result type:
  %%    list({atom(), 0..65535})
  %% Aliased:
  %%    _0, 
  %%    _173, 
  %%    _174
  %% Anno: #{bsm_info =>
                 {no_match_on_entry,
                     {b_local,{b_literal,'-mixed_2/2-lc$^8/1-8-'},4}}}
  _226 = call (`'-mixed_2/2-lc$^8/1-8-'`/4), _0, _0, _173, _174

  %% Unique:
  %%    _226
  _234 = succeeded:body _226
  br _234, ^234, ^1

234:
  %% Result type:
  %%    list({atom(), 0..65535})
  %% Unique:
  %%    _226
  ret _226

1:
  _243 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _243

235:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:227
%% Counter = 237
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
%%    _67 =>
%%     list(atom())
%%    _173 =>
%%     0..65535
%%    _175 =>
%%     bitstring(16)
function `mc_SUITE`:`'-mixed_2/2-lc$^8/1-8-'`(_67, _0, _173, _175) {
0:
  %% Aliased:
  %%    _67
  _231 = is_nonempty_list _67
  br _231, ^231, ^233

231:
  %% Argument types:
  %%    _67 => nonempty_list(atom())
  %% Aliased:
  %%    _67
  _180 = get_hd _67

  %% Argument types:
  %%    _67 => nonempty_list(atom())
  %% Aliased:
  %%    _67
  _179 = get_tl _67

  %% mc_SUITE.erl:227
  %% Result type:
  %%    list({atom(), 0..65535})
  %% Aliased:
  %%    _0, 
  %%    _173, 
  %%    _175, 
  %%    _179
  _69 = call (`'-mixed_2/2-lc$^8/1-8-'`/4), _179, _0, _173, _175

  %% Unique:
  %%    _69
  _230 = succeeded:body _69
  br _230, ^230, ^1

230:
  %% Argument types:
  %%    _180 => atom()
  %%    _173 => 0..65535
  %% Unique:
  %%    _173, 
  %%    _180
  _181 = put_tuple _180, _173

  %% Argument types:
  %%    _181 => {atom(), 0..65535}
  %%    _69 => list({atom(), 0..65535})
  %% Unique:
  %%    _69, 
  %%    _181
  _224 = put_list _181, _69
  %% Result type:
  %%    nonempty_list({atom(), 0..65535})
  %% Unique:
  %%    _224
  ret _224

233:
  %% mc_SUITE.erl:227
  %% Result type:
  %%    list({atom(), 0..65535})
  %% Aliased:
  %%    _0, 
  %%    _175
  _223 = call (`'-mixed_2/2-lc$^7/1-7-'`/2), _175, _0

  %% Unique:
  %%    _223
  _232 = succeeded:body _223
  br _232, ^232, ^1

232:
  %% Result type:
  %%    list({atom(), 0..65535})
  %% Unique:
  %%    _223
  ret _223

1:
  _226 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _226
}

%% mc_SUITE.erl:226
%% Counter = 243
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
function `mc_SUITE`:`'-mixed_2/2-lc$^5/1-5-'`(_55, _0) {
0:
  %% Aliased:
  %%    _55
  _228 = is_nonempty_list _55
  br _228, ^241, ^225

241:
  %% mc_SUITE.erl:226
  %% Aliased:
  %%    _55
  _153 = call (`erts_internal`:`mc_refill`/1), _55

  %% Aliased:
  %%    _153
  _226 = succeeded:body _153
  br _226, ^226, ^1

226:
  %% mc_SUITE.erl:226
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _153
  _220 = call (`'-mixed_2/2-lc$^5/1-5-'`/2), _153, _0

  %% Unique:
  %%    _220
  _227 = succeeded:body _220
  br _227, ^227, ^1

227:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _220
  ret _220

225:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _235 = bif:is_tuple _55
  br _235, ^235, ^229

235:
  %% Argument types:
  %%    _55 => {...}
  %% Aliased:
  %%    _55
  _236 = bif:tuple_size _55

  %% Argument types:
  %%    _236 => 0..16777215
  %% Unique:
  %%    _236
  _237 = bif:'=:=' _236, `3`
  br _237, ^234, ^224

234:
  %% Argument types:
  %%    _55 => {any(), any(), any()}
  %% Aliased:
  %%    _55
  _155 = get_tuple_element _55, `1`

  %% Argument types:
  %%    _55 => {any(), any(), any()}
  %% Aliased:
  %%    _55
  _154 = get_tuple_element _55, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _155
  _232 = bif:'=:=' _155, `[]`
  br _232, ^232, ^230

232:
  %% Argument types:
  %%    _55 => {any(), nil(), any()}
  %% Aliased:
  %%    _55
  _156 = get_tuple_element _55, `0`

  %% mc_SUITE.erl:226
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _154, 
  %%    _156
  _218 = call (`'-mixed_2/2-lc$^6/1-6-'`/4), _0, _0, _154, _156

  %% Unique:
  %%    _218
  _231 = succeeded:body _218
  br _231, ^231, ^1

231:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _218
  ret _218

230:
  %% mc_SUITE.erl:226
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _154
  _219 = call (`'-mixed_2/2-lc$^5/1-5-'`/2), _154, _0

  %% Unique:
  %%    _219
  _233 = succeeded:body _219
  br _233, ^233, ^1

233:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _219
  ret _219

229:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _239 = bif:'=:=' _55, `none`
  br _239, ^238, ^224

238:
  %% Result type:
  %%    nil()
  ret `[]`

224:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _150 = put_tuple `bad_generator`, _55

  %% Unique:
  %%    _150
  _221 = call (`erlang`:`error`/1), _150

  %% Aliased:
  %%    _221
  _240 = succeeded:body _221
  br ^1

1:
  _222 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _222
}

%% mc_SUITE.erl:226
%% Counter = 229
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
%%    _57 =>
%%     list(atom())
function `mc_SUITE`:`'-mixed_2/2-lc$^6/1-6-'`(_57, _0, _154, _156) {
0:
  %% Aliased:
  %%    _57
  _223 = is_nonempty_list _57
  br _223, ^223, ^225

223:
  %% Argument types:
  %%    _57 => nonempty_list(atom())
  %% Aliased:
  %%    _57
  _161 = get_hd _57

  %% Argument types:
  %%    _57 => nonempty_list(atom())
  %% Aliased:
  %%    _57
  _160 = get_tl _57

  %% mc_SUITE.erl:226
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _154, 
  %%    _156, 
  %%    _160
  _59 = call (`'-mixed_2/2-lc$^6/1-6-'`/4), _160, _0, _154, _156

  %% Unique:
  %%    _59
  _222 = succeeded:body _59
  br _222, ^222, ^1

222:
  %% Argument types:
  %%    _161 => atom()
  %% Aliased:
  %%    _156
  %% Unique:
  %%    _161
  _162 = put_tuple _161, _156

  %% Argument types:
  %%    _162 => {atom(), any()}
  %%    _59 => list({atom(), any()})
  %% Unique:
  %%    _59, 
  %%    _162
  _216 = put_list _162, _59
  %% Result type:
  %%    nonempty_list({atom(), any()})
  %% Unique:
  %%    _216
  ret _216

225:
  %% mc_SUITE.erl:226
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _154
  _215 = call (`'-mixed_2/2-lc$^5/1-5-'`/2), _154, _0

  %% Unique:
  %%    _215
  _224 = succeeded:body _215
  br _224, ^224, ^1

224:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _215
  ret _215

1:
  _218 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _218
}

%% mc_SUITE.erl:225
%% Counter = 235
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
function `mc_SUITE`:`'-mixed_2/2-lc$^3/1-3-'`(_40, _0) {
0:
  %% Aliased:
  %%    _40
  _220 = is_nonempty_list _40
  br _220, ^233, ^217

233:
  %% mc_SUITE.erl:225
  %% Aliased:
  %%    _40
  _134 = call (`erts_internal`:`mc_refill`/1), _40

  %% Aliased:
  %%    _134
  _218 = succeeded:body _134
  br _218, ^218, ^1

218:
  %% mc_SUITE.erl:225
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _134
  _212 = call (`'-mixed_2/2-lc$^3/1-3-'`/2), _134, _0

  %% Unique:
  %%    _212
  _219 = succeeded:body _212
  br _219, ^219, ^1

219:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _212
  ret _212

217:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _227 = bif:is_tuple _40
  br _227, ^227, ^221

227:
  %% Argument types:
  %%    _40 => {...}
  %% Aliased:
  %%    _40
  _228 = bif:tuple_size _40

  %% Argument types:
  %%    _228 => 0..16777215
  %% Unique:
  %%    _228
  _229 = bif:'=:=' _228, `3`
  br _229, ^226, ^216

226:
  %% Argument types:
  %%    _40 => {any(), any(), any()}
  %% Aliased:
  %%    _40
  _136 = get_tuple_element _40, `1`

  %% Argument types:
  %%    _40 => {any(), any(), any()}
  %% Aliased:
  %%    _40
  _135 = get_tuple_element _40, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _136
  _224 = bif:'=:=' _136, `[]`
  br _224, ^224, ^222

224:
  %% Argument types:
  %%    _40 => {any(), nil(), any()}
  %% Aliased:
  %%    _40
  _137 = get_tuple_element _40, `0`

  %% mc_SUITE.erl:225
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _135, 
  %%    _137
  _210 = call (`'-mixed_2/2-lc$^4/1-4-'`/4), _0, _0, _135, _137

  %% Unique:
  %%    _210
  _223 = succeeded:body _210
  br _223, ^223, ^1

223:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _210
  ret _210

222:
  %% mc_SUITE.erl:225
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _135
  _211 = call (`'-mixed_2/2-lc$^3/1-3-'`/2), _135, _0

  %% Unique:
  %%    _211
  _225 = succeeded:body _211
  br _225, ^225, ^1

225:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _211
  ret _211

221:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _231 = bif:'=:=' _40, `none`
  br _231, ^230, ^216

230:
  %% Result type:
  %%    nil()
  ret `[]`

216:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _40
  _131 = put_tuple `bad_generator`, _40

  %% Unique:
  %%    _131
  _213 = call (`erlang`:`error`/1), _131

  %% Aliased:
  %%    _213
  _232 = succeeded:body _213
  br ^1

1:
  _214 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _214
}

%% mc_SUITE.erl:225
%% Counter = 221
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(atom())
%%    _42 =>
%%     list(atom())
function `mc_SUITE`:`'-mixed_2/2-lc$^4/1-4-'`(_42, _0, _135, _137) {
0:
  %% Aliased:
  %%    _42
  _215 = is_nonempty_list _42
  br _215, ^215, ^217

215:
  %% Argument types:
  %%    _42 => nonempty_list(atom())
  %% Aliased:
  %%    _42
  _141 = get_hd _42

  %% Argument types:
  %%    _42 => nonempty_list(atom())
  %% Aliased:
  %%    _42
  _140 = get_tl _42

  %% mc_SUITE.erl:225
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _135, 
  %%    _137, 
  %%    _140
  _44 = call (`'-mixed_2/2-lc$^4/1-4-'`/4), _140, _0, _135, _137

  %% Unique:
  %%    _44
  _214 = succeeded:body _44
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _141 => atom()
  %% Aliased:
  %%    _137
  %% Unique:
  %%    _141
  _142 = put_tuple _141, _137

  %% Argument types:
  %%    _142 => {atom(), any()}
  %%    _44 => list({atom(), any()})
  %% Unique:
  %%    _44, 
  %%    _142
  _208 = put_list _142, _44
  %% Result type:
  %%    nonempty_list({atom(), any()})
  %% Unique:
  %%    _208
  ret _208

217:
  %% mc_SUITE.erl:225
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _0, 
  %%    _135
  _207 = call (`'-mixed_2/2-lc$^3/1-3-'`/2), _135, _0

  %% Unique:
  %%    _207
  _216 = succeeded:body _207
  br _216, ^216, ^1

216:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _207
  ret _207

1:
  _210 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _210
}

%% mc_SUITE.erl:222
%% Counter = 229
%% bs_ensure_opt: true
%% Parameters
%%    _25 =>
%%     bitstring(16,appendable)
function `mc_SUITE`:`'-mixed_2/2-lbc$^2/2-2-'`(_26, _25) {
0:
  %% Aliased:
  %%    _26
  _214 = is_nonempty_list _26
  br _214, ^211, ^210

211:
  %% mc_SUITE.erl:222
  %% Aliased:
  %%    _26
  _122 = call (`erts_internal`:`mc_refill`/1), _26

  %% Aliased:
  %%    _122
  _212 = succeeded:body _122
  br _212, ^212, ^1

212:
  %% mc_SUITE.erl:222
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _122
  %% Unique:
  %%    _25
  _205 = call (`'-mixed_2/2-lbc$^2/2-2-'`/2), _122, _25

  %% Unique:
  %%    _205
  _213 = succeeded:body _205
  br _213, ^213, ^1

213:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _205
  ret _205

210:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _222 = bif:is_tuple _26
  br _222, ^222, ^215

222:
  %% Argument types:
  %%    _26 => {...}
  %% Aliased:
  %%    _26
  _223 = bif:tuple_size _26

  %% Argument types:
  %%    _223 => 0..16777215
  %% Unique:
  %%    _223
  _224 = bif:'=:=' _223, `3`
  br _224, ^221, ^209

221:
  %% Argument types:
  %%    _26 => {any(), any(), any()}
  %% Aliased:
  %%    _26
  _124 = get_tuple_element _26, `1`

  %% Argument types:
  %%    _26 => {any(), any(), any()}
  %% Aliased:
  %%    _26
  _123 = get_tuple_element _26, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _124
  _219 = bif:'=:=' _124, `[]`
  br _219, ^219, ^216

219:
  %% Argument types:
  %%    _26 => {any(), nil(), any()}
  %% Aliased:
  %%    _26
  _125 = get_tuple_element _26, `0`

  %% mc_SUITE.erl:222
  %% Result type:
  %%    bitstring(16,appendable)
  %% Argument types:
  %%    _25 => bitstring(16,appendable)
  %% Aliased:
  %%    _125
  %% Unique:
  %%    _25
  %% Anno: #{unit => 16}
  _90 = bs_create_bin `private_append`, `[1,{segment,1}]`, _25, `all`, `integer`, `[1,{segment,2}]`, _125, `16`

  %% Unique:
  %%    _90
  _217 = succeeded:body _90
  br _217, ^217, ^1

217:
  %% mc_SUITE.erl:222
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _123
  %% Unique:
  %%    _90
  _203 = call (`'-mixed_2/2-lbc$^2/2-2-'`/2), _123, _90

  %% Unique:
  %%    _203
  _218 = succeeded:body _203
  br _218, ^218, ^1

218:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _203
  ret _203

216:
  %% mc_SUITE.erl:222
  %% Result type:
  %%    bitstring(16,appendable)
  %% Aliased:
  %%    _123
  %% Unique:
  %%    _25
  _204 = call (`'-mixed_2/2-lbc$^2/2-2-'`/2), _123, _25

  %% Unique:
  %%    _204
  _220 = succeeded:body _204
  br _220, ^220, ^1

220:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _204
  ret _204

215:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _226 = bif:'=:=' _26, `none`
  br _226, ^225, ^209

225:
  %% Result type:
  %%    bitstring(16,appendable)
  %% Unique:
  %%    _25
  ret _25

209:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _119 = put_tuple `bad_generator`, _26

  %% Unique:
  %%    _119
  _206 = call (`erlang`:`error`/1), _119

  %% Aliased:
  %%    _206
  _227 = succeeded:body _206
  br ^1

1:
  _207 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _207
}

%% mc_SUITE.erl:221
%% Counter = 222
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed_2/2-lc$^1/1-1-'`(_14) {
0:
  %% Aliased:
  %%    _14
  _207 = is_nonempty_list _14
  br _207, ^220, ^204

220:
  %% mc_SUITE.erl:221
  %% Aliased:
  %%    _14
  _103 = call (`erts_internal`:`mc_refill`/1), _14

  %% Aliased:
  %%    _103
  _205 = succeeded:body _103
  br _205, ^205, ^1

205:
  %% mc_SUITE.erl:221
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _103
  _199 = call (`'-mixed_2/2-lc$^1/1-1-'`/1), _103

  %% Unique:
  %%    _199
  _206 = succeeded:body _199
  br _206, ^206, ^1

206:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _199
  ret _199

204:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _214 = bif:is_tuple _14
  br _214, ^214, ^208

214:
  %% Argument types:
  %%    _14 => {...}
  %% Aliased:
  %%    _14
  _215 = bif:tuple_size _14

  %% Argument types:
  %%    _215 => 0..16777215
  %% Unique:
  %%    _215
  _216 = bif:'=:=' _215, `3`
  br _216, ^213, ^203

213:
  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _106 = get_tuple_element _14, `0`

  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _105 = get_tuple_element _14, `1`

  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _104 = get_tuple_element _14, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _105
  _211 = bif:'=:=' _105, `[]`
  br _211, ^211, ^209

211:
  %% mc_SUITE.erl:221
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _104
  _16 = call (`'-mixed_2/2-lc$^1/1-1-'`/1), _104

  %% Unique:
  %%    _16
  _210 = succeeded:body _16
  br _210, ^210, ^1

210:
  %% Argument types:
  %%    _16 => list(any())
  %% Aliased:
  %%    _106
  %% Unique:
  %%    _16
  _197 = put_list _106, _16
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _197
  ret _197

209:
  %% mc_SUITE.erl:221
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _104
  _198 = call (`'-mixed_2/2-lc$^1/1-1-'`/1), _104

  %% Unique:
  %%    _198
  _212 = succeeded:body _198
  br _212, ^212, ^1

212:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _198
  ret _198

208:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _218 = bif:'=:=' _14, `none`
  br _218, ^217, ^203

217:
  %% Result type:
  %%    nil()
  ret `[]`

203:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _100 = put_tuple `bad_generator`, _14

  %% Unique:
  %%    _100
  _200 = call (`erlang`:`error`/1), _100

  %% Aliased:
  %%    _200
  _219 = succeeded:body _200
  br ^1

1:
  _201 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _201
}

%% mc_SUITE.erl:220
%% Counter = 207
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed_2/2-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _202 = is_nonempty_list _4
  br _202, ^202, ^200

202:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _94 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _93 = get_tl _4

  %% mc_SUITE.erl:220
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _93
  _6 = call (`'-mixed_2/2-lc$^0/1-0-'`/1), _93

  %% Unique:
  %%    _6
  _201 = succeeded:body _6
  br _201, ^201, ^1

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _94
  _95 = put_tuple _94, `[]`

  %% Argument types:
  %%    _95 => {any(), nil()}
  %%    _6 => list({any(), nil()})
  %% Unique:
  %%    _6, 
  %%    _95
  _195 = put_list _95, _6
  %% Result type:
  %%    nonempty_list({any(), nil()})
  %% Unique:
  %%    _195
  ret _195

200:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _203 = bif:'=:=' _4, `[]`
  br _203, ^203, ^199

203:
  %% Result type:
  %%    nil()
  ret `[]`

199:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _92 = put_tuple `bad_generator`, _4

  %% mc_SUITE.erl:220
  %% Unique:
  %%    _92
  _196 = call (`erlang`:`error`/1), _92

  %% Aliased:
  %%    _196
  _204 = succeeded:body _196
  br ^1

1:
  _197 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _197
}

%% mc_SUITE.erl:215
%% Counter = 173
%% bs_ensure_opt: true
%% Parameters
%%    _17 =>
%%     list(any())
%%    _53 =>
%%     list(atom())
function `mc_SUITE`:`'-mixed_1/2-lc$^6/1-6-'`(_53, _17) {
0:
  %% Aliased:
  %%    _53
  _168 = is_nonempty_list _53
  br _168, ^168, ^169

168:
  %% Argument types:
  %%    _53 => nonempty_list(atom())
  %% Aliased:
  %%    _53
  _128 = get_hd _53

  %% Argument types:
  %%    _53 => nonempty_list(atom())
  %% Aliased:
  %%    _53
  _127 = get_tl _53

  %% mc_SUITE.erl:215
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _17, 
  %%    _127
  %% Unique:
  %%    _128
  _161 = call (`'-mixed_1/2-lc$^7/1-7-'`/4), _17, _17, _127, _128

  %% Unique:
  %%    _161
  _167 = succeeded:body _161
  br _167, ^167, ^1

167:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _161
  ret _161

1:
  _163 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _163

169:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:215
%% Counter = 172
%% bs_ensure_opt: true
%% Parameters
%%    _17 =>
%%     list(any())
%%    _55 =>
%%     list(any())
%%    _127 =>
%%     list(atom())
%%    _128 =>
%%     atom()
function `mc_SUITE`:`'-mixed_1/2-lc$^7/1-7-'`(_55, _17, _127, _128) {
0:
  %% Aliased:
  %%    _55
  _166 = is_nonempty_list _55
  br _166, ^166, ^168

166:
  %% Argument types:
  %%    _55 => nonempty_list(any())
  %% Aliased:
  %%    _55
  _133 = get_hd _55

  %% Argument types:
  %%    _55 => nonempty_list(any())
  %% Aliased:
  %%    _55
  _132 = get_tl _55

  %% mc_SUITE.erl:215
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _17, 
  %%    _127, 
  %%    _128, 
  %%    _132
  _57 = call (`'-mixed_1/2-lc$^7/1-7-'`/4), _132, _17, _127, _128

  %% Unique:
  %%    _57
  _165 = succeeded:body _57
  br _165, ^165, ^1

165:
  %% Argument types:
  %%    _128 => atom()
  %% Aliased:
  %%    _133
  %% Unique:
  %%    _128
  _134 = put_tuple _128, _133

  %% Argument types:
  %%    _134 => {atom(), any()}
  %%    _57 => list({atom(), any()})
  %% Unique:
  %%    _57, 
  %%    _134
  _159 = put_list _134, _57
  %% Result type:
  %%    nonempty_list({atom(), any()})
  %% Unique:
  %%    _159
  ret _159

168:
  %% mc_SUITE.erl:215
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _17, 
  %%    _127
  _158 = call (`'-mixed_1/2-lc$^6/1-6-'`/2), _127, _17

  %% Unique:
  %%    _158
  _167 = succeeded:body _158
  br _167, ^167, ^1

167:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _158
  ret _158

1:
  _161 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _161
}

%% mc_SUITE.erl:214
%% Counter = 176
%% bs_ensure_opt: true
%% Parameters
%%    _42 =>
%%     list(atom())
%%    IntegerMap =>
%%     #{any()=>nil()}
function `mc_SUITE`:`'-mixed_1/2-lc$^4/1-4-'`(_42, IntegerMap) {
0:
  %% Aliased:
  %%    _42
  _169 = is_nonempty_list _42
  br _169, ^169, ^170

169:
  %% Argument types:
  %%    _42 => nonempty_list(atom())
  %% Aliased:
  %%    _42
  _108 = get_hd _42

  %% Argument types:
  %%    _42 => nonempty_list(atom())
  %% Aliased:
  %%    _42
  _107 = get_tl _42

  %% mc_SUITE.erl:214
  %% Aliased:
  %%    IntegerMap
  _41 = call (`maps`:`iterator`/1), IntegerMap

  %% Aliased:
  %%    _41
  _162 = succeeded:body _41
  br _162, ^162, ^1

162:
  %% mc_SUITE.erl:214
  %% Aliased:
  %%    _41
  _121 = call (`erts_internal`:`mc_iterator`/1), _41

  %% Aliased:
  %%    _121
  _163 = succeeded:body _121
  br _163, ^163, ^1

163:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _167 = bif:'=:=' _121, `[]`
  br _167, ^167, ^174

167:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _123 = put_tuple `bad_generator`, _41

  %% mc_SUITE.erl:214
  %% Unique:
  %%    _123
  _155 = call (`erlang`:`error`/1), _123

  %% Aliased:
  %%    _155
  _166 = succeeded:body _155
  br ^1

174:
  %% mc_SUITE.erl:214
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _107, 
  %%    _121, 
  %%    IntegerMap
  %% Unique:
  %%    _108
  _156 = call (`'-mixed_1/2-lc$^5/1-5-'`/4), _121, _107, _108, IntegerMap

  %% Unique:
  %%    _156
  _168 = succeeded:body _156
  br _168, ^168, ^1

168:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _156
  ret _156

1:
  _158 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _158

170:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:214
%% Counter = 177
%% bs_ensure_opt: true
%% Parameters
%%    _107 =>
%%     list(atom())
%%    _108 =>
%%     atom()
%%    IntegerMap =>
%%     #{any()=>nil()}
function `mc_SUITE`:`'-mixed_1/2-lc$^5/1-5-'`(_44, _107, _108, IntegerMap) {
0:
  %% Aliased:
  %%    _44
  _161 = is_nonempty_list _44
  br _161, ^175, ^158

175:
  %% mc_SUITE.erl:214
  %% Aliased:
  %%    _44
  _116 = call (`erts_internal`:`mc_refill`/1), _44

  %% Aliased:
  %%    _116
  _159 = succeeded:body _116
  br _159, ^159, ^1

159:
  %% mc_SUITE.erl:214
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _107, 
  %%    _108, 
  %%    _116, 
  %%    IntegerMap
  _153 = call (`'-mixed_1/2-lc$^5/1-5-'`/4), _116, _107, _108, IntegerMap

  %% Unique:
  %%    _153
  _160 = succeeded:body _153
  br _160, ^160, ^1

160:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _153
  ret _153

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _168 = bif:is_tuple _44
  br _168, ^168, ^162

168:
  %% Argument types:
  %%    _44 => {...}
  %% Aliased:
  %%    _44
  _169 = bif:tuple_size _44

  %% Argument types:
  %%    _169 => 0..16777215
  %% Unique:
  %%    _169
  _170 = bif:'=:=' _169, `3`
  br _170, ^167, ^157

167:
  %% Argument types:
  %%    _44 => {any(), any(), any()}
  %% Aliased:
  %%    _44
  _119 = get_tuple_element _44, `0`

  %% Argument types:
  %%    _44 => {any(), any(), any()}
  %% Aliased:
  %%    _44
  _118 = get_tuple_element _44, `1`

  %% Argument types:
  %%    _44 => {any(), any(), any()}
  %% Aliased:
  %%    _44
  _117 = get_tuple_element _44, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _165 = bif:'=:=' _118, `[]`
  br _165, ^165, ^163

165:
  %% mc_SUITE.erl:214
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _107, 
  %%    _108, 
  %%    _117, 
  %%    IntegerMap
  _46 = call (`'-mixed_1/2-lc$^5/1-5-'`/4), _117, _107, _108, IntegerMap

  %% Unique:
  %%    _46
  _164 = succeeded:body _46
  br _164, ^164, ^1

164:
  %% Argument types:
  %%    _108 => atom()
  %% Aliased:
  %%    _119
  %% Unique:
  %%    _108
  _120 = put_tuple _108, _119

  %% Argument types:
  %%    _120 => {atom(), any()}
  %%    _46 => list({atom(), any()})
  %% Unique:
  %%    _46, 
  %%    _120
  _151 = put_list _120, _46
  %% Result type:
  %%    nonempty_list({atom(), any()})
  %% Unique:
  %%    _151
  ret _151

163:
  %% mc_SUITE.erl:214
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _107, 
  %%    _108, 
  %%    _117, 
  %%    IntegerMap
  _152 = call (`'-mixed_1/2-lc$^5/1-5-'`/4), _117, _107, _108, IntegerMap

  %% Unique:
  %%    _152
  _166 = succeeded:body _152
  br _166, ^166, ^1

166:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _152
  ret _152

162:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _173 = bif:'=:=' _44, `none`
  br _173, ^172, ^157

172:
  %% mc_SUITE.erl:214
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _107, 
  %%    IntegerMap
  _150 = call (`'-mixed_1/2-lc$^4/1-4-'`/2), _107, IntegerMap

  %% Unique:
  %%    _150
  _171 = succeeded:body _150
  br _171, ^171, ^1

171:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _150
  ret _150

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _113 = put_tuple `bad_generator`, _44

  %% Unique:
  %%    _113
  _154 = call (`erlang`:`error`/1), _113

  %% Aliased:
  %%    _154
  _174 = succeeded:body _154
  br ^1

1:
  _155 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _155
}

%% mc_SUITE.erl:213
%% Counter = 167
%% bs_ensure_opt: true
%% Parameters
%%    _27 =>
%%     list(atom())
%%    IntegerMap =>
%%     #{any()=>nil()}
function `mc_SUITE`:`'-mixed_1/2-lc$^2/1-2-'`(_27, IntegerMap) {
0:
  %% Aliased:
  %%    _27
  _160 = is_nonempty_list _27
  br _160, ^160, ^161

160:
  %% Argument types:
  %%    _27 => nonempty_list(atom())
  %% Aliased:
  %%    _27
  _88 = get_hd _27

  %% Argument types:
  %%    _27 => nonempty_list(atom())
  %% Aliased:
  %%    _27
  _87 = get_tl _27

  %% mc_SUITE.erl:213
  %% Aliased:
  %%    IntegerMap
  _101 = call (`erts_internal`:`mc_iterator`/1), IntegerMap

  %% Aliased:
  %%    _101
  _154 = succeeded:body _101
  br _154, ^154, ^1

154:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _158 = bif:'=:=' _101, `[]`
  br _158, ^158, ^165

158:
  %% Argument types:
  %%    IntegerMap => #{any()=>nil()}
  %% Aliased:
  %%    IntegerMap
  _103 = put_tuple `bad_generator`, IntegerMap

  %% mc_SUITE.erl:213
  %% Unique:
  %%    _103
  _147 = call (`erlang`:`error`/1), _103

  %% Aliased:
  %%    _147
  _157 = succeeded:body _147
  br ^1

165:
  %% mc_SUITE.erl:213
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _87, 
  %%    _101, 
  %%    IntegerMap
  %% Unique:
  %%    _88
  _148 = call (`'-mixed_1/2-lc$^3/1-3-'`/4), _101, _87, _88, IntegerMap

  %% Unique:
  %%    _148
  _159 = succeeded:body _148
  br _159, ^159, ^1

159:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _148
  ret _148

1:
  _150 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _150

161:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:213
%% Counter = 169
%% bs_ensure_opt: true
%% Parameters
%%    _87 =>
%%     list(atom())
%%    _88 =>
%%     atom()
%%    IntegerMap =>
%%     #{any()=>nil()}
function `mc_SUITE`:`'-mixed_1/2-lc$^3/1-3-'`(_29, _87, _88, IntegerMap) {
0:
  %% Aliased:
  %%    _29
  _153 = is_nonempty_list _29
  br _153, ^167, ^150

167:
  %% mc_SUITE.erl:213
  %% Aliased:
  %%    _29
  _96 = call (`erts_internal`:`mc_refill`/1), _29

  %% Aliased:
  %%    _96
  _151 = succeeded:body _96
  br _151, ^151, ^1

151:
  %% mc_SUITE.erl:213
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _87, 
  %%    _88, 
  %%    _96, 
  %%    IntegerMap
  _145 = call (`'-mixed_1/2-lc$^3/1-3-'`/4), _96, _87, _88, IntegerMap

  %% Unique:
  %%    _145
  _152 = succeeded:body _145
  br _152, ^152, ^1

152:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _145
  ret _145

150:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _160 = bif:is_tuple _29
  br _160, ^160, ^154

160:
  %% Argument types:
  %%    _29 => {...}
  %% Aliased:
  %%    _29
  _161 = bif:tuple_size _29

  %% Argument types:
  %%    _161 => 0..16777215
  %% Unique:
  %%    _161
  _162 = bif:'=:=' _161, `3`
  br _162, ^159, ^149

159:
  %% Argument types:
  %%    _29 => {any(), any(), any()}
  %% Aliased:
  %%    _29
  _99 = get_tuple_element _29, `0`

  %% Argument types:
  %%    _29 => {any(), any(), any()}
  %% Aliased:
  %%    _29
  _98 = get_tuple_element _29, `1`

  %% Argument types:
  %%    _29 => {any(), any(), any()}
  %% Aliased:
  %%    _29
  _97 = get_tuple_element _29, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _157 = bif:'=:=' _98, `[]`
  br _157, ^157, ^155

157:
  %% mc_SUITE.erl:213
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _87, 
  %%    _88, 
  %%    _97, 
  %%    IntegerMap
  _31 = call (`'-mixed_1/2-lc$^3/1-3-'`/4), _97, _87, _88, IntegerMap

  %% Unique:
  %%    _31
  _156 = succeeded:body _31
  br _156, ^156, ^1

156:
  %% Argument types:
  %%    _88 => atom()
  %% Aliased:
  %%    _99
  %% Unique:
  %%    _88
  _100 = put_tuple _88, _99

  %% Argument types:
  %%    _100 => {atom(), any()}
  %%    _31 => list({atom(), any()})
  %% Unique:
  %%    _31, 
  %%    _100
  _143 = put_list _100, _31
  %% Result type:
  %%    nonempty_list({atom(), any()})
  %% Unique:
  %%    _143
  ret _143

155:
  %% mc_SUITE.erl:213
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _87, 
  %%    _88, 
  %%    _97, 
  %%    IntegerMap
  _144 = call (`'-mixed_1/2-lc$^3/1-3-'`/4), _97, _87, _88, IntegerMap

  %% Unique:
  %%    _144
  _158 = succeeded:body _144
  br _158, ^158, ^1

158:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _144
  ret _144

154:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _165 = bif:'=:=' _29, `none`
  br _165, ^164, ^149

164:
  %% mc_SUITE.erl:213
  %% Result type:
  %%    list({atom(), any()})
  %% Aliased:
  %%    _87, 
  %%    IntegerMap
  _142 = call (`'-mixed_1/2-lc$^2/1-2-'`/2), _87, IntegerMap

  %% Unique:
  %%    _142
  _163 = succeeded:body _142
  br _163, ^163, ^1

163:
  %% Result type:
  %%    list({atom(), any()})
  %% Unique:
  %%    _142
  ret _142

149:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _93 = put_tuple `bad_generator`, _29

  %% Unique:
  %%    _93
  _146 = call (`erlang`:`error`/1), _93

  %% Aliased:
  %%    _146
  _166 = succeeded:body _146
  br ^1

1:
  _147 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _147
}

%% mc_SUITE.erl:211
%% Counter = 162
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed_1/2-lc$^1/1-1-'`(_14) {
0:
  %% Aliased:
  %%    _14
  _147 = is_nonempty_list _14
  br _147, ^160, ^144

160:
  %% mc_SUITE.erl:211
  %% Aliased:
  %%    _14
  _77 = call (`erts_internal`:`mc_refill`/1), _14

  %% Aliased:
  %%    _77
  _145 = succeeded:body _77
  br _145, ^145, ^1

145:
  %% mc_SUITE.erl:211
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _77
  _139 = call (`'-mixed_1/2-lc$^1/1-1-'`/1), _77

  %% Unique:
  %%    _139
  _146 = succeeded:body _139
  br _146, ^146, ^1

146:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _139
  ret _139

144:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _154 = bif:is_tuple _14
  br _154, ^154, ^148

154:
  %% Argument types:
  %%    _14 => {...}
  %% Aliased:
  %%    _14
  _155 = bif:tuple_size _14

  %% Argument types:
  %%    _155 => 0..16777215
  %% Unique:
  %%    _155
  _156 = bif:'=:=' _155, `3`
  br _156, ^153, ^143

153:
  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _80 = get_tuple_element _14, `0`

  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _79 = get_tuple_element _14, `1`

  %% Argument types:
  %%    _14 => {any(), any(), any()}
  %% Aliased:
  %%    _14
  _78 = get_tuple_element _14, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _151 = bif:'=:=' _79, `[]`
  br _151, ^151, ^149

151:
  %% mc_SUITE.erl:211
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _78
  _16 = call (`'-mixed_1/2-lc$^1/1-1-'`/1), _78

  %% Unique:
  %%    _16
  _150 = succeeded:body _16
  br _150, ^150, ^1

150:
  %% Argument types:
  %%    _16 => list(any())
  %% Aliased:
  %%    _80
  %% Unique:
  %%    _16
  _137 = put_list _80, _16
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _137
  ret _137

149:
  %% mc_SUITE.erl:211
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _78
  _138 = call (`'-mixed_1/2-lc$^1/1-1-'`/1), _78

  %% Unique:
  %%    _138
  _152 = succeeded:body _138
  br _152, ^152, ^1

152:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _138
  ret _138

148:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _158 = bif:'=:=' _14, `none`
  br _158, ^157, ^143

157:
  %% Result type:
  %%    nil()
  ret `[]`

143:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _74 = put_tuple `bad_generator`, _14

  %% Unique:
  %%    _74
  _140 = call (`erlang`:`error`/1), _74

  %% Aliased:
  %%    _140
  _159 = succeeded:body _140
  br ^1

1:
  _141 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _141
}

%% mc_SUITE.erl:210
%% Counter = 147
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed_1/2-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _142 = is_nonempty_list _4
  br _142, ^142, ^140

142:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _68 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _67 = get_tl _4

  %% mc_SUITE.erl:210
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _67
  _6 = call (`'-mixed_1/2-lc$^0/1-0-'`/1), _67

  %% Unique:
  %%    _6
  _141 = succeeded:body _6
  br _141, ^141, ^1

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _69 = put_tuple _68, `[]`

  %% Argument types:
  %%    _69 => {any(), nil()}
  %%    _6 => list({any(), nil()})
  %% Unique:
  %%    _6, 
  %%    _69
  _135 = put_list _69, _6
  %% Result type:
  %%    nonempty_list({any(), nil()})
  %% Unique:
  %%    _135
  ret _135

140:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _143 = bif:'=:=' _4, `[]`
  br _143, ^143, ^139

143:
  %% Result type:
  %%    nil()
  ret `[]`

139:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _66 = put_tuple `bad_generator`, _4

  %% mc_SUITE.erl:210
  %% Unique:
  %%    _66
  _136 = call (`erlang`:`error`/1), _66

  %% Aliased:
  %%    _136
  _144 = succeeded:body _136
  br ^1

1:
  _137 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _137
}

%% mc_SUITE.erl:197
%% Counter = 92
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mixed/1-lc$^2/1-2-'`(_24) {
0:
  %% Aliased:
  %%    _24
  _87 = is_nonempty_list _24
  br _87, ^87, ^84

87:
  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _71 = get_hd _24

  %% Argument types:
  %%    _24 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _24
  _70 = get_tl _24

  %% Argument types:
  %%    
  %% Aliased:
  %%    _71
  _72 = put_list _71, `[]`

  %% mc_SUITE.erl:197
  %% Unique:
  %%    _72
  _26 = call (`erlang`:`list_to_atom`/1), _72

  %% Aliased:
  %%    _26
  _85 = succeeded:body _26
  br _85, ^85, ^1

85:
  %% mc_SUITE.erl:197
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _70
  _27 = call (`'-mixed/1-lc$^2/1-2-'`/1), _70

  %% Unique:
  %%    _27
  _86 = succeeded:body _27
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _26 => atom()
  %%    _27 => list(atom())
  %% Unique:
  %%    _26, 
  %%    _27
  _79 = put_list _26, _27
  %% Result type:
  %%    nonempty_list(atom())
  %% Unique:
  %%    _79
  ret _79

84:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _88 = bif:'=:=' _24, `[]`
  br _88, ^88, ^83

88:
  %% Result type:
  %%    nil()
  ret `[]`

83:
  %% Argument types:
  %%    _24 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _24
  _69 = put_tuple `bad_generator`, _24

  %% mc_SUITE.erl:197
  %% Unique:
  %%    _69
  _80 = call (`erlang`:`error`/1), _69

  %% Aliased:
  %%    _80
  _89 = succeeded:body _80
  br ^1

1:
  _81 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _81
}

%% mc_SUITE.erl:195
%% Counter = 103
%% bs_ensure_opt: true
%% Parameters
%%    _16 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `mc_SUITE`:`'-mixed/1-lc$^1/1-1-'`(_16) {
0:
  %% Argument types:
  %%    _16 => bs_matchable(8)
  %% Aliased:
  %%    _16
  %% Anno: #{accepts_match_contexts => true}
  _57 = bs_start_match `new`, _16
  _101 = bs_ensure _57, `32`, `1`
  _102 = succeeded:guard _101
  br _102, ^100, ^87

100:
  %% mc_SUITE.erl:195
  %% Argument types:
  %%    _101 => bs_context(8)
  %% Aliased:
  %%    _57
  %% Anno: #{ensured => true}
  _58 = bs_match `integer`, _101, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _58
  _83 = succeeded:guard _58
  br _83, ^83, ^87

83:
  %% Aliased:
  %%    _58
  _59 = bs_extract _58

  %% mc_SUITE.erl:195
  %% Argument types:
  %%    _58 => bs_context(8)
  %% Aliased:
  %%    _58
  %% Anno: #{ensured => true}
  _60 = bs_match `integer`, _58, `[unsigned,big]`, `24`, `1`

  %% Aliased:
  %%    _60
  _84 = succeeded:guard _60
  br _84, ^84, ^87

84:
  %% Aliased:
  %%    _60
  _61 = bs_extract _60

  %% mc_SUITE.erl:195
  %% Result type:
  %%    list({0..255, 0..16777215})
  %% Aliased:
  %%    _60
  %% Anno: #{bsm_info => context_reused}
  _18 = call (`'-mixed/1-lc$^1/1-1-'`/1), _60

  %% Unique:
  %%    _18
  _86 = succeeded:body _18
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _59 => 0..255
  %%    _61 => 0..16777215
  %% Unique:
  %%    _59, 
  %%    _61
  _64 = put_tuple _59, _61

  %% Argument types:
  %%    _64 => {0..255, 0..16777215}
  %%    _18 => list({0..255, 0..16777215})
  %% Unique:
  %%    _18, 
  %%    _64
  _77 = put_list _64, _18
  %% Result type:
  %%    nonempty_list({0..255, 0..16777215})
  %% Unique:
  %%    _77
  ret _77

1:
  _95 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _95

87:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:194
%% Counter = 96
%% bs_ensure_opt: true
%% Parameters
%%    _8 =>
%%     bitstring(32,appendable)
function `mc_SUITE`:`'-mixed/1-lbc$^0/2-0-'`(_9, _8) {
0:
  %% Aliased:
  %%    _9
  _84 = is_nonempty_list _9
  br _84, ^81, ^80

81:
  %% mc_SUITE.erl:194
  %% Aliased:
  %%    _9
  _46 = call (`erts_internal`:`mc_refill`/1), _9

  %% Aliased:
  %%    _46
  _82 = succeeded:body _46
  br _82, ^82, ^1

82:
  %% mc_SUITE.erl:194
  %% Result type:
  %%    bitstring(32,appendable)
  %% Aliased:
  %%    _46
  %% Unique:
  %%    _8
  _75 = call (`'-mixed/1-lbc$^0/2-0-'`/2), _46, _8

  %% Unique:
  %%    _75
  _83 = succeeded:body _75
  br _83, ^83, ^1

83:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _75
  ret _75

80:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _89 = bif:is_tuple _9
  br _89, ^89, ^85

89:
  %% Argument types:
  %%    _9 => {...}
  %% Aliased:
  %%    _9
  _90 = bif:tuple_size _9

  %% Argument types:
  %%    _90 => 0..16777215
  %% Unique:
  %%    _90
  _91 = bif:'=:=' _90, `3`
  br _91, ^88, ^79

88:
  %% Argument types:
  %%    _9 => {any(), any(), any()}
  %% Aliased:
  %%    _9
  _49 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _9 => {any(), any(), any()}
  %% Aliased:
  %%    _9
  _48 = get_tuple_element _9, `1`

  %% mc_SUITE.erl:194
  %% Result type:
  %%    bitstring(32,appendable)
  %% Argument types:
  %%    _8 => bitstring(32,appendable)
  %% Aliased:
  %%    _48, 
  %%    _49
  %% Unique:
  %%    _8
  %% Anno: #{unit => 32}
  _34 = bs_create_bin `private_append`, `[1,{segment,1}]`, _8, `all`, `integer`, `[1,{segment,2}]`, _49, `8`, `integer`, `[1,{segment,3}]`, _48, `24`

  %% Unique:
  %%    _34
  _86 = succeeded:body _34
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _9 => {any(), any(), any()}
  %% Aliased:
  %%    _9
  _47 = get_tuple_element _9, `2`

  %% mc_SUITE.erl:194
  %% Result type:
  %%    bitstring(32,appendable)
  %% Aliased:
  %%    _47
  %% Unique:
  %%    _34
  _74 = call (`'-mixed/1-lbc$^0/2-0-'`/2), _47, _34

  %% Unique:
  %%    _74
  _87 = succeeded:body _74
  br _87, ^87, ^1

87:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _74
  ret _74

85:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _93 = bif:'=:=' _9, `none`
  br _93, ^92, ^79

92:
  %% Result type:
  %%    bitstring(32,appendable)
  %% Unique:
  %%    _8
  ret _8

79:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _43 = put_tuple `bad_generator`, _9

  %% Unique:
  %%    _43
  _76 = call (`erlang`:`error`/1), _43

  %% Aliased:
  %%    _76
  _94 = succeeded:body _76
  br ^1

1:
  _77 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _77
}

%% mc_SUITE.erl:188
%% Counter = 66
%% bs_ensure_opt: true
%% Parameters
%%    _11 =>
%%     list('a' | 'b')
function `mc_SUITE`:`'-duplicate_keys/1-lc$^1/1-1-'`(_11) {
0:
  %% Unique:
  %%    _11
  _61 = is_nonempty_list _11
  br _61, ^61, ^62

61:
  %% Argument types:
  %%    _11 => nonempty_list('a' | 'b')
  %% Unique:
  %%    _11
  _31 = get_hd _11

  %% Argument types:
  %%    _11 => nonempty_list('a' | 'b')
  %% Unique:
  %%    _11
  _30 = get_tl _11

  %% mc_SUITE.erl:189
  %% Result type:
  %%    list({'a' | 'b', 0..255})
  %% Unique:
  %%    _30, 
  %%    _31
  _54 = call (`'-duplicate_keys/1-lc$^2/1-2-'`/3), `<<1,2,3,4>>`, _30, _31

  %% Unique:
  %%    _54
  _60 = succeeded:body _54
  br _60, ^60, ^1

60:
  %% Result type:
  %%    list({'a' | 'b', 0..255})
  %% Unique:
  %%    _54
  ret _54

1:
  _56 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _56

62:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:189
%% Counter = 79
%% bs_ensure_opt: true
%% Parameters
%%    _13 =>
%%     bs_matchable(8)
%%     accepts_match_context
%%    _30 =>
%%     list('a' | 'b')
%%    _31 =>
%%     'a' | 'b'
function `mc_SUITE`:`'-duplicate_keys/1-lc$^2/1-2-'`(_13, _30, _31) {
0:
  %% Argument types:
  %%    _13 => bs_matchable(8)
  %% Aliased:
  %%    _13
  %% Anno: #{accepts_match_contexts => true}
  _37 = bs_start_match `new`, _13
  _77 = bs_ensure _37, `8`, `1`
  _78 = succeeded:guard _77
  br _78, ^76, ^73

76:
  %% mc_SUITE.erl:188
  %% Argument types:
  %%    _77 => bs_context(8)
  %% Aliased:
  %%    _37
  %% Anno: #{ensured => true}
  _38 = bs_match `integer`, _77, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _38
  _58 = succeeded:guard _38
  br _58, ^58, ^73

58:
  %% Aliased:
  %%    _38
  _39 = bs_extract _38

  %% mc_SUITE.erl:189
  %% Result type:
  %%    list({'a' | 'b', 0..255})
  %% Aliased:
  %%    _31, 
  %%    _38
  %% Unique:
  %%    _30
  %% Anno: #{bsm_info => context_reused}
  _15 = call (`'-duplicate_keys/1-lc$^2/1-2-'`/3), _38, _30, _31

  %% Unique:
  %%    _15
  _60 = succeeded:body _15
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    _31 => 'a' | 'b'
  %%    _39 => 0..255
  %% Unique:
  %%    _31, 
  %%    _39
  _42 = put_tuple _31, _39

  %% Argument types:
  %%    _42 => {'a' | 'b', 0..255}
  %%    _15 => list({'a' | 'b', 0..255})
  %% Unique:
  %%    _15, 
  %%    _42
  _52 = put_list _42, _15
  %% Result type:
  %%    nonempty_list({'a' | 'b', 0..255})
  %% Unique:
  %%    _52
  ret _52

73:
  %% mc_SUITE.erl:188
  %% Result type:
  %%    list({'a' | 'b', 0..255})
  %% Unique:
  %%    _30
  _51 = call (`'-duplicate_keys/1-lc$^1/1-1-'`/1), _30

  %% Unique:
  %%    _51
  _62 = succeeded:body _51
  br _62, ^62, ^1

62:
  %% Result type:
  %%    list({'a' | 'b', 0..255})
  %% Unique:
  %%    _51
  ret _51

1:
  _70 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _70
}

%% mc_SUITE.erl:185
%% Counter = 67
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     list({'a', 'x'} | {'b', 'x'})
function `mc_SUITE`:`'-duplicate_keys/1-lc$^0/1-0-'`(_3) {
0:
  %% Unique:
  %%    _3
  _62 = is_nonempty_list _3
  br _62, ^62, ^63

62:
  %% Argument types:
  %%    _3 => nonempty_list({'a', 'x'} | {'b', 'x'})
  %% Unique:
  %%    _3
  _21 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_list({'a', 'x'} | {'b', 'x'})
  %% Unique:
  %%    _3
  _20 = get_tl _3

  %% mc_SUITE.erl:185
  %% Result type:
  %%    list({'x', 'a' | 'b'})
  %% Unique:
  %%    _20
  _5 = call (`'-duplicate_keys/1-lc$^0/1-0-'`/1), _20

  %% Unique:
  %%    _5
  _56 = succeeded:body _5
  br _56, ^56, ^1

56:
  %% Argument types:
  %%    _21 => {'a', 'x'} | {'b', 'x'}
  %% Unique:
  %%    _21
  _23 = get_tuple_element _21, `0`

  %% Argument types:
  %%    _23 => 'a' | 'b'
  %% Unique:
  %%    _23
  _24 = put_tuple `x`, _23

  %% Argument types:
  %%    _24 => {'x', 'a' | 'b'}
  %%    _5 => list({'x', 'a' | 'b'})
  %% Unique:
  %%    _5, 
  %%    _24
  _48 = put_list _24, _5
  %% Result type:
  %%    nonempty_list({'x', 'a' | 'b'})
  %% Unique:
  %%    _48
  ret _48

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51

63:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:170
%% Counter = 58
%% bs_ensure_opt: true
%% Parameters
%%    _20 =>
%%     list({any(), any()})
function `mc_SUITE`:`'-test_iterator/2-lc$^0/1-0-'`(_9, _20) {
0:
  %% Aliased:
  %%    _9
  _45 = is_nonempty_list _9
  br _45, ^55, ^42

55:
  %% mc_SUITE.erl:170
  %% Aliased:
  %%    _9
  _27 = call (`erts_internal`:`mc_refill`/1), _9

  %% Aliased:
  %%    _27
  _43 = succeeded:body _27
  br _43, ^43, ^1

43:
  %% mc_SUITE.erl:170
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _27
  %% Unique:
  %%    _20
  _37 = call (`'-test_iterator/2-lc$^0/1-0-'`/2), _27, _20

  %% Unique:
  %%    _37
  _44 = succeeded:body _37
  br _44, ^44, ^1

44:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _37
  ret _37

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _49 = bif:is_tuple _9
  br _49, ^49, ^46

49:
  %% Argument types:
  %%    _9 => {...}
  %% Aliased:
  %%    _9
  _50 = bif:tuple_size _9

  %% Argument types:
  %%    _50 => 0..16777215
  %% Unique:
  %%    _50
  _51 = bif:'=:=' _50, `3`
  br _51, ^56, ^41

56:
  %% Argument types:
  %%    _9 => {any(), any(), any()}
  %% Aliased:
  %%    _9
  _28 = get_tuple_element _9, `2`

  %% mc_SUITE.erl:170
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _28
  %% Unique:
  %%    _20
  _11 = call (`'-test_iterator/2-lc$^0/1-0-'`/2), _28, _20

  %% Unique:
  %%    _11
  _47 = succeeded:body _11
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    _9 => {any(), any(), any()}
  %% Aliased:
  %%    _9
  _30 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _9 => {any(), any(), any()}
  %% Aliased:
  %%    _9
  _29 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _29, 
  %%    _30
  _31 = put_tuple _30, _29

  %% Argument types:
  %%    _31 => {any(), any()}
  %%    _11 => list({any(), any()})
  %% Unique:
  %%    _11, 
  %%    _31
  _36 = put_list _31, _11
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _36
  ret _36

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _53 = bif:'=:=' _9, `none`
  br _53, ^52, ^41

52:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _20
  ret _20

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _24 = put_tuple `bad_generator`, _9

  %% Unique:
  %%    _24
  _38 = call (`erlang`:`error`/1), _24

  %% Aliased:
  %%    _38
  _54 = succeeded:body _38
  br ^1

1:
  _39 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _39
}

%% mc_SUITE.erl:155
%% Counter = 231
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mc_double/1-lc$^5/1-5-'`(_59) {
0:
  %% Aliased:
  %%    _59
  _204 = is_nonempty_list _59
  br _204, ^229, ^201

229:
  %% mc_SUITE.erl:155
  %% Aliased:
  %%    _59
  _158 = call (`erts_internal`:`mc_refill`/1), _59

  %% Aliased:
  %%    _158
  _202 = succeeded:body _158
  br _202, ^202, ^1

202:
  %% mc_SUITE.erl:155
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _158
  _196 = call (`'-mc_double/1-lc$^5/1-5-'`/1), _158

  %% Unique:
  %%    _196
  _203 = succeeded:body _196
  br _203, ^203, ^1

203:
  %% Result type:
  %%    list({any(), nil()})
  %% Unique:
  %%    _196
  ret _196

201:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _223 = bif:is_tuple _59
  br _223, ^223, ^205

223:
  %% Argument types:
  %%    _59 => {...}
  %% Aliased:
  %%    _59
  _224 = bif:tuple_size _59

  %% Argument types:
  %%    _224 => 0..16777215
  %% Unique:
  %%    _224
  _225 = bif:'=:=' _224, `3`
  br _225, ^222, ^200

222:
  %% Argument types:
  %%    _59 => {any(), any(), any()}
  %% Aliased:
  %%    _59
  _161 = get_tuple_element _59, `0`

  %% Argument types:
  %%    _59 => {any(), any(), any()}
  %% Aliased:
  %%    _59
  _159 = get_tuple_element _59, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _161
  _218 = is_tagged_tuple _161, `2`, `key`
  br _218, ^215, ^206

215:
  %% Argument types:
  %%    _161 => {'key', any()}
  %% Aliased:
  %%    _161
  _162 = get_tuple_element _161, `1`

  %% Argument types:
  %%    _59 => {any(), any(), any()}
  %% Aliased:
  %%    _59
  _160 = get_tuple_element _59, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _160, 
  %%    _162
  _207 = bif:'=:=' _160, _162
  br _207, ^207, ^206

207:
  %% mc_SUITE.erl:156
  %% Aliased:
  %%    _162
  _57 = call (`id`/1), _162

  %% Aliased:
  %%    _57
  _208 = succeeded:body _57
  br _208, ^208, ^1

208:
  %% mc_SUITE.erl:156
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _58 = bif:'rem' _57, `2`

  %% Unique:
  %%    _58
  _209 = succeeded:body _58
  br _209, ^209, ^1

209:
  %% mc_SUITE.erl:156
  %% Argument types:
  %%    _58 => -1..1
  %% Unique:
  %%    _58
  _164 = bif:'=:=' _58, `0`
  br _164, ^214, ^213

214:
  %% mc_SUITE.erl:155
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _159
  _194 = call (`'-mc_double/1-lc$^5/1-5-'`/1), _159

  %% Unique:
  %%    _194
  _211 = succeeded:body _194
  br _211, ^211, ^1

211:
  %% Result type:
  %%    list({any(), nil()})
  %% Unique:
  %%    _194
  ret _194

213:
  %% mc_SUITE.erl:155
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _159
  _61 = call (`'-mc_double/1-lc$^5/1-5-'`/1), _159

  %% Unique:
  %%    _61
  _212 = succeeded:body _61
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _162
  _165 = put_tuple _162, `[]`

  %% Argument types:
  %%    _165 => {any(), nil()}
  %%    _61 => list({any(), nil()})
  %% Unique:
  %%    _61, 
  %%    _165
  _193 = put_list _165, _61
  %% Result type:
  %%    nonempty_list({any(), nil()})
  %% Unique:
  %%    _193
  ret _193

206:
  %% mc_SUITE.erl:155
  %% Result type:
  %%    list({any(), nil()})
  %% Aliased:
  %%    _159
  _195 = call (`'-mc_double/1-lc$^5/1-5-'`/1), _159

  %% Unique:
  %%    _195
  _221 = succeeded:body _195
  br _221, ^221, ^1

221:
  %% Result type:
  %%    list({any(), nil()})
  %% Unique:
  %%    _195
  ret _195

205:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _227 = bif:'=:=' _59, `none`
  br _227, ^226, ^200

226:
  %% Result type:
  %%    nil()
  ret `[]`

200:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _155 = put_tuple `bad_generator`, _59

  %% Unique:
  %%    _155
  _197 = call (`erlang`:`error`/1), _155

  %% Aliased:
  %%    _197
  _228 = succeeded:body _197
  br ^1

1:
  _198 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _198
}

%% mc_SUITE.erl:153
%% Counter = 231
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mc_double/1-lc$^4/1-4-'`(_47) {
0:
  %% Aliased:
  %%    _47
  _198 = is_nonempty_list _47
  br _198, ^229, ^195

229:
  %% mc_SUITE.erl:153
  %% Aliased:
  %%    _47
  _137 = call (`erts_internal`:`mc_refill`/1), _47

  %% Aliased:
  %%    _137
  _196 = succeeded:body _137
  br _196, ^196, ^1

196:
  %% mc_SUITE.erl:153
  %% Result type:
  %%    list({integer(), nil()})
  %% Aliased:
  %%    _137
  _190 = call (`'-mc_double/1-lc$^4/1-4-'`/1), _137

  %% Unique:
  %%    _190
  _197 = succeeded:body _190
  br _197, ^197, ^1

197:
  %% Result type:
  %%    list({integer(), nil()})
  %% Unique:
  %%    _190
  ret _190

195:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _215 = bif:is_tuple _47
  br _215, ^215, ^199

215:
  %% Argument types:
  %%    _47 => {...}
  %% Aliased:
  %%    _47
  _216 = bif:tuple_size _47

  %% Argument types:
  %%    _216 => 0..16777215
  %% Unique:
  %%    _216
  _217 = bif:'=:=' _216, `3`
  br _217, ^214, ^194

214:
  %% Argument types:
  %%    _47 => {any(), any(), any()}
  %% Aliased:
  %%    _47
  _140 = get_tuple_element _47, `0`

  %% Argument types:
  %%    _47 => {any(), any(), any()}
  %% Aliased:
  %%    _47
  _138 = get_tuple_element _47, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _140
  _210 = is_tagged_tuple _140, `2`, `key`
  br _210, ^207, ^200

207:
  %% Argument types:
  %%    _140 => {'key', any()}
  %% Aliased:
  %%    _140
  _141 = get_tuple_element _140, `1`

  %% Argument types:
  %%    _47 => {any(), any(), any()}
  %% Aliased:
  %%    _47
  _139 = get_tuple_element _47, `1`

  %% mc_SUITE.erl:153
  %% Argument types:
  %%    
  %% Aliased:
  %%    _139, 
  %%    _141
  _79 = bif:'=:=' _139, _141
  br _79, ^227, ^200

227:
  %% mc_SUITE.erl:154
  %% Argument types:
  %%    
  %% Aliased:
  %%    _141
  _46 = bif:'rem' _141, `2`

  %% Unique:
  %%    _46
  _203 = succeeded:guard _46
  br _203, ^222, ^200

222:
  %% mc_SUITE.erl:154
  %% Argument types:
  %%    _46 => -1..1
  %% Unique:
  %%    _46
  _187 = bif:'=:=' _46, `0`
  br _187, ^200, ^205

205:
  %% mc_SUITE.erl:153
  %% Result type:
  %%    list({integer(), nil()})
  %% Aliased:
  %%    _138
  _49 = call (`'-mc_double/1-lc$^4/1-4-'`/1), _138

  %% Unique:
  %%    _49
  _206 = succeeded:body _49
  br _206, ^206, ^1

206:
  %% Argument types:
  %%    _141 => integer()
  %% Unique:
  %%    _141
  _147 = put_tuple _141, `[]`

  %% Argument types:
  %%    _147 => {integer(), nil()}
  %%    _49 => list({integer(), nil()})
  %% Unique:
  %%    _49, 
  %%    _147
  _188 = put_list _147, _49
  %% Result type:
  %%    nonempty_list({integer(), nil()})
  %% Unique:
  %%    _188
  ret _188

200:
  %% mc_SUITE.erl:153
  %% Result type:
  %%    list({integer(), nil()})
  %% Aliased:
  %%    _138
  _189 = call (`'-mc_double/1-lc$^4/1-4-'`/1), _138

  %% Unique:
  %%    _189
  _213 = succeeded:body _189
  br _213, ^213, ^1

213:
  %% Result type:
  %%    list({integer(), nil()})
  %% Unique:
  %%    _189
  ret _189

199:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _219 = bif:'=:=' _47, `none`
  br _219, ^218, ^194

218:
  %% Result type:
  %%    nil()
  ret `[]`

194:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _134 = put_tuple `bad_generator`, _47

  %% Unique:
  %%    _134
  _191 = call (`erlang`:`error`/1), _134

  %% Aliased:
  %%    _191
  _220 = succeeded:body _191
  br ^1

1:
  _192 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _192
}

%% mc_SUITE.erl:150
%% Counter = 224
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mc_double/1-lc$^3/1-3-'`(_36) {
0:
  %% Aliased:
  %%    _36
  _191 = is_nonempty_list _36
  br _191, ^222, ^188

222:
  %% mc_SUITE.erl:150
  %% Aliased:
  %%    _36
  _119 = call (`erts_internal`:`mc_refill`/1), _36

  %% Aliased:
  %%    _119
  _189 = succeeded:body _119
  br _189, ^189, ^1

189:
  %% mc_SUITE.erl:150
  %% Result type:
  %%    list(integer())
  %% Aliased:
  %%    _119
  _183 = call (`'-mc_double/1-lc$^3/1-3-'`/1), _119

  %% Unique:
  %%    _183
  _190 = succeeded:body _183
  br _190, ^190, ^1

190:
  %% Result type:
  %%    list(integer())
  %% Unique:
  %%    _183
  ret _183

188:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _208 = bif:is_tuple _36
  br _208, ^208, ^192

208:
  %% Argument types:
  %%    _36 => {...}
  %% Aliased:
  %%    _36
  _209 = bif:tuple_size _36

  %% Argument types:
  %%    _209 => 0..16777215
  %% Unique:
  %%    _209
  _210 = bif:'=:=' _209, `3`
  br _210, ^207, ^187

207:
  %% Argument types:
  %%    _36 => {any(), any(), any()}
  %% Aliased:
  %%    _36
  _122 = get_tuple_element _36, `0`

  %% Argument types:
  %%    _36 => {any(), any(), any()}
  %% Aliased:
  %%    _36
  _120 = get_tuple_element _36, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _203 = is_tagged_tuple _122, `2`, `key`
  br _203, ^200, ^193

200:
  %% Argument types:
  %%    _122 => {'key', any()}
  %% Aliased:
  %%    _122
  _123 = get_tuple_element _122, `1`

  %% Argument types:
  %%    _36 => {any(), any(), any()}
  %% Aliased:
  %%    _36
  _121 = get_tuple_element _36, `1`

  %% mc_SUITE.erl:150
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121, 
  %%    _123
  _75 = bif:'=:=' _121, _123
  br _75, ^220, ^193

220:
  %% mc_SUITE.erl:151
  %% Argument types:
  %%    
  %% Aliased:
  %%    _123
  _35 = bif:'rem' _123, `2`

  %% Unique:
  %%    _35
  _196 = succeeded:guard _35
  br _196, ^215, ^193

215:
  %% mc_SUITE.erl:151
  %% Argument types:
  %%    _35 => -1..1
  %% Unique:
  %%    _35
  _180 = bif:'=:=' _35, `0`
  br _180, ^193, ^198

198:
  %% mc_SUITE.erl:150
  %% Result type:
  %%    list(integer())
  %% Aliased:
  %%    _120
  _38 = call (`'-mc_double/1-lc$^3/1-3-'`/1), _120

  %% Unique:
  %%    _38
  _199 = succeeded:body _38
  br _199, ^199, ^1

199:
  %% Argument types:
  %%    _123 => integer()
  %%    _38 => list(integer())
  %% Unique:
  %%    _38, 
  %%    _123
  _181 = put_list _123, _38
  %% Result type:
  %%    nonempty_list(integer())
  %% Unique:
  %%    _181
  ret _181

193:
  %% mc_SUITE.erl:150
  %% Result type:
  %%    list(integer())
  %% Aliased:
  %%    _120
  _182 = call (`'-mc_double/1-lc$^3/1-3-'`/1), _120

  %% Unique:
  %%    _182
  _206 = succeeded:body _182
  br _206, ^206, ^1

206:
  %% Result type:
  %%    list(integer())
  %% Unique:
  %%    _182
  ret _182

192:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _212 = bif:'=:=' _36, `none`
  br _212, ^211, ^187

211:
  %% Result type:
  %%    nil()
  ret `[]`

187:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _116 = put_tuple `bad_generator`, _36

  %% Unique:
  %%    _116
  _184 = call (`erlang`:`error`/1), _116

  %% Aliased:
  %%    _184
  _213 = succeeded:body _184
  br ^1

1:
  _185 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _185
}

%% mc_SUITE.erl:147
%% Counter = 189
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mc_double/1-lc$^2/1-2-'`(_23) {
0:
  %% Aliased:
  %%    _23
  _185 = is_nonempty_list _23
  br _185, ^185, ^182

185:
  %% Argument types:
  %%    _23 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _23
  _108 = get_hd _23

  %% Argument types:
  %%    _23 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _23
  _107 = get_tl _23

  %% mc_SUITE.erl:147
  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _25 = bif:'*' _108, `2`

  %% Unique:
  %%    _25
  _183 = succeeded:body _25
  br _183, ^183, ^1

183:
  %% mc_SUITE.erl:147
  %% Result type:
  %%    list({{'key', number()}, number()})
  %% Aliased:
  %%    _107
  _26 = call (`'-mc_double/1-lc$^2/1-2-'`/1), _107

  %% Unique:
  %%    _26
  _184 = succeeded:body _26
  br _184, ^184, ^1

184:
  %% Argument types:
  %%    _108 => number()
  %% Unique:
  %%    _108
  _109 = put_tuple `key`, _108

  %% Argument types:
  %%    _109 => {'key', number()}
  %%    _25 => number()
  %% Unique:
  %%    _25, 
  %%    _109
  _110 = put_tuple _109, _25

  %% Argument types:
  %%    _110 => {{'key', number()}, number()}
  %%    _26 => list({{'key', number()}, number()})
  %% Unique:
  %%    _26, 
  %%    _110
  _177 = put_list _110, _26
  %% Result type:
  %%    nonempty_list({{'key', number()}, number()})
  %% Unique:
  %%    _177
  ret _177

182:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _186 = bif:'=:=' _23, `[]`
  br _186, ^186, ^181

186:
  %% Result type:
  %%    nil()
  ret `[]`

181:
  %% Argument types:
  %%    _23 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _23
  _106 = put_tuple `bad_generator`, _23

  %% mc_SUITE.erl:147
  %% Unique:
  %%    _106
  _178 = call (`erlang`:`error`/1), _106

  %% Aliased:
  %%    _178
  _187 = succeeded:body _178
  br ^1

1:
  _179 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _179
}

%% mc_SUITE.erl:146
%% Counter = 195
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mc_double/1-lc$^1/1-1-'`(_15) {
0:
  %% Aliased:
  %%    _15
  _182 = is_nonempty_list _15
  br _182, ^193, ^179

193:
  %% mc_SUITE.erl:146
  %% Aliased:
  %%    _15
  _96 = call (`erts_internal`:`mc_refill`/1), _15

  %% Aliased:
  %%    _96
  _180 = succeeded:body _96
  br _180, ^180, ^1

180:
  %% mc_SUITE.erl:146
  %% Result type:
  %%    list({any(), number()})
  %% Aliased:
  %%    _96
  _174 = call (`'-mc_double/1-lc$^1/1-1-'`/1), _96

  %% Unique:
  %%    _174
  _181 = succeeded:body _174
  br _181, ^181, ^1

181:
  %% Result type:
  %%    list({any(), number()})
  %% Unique:
  %%    _174
  ret _174

179:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _187 = bif:is_tuple _15
  br _187, ^187, ^183

187:
  %% Argument types:
  %%    _15 => {...}
  %% Aliased:
  %%    _15
  _188 = bif:tuple_size _15

  %% Argument types:
  %%    _188 => 0..16777215
  %% Unique:
  %%    _188
  _189 = bif:'=:=' _188, `3`
  br _189, ^186, ^178

186:
  %% Argument types:
  %%    _15 => {any(), any(), any()}
  %% Aliased:
  %%    _15
  _99 = get_tuple_element _15, `0`

  %% Argument types:
  %%    _15 => {any(), any(), any()}
  %% Aliased:
  %%    _15
  _98 = get_tuple_element _15, `1`

  %% mc_SUITE.erl:146
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _17 = bif:'*' _98, `2`

  %% Unique:
  %%    _17
  _184 = succeeded:body _17
  br _184, ^184, ^1

184:
  %% Argument types:
  %%    _15 => {any(), any(), any()}
  %% Aliased:
  %%    _15
  _97 = get_tuple_element _15, `2`

  %% mc_SUITE.erl:146
  %% Result type:
  %%    list({any(), number()})
  %% Aliased:
  %%    _97
  _18 = call (`'-mc_double/1-lc$^1/1-1-'`/1), _97

  %% Unique:
  %%    _18
  _185 = succeeded:body _18
  br _185, ^185, ^1

185:
  %% Argument types:
  %%    _17 => number()
  %% Aliased:
  %%    _99
  %% Unique:
  %%    _17
  _100 = put_tuple _99, _17

  %% Argument types:
  %%    _100 => {any(), number()}
  %%    _18 => list({any(), number()})
  %% Unique:
  %%    _18, 
  %%    _100
  _173 = put_list _100, _18
  %% Result type:
  %%    nonempty_list({any(), number()})
  %% Unique:
  %%    _173
  ret _173

183:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _191 = bif:'=:=' _15, `none`
  br _191, ^190, ^178

190:
  %% Result type:
  %%    nil()
  ret `[]`

178:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _93 = put_tuple `bad_generator`, _15

  %% Unique:
  %%    _93
  _175 = call (`erlang`:`error`/1), _93

  %% Aliased:
  %%    _175
  _192 = succeeded:body _175
  br ^1

1:
  _176 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _176
}

%% mc_SUITE.erl:144
%% Counter = 183
%% bs_ensure_opt: true
function `mc_SUITE`:`'-mc_double/1-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _178 = is_nonempty_list _4
  br _178, ^178, ^176

178:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _87 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _86 = get_tl _4

  %% mc_SUITE.erl:144
  %% Result type:
  %%    list({{'key', any()}, any()})
  %% Aliased:
  %%    _86
  _6 = call (`'-mc_double/1-lc$^0/1-0-'`/1), _86

  %% Unique:
  %%    _6
  _177 = succeeded:body _6
  br _177, ^177, ^1

177:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _88 = put_tuple `key`, _87

  %% Argument types:
  %%    _88 => {'key', any()}
  %% Aliased:
  %%    _87
  %% Unique:
  %%    _88
  _89 = put_tuple _88, _87

  %% Argument types:
  %%    _89 => {{'key', any()}, any()}
  %%    _6 => list({{'key', any()}, any()})
  %% Unique:
  %%    _6, 
  %%    _89
  _171 = put_list _89, _6
  %% Result type:
  %%    nonempty_list({{'key', any()}, any()})
  %% Unique:
  %%    _171
  ret _171

176:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _179 = bif:'=:=' _4, `[]`
  br _179, ^179, ^175

179:
  %% Result type:
  %%    nil()
  ret `[]`

175:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _85 = put_tuple `bad_generator`, _4

  %% mc_SUITE.erl:144
  %% Unique:
  %%    _85
  _172 = call (`erlang`:`error`/1), _85

  %% Aliased:
  %%    _172
  _180 = succeeded:body _172
  br ^1

1:
  _173 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _173
}

%% mc_SUITE.erl:138
%% Counter = 837
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^25/1-25-'`(_260) {
0:
  %% Aliased:
  %%    _260
  _819 = is_nonempty_list _260
  br _819, ^834, ^816

834:
  %% mc_SUITE.erl:138
  %% Aliased:
  %%    _260
  _663 = call (`erts_internal`:`mc_refill`/1), _260

  %% Aliased:
  %%    _663
  _817 = succeeded:body _663
  br _817, ^817, ^1

817:
  %% mc_SUITE.erl:138
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _663
  _811 = call (`'-basic/1-lc$^25/1-25-'`/1), _663

  %% Unique:
  %%    _811
  _818 = succeeded:body _811
  br _818, ^818, ^1

818:
  %% Result type:
  %%    list({number(), number()})
  %% Unique:
  %%    _811
  ret _811

816:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _828 = bif:is_tuple _260
  br _828, ^828, ^820

828:
  %% Argument types:
  %%    _260 => {...}
  %% Aliased:
  %%    _260
  _829 = bif:tuple_size _260

  %% Argument types:
  %%    _829 => 0..16777215
  %% Unique:
  %%    _829
  _830 = bif:'=:=' _829, `3`
  br _830, ^827, ^815

827:
  %% Argument types:
  %%    _260 => {any(), any(), any()}
  %% Aliased:
  %%    _260
  _666 = get_tuple_element _260, `0`

  %% Argument types:
  %%    _260 => {any(), any(), any()}
  %% Aliased:
  %%    _260
  _665 = get_tuple_element _260, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _665
  _825 = bif:'=:=' _665, `ok`
  br _825, ^824, ^821

824:
  %% mc_SUITE.erl:138
  %% Argument types:
  %%    
  %% Aliased:
  %%    _666
  _262 = bif:'+' _666, `1`

  %% Unique:
  %%    _262
  _822 = succeeded:body _262
  br _822, ^822, ^1

822:
  %% Argument types:
  %%    _260 => {any(), 'ok', any()}
  %% Aliased:
  %%    _260
  _664 = get_tuple_element _260, `2`

  %% mc_SUITE.erl:138
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _664
  _263 = call (`'-basic/1-lc$^25/1-25-'`/1), _664

  %% Unique:
  %%    _263
  _823 = succeeded:body _263
  br _823, ^823, ^1

823:
  %% Argument types:
  %%    _666 => number()
  %%    _262 => number()
  %% Unique:
  %%    _262, 
  %%    _666
  _669 = put_tuple _666, _262

  %% Argument types:
  %%    _669 => {number(), number()}
  %%    _263 => list({number(), number()})
  %% Unique:
  %%    _263, 
  %%    _669
  _809 = put_list _669, _263
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _809
  ret _809

821:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _665, 
  %%    _666
  _667 = put_tuple _666, _665

  %% Argument types:
  %%    _667 => {any(), any()}
  %% Unique:
  %%    _667
  _668 = put_tuple `badmatch`, _667

  %% mc_SUITE.erl:138
  %% Unique:
  %%    _668
  _810 = call (`erlang`:`error`/1), _668

  %% Aliased:
  %%    _810
  _826 = succeeded:body _810
  br ^1

820:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _832 = bif:'=:=' _260, `none`
  br _832, ^831, ^815

831:
  %% Result type:
  %%    nil()
  ret `[]`

815:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _660 = put_tuple `bad_generator`, _260

  %% Unique:
  %%    _660
  _812 = call (`erlang`:`error`/1), _660

  %% Aliased:
  %%    _812
  _833 = succeeded:body _812
  br ^1

1:
  _813 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _813
}

%% mc_SUITE.erl:137
%% Counter = 840
%% bs_ensure_opt: true
%% Parameters
%%    _248 =>
%%     bs_matchable(1)
%%     accepts_match_context
function `mc_SUITE`:`'-basic/1-lc$^24/1-24-'`(_248) {
0:
  %% Argument types:
  %%    _248 => bs_matchable(1)
  %% Aliased:
  %%    _248
  %% Anno: #{accepts_match_contexts => true}
  _641 = bs_start_match `new`, _248
  _835 = bs_ensure _641, `1`, `1`
  _836 = succeeded:guard _835
  br _836, ^834, ^810

834:
  %% mc_SUITE.erl:137
  %% Argument types:
  %%    _835 => bs_context(1)
  %% Aliased:
  %%    _641
  %% Anno: #{ensured => true}
  _642 = bs_match `integer`, _835, `[unsigned,big]`, `1`, `1`

  %% Aliased:
  %%    _642
  _811 = succeeded:guard _642
  br _811, ^811, ^810

811:
  %% Aliased:
  %%    _642
  _643 = bs_extract _642

  %% Argument types:
  %%    _643 => 0..1
  %% Unique:
  %%    _643
  _817 = bif:'=:=' _643, `0`
  br _817, ^816, ^810

816:
  _838 = bs_ensure _642, `7`, `1`
  _839 = succeeded:guard _838
  br _839, ^837, ^810

837:
  %% mc_SUITE.erl:137
  %% Argument types:
  %%    _838 => bs_context(1)
  %% Aliased:
  %%    _642
  %% Anno: #{ensured => true}
  _644 = bs_match `integer`, _838, `[unsigned,big]`, `7`, `1`

  %% Aliased:
  %%    _644
  _812 = succeeded:guard _644
  br _812, ^812, ^810

812:
  %% Aliased:
  %%    _644
  _645 = bs_extract _644

  %% mc_SUITE.erl:137
  %% Argument types:
  %%    _645 => 0..127
  %% Unique:
  %%    _645
  _250 = bif:'+' _645, `1`

  %% mc_SUITE.erl:137
  %% Result type:
  %%    list({0..127, 1..'+inf'})
  %% Aliased:
  %%    _644
  %% Anno: #{bsm_info => context_reused}
  _251 = call (`'-basic/1-lc$^24/1-24-'`/1), _644

  %% Unique:
  %%    _251
  _815 = succeeded:body _251
  br _815, ^815, ^1

815:
  %% Argument types:
  %%    _645 => 0..127
  %%    _250 => 1..128
  %% Unique:
  %%    _250, 
  %%    _645
  _648 = put_tuple _645, _250

  %% Argument types:
  %%    _648 => {0..127, 1..'+inf'}
  %%    _251 => list({0..127, 1..'+inf'})
  %% Unique:
  %%    _251, 
  %%    _648
  _805 = put_list _648, _251
  %% Result type:
  %%    nonempty_list({0..127, 1..'+inf'})
  %% Unique:
  %%    _805
  ret _805

810:
  %% mc_SUITE.erl:137
  %% Aliased:
  %%    _641
  _649 = bs_get_tail _641

  %% Argument types:
  %%    _649 => bitstring(1)
  %% Aliased:
  %%    _649
  _820 = bif:'=:=' _649, `<<>>`
  br _820, ^819, ^820

819:
  %% Result type:
  %%    nil()
  ret `[]`

820:
  %% Argument types:
  %%    _649 => bitstring(1)
  %% Aliased:
  %%    _649
  _651 = put_tuple `badmatch`, _649

  %% mc_SUITE.erl:137
  %% Unique:
  %%    _651
  _804 = call (`erlang`:`error`/1), _651

  %% Aliased:
  %%    _804
  _821 = succeeded:body _804
  br ^1

1:
  _829 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _829
}

%% mc_SUITE.erl:136
%% Counter = 821
%% bs_ensure_opt: true
%% Parameters
%%    _240 =>
%%     list(2 | {'ok', 1..3})
function `mc_SUITE`:`'-basic/1-lc$^23/1-23-'`(_240) {
0:
  %% Unique:
  %%    _240
  _816 = is_nonempty_list _240
  br _816, ^816, ^817

816:
  %% Argument types:
  %%    _240 => nonempty_list(2 | {'ok', 1..3})
  %% Unique:
  %%    _240
  _628 = get_hd _240

  %% Argument types:
  %%    _240 => nonempty_list(2 | {'ok', 1..3})
  %% Unique:
  %%    _240
  _627 = get_tl _240

  %% Argument types:
  %%    _628 => 2 | {'ok', 1..3}
  %% Unique:
  %%    _628
  _812 = bif:is_tuple _628
  br _812, ^809, ^819

809:
  %% Argument types:
  %%    _628 => {'ok', 1..3}
  %% Unique:
  %%    _628
  _630 = get_tuple_element _628, `1`

  %% mc_SUITE.erl:136
  %% Argument types:
  %%    _630 => 1..3
  %% Unique:
  %%    _630
  _242 = bif:'+' _630, `1`

  %% mc_SUITE.erl:136
  %% Result type:
  %%    list({1..3, 2..'+inf'})
  %% Unique:
  %%    _627
  _243 = call (`'-basic/1-lc$^23/1-23-'`/1), _627

  %% Unique:
  %%    _243
  _808 = succeeded:body _243
  br _808, ^808, ^1

808:
  %% Argument types:
  %%    _630 => 1..3
  %%    _242 => 2..4
  %% Unique:
  %%    _242, 
  %%    _630
  _632 = put_tuple _630, _242

  %% Argument types:
  %%    _632 => {1..3, 2..'+inf'}
  %%    _243 => list({1..3, 2..'+inf'})
  %% Unique:
  %%    _243, 
  %%    _632
  _799 = put_list _632, _243
  %% Result type:
  %%    nonempty_list({1..3, 2..'+inf'})
  %% Unique:
  %%    _799
  ret _799

819:
  %% mc_SUITE.erl:136
  _800 = call (`erlang`:`error`/1), `{badmatch,2}`

  %% Aliased:
  %%    _800
  _815 = succeeded:body _800
  br ^1

1:
  _802 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _802

817:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:133
%% Counter = 820
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^22/1-22-'`(_231) {
0:
  %% Aliased:
  %%    _231
  _803 = is_nonempty_list _231
  br _803, ^818, ^800

818:
  %% mc_SUITE.erl:133
  %% Aliased:
  %%    _231
  _615 = call (`erts_internal`:`mc_refill`/1), _231

  %% Aliased:
  %%    _615
  _801 = succeeded:body _615
  br _801, ^801, ^1

801:
  %% mc_SUITE.erl:133
  %% Result type:
  %%    list({number(2, '+inf'), number()})
  %% Aliased:
  %%    _615
  _795 = call (`'-basic/1-lc$^22/1-22-'`/1), _615

  %% Unique:
  %%    _795
  _802 = succeeded:body _795
  br _802, ^802, ^1

802:
  %% Result type:
  %%    list({number(2, '+inf'), number()})
  %% Unique:
  %%    _795
  ret _795

800:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _812 = bif:is_tuple _231
  br _812, ^812, ^804

812:
  %% Argument types:
  %%    _231 => {...}
  %% Aliased:
  %%    _231
  _813 = bif:tuple_size _231

  %% Argument types:
  %%    _813 => 0..16777215
  %% Unique:
  %%    _813
  _814 = bif:'=:=' _813, `3`
  br _814, ^811, ^799

811:
  %% Argument types:
  %%    _231 => {any(), any(), any()}
  %% Aliased:
  %%    _231
  _618 = get_tuple_element _231, `0`

  %% Argument types:
  %%    _231 => {any(), any(), any()}
  %% Aliased:
  %%    _231
  _616 = get_tuple_element _231, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _618
  _806 = bif:'>' _618, `1`
  br _806, ^806, ^805

806:
  %% mc_SUITE.erl:133
  %% Argument types:
  %%    _618 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _618
  _234 = bif:'+' _618, `1`

  %% Unique:
  %%    _234
  _807 = succeeded:body _234
  br _807, ^807, ^1

807:
  %% Argument types:
  %%    _231 => {any(), any(), any()}
  %% Aliased:
  %%    _231
  _617 = get_tuple_element _231, `1`

  %% mc_SUITE.erl:133
  %% Argument types:
  %%    
  %% Aliased:
  %%    _617
  _233 = bif:'*' _617, `2`

  %% Unique:
  %%    _233
  _808 = succeeded:body _233
  br _808, ^808, ^1

808:
  %% mc_SUITE.erl:133
  %% Result type:
  %%    list({number(2, '+inf'), number()})
  %% Aliased:
  %%    _616
  _235 = call (`'-basic/1-lc$^22/1-22-'`/1), _616

  %% Unique:
  %%    _235
  _809 = succeeded:body _235
  br _809, ^809, ^1

809:
  %% Argument types:
  %%    _234 => number(2, '+inf')
  %%    _233 => number()
  %% Unique:
  %%    _233, 
  %%    _234
  _619 = put_tuple _234, _233

  %% Argument types:
  %%    _619 => {number(2, '+inf'), number()}
  %%    _235 => list({number(2, '+inf'), number()})
  %% Unique:
  %%    _235, 
  %%    _619
  _793 = put_list _619, _235
  %% Result type:
  %%    nonempty_list({number(2, '+inf'), number()})
  %% Unique:
  %%    _793
  ret _793

805:
  %% mc_SUITE.erl:133
  %% Result type:
  %%    list({number(2, '+inf'), number()})
  %% Aliased:
  %%    _616
  _794 = call (`'-basic/1-lc$^22/1-22-'`/1), _616

  %% Unique:
  %%    _794
  _810 = succeeded:body _794
  br _810, ^810, ^1

810:
  %% Result type:
  %%    list({number(2, '+inf'), number()})
  %% Unique:
  %%    _794
  ret _794

804:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _816 = bif:'=:=' _231, `none`
  br _816, ^815, ^799

815:
  %% Result type:
  %%    nil()
  ret `[]`

799:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _612 = put_tuple `bad_generator`, _231

  %% Unique:
  %%    _612
  _796 = call (`erlang`:`error`/1), _612

  %% Aliased:
  %%    _796
  _817 = succeeded:body _796
  br ^1

1:
  _797 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _797
}

%% mc_SUITE.erl:132
%% Counter = 823
%% bs_ensure_opt: true
%% Parameters
%%    _220 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `mc_SUITE`:`'-basic/1-lc$^21/1-21-'`(_220) {
0:
  %% Argument types:
  %%    _220 => bs_matchable(8)
  %% Aliased:
  %%    _220
  %% Anno: #{accepts_match_contexts => true}
  _592 = bs_start_match `new`, _220
  _821 = bs_ensure _592, `8`, `1`
  _822 = succeeded:guard _821
  br _822, ^820, ^796

820:
  %% mc_SUITE.erl:132
  %% Argument types:
  %%    _821 => bs_context(8)
  %% Aliased:
  %%    _592
  %% Anno: #{ensured => true}
  _593 = bs_match `integer`, _821, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _593
  _797 = succeeded:guard _593
  br _797, ^797, ^796

797:
  %% Aliased:
  %%    _593
  _594 = bs_extract _593

  %% Argument types:
  %%    _594 => 0..255
  %% Unique:
  %%    _594
  _800 = bif:'>' _594, `1`
  br _800, ^800, ^799

800:
  %% mc_SUITE.erl:132
  %% Argument types:
  %%    _594 => 2..255
  %% Unique:
  %%    _594
  _222 = bif:'+' _594, `1`

  %% mc_SUITE.erl:132
  %% Result type:
  %%    list({2..255, 3..'+inf'})
  %% Aliased:
  %%    _593
  %% Anno: #{bsm_info => context_reused}
  _223 = call (`'-basic/1-lc$^21/1-21-'`/1), _593

  %% Unique:
  %%    _223
  _802 = succeeded:body _223
  br _802, ^802, ^1

802:
  %% Argument types:
  %%    _594 => 2..255
  %%    _222 => 3..256
  %% Unique:
  %%    _222, 
  %%    _594
  _597 = put_tuple _594, _222

  %% Argument types:
  %%    _597 => {2..255, 3..'+inf'}
  %%    _223 => list({2..255, 3..'+inf'})
  %% Unique:
  %%    _223, 
  %%    _597
  _790 = put_list _597, _223
  %% Result type:
  %%    nonempty_list({2..255, 3..'+inf'})
  %% Unique:
  %%    _790
  ret _790

799:
  %% mc_SUITE.erl:132
  %% Result type:
  %%    list({2..255, 3..'+inf'})
  %% Aliased:
  %%    _593
  %% Anno: #{bsm_info => context_reused}
  _791 = call (`'-basic/1-lc$^21/1-21-'`/1), _593

  %% Unique:
  %%    _791
  _803 = succeeded:body _791
  br _803, ^803, ^1

803:
  %% Result type:
  %%    list({2..255, 3..'+inf'})
  %% Unique:
  %%    _791
  ret _791

796:
  %% mc_SUITE.erl:132
  %% Aliased:
  %%    _592
  _598 = bs_get_tail _592

  %% Argument types:
  %%    _598 => bitstring(8)
  %% Aliased:
  %%    _598
  _806 = bif:'=:=' _598, `<<>>`
  br _806, ^805, ^806

805:
  %% Result type:
  %%    nil()
  ret `[]`

806:
  %% Argument types:
  %%    _598 => bitstring(8)
  %% Aliased:
  %%    _598
  _600 = put_tuple `badmatch`, _598

  %% mc_SUITE.erl:132
  %% Unique:
  %%    _600
  _789 = call (`erlang`:`error`/1), _600

  %% Aliased:
  %%    _789
  _807 = succeeded:body _789
  br ^1

1:
  _815 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _815
}

%% mc_SUITE.erl:131
%% Counter = 802
%% bs_ensure_opt: true
%% Parameters
%%    _213 =>
%%     list(1..3)
function `mc_SUITE`:`'-basic/1-lc$^20/1-20-'`(_213) {
0:
  %% Unique:
  %%    _213
  _798 = is_nonempty_list _213
  br _798, ^798, ^799

798:
  %% Argument types:
  %%    _213 => nonempty_list(1..3)
  %% Unique:
  %%    _213
  _581 = get_hd _213

  %% Argument types:
  %%    _213 => nonempty_list(1..3)
  %% Unique:
  %%    _213
  _580 = get_tl _213

  %% Argument types:
  %%    _581 => 1..3
  %% Unique:
  %%    _581
  _794 = bif:'>' _581, `1`
  br _794, ^794, ^793

794:
  %% mc_SUITE.erl:131
  %% Argument types:
  %%    _581 => 2..3
  %% Unique:
  %%    _581
  _215 = bif:'+' _581, `1`

  %% mc_SUITE.erl:131
  %% Result type:
  %%    list({2..3, 3..'+inf'})
  %% Unique:
  %%    _580
  _216 = call (`'-basic/1-lc$^20/1-20-'`/1), _580

  %% Unique:
  %%    _216
  _796 = succeeded:body _216
  br _796, ^796, ^1

796:
  %% Argument types:
  %%    _581 => 2..3
  %%    _215 => 3..4
  %% Unique:
  %%    _215, 
  %%    _581
  _582 = put_tuple _581, _215

  %% Argument types:
  %%    _582 => {2..3, 3..'+inf'}
  %%    _216 => list({2..3, 3..'+inf'})
  %% Unique:
  %%    _216, 
  %%    _582
  _786 = put_list _582, _216
  %% Result type:
  %%    nonempty_list({2..3, 3..'+inf'})
  %% Unique:
  %%    _786
  ret _786

793:
  %% mc_SUITE.erl:131
  %% Result type:
  %%    list({2..3, 3..'+inf'})
  %% Unique:
  %%    _580
  _787 = call (`'-basic/1-lc$^20/1-20-'`/1), _580

  %% Unique:
  %%    _787
  _797 = succeeded:body _787
  br _797, ^797, ^1

797:
  %% Result type:
  %%    list({2..3, 3..'+inf'})
  %% Unique:
  %%    _787
  ret _787

1:
  _789 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _789

799:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:128
%% Counter = 805
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^19/1-19-'`(_204) {
0:
  %% Aliased:
  %%    _204
  _791 = is_nonempty_list _204
  br _791, ^803, ^788

803:
  %% mc_SUITE.erl:128
  %% Aliased:
  %%    _204
  _565 = call (`erts_internal`:`mc_refill`/1), _204

  %% Aliased:
  %%    _565
  _789 = succeeded:body _565
  br _789, ^789, ^1

789:
  %% mc_SUITE.erl:128
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _565
  _783 = call (`'-basic/1-lc$^19/1-19-'`/1), _565

  %% Unique:
  %%    _783
  _790 = succeeded:body _783
  br _790, ^790, ^1

790:
  %% Result type:
  %%    list({number(), number()})
  %% Unique:
  %%    _783
  ret _783

788:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _797 = bif:is_tuple _204
  br _797, ^797, ^792

797:
  %% Argument types:
  %%    _204 => {...}
  %% Aliased:
  %%    _204
  _798 = bif:tuple_size _204

  %% Argument types:
  %%    _798 => 0..16777215
  %% Unique:
  %%    _798
  _799 = bif:'=:=' _798, `3`
  br _799, ^796, ^787

796:
  %% Argument types:
  %%    _204 => {any(), any(), any()}
  %% Aliased:
  %%    _204
  _568 = get_tuple_element _204, `0`

  %% mc_SUITE.erl:128
  %% Argument types:
  %%    
  %% Aliased:
  %%    _568
  _207 = bif:'+' _568, `1`

  %% Unique:
  %%    _207
  _793 = succeeded:body _207
  br _793, ^793, ^1

793:
  %% Argument types:
  %%    _204 => {any(), any(), any()}
  %% Aliased:
  %%    _204
  _567 = get_tuple_element _204, `1`

  %% mc_SUITE.erl:128
  %% Argument types:
  %%    
  %% Aliased:
  %%    _567
  _206 = bif:'*' _567, `2`

  %% Unique:
  %%    _206
  _794 = succeeded:body _206
  br _794, ^794, ^1

794:
  %% Argument types:
  %%    _204 => {any(), any(), any()}
  %% Aliased:
  %%    _204
  _566 = get_tuple_element _204, `2`

  %% mc_SUITE.erl:128
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _566
  _208 = call (`'-basic/1-lc$^19/1-19-'`/1), _566

  %% Unique:
  %%    _208
  _795 = succeeded:body _208
  br _795, ^795, ^1

795:
  %% Argument types:
  %%    _207 => number()
  %%    _206 => number()
  %% Unique:
  %%    _206, 
  %%    _207
  _569 = put_tuple _207, _206

  %% Argument types:
  %%    _569 => {number(), number()}
  %%    _208 => list({number(), number()})
  %% Unique:
  %%    _208, 
  %%    _569
  _782 = put_list _569, _208
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _782
  ret _782

792:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _801 = bif:'=:=' _204, `none`
  br _801, ^800, ^787

800:
  %% Result type:
  %%    nil()
  ret `[]`

787:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _562 = put_tuple `bad_generator`, _204

  %% Unique:
  %%    _562
  _784 = call (`erlang`:`error`/1), _562

  %% Aliased:
  %%    _784
  _802 = succeeded:body _784
  br ^1

1:
  _785 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _785
}

%% mc_SUITE.erl:127
%% Counter = 809
%% bs_ensure_opt: true
%% Parameters
%%    _193 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `mc_SUITE`:`'-basic/1-lc$^18/1-18-'`(_193) {
0:
  %% Argument types:
  %%    _193 => bs_matchable(8)
  %% Aliased:
  %%    _193
  %% Anno: #{accepts_match_contexts => true}
  _545 = bs_start_match `new`, _193
  _807 = bs_ensure _545, `8`, `1`
  _808 = succeeded:guard _807
  br _808, ^806, ^785

806:
  %% mc_SUITE.erl:127
  %% Argument types:
  %%    _807 => bs_context(8)
  %% Aliased:
  %%    _545
  %% Anno: #{ensured => true}
  _546 = bs_match `integer`, _807, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _546
  _786 = succeeded:guard _546
  br _786, ^786, ^785

786:
  %% Aliased:
  %%    _546
  _547 = bs_extract _546

  %% mc_SUITE.erl:127
  %% Argument types:
  %%    _547 => 0..255
  %% Unique:
  %%    _547
  _195 = bif:'+' _547, `1`

  %% mc_SUITE.erl:127
  %% Result type:
  %%    list({0..255, 1..'+inf'})
  %% Aliased:
  %%    _546
  %% Anno: #{bsm_info => context_reused}
  _196 = call (`'-basic/1-lc$^18/1-18-'`/1), _546

  %% Unique:
  %%    _196
  _789 = succeeded:body _196
  br _789, ^789, ^1

789:
  %% Argument types:
  %%    _547 => 0..255
  %%    _195 => 1..256
  %% Unique:
  %%    _195, 
  %%    _547
  _550 = put_tuple _547, _195

  %% Argument types:
  %%    _550 => {0..255, 1..'+inf'}
  %%    _196 => list({0..255, 1..'+inf'})
  %% Unique:
  %%    _196, 
  %%    _550
  _780 = put_list _550, _196
  %% Result type:
  %%    nonempty_list({0..255, 1..'+inf'})
  %% Unique:
  %%    _780
  ret _780

785:
  %% mc_SUITE.erl:127
  %% Aliased:
  %%    _545
  _551 = bs_get_tail _545

  %% Argument types:
  %%    _551 => bitstring(8)
  %% Aliased:
  %%    _551
  _792 = bif:'=:=' _551, `<<>>`
  br _792, ^791, ^792

791:
  %% Result type:
  %%    nil()
  ret `[]`

792:
  %% Argument types:
  %%    _551 => bitstring(8)
  %% Aliased:
  %%    _551
  _553 = put_tuple `badmatch`, _551

  %% mc_SUITE.erl:127
  %% Unique:
  %%    _553
  _779 = call (`erlang`:`error`/1), _553

  %% Aliased:
  %%    _779
  _793 = succeeded:body _779
  br ^1

1:
  _801 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _801
}

%% mc_SUITE.erl:126
%% Counter = 789
%% bs_ensure_opt: true
%% Parameters
%%    _186 =>
%%     list(1..3)
function `mc_SUITE`:`'-basic/1-lc$^17/1-17-'`(_186) {
0:
  %% Unique:
  %%    _186
  _785 = is_nonempty_list _186
  br _785, ^785, ^786

785:
  %% Argument types:
  %%    _186 => nonempty_list(1..3)
  %% Unique:
  %%    _186
  _535 = get_hd _186

  %% Argument types:
  %%    _186 => nonempty_list(1..3)
  %% Unique:
  %%    _186
  _534 = get_tl _186

  %% mc_SUITE.erl:126
  %% Argument types:
  %%    _535 => 1..3
  %% Unique:
  %%    _535
  _188 = bif:'+' _535, `1`

  %% mc_SUITE.erl:126
  %% Result type:
  %%    list({1..3, 2..'+inf'})
  %% Unique:
  %%    _534
  _189 = call (`'-basic/1-lc$^17/1-17-'`/1), _534

  %% Unique:
  %%    _189
  _784 = succeeded:body _189
  br _784, ^784, ^1

784:
  %% Argument types:
  %%    _535 => 1..3
  %%    _188 => 2..4
  %% Unique:
  %%    _188, 
  %%    _535
  _536 = put_tuple _535, _188

  %% Argument types:
  %%    _536 => {1..3, 2..'+inf'}
  %%    _189 => list({1..3, 2..'+inf'})
  %% Unique:
  %%    _189, 
  %%    _536
  _777 = put_list _536, _189
  %% Result type:
  %%    nonempty_list({1..3, 2..'+inf'})
  %% Unique:
  %%    _777
  ret _777

1:
  _779 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _779

786:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:123
%% Counter = 805
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^16/1-16-'`(_179) {
0:
  %% Aliased:
  %%    _179
  _782 = is_nonempty_list _179
  br _782, ^803, ^779

803:
  %% mc_SUITE.erl:123
  %% Aliased:
  %%    _179
  _518 = call (`erts_internal`:`mc_refill`/1), _179

  %% Aliased:
  %%    _518
  _780 = succeeded:body _518
  br _780, ^780, ^1

780:
  %% mc_SUITE.erl:123
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _518
  _774 = call (`'-basic/1-lc$^16/1-16-'`/1), _518

  %% Unique:
  %%    _774
  _781 = succeeded:body _774
  br _781, ^781, ^1

781:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _774
  ret _774

779:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _179
  _797 = bif:is_tuple _179
  br _797, ^797, ^783

797:
  %% Argument types:
  %%    _179 => {...}
  %% Aliased:
  %%    _179
  _798 = bif:tuple_size _179

  %% Argument types:
  %%    _798 => 0..16777215
  %% Unique:
  %%    _798
  _799 = bif:'=:=' _798, `3`
  br _799, ^796, ^778

796:
  %% Argument types:
  %%    _179 => {any(), any(), any()}
  %% Aliased:
  %%    _179
  _521 = get_tuple_element _179, `0`

  %% Argument types:
  %%    _179 => {any(), any(), any()}
  %% Aliased:
  %%    _179
  _520 = get_tuple_element _179, `1`

  %% Argument types:
  %%    _179 => {any(), any(), any()}
  %% Aliased:
  %%    _179
  _519 = get_tuple_element _179, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _521
  _792 = is_tagged_tuple _521, `3`, `foo`
  br _792, ^789, ^784

789:
  %% Argument types:
  %%    _521 => {'foo', any(), any()}
  %% Aliased:
  %%    _521
  _523 = get_tuple_element _521, `1`

  %% mc_SUITE.erl:123
  %% Argument types:
  %%    
  %% Aliased:
  %%    _523
  _178 = bif:'rem' _523, `2`

  %% Unique:
  %%    _178
  _786 = succeeded:guard _178
  br _786, ^786, ^784

786:
  %% Argument types:
  %%    _178 => -1..1
  %% Unique:
  %%    _178
  _787 = bif:'=:=' _178, `1`
  br _787, ^787, ^784

787:
  %% mc_SUITE.erl:123
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _519
  _181 = call (`'-basic/1-lc$^16/1-16-'`/1), _519

  %% Unique:
  %%    _181
  _788 = succeeded:body _181
  br _788, ^788, ^1

788:
  %% Argument types:
  %%    _181 => list(any())
  %% Aliased:
  %%    _520
  %% Unique:
  %%    _181
  _772 = put_list _520, _181
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _772
  ret _772

784:
  %% mc_SUITE.erl:123
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _519
  _773 = call (`'-basic/1-lc$^16/1-16-'`/1), _519

  %% Unique:
  %%    _773
  _795 = succeeded:body _773
  br _795, ^795, ^1

795:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _773
  ret _773

783:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _179
  _801 = bif:'=:=' _179, `none`
  br _801, ^800, ^778

800:
  %% Result type:
  %%    nil()
  ret `[]`

778:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _179
  _515 = put_tuple `bad_generator`, _179

  %% Unique:
  %%    _515
  _775 = call (`erlang`:`error`/1), _515

  %% Aliased:
  %%    _775
  _802 = succeeded:body _775
  br ^1

1:
  _776 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _776
}

%% mc_SUITE.erl:121
%% Counter = 796
%% bs_ensure_opt: true
%% Parameters
%%    _168 =>
%%     list({any(), any()})
function `mc_SUITE`:`'-basic/1-lc$^15/1-15-'`(_168) {
0:
  %% Aliased:
  %%    _168
  _792 = is_nonempty_list _168
  br _792, ^792, ^793

792:
  %% Argument types:
  %%    _168 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _168
  _501 = get_hd _168

  %% Argument types:
  %%    _168 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _168
  _500 = get_tl _168

  %% Argument types:
  %%    _501 => {any(), any()}
  %% Aliased:
  %%    _501
  _503 = get_tuple_element _501, `0`

  %% Argument types:
  %%    _501 => {any(), any()}
  %% Aliased:
  %%    _501
  _502 = get_tuple_element _501, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _503
  _784 = is_tagged_tuple _503, `3`, `foo`
  br _784, ^781, ^776

781:
  %% Argument types:
  %%    _503 => {'foo', any(), any()}
  %% Aliased:
  %%    _503
  _505 = get_tuple_element _503, `1`

  %% mc_SUITE.erl:122
  %% Argument types:
  %%    
  %% Aliased:
  %%    _505
  _166 = bif:'rem' _505, `2`

  %% Unique:
  %%    _166
  _778 = succeeded:guard _166
  br _778, ^778, ^776

778:
  %% Argument types:
  %%    _166 => -1..1
  %% Unique:
  %%    _166
  _779 = bif:'=:=' _166, `1`
  br _779, ^779, ^776

779:
  %% mc_SUITE.erl:121
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _500
  _170 = call (`'-basic/1-lc$^15/1-15-'`/1), _500

  %% Unique:
  %%    _170
  _780 = succeeded:body _170
  br _780, ^780, ^1

780:
  %% Argument types:
  %%    _170 => list(any())
  %% Aliased:
  %%    _502
  %% Unique:
  %%    _170
  _769 = put_list _502, _170
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _769
  ret _769

776:
  %% mc_SUITE.erl:121
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _500
  _770 = call (`'-basic/1-lc$^15/1-15-'`/1), _500

  %% Unique:
  %%    _770
  _791 = succeeded:body _770
  br _791, ^791, ^1

791:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _770
  ret _770

1:
  _772 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _772

793:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:118
%% Counter = 797
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^14/1-14-'`(_159) {
0:
  %% Aliased:
  %%    _159
  _774 = is_nonempty_list _159
  br _774, ^795, ^771

795:
  %% mc_SUITE.erl:118
  %% Aliased:
  %%    _159
  _481 = call (`erts_internal`:`mc_refill`/1), _159

  %% Aliased:
  %%    _481
  _772 = succeeded:body _481
  br _772, ^772, ^1

772:
  %% mc_SUITE.erl:118
  %% Result type:
  %%    list({{'foo', any(), any()}, any()})
  %% Aliased:
  %%    _481
  _766 = call (`'-basic/1-lc$^14/1-14-'`/1), _481

  %% Unique:
  %%    _766
  _773 = succeeded:body _766
  br _773, ^773, ^1

773:
  %% Result type:
  %%    list({{'foo', any(), any()}, any()})
  %% Unique:
  %%    _766
  ret _766

771:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _789 = bif:is_tuple _159
  br _789, ^789, ^775

789:
  %% Argument types:
  %%    _159 => {...}
  %% Aliased:
  %%    _159
  _790 = bif:tuple_size _159

  %% Argument types:
  %%    _790 => 0..16777215
  %% Unique:
  %%    _790
  _791 = bif:'=:=' _790, `3`
  br _791, ^788, ^770

788:
  %% Argument types:
  %%    _159 => {any(), any(), any()}
  %% Aliased:
  %%    _159
  _484 = get_tuple_element _159, `0`

  %% Argument types:
  %%    _159 => {any(), any(), any()}
  %% Aliased:
  %%    _159
  _483 = get_tuple_element _159, `1`

  %% Argument types:
  %%    _159 => {any(), any(), any()}
  %% Aliased:
  %%    _159
  _482 = get_tuple_element _159, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _484
  _784 = is_tagged_tuple _484, `3`, `foo`
  br _784, ^781, ^776

781:
  %% Argument types:
  %%    _484 => {'foo', any(), any()}
  %% Aliased:
  %%    _484
  _486 = get_tuple_element _484, `1`

  %% mc_SUITE.erl:119
  %% Argument types:
  %%    
  %% Aliased:
  %%    _486
  _158 = bif:'rem' _486, `2`

  %% Unique:
  %%    _158
  _778 = succeeded:guard _158
  br _778, ^778, ^776

778:
  %% Argument types:
  %%    _158 => -1..1
  %% Unique:
  %%    _158
  _779 = bif:'=:=' _158, `0`
  br _779, ^779, ^776

779:
  %% mc_SUITE.erl:118
  %% Result type:
  %%    list({{'foo', any(), any()}, any()})
  %% Aliased:
  %%    _482
  _161 = call (`'-basic/1-lc$^14/1-14-'`/1), _482

  %% Unique:
  %%    _161
  _780 = succeeded:body _161
  br _780, ^780, ^1

780:
  %% Argument types:
  %%    _484 => {'foo', any(), any()}
  %% Aliased:
  %%    _483, 
  %%    _484
  _491 = put_tuple _484, _483

  %% Argument types:
  %%    _491 => {{'foo', any(), any()}, any()}
  %%    _161 => list({{'foo', any(), any()}, any()})
  %% Unique:
  %%    _161, 
  %%    _491
  _764 = put_list _491, _161
  %% Result type:
  %%    nonempty_list({{'foo', any(), any()}, any()})
  %% Unique:
  %%    _764
  ret _764

776:
  %% mc_SUITE.erl:118
  %% Result type:
  %%    list({{'foo', any(), any()}, any()})
  %% Aliased:
  %%    _482
  _765 = call (`'-basic/1-lc$^14/1-14-'`/1), _482

  %% Unique:
  %%    _765
  _787 = succeeded:body _765
  br _787, ^787, ^1

787:
  %% Result type:
  %%    list({{'foo', any(), any()}, any()})
  %% Unique:
  %%    _765
  ret _765

775:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _793 = bif:'=:=' _159, `none`
  br _793, ^792, ^770

792:
  %% Result type:
  %%    nil()
  ret `[]`

770:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _159
  _478 = put_tuple `bad_generator`, _159

  %% Unique:
  %%    _478
  _767 = call (`erlang`:`error`/1), _478

  %% Aliased:
  %%    _767
  _794 = succeeded:body _767
  br ^1

1:
  _768 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _768
}

%% mc_SUITE.erl:115
%% Counter = 788
%% bs_ensure_opt: true
%% Parameters
%%    _148 =>
%%     list({any(), any()})
function `mc_SUITE`:`'-basic/1-lc$^13/1-13-'`(_148) {
0:
  %% Aliased:
  %%    _148
  _784 = is_nonempty_list _148
  br _784, ^784, ^785

784:
  %% Argument types:
  %%    _148 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _148
  _466 = get_hd _148

  %% Argument types:
  %%    _148 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _148
  _465 = get_tl _148

  %% Argument types:
  %%    _466 => {any(), any()}
  %% Aliased:
  %%    _466
  _468 = get_tuple_element _466, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _468
  _776 = is_tagged_tuple _468, `3`, `foo`
  br _776, ^773, ^768

773:
  %% Argument types:
  %%    _468 => {'foo', any(), any()}
  %% Aliased:
  %%    _468
  _470 = get_tuple_element _468, `1`

  %% mc_SUITE.erl:116
  %% Argument types:
  %%    
  %% Aliased:
  %%    _470
  _146 = bif:'rem' _470, `2`

  %% Unique:
  %%    _146
  _770 = succeeded:guard _146
  br _770, ^770, ^768

770:
  %% Argument types:
  %%    _146 => -1..1
  %% Unique:
  %%    _146
  _771 = bif:'=:=' _146, `0`
  br _771, ^771, ^768

771:
  %% mc_SUITE.erl:115
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _465
  _150 = call (`'-basic/1-lc$^13/1-13-'`/1), _465

  %% Unique:
  %%    _150
  _772 = succeeded:body _150
  br _772, ^772, ^1

772:
  %% Argument types:
  %%    _466 => {any(), any()}
  %%    _150 => list({any(), any()})
  %% Aliased:
  %%    _466
  %% Unique:
  %%    _150
  _761 = put_list _466, _150
  %% Result type:
  %%    nonempty_list({any(), any()})
  %% Unique:
  %%    _761
  ret _761

768:
  %% mc_SUITE.erl:115
  %% Result type:
  %%    list({any(), any()})
  %% Aliased:
  %%    _465
  _762 = call (`'-basic/1-lc$^13/1-13-'`/1), _465

  %% Unique:
  %%    _762
  _783 = succeeded:body _762
  br _783, ^783, ^1

783:
  %% Result type:
  %%    list({any(), any()})
  %% Unique:
  %%    _762
  ret _762

1:
  _764 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _764

785:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:112
%% Counter = 773
%% bs_ensure_opt: true
%% Parameters
%%    _135 =>
%%     list(1..4)
function `mc_SUITE`:`'-basic/1-lc$^12/1-12-'`(_135) {
0:
  %% Unique:
  %%    _135
  _769 = is_nonempty_list _135
  br _769, ^769, ^770

769:
  %% Argument types:
  %%    _135 => nonempty_list(1..4)
  %% Unique:
  %%    _135
  _458 = get_hd _135

  %% Argument types:
  %%    _135 => nonempty_list(1..4)
  %% Unique:
  %%    _135
  _457 = get_tl _135

  %% mc_SUITE.erl:112
  %% Argument types:
  %%    _458 => 1..4
  %%    _458 => 1..4
  %% Unique:
  %%    _458
  _139 = bif:'*' _458, _458

  %% mc_SUITE.erl:112
  %% Argument types:
  %%    _139 => 1..16
  %%    _458 => 1..4
  %% Unique:
  %%    _139, 
  %%    _458
  _138 = bif:'*' _139, _458

  %% Unique:
  %%    _138
  _767 = succeeded:body _138
  br _767, ^767, ^1

767:
  %% mc_SUITE.erl:112
  %% Result type:
  %%    list({{'foo', 1..4, 1..'+inf'}, 1..'+inf'})
  %% Unique:
  %%    _457
  _140 = call (`'-basic/1-lc$^12/1-12-'`/1), _457

  %% Unique:
  %%    _140
  _768 = succeeded:body _140
  br _768, ^768, ^1

768:
  %% Argument types:
  %%    _458 => 1..4
  %%    _139 => 1..16
  %% Unique:
  %%    _139, 
  %%    _458
  _459 = put_tuple `foo`, _458, _139

  %% Argument types:
  %%    _459 => {'foo', 1..4, 1..'+inf'}
  %%    _138 => 1..64
  %% Unique:
  %%    _138, 
  %%    _459
  _460 = put_tuple _459, _138

  %% Argument types:
  %%    _460 => {{'foo', 1..4, 1..'+inf'}, 1..'+inf'}
  %%    _140 => list({{'foo', 1..4, 1..'+inf'}, 1..'+inf'})
  %% Unique:
  %%    _140, 
  %%    _460
  _759 = put_list _460, _140
  %% Result type:
  %%    nonempty_list({{'foo', 1..4, 1..'+inf'}, 1..'+inf'})
  %% Unique:
  %%    _759
  ret _759

1:
  _761 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _761

770:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% mc_SUITE.erl:109
%% Counter = 784
%% bs_ensure_opt: true
%% Parameters
%%    _126 =>
%%     bitstring(8,appendable)
function `mc_SUITE`:`'-basic/1-lbc$^11/2-11-'`(_127, _126) {
0:
  %% Aliased:
  %%    _127
  _766 = is_nonempty_list _127
  br _766, ^763, ^762

763:
  %% mc_SUITE.erl:109
  %% Aliased:
  %%    _127
  _451 = call (`erts_internal`:`mc_refill`/1), _127

  %% Aliased:
  %%    _451
  _764 = succeeded:body _451
  br _764, ^764, ^1

764:
  %% mc_SUITE.erl:109
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _451
  %% Unique:
  %%    _126
  _757 = call (`'-basic/1-lbc$^11/2-11-'`/2), _451, _126

  %% Unique:
  %%    _757
  _765 = succeeded:body _757
  br _765, ^765, ^1

765:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _757
  ret _757

762:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _777 = bif:is_tuple _127
  br _777, ^777, ^767

777:
  %% Argument types:
  %%    _127 => {...}
  %% Aliased:
  %%    _127
  _778 = bif:tuple_size _127

  %% Argument types:
  %%    _778 => 0..16777215
  %% Unique:
  %%    _778
  _779 = bif:'=:=' _778, `3`
  br _779, ^776, ^761

776:
  %% Argument types:
  %%    _127 => {any(), any(), any()}
  %% Aliased:
  %%    _127
  _454 = get_tuple_element _127, `0`

  %% Argument types:
  %%    _127 => {any(), any(), any()}
  %% Aliased:
  %%    _127
  _452 = get_tuple_element _127, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _454
  _774 = bif:'=:=' _454, `a`
  br _774, ^773, ^768

773:
  %% Argument types:
  %%    _127 => {'a', any(), any()}
  %% Aliased:
  %%    _127
  _453 = get_tuple_element _127, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _453
  _772 = bif:'=:=' _453, `b`
  br _772, ^771, ^768

771:
  %% mc_SUITE.erl:109
  %% Result type:
  %%    bitstring(8,appendable)
  %% Argument types:
  %%    _126 => bitstring(8,appendable)
  %% Unique:
  %%    _126
  %% Anno: #{unit => 8}
  _290 = bs_create_bin `private_append`, `[1,{segment,1}]`, _126, `all`, `binary`, `[1]`, `<<0>>`, `all`

  %% Unique:
  %%    _290
  _769 = succeeded:body _290
  br _769, ^769, ^1

769:
  %% mc_SUITE.erl:109
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _452
  %% Unique:
  %%    _290
  _755 = call (`'-basic/1-lbc$^11/2-11-'`/2), _452, _290

  %% Unique:
  %%    _755
  _770 = succeeded:body _755
  br _770, ^770, ^1

770:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _755
  ret _755

768:
  %% mc_SUITE.erl:109
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _452
  %% Unique:
  %%    _126
  _756 = call (`'-basic/1-lbc$^11/2-11-'`/2), _452, _126

  %% Unique:
  %%    _756
  _775 = succeeded:body _756
  br _775, ^775, ^1

775:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _756
  ret _756

767:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _781 = bif:'=:=' _127, `none`
  br _781, ^780, ^761

780:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _126
  ret _126

761:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _448 = put_tuple `bad_generator`, _127

  %% Unique:
  %%    _448
  _758 = call (`erlang`:`error`/1), _448

  %% Aliased:
  %%    _758
  _782 = succeeded:body _758
  br ^1

1:
  _759 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _759
}

%% mc_SUITE.erl:108
%% Counter = 779
%% bs_ensure_opt: true
%% Parameters
%%    _113 =>
%%     bitstring(8,appendable)
function `mc_SUITE`:`'-basic/1-lbc$^10/2-10-'`(_114, _113) {
0:
  %% Aliased:
  %%    _114
  _761 = is_nonempty_list _114
  br _761, ^758, ^757

758:
  %% mc_SUITE.erl:108
  %% Aliased:
  %%    _114
  _437 = call (`erts_internal`:`mc_refill`/1), _114

  %% Aliased:
  %%    _437
  _759 = succeeded:body _437
  br _759, ^759, ^1

759:
  %% mc_SUITE.erl:108
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _437
  %% Unique:
  %%    _113
  _752 = call (`'-basic/1-lbc$^10/2-10-'`/2), _437, _113

  %% Unique:
  %%    _752
  _760 = succeeded:body _752
  br _760, ^760, ^1

760:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _752
  ret _752

757:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _772 = bif:is_tuple _114
  br _772, ^772, ^762

772:
  %% Argument types:
  %%    _114 => {...}
  %% Aliased:
  %%    _114
  _773 = bif:tuple_size _114

  %% Argument types:
  %%    _773 => 0..16777215
  %% Unique:
  %%    _773
  _774 = bif:'=:=' _773, `3`
  br _774, ^771, ^756

771:
  %% Argument types:
  %%    _114 => {any(), any(), any()}
  %% Aliased:
  %%    _114
  _440 = get_tuple_element _114, `0`

  %% Argument types:
  %%    _114 => {any(), any(), any()}
  %% Aliased:
  %%    _114
  _438 = get_tuple_element _114, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _440
  _769 = bif:'=:=' _440, `a`
  br _769, ^768, ^763

768:
  %% Argument types:
  %%    _114 => {'a', any(), any()}
  %% Aliased:
  %%    _114
  _439 = get_tuple_element _114, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _439
  _767 = bif:'=:=' _439, `b`
  br _767, ^766, ^763

766:
  %% mc_SUITE.erl:108
  %% Result type:
  %%    bitstring(8,appendable)
  %% Argument types:
  %%    _113 => bitstring(8,appendable)
  %% Unique:
  %%    _113
  %% Anno: #{unit => 8}
  _289 = bs_create_bin `private_append`, `[1,{segment,1}]`, _113, `all`, `binary`, `[1]`, `<<0>>`, `all`

  %% Unique:
  %%    _289
  _764 = succeeded:body _289
  br _764, ^764, ^1

764:
  %% mc_SUITE.erl:108
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _438
  %% Unique:
  %%    _289
  _750 = call (`'-basic/1-lbc$^10/2-10-'`/2), _438, _289

  %% Unique:
  %%    _750
  _765 = succeeded:body _750
  br _765, ^765, ^1

765:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _750
  ret _750

763:
  %% mc_SUITE.erl:108
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _438
  %% Unique:
  %%    _113
  _751 = call (`'-basic/1-lbc$^10/2-10-'`/2), _438, _113

  %% Unique:
  %%    _751
  _770 = succeeded:body _751
  br _770, ^770, ^1

770:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _751
  ret _751

762:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _776 = bif:'=:=' _114, `none`
  br _776, ^775, ^756

775:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _113
  ret _113

756:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _434 = put_tuple `bad_generator`, _114

  %% Unique:
  %%    _434
  _753 = call (`erlang`:`error`/1), _434

  %% Aliased:
  %%    _753
  _777 = succeeded:body _753
  br ^1

1:
  _754 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _754
}

%% mc_SUITE.erl:107
%% Counter = 774
%% bs_ensure_opt: true
%% Parameters
%%    _100 =>
%%     bitstring(8,appendable)
function `mc_SUITE`:`'-basic/1-lbc$^9/2-9-'`(_101, _100) {
0:
  %% Aliased:
  %%    _101
  _756 = is_nonempty_list _101
  br _756, ^753, ^752

753:
  %% mc_SUITE.erl:107
  %% Aliased:
  %%    _101
  _423 = call (`erts_internal`:`mc_refill`/1), _101

  %% Aliased:
  %%    _423
  _754 = succeeded:body _423
  br _754, ^754, ^1

754:
  %% mc_SUITE.erl:107
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _423
  %% Unique:
  %%    _100
  _747 = call (`'-basic/1-lbc$^9/2-9-'`/2), _423, _100

  %% Unique:
  %%    _747
  _755 = succeeded:body _747
  br _755, ^755, ^1

755:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _747
  ret _747

752:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _767 = bif:is_tuple _101
  br _767, ^767, ^757

767:
  %% Argument types:
  %%    _101 => {...}
  %% Aliased:
  %%    _101
  _768 = bif:tuple_size _101

  %% Argument types:
  %%    _768 => 0..16777215
  %% Unique:
  %%    _768
  _769 = bif:'=:=' _768, `3`
  br _769, ^766, ^751

766:
  %% Argument types:
  %%    _101 => {any(), any(), any()}
  %% Aliased:
  %%    _101
  _426 = get_tuple_element _101, `0`

  %% Argument types:
  %%    _101 => {any(), any(), any()}
  %% Aliased:
  %%    _101
  _424 = get_tuple_element _101, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _426
  _764 = bif:'=:=' _426, `a`
  br _764, ^763, ^758

763:
  %% Argument types:
  %%    _101 => {'a', any(), any()}
  %% Aliased:
  %%    _101
  _425 = get_tuple_element _101, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _425
  _762 = bif:'=:=' _425, `b`
  br _762, ^761, ^758

761:
  %% mc_SUITE.erl:107
  %% Result type:
  %%    bitstring(8,appendable)
  %% Argument types:
  %%    _100 => bitstring(8,appendable)
  %% Unique:
  %%    _100
  %% Anno: #{unit => 8}
  _288 = bs_create_bin `private_append`, `[1,{segment,1}]`, _100, `all`, `binary`, `[1]`, `<<0>>`, `all`

  %% Unique:
  %%    _288
  _759 = succeeded:body _288
  br _759, ^759, ^1

759:
  %% mc_SUITE.erl:107
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _424
  %% Unique:
  %%    _288
  _745 = call (`'-basic/1-lbc$^9/2-9-'`/2), _424, _288

  %% Unique:
  %%    _745
  _760 = succeeded:body _745
  br _760, ^760, ^1

760:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _745
  ret _745

758:
  %% mc_SUITE.erl:107
  %% Result type:
  %%    bitstring(8,appendable)
  %% Aliased:
  %%    _424
  %% Unique:
  %%    _100
  _746 = call (`'-basic/1-lbc$^9/2-9-'`/2), _424, _100

  %% Unique:
  %%    _746
  _765 = succeeded:body _746
  br _765, ^765, ^1

765:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _746
  ret _746

757:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _771 = bif:'=:=' _101, `none`
  br _771, ^770, ^751

770:
  %% Result type:
  %%    bitstring(8,appendable)
  %% Unique:
  %%    _100
  ret _100

751:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _420 = put_tuple `bad_generator`, _101

  %% Unique:
  %%    _420
  _748 = call (`erlang`:`error`/1), _420

  %% Aliased:
  %%    _748
  _772 = succeeded:body _748
  br ^1

1:
  _749 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _749
}

%% mc_SUITE.erl:105
%% Counter = 767
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^8/1-8-'`(_89) {
0:
  %% Aliased:
  %%    _89
  _749 = is_nonempty_list _89
  br _749, ^765, ^746

765:
  %% mc_SUITE.erl:105
  %% Aliased:
  %%    _89
  _407 = call (`erts_internal`:`mc_refill`/1), _89

  %% Aliased:
  %%    _407
  _747 = succeeded:body _407
  br _747, ^747, ^1

747:
  %% mc_SUITE.erl:105
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _407
  _741 = call (`'-basic/1-lc$^8/1-8-'`/1), _407

  %% Unique:
  %%    _741
  _748 = succeeded:body _741
  br _748, ^748, ^1

748:
  %% Result type:
  %%    list(0)
  %% Unique:
  %%    _741
  ret _741

746:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _759 = bif:is_tuple _89
  br _759, ^759, ^750

759:
  %% Argument types:
  %%    _89 => {...}
  %% Aliased:
  %%    _89
  _760 = bif:tuple_size _89

  %% Argument types:
  %%    _760 => 0..16777215
  %% Unique:
  %%    _760
  _761 = bif:'=:=' _760, `3`
  br _761, ^758, ^745

758:
  %% Argument types:
  %%    _89 => {any(), any(), any()}
  %% Aliased:
  %%    _89
  _410 = get_tuple_element _89, `0`

  %% Argument types:
  %%    _89 => {any(), any(), any()}
  %% Aliased:
  %%    _89
  _408 = get_tuple_element _89, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _410
  _756 = bif:'=:=' _410, `a`
  br _756, ^755, ^751

755:
  %% Argument types:
  %%    _89 => {'a', any(), any()}
  %% Aliased:
  %%    _89
  _409 = get_tuple_element _89, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _409
  _754 = bif:'=:=' _409, `b`
  br _754, ^753, ^751

753:
  %% mc_SUITE.erl:105
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _408
  _91 = call (`'-basic/1-lc$^8/1-8-'`/1), _408

  %% Unique:
  %%    _91
  _752 = succeeded:body _91
  br _752, ^752, ^1

752:
  %% Argument types:
  %%    _91 => list(0)
  %% Unique:
  %%    _91
  _739 = put_list `0`, _91
  %% Result type:
  %%    nonempty_list(0)
  %% Unique:
  %%    _739
  ret _739

751:
  %% mc_SUITE.erl:105
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _408
  _740 = call (`'-basic/1-lc$^8/1-8-'`/1), _408

  %% Unique:
  %%    _740
  _757 = succeeded:body _740
  br _757, ^757, ^1

757:
  %% Result type:
  %%    list(0)
  %% Unique:
  %%    _740
  ret _740

750:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _763 = bif:'=:=' _89, `none`
  br _763, ^762, ^745

762:
  %% Result type:
  %%    nil()
  ret `[]`

745:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _404 = put_tuple `bad_generator`, _89

  %% Unique:
  %%    _404
  _742 = call (`erlang`:`error`/1), _404

  %% Aliased:
  %%    _742
  _764 = succeeded:body _742
  br ^1

1:
  _743 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _743
}

%% mc_SUITE.erl:104
%% Counter = 762
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^7/1-7-'`(_79) {
0:
  %% Aliased:
  %%    _79
  _744 = is_nonempty_list _79
  br _744, ^760, ^741

760:
  %% mc_SUITE.erl:104
  %% Aliased:
  %%    _79
  _395 = call (`erts_internal`:`mc_refill`/1), _79

  %% Aliased:
  %%    _395
  _742 = succeeded:body _395
  br _742, ^742, ^1

742:
  %% mc_SUITE.erl:104
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _395
  _736 = call (`'-basic/1-lc$^7/1-7-'`/1), _395

  %% Unique:
  %%    _736
  _743 = succeeded:body _736
  br _743, ^743, ^1

743:
  %% Result type:
  %%    list(0)
  %% Unique:
  %%    _736
  ret _736

741:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _754 = bif:is_tuple _79
  br _754, ^754, ^745

754:
  %% Argument types:
  %%    _79 => {...}
  %% Aliased:
  %%    _79
  _755 = bif:tuple_size _79

  %% Argument types:
  %%    _755 => 0..16777215
  %% Unique:
  %%    _755
  _756 = bif:'=:=' _755, `3`
  br _756, ^753, ^740

753:
  %% Argument types:
  %%    _79 => {any(), any(), any()}
  %% Aliased:
  %%    _79
  _398 = get_tuple_element _79, `0`

  %% Argument types:
  %%    _79 => {any(), any(), any()}
  %% Aliased:
  %%    _79
  _396 = get_tuple_element _79, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _398
  _751 = bif:'=:=' _398, `a`
  br _751, ^750, ^746

750:
  %% Argument types:
  %%    _79 => {'a', any(), any()}
  %% Aliased:
  %%    _79
  _397 = get_tuple_element _79, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _397
  _749 = bif:'=:=' _397, `b`
  br _749, ^748, ^746

748:
  %% mc_SUITE.erl:104
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _396
  _81 = call (`'-basic/1-lc$^7/1-7-'`/1), _396

  %% Unique:
  %%    _81
  _747 = succeeded:body _81
  br _747, ^747, ^1

747:
  %% Argument types:
  %%    _81 => list(0)
  %% Unique:
  %%    _81
  _734 = put_list `0`, _81
  %% Result type:
  %%    nonempty_list(0)
  %% Unique:
  %%    _734
  ret _734

746:
  %% mc_SUITE.erl:104
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _396
  _735 = call (`'-basic/1-lc$^7/1-7-'`/1), _396

  %% Unique:
  %%    _735
  _752 = succeeded:body _735
  br _752, ^752, ^1

752:
  %% Result type:
  %%    list(0)
  %% Unique:
  %%    _735
  ret _735

745:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _758 = bif:'=:=' _79, `none`
  br _758, ^757, ^740

757:
  %% Result type:
  %%    nil()
  ret `[]`

740:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _392 = put_tuple `bad_generator`, _79

  %% Unique:
  %%    _392
  _737 = call (`erlang`:`error`/1), _392

  %% Aliased:
  %%    _737
  _759 = succeeded:body _737
  br ^1

1:
  _738 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _738
}

%% mc_SUITE.erl:103
%% Counter = 757
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^6/1-6-'`(_69) {
0:
  %% Aliased:
  %%    _69
  _739 = is_nonempty_list _69
  br _739, ^755, ^736

755:
  %% mc_SUITE.erl:103
  %% Aliased:
  %%    _69
  _383 = call (`erts_internal`:`mc_refill`/1), _69

  %% Aliased:
  %%    _383
  _737 = succeeded:body _383
  br _737, ^737, ^1

737:
  %% mc_SUITE.erl:103
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _383
  _731 = call (`'-basic/1-lc$^6/1-6-'`/1), _383

  %% Unique:
  %%    _731
  _738 = succeeded:body _731
  br _738, ^738, ^1

738:
  %% Result type:
  %%    list(0)
  %% Unique:
  %%    _731
  ret _731

736:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _749 = bif:is_tuple _69
  br _749, ^749, ^740

749:
  %% Argument types:
  %%    _69 => {...}
  %% Aliased:
  %%    _69
  _750 = bif:tuple_size _69

  %% Argument types:
  %%    _750 => 0..16777215
  %% Unique:
  %%    _750
  _751 = bif:'=:=' _750, `3`
  br _751, ^748, ^735

748:
  %% Argument types:
  %%    _69 => {any(), any(), any()}
  %% Aliased:
  %%    _69
  _386 = get_tuple_element _69, `0`

  %% Argument types:
  %%    _69 => {any(), any(), any()}
  %% Aliased:
  %%    _69
  _384 = get_tuple_element _69, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _386
  _746 = bif:'=:=' _386, `a`
  br _746, ^745, ^741

745:
  %% Argument types:
  %%    _69 => {'a', any(), any()}
  %% Aliased:
  %%    _69
  _385 = get_tuple_element _69, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _385
  _744 = bif:'=:=' _385, `b`
  br _744, ^743, ^741

743:
  %% mc_SUITE.erl:103
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _384
  _71 = call (`'-basic/1-lc$^6/1-6-'`/1), _384

  %% Unique:
  %%    _71
  _742 = succeeded:body _71
  br _742, ^742, ^1

742:
  %% Argument types:
  %%    _71 => list(0)
  %% Unique:
  %%    _71
  _729 = put_list `0`, _71
  %% Result type:
  %%    nonempty_list(0)
  %% Unique:
  %%    _729
  ret _729

741:
  %% mc_SUITE.erl:103
  %% Result type:
  %%    list(0)
  %% Aliased:
  %%    _384
  _730 = call (`'-basic/1-lc$^6/1-6-'`/1), _384

  %% Unique:
  %%    _730
  _747 = succeeded:body _730
  br _747, ^747, ^1

747:
  %% Result type:
  %%    list(0)
  %% Unique:
  %%    _730
  ret _730

740:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _753 = bif:'=:=' _69, `none`
  br _753, ^752, ^735

752:
  %% Result type:
  %%    nil()
  ret `[]`

735:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _380 = put_tuple `bad_generator`, _69

  %% Unique:
  %%    _380
  _732 = call (`erlang`:`error`/1), _380

  %% Aliased:
  %%    _732
  _754 = succeeded:body _732
  br ^1

1:
  _733 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _733
}

%% mc_SUITE.erl:100
%% Counter = 750
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^5/1-5-'`(_59) {
0:
  %% Aliased:
  %%    _59
  _734 = is_nonempty_list _59
  br _734, ^747, ^731

747:
  %% mc_SUITE.erl:100
  %% Aliased:
  %%    _59
  _368 = call (`erts_internal`:`mc_refill`/1), _59

  %% Aliased:
  %%    _368
  _732 = succeeded:body _368
  br _732, ^732, ^1

732:
  %% mc_SUITE.erl:100
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _368
  _726 = call (`'-basic/1-lc$^5/1-5-'`/1), _368

  %% Unique:
  %%    _726
  _733 = succeeded:body _726
  br _733, ^733, ^1

733:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _726
  ret _726

731:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _741 = bif:is_tuple _59
  br _741, ^741, ^735

741:
  %% Argument types:
  %%    _59 => {...}
  %% Aliased:
  %%    _59
  _742 = bif:tuple_size _59

  %% Argument types:
  %%    _742 => 0..16777215
  %% Unique:
  %%    _742
  _743 = bif:'=:=' _742, `3`
  br _743, ^740, ^730

740:
  %% Argument types:
  %%    _59 => {any(), any(), any()}
  %% Aliased:
  %%    _59
  _371 = get_tuple_element _59, `0`

  %% Argument types:
  %%    _59 => {any(), any(), any()}
  %% Aliased:
  %%    _59
  _370 = get_tuple_element _59, `1`

  %% Argument types:
  %%    _59 => {any(), any(), any()}
  %% Aliased:
  %%    _59
  _369 = get_tuple_element _59, `2`

  %% Aliased:
  %%    _370
  _738 = is_nonempty_list _370
  br _738, ^748, ^736

748:
  %% mc_SUITE.erl:100
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  _61 = call (`'-basic/1-lc$^5/1-5-'`/1), _369

  %% Unique:
  %%    _61
  _737 = succeeded:body _61
  br _737, ^737, ^1

737:
  %% Argument types:
  %%    _61 => list(any())
  %% Aliased:
  %%    _371
  %% Unique:
  %%    _61
  _724 = put_list _371, _61
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _724
  ret _724

736:
  %% mc_SUITE.erl:100
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  _725 = call (`'-basic/1-lc$^5/1-5-'`/1), _369

  %% Unique:
  %%    _725
  _739 = succeeded:body _725
  br _739, ^739, ^1

739:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _725
  ret _725

735:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _745 = bif:'=:=' _59, `none`
  br _745, ^744, ^730

744:
  %% Result type:
  %%    nil()
  ret `[]`

730:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _365 = put_tuple `bad_generator`, _59

  %% Unique:
  %%    _365
  _727 = call (`erlang`:`error`/1), _365

  %% Aliased:
  %%    _727
  _746 = succeeded:body _727
  br ^1

1:
  _728 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _728
}

%% mc_SUITE.erl:99
%% Counter = 749
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^4/1-4-'`(_49) {
0:
  %% Aliased:
  %%    _49
  _729 = is_nonempty_list _49
  br _729, ^746, ^726

746:
  %% mc_SUITE.erl:99
  %% Aliased:
  %%    _49
  _351 = call (`erts_internal`:`mc_refill`/1), _49

  %% Aliased:
  %%    _351
  _727 = succeeded:body _351
  br _727, ^727, ^1

727:
  %% mc_SUITE.erl:99
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _351
  _721 = call (`'-basic/1-lc$^4/1-4-'`/1), _351

  %% Unique:
  %%    _721
  _728 = succeeded:body _721
  br _728, ^728, ^1

728:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _721
  ret _721

726:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _740 = bif:is_tuple _49
  br _740, ^740, ^730

740:
  %% Argument types:
  %%    _49 => {...}
  %% Aliased:
  %%    _49
  _741 = bif:tuple_size _49

  %% Argument types:
  %%    _741 => 0..16777215
  %% Unique:
  %%    _741
  _742 = bif:'=:=' _741, `3`
  br _742, ^739, ^725

739:
  %% Argument types:
  %%    _49 => {any(), any(), any()}
  %% Aliased:
  %%    _49
  _354 = get_tuple_element _49, `0`

  %% Argument types:
  %%    _49 => {any(), any(), any()}
  %% Aliased:
  %%    _49
  _352 = get_tuple_element _49, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _354
  _735 = bif:is_tuple _354
  br _735, ^735, ^731

735:
  %% Argument types:
  %%    _354 => {...}
  %% Aliased:
  %%    _354
  _736 = bif:tuple_size _354

  %% Argument types:
  %%    _736 => 0..16777215
  %% Unique:
  %%    _736
  _737 = bif:'=:=' _736, `2`
  br _737, ^734, ^731

734:
  %% Argument types:
  %%    _49 => {any(), any(), any()}
  %% Aliased:
  %%    _49
  _353 = get_tuple_element _49, `1`

  %% Aliased:
  %%    _353
  _733 = is_nonempty_list _353
  br _733, ^733, ^731

733:
  %% Argument types:
  %%    _353 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _353
  _358 = get_hd _353

  %% mc_SUITE.erl:99
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _352
  _51 = call (`'-basic/1-lc$^4/1-4-'`/1), _352

  %% Unique:
  %%    _51
  _732 = succeeded:body _51
  br _732, ^732, ^1

732:
  %% Argument types:
  %%    _51 => list(any())
  %% Aliased:
  %%    _358
  %% Unique:
  %%    _51
  _719 = put_list _358, _51
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _719
  ret _719

731:
  %% mc_SUITE.erl:99
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _352
  _720 = call (`'-basic/1-lc$^4/1-4-'`/1), _352

  %% Unique:
  %%    _720
  _738 = succeeded:body _720
  br _738, ^738, ^1

738:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _720
  ret _720

730:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _744 = bif:'=:=' _49, `none`
  br _744, ^743, ^725

743:
  %% Result type:
  %%    nil()
  ret `[]`

725:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _348 = put_tuple `bad_generator`, _49

  %% Unique:
  %%    _348
  _722 = call (`erlang`:`error`/1), _348

  %% Aliased:
  %%    _722
  _745 = succeeded:body _722
  br ^1

1:
  _723 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _723
}

%% mc_SUITE.erl:98
%% Counter = 742
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^3/1-3-'`(_39) {
0:
  %% Aliased:
  %%    _39
  _724 = is_nonempty_list _39
  br _724, ^740, ^721

740:
  %% mc_SUITE.erl:98
  %% Aliased:
  %%    _39
  _336 = call (`erts_internal`:`mc_refill`/1), _39

  %% Aliased:
  %%    _336
  _722 = succeeded:body _336
  br _722, ^722, ^1

722:
  %% mc_SUITE.erl:98
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _336
  _716 = call (`'-basic/1-lc$^3/1-3-'`/1), _336

  %% Unique:
  %%    _716
  _723 = succeeded:body _716
  br _723, ^723, ^1

723:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _716
  ret _716

721:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _734 = bif:is_tuple _39
  br _734, ^734, ^725

734:
  %% Argument types:
  %%    _39 => {...}
  %% Aliased:
  %%    _39
  _735 = bif:tuple_size _39

  %% Argument types:
  %%    _735 => 0..16777215
  %% Unique:
  %%    _735
  _736 = bif:'=:=' _735, `3`
  br _736, ^733, ^720

733:
  %% Argument types:
  %%    _39 => {any(), any(), any()}
  %% Aliased:
  %%    _39
  _339 = get_tuple_element _39, `0`

  %% Argument types:
  %%    _39 => {any(), any(), any()}
  %% Aliased:
  %%    _39
  _338 = get_tuple_element _39, `1`

  %% Argument types:
  %%    _39 => {any(), any(), any()}
  %% Aliased:
  %%    _39
  _337 = get_tuple_element _39, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _339
  _729 = bif:is_tuple _339
  br _729, ^729, ^726

729:
  %% Argument types:
  %%    _339 => {...}
  %% Aliased:
  %%    _339
  _730 = bif:tuple_size _339

  %% Argument types:
  %%    _730 => 0..16777215
  %% Unique:
  %%    _730
  _731 = bif:'=:=' _730, `2`
  br _731, ^728, ^726

728:
  %% mc_SUITE.erl:98
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _337
  _41 = call (`'-basic/1-lc$^3/1-3-'`/1), _337

  %% Unique:
  %%    _41
  _727 = succeeded:body _41
  br _727, ^727, ^1

727:
  %% Argument types:
  %%    _41 => list(any())
  %% Aliased:
  %%    _338
  %% Unique:
  %%    _41
  _714 = put_list _338, _41
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _714
  ret _714

726:
  %% mc_SUITE.erl:98
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _337
  _715 = call (`'-basic/1-lc$^3/1-3-'`/1), _337

  %% Unique:
  %%    _715
  _732 = succeeded:body _715
  br _732, ^732, ^1

732:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _715
  ret _715

725:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _738 = bif:'=:=' _39, `none`
  br _738, ^737, ^720

737:
  %% Result type:
  %%    nil()
  ret `[]`

720:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _333 = put_tuple `bad_generator`, _39

  %% Unique:
  %%    _333
  _717 = call (`erlang`:`error`/1), _333

  %% Aliased:
  %%    _717
  _739 = succeeded:body _717
  br ^1

1:
  _718 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _718
}

%% mc_SUITE.erl:97
%% Counter = 734
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^2/1-2-'`(_29) {
0:
  %% Aliased:
  %%    _29
  _719 = is_nonempty_list _29
  br _719, ^732, ^716

732:
  %% mc_SUITE.erl:97
  %% Aliased:
  %%    _29
  _323 = call (`erts_internal`:`mc_refill`/1), _29

  %% Aliased:
  %%    _323
  _717 = succeeded:body _323
  br _717, ^717, ^1

717:
  %% mc_SUITE.erl:97
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _323
  _711 = call (`'-basic/1-lc$^2/1-2-'`/1), _323

  %% Unique:
  %%    _711
  _718 = succeeded:body _711
  br _718, ^718, ^1

718:
  %% Result type:
  %%    list(atom())
  %% Unique:
  %%    _711
  ret _711

716:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _726 = bif:is_tuple _29
  br _726, ^726, ^720

726:
  %% Argument types:
  %%    _29 => {...}
  %% Aliased:
  %%    _29
  _727 = bif:tuple_size _29

  %% Argument types:
  %%    _727 => 0..16777215
  %% Unique:
  %%    _727
  _728 = bif:'=:=' _727, `3`
  br _728, ^725, ^715

725:
  %% Argument types:
  %%    _29 => {any(), any(), any()}
  %% Aliased:
  %%    _29
  _326 = get_tuple_element _29, `0`

  %% Argument types:
  %%    _29 => {any(), any(), any()}
  %% Aliased:
  %%    _29
  _324 = get_tuple_element _29, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _326
  _722 = bif:is_atom _326
  br _722, ^722, ^721

722:
  %% mc_SUITE.erl:97
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _324
  _31 = call (`'-basic/1-lc$^2/1-2-'`/1), _324

  %% Unique:
  %%    _31
  _723 = succeeded:body _31
  br _723, ^723, ^1

723:
  %% Argument types:
  %%    _326 => atom()
  %%    _31 => list(atom())
  %% Unique:
  %%    _31, 
  %%    _326
  _709 = put_list _326, _31
  %% Result type:
  %%    nonempty_list(atom())
  %% Unique:
  %%    _709
  ret _709

721:
  %% mc_SUITE.erl:97
  %% Result type:
  %%    list(atom())
  %% Aliased:
  %%    _324
  _710 = call (`'-basic/1-lc$^2/1-2-'`/1), _324

  %% Unique:
  %%    _710
  _724 = succeeded:body _710
  br _724, ^724, ^1

724:
  %% Result type:
  %%    list(atom())
  %% Unique:
  %%    _710
  ret _710

720:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _730 = bif:'=:=' _29, `none`
  br _730, ^729, ^715

729:
  %% Result type:
  %%    nil()
  ret `[]`

715:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _29
  _320 = put_tuple `bad_generator`, _29

  %% Unique:
  %%    _320
  _712 = call (`erlang`:`error`/1), _320

  %% Aliased:
  %%    _712
  _731 = succeeded:body _712
  br ^1

1:
  _713 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _713
}

%% mc_SUITE.erl:93
%% Counter = 727
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^1/1-1-'`(_18) {
0:
  %% Aliased:
  %%    _18
  _714 = is_nonempty_list _18
  br _714, ^724, ^711

724:
  %% mc_SUITE.erl:93
  %% Aliased:
  %%    _18
  _309 = call (`erts_internal`:`mc_refill`/1), _18

  %% Aliased:
  %%    _309
  _712 = succeeded:body _309
  br _712, ^712, ^1

712:
  %% mc_SUITE.erl:93
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _309
  _706 = call (`'-basic/1-lc$^1/1-1-'`/1), _309

  %% Unique:
  %%    _706
  _713 = succeeded:body _706
  br _713, ^713, ^1

713:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _706
  ret _706

711:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _718 = bif:is_tuple _18
  br _718, ^718, ^715

718:
  %% Argument types:
  %%    _18 => {...}
  %% Aliased:
  %%    _18
  _719 = bif:tuple_size _18

  %% Argument types:
  %%    _719 => 0..16777215
  %% Unique:
  %%    _719
  _720 = bif:'=:=' _719, `3`
  br _720, ^725, ^710

725:
  %% Argument types:
  %%    _18 => {any(), any(), any()}
  %% Aliased:
  %%    _18
  _310 = get_tuple_element _18, `2`

  %% mc_SUITE.erl:93
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _310
  _705 = call (`'-basic/1-lc$^1/1-1-'`/1), _310

  %% Unique:
  %%    _705
  _716 = succeeded:body _705
  br _716, ^716, ^1

716:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _705
  ret _705

715:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _722 = bif:'=:=' _18, `none`
  br _722, ^721, ^710

721:
  %% Result type:
  %%    nil()
  ret `[]`

710:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _306 = put_tuple `bad_generator`, _18

  %% Unique:
  %%    _306
  _707 = call (`erlang`:`error`/1), _306

  %% Aliased:
  %%    _707
  _723 = succeeded:body _707
  br ^1

1:
  _708 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _708
}

%% mc_SUITE.erl:92
%% Counter = 723
%% bs_ensure_opt: true
function `mc_SUITE`:`'-basic/1-lc$^0/1-0-'`(_7) {
0:
  %% Aliased:
  %%    _7
  _710 = is_nonempty_list _7
  br _710, ^720, ^707

720:
  %% mc_SUITE.erl:92
  %% Aliased:
  %%    _7
  _296 = call (`erts_internal`:`mc_refill`/1), _7

  %% Aliased:
  %%    _296
  _708 = succeeded:body _296
  br _708, ^708, ^1

708:
  %% mc_SUITE.erl:92
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _296
  _702 = call (`'-basic/1-lc$^0/1-0-'`/1), _296

  %% Unique:
  %%    _702
  _709 = succeeded:body _702
  br _709, ^709, ^1

709:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _702
  ret _702

707:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _714 = bif:is_tuple _7
  br _714, ^714, ^711

714:
  %% Argument types:
  %%    _7 => {...}
  %% Aliased:
  %%    _7
  _715 = bif:tuple_size _7

  %% Argument types:
  %%    _715 => 0..16777215
  %% Unique:
  %%    _715
  _716 = bif:'=:=' _715, `3`
  br _716, ^721, ^706

721:
  %% Argument types:
  %%    _7 => {any(), any(), any()}
  %% Aliased:
  %%    _7
  _297 = get_tuple_element _7, `2`

  %% mc_SUITE.erl:92
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _297
  _701 = call (`'-basic/1-lc$^0/1-0-'`/1), _297

  %% Unique:
  %%    _701
  _712 = succeeded:body _701
  br _712, ^712, ^1

712:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _701
  ret _701

711:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _718 = bif:'=:=' _7, `none`
  br _718, ^717, ^706

717:
  %% Result type:
  %%    nil()
  ret `[]`

706:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _293 = put_tuple `bad_generator`, _7

  %% Unique:
  %%    _293
  _703 = call (`erlang`:`error`/1), _293

  %% Aliased:
  %%    _703
  _719 = succeeded:body _703
  br ^1

1:
  _704 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _704
}
