module beam_ssa_SUITE.
exports [{all,0},
         {beam_ssa_dead_crash,1},
         {calls,1},
         {combine_sw,1},
         {cover_ssa_dead,1},
         {coverage,1},
         {end_per_group,2},
         {end_per_suite,1},
         {gh_6599,1},
         {grab_bag,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {mapfoldl,0},
         {mapfoldl,1},
         {maps,1},
         {module_info,0},
         {module_info,1},
         {normalize,1},
         {recv,1},
         {redundant_br,1},
         {share_opt,1},
         {stack_init,1},
         {suite,0},
         {trycatch,1},
         {tuple_matching,1}].
attributes [].

%% beam_ssa_SUITE.erl:32
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% beam_ssa_SUITE.erl:34
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list('mapfoldl' | {'group', 'p'})
  ret `[mapfoldl,{group,p}]`
}

%% beam_ssa_SUITE.erl:38
%% Counter = 7
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`groups`() {
0:
  %% beam_ssa_SUITE.erl:39
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[tuple_matching,calls,recv,maps,cover_ssa_dead,combine_sw,share_opt,
  beam_ssa_dead_crash,stack_init,grab_bag,redundant_br,coverage,normalize,
  trycatch,gh_6599]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list(atom())}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list(atom())})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% beam_ssa_SUITE.erl:57
%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`init_per_suite`(_0) {
0:
  %% beam_ssa_SUITE.erl:58
  _2 = call (`test_lib`:`recompile`/1), `beam_ssa_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:61
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% beam_ssa_SUITE.erl:64
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% beam_ssa_SUITE.erl:67
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% beam_ssa_SUITE.erl:70
%% Counter = 247
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`calls`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  Ret = put_tuple `return`, `value`, _0

  %% Result type:
  %%    'ok'
  _4 = make_fun (`'-calls/1-fun-0-'`/1)

  %% beam_ssa_SUITE.erl:72
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _4, 
  %%    Ret
  _34 = call (`fun_call`/2), _4, Ret

  %% Aliased:
  %%    _34
  _75 = succeeded:body _34
  br _75, ^75, ^1

75:
  %% Argument types:
  %%    _34 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    Ret => {'return', 'value', any()}
  %% Aliased:
  %%    _34, 
  %%    Ret
  _78 = bif:'=:=' _34, Ret
  br _78, ^78, ^77

78:
  %% Result type:
  %%    'ok'
  _10 = make_fun (`'-calls/1-fun-1-'`/2)

  %% beam_ssa_SUITE.erl:73
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _10, 
  %%    Ret
  _35 = call (`apply_fun`/3), _10, `[a,b]`, Ret

  %% Aliased:
  %%    _35
  _79 = succeeded:body _35
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    _35 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    Ret => {'return', 'value', any()}
  %% Aliased:
  %%    _35, 
  %%    Ret
  _82 = bif:'=:=' _35, Ret
  br _82, ^82, ^81

82:
  %% beam_ssa_SUITE.erl:74
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    Ret
  _36 = call (`apply_mfa`/4), `test_lib`, `id`, `[anything]`, Ret

  %% Aliased:
  %%    _36
  _83 = succeeded:body _36
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _36 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    Ret => {'return', 'value', any()}
  %% Aliased:
  %%    _36, 
  %%    Ret
  _86 = bif:'=:=' _36, Ret
  br _86, ^241, ^85

241:
  br ^244

244:
  _90 = new_try_tag `'catch'`
  br _90, ^88, ^89

88:
  %% beam_ssa_SUITE.erl:75
  %% Result type:
  %%    none()
  _59 = call (`call_error`/0)

  %% Aliased:
  %%    _59
  _92 = succeeded:body _59
  br ^89

89:
  %% Unique:
  %%    _90
  _95 = landingpad `'catch'`, _90

  %% Aliased:
  %%    _95
  _93 = extract _95, `0`
  br ^87

87:
  %% Aliased:
  %%    _93
  %% Unique:
  %%    _90
  _13 = catch_end _90, _93

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _186 = is_tagged_tuple _13, `2`, `'EXIT'`
  br _186, ^183, ^98

183:
  %% Argument types:
  %%    _13 => {''EXIT'', any()}
  %% Aliased:
  %%    _13
  _37 = get_tuple_element _13, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _180 = is_tagged_tuple _37, `2`, `badarg`
  br _180, ^242, ^98

242:
  br ^245

245:
  _102 = new_try_tag `'catch'`
  br _102, ^100, ^101

100:
  %% beam_ssa_SUITE.erl:76
  %% Result type:
  %%    none()
  _61 = call (`call_error`/1), `42`

  %% Aliased:
  %%    _61
  _104 = succeeded:body _61
  br ^101

101:
  %% Unique:
  %%    _102
  _107 = landingpad `'catch'`, _102

  %% Aliased:
  %%    _107
  _105 = extract _107, `0`
  br ^99

99:
  %% Aliased:
  %%    _105
  %% Unique:
  %%    _102
  _15 = catch_end _102, _105

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _173 = is_tagged_tuple _15, `2`, `'EXIT'`
  br _173, ^170, ^110

170:
  %% Argument types:
  %%    _15 => {''EXIT'', any()}
  %% Aliased:
  %%    _15
  _41 = get_tuple_element _15, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _167 = is_tagged_tuple _41, `2`, `badarg`
  br _167, ^164, ^110

164:
  %% beam_ssa_SUITE.erl:77
  _45 = call (`start_it`/1), `[erlang,length,1,2,3,4,5]`

  %% Aliased:
  %%    _45
  _111 = succeeded:body _45
  br _111, ^111, ^1

111:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _162 = bif:'=:=' _45, `5`
  br _162, ^161, ^113

161:
  %% beam_ssa_SUITE.erl:79
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _18 = call (`id`/1), `true`

  %% Aliased:
  %%    _18
  _114 = succeeded:body _18
  br _114, ^114, ^1

114:
  %% beam_ssa_SUITE.erl:79
  %% Result type:
  %%    {bitstring(8), 'ok'}
  %% Aliased:
  %%    _18
  _46 = call (`cover_call`/1), _18

  %% Unique:
  %%    _46
  _115 = succeeded:body _46
  br _115, ^154, ^1

154:
  %% beam_ssa_SUITE.erl:80
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _20 = call (`id`/1), `false`

  %% Aliased:
  %%    _20
  _118 = succeeded:body _20
  br _118, ^118, ^1

118:
  %% beam_ssa_SUITE.erl:80
  %% Result type:
  %%    {bitstring(8), 'ok'}
  %% Aliased:
  %%    _20
  _49 = call (`cover_call`/1), _20

  %% Unique:
  %%    _49
  _119 = succeeded:body _49
  br _119, ^243, ^1

243:
  br ^246

246:
  _125 = new_try_tag `'catch'`
  br _125, ^123, ^124

123:
  %% beam_ssa_SUITE.erl:81
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _22 = call (`id`/1), `ok`

  %% Aliased:
  %%    _22
  _127 = succeeded:body _22
  br _127, ^127, ^124

127:
  %% beam_ssa_SUITE.erl:81
  %% Result type:
  %%    {bitstring(8), 'ok'}
  %% Aliased:
  %%    _22
  _63 = call (`cover_call`/1), _22

  %% Unique:
  %%    _63
  _128 = succeeded:body _63
  br _128, ^128, ^124

128:
  br ^122

124:
  %% Unique:
  %%    _125
  _131 = landingpad `'catch'`, _125

  %% Aliased:
  %%    _131
  _129 = extract _131, `0`
  br ^122

122:
  _132 = phi { _129, ^124 }, { _63, ^128 }

  %% Aliased:
  %%    _132
  %% Unique:
  %%    _125
  _23 = catch_end _125, _132

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _143 = is_tagged_tuple _23, `2`, `'EXIT'`
  br _143, ^140, ^134

140:
  %% Argument types:
  %%    _23 => {''EXIT'', any()}
  %% Aliased:
  %%    _23
  _52 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _137 = bif:is_tuple _52
  br _137, ^137, ^134

137:
  %% Argument types:
  %%    _52 => {...}
  %% Aliased:
  %%    _52
  _138 = bif:tuple_size _52

  %% Argument types:
  %%    _138 => 0..16777215
  %% Unique:
  %%    _138
  _139 = bif:'=:=' _138, `2`
  br _139, ^136, ^134

136:
  %% Argument types:
  %%    _52 => {any(), any()}
  %% Aliased:
  %%    _52
  _55 = get_tuple_element _52, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _55
  _135 = bif:'=:=' _55, `{case_clause,ok}`
  br _135, ^135, ^134

135:
  %% Result type:
  %%    'ok'
  ret `ok`

134:
  %% beam_ssa_SUITE.erl:81
  %% Aliased:
  %%    _23
  _64 = match_fail `badmatch`, _23

  %% Unique:
  %%    _64
  _146 = succeeded:body _64
  br ^1

113:
  %% beam_ssa_SUITE.erl:77
  %% Aliased:
  %%    _45
  _67 = match_fail `badmatch`, _45

  %% Unique:
  %%    _67
  _163 = succeeded:body _67
  br ^1

110:
  %% beam_ssa_SUITE.erl:76
  %% Aliased:
  %%    _15
  _68 = match_fail `badmatch`, _15

  %% Unique:
  %%    _68
  _176 = succeeded:body _68
  br ^1

98:
  %% beam_ssa_SUITE.erl:75
  %% Aliased:
  %%    _13
  _69 = match_fail `badmatch`, _13

  %% Unique:
  %%    _69
  _189 = succeeded:body _69
  br ^1

85:
  %% beam_ssa_SUITE.erl:74
  %% Aliased:
  %%    _36
  _70 = match_fail `badmatch`, _36

  %% Unique:
  %%    _70
  _190 = succeeded:body _70
  br ^1

81:
  %% beam_ssa_SUITE.erl:73
  %% Aliased:
  %%    _35
  _71 = match_fail `badmatch`, _35

  %% Unique:
  %%    _71
  _191 = succeeded:body _71
  br ^1

77:
  %% beam_ssa_SUITE.erl:72
  %% Aliased:
  %%    _34
  _72 = match_fail `badmatch`, _34

  %% Unique:
  %%    _72
  _192 = succeeded:body _72
  br ^1

1:
  _73 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _73
}

%% beam_ssa_SUITE.erl:85
%% Counter = 7
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_) -> 'ok')
%%    _1 =>
%%     {'return', 'value', any()}
function `beam_ssa_SUITE`:`fun_call`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:86
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  X = call (`id`/1), _1

  %% Aliased:
  %%    X
  _5 = succeeded:body X
  br _5, ^5, ^1

5:
  %% beam_ssa_SUITE.erl:87
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-calls/1-fun-0-'`/1) => fun((_) -> 'ok')
  _2 = call (`'-calls/1-fun-0-'`/1), `42`

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    X
  ret X

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:90
%% Counter = 8
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _) -> 'ok')
%%    _1 =>
%%     nonempty_list('a' | 'b')
%%    _2 =>
%%     {'return', 'value', any()}
function `beam_ssa_SUITE`:`apply_fun`(_0, _1, _2) {
0:
  %% beam_ssa_SUITE.erl:91
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _2
  X = call (`id`/1), _2

  %% Aliased:
  %%    X
  _6 = succeeded:body X
  br _6, ^6, ^1

6:
  %% beam_ssa_SUITE.erl:92
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  _3 = call (`erlang`:`apply`/2), _0, _1

  %% Aliased:
  %%    _3
  _7 = succeeded:body _3
  br _7, ^7, ^1

7:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    X
  ret X

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% beam_ssa_SUITE.erl:95
%% Counter = 9
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'test_lib'
%%    _1 =>
%%     'id'
%%    _2 =>
%%     nonempty_list('anything')
%%    _3 =>
%%     {'return', 'value', any()}
function `beam_ssa_SUITE`:`apply_mfa`(_0, _1, _2, _3) {
0:
  %% beam_ssa_SUITE.erl:96
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _3
  X = call (`id`/1), _3

  %% Aliased:
  %%    X
  _7 = succeeded:body X
  br _7, ^7, ^1

7:
  %% beam_ssa_SUITE.erl:97
  %% Unique:
  %%    _2
  _4 = call (`erlang`:`apply`/3), `test_lib`, `id`, _2

  %% Aliased:
  %%    _4
  _8 = succeeded:body _4
  br _8, ^8, ^1

8:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    X
  ret X

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% beam_ssa_SUITE.erl:100
%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`call_error`() {
0:
  %% beam_ssa_SUITE.erl:101
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:104
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     42
function `beam_ssa_SUITE`:`call_error`(_0) {
0:
  %% beam_ssa_SUITE.erl:105
  _2 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:108
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list('erlang' | 'length' | 1..5)
function `beam_ssa_SUITE`:`start_it`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list('erlang' | 'length' | 1..5)
  %% Unique:
  %%    _0
  _6 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_list('erlang' | 'length' | 1..5)
  %% Unique:
  %%    _0
  _5 = get_tl _0

  %% Unique:
  %%    _5
  _20 = is_nonempty_list _5
  br _20, ^20, ^18

20:
  %% Argument types:
  %%    _5 => nonempty_list('erlang' | 'length' | 1..5)
  %% Unique:
  %%    _5
  _10 = get_hd _5

  %% Argument types:
  %%    _5 => nonempty_list('erlang' | 'length' | 1..5)
  %% Unique:
  %%    _5
  _9 = get_tl _5

  %% beam_ssa_SUITE.erl:110
  %% Unique:
  %%    _9
  _11 = call (_6:_10/1), _9

  %% Aliased:
  %%    _11
  _19 = succeeded:body _11
  br _19, ^19, ^1

19:
  %% Aliased:
  %%    _11
  ret _11

18:
  %% beam_ssa_SUITE.erl:109
  %% Unique:
  %%    _0
  _12 = match_fail `case_clause`, _0

  %% Unique:
  %%    _12
  _22 = succeeded:body _12
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% beam_ssa_SUITE.erl:113
%% Counter = 20
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`cover_call`(_0) {
0:
  %% beam_ssa_SUITE.erl:114
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _7 = bif:'=/=' _0, `ok`

  %% beam_ssa_SUITE.erl:116
  _3 = call (`erlang`:`term_to_binary`/1), `ok`
  br _7, ^15, ^14

15:
  %% Argument types:
  %%    _3 => bitstring(8)
  %% Aliased:
  %%    _3
  _18 = put_tuple _3, `ok`
  %% Result type:
  %%    {bitstring(8), 'ok'}
  %% Unique:
  %%    _18
  ret _18

14:
  %% beam_ssa_SUITE.erl:117
  _8 = match_fail `case_clause`, `ok`

  %% Unique:
  %%    _8
  _16 = succeeded:body _8
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% beam_ssa_SUITE.erl:123
%% Counter = 32
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tuple_matching`(_0) {
0:
  %% beam_ssa_SUITE.erl:124
  %% Result type:
  %%    {'ok', 42}
  _7 = call (`do_tuple_matching`/1), `{tag,42}`

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br _13, ^13, ^1

13:
  %% beam_ssa_SUITE.erl:126
  %% Result type:
  %%    'false' | 'true'
  _4 = call (`is_two_tuple`/1), `{a,b}`

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br _14, ^14, ^1

14:
  br _4, ^29, ^16

29:
  %% beam_ssa_SUITE.erl:127
  %% Result type:
  %%    'false' | 'true'
  _5 = call (`is_two_tuple`/1), `{a,b,c}`

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br _17, ^17, ^1

17:
  br _5, ^19, ^26

19:
  %% beam_ssa_SUITE.erl:127
  _9 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _9
  _28 = succeeded:body _9
  br ^1

26:
  %% beam_ssa_SUITE.erl:128
  %% Result type:
  %%    'false'
  _6 = call (`is_two_tuple`/1), `atom`

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br _20, ^23, ^1

23:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% beam_ssa_SUITE.erl:126
  _10 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _10
  _31 = succeeded:body _10
  br ^1

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% beam_ssa_SUITE.erl:132
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'tag', 42}
function `beam_ssa_SUITE`:`do_tuple_matching`(_0) {
0:
  %% beam_ssa_SUITE.erl:133
  %% Result type:
  %%    {'ok', 42}
  Res = call (`do_tuple_matching_1`/1), _0

  %% Unique:
  %%    Res
  _13 = succeeded:body Res
  br _13, ^13, ^1

13:
  %% beam_ssa_SUITE.erl:134
  %% Result type:
  %%    {'ok', 42}
  _7 = call (`do_tuple_matching_2`/1), `{tag,42}`

  %% Unique:
  %%    _7
  _14 = succeeded:body _7
  br _14, ^17, ^1

17:
  %% beam_ssa_SUITE.erl:135
  %% Result type:
  %%    {'ok', 42}
  _8 = call (`do_tuple_matching_3`/1), `{tag,42}`

  %% Unique:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^21, ^1

21:
  %% Result type:
  %%    {'ok', 42}
  %% Unique:
  %%    Res
  ret Res

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% beam_ssa_SUITE.erl:138
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'tag', 42}
function `beam_ssa_SUITE`:`do_tuple_matching_1`(_0) {
0:
  %% Result type:
  %%    {'ok', 42}
  ret `{ok,42}`
}

%% beam_ssa_SUITE.erl:141
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'tag', 42}
function `beam_ssa_SUITE`:`do_tuple_matching_2`(_0) {
0:
  %% Result type:
  %%    {'ok', 42}
  ret `{ok,42}`
}

%% beam_ssa_SUITE.erl:148
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'tag', 42}
function `beam_ssa_SUITE`:`do_tuple_matching_3`(_0) {
0:
  %% beam_ssa_SUITE.erl:152
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _5 = call (`id`/1), `2`

  %% Aliased:
  %%    _5
  _18 = succeeded:body _5
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _5 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _5
  _23 = bif:'=:=' _5, `2`
  br _23, ^21, ^20

21:
  %% Result type:
  %%    {'ok', 42}
  ret `{ok,42}`

20:
  %% beam_ssa_SUITE.erl:152
  %% Aliased:
  %%    _5
  _7 = match_fail `badmatch`, _5

  %% Unique:
  %%    _7
  _24 = succeeded:body _7
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% beam_ssa_SUITE.erl:156
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'atom' | {'a', 'b'} | {'a', 'b', 'c'}
function `beam_ssa_SUITE`:`is_two_tuple`(_0) {
0:
  %% beam_ssa_SUITE.erl:157
  %% Argument types:
  %%    _0 => 'atom' | {'a', 'b'} | {'a', 'b', 'c'}
  %% Unique:
  %%    _0
  _2 = bif:is_tuple _0
  br _2, ^9, ^8

9:
  %% beam_ssa_SUITE.erl:159
  %% Argument types:
  %%    _0 => {'a', 'b'} | {'a', 'b', 'c'}
  %% Unique:
  %%    _0
  _1 = bif:tuple_size _0

  %% beam_ssa_SUITE.erl:159
  %% Argument types:
  %%    _1 => 2..16777215
  %% Unique:
  %%    _1
  _3 = bif:'=:=' _1, `2`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _3
  ret _3

8:
  %% Result type:
  %%    'false'
  ret `false`
}

%% beam_ssa_SUITE.erl:165
%% Counter = 326
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`recv`(_0) {
0:
  %% beam_ssa_SUITE.erl:166
  %% Argument types:
  %%    
  Parent = bif:self

  %% Aliased:
  %%    Parent
  Succ = make_fun (`'-recv/1-fun-0-'`/1), Parent

  %% beam_ssa_SUITE.erl:170
  %% Aliased:
  %%    Succ
  _4 = call (`erlang`:`spawn_monitor`/1), Succ

  %% Aliased:
  %%    _4
  _152 = succeeded:body _4
  br _152, ^152, ^1

152:
  %% beam_ssa_SUITE.erl:170
  %% Aliased:
  %%    _4
  _65 = call (`sync_wait_mon`/2), _4, `infinity`

  %% Aliased:
  %%    _65
  _153 = succeeded:body _65
  br _153, ^153, ^1

153:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _303 = bif:'=:=' _65, `{result,42}`
  br _303, ^303, ^155

303:
  %% Result type:
  %%    none()
  Down = make_fun (`'-recv/1-fun-1-'`/0)

  %% beam_ssa_SUITE.erl:173
  %% Aliased:
  %%    Down
  _7 = call (`erlang`:`spawn_monitor`/1), Down

  %% Aliased:
  %%    _7
  _156 = succeeded:body _7
  br _156, ^156, ^1

156:
  %% beam_ssa_SUITE.erl:173
  %% Aliased:
  %%    _7
  _66 = call (`sync_wait_mon`/2), _7, `infinity`

  %% Aliased:
  %%    _66
  _157 = succeeded:body _66
  br _157, ^157, ^1

157:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _301 = bif:'=:=' _66, `{error,down}`
  br _301, ^301, ^159

301:
  %% Result type:
  %%    'ok'
  Exit = make_fun (`'-recv/1-fun-3-'`/0)

  %% beam_ssa_SUITE.erl:180
  %% Aliased:
  %%    Exit
  _12 = call (`erlang`:`spawn_monitor`/1), Exit

  %% Aliased:
  %%    _12
  _160 = succeeded:body _12
  br _160, ^160, ^1

160:
  %% beam_ssa_SUITE.erl:180
  %% Aliased:
  %%    _12
  _68 = call (`sync_wait_mon`/2), _12, `infinity`

  %% Aliased:
  %%    _68
  _161 = succeeded:body _68
  br _161, ^161, ^1

161:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _68
  _299 = bif:'=:=' _68, `{error,kill_me}`
  br _299, ^299, ^163

299:
  %% Result type:
  %%    'ok'
  Timeout = make_fun (`'-recv/1-fun-4-'`/0)

  %% beam_ssa_SUITE.erl:183
  %% Aliased:
  %%    Timeout
  _15 = call (`erlang`:`spawn_monitor`/1), Timeout

  %% Aliased:
  %%    _15
  _164 = succeeded:body _15
  br _164, ^164, ^1

164:
  %% beam_ssa_SUITE.erl:183
  %% Aliased:
  %%    _15
  _70 = call (`sync_wait_mon`/2), _15, `0`

  %% Aliased:
  %%    _70
  _165 = succeeded:body _70
  br _165, ^165, ^1

165:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _297 = bif:'=:=' _70, `{error,timeout}`
  br _297, ^297, ^167

297:
  %% Argument types:
  %%    Parent => pid()
  %% Unique:
  %%    Parent
  _71 = put_tuple `a`, Parent

  %% Argument types:
  %%    _71 => {'a', pid()}
  %% Unique:
  %%    _71
  _72 = put_tuple `reporter_state`, _71, `{run_config,0}`

  %% beam_ssa_SUITE.erl:186
  %% Result type:
  %%    {'a', pid()}
  %% Unique:
  %%    _72
  _73 = call (`reporter_loop`/1), _72

  %% Unique:
  %%    _73
  _168 = succeeded:body _73
  br _168, ^290, ^1

290:
  %% Argument types:
  %%    _73 => {'a', pid()}
  %% Unique:
  %%    _73
  _74 = get_tuple_element _73, `1`

  %% Argument types:
  %%    _74 => pid()
  %%    Parent => pid()
  %% Unique:
  %%    _74, 
  %%    Parent
  _171 = bif:'=:=' _74, Parent
  br _171, ^171, ^170

171:
  %% beam_ssa_SUITE.erl:190
  _115 = call (`bad_sink`/0)

  %% Aliased:
  %%    _115
  _172 = succeeded:body _115
  br _172, ^172, ^1

172:
  %% beam_ssa_SUITE.erl:193
  %% Argument types:
  %%    
  _18 = bif:self

  %% beam_ssa_SUITE.erl:193
  %% Unique:
  %%    _18
  _116 = call (`erlang`:`'!'`/2), _18, `1`

  %% Aliased:
  %%    _116
  _173 = succeeded:body _116
  br _173, ^173, ^1

173:
  %% beam_ssa_SUITE.erl:194
  %% Result type:
  %%    'a' | 'b'
  _76 = call (`tricky_recv_1`/0)

  %% Unique:
  %%    _76
  _174 = succeeded:body _76
  br _174, ^174, ^1

174:
  %% Argument types:
  %%    _76 => 'a' | 'b'
  %% Unique:
  %%    _76
  _288 = bif:'=:=' _76, `a`
  br _288, ^287, ^176

287:
  %% beam_ssa_SUITE.erl:195
  %% Argument types:
  %%    
  _20 = bif:self

  %% beam_ssa_SUITE.erl:195
  %% Unique:
  %%    _20
  _117 = call (`erlang`:`'!'`/2), _20, `2`

  %% Aliased:
  %%    _117
  _177 = succeeded:body _117
  br _177, ^177, ^1

177:
  %% beam_ssa_SUITE.erl:196
  %% Result type:
  %%    'a' | 'b'
  _77 = call (`tricky_recv_1`/0)

  %% Unique:
  %%    _77
  _178 = succeeded:body _77
  br _178, ^178, ^1

178:
  %% Argument types:
  %%    _77 => 'a' | 'b'
  %% Unique:
  %%    _77
  _285 = bif:'=:=' _77, `b`
  br _285, ^284, ^180

284:
  %% beam_ssa_SUITE.erl:199
  %% Argument types:
  %%    
  _22 = bif:self

  %% beam_ssa_SUITE.erl:199
  %% Unique:
  %%    _22
  _118 = call (`erlang`:`'!'`/2), _22, `1`

  %% Aliased:
  %%    _118
  _181 = succeeded:body _118
  br _181, ^181, ^1

181:
  %% beam_ssa_SUITE.erl:200
  %% Result type:
  %%    {1, 'no' | 'yes'} | {2, ''maybe''}
  _78 = call (`tricky_recv_2`/0)

  %% Unique:
  %%    _78
  _182 = succeeded:body _78
  br _182, ^182, ^1

182:
  %% Argument types:
  %%    _78 => {1, 'no' | 'yes'} | {2, ''maybe''}
  %% Unique:
  %%    _78
  _282 = bif:'=:=' _78, `{1,yes}`
  br _282, ^282, ^184

282:
  %% beam_ssa_SUITE.erl:201
  %% Argument types:
  %%    
  _24 = bif:self

  %% beam_ssa_SUITE.erl:201
  %% Unique:
  %%    _24
  _119 = call (`erlang`:`'!'`/2), _24, `2`

  %% Aliased:
  %%    _119
  _185 = succeeded:body _119
  br _185, ^185, ^1

185:
  %% beam_ssa_SUITE.erl:202
  %% Result type:
  %%    {1, 'no' | 'yes'} | {2, ''maybe''}
  _79 = call (`tricky_recv_2`/0)

  %% Unique:
  %%    _79
  _186 = succeeded:body _79
  br _186, ^186, ^1

186:
  %% Argument types:
  %%    _79 => {1, 'no' | 'yes'} | {2, ''maybe''}
  %% Unique:
  %%    _79
  _280 = bif:'=:=' _79, `{2,'maybe'}`
  br _280, ^280, ^188

280:
  %% Result type:
  %%    none()
  _26 = make_fun (`recv_after_inf_in_try`/0)

  %% beam_ssa_SUITE.erl:205
  %% Aliased:
  %%    _26
  Pid = call (`erlang`:`spawn`/1), _26

  %% Aliased:
  %%    Pid
  _189 = succeeded:body Pid
  br _189, ^189, ^1

189:
  %% beam_ssa_SUITE.erl:206
  %% Aliased:
  %%    Pid
  _120 = call (`erlang`:`exit`/2), Pid, `done`

  %% Aliased:
  %%    _120
  _190 = succeeded:body _120
  br _190, ^190, ^1

190:
  %% beam_ssa_SUITE.erl:209
  %% Argument types:
  %%    
  _29 = bif:self

  %% Argument types:
  %%    _29 => pid()
  %% Unique:
  %%    _29
  _80 = put_tuple _29, `r0`

  %% Argument types:
  %%    _80 => {pid(), 'r0'}
  %% Unique:
  %%    _80
  _81 = put_tuple _80, `{1,42,"name"}`

  %% beam_ssa_SUITE.erl:209
  %% Unique:
  %%    _29, 
  %%    _81
  _121 = call (`erlang`:`'!'`/2), _29, _81

  %% Aliased:
  %%    _121
  _191 = succeeded:body _121
  br _191, ^191, ^1

191:
  %% beam_ssa_SUITE.erl:210
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _82 = call (`tricky_recv_3`/0)

  %% Aliased:
  %%    _82
  _192 = succeeded:body _82
  br _192, ^192, ^1

192:
  %% Argument types:
  %%    _82 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _82
  _276 = bif:is_tuple _82
  br _276, ^276, ^194

276:
  %% Argument types:
  %%    _82 => {any(), any(), ...}
  %% Aliased:
  %%    _82
  _277 = bif:tuple_size _82

  %% Argument types:
  %%    _277 => 2..16777215
  %% Unique:
  %%    _277
  _278 = bif:'=:=' _277, `3`
  br _278, ^275, ^194

275:
  %% Argument types:
  %%    _82 => {any(), any(), any()}
  %% Aliased:
  %%    _82
  _84 = get_tuple_element _82, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84
  _274 = bif:'=:=' _84, `r0`
  br _274, ^273, ^194

273:
  %% Argument types:
  %%    _82 => {any(), 'r0', any()}
  %% Aliased:
  %%    _82
  _83 = get_tuple_element _82, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _83
  _272 = bif:'=:=' _83, `[<<0,0,0,1,1,42>>,"name",0]`
  br _272, ^272, ^194

272:
  %% Argument types:
  %%    _82 => {any(), 'r0', nonempty_list(nonempty_list(97..110) | 0 | bitstring(16))}
  %% Aliased:
  %%    _82
  _85 = get_tuple_element _82, `0`

  %% Argument types:
  %%    Parent => pid()
  %% Aliased:
  %%    _85
  %% Unique:
  %%    Parent
  _195 = bif:'=:=' _85, Parent
  br _195, ^195, ^194

195:
  %% beam_ssa_SUITE.erl:211
  %% Argument types:
  %%    
  _32 = bif:self

  %% Argument types:
  %%    _32 => pid()
  %% Unique:
  %%    _32
  _86 = put_tuple _32, `r1`

  %% Argument types:
  %%    _86 => {pid(), 'r1'}
  %% Unique:
  %%    _86
  _87 = put_tuple _86, `{2,99,<<"data">>}`

  %% beam_ssa_SUITE.erl:211
  %% Unique:
  %%    _32, 
  %%    _87
  _122 = call (`erlang`:`'!'`/2), _32, _87

  %% Aliased:
  %%    _122
  _196 = succeeded:body _122
  br _196, ^196, ^1

196:
  %% beam_ssa_SUITE.erl:212
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _88 = call (`tricky_recv_3`/0)

  %% Aliased:
  %%    _88
  _197 = succeeded:body _88
  br _197, ^197, ^1

197:
  %% Argument types:
  %%    _88 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _88
  _268 = bif:is_tuple _88
  br _268, ^268, ^199

268:
  %% Argument types:
  %%    _88 => {any(), any(), ...}
  %% Aliased:
  %%    _88
  _269 = bif:tuple_size _88

  %% Argument types:
  %%    _269 => 2..16777215
  %% Unique:
  %%    _269
  _270 = bif:'=:=' _269, `3`
  br _270, ^267, ^199

267:
  %% Argument types:
  %%    _88 => {any(), any(), any()}
  %% Aliased:
  %%    _88
  _90 = get_tuple_element _88, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _90
  _266 = bif:'=:=' _90, `r1`
  br _266, ^265, ^199

265:
  %% Argument types:
  %%    _88 => {any(), 'r1', any()}
  %% Aliased:
  %%    _88
  _89 = get_tuple_element _88, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _264 = bif:'=:=' _89, `<<0,0,0,1,2,99,100,97,116,97>>`
  br _264, ^264, ^199

264:
  %% Argument types:
  %%    _88 => {any(), 'r1', bitstring(16)}
  %% Aliased:
  %%    _88
  _91 = get_tuple_element _88, `0`

  %% Argument types:
  %%    Parent => pid()
  %% Aliased:
  %%    _91
  %% Unique:
  %%    Parent
  _200 = bif:'=:=' _91, Parent
  br _200, ^200, ^199

200:
  %% beam_ssa_SUITE.erl:215
  %% Argument types:
  %%    
  _35 = bif:self

  %% Argument types:
  %%    _35 => pid()
  %% Unique:
  %%    _35
  _92 = put_list _35, `[r0]`

  %% Argument types:
  %%    _92 => nonempty_list('r0' | pid())
  %% Unique:
  %%    _92
  _93 = put_tuple _92, `{1,42,"name"}`

  %% beam_ssa_SUITE.erl:215
  %% Unique:
  %%    _35, 
  %%    _93
  _123 = call (`erlang`:`'!'`/2), _35, _93

  %% Aliased:
  %%    _123
  _201 = succeeded:body _123
  br _201, ^201, ^1

201:
  %% beam_ssa_SUITE.erl:216
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _94 = call (`tricky_recv_4`/0)

  %% Aliased:
  %%    _94
  _202 = succeeded:body _94
  br _202, ^202, ^1

202:
  %% Argument types:
  %%    _94 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _94
  _260 = bif:is_tuple _94
  br _260, ^260, ^204

260:
  %% Argument types:
  %%    _94 => {any(), any(), ...}
  %% Aliased:
  %%    _94
  _261 = bif:tuple_size _94

  %% Argument types:
  %%    _261 => 2..16777215
  %% Unique:
  %%    _261
  _262 = bif:'=:=' _261, `3`
  br _262, ^259, ^204

259:
  %% Argument types:
  %%    _94 => {any(), any(), any()}
  %% Aliased:
  %%    _94
  _96 = get_tuple_element _94, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _258 = bif:'=:=' _96, `r0`
  br _258, ^257, ^204

257:
  %% Argument types:
  %%    _94 => {any(), 'r0', any()}
  %% Aliased:
  %%    _94
  _95 = get_tuple_element _94, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _256 = bif:'=:=' _95, `[<<0,0,0,1,1,42>>,"name",0]`
  br _256, ^256, ^204

256:
  %% Argument types:
  %%    _94 => {any(), 'r0', nonempty_list(nonempty_list(97..110) | 0 | bitstring(16))}
  %% Aliased:
  %%    _94
  _97 = get_tuple_element _94, `0`

  %% Argument types:
  %%    Parent => pid()
  %% Aliased:
  %%    _97
  %% Unique:
  %%    Parent
  _205 = bif:'=:=' _97, Parent
  br _205, ^205, ^204

205:
  %% beam_ssa_SUITE.erl:217
  %% Argument types:
  %%    
  _38 = bif:self

  %% Argument types:
  %%    _38 => pid()
  %% Unique:
  %%    _38
  _98 = put_list _38, `[r1]`

  %% Argument types:
  %%    _98 => nonempty_list('r1' | pid())
  %% Unique:
  %%    _98
  _99 = put_tuple _98, `{2,99,<<"data">>}`

  %% beam_ssa_SUITE.erl:217
  %% Unique:
  %%    _38, 
  %%    _99
  _124 = call (`erlang`:`'!'`/2), _38, _99

  %% Aliased:
  %%    _124
  _206 = succeeded:body _124
  br _206, ^206, ^1

206:
  %% beam_ssa_SUITE.erl:218
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _100 = call (`tricky_recv_4`/0)

  %% Aliased:
  %%    _100
  _207 = succeeded:body _100
  br _207, ^207, ^1

207:
  %% Argument types:
  %%    _100 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _100
  _252 = bif:is_tuple _100
  br _252, ^252, ^209

252:
  %% Argument types:
  %%    _100 => {any(), any(), ...}
  %% Aliased:
  %%    _100
  _253 = bif:tuple_size _100

  %% Argument types:
  %%    _253 => 2..16777215
  %% Unique:
  %%    _253
  _254 = bif:'=:=' _253, `3`
  br _254, ^251, ^209

251:
  %% Argument types:
  %%    _100 => {any(), any(), any()}
  %% Aliased:
  %%    _100
  _102 = get_tuple_element _100, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102
  _250 = bif:'=:=' _102, `r1`
  br _250, ^249, ^209

249:
  %% Argument types:
  %%    _100 => {any(), 'r1', any()}
  %% Aliased:
  %%    _100
  _101 = get_tuple_element _100, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _101
  _248 = bif:'=:=' _101, `<<0,0,0,1,2,99,100,97,116,97>>`
  br _248, ^248, ^209

248:
  %% Argument types:
  %%    _100 => {any(), 'r1', bitstring(16)}
  %% Aliased:
  %%    _100
  _103 = get_tuple_element _100, `0`

  %% Argument types:
  %%    Parent => pid()
  %% Aliased:
  %%    _103
  %% Unique:
  %%    Parent
  _210 = bif:'=:=' _103, Parent
  br _210, ^210, ^209

210:
  %% beam_ssa_SUITE.erl:221
  %% Argument types:
  %%    
  _40 = bif:self

  %% beam_ssa_SUITE.erl:221
  %% Unique:
  %%    _40
  _125 = call (`erlang`:`'!'`/2), _40, `1`

  %% Aliased:
  %%    _125
  _211 = succeeded:body _125
  br _211, ^211, ^1

211:
  %% beam_ssa_SUITE.erl:222
  %% Result type:
  %%    'a' | 'b' | 'c'
  _104 = call (`tricky_recv_5`/0)

  %% Unique:
  %%    _104
  _212 = succeeded:body _104
  br _212, ^212, ^1

212:
  %% Argument types:
  %%    _104 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _104
  _246 = bif:'=:=' _104, `a`
  br _246, ^245, ^214

245:
  %% beam_ssa_SUITE.erl:223
  %% Argument types:
  %%    
  _42 = bif:self

  %% beam_ssa_SUITE.erl:223
  %% Unique:
  %%    _42
  _126 = call (`erlang`:`'!'`/2), _42, `2`

  %% Aliased:
  %%    _126
  _215 = succeeded:body _126
  br _215, ^215, ^1

215:
  %% beam_ssa_SUITE.erl:224
  %% Result type:
  %%    'a' | 'b' | 'c'
  _105 = call (`tricky_recv_5`/0)

  %% Unique:
  %%    _105
  _216 = succeeded:body _105
  br _216, ^216, ^1

216:
  %% Argument types:
  %%    _105 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _105
  _243 = bif:'=:=' _105, `b`
  br _243, ^242, ^218

242:
  %% beam_ssa_SUITE.erl:227
  %% Argument types:
  %%    
  _44 = bif:self

  %% beam_ssa_SUITE.erl:227
  %% Unique:
  %%    _44
  _127 = call (`erlang`:`'!'`/2), _44, `1`

  %% Aliased:
  %%    _127
  _219 = succeeded:body _127
  br _219, ^219, ^1

219:
  %% beam_ssa_SUITE.erl:228
  %% Result type:
  %%    'a' | 'b' | 'c'
  _106 = call (`tricky_recv_5a`/0)

  %% Unique:
  %%    _106
  _220 = succeeded:body _106
  br _220, ^220, ^1

220:
  %% Argument types:
  %%    _106 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _106
  _240 = bif:'=:=' _106, `a`
  br _240, ^239, ^222

239:
  %% beam_ssa_SUITE.erl:229
  %% Argument types:
  %%    
  _46 = bif:self

  %% beam_ssa_SUITE.erl:229
  %% Unique:
  %%    _46
  _128 = call (`erlang`:`'!'`/2), _46, `2`

  %% Aliased:
  %%    _128
  _223 = succeeded:body _128
  br _223, ^223, ^1

223:
  %% beam_ssa_SUITE.erl:230
  %% Result type:
  %%    'a' | 'b' | 'c'
  _107 = call (`tricky_recv_5a`/0)

  %% Unique:
  %%    _107
  _224 = succeeded:body _107
  br _224, ^224, ^1

224:
  %% Argument types:
  %%    _107 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _107
  _237 = bif:'=:=' _107, `b`
  br _237, ^236, ^226

236:
  %% beam_ssa_SUITE.erl:231
  %% Argument types:
  %%    
  _48 = bif:self

  %% beam_ssa_SUITE.erl:231
  %% Unique:
  %%    _48
  _129 = call (`erlang`:`'!'`/2), _48, `any`

  %% Aliased:
  %%    _129
  _227 = succeeded:body _129
  br _227, ^227, ^1

227:
  %% beam_ssa_SUITE.erl:232
  %% Result type:
  %%    'a' | 'b' | 'c'
  _108 = call (`tricky_recv_5a`/0)

  %% Unique:
  %%    _108
  _228 = succeeded:body _108
  br _228, ^228, ^1

228:
  %% Argument types:
  %%    _108 => 'a' | 'b' | 'c'
  %% Unique:
  %%    _108
  _234 = bif:'=:=' _108, `b`
  br _234, ^233, ^230

233:
  %% beam_ssa_SUITE.erl:235
  %% Result type:
  %%    'ok' | float()
  _130 = call (`tricky_recv_6`/0)

  %% Unique:
  %%    _130
  _231 = succeeded:body _130
  br _231, ^231, ^1

231:
  %% beam_ssa_SUITE.erl:237
  %% Result type:
  %%    'ok'
  _131 = call (`recv_coverage`/0)

  %% Unique:
  %%    _131
  _232 = succeeded:body _131
  br _232, ^325, ^1

325:
  ret _131

230:
  %% beam_ssa_SUITE.erl:232
  %% Unique:
  %%    _108
  _132 = match_fail `badmatch`, _108

  %% Unique:
  %%    _132
  _235 = succeeded:body _132
  br ^1

226:
  %% beam_ssa_SUITE.erl:230
  %% Unique:
  %%    _107
  _133 = match_fail `badmatch`, _107

  %% Unique:
  %%    _133
  _238 = succeeded:body _133
  br ^1

222:
  %% beam_ssa_SUITE.erl:228
  %% Unique:
  %%    _106
  _134 = match_fail `badmatch`, _106

  %% Unique:
  %%    _134
  _241 = succeeded:body _134
  br ^1

218:
  %% beam_ssa_SUITE.erl:224
  %% Unique:
  %%    _105
  _135 = match_fail `badmatch`, _105

  %% Unique:
  %%    _135
  _244 = succeeded:body _135
  br ^1

214:
  %% beam_ssa_SUITE.erl:222
  %% Unique:
  %%    _104
  _136 = match_fail `badmatch`, _104

  %% Unique:
  %%    _136
  _247 = succeeded:body _136
  br ^1

209:
  %% beam_ssa_SUITE.erl:218
  %% Aliased:
  %%    _100
  _137 = match_fail `badmatch`, _100

  %% Unique:
  %%    _137
  _255 = succeeded:body _137
  br ^1

204:
  %% beam_ssa_SUITE.erl:216
  %% Aliased:
  %%    _94
  _138 = match_fail `badmatch`, _94

  %% Unique:
  %%    _138
  _263 = succeeded:body _138
  br ^1

199:
  %% beam_ssa_SUITE.erl:212
  %% Aliased:
  %%    _88
  _139 = match_fail `badmatch`, _88

  %% Unique:
  %%    _139
  _271 = succeeded:body _139
  br ^1

194:
  %% beam_ssa_SUITE.erl:210
  %% Aliased:
  %%    _82
  _140 = match_fail `badmatch`, _82

  %% Unique:
  %%    _140
  _279 = succeeded:body _140
  br ^1

188:
  %% beam_ssa_SUITE.erl:202
  %% Unique:
  %%    _79
  _141 = match_fail `badmatch`, _79

  %% Unique:
  %%    _141
  _281 = succeeded:body _141
  br ^1

184:
  %% beam_ssa_SUITE.erl:200
  %% Unique:
  %%    _78
  _142 = match_fail `badmatch`, _78

  %% Unique:
  %%    _142
  _283 = succeeded:body _142
  br ^1

180:
  %% beam_ssa_SUITE.erl:196
  _143 = match_fail `badmatch`, `a`

  %% Unique:
  %%    _143
  _286 = succeeded:body _143
  br ^1

176:
  %% beam_ssa_SUITE.erl:194
  _144 = match_fail `badmatch`, `b`

  %% Unique:
  %%    _144
  _289 = succeeded:body _144
  br ^1

170:
  %% beam_ssa_SUITE.erl:186
  %% Unique:
  %%    _73
  _145 = match_fail `badmatch`, _73

  %% Unique:
  %%    _145
  _296 = succeeded:body _145
  br ^1

167:
  %% beam_ssa_SUITE.erl:183
  %% Aliased:
  %%    _70
  _146 = match_fail `badmatch`, _70

  %% Unique:
  %%    _146
  _298 = succeeded:body _146
  br ^1

163:
  %% beam_ssa_SUITE.erl:180
  %% Aliased:
  %%    _68
  _147 = match_fail `badmatch`, _68

  %% Unique:
  %%    _147
  _300 = succeeded:body _147
  br ^1

159:
  %% beam_ssa_SUITE.erl:173
  %% Aliased:
  %%    _66
  _148 = match_fail `badmatch`, _66

  %% Unique:
  %%    _148
  _302 = succeeded:body _148
  br ^1

155:
  %% beam_ssa_SUITE.erl:170
  %% Aliased:
  %%    _65
  _149 = match_fail `badmatch`, _65

  %% Unique:
  %%    _149
  _304 = succeeded:body _149
  br ^1

1:
  _150 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _150
}

%% beam_ssa_SUITE.erl:241
%% Counter = 79
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {pid(), reference()}
%%    _1 =>
%%     'infinity' | 0
function `beam_ssa_SUITE`:`sync_wait_mon`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => {pid(), reference()}
  %% Aliased:
  %%    _0
  _14 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _0 => {pid(), reference()}
  %% Aliased:
  %%    _0
  _13 = get_tuple_element _0, `1`
  br ^15

15:
  %% beam_ssa_SUITE.erl:242
  _10 = peek_message `none`

  %% Aliased:
  %%    _10
  _67 = succeeded:guard _10
  br _67, ^66, ^65

66:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _63 = bif:is_tuple _10
  br _63, ^63, ^50

63:
  %% Argument types:
  %%    _10 => {...}
  %% Aliased:
  %%    _10
  _64 = bif:tuple_size _10
  %% Argument types:
  %%    
  switch _64, ^50, [
    { `3`, ^61 },
    { `5`, ^62 }
  ]

62:
  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _24 = get_tuple_element _10, `0`

  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _23 = get_tuple_element _10, `1`

  %% Argument types:
  %%    _10 => {any(), any(), any(), any(), any()}
  %% Aliased:
  %%    _10
  _21 = get_tuple_element _10, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _60 = bif:'=:=' _24, `'DOWN'`
  br _60, ^59, ^50

59:
  %% beam_ssa_SUITE.erl:246
  %% Argument types:
  %%    _13 => reference()
  %% Aliased:
  %%    _23
  %% Unique:
  %%    _13
  _7 = bif:'=:=' _23, _13
  br _7, ^75, ^50

75:
  %% beam_ssa_SUITE.erl:246
  %% Argument types:
  %%    _14 => pid()
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _14
  _8 = bif:'=:=' _21, _14
  br _8, ^58, ^50

58:
  %% Argument types:
  %%    _10 => {''DOWN'', reference(), any(), pid(), any()}
  %% Aliased:
  %%    _10
  _20 = get_tuple_element _10, `4`
  _26 = remove_message

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _27 = put_tuple `error`, _20
  %% Result type:
  %%    {'error', any()}
  %% Unique:
  %%    _27
  ret _27

61:
  %% Argument types:
  %%    _10 => {any(), any(), any()}
  %% Aliased:
  %%    _10
  _19 = get_tuple_element _10, `0`

  %% Argument types:
  %%    _10 => {any(), any(), any()}
  %% Aliased:
  %%    _10
  _18 = get_tuple_element _10, `1`

  %% Argument types:
  %%    _10 => {any(), any(), any()}
  %% Aliased:
  %%    _10
  _17 = get_tuple_element _10, `2`
  switch _19, ^50, [
    { `'EXIT'`, ^56 },
    { `ack`, ^55 }
  ]

55:
  %% Argument types:
  %%    _14 => pid()
  %% Aliased:
  %%    _18
  %% Unique:
  %%    _14
  _51 = bif:'=:=' _18, _14
  br _51, ^51, ^50

51:
  _31 = remove_message

  %% beam_ssa_SUITE.erl:244
  %% Unique:
  %%    _13
  _32 = call (`erlang`:`demonitor`/2), _13, `[flush]`

  %% Aliased:
  %%    _32
  _52 = succeeded:body _32
  br _52, ^52, ^1

52:
  %% Aliased:
  %%    _17
  ret _17

56:
  %% Argument types:
  %%    _14 => pid()
  %% Aliased:
  %%    _18
  %% Unique:
  %%    _14
  _53 = bif:'=:=' _18, _14
  br _53, ^53, ^50

53:
  _28 = remove_message

  %% beam_ssa_SUITE.erl:249
  %% Unique:
  %%    _13
  _29 = call (`erlang`:`demonitor`/2), _13, `[flush]`

  %% Aliased:
  %%    _29
  _54 = succeeded:body _29
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _30 = put_tuple `error`, _17
  %% Result type:
  %%    {'error', any()}
  %% Unique:
  %%    _30
  ret _30

50:
  _33 = recv_next
  br ^15

65:
  %% Unique:
  %%    _1
  _42 = wait_timeout _1

  %% Unique:
  %%    _42
  _43 = succeeded:body _42
  br _43, ^43, ^1

43:
  br _42, ^48, ^47

48:
  %% beam_ssa_SUITE.erl:252
  %% Unique:
  %%    _13
  _34 = call (`erlang`:`demonitor`/2), _13, `[flush]`

  %% Aliased:
  %%    _34
  _45 = succeeded:body _34
  br _45, ^45, ^1

45:
  %% beam_ssa_SUITE.erl:253
  %% Unique:
  %%    _14
  _35 = call (`erlang`:`exit`/2), _14, `kill`

  %% Aliased:
  %%    _35
  _46 = succeeded:body _35
  br _46, ^46, ^1

46:
  %% Result type:
  %%    {'error', 'timeout'}
  ret `{error,timeout}`

47:
  br ^15

1:
  _37 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _37
}

%% beam_ssa_SUITE.erl:257
%% Counter = 61
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'reporter_state', {'a', pid()}, {'run_config', 0}}
function `beam_ssa_SUITE`:`reporter_loop`(_0) {
0:
  br ^18

18:
  _47 = wait_timeout `0`

  %% Unique:
  %%    _47
  _48 = succeeded:body _47
  br _48, ^48, ^1

48:
  br _47, ^52, ^18

52:
  %% Argument types:
  %%    _0 => {'reporter_state', {'a', pid()}, {'run_config', 0}}
  %% Unique:
  %%    _0
  _21 = get_tuple_element _0, `1`
  %% Result type:
  %%    {'a', pid()}
  %% Unique:
  %%    _21
  ret _21

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% beam_ssa_SUITE.erl:263
%% Counter = 56
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`bad_sink`() {
0:
  %% beam_ssa_SUITE.erl:264
  %% Argument types:
  %%    
  _0 = bif:self

  %% beam_ssa_SUITE.erl:264
  %% Result type:
  %%    {'ok', pid()}
  %% Unique:
  %%    _0
  _6 = call (`my_spawn`/1), _0

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br _20, ^47, ^1

47:
  %% Argument types:
  %%    _6 => {'ok', pid()}
  %% Unique:
  %%    _6
  _7 = get_tuple_element _6, `1`
  br ^9

9:
  %% beam_ssa_SUITE.erl:269
  _3 = peek_message `none`

  %% Aliased:
  %%    _3
  _45 = succeeded:guard _3
  br _45, ^43, ^44

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _32 = bif:is_tuple _3
  br _32, ^32, ^27

32:
  %% Argument types:
  %%    _3 => {...}
  %% Aliased:
  %%    _3
  _34 = is_tagged_tuple _3, `2`, `ok`
  br _34, ^31, ^26

31:
  %% Argument types:
  %%    _3 => {'ok', any()}
  %% Aliased:
  %%    _3
  _10 = get_tuple_element _3, `1`

  %% Argument types:
  %%    _7 => pid()
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _7
  _28 = bif:'=:=' _10, _7
  br _28, ^28, ^26

28:
  _14 = remove_message

  %% beam_ssa_SUITE.erl:275
  %% Unique:
  %%    _7
  _16 = call (`erlang`:`exit`/2), _7, `kill`

  %% Aliased:
  %%    _16
  _46 = succeeded:body _16
  br _46, ^46, ^1

46:
  %% Aliased:
  %%    _16
  ret _16

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _37 = bif:'=:=' _3, `error`
  br _37, ^36, ^26

36:
  _12 = remove_message

  %% beam_ssa_SUITE.erl:273
  _13 = call (`erlang`:`exit`/1), `failed`

  %% Unique:
  %%    _13
  _35 = succeeded:body _13
  br ^1

26:
  _15 = recv_next
  br ^9

44:
  _38 = wait_timeout `infinity`

  %% Unique:
  %%    _38
  _39 = succeeded:body _38
  br _39, ^42, ^1

42:
  br ^9

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% beam_ssa_SUITE.erl:277
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     pid()
function `beam_ssa_SUITE`:`my_spawn`(_0) {
0:
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = make_fun (`'-my_spawn/1-fun-0-'`/1), _0

  %% beam_ssa_SUITE.erl:278
  %% Aliased:
  %%    _2
  Pid = call (`erlang`:`spawn`/1), _2

  %% Aliased:
  %%    Pid
  _16 = succeeded:body Pid
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    Pid => pid()
  %% Unique:
  %%    Pid
  _13 = put_tuple `ok`, Pid
  %% Result type:
  %%    {'ok', pid()}
  %% Unique:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% beam_ssa_SUITE.erl:284
%% Counter = 42
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_1`() {
0:
  br ^5

5:
  %% beam_ssa_SUITE.erl:285
  _2 = peek_message `none`

  %% Aliased:
  %%    _2
  _35 = succeeded:guard _2
  br _35, ^34, ^33

34:
  switch _2, ^24, [
    { `1`, ^27 },
    { `2`, ^26 }
  ]

26:
  _14 = remove_message
  %% Result type:
  %%    'b'
  ret `b`

27:
  _15 = remove_message

  %% beam_ssa_SUITE.erl:287
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _16 = call (`id`/1), `42`

  %% Aliased:
  %%    _16
  _25 = succeeded:body _16
  br _25, ^38, ^1

38:
  %% Result type:
  %%    'a'
  ret `a`

24:
  _17 = recv_next
  br ^5

33:
  _28 = wait_timeout `infinity`

  %% Unique:
  %%    _28
  _29 = succeeded:body _28
  br _29, ^32, ^1

32:
  br ^5

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% beam_ssa_SUITE.erl:297
%% Counter = 53
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_2`() {
0:
  br ^9

9:
  %% beam_ssa_SUITE.erl:298
  _6 = peek_message `none`

  %% Aliased:
  %%    _6
  _46 = succeeded:guard _6
  br _46, ^45, ^44

45:
  switch _6, ^31, [
    { `1`, ^38 },
    { `2`, ^37 }
  ]

37:
  _22 = remove_message
  %% Result type:
  %%    {2, ''maybe''}
  ret `{2,'maybe'}`

38:
  _23 = remove_message

  %% beam_ssa_SUITE.erl:300
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _11 = call (`id`/1), `1`

  %% Aliased:
  %%    _11
  _32 = succeeded:body _11
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    _11 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _11
  _36 = bif:'=:=' _11, `1`
  br _36, ^35, ^34

35:
  %% Result type:
  %%    {1, 'yes'}
  ret `{1,yes}`

34:
  %% Result type:
  %%    {1, 'no'}
  ret `{1,no}`

31:
  _24 = recv_next
  br ^9

44:
  _39 = wait_timeout `infinity`

  %% Unique:
  %%    _39
  _40 = succeeded:body _39
  br _40, ^43, ^1

43:
  br ^9

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% beam_ssa_SUITE.erl:311
%% Counter = 51
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`recv_after_inf_in_try`() {
0:
  br ^50

50:
  _18 = new_try_tag `'try'`
  br _18, ^17, ^15

17:
  br ^7

7:
  _20 = wait_timeout `infinity`

  %% Unique:
  %%    _20
  _21 = succeeded:body _20
  br _21, ^24, ^15

24:
  br ^7

15:
  %% Unique:
  %%    _18
  _31 = landingpad `'try'`, _18

  %% Unique:
  %%    _18
  _32 = kill_try_tag _18
  br ^8

8:
  _26 = wait_timeout `infinity`

  %% Unique:
  %%    _26
  _27 = succeeded:body _26
  br _27, ^30, ^1

30:
  br ^8

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% beam_ssa_SUITE.erl:320
%% Counter = 68
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_3`() {
0:
  br ^7

7:
  %% beam_ssa_SUITE.erl:322
  _4 = peek_message `none`

  %% Aliased:
  %%    _4
  _59 = succeeded:guard _4
  br _59, ^57, ^58

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _49 = bif:is_tuple _4
  br _49, ^49, ^35

49:
  %% Argument types:
  %%    _4 => {...}
  %% Aliased:
  %%    _4
  _50 = bif:tuple_size _4

  %% Argument types:
  %%    _50 => 0..16777215
  %% Unique:
  %%    _50
  _51 = bif:'=:=' _50, `2`
  br _51, ^48, ^35

48:
  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _9 = get_tuple_element _4, `0`

  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _8 = get_tuple_element _4, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _45 = bif:is_tuple _9
  br _45, ^45, ^35

45:
  %% Argument types:
  %%    _9 => {...}
  %% Aliased:
  %%    _9
  _46 = bif:tuple_size _9

  %% Argument types:
  %%    _46 => 0..16777215
  %% Unique:
  %%    _46
  _47 = bif:'=:=' _46, `2`
  br _47, ^44, ^35

44:
  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _11 = get_tuple_element _9, `0`

  %% Argument types:
  %%    _9 => {any(), any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _41 = bif:is_tuple _8
  br _41, ^41, ^35

41:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _42 = bif:tuple_size _8

  %% Argument types:
  %%    _42 => 0..16777215
  %% Unique:
  %%    _42
  _43 = bif:'=:=' _42, `3`
  br _43, ^40, ^35

40:
  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _14 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _13 = get_tuple_element _8, `1`

  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _12 = get_tuple_element _8, `2`
  switch _14, ^35, [
    { `1`, ^39 },
    { `2`, ^38 }
  ]

38:
  _23 = remove_message

  %% beam_ssa_SUITE.erl:328
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12, 
  %%    _13
  %% Anno: #{unit => 8}
  _1 = bs_create_bin `binary`, `[1]`, `<<0,0,0,1,2>>`, `all`, `integer`, `[1,{segment,3}]`, _13, `8`, `binary`, `[8,{segment,4}]`, _12, `all`

  %% Aliased:
  %%    _1
  _37 = succeeded:body _1
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    _1 => bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _10, 
  %%    _11
  _24 = put_tuple _11, _10, _1
  br ^33

39:
  _25 = remove_message

  %% beam_ssa_SUITE.erl:325
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  %% Anno: #{unit => 16}
  _0 = bs_create_bin `binary`, `[1]`, `<<0,0,0,1,1>>`, `all`, `integer`, `[1,{segment,3}]`, _13, `8`

  %% Aliased:
  %%    _0
  _36 = succeeded:body _0
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _15 = put_list _12, `[0]`

  %% Argument types:
  %%    _0 => bitstring(16)
  %%    _15 => nonempty_list(any())
  %% Aliased:
  %%    _0, 
  %%    _15
  _16 = put_list _0, _15

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _10, 
  %%    _11, 
  %%    _16
  _26 = put_tuple _11, _10, _16
  br ^33

33:
  _20 = phi { _26, ^36 }, { _24, ^37 }

  %% beam_ssa_SUITE.erl:330
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _20
  _28 = call (`id`/1), _20

  %% Aliased:
  %%    _28
  _62 = succeeded:body _28
  br _62, ^62, ^1

62:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _28
  ret _28

35:
  _27 = recv_next
  br ^7

58:
  _52 = wait_timeout `infinity`

  %% Unique:
  %%    _52
  _53 = succeeded:body _52
  br _53, ^56, ^1

56:
  br ^7

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% beam_ssa_SUITE.erl:332
%% Counter = 69
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_4`() {
0:
  br ^7

7:
  %% beam_ssa_SUITE.erl:334
  _4 = peek_message `none`

  %% Aliased:
  %%    _4
  _60 = succeeded:guard _4
  br _60, ^58, ^59

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _50 = bif:is_tuple _4
  br _50, ^50, ^37

50:
  %% Argument types:
  %%    _4 => {...}
  %% Aliased:
  %%    _4
  _51 = bif:tuple_size _4

  %% Argument types:
  %%    _51 => 0..16777215
  %% Unique:
  %%    _51
  _52 = bif:'=:=' _51, `2`
  br _52, ^49, ^37

49:
  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _9 = get_tuple_element _4, `0`

  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _8 = get_tuple_element _4, `1`

  %% Aliased:
  %%    _9
  _48 = is_nonempty_list _9
  br _48, ^48, ^37

48:
  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _11 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _10 = get_tl _9

  %% Aliased:
  %%    _10
  _47 = is_nonempty_list _10
  br _47, ^47, ^37

47:
  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _13 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _12 = get_tl _10

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _46 = bif:'=:=' _12, `[]`
  br _46, ^46, ^37

46:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _43 = bif:is_tuple _8
  br _43, ^43, ^37

43:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _44 = bif:tuple_size _8

  %% Argument types:
  %%    _44 => 0..16777215
  %% Unique:
  %%    _44
  _45 = bif:'=:=' _44, `3`
  br _45, ^42, ^37

42:
  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _16 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _15 = get_tuple_element _8, `1`

  %% Argument types:
  %%    _8 => {any(), any(), any()}
  %% Aliased:
  %%    _8
  _14 = get_tuple_element _8, `2`
  switch _16, ^37, [
    { `1`, ^41 },
    { `2`, ^40 }
  ]

40:
  _25 = remove_message

  %% beam_ssa_SUITE.erl:340
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14, 
  %%    _15
  %% Anno: #{unit => 8}
  _1 = bs_create_bin `binary`, `[1]`, `<<0,0,0,1,2>>`, `all`, `integer`, `[1,{segment,3}]`, _15, `8`, `binary`, `[8,{segment,4}]`, _14, `all`

  %% Aliased:
  %%    _1
  _39 = succeeded:body _1
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    _1 => bitstring(8)
  %% Aliased:
  %%    _1, 
  %%    _11, 
  %%    _13
  _26 = put_tuple _11, _13, _1
  br ^35

41:
  _27 = remove_message

  %% beam_ssa_SUITE.erl:337
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  %% Anno: #{unit => 16}
  _0 = bs_create_bin `binary`, `[1]`, `<<0,0,0,1,1>>`, `all`, `integer`, `[1,{segment,3}]`, _15, `8`

  %% Aliased:
  %%    _0
  _38 = succeeded:body _0
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _17 = put_list _14, `[0]`

  %% Argument types:
  %%    _0 => bitstring(16)
  %%    _17 => nonempty_list(any())
  %% Aliased:
  %%    _0, 
  %%    _17
  _18 = put_list _0, _17

  %% Argument types:
  %%    _18 => nonempty_list(any())
  %% Aliased:
  %%    _11, 
  %%    _13, 
  %%    _18
  _28 = put_tuple _11, _13, _18
  br ^35

35:
  _22 = phi { _28, ^38 }, { _26, ^39 }

  %% beam_ssa_SUITE.erl:342
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _22
  _30 = call (`id`/1), _22

  %% Aliased:
  %%    _30
  _63 = succeeded:body _30
  br _63, ^63, ^1

63:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _30
  ret _30

37:
  _29 = recv_next
  br ^7

59:
  _53 = wait_timeout `infinity`

  %% Unique:
  %%    _53
  _54 = succeeded:body _53
  br _54, ^57, ^1

57:
  br ^7

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% beam_ssa_SUITE.erl:347
%% Counter = 76
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_5`() {
0:
  br ^75

75:
  _34 = new_try_tag `'try'`
  br _34, ^33, ^31

33:
  br ^12

12:
  %% beam_ssa_SUITE.erl:349
  _9 = peek_message `none`

  %% Aliased:
  %%    _9
  _49 = succeeded:guard _9
  br _49, ^48, ^47

48:
  switch _9, ^38, [
    { `1`, ^41 },
    { `2`, ^40 }
  ]

40:
  _22 = remove_message
  br ^50

41:
  _23 = remove_message

  %% beam_ssa_SUITE.erl:351
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _24 = call (`id`/1), `42`

  %% Aliased:
  %%    _24
  _39 = succeeded:body _24
  br _39, ^52, ^31

52:
  br ^50

50:
  _26 = phi { `a`, ^52 }, { `b`, ^40 }

  %% Unique:
  %%    _34
  _57 = kill_try_tag _34
  %% Result type:
  %%    'a' | 'b'
  %% Unique:
  %%    _26
  ret _26

38:
  _25 = recv_next
  br ^12

47:
  _42 = wait_timeout `infinity`

  %% Unique:
  %%    _42
  _43 = succeeded:body _42
  br _43, ^46, ^31

46:
  br ^12

31:
  %% Unique:
  %%    _34
  _55 = landingpad `'try'`, _34

  %% Unique:
  %%    _34
  _56 = kill_try_tag _34
  %% Result type:
  %%    'c'
  ret `c`
}

%% beam_ssa_SUITE.erl:366
%% Counter = 72
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_5a`() {
0:
  br ^71

71:
  _32 = new_try_tag `'try'`
  br _32, ^31, ^29

31:
  br ^12

12:
  %% beam_ssa_SUITE.erl:368
  _9 = peek_message `none`

  %% Aliased:
  %%    _9
  _47 = succeeded:guard _9
  br _47, ^45, ^46

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _39 = bif:'=:=' _9, `1`
  br _39, ^38, ^36

38:
  _22 = remove_message

  %% beam_ssa_SUITE.erl:370
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _23 = call (`id`/1), `42`

  %% Aliased:
  %%    _23
  _37 = succeeded:body _23
  br _37, ^50, ^29

36:
  _24 = remove_message

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _50 = bif:'=:=' _9, `1`
  br _50, ^50, ^49

50:
  br ^48

49:
  br ^48

48:
  _25 = phi { `b`, ^49 }, { `a`, ^50 }

  %% Unique:
  %%    _32
  _53 = kill_try_tag _32
  %% Result type:
  %%    'a' | 'b'
  %% Unique:
  %%    _25
  ret _25

46:
  _40 = wait_timeout `infinity`

  %% Unique:
  %%    _40
  _41 = succeeded:body _40
  br _41, ^44, ^29

44:
  br ^12

29:
  %% Unique:
  %%    _32
  _51 = landingpad `'try'`, _32

  %% Unique:
  %%    _32
  _52 = kill_try_tag _32
  %% Result type:
  %%    'c'
  ret `c`
}

%% beam_ssa_SUITE.erl:389
%% Counter = 55
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`tricky_recv_6`() {
0:
  %% beam_ssa_SUITE.erl:390
  RefA = call (`erlang`:`make_ref`/0)

  %% beam_ssa_SUITE.erl:391
  RefB = call (`erlang`:`make_ref`/0)
  br ^7

7:
  %% beam_ssa_SUITE.erl:392
  _4 = peek_message `none`

  %% Aliased:
  %%    _4
  _40 = succeeded:guard _4
  br _40, ^39, ^38

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _35 = bif:is_tuple _4
  br _35, ^35, ^28

35:
  %% Argument types:
  %%    _4 => {...}
  %% Aliased:
  %%    _4
  _36 = bif:tuple_size _4

  %% Argument types:
  %%    _36 => 0..16777215
  %% Unique:
  %%    _36
  _37 = bif:'=:=' _36, `2`
  br _37, ^34, ^28

34:
  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _10 = get_tuple_element _4, `0`

  %% Argument types:
  %%    _4 => {any(), any()}
  %% Aliased:
  %%    _4
  _9 = get_tuple_element _4, `1`

  %% Argument types:
  %%    RefA => reference()
  %% Aliased:
  %%    _10
  %% Unique:
  %%    RefA
  _30 = bif:'=:=' _10, RefA
  br _30, ^30, ^29

30:
  _13 = remove_message

  %% beam_ssa_SUITE.erl:393
  %% Aliased:
  %%    _9
  _41 = float:convert _9

  %% Unique:
  %%    _41
  _47 = succeeded:body _41
  br _47, ^47, ^1

47:
  %% beam_ssa_SUITE.erl:393
  _42 = float:put `1.0`

  %% beam_ssa_SUITE.erl:393
  %% Unique:
  %%    _41, 
  %%    _42
  _43 = float:'+' _41, _42

  %% Unique:
  %%    _43
  _31 = succeeded:body _43
  br _31, ^44, ^1

44:
  %% Unique:
  %%    _43
  _14 = float:get _43
  %% Result type:
  %%    float()
  %% Unique:
  %%    _14
  ret _14

29:
  %% Argument types:
  %%    RefB => reference()
  %% Aliased:
  %%    _10
  %% Unique:
  %%    RefB
  _32 = bif:'=:=' _10, RefB
  br _32, ^32, ^28

32:
  _11 = remove_message

  %% beam_ssa_SUITE.erl:394
  %% Aliased:
  %%    _9
  _48 = float:convert _9

  %% Unique:
  %%    _48
  _54 = succeeded:body _48
  br _54, ^54, ^1

54:
  %% beam_ssa_SUITE.erl:394
  _49 = float:put `2.0`

  %% beam_ssa_SUITE.erl:394
  %% Unique:
  %%    _48, 
  %%    _49
  _50 = float:'+' _48, _49

  %% Unique:
  %%    _50
  _33 = succeeded:body _50
  br _33, ^51, ^1

51:
  %% Unique:
  %%    _50
  _12 = float:get _50
  %% Result type:
  %%    float()
  %% Unique:
  %%    _12
  ret _12

28:
  _15 = recv_next
  br ^7

38:
  _22 = wait_timeout `0`

  %% Unique:
  %%    _22
  _23 = succeeded:body _22
  br _23, ^23, ^1

23:
  br _22, ^25, ^26

25:
  %% Result type:
  %%    'ok'
  ret `ok`

26:
  br ^7

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% beam_ssa_SUITE.erl:399
%% Counter = 54
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`recv_coverage`() {
0:
  %% beam_ssa_SUITE.erl:400
  %% Argument types:
  %%    
  _0 = bif:self

  %% beam_ssa_SUITE.erl:400
  %% Unique:
  %%    _0
  _12 = call (`erlang`:`'!'`/2), _0, `1`

  %% Aliased:
  %%    _12
  _22 = succeeded:body _12
  br _22, ^22, ^1

22:
  %% beam_ssa_SUITE.erl:401
  %% Result type:
  %%    'a' | 'b'
  _8 = call (`recv_coverage_1`/0)

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br _23, ^23, ^1

23:
  %% Argument types:
  %%    _8 => 'a' | 'b'
  %% Unique:
  %%    _8
  _48 = bif:'=:=' _8, `a`
  br _48, ^47, ^25

47:
  %% beam_ssa_SUITE.erl:402
  %% Argument types:
  %%    
  _2 = bif:self

  %% beam_ssa_SUITE.erl:402
  %% Unique:
  %%    _2
  _13 = call (`erlang`:`'!'`/2), _2, `2`

  %% Aliased:
  %%    _13
  _26 = succeeded:body _13
  br _26, ^26, ^1

26:
  %% beam_ssa_SUITE.erl:403
  %% Result type:
  %%    'a' | 'b'
  _9 = call (`recv_coverage_1`/0)

  %% Unique:
  %%    _9
  _27 = succeeded:body _9
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _9 => 'a' | 'b'
  %% Unique:
  %%    _9
  _45 = bif:'=:=' _9, `b`
  br _45, ^44, ^29

44:
  %% beam_ssa_SUITE.erl:405
  %% Argument types:
  %%    
  _4 = bif:self

  %% beam_ssa_SUITE.erl:405
  %% Unique:
  %%    _4
  _14 = call (`erlang`:`'!'`/2), _4, `1`

  %% Aliased:
  %%    _14
  _30 = succeeded:body _14
  br _30, ^30, ^1

30:
  %% beam_ssa_SUITE.erl:406
  %% Result type:
  %%    'a' | 'b'
  _10 = call (`recv_coverage_2`/0)

  %% Unique:
  %%    _10
  _31 = succeeded:body _10
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    _10 => 'a' | 'b'
  %% Unique:
  %%    _10
  _42 = bif:'=:=' _10, `a`
  br _42, ^41, ^33

41:
  %% beam_ssa_SUITE.erl:407
  %% Argument types:
  %%    
  _6 = bif:self

  %% beam_ssa_SUITE.erl:407
  %% Unique:
  %%    _6
  _15 = call (`erlang`:`'!'`/2), _6, `2`

  %% Aliased:
  %%    _15
  _34 = succeeded:body _15
  br _34, ^34, ^1

34:
  %% beam_ssa_SUITE.erl:408
  %% Result type:
  %%    'a' | 'b'
  _11 = call (`recv_coverage_2`/0)

  %% Unique:
  %%    _11
  _35 = succeeded:body _11
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    _11 => 'a' | 'b'
  %% Unique:
  %%    _11
  _39 = bif:'=:=' _11, `b`
  br _39, ^38, ^37

38:
  %% Result type:
  %%    'ok'
  ret `ok`

37:
  %% beam_ssa_SUITE.erl:408
  _16 = match_fail `badmatch`, `a`

  %% Unique:
  %%    _16
  _40 = succeeded:body _16
  br ^1

33:
  %% beam_ssa_SUITE.erl:406
  _17 = match_fail `badmatch`, `b`

  %% Unique:
  %%    _17
  _43 = succeeded:body _17
  br ^1

29:
  %% beam_ssa_SUITE.erl:403
  _18 = match_fail `badmatch`, `a`

  %% Unique:
  %%    _18
  _46 = succeeded:body _18
  br ^1

25:
  %% beam_ssa_SUITE.erl:401
  _19 = match_fail `badmatch`, `b`

  %% Unique:
  %%    _19
  _49 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% beam_ssa_SUITE.erl:414
%% Counter = 72
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`recv_coverage_1`() {
0:
  br ^8

8:
  %% beam_ssa_SUITE.erl:415
  _5 = peek_message `none`

  %% Aliased:
  %%    _5
  _64 = succeeded:guard _5
  br _64, ^63, ^62

63:
  switch _5, ^35, [
    { `1`, ^56 },
    { `2`, ^55 }
  ]

55:
  _21 = remove_message

  %% beam_ssa_SUITE.erl:426
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _12 = call (`id`/1), `42`

  %% Aliased:
  %%    _12
  _44 = succeeded:body _12
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    
  switch _12, ^68, [
    { `0`, ^51 },
    { `1`, ^52 },
    { `2`, ^53 },
    { `3`, ^54 }
  ]

54:
  %% beam_ssa_SUITE.erl:430
  _22 = call (`erlang`:`exit`/1), `quit`

  %% Unique:
  %%    _22
  _50 = succeeded:body _22
  br ^1

53:
  %% beam_ssa_SUITE.erl:429
  _23 = call (`erlang`:`exit`/1), `quit`

  %% Unique:
  %%    _23
  _49 = succeeded:body _23
  br ^1

52:
  %% beam_ssa_SUITE.erl:428
  _24 = call (`erlang`:`exit`/1), `quit`

  %% Unique:
  %%    _24
  _48 = succeeded:body _24
  br ^1

51:
  %% beam_ssa_SUITE.erl:427
  _25 = call (`erlang`:`exit`/1), `quit`

  %% Unique:
  %%    _25
  _47 = succeeded:body _25
  br ^1

68:
  %% Result type:
  %%    'b'
  ret `b`

56:
  _26 = remove_message

  %% beam_ssa_SUITE.erl:418
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _10 = call (`id`/1), `0`

  %% Aliased:
  %%    _10
  _36 = succeeded:body _10
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  switch _10, ^38, [
    { `0`, ^67 },
    { `1`, ^67 },
    { `2`, ^67 },
    { `3`, ^67 }
  ]

67:
  %% Result type:
  %%    'a'
  ret `a`

38:
  %% beam_ssa_SUITE.erl:418
  %% Aliased:
  %%    _10
  _27 = match_fail `case_clause`, _10

  %% Unique:
  %%    _27
  _43 = succeeded:body _27
  br ^1

35:
  _28 = recv_next
  br ^8

62:
  _57 = wait_timeout `infinity`

  %% Unique:
  %%    _57
  _58 = succeeded:body _57
  br _58, ^61, ^1

61:
  br ^8

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% beam_ssa_SUITE.erl:440
%% Counter = 58
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`recv_coverage_2`() {
0:
  br ^7

7:
  %% beam_ssa_SUITE.erl:441
  _4 = peek_message `none`

  %% Aliased:
  %%    _4
  _50 = succeeded:guard _4
  br _50, ^49, ^48

49:
  switch _4, ^30, [
    { `1`, ^42 },
    { `2`, ^41 }
  ]

41:
  _19 = remove_message

  %% beam_ssa_SUITE.erl:450
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _10 = call (`id`/1), `2`

  %% Aliased:
  %%    _10
  _36 = succeeded:body _10
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    _10 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _10
  _39 = bif:'=:=' _10, `1`
  br _39, ^39, ^54

39:
  %% beam_ssa_SUITE.erl:453
  _20 = call (`erlang`:`exit`/1), `quit`

  %% Unique:
  %%    _20
  _40 = succeeded:body _20
  br ^1

54:
  %% Result type:
  %%    'b'
  ret `b`

42:
  _21 = remove_message

  %% beam_ssa_SUITE.erl:443
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  A = call (`id`/1), `1`

  %% Aliased:
  %%    A
  _31 = succeeded:body A
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    A => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    A
  _34 = bif:'=:=' A, `1`
  br _34, ^53, ^33

53:
  %% Result type:
  %%    'a'
  ret `a`

33:
  %% beam_ssa_SUITE.erl:447
  _22 = call (`erlang`:`exit`/1), `quit`

  %% Unique:
  %%    _22
  _35 = succeeded:body _22
  br ^1

30:
  _23 = recv_next
  br ^7

48:
  _43 = wait_timeout `infinity`

  %% Unique:
  %%    _43
  _44 = succeeded:body _43
  br _44, ^47, ^1

47:
  br ^7

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% beam_ssa_SUITE.erl:462
%% Counter = 201
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`maps`(_0) {
0:
  br ^199

199:
  _62 = new_try_tag `'catch'`
  br _62, ^60, ^61

60:
  %% beam_ssa_SUITE.erl:463
  %% Result type:
  %%    none()
  _43 = call (`maps_1`/1), `any`

  %% Aliased:
  %%    _43
  _64 = succeeded:body _43
  br ^61

61:
  %% Unique:
  %%    _62
  _67 = landingpad `'catch'`, _62

  %% Aliased:
  %%    _67
  _65 = extract _67, `0`
  br ^59

59:
  %% Aliased:
  %%    _65
  %% Unique:
  %%    _62
  _1 = catch_end _62, _65

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _163 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _163, ^160, ^70

160:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _23 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _157 = bif:is_tuple _23
  br _157, ^157, ^70

157:
  %% Argument types:
  %%    _23 => {...}
  %% Aliased:
  %%    _23
  _158 = bif:tuple_size _23

  %% Argument types:
  %%    _158 => 0..16777215
  %% Unique:
  %%    _158
  _159 = bif:'=:=' _158, `2`
  br _159, ^156, ^70

156:
  %% Argument types:
  %%    _23 => {any(), any()}
  %% Aliased:
  %%    _23
  _26 = get_tuple_element _23, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _153 = is_tagged_tuple _26, `2`, `badmatch`
  br _153, ^150, ^70

150:
  %% Argument types:
  %%    _26 => {'badmatch', any()}
  %% Aliased:
  %%    _26
  _27 = get_tuple_element _26, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _149 = bif:is_map _27
  br _149, ^149, ^70

149:
  %% beam_ssa_SUITE.erl:465
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  _29 = call (`maps_2`/1), `#{abc => 0,jkl => 0}`

  %% Unique:
  %%    _29
  _71 = succeeded:body _29
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _29 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _29
  _147 = bif:'=:=' _29, `{jkl,nil,nil}`
  br _147, ^147, ^73

147:
  %% beam_ssa_SUITE.erl:466
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  _30 = call (`maps_2`/1), `#{abc => 0,def => 0}`

  %% Unique:
  %%    _30
  _74 = succeeded:body _30
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    _30 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _30
  _145 = bif:'=:=' _30, `{def,ghi,abc}`
  br _145, ^145, ^76

145:
  %% beam_ssa_SUITE.erl:467
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  _31 = call (`maps_2`/1), `#{def => 0,jkl => 0}`

  %% Unique:
  %%    _31
  _77 = succeeded:body _31
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    _31 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _31
  _143 = bif:'=:=' _31, `{def,ghi,jkl}`
  br _143, ^143, ^79

143:
  %% beam_ssa_SUITE.erl:468
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  _32 = call (`maps_2`/1), `#{abc => 0,jkl => 0,mno => 0}`

  %% Unique:
  %%    _32
  _80 = succeeded:body _32
  br _80, ^80, ^1

80:
  %% Argument types:
  %%    _32 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _32
  _141 = bif:'=:=' _32, `{mno,nil,abc}`
  br _141, ^141, ^82

141:
  %% beam_ssa_SUITE.erl:469
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  _33 = call (`maps_2`/1), `#{jkl => 0}`

  %% Unique:
  %%    _33
  _83 = succeeded:body _33
  br _83, ^83, ^1

83:
  %% Argument types:
  %%    _33 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _33
  _139 = bif:'=:=' _33, `{jkl,nil,nil}`
  br _139, ^139, ^85

139:
  %% beam_ssa_SUITE.erl:470
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  _34 = call (`maps_2`/1), `#{}`

  %% Unique:
  %%    _34
  _86 = succeeded:body _34
  br _86, ^86, ^1

86:
  %% Argument types:
  %%    _34 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _34
  _137 = bif:'=:=' _34, `error`
  br _137, ^136, ^88

136:
  %% beam_ssa_SUITE.erl:472
  %% Result type:
  %%    nil()
  _35 = call (`maps_3`/0)

  %% Unique:
  %%    _35
  _89 = succeeded:body _35
  br _89, ^198, ^1

198:
  br ^200

200:
  _95 = new_try_tag `'catch'`
  br _95, ^93, ^94

93:
  %% beam_ssa_SUITE.erl:474
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _11 = call (`id`/1), `true`

  %% Aliased:
  %%    _11
  _97 = succeeded:body _11
  br _97, ^97, ^94

97:
  %% beam_ssa_SUITE.erl:474
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _10 = call (`id`/1), `true`

  %% Aliased:
  %%    _10
  _98 = succeeded:body _10
  br _98, ^98, ^94

98:
  %% beam_ssa_SUITE.erl:474
  %% Result type:
  %%    'error'
  %% Aliased:
  %%    _10, 
  %%    _11
  _45 = call (`maps_4`/2), _11, _10

  %% Unique:
  %%    _45
  _99 = succeeded:body _45
  br _99, ^99, ^94

99:
  br ^92

94:
  %% Unique:
  %%    _95
  _102 = landingpad `'catch'`, _95

  %% Aliased:
  %%    _102
  _100 = extract _102, `0`
  br ^92

92:
  _103 = phi { _100, ^94 }, { `error`, ^99 }

  %% Aliased:
  %%    _103
  %% Unique:
  %%    _95
  _12 = catch_end _95, _103

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _130 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _130, ^127, ^105

127:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _36 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _124 = bif:is_tuple _36
  br _124, ^124, ^105

124:
  %% Argument types:
  %%    _36 => {...}
  %% Aliased:
  %%    _36
  _125 = bif:tuple_size _36

  %% Argument types:
  %%    _125 => 0..16777215
  %% Unique:
  %%    _125
  _126 = bif:'=:=' _125, `2`
  br _126, ^123, ^105

123:
  %% Argument types:
  %%    _36 => {any(), any()}
  %% Aliased:
  %%    _36
  _39 = get_tuple_element _36, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _122 = bif:'=:=' _39, `{badmap,true}`
  br _122, ^122, ^105

122:
  %% beam_ssa_SUITE.erl:475
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _15 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _15
  _106 = succeeded:body _15
  br _106, ^106, ^1

106:
  %% beam_ssa_SUITE.erl:475
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _14 = call (`id`/1), `true`

  %% Aliased:
  %%    _14
  _107 = succeeded:body _14
  br _107, ^107, ^1

107:
  %% beam_ssa_SUITE.erl:475
  %% Result type:
  %%    'error'
  %% Aliased:
  %%    _14, 
  %%    _15
  _40 = call (`maps_4`/2), _15, _14

  %% Unique:
  %%    _40
  _108 = succeeded:body _40
  br _108, ^119, ^1

119:
  %% beam_ssa_SUITE.erl:476
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _18 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _18
  _111 = succeeded:body _18
  br _111, ^111, ^1

111:
  %% beam_ssa_SUITE.erl:476
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _17 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _17
  _112 = succeeded:body _17
  br _112, ^112, ^1

112:
  %% beam_ssa_SUITE.erl:476
  %% Result type:
  %%    'error'
  %% Aliased:
  %%    _17, 
  %%    _18
  _41 = call (`maps_4`/2), _18, _17

  %% Unique:
  %%    _41
  _113 = succeeded:body _41
  br _113, ^116, ^1

116:
  %% Result type:
  %%    'ok'
  ret `ok`

105:
  %% beam_ssa_SUITE.erl:474
  %% Aliased:
  %%    _12
  _48 = match_fail `badmatch`, _12

  %% Unique:
  %%    _48
  _133 = succeeded:body _48
  br ^1

88:
  %% beam_ssa_SUITE.erl:470
  %% Unique:
  %%    _34
  _50 = match_fail `badmatch`, _34

  %% Unique:
  %%    _50
  _138 = succeeded:body _50
  br ^1

85:
  %% beam_ssa_SUITE.erl:469
  %% Unique:
  %%    _33
  _51 = match_fail `badmatch`, _33

  %% Unique:
  %%    _51
  _140 = succeeded:body _51
  br ^1

82:
  %% beam_ssa_SUITE.erl:468
  %% Unique:
  %%    _32
  _52 = match_fail `badmatch`, _32

  %% Unique:
  %%    _52
  _142 = succeeded:body _52
  br ^1

79:
  %% beam_ssa_SUITE.erl:467
  %% Unique:
  %%    _31
  _53 = match_fail `badmatch`, _31

  %% Unique:
  %%    _53
  _144 = succeeded:body _53
  br ^1

76:
  %% beam_ssa_SUITE.erl:466
  %% Unique:
  %%    _30
  _54 = match_fail `badmatch`, _30

  %% Unique:
  %%    _54
  _146 = succeeded:body _54
  br ^1

73:
  %% beam_ssa_SUITE.erl:465
  %% Unique:
  %%    _29
  _55 = match_fail `badmatch`, _29

  %% Unique:
  %%    _55
  _148 = succeeded:body _55
  br ^1

70:
  %% beam_ssa_SUITE.erl:463
  %% Aliased:
  %%    _1
  _56 = match_fail `badmatch`, _1

  %% Unique:
  %%    _56
  _166 = succeeded:body _56
  br ^1

1:
  _57 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _57
}

%% beam_ssa_SUITE.erl:480
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'any'
function `beam_ssa_SUITE`:`maps_1`(_0) {
0:
  %% beam_ssa_SUITE.erl:481
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _5 = call (`id`/1), `42`

  %% Aliased:
  %%    _5
  _9 = succeeded:body _5
  br _9, ^11, ^1

11:
  %% beam_ssa_SUITE.erl:482
  _6 = match_fail `badmatch`, `#{}`

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_ssa_SUITE.erl:485
%% Counter = 15
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'abc' | 'def' | 'jkl' | 'mno'=>0}
function `beam_ssa_SUITE`:`maps_2`(_0) {
0:
  %% beam_ssa_SUITE.erl:486
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Aliased:
  %%    _0
  Res = call (`maps_2a`/1), _0

  %% Unique:
  %%    Res
  _9 = succeeded:body Res
  br _9, ^9, ^1

9:
  %% beam_ssa_SUITE.erl:487
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Aliased:
  %%    _0
  _5 = call (`maps_2b`/1), _0

  %% Unique:
  %%    _5
  _10 = succeeded:body _5
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _5 => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %%    Res => 'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    _5, 
  %%    Res
  _13 = bif:'=:=' _5, Res
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'error' | {'def', 'ghi', 'abc' | 'jkl'} | {'jkl', 'nil', 'nil'} | {'mno', 'nil', 'abc'}
  %% Unique:
  %%    Res
  ret Res

12:
  %% beam_ssa_SUITE.erl:487
  %% Unique:
  %%    _5
  _6 = match_fail `badmatch`, _5

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_ssa_SUITE.erl:490
%% Counter = 69
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'abc' | 'def' | 'jkl' | 'mno'=>0}
function `beam_ssa_SUITE`:`maps_2a`(_0) {
0:
  %% beam_ssa_SUITE.erl:491
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _2 = has_map_field _0, `abc`
  br _2, ^32, ^65

32:
  %% beam_ssa_SUITE.erl:493
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _19 = has_map_field _0, `def`
  br _19, ^64, ^65

64:
  %% Result type:
  %%    {'def', 'ghi', 'abc'}
  ret `{def,ghi,abc}`

65:
  %% beam_ssa_SUITE.erl:498
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _6 = has_map_field _0, `jkl`
  br _6, ^40, ^41

40:
  %% beam_ssa_SUITE.erl:500
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _20 = has_map_field _0, `def`
  br _20, ^61, ^62

61:
  %% Result type:
  %%    {'def', 'ghi', 'jkl'}
  ret `{def,ghi,jkl}`

62:
  br _2, ^47, ^48

41:
  br _2, ^47, ^48

47:
  %% beam_ssa_SUITE.erl:507
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _21 = has_map_field _0, `mno`
  br _21, ^58, ^59

58:
  %% Result type:
  %%    {'mno', 'nil', 'abc'}
  ret `{mno,nil,abc}`

59:
  br _6, ^56, ^55

48:
  br _6, ^56, ^55

56:
  %% Result type:
  %%    {'jkl', 'nil', 'nil'}
  ret `{jkl,nil,nil}`

55:
  %% Result type:
  %%    'error'
  ret `error`
}

%% beam_ssa_SUITE.erl:520
%% Counter = 71
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     #{'abc' | 'def' | 'jkl' | 'mno'=>0}
function `beam_ssa_SUITE`:`maps_2b`(_0) {
0:
  %% beam_ssa_SUITE.erl:521
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _15 = has_map_field _0, `abc`
  br _15, ^32, ^67

32:
  %% beam_ssa_SUITE.erl:523
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _19 = has_map_field _0, `def`
  br _19, ^66, ^67

66:
  %% Result type:
  %%    {'def', 'ghi', 'abc'}
  ret `{def,ghi,abc}`

67:
  %% beam_ssa_SUITE.erl:528
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _16 = has_map_field _0, `jkl`
  br _16, ^40, ^41

40:
  %% beam_ssa_SUITE.erl:530
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _20 = has_map_field _0, `def`
  br _20, ^63, ^46

63:
  %% Result type:
  %%    {'def', 'ghi', 'jkl'}
  ret `{def,ghi,jkl}`

46:
  br _15, ^48, ^49

41:
  br _15, ^48, ^49

48:
  %% beam_ssa_SUITE.erl:537
  %% Argument types:
  %%    _0 => #{'abc' | 'def' | 'jkl' | 'mno'=>0}
  %% Aliased:
  %%    _0
  _21 = has_map_field _0, `mno`
  br _21, ^60, ^54

60:
  %% Result type:
  %%    {'mno', 'nil', 'abc'}
  ret `{mno,nil,abc}`

54:
  br _16, ^58, ^57

49:
  br _16, ^58, ^57

58:
  %% Result type:
  %%    {'jkl', 'nil', 'nil'}
  ret `{jkl,nil,nil}`

57:
  %% Result type:
  %%    'error'
  ret `error`
}

%% beam_ssa_SUITE.erl:551
%% Counter = 21
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`maps_3`() {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% beam_ssa_SUITE.erl:559
%% Counter = 84
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`maps_4`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:559
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _18 = bif:'=:=' _1, _0
  br _18, ^64, ^34

64:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  _2 = bif:'=:=' _1, `true`
  br _2, ^37, ^65

37:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _40 = bif:is_map _0
  br _40, ^40, ^39

40:
  %% beam_ssa_SUITE.erl:560
  %% Aliased:
  %%    _0
  _24 = put_map `exact`, _0, `ok`, `ok`

  %% Aliased:
  %%    _24
  _41 = succeeded:body _24
  br _41, ^82, ^1

82:
  br ^83

83:
  _47 = new_try_tag `'try'`
  br _47, ^49, ^44

49:
  %% beam_ssa_SUITE.erl:561
  %% Aliased:
  %%    _0
  _28 = match_fail `try_clause`, _0

  %% Unique:
  %%    _28
  _51 = succeeded:body _28
  br ^44

44:
  %% Unique:
  %%    _47
  _53 = landingpad `'try'`, _47

  %% Aliased:
  %%    _53
  _12 = extract _53, `1`

  %% Aliased:
  %%    _53
  _11 = extract _53, `2`

  %% Unique:
  %%    _47
  _54 = kill_try_tag _47

  %% Aliased:
  %%    _11, 
  %%    _12
  _29 = resume _11, _12

  %% Unique:
  %%    _29
  _52 = succeeded:body _29
  br ^1

65:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _3 = bif:'=:=' _0, `true`
  br _3, ^39, ^34

39:
  %% beam_ssa_SUITE.erl:560
  %% Aliased:
  %%    _0
  _25 = match_fail `badmap`, _0

  %% Unique:
  %%    _25
  _42 = succeeded:body _25
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32

34:
  %% Result type:
  %%    'error'
  ret `error`
}

%% beam_ssa_SUITE.erl:571
%% Counter = 455
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`cover_ssa_dead`(_0) {
0:
  %% beam_ssa_SUITE.erl:572
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _65 = call (`format_str`/4), `str`, `escapable`, `[]`, `true`

  %% Aliased:
  %%    _65
  _174 = succeeded:body _65
  br _174, ^174, ^1

174:
  %% Argument types:
  %%    _65 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _65
  _434 = bif:'=:=' _65, `str`
  br _434, ^433, ^176

433:
  %% beam_ssa_SUITE.erl:573
  %% Result type:
  %%    'bad' | nonempty_list(atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other())
  _66 = call (`format_str`/4), `str`, `escapable`, `iolist`, `true`

  %% Aliased:
  %%    _66
  _177 = succeeded:body _66
  br _177, ^177, ^1

177:
  %% Argument types:
  %%    _66 => 'bad' | nonempty_list(atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other())
  %% Aliased:
  %%    _66
  _431 = bif:'=:=' _66, `[iolist,str]`
  br _431, ^431, ^179

431:
  %% beam_ssa_SUITE.erl:574
  %% Result type:
  %%    'bad'
  _67 = call (`format_str`/4), `str`, `not_escapable`, `[]`, `true`

  %% Aliased:
  %%    _67
  _180 = succeeded:body _67
  br _180, ^428, ^1

428:
  %% beam_ssa_SUITE.erl:575
  %% Result type:
  %%    'bad'
  _68 = call (`format_str`/4), `str`, `not_escapable`, `iolist`, `true`

  %% Aliased:
  %%    _68
  _183 = succeeded:body _68
  br _183, ^425, ^1

425:
  %% beam_ssa_SUITE.erl:576
  %% Result type:
  %%    'bad'
  _69 = call (`format_str`/4), `str`, `escapable`, `[]`, `false`

  %% Aliased:
  %%    _69
  _186 = succeeded:body _69
  br _186, ^422, ^1

422:
  %% beam_ssa_SUITE.erl:577
  %% Result type:
  %%    'bad'
  _70 = call (`format_str`/4), `str`, `escapable`, `[]`, `bad`

  %% Aliased:
  %%    _70
  _189 = succeeded:body _70
  br _189, ^419, ^1

419:
  %% beam_ssa_SUITE.erl:580
  %% Result type:
  %%    {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  _71 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `77`, `9999`

  %% Unique:
  %%    _71
  _192 = succeeded:body _71
  br _192, ^414, ^1

414:
  %% Argument types:
  %%    _71 => {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  %% Unique:
  %%    _71
  _74 = get_tuple_element _71, `1`

  %% Argument types:
  %%    _74 => number(77)
  %% Unique:
  %%    _74
  _413 = bif:'=:=' _74, `77`
  br _413, ^412, ^194

412:
  %% Argument types:
  %%    _71 => {{'wx_ref', 'any_type', 'any_ref'}, 77, number(9999), nil()}
  %% Unique:
  %%    _71
  _73 = get_tuple_element _71, `2`

  %% Argument types:
  %%    _73 => number(9999)
  %% Unique:
  %%    _73
  _411 = bif:'=:=' _73, `9999`
  br _411, ^195, ^194

195:
  %% beam_ssa_SUITE.erl:581
  %% Result type:
  %%    {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  _76 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `77.0`, `9999`

  %% Unique:
  %%    _76
  _196 = succeeded:body _76
  br _196, ^404, ^1

404:
  %% Argument types:
  %%    _76 => {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  %% Unique:
  %%    _76
  _79 = get_tuple_element _76, `1`

  %% Argument types:
  %%    _79 => number(77)
  %% Unique:
  %%    _79
  _403 = bif:'=:=' _79, `77.0`
  br _403, ^402, ^198

402:
  %% Argument types:
  %%    _76 => {{'wx_ref', 'any_type', 'any_ref'}, 77.0, number(9999), nil()}
  %% Unique:
  %%    _76
  _78 = get_tuple_element _76, `2`

  %% Argument types:
  %%    _78 => number(9999)
  %% Unique:
  %%    _78
  _401 = bif:'=:=' _78, `9999`
  br _401, ^199, ^198

199:
  %% beam_ssa_SUITE.erl:582
  %% Result type:
  %%    {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  _81 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `77`, `9999.0`

  %% Unique:
  %%    _81
  _200 = succeeded:body _81
  br _200, ^394, ^1

394:
  %% Argument types:
  %%    _81 => {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  %% Unique:
  %%    _81
  _84 = get_tuple_element _81, `1`

  %% Argument types:
  %%    _84 => number(77)
  %% Unique:
  %%    _84
  _393 = bif:'=:=' _84, `77`
  br _393, ^392, ^202

392:
  %% Argument types:
  %%    _81 => {{'wx_ref', 'any_type', 'any_ref'}, 77, number(9999), nil()}
  %% Unique:
  %%    _81
  _83 = get_tuple_element _81, `2`

  %% Argument types:
  %%    _83 => number(9999)
  %% Unique:
  %%    _83
  _391 = bif:'=:=' _83, `9999.0`
  br _391, ^203, ^202

203:
  %% beam_ssa_SUITE.erl:583
  %% Result type:
  %%    {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  _86 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `77.0`, `9999.0`

  %% Unique:
  %%    _86
  _204 = succeeded:body _86
  br _204, ^384, ^1

384:
  %% Argument types:
  %%    _86 => {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  %% Unique:
  %%    _86
  _89 = get_tuple_element _86, `1`

  %% Argument types:
  %%    _89 => number(77)
  %% Unique:
  %%    _89
  _383 = bif:'=:=' _89, `77.0`
  br _383, ^382, ^206

382:
  %% Argument types:
  %%    _86 => {{'wx_ref', 'any_type', 'any_ref'}, 77.0, number(9999), nil()}
  %% Unique:
  %%    _86
  _88 = get_tuple_element _86, `2`

  %% Argument types:
  %%    _88 => number(9999)
  %% Unique:
  %%    _88
  _381 = bif:'=:=' _88, `9999.0`
  br _381, ^207, ^206

207:
  %% beam_ssa_SUITE.erl:584
  %% Result type:
  %%    {'any_type', 'any_ref', number(42), number(43), list('option')}
  _91 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `{42,43}`, `[option]`

  %% Unique:
  %%    _91
  _208 = succeeded:body _91
  br _208, ^208, ^1

208:
  %% Argument types:
  %%    _91 => {'any_type', 'any_ref', number(42), number(43), list('option')}
  %% Unique:
  %%    _91
  _377 = bif:'=:=' _91, `{any_type,any_ref,42,43,[option]}`
  br _377, ^377, ^210

377:
  %% beam_ssa_SUITE.erl:585
  %% Result type:
  %%    {'any_type', 'any_ref', number(42), number(43), list('option')}
  _92 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `{42,43}`, `[]`

  %% Unique:
  %%    _92
  _211 = succeeded:body _92
  br _211, ^211, ^1

211:
  %% Argument types:
  %%    _92 => {'any_type', 'any_ref', number(42), number(43), list('option')}
  %% Unique:
  %%    _92
  _375 = bif:'=:=' _92, `{any_type,any_ref,42,43,[]}`
  br _375, ^375, ^213

375:
  %% beam_ssa_SUITE.erl:586
  %% Result type:
  %%    {'any_type', 'any_ref', number(42), number(43), list('option')}
  _93 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `{42.0,43}`, `[]`

  %% Unique:
  %%    _93
  _214 = succeeded:body _93
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _93 => {'any_type', 'any_ref', number(42), number(43), list('option')}
  %% Unique:
  %%    _93
  _373 = bif:'=:=' _93, `{any_type,any_ref,42.0,43,[]}`
  br _373, ^373, ^216

373:
  %% beam_ssa_SUITE.erl:587
  %% Result type:
  %%    {'any_type', 'any_ref', number(42), number(43), list('option')}
  _94 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `{42,43.0}`, `[]`

  %% Unique:
  %%    _94
  _217 = succeeded:body _94
  br _217, ^217, ^1

217:
  %% Argument types:
  %%    _94 => {'any_type', 'any_ref', number(42), number(43), list('option')}
  %% Unique:
  %%    _94
  _371 = bif:'=:=' _94, `{any_type,any_ref,42,43.0,[]}`
  br _371, ^371, ^219

371:
  %% beam_ssa_SUITE.erl:588
  %% Result type:
  %%    {'any_type', 'any_ref', number(42), number(43), list('option')}
  _95 = call (`contains`/3), `{wx_ref,any_type,any_ref}`, `{42.0,43.0}`, `[]`

  %% Unique:
  %%    _95
  _220 = succeeded:body _95
  br _220, ^220, ^1

220:
  %% Argument types:
  %%    _95 => {'any_type', 'any_ref', number(42), number(43), list('option')}
  %% Unique:
  %%    _95
  _369 = bif:'=:=' _95, `{any_type,any_ref,42.0,43.0,[]}`
  br _369, ^369, ^222

369:
  %% beam_ssa_SUITE.erl:590
  %% Result type:
  %%    'nope'
  _96 = call (`conv_alub`/2), `false`, `'=:='`

  %% Unique:
  %%    _96
  _223 = succeeded:body _96
  br _223, ^366, ^1

366:
  %% beam_ssa_SUITE.erl:591
  %% Result type:
  %%    'ok'
  _97 = call (`conv_alub`/2), `true`, `'=:='`

  %% Unique:
  %%    _97
  _226 = succeeded:body _97
  br _226, ^363, ^1

363:
  %% beam_ssa_SUITE.erl:592
  %% Result type:
  %%    'ok'
  _98 = call (`conv_alub`/2), `true`, `none`

  %% Unique:
  %%    _98
  _229 = succeeded:body _98
  br _229, ^360, ^1

360:
  %% beam_ssa_SUITE.erl:593
  %% Result type:
  %%    'error'
  _99 = call (`conv_alub`/2), `false`, `none`

  %% Unique:
  %%    _99
  _232 = succeeded:body _99
  br _232, ^357, ^1

357:
  %% beam_ssa_SUITE.erl:595
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _100 = call (`eval_alu`/3), `false`, `false`, `false`

  %% Unique:
  %%    _100
  _235 = succeeded:body _100
  br _235, ^235, ^1

235:
  %% Argument types:
  %%    _100 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _100
  _355 = bif:'=:=' _100, `{false,false}`
  br _355, ^355, ^237

355:
  %% beam_ssa_SUITE.erl:596
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _101 = call (`eval_alu`/3), `false`, `false`, `true`

  %% Unique:
  %%    _101
  _238 = succeeded:body _101
  br _238, ^238, ^1

238:
  %% Argument types:
  %%    _101 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _101
  _353 = bif:'=:=' _101, `{true,false}`
  br _353, ^353, ^240

353:
  %% beam_ssa_SUITE.erl:597
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _102 = call (`eval_alu`/3), `false`, `true`, `false`

  %% Unique:
  %%    _102
  _241 = succeeded:body _102
  br _241, ^241, ^1

241:
  %% Argument types:
  %%    _102 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _102
  _351 = bif:'=:=' _102, `{false,true}`
  br _351, ^351, ^243

351:
  %% beam_ssa_SUITE.erl:598
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _103 = call (`eval_alu`/3), `false`, `true`, `true`

  %% Unique:
  %%    _103
  _244 = succeeded:body _103
  br _244, ^244, ^1

244:
  %% Argument types:
  %%    _103 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _103
  _349 = bif:'=:=' _103, `{false,false}`
  br _349, ^349, ^246

349:
  %% beam_ssa_SUITE.erl:599
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _104 = call (`eval_alu`/3), `true`, `false`, `false`

  %% Unique:
  %%    _104
  _247 = succeeded:body _104
  br _247, ^247, ^1

247:
  %% Argument types:
  %%    _104 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _104
  _347 = bif:'=:=' _104, `{false,true}`
  br _347, ^347, ^249

347:
  %% beam_ssa_SUITE.erl:600
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _105 = call (`eval_alu`/3), `true`, `false`, `true`

  %% Unique:
  %%    _105
  _250 = succeeded:body _105
  br _250, ^250, ^1

250:
  %% Argument types:
  %%    _105 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _105
  _345 = bif:'=:=' _105, `{false,false}`
  br _345, ^345, ^252

345:
  %% beam_ssa_SUITE.erl:601
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _106 = call (`eval_alu`/3), `true`, `true`, `false`

  %% Unique:
  %%    _106
  _253 = succeeded:body _106
  br _253, ^253, ^1

253:
  %% Argument types:
  %%    _106 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _106
  _343 = bif:'=:=' _106, `{true,true}`
  br _343, ^343, ^255

343:
  %% beam_ssa_SUITE.erl:602
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  _107 = call (`eval_alu`/3), `true`, `true`, `true`

  %% Unique:
  %%    _107
  _256 = succeeded:body _107
  br _256, ^256, ^1

256:
  %% Argument types:
  %%    _107 => {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _107
  _341 = bif:'=:=' _107, `{false,true}`
  br _341, ^341, ^258

341:
  %% beam_ssa_SUITE.erl:604
  %% Result type:
  %%    float()
  _108 = call (`percentage`/2), `1.0`, `0.0`

  %% Unique:
  %%    _108
  _259 = succeeded:body _108
  br _259, ^259, ^1

259:
  %% Argument types:
  %%    _108 => float()
  %% Unique:
  %%    _108
  _339 = bif:'=:=' _108, `100.0`
  br _339, ^338, ^261

338:
  %% beam_ssa_SUITE.erl:605
  %% Result type:
  %%    float()
  _109 = call (`percentage`/2), `1`, `0`

  %% Unique:
  %%    _109
  _262 = succeeded:body _109
  br _262, ^262, ^1

262:
  %% Argument types:
  %%    _109 => float()
  %% Unique:
  %%    _109
  _336 = bif:'=:=' _109, `100.0`
  br _336, ^335, ^264

335:
  %% beam_ssa_SUITE.erl:606
  %% Result type:
  %%    float()
  _110 = call (`percentage`/2), `0`, `0`

  %% Unique:
  %%    _110
  _265 = succeeded:body _110
  br _265, ^265, ^1

265:
  %% Argument types:
  %%    _110 => float()
  %% Unique:
  %%    _110
  _333 = bif:'=:=' _110, `0.0`
  br _333, ^332, ^267

332:
  %% beam_ssa_SUITE.erl:607
  %% Result type:
  %%    float()
  _111 = call (`percentage`/2), `0.0`, `0.0`

  %% Unique:
  %%    _111
  _268 = succeeded:body _111
  br _268, ^268, ^1

268:
  %% Argument types:
  %%    _111 => float()
  %% Unique:
  %%    _111
  _330 = bif:'=:=' _111, `0.0`
  br _330, ^329, ^270

329:
  %% beam_ssa_SUITE.erl:608
  %% Result type:
  %%    float()
  _112 = call (`percentage`/2), `4.0`, `10.0`

  %% Unique:
  %%    _112
  _271 = succeeded:body _112
  br _271, ^271, ^1

271:
  %% Argument types:
  %%    _112 => float()
  %% Unique:
  %%    _112
  _327 = bif:'=:=' _112, `40.0`
  br _327, ^326, ^273

326:
  %% beam_ssa_SUITE.erl:609
  %% Result type:
  %%    float()
  _113 = call (`percentage`/2), `6`, `10`

  %% Unique:
  %%    _113
  _274 = succeeded:body _113
  br _274, ^274, ^1

274:
  %% Argument types:
  %%    _113 => float()
  %% Unique:
  %%    _113
  _324 = bif:'=:=' _113, `60.0`
  br _324, ^453, ^276

453:
  br ^454

454:
  _280 = new_try_tag `'catch'`
  br _280, ^278, ^279

278:
  %% beam_ssa_SUITE.erl:611
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _36 = call (`id`/1), `42`

  %% Aliased:
  %%    _36
  _282 = succeeded:body _36
  br _282, ^284, ^279

284:
  %% beam_ssa_SUITE.erl:611
  %% Aliased:
  %%    _36
  _130 = match_fail `badmatch`, _36

  %% Unique:
  %%    _130
  _287 = succeeded:body _130
  br ^279

279:
  %% Unique:
  %%    _280
  _290 = landingpad `'catch'`, _280

  %% Aliased:
  %%    _290
  _288 = extract _290, `0`
  br ^277

277:
  %% Aliased:
  %%    _288
  %% Unique:
  %%    _280
  _39 = catch_end _280, _288

  %% Argument types:
  %%    
  %% Aliased:
  %%    _39
  _319 = is_tagged_tuple _39, `2`, `'EXIT'`
  br _319, ^316, ^293

316:
  %% Argument types:
  %%    _39 => {''EXIT'', any()}
  %% Aliased:
  %%    _39
  _114 = get_tuple_element _39, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114
  _313 = bif:is_tuple _114
  br _313, ^313, ^293

313:
  %% Argument types:
  %%    _114 => {...}
  %% Aliased:
  %%    _114
  _314 = bif:tuple_size _114

  %% Argument types:
  %%    _314 => 0..16777215
  %% Unique:
  %%    _314
  _315 = bif:'=:=' _314, `2`
  br _315, ^312, ^293

312:
  %% Argument types:
  %%    _114 => {any(), any()}
  %% Aliased:
  %%    _114
  _117 = get_tuple_element _114, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _117
  _311 = bif:'=:=' _117, `{badmatch,42}`
  br _311, ^311, ^293

311:
  %% beam_ssa_SUITE.erl:613
  _41 = bs_init_writable `256`

  %% beam_ssa_SUITE.erl:613
  %% Result type:
  %%    bitstring(256,appendable)
  %% Unique:
  %%    _41
  _52 = call (`'-cover_ssa_dead/1-lbc$^0/2-0-'`/2), `[]`, _41

  %% Unique:
  %%    _52
  _294 = succeeded:body _52
  br _294, ^294, ^1

294:
  %% beam_ssa_SUITE.erl:613
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Unique:
  %%    _52
  _125 = call (`id`/1), _52

  %% Aliased:
  %%    _125
  _295 = succeeded:body _125
  br _295, ^295, ^1

295:
  %% Argument types:
  %%    _125 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _125
  _309 = bif:'=:=' _125, `<<>>`
  br _309, ^309, ^297

309:
  %% beam_ssa_SUITE.erl:615
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _55 = call (`id`/1), `[]`

  %% Aliased:
  %%    _55
  _298 = succeeded:body _55
  br _298, ^298, ^1

298:
  %% Argument types:
  %%    _55 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _55
  _307 = bif:'=:=' _55, `[]`
  br _307, ^437, ^300

437:
  %% beam_ssa_SUITE.erl:615
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _126 = call (`id`/1), `false`

  %% Aliased:
  %%    _126
  _301 = succeeded:body _126
  br _301, ^301, ^1

301:
  %% Argument types:
  %%    _126 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _126
  _305 = bif:'=:=' _126, `false`
  br _305, ^304, ^303

304:
  %% Result type:
  %%    'ok'
  ret `ok`

303:
  %% beam_ssa_SUITE.erl:615
  %% Aliased:
  %%    _126
  _135 = match_fail `badmatch`, _126

  %% Unique:
  %%    _135
  _306 = succeeded:body _135
  br ^1

300:
  %% beam_ssa_SUITE.erl:615
  %% Aliased:
  %%    _55
  _136 = match_fail `badmatch`, _55

  %% Unique:
  %%    _136
  _308 = succeeded:body _136
  br ^1

297:
  %% beam_ssa_SUITE.erl:613
  %% Aliased:
  %%    _125
  _137 = match_fail `badmatch`, _125

  %% Unique:
  %%    _137
  _310 = succeeded:body _137
  br ^1

293:
  %% beam_ssa_SUITE.erl:611
  %% Aliased:
  %%    _39
  _138 = match_fail `badmatch`, _39

  %% Unique:
  %%    _138
  _322 = succeeded:body _138
  br ^1

276:
  %% beam_ssa_SUITE.erl:609
  %% Unique:
  %%    _113
  _139 = match_fail `badmatch`, _113

  %% Unique:
  %%    _139
  _325 = succeeded:body _139
  br ^1

273:
  %% beam_ssa_SUITE.erl:608
  %% Unique:
  %%    _112
  _140 = match_fail `badmatch`, _112

  %% Unique:
  %%    _140
  _328 = succeeded:body _140
  br ^1

270:
  %% beam_ssa_SUITE.erl:607
  %% Unique:
  %%    _111
  _141 = match_fail `badmatch`, _111

  %% Unique:
  %%    _141
  _331 = succeeded:body _141
  br ^1

267:
  %% beam_ssa_SUITE.erl:606
  %% Unique:
  %%    _110
  _142 = match_fail `badmatch`, _110

  %% Unique:
  %%    _142
  _334 = succeeded:body _142
  br ^1

264:
  %% beam_ssa_SUITE.erl:605
  %% Unique:
  %%    _109
  _143 = match_fail `badmatch`, _109

  %% Unique:
  %%    _143
  _337 = succeeded:body _143
  br ^1

261:
  %% beam_ssa_SUITE.erl:604
  %% Unique:
  %%    _108
  _144 = match_fail `badmatch`, _108

  %% Unique:
  %%    _144
  _340 = succeeded:body _144
  br ^1

258:
  %% beam_ssa_SUITE.erl:602
  %% Unique:
  %%    _107
  _145 = match_fail `badmatch`, _107

  %% Unique:
  %%    _145
  _342 = succeeded:body _145
  br ^1

255:
  %% beam_ssa_SUITE.erl:601
  %% Unique:
  %%    _106
  _146 = match_fail `badmatch`, _106

  %% Unique:
  %%    _146
  _344 = succeeded:body _146
  br ^1

252:
  %% beam_ssa_SUITE.erl:600
  %% Unique:
  %%    _105
  _147 = match_fail `badmatch`, _105

  %% Unique:
  %%    _147
  _346 = succeeded:body _147
  br ^1

249:
  %% beam_ssa_SUITE.erl:599
  %% Unique:
  %%    _104
  _148 = match_fail `badmatch`, _104

  %% Unique:
  %%    _148
  _348 = succeeded:body _148
  br ^1

246:
  %% beam_ssa_SUITE.erl:598
  %% Unique:
  %%    _103
  _149 = match_fail `badmatch`, _103

  %% Unique:
  %%    _149
  _350 = succeeded:body _149
  br ^1

243:
  %% beam_ssa_SUITE.erl:597
  %% Unique:
  %%    _102
  _150 = match_fail `badmatch`, _102

  %% Unique:
  %%    _150
  _352 = succeeded:body _150
  br ^1

240:
  %% beam_ssa_SUITE.erl:596
  %% Unique:
  %%    _101
  _151 = match_fail `badmatch`, _101

  %% Unique:
  %%    _151
  _354 = succeeded:body _151
  br ^1

237:
  %% beam_ssa_SUITE.erl:595
  %% Unique:
  %%    _100
  _152 = match_fail `badmatch`, _100

  %% Unique:
  %%    _152
  _356 = succeeded:body _152
  br ^1

222:
  %% beam_ssa_SUITE.erl:588
  %% Unique:
  %%    _95
  _157 = match_fail `badmatch`, _95

  %% Unique:
  %%    _157
  _370 = succeeded:body _157
  br ^1

219:
  %% beam_ssa_SUITE.erl:587
  %% Unique:
  %%    _94
  _158 = match_fail `badmatch`, _94

  %% Unique:
  %%    _158
  _372 = succeeded:body _158
  br ^1

216:
  %% beam_ssa_SUITE.erl:586
  %% Unique:
  %%    _93
  _159 = match_fail `badmatch`, _93

  %% Unique:
  %%    _159
  _374 = succeeded:body _159
  br ^1

213:
  %% beam_ssa_SUITE.erl:585
  %% Unique:
  %%    _92
  _160 = match_fail `badmatch`, _92

  %% Unique:
  %%    _160
  _376 = succeeded:body _160
  br ^1

210:
  %% beam_ssa_SUITE.erl:584
  %% Unique:
  %%    _91
  _161 = match_fail `badmatch`, _91

  %% Unique:
  %%    _161
  _378 = succeeded:body _161
  br ^1

206:
  %% beam_ssa_SUITE.erl:583
  %% Unique:
  %%    _86
  _162 = match_fail `badmatch`, _86

  %% Unique:
  %%    _162
  _388 = succeeded:body _162
  br ^1

202:
  %% beam_ssa_SUITE.erl:582
  %% Unique:
  %%    _81
  _163 = match_fail `badmatch`, _81

  %% Unique:
  %%    _163
  _398 = succeeded:body _163
  br ^1

198:
  %% beam_ssa_SUITE.erl:581
  %% Unique:
  %%    _76
  _164 = match_fail `badmatch`, _76

  %% Unique:
  %%    _164
  _408 = succeeded:body _164
  br ^1

194:
  %% beam_ssa_SUITE.erl:580
  %% Unique:
  %%    _71
  _165 = match_fail `badmatch`, _71

  %% Unique:
  %%    _165
  _418 = succeeded:body _165
  br ^1

179:
  %% beam_ssa_SUITE.erl:573
  %% Aliased:
  %%    _66
  _170 = match_fail `badmatch`, _66

  %% Unique:
  %%    _170
  _432 = succeeded:body _170
  br ^1

176:
  %% beam_ssa_SUITE.erl:572
  %% Aliased:
  %%    _65
  _171 = match_fail `badmatch`, _65

  %% Unique:
  %%    _171
  _435 = succeeded:body _171
  br ^1

1:
  _172 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _172
}

%% beam_ssa_SUITE.erl:619
%% Counter = 50
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'str'
%%    _1 =>
%%     'escapable' | 'not_escapable'
%%    _2 =>
%%     'iolist' | nil()
%%    _3 =>
%%     'bad' | 'false' | 'true'
function `beam_ssa_SUITE`:`format_str`(_0, _1, _2, _3) {
0:
  %% beam_ssa_SUITE.erl:620
  %% Argument types:
  %%    _1 => 'escapable' | 'not_escapable'
  %% Unique:
  %%    _1
  Escapable = bif:'=:=' _1, `escapable`

  %% beam_ssa_SUITE.erl:621
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _18 = call (`id`/1), _0

  %% Aliased:
  %%    _18
  _27 = succeeded:body _18
  br _27, ^27, ^1

27:
  br Escapable, ^46, ^29

46:
  %% Argument types:
  %%    _3 => 'bad' | 'false' | 'true'
  %% Unique:
  %%    _3
  _6 = bif:'=:=' _3, `true`
  br _6, ^47, ^29

47:
  %% beam_ssa_SUITE.erl:622
  %% Argument types:
  %%    _2 => 'iolist' | nil()
  %% Unique:
  %%    _2
  _7 = bif:'=:=' _2, `[]`
  br _7, ^34, ^37

34:
  %% beam_ssa_SUITE.erl:623
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _18
  _24 = call (`id`/1), _18

  %% Aliased:
  %%    _24
  _35 = succeeded:body _24
  br _35, ^35, ^1

35:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _24
  ret _24

37:
  %% beam_ssa_SUITE.erl:625
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _18
  _11 = call (`id`/1), _18

  %% Aliased:
  %%    _11
  _38 = succeeded:body _11
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    _11 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _11
  _22 = put_list _11, `[]`

  %% Argument types:
  %%    _22 => nonempty_list(atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other())
  %% Unique:
  %%    _22
  _23 = put_list `iolist`, _22
  %% Result type:
  %%    nonempty_list(atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other())
  %% Unique:
  %%    _23
  ret _23

29:
  %% Result type:
  %%    'bad'
  ret `bad`

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% beam_ssa_SUITE.erl:630
%% Counter = 62
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'wx_ref', 'any_type', 'any_ref'}
%%    _1 =>
%%     number(77) | {42.0, number(43)} | {42, number(43)}
%%    _2 =>
%%     list('option') | number(9999)
function `beam_ssa_SUITE`:`contains`(_0, _1, _2) {
0:
  %% beam_ssa_SUITE.erl:630
  %% Argument types:
  %%    _1 => number(77) | {42.0, number(43)} | {42, number(43)}
  %% Unique:
  %%    _1
  _3 = bif:is_number _1
  br _3, ^60, ^31

60:
  %% beam_ssa_SUITE.erl:630
  %% Argument types:
  %%    _2 => list('option') | number(9999)
  %% Unique:
  %%    _2
  _4 = bif:is_number _2
  br _4, ^35, ^31

35:
  %% Argument types:
  %%    _1 => number(77)
  %%    _2 => number(9999)
  %% Unique:
  %%    _1, 
  %%    _2
  _25 = put_tuple `{wx_ref,any_type,any_ref}`, _1, _2, `[]`
  %% Result type:
  %%    {{'wx_ref', 'any_type', 'any_ref'}, number(77), number(9999), nil()}
  %% Unique:
  %%    _25
  ret _25

31:
  %% Argument types:
  %%    _1 => number(77) | {42.0, number(43)} | {42, number(43)}
  %% Unique:
  %%    _1
  _41 = bif:is_tuple _1
  br _41, ^55, ^30

55:
  %% beam_ssa_SUITE.erl:633
  %% Argument types:
  %%    _2 => list('option') | number(9999)
  %% Unique:
  %%    _2
  _8 = bif:is_list _2
  br _8, ^39, ^30

39:
  %% Argument types:
  %%    _1 => {42.0, number(43)} | {42, number(43)}
  %% Unique:
  %%    _1
  _19 = get_tuple_element _1, `0`

  %% Argument types:
  %%    _1 => {42.0, number(43)} | {42, number(43)}
  %% Unique:
  %%    _1
  _18 = get_tuple_element _1, `1`

  %% Argument types:
  %%    _19 => number(42)
  %%    _18 => number(43)
  %%    _2 => list('option')
  %% Unique:
  %%    _2, 
  %%    _18, 
  %%    _19
  _26 = put_tuple `any_type`, `any_ref`, _19, _18, _2
  %% Result type:
  %%    {'any_type', 'any_ref', number(42), number(43), list('option')}
  %% Unique:
  %%    _26
  ret _26

30:
  %% beam_ssa_SUITE.erl:630
  %% Unique:
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-contains/3-',3}}
  _27 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _27
  _50 = succeeded:body _27
  br ^1

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% beam_ssa_SUITE.erl:636
%% Counter = 28
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
%%    _1 =>
%%     ''=:='' | 'none'
function `beam_ssa_SUITE`:`conv_alub`(_0, _1) {
0:
  br _0, ^23, ^16

23:
  %% Result type:
  %%    'ok'
  ret `ok`

16:
  %% beam_ssa_SUITE.erl:637
  %% Argument types:
  %%    _1 => ''=:='' | 'none'
  %% Unique:
  %%    _1
  _7 = bif:'=:=' _1, `none`
  br _7, ^22, ^25

22:
  %% Result type:
  %%    'error'
  ret `error`

25:
  %% Result type:
  %%    'nope'
  ret `nope`
}

%% beam_ssa_SUITE.erl:646
%% Counter = 84
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'false' | 'true'
%%    _1 =>
%%     'false' | 'true'
%%    _2 =>
%%     'false' | 'true'
function `beam_ssa_SUITE`:`eval_alu`(_0, _1, _2) {
0:
  br _0, ^51, ^50

51:
  br _1, ^48, ^47

48:
  %% beam_ssa_SUITE.erl:647
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %% Unique:
  %%    _2
  _29 = bif:'not' _2
  br ^42

47:
  br ^42

50:
  br ^42

42:
  _12 = phi { _29, ^48 }, { `false`, ^47 }, { `false`, ^50 }
  br _0, ^60, ^61

60:
  br ^53

61:
  br _1, ^57, ^58

57:
  br ^53

58:
  br ^53

53:
  _7 = phi { `false`, ^57 }, { _2, ^58 }, { `false`, ^60 }

  %% beam_ssa_SUITE.erl:648
  %% Argument types:
  %%    _12 => 'false' | 'true'
  %%    _7 => 'false' | 'true'
  %% Unique:
  %%    _7, 
  %%    _12
  V = bif:'or' _12, _7
  br _0, ^67, ^66

67:
  br ^64

66:
  br ^64

64:
  _21 = phi { `false`, ^66 }, { _1, ^67 }
  br _2, ^76, ^77

76:
  br ^69

77:
  br _0, ^73, ^74

73:
  br ^69

74:
  br ^69

69:
  _18 = phi { `true`, ^73 }, { _1, ^74 }, { `false`, ^76 }

  %% beam_ssa_SUITE.erl:650
  %% Argument types:
  %%    _21 => 'false' | 'true'
  %%    _18 => 'false' | 'true'
  %% Unique:
  %%    _18, 
  %%    _21
  C = bif:'or' _21, _18

  %% Argument types:
  %%    V => 'false' | 'true'
  %%    C => 'false' | 'true'
  %% Unique:
  %%    C, 
  %%    V
  _39 = put_tuple V, C
  %% Result type:
  %%    {'false' | 'true', 'false' | 'true'}
  %% Unique:
  %%    _39
  ret _39
}

%% beam_ssa_SUITE.erl:653
%% Counter = 39
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     number(0, 6)
%%    _1 =>
%%     number(0, 10)
function `beam_ssa_SUITE`:`percentage`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:654
  %% Argument types:
  %%    _1 => number(0, 10)
  %% Unique:
  %%    _1
  _6 = bif:'==' _1, `0`
  br _6, ^24, ^13

24:
  %% beam_ssa_SUITE.erl:654
  %% Argument types:
  %%    _0 => number(0, 6)
  %% Unique:
  %%    _0
  _8 = bif:'==' _0, `0`
  br _8, ^21, ^20

21:
  %% Result type:
  %%    0.0
  ret `0.0`

20:
  %% Result type:
  %%    100.0
  ret `100.0`

13:
  %% beam_ssa_SUITE.erl:659
  %% Argument types:
  %%    _0 => number(0, 6)
  %% Unique:
  %%    _0
  _29 = float:convert _0

  %% Unique:
  %%    _29
  _34 = succeeded:body _29
  br _34, ^33, ^1

33:
  %% beam_ssa_SUITE.erl:659
  %% Argument types:
  %%    _1 => number(0, 10)
  %% Unique:
  %%    _1
  _30 = float:convert _1

  %% Unique:
  %%    _30
  _35 = succeeded:body _30
  br _35, ^34, ^1

34:
  %% beam_ssa_SUITE.erl:659
  %% Unique:
  %%    _29, 
  %%    _30
  _31 = float:'/' _29, _30

  %% Unique:
  %%    _31
  _22 = succeeded:body _31
  br _22, ^22, ^1

22:
  %% beam_ssa_SUITE.erl:659
  _36 = float:put `100.0`

  %% beam_ssa_SUITE.erl:659
  %% Unique:
  %%    _31, 
  %%    _36
  _37 = float:'*' _31, _36

  %% Unique:
  %%    _37
  _23 = succeeded:body _37
  br _23, ^38, ^1

38:
  %% Unique:
  %%    _37
  _10 = float:get _37
  %% Result type:
  %%    float()
  %% Unique:
  %%    _10
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% beam_ssa_SUITE.erl:662
%% Counter = 83
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`combine_sw`(_0) {
0:
  %% beam_ssa_SUITE.erl:663
  _11 = call (`do_comb_sw_1`/1), `a`

  %% Aliased:
  %%    _11
  _33 = succeeded:body _11
  br _33, ^33, ^1

33:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _81 = bif:'=:=' _11, `[a]`
  br _81, ^81, ^35

81:
  %% beam_ssa_SUITE.erl:664
  _12 = call (`do_comb_sw_1`/1), `b`

  %% Aliased:
  %%    _12
  _36 = succeeded:body _12
  br _36, ^36, ^1

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _79 = bif:'=:=' _12, `[b,b]`
  br _79, ^79, ^38

79:
  %% beam_ssa_SUITE.erl:665
  _13 = call (`do_comb_sw_1`/1), `c`

  %% Aliased:
  %%    _13
  _39 = succeeded:body _13
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _77 = bif:'=:=' _13, `[c]`
  br _77, ^77, ^41

77:
  %% beam_ssa_SUITE.erl:666
  _14 = call (`do_comb_sw_1`/1), `c`

  %% Aliased:
  %%    _14
  _42 = succeeded:body _14
  br _42, ^42, ^1

42:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _75 = bif:'=:=' _14, `[c]`
  br _75, ^75, ^44

75:
  %% beam_ssa_SUITE.erl:667
  _15 = call (`do_comb_sw_1`/1), `z`

  %% Aliased:
  %%    _15
  _45 = succeeded:body _15
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _73 = bif:'=:=' _15, `[]`
  br _73, ^73, ^47

73:
  %% beam_ssa_SUITE.erl:669
  _16 = call (`do_comb_sw_2`/1), `a`

  %% Aliased:
  %%    _16
  _48 = succeeded:body _16
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _71 = bif:'=:=' _16, `[a]`
  br _71, ^71, ^50

71:
  %% beam_ssa_SUITE.erl:670
  _17 = call (`do_comb_sw_2`/1), `b`

  %% Aliased:
  %%    _17
  _51 = succeeded:body _17
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _69 = bif:'=:=' _17, `[b2,b1]`
  br _69, ^69, ^53

69:
  %% beam_ssa_SUITE.erl:671
  _18 = call (`do_comb_sw_2`/1), `c`

  %% Aliased:
  %%    _18
  _54 = succeeded:body _18
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _67 = bif:'=:=' _18, `[c]`
  br _67, ^67, ^56

67:
  %% beam_ssa_SUITE.erl:672
  _19 = call (`do_comb_sw_2`/1), `c`

  %% Aliased:
  %%    _19
  _57 = succeeded:body _19
  br _57, ^57, ^1

57:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _65 = bif:'=:=' _19, `[c]`
  br _65, ^65, ^59

65:
  %% beam_ssa_SUITE.erl:673
  _20 = call (`do_comb_sw_2`/1), `z`

  %% Aliased:
  %%    _20
  _60 = succeeded:body _20
  br _60, ^60, ^1

60:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _63 = bif:'=:=' _20, `[]`
  br _63, ^63, ^62

63:
  %% Result type:
  %%    'ok'
  ret `ok`

62:
  %% beam_ssa_SUITE.erl:673
  %% Aliased:
  %%    _20
  _21 = match_fail `badmatch`, _20

  %% Unique:
  %%    _21
  _64 = succeeded:body _21
  br ^1

59:
  %% beam_ssa_SUITE.erl:672
  %% Aliased:
  %%    _19
  _22 = match_fail `badmatch`, _19

  %% Unique:
  %%    _22
  _66 = succeeded:body _22
  br ^1

56:
  %% beam_ssa_SUITE.erl:671
  %% Aliased:
  %%    _18
  _23 = match_fail `badmatch`, _18

  %% Unique:
  %%    _23
  _68 = succeeded:body _23
  br ^1

53:
  %% beam_ssa_SUITE.erl:670
  %% Aliased:
  %%    _17
  _24 = match_fail `badmatch`, _17

  %% Unique:
  %%    _24
  _70 = succeeded:body _24
  br ^1

50:
  %% beam_ssa_SUITE.erl:669
  %% Aliased:
  %%    _16
  _25 = match_fail `badmatch`, _16

  %% Unique:
  %%    _25
  _72 = succeeded:body _25
  br ^1

47:
  %% beam_ssa_SUITE.erl:667
  %% Aliased:
  %%    _15
  _26 = match_fail `badmatch`, _15

  %% Unique:
  %%    _26
  _74 = succeeded:body _26
  br ^1

44:
  %% beam_ssa_SUITE.erl:666
  %% Aliased:
  %%    _14
  _27 = match_fail `badmatch`, _14

  %% Unique:
  %%    _27
  _76 = succeeded:body _27
  br ^1

41:
  %% beam_ssa_SUITE.erl:665
  %% Aliased:
  %%    _13
  _28 = match_fail `badmatch`, _13

  %% Unique:
  %%    _28
  _78 = succeeded:body _28
  br ^1

38:
  %% beam_ssa_SUITE.erl:664
  %% Aliased:
  %%    _12
  _29 = match_fail `badmatch`, _12

  %% Unique:
  %%    _29
  _80 = succeeded:body _29
  br ^1

35:
  %% beam_ssa_SUITE.erl:663
  %% Aliased:
  %%    _11
  _30 = match_fail `badmatch`, _11

  %% Unique:
  %%    _30
  _82 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% beam_ssa_SUITE.erl:677
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | 'c' | 'z'
function `beam_ssa_SUITE`:`do_comb_sw_1`(_0) {
0:
  %% beam_ssa_SUITE.erl:678
  _11 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, `[]`

  %% Aliased:
  %%    _11
  _17 = succeeded:body _11
  br _17, ^17, ^1

17:
  %% Argument types:
  %%    
  switch _0, ^23, [
    { `a`, ^21 },
    { `b`, ^21 },
    { `c`, ^26 }
  ]

21:
  %% beam_ssa_SUITE.erl:681
  %% Argument types:
  %%    
  _3 = bif:get `beam_ssa_SUITE`

  %% Argument types:
  %%    _0 => 'a' | 'b'
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  _8 = put_list _0, _3

  %% beam_ssa_SUITE.erl:681
  %% Unique:
  %%    _8
  _12 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, _8

  %% Aliased:
  %%    _12
  _22 = succeeded:body _12
  br _22, ^18, ^1

18:
  %% Unique:
  %%    _0
  _39 = bif:'=:=' _0, `b`
  br _39, ^26, ^23

26:
  %% beam_ssa_SUITE.erl:687
  %% Argument types:
  %%    
  _6 = bif:get `beam_ssa_SUITE`

  %% Argument types:
  %%    _0 => 'b' | 'c'
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _0
  _10 = put_list _0, _6

  %% beam_ssa_SUITE.erl:687
  %% Unique:
  %%    _10
  _13 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, _10

  %% Aliased:
  %%    _13
  _27 = succeeded:body _13
  br _27, ^23, ^1

23:
  %% beam_ssa_SUITE.erl:691
  _14 = call (`erlang`:`erase`/1), `beam_ssa_SUITE`

  %% Aliased:
  %%    _14
  _28 = succeeded:body _14
  br _28, ^28, ^1

28:
  %% Aliased:
  %%    _14
  ret _14

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% beam_ssa_SUITE.erl:693
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'b' | 'c' | 'z'
function `beam_ssa_SUITE`:`do_comb_sw_2`(_0) {
0:
  %% beam_ssa_SUITE.erl:694
  _14 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, `[]`

  %% Aliased:
  %%    _14
  _22 = succeeded:body _14
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    
  switch _0, ^23, [
    { `a`, ^27 },
    { `b`, ^28 }
  ]

28:
  %% beam_ssa_SUITE.erl:699
  %% Argument types:
  %%    
  _2 = bif:get `beam_ssa_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _11 = put_list `b1`, _2

  %% beam_ssa_SUITE.erl:699
  %% Unique:
  %%    _11
  _15 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, _11

  %% Aliased:
  %%    _15
  _26 = succeeded:body _15
  br _26, ^23, ^1

27:
  %% beam_ssa_SUITE.erl:697
  %% Argument types:
  %%    
  _1 = bif:get `beam_ssa_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _10 = put_list `a`, _1

  %% beam_ssa_SUITE.erl:697
  %% Unique:
  %%    _10
  _16 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, _10

  %% Aliased:
  %%    _16
  _25 = succeeded:body _16
  br _25, ^23, ^1

23:
  %% Argument types:
  %%    
  switch _0, ^29, [
    { `b`, ^33 },
    { `c`, ^34 }
  ]

34:
  %% beam_ssa_SUITE.erl:707
  %% Argument types:
  %%    
  _5 = bif:get `beam_ssa_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _13 = put_list `c`, _5

  %% beam_ssa_SUITE.erl:707
  %% Unique:
  %%    _13
  _17 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, _13

  %% Aliased:
  %%    _17
  _32 = succeeded:body _17
  br _32, ^29, ^1

33:
  %% beam_ssa_SUITE.erl:705
  %% Argument types:
  %%    
  _4 = bif:get `beam_ssa_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _12 = put_list `b2`, _4

  %% beam_ssa_SUITE.erl:705
  %% Unique:
  %%    _12
  _18 = call (`erlang`:`put`/2), `beam_ssa_SUITE`, _12

  %% Aliased:
  %%    _18
  _31 = succeeded:body _18
  br _31, ^29, ^1

29:
  %% beam_ssa_SUITE.erl:711
  _19 = call (`erlang`:`erase`/1), `beam_ssa_SUITE`

  %% Aliased:
  %%    _19
  _35 = succeeded:body _19
  br _35, ^35, ^1

35:
  %% Aliased:
  %%    _19
  ret _19

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% beam_ssa_SUITE.erl:713
%% Counter = 31
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`share_opt`(_0) {
0:
  %% beam_ssa_SUITE.erl:714
  %% Result type:
  %%    'ok'
  _4 = call (`do_share_opt_1`/1), `0`

  %% Unique:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^27, ^1

27:
  %% beam_ssa_SUITE.erl:715
  %% Result type:
  %%    'ok'
  _5 = call (`do_share_opt_2`/0)

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^24, ^1

24:
  %% beam_ssa_SUITE.erl:716
  %% Result type:
  %%    'ok'
  _6 = call (`do_share_opt_3`/0)

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^30, ^1

30:
  ret _6

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% beam_ssa_SUITE.erl:719
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0
function `beam_ssa_SUITE`:`do_share_opt_1`(_0) {
0:
  br ^4

4:
  _13 = wait_timeout `1`

  %% Unique:
  %%    _13
  _14 = succeeded:body _13
  br _14, ^14, ^1

14:
  br _13, ^16, ^17

16:
  %% Result type:
  %%    'ok'
  ret `ok`

17:
  br ^4

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% beam_ssa_SUITE.erl:728
%% Counter = 30
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`do_share_opt_2`() {
0:
  %% beam_ssa_SUITE.erl:729
  %% Result type:
  %%    'ok'
  _3 = call (`sopt_2`/2), `{[pointtopoint],[{dstaddr,any}]}`, `ok`

  %% Unique:
  %%    _3
  _11 = succeeded:body _3
  br _11, ^26, ^1

26:
  %% beam_ssa_SUITE.erl:730
  %% Result type:
  %%    'ok'
  _4 = call (`sopt_2`/2), `{[broadcast],[{broadaddr,any}]}`, `ok`

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br _14, ^23, ^1

23:
  %% beam_ssa_SUITE.erl:731
  %% Result type:
  %%    'ok'
  _5 = call (`sopt_2`/2), `{[],[]}`, `ok`

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br _17, ^29, ^1

29:
  ret _5

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% beam_ssa_SUITE.erl:734
%% Counter = 53
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {list('broadcast' | 'pointtopoint'), list({'broadaddr', 'any'} | {'dstaddr', 'any'})}
%%    _1 =>
%%     'ok'
function `beam_ssa_SUITE`:`sopt_2`(_0, _1) {
0:
  %% Argument types:
  %%    _0 => {list('broadcast' | 'pointtopoint'), list({'broadaddr', 'any'} | {'dstaddr', 'any'})}
  %% Unique:
  %%    _0
  _10 = get_tuple_element _0, `0`

  %% Argument types:
  %%    _0 => {list('broadcast' | 'pointtopoint'), list({'broadaddr', 'any'} | {'dstaddr', 'any'})}
  %% Unique:
  %%    _0
  _9 = get_tuple_element _0, `1`

  %% beam_ssa_SUITE.erl:735
  %% Aliased:
  %%    _10
  Broadcast = call (`lists`:`member`/2), `broadcast`, _10

  %% Aliased:
  %%    Broadcast
  _25 = succeeded:body Broadcast
  br _25, ^25, ^1

25:
  %% beam_ssa_SUITE.erl:736
  %% Aliased:
  %%    _10
  P2P = call (`lists`:`member`/2), `pointtopoint`, _10

  %% Aliased:
  %%    P2P
  _26 = succeeded:body P2P
  br _26, ^26, ^1

26:
  %% Unique:
  %%    _9
  _40 = is_nonempty_list _9
  br _40, ^40, ^41

40:
  %% Argument types:
  %%    _9 => nonempty_list({'broadaddr', 'any'} | {'dstaddr', 'any'})
  %% Unique:
  %%    _9
  _13 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_list({'broadaddr', 'any'} | {'dstaddr', 'any'})
  %% Unique:
  %%    _9
  _12 = get_tl _9

  %% Argument types:
  %%    _13 => {'broadaddr', 'any'} | {'dstaddr', 'any'}
  %% Unique:
  %%    _13
  _15 = get_tuple_element _13, `0`

  %% Aliased:
  %%    _15
  _52 = bif:'=:=' _15, `dstaddr`
  br _52, ^35, ^34

35:
  br P2P, ^32, ^28

32:
  %% Argument types:
  %%    _10 => list('broadcast' | 'pointtopoint')
  %%    _12 => list({'broadaddr', 'any'} | {'dstaddr', 'any'})
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _12
  _17 = put_tuple _10, _12

  %% beam_ssa_SUITE.erl:743
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _17
  _18 = call (`sopt_2`/2), _17, `ok`

  %% Unique:
  %%    _18
  _33 = succeeded:body _18
  br _33, ^33, ^1

33:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _18
  ret _18

34:
  br Broadcast, ^30, ^28

30:
  %% Argument types:
  %%    _10 => list('broadcast' | 'pointtopoint')
  %%    _12 => list({'broadaddr', 'any'} | {'dstaddr', 'any'})
  %% Aliased:
  %%    _10
  %% Unique:
  %%    _12
  _16 = put_tuple _10, _12

  %% beam_ssa_SUITE.erl:741
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _16
  _19 = call (`sopt_2`/2), _16, `ok`

  %% Unique:
  %%    _19
  _31 = succeeded:body _19
  br _31, ^31, ^1

31:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _19
  ret _19

28:
  %% beam_ssa_SUITE.erl:737
  %% Unique:
  %%    _9
  _20 = match_fail `case_clause`, _9

  %% Unique:
  %%    _20
  _42 = succeeded:body _20
  br ^1

41:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% beam_ssa_SUITE.erl:748
%% Counter = 24
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`do_share_opt_3`() {
0:
  %% beam_ssa_SUITE.erl:749
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _0 = call (`id`/1), `ok`

  %% Aliased:
  %%    _0
  _10 = succeeded:body _0
  br _10, ^10, ^1

10:
  %% beam_ssa_SUITE.erl:749
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0
  _4 = call (`sopt_3`/1), _0

  %% Unique:
  %%    _4
  _11 = succeeded:body _4
  br _11, ^11, ^1

11:
  br _4, ^21, ^13

21:
  %% beam_ssa_SUITE.erl:750
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _2 = call (`id`/1), `nok`

  %% Aliased:
  %%    _2
  _14 = succeeded:body _2
  br _14, ^14, ^1

14:
  %% beam_ssa_SUITE.erl:750
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _2
  _5 = call (`sopt_3`/1), _2

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br _15, ^15, ^1

15:
  br _5, ^17, ^18

17:
  %% beam_ssa_SUITE.erl:750
  _6 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br ^1

18:
  %% Result type:
  %%    'ok'
  ret `ok`

13:
  %% beam_ssa_SUITE.erl:749
  _7 = match_fail `badmatch`, `false`

  %% Unique:
  %%    _7
  _23 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% beam_ssa_SUITE.erl:753
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`sopt_3`(_0) {
0:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _11 = bif:'=:=' _0, `ok`
  br _11, ^10, ^8

10:
  %% beam_ssa_SUITE.erl:755
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _4 = call (`id`/1), `755`

  %% Aliased:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^9, ^1

9:
  %% Result type:
  %%    'true'
  ret `true`

8:
  %% beam_ssa_SUITE.erl:755
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _5 = call (`id`/1), `755`

  %% Aliased:
  %%    _5
  _12 = succeeded:body _5
  br _12, ^12, ^1

12:
  %% Result type:
  %%    'false'
  ret `false`

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% beam_ssa_SUITE.erl:757
%% Counter = 43
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`beam_ssa_dead_crash`(_0) {
0:
  %% beam_ssa_SUITE.erl:758
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _2 = call (`id`/1), `false`

  %% Aliased:
  %%    _2
  _17 = succeeded:body _2
  br _17, ^17, ^1

17:
  %% beam_ssa_SUITE.erl:758
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _1 = call (`id`/1), `true`

  %% Aliased:
  %%    _1
  _18 = succeeded:body _1
  br _18, ^18, ^1

18:
  %% beam_ssa_SUITE.erl:758
  %% Result type:
  %%    'neither' | 'not_A_B' | 'not_A_not_B'
  %% Aliased:
  %%    _1, 
  %%    _2
  _7 = call (`do_beam_ssa_dead_crash`/2), _2, _1

  %% Unique:
  %%    _7
  _19 = succeeded:body _7
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    _7 => 'neither' | 'not_A_B' | 'not_A_not_B'
  %% Unique:
  %%    _7
  _41 = bif:'=:=' _7, `not_A_B`
  br _41, ^40, ^21

40:
  %% beam_ssa_SUITE.erl:759
  %% Result type:
  %%    'not_A_B' | 'not_A_not_B'
  _8 = call (`do_beam_ssa_dead_crash`/2), `false`, `false`

  %% Unique:
  %%    _8
  _22 = succeeded:body _8
  br _22, ^22, ^1

22:
  %% Argument types:
  %%    _8 => 'not_A_B' | 'not_A_not_B'
  %% Unique:
  %%    _8
  _38 = bif:'=:=' _8, `not_A_not_B`
  br _38, ^37, ^24

37:
  %% beam_ssa_SUITE.erl:760
  %% Result type:
  %%    'neither'
  _9 = call (`do_beam_ssa_dead_crash`/2), `true`, `false`

  %% Unique:
  %%    _9
  _25 = succeeded:body _9
  br _25, ^34, ^1

34:
  %% beam_ssa_SUITE.erl:761
  %% Result type:
  %%    'neither'
  _10 = call (`do_beam_ssa_dead_crash`/2), `true`, `true`

  %% Unique:
  %%    _10
  _28 = succeeded:body _10
  br _28, ^31, ^1

31:
  %% Result type:
  %%    'ok'
  ret `ok`

24:
  %% beam_ssa_SUITE.erl:759
  _13 = match_fail `badmatch`, `not_A_B`

  %% Unique:
  %%    _13
  _39 = succeeded:body _13
  br ^1

21:
  %% beam_ssa_SUITE.erl:758
  %% Unique:
  %%    _7
  _14 = match_fail `badmatch`, _7

  %% Unique:
  %%    _14
  _42 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% beam_ssa_SUITE.erl:764
%% Counter = 54
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`do_beam_ssa_dead_crash`(_0, _1) {
0:
  %% Argument types:
  %%    
  switch _0, ^26, [
    { `false`, ^25 },
    { `true`, ^46 }
  ]

46:
  %% Result type:
  %%    'neither'
  ret `neither`

25:
  %% Argument types:
  %%    
  switch _1, ^37, [
    { `false`, ^42 },
    { `nil`, ^42 }
  ]

42:
  %% beam_ssa_SUITE.erl:801
  %% Argument types:
  %%    _1 => 'false' | 'nil'
  %% Unique:
  %%    _1
  _20 = bif:'not' _1

  %% Unique:
  %%    _20
  _40 = succeeded:body _20
  br _40, ^47, ^1

47:
  %% Result type:
  %%    'not_A_not_B'
  ret `not_A_not_B`

37:
  %% Result type:
  %%    'not_A_B'
  ret `not_A_B`

26:
  %% beam_ssa_SUITE.erl:782
  _17 = call (`erlang`:`error`/1), `badarg`

  %% Aliased:
  %%    _17
  _29 = succeeded:body _17
  br ^1

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% beam_ssa_SUITE.erl:811
%% Counter = 21
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`stack_init`(_0) {
0:
  %% beam_ssa_SUITE.erl:812
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _3 = call (`stack_init`/2), `a`, `#{a => [1,2,3]}`

  %% Aliased:
  %%    _3
  _9 = succeeded:body _3
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    _3 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _3
  _19 = bif:'=:=' _3, `6`
  br _19, ^18, ^11

18:
  %% beam_ssa_SUITE.erl:813
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _4 = call (`stack_init`/2), `missing`, `#{}`

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    _4 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `0`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% beam_ssa_SUITE.erl:813
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

11:
  %% beam_ssa_SUITE.erl:812
  %% Aliased:
  %%    _3
  _6 = match_fail `badmatch`, _3

  %% Unique:
  %%    _6
  _20 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_ssa_SUITE.erl:816
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'missing'
%%    _1 =>
%%     #{'a'=>nonempty_list(1..3)}
function `beam_ssa_SUITE`:`stack_init`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => #{'a'=>nonempty_list(1..3)}
  %%    _0 => 'a' | 'missing'
  %% Unique:
  %%    _0, 
  %%    _1
  _9 = get_map_element _1, _0

  %% Unique:
  %%    _9
  _19 = succeeded:guard _9
  br _19, ^19, ^18

19:
  %% Result type:
  %%    number()
  _6 = make_fun (`'-stack_init/2-fun-0-'`/2)

  %% beam_ssa_SUITE.erl:824
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _9
  _11 = call (`lists`:`foldl`/3), _6, `0`, _9

  %% Aliased:
  %%    _11
  _20 = succeeded:body _11
  br _20, ^20, ^1

20:
  br ^16

18:
  br ^16

16:
  _8 = phi { `0`, ^18 }, { _11, ^20 }

  %% beam_ssa_SUITE.erl:834
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _8
  _13 = call (`id`/1), _8

  %% Aliased:
  %%    _13
  _23 = succeeded:body _13
  br _23, ^23, ^1

23:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _13
  ret _13

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% beam_ssa_SUITE.erl:838
%% Counter = 66
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`mapfoldl`() {
0:
  %% beam_ssa_SUITE.erl:839
  %% Result type:
  %%    {1000, 100000}
  _16 = call (`mapfoldl_limits`/0)

  %% Unique:
  %%    _16
  _35 = succeeded:body _16
  br _35, ^57, ^1

57:
  %% Result type:
  %%    {nonempty_list(any()), any()}
  _7 = make_fun (`'-mapfoldl/0-fun-1-'`/1), `100000`

  %% beam_ssa_SUITE.erl:840
  %% Aliased:
  %%    _7
  _20 = call (`timer`:`tc`/1), _7

  %% Aliased:
  %%    _20
  _38 = succeeded:body _20
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _48 = bif:is_tuple _20
  br _48, ^48, ^40

48:
  %% Argument types:
  %%    _20 => {...}
  %% Aliased:
  %%    _20
  _49 = bif:tuple_size _20

  %% Argument types:
  %%    _49 => 0..16777215
  %% Unique:
  %%    _49
  _50 = bif:'=:=' _49, `2`
  br _50, ^47, ^40

47:
  %% Argument types:
  %%    _20 => {any(), any()}
  %% Aliased:
  %%    _20
  _22 = get_tuple_element _20, `0`

  %% beam_ssa_SUITE.erl:846
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _9 = bif:'*' _22, `10`

  %% Unique:
  %%    _9
  _41 = succeeded:body _9
  br _41, ^41, ^1

41:
  %% beam_ssa_SUITE.erl:846
  %% Argument types:
  %%    _9 => number()
  %% Unique:
  %%    _9
  _10 = bif:'*' _9, `1000`

  %% Unique:
  %%    _10
  _42 = succeeded:body _10
  br _42, ^42, ^1

42:
  %% beam_ssa_SUITE.erl:846
  %% Argument types:
  %%    _10 => number()
  %% Unique:
  %%    _10
  _60 = float:convert _10

  %% Unique:
  %%    _60
  _65 = succeeded:body _60
  br _65, ^65, ^1

65:
  %% beam_ssa_SUITE.erl:846
  _61 = float:put `1.0e6`

  %% beam_ssa_SUITE.erl:846
  %% Unique:
  %%    _60, 
  %%    _61
  _62 = float:'/' _60, _61

  %% Unique:
  %%    _62
  _43 = succeeded:body _62
  br _43, ^63, ^1

63:
  %% Unique:
  %%    _62
  _11 = float:get _62

  %% beam_ssa_SUITE.erl:846
  %% Argument types:
  %%    _11 => float()
  %% Unique:
  %%    _11
  _12 = bif:ceil _11

  %% Unique:
  %%    _12
  _44 = succeeded:body _12
  br _44, ^44, ^1

44:
  %% beam_ssa_SUITE.erl:846
  %% Argument types:
  %%    _12 => integer()
  %% Unique:
  %%    _12
  Seconds = bif:'+' _12, `15`

  %% Unique:
  %%    Seconds
  _45 = succeeded:body Seconds
  br _45, ^45, ^1

45:
  %% Argument types:
  %%    Seconds => integer()
  %% Unique:
  %%    Seconds
  _23 = put_list Seconds, `[]`

  %% beam_ssa_SUITE.erl:847
  %% Unique:
  %%    _23
  _29 = call (`io`:`format`/2), `"~p seconds timetrap\n"`, _23

  %% Aliased:
  %%    _29
  _46 = succeeded:body _29
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    Seconds => integer()
  %% Unique:
  %%    Seconds
  _24 = put_tuple `seconds`, Seconds

  %% Argument types:
  %%    _24 => {'seconds', integer()}
  %% Unique:
  %%    _24
  _25 = put_tuple `timetrap`, _24

  %% Argument types:
  %%    _25 => {'timetrap', {'seconds', integer()}}
  %% Unique:
  %%    _25
  _30 = put_list _25, `[]`
  %% Result type:
  %%    nonempty_list({'timetrap', {'seconds', integer()}})
  %% Unique:
  %%    _30
  ret _30

40:
  %% beam_ssa_SUITE.erl:840
  %% Aliased:
  %%    _20
  _31 = match_fail `badmatch`, _20

  %% Unique:
  %%    _31
  _51 = succeeded:body _31
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% beam_ssa_SUITE.erl:850
%% Counter = 80
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`mapfoldl`(_0) {
0:
  %% beam_ssa_SUITE.erl:851
  %% Result type:
  %%    'ok'
  _31 = call (`test_mapfoldl_implementations`/0)

  %% Unique:
  %%    _31
  _40 = succeeded:body _31
  br _40, ^40, ^1

40:
  %% Result type:
  %%    {any(), any()}
  F = make_fun (`'-mapfoldl/1-fun-0-'`/2)

  %% beam_ssa_SUITE.erl:856
  %% Result type:
  %%    {1000, 100000}
  _20 = call (`mapfoldl_limits`/0)

  %% Unique:
  %%    _20
  _41 = succeeded:body _20
  br _41, ^79, ^1

79:
  %% beam_ssa_SUITE.erl:857
  List = call (`lists`:`duplicate`/2), `1000`, `100000`

  %% Aliased:
  %%    List
  _44 = succeeded:body List
  br _44, ^44, ^1

44:
  %% beam_ssa_SUITE.erl:858
  %% Result type:
  %%    {list(any()), any()}
  %% Aliased:
  %%    F, 
  %%    List
  _23 = call (`mapfoldl`/3), F, `[]`, List

  %% Unique:
  %%    _23
  _45 = succeeded:body _23
  br _45, ^64, ^1

64:
  %% Argument types:
  %%    _23 => {list(any()), any()}
  %% Unique:
  %%    _23
  _25 = get_tuple_element _23, `0`

  %% Argument types:
  %%    _23 => {list(any()), any()}
  %% Unique:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    _25 => list(any())
  %%    List => list(100000)
  %% Aliased:
  %%    List
  %% Unique:
  %%    _25
  _48 = bif:'=:=' _25, List
  br _48, ^48, ^47

48:
  %% beam_ssa_SUITE.erl:859
  %% Result type:
  %%    {list(any()), any()}
  %% Aliased:
  %%    F, 
  %%    List
  _26 = call (`fast_mapfoldl`/3), F, `[]`, List

  %% Unique:
  %%    _26
  _49 = succeeded:body _26
  br _49, ^59, ^1

59:
  %% Argument types:
  %%    _26 => {list(any()), any()}
  %% Unique:
  %%    _26
  _28 = get_tuple_element _26, `0`

  %% beam_ssa_SUITE.erl:859
  %% Argument types:
  %%    _28 => list(any())
  %%    List => list(100000)
  %% Aliased:
  %%    List
  %% Unique:
  %%    _28
  _17 = bif:'=:=' _28, List
  br _17, ^76, ^51

76:
  %% Argument types:
  %%    _26 => {list(100000), any()}
  %% Unique:
  %%    _26
  _27 = get_tuple_element _26, `1`

  %% beam_ssa_SUITE.erl:859
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24, 
  %%    _27
  _18 = bif:'=:=' _27, _24
  br _18, ^53, ^51

53:
  %% beam_ssa_SUITE.erl:860
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _30 = bif:tuple_size _24

  %% Unique:
  %%    _30
  _54 = succeeded:body _30
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _30 => 0..16777215
  %% Unique:
  %%    _30
  _57 = bif:'=:=' _30, `100000`
  br _57, ^57, ^56

57:
  %% Result type:
  %%    'ok'
  ret `ok`

56:
  %% beam_ssa_SUITE.erl:860
  %% Unique:
  %%    _30
  _34 = match_fail `badmatch`, _30

  %% Unique:
  %%    _34
  _58 = succeeded:body _34
  br ^1

51:
  %% beam_ssa_SUITE.erl:859
  %% Unique:
  %%    _26
  _35 = match_fail `badmatch`, _26

  %% Unique:
  %%    _35
  _63 = succeeded:body _35
  br ^1

47:
  %% beam_ssa_SUITE.erl:858
  %% Unique:
  %%    _23
  _36 = match_fail `badmatch`, _23

  %% Unique:
  %%    _36
  _68 = succeeded:body _36
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38
}

%% beam_ssa_SUITE.erl:863
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`mapfoldl_limits`() {
0:
  %% Result type:
  %%    {1000, 100000}
  ret `{1000,100000}`
}

%% beam_ssa_SUITE.erl:866
%% Counter = 63
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`test_mapfoldl_implementations`() {
0:
  %% beam_ssa_SUITE.erl:867
  Seq = call (`lists`:`seq`/2), `1`, `10`

  %% Aliased:
  %%    Seq
  _28 = succeeded:body Seq
  br _28, ^28, ^1

28:
  %% Result type:
  %%    {number(), number()}
  F = make_fun (`'-test_mapfoldl_implementations/0-fun-0-'`/2)

  %% beam_ssa_SUITE.erl:869
  %% Result type:
  %%    {list(any()), any()}
  %% Aliased:
  %%    F, 
  %%    Seq
  _13 = call (`mapfoldl`/3), F, `0`, Seq

  %% Unique:
  %%    _13
  _29 = succeeded:body _13
  br _29, ^57, ^1

57:
  %% Argument types:
  %%    _13 => {list(any()), any()}
  %% Unique:
  %%    _13
  _14 = get_tuple_element _13, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _56 = bif:'=:=' _14, `55`
  br _56, ^55, ^31

55:
  %% Argument types:
  %%    _13 => {list(any()), 55}
  %% Unique:
  %%    _13
  _15 = get_tuple_element _13, `0`

  %% Argument types:
  %%    _15 => list(any())
  %% Aliased:
  %%    Seq
  %% Unique:
  %%    _15
  _32 = bif:'=:=' _15, Seq
  br _32, ^32, ^31

32:
  %% beam_ssa_SUITE.erl:870
  %% Result type:
  %%    {list(any()), any()}
  %% Aliased:
  %%    F, 
  %%    Seq
  _16 = call (`fast_mapfoldl`/3), F, `0`, Seq

  %% Unique:
  %%    _16
  _33 = succeeded:body _16
  br _33, ^50, ^1

50:
  %% Argument types:
  %%    _16 => {list(any()), any()}
  %% Unique:
  %%    _16
  _17 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _49 = bif:'=:=' _17, `55`
  br _49, ^48, ^35

48:
  %% Argument types:
  %%    _16 => {list(any()), 55}
  %% Unique:
  %%    _16
  _18 = get_tuple_element _16, `0`

  %% Argument types:
  %%    _18 => list(any())
  %%    Seq => list(any())
  %% Aliased:
  %%    Seq
  %% Unique:
  %%    _18
  _36 = bif:'=:=' _18, Seq
  br _36, ^36, ^35

36:
  %% beam_ssa_SUITE.erl:871
  %% Result type:
  %%    {list(number()), number()}
  %% Aliased:
  %%    F, 
  %%    Seq
  _19 = call (`slow_mapfoldl`/3), F, `0`, Seq

  %% Unique:
  %%    _19
  _37 = succeeded:body _19
  br _37, ^43, ^1

43:
  %% Argument types:
  %%    _19 => {list(number()), number()}
  %% Unique:
  %%    _19
  _20 = get_tuple_element _19, `1`

  %% Argument types:
  %%    _20 => number()
  %% Unique:
  %%    _20
  _42 = bif:'=:=' _20, `55`
  br _42, ^41, ^39

41:
  %% Argument types:
  %%    _19 => {list(number()), 55}
  %% Unique:
  %%    _19
  _21 = get_tuple_element _19, `0`

  %% Argument types:
  %%    _21 => list(number())
  %%    Seq => list(any())
  %% Aliased:
  %%    Seq
  %% Unique:
  %%    _21
  _40 = bif:'=:=' _21, Seq
  br _40, ^40, ^39

40:
  %% Result type:
  %%    'ok'
  ret `ok`

39:
  %% beam_ssa_SUITE.erl:871
  %% Unique:
  %%    _19
  _23 = match_fail `badmatch`, _19

  %% Unique:
  %%    _23
  _47 = succeeded:body _23
  br ^1

35:
  %% beam_ssa_SUITE.erl:870
  %% Unique:
  %%    _16
  _24 = match_fail `badmatch`, _16

  %% Unique:
  %%    _24
  _54 = succeeded:body _24
  br ^1

31:
  %% beam_ssa_SUITE.erl:869
  %% Unique:
  %%    _13
  _25 = match_fail `badmatch`, _13

  %% Unique:
  %%    _25
  _61 = succeeded:body _25
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% beam_ssa_SUITE.erl:874
%% Counter = 55
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _) -> {any(), any()})
function `beam_ssa_SUITE`:`mapfoldl`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _2
  _45 = is_nonempty_list _2
  br _45, ^45, ^28

45:
  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _11 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _2
  _10 = get_tl _2

  %% beam_ssa_SUITE.erl:875
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    _0 => fun((_, _) -> {any(), any()})
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _11
  _12 = call _0, _11, _1

  %% Aliased:
  %%    _12
  _29 = succeeded:body _12
  br _29, ^40, ^1

40:
  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `0`

  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% beam_ssa_SUITE.erl:876
  %% Result type:
  %%    {list(any()), any()}
  %% Aliased:
  %%    _0, 
  %%    _10, 
  %%    _13
  _15 = call (`mapfoldl`/3), _0, _13, _10

  %% Unique:
  %%    _15
  _32 = succeeded:body _15
  br _32, ^35, ^1

35:
  %% Argument types:
  %%    _15 => {list(any()), any()}
  %% Unique:
  %%    _15
  _17 = get_tuple_element _15, `0`

  %% Argument types:
  %%    _15 => {list(any()), any()}
  %% Unique:
  %%    _15
  _16 = get_tuple_element _15, `1`

  %% Argument types:
  %%    _17 => list(any())
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _17
  _18 = put_list _14, _17

  %% Argument types:
  %%    _18 => nonempty_list(any())
  %% Aliased:
  %%    _16
  %% Unique:
  %%    _18
  _21 = put_tuple _18, _16
  %% Result type:
  %%    {nonempty_list(any()), any()}
  %% Unique:
  %%    _21
  ret _21

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _49 = bif:'=:=' _2, `[]`
  br _49, ^48, ^27

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _20 = put_tuple `[]`, _1
  %% Result type:
  %%    {nil(), any()}
  %% Unique:
  %%    _20
  ret _20

27:
  %% beam_ssa_SUITE.erl:874
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-mapfoldl/3-',3}}
  _24 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _24
  _50 = succeeded:body _24
  br ^1

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% beam_ssa_SUITE.erl:885
%% Counter = 39
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _) -> {number(), number()})
%%    _1 =>
%%     number()
%%    _2 =>
%%     list(any())
function `beam_ssa_SUITE`:`slow_mapfoldl`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _2
  _30 = is_nonempty_list _2
  br _30, ^30, ^33

30:
  %% Argument types:
  %%    _2 => nonempty_list(any())
  %% Aliased:
  %%    _2
  _15 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_list(any())
  %% Aliased:
  %%    _2
  _14 = get_tl _2

  %% beam_ssa_SUITE.erl:886
  %% Result type:
  %%    {number(), number()}
  %% Argument types:
  %%    (`'-test_mapfoldl_implementations/0-fun-0-'`/2) => fun((_, _) -> {number(), number()})
  %%    _1 => number()
  %% Aliased:
  %%    _15
  %% Unique:
  %%    _1
  Res1 = call (`'-test_mapfoldl_implementations/0-fun-0-'`/2), _15, _1

  %% Unique:
  %%    Res1
  _24 = succeeded:body Res1
  br _24, ^25, ^1

25:
  %% beam_ssa_SUITE.erl:889
  %% Argument types:
  %%    Res1 => {number(), number()}
  %% Unique:
  %%    Res1
  _4 = get_tuple_element Res1, `1`

  %% beam_ssa_SUITE.erl:889
  %% Result type:
  %%    {list(number()), number()}
  %% Aliased:
  %%    _0, 
  %%    _14
  %% Unique:
  %%    _4
  Res2 = call (`slow_mapfoldl`/3), _0, _4, _14

  %% Unique:
  %%    Res2
  _26 = succeeded:body Res2
  br _26, ^29, ^1

29:
  %% beam_ssa_SUITE.erl:890
  %% Argument types:
  %%    Res1 => {number(), number()}
  %% Unique:
  %%    Res1
  _8 = get_tuple_element Res1, `0`

  %% beam_ssa_SUITE.erl:890
  %% Argument types:
  %%    Res2 => {list(number()), number()}
  %% Unique:
  %%    Res2
  _7 = get_tuple_element Res2, `0`

  %% beam_ssa_SUITE.erl:890
  %% Argument types:
  %%    Res2 => {list(number()), number()}
  %% Unique:
  %%    Res2
  _6 = get_tuple_element Res2, `1`

  %% Argument types:
  %%    _8 => number()
  %%    _7 => list(number())
  %% Unique:
  %%    _7, 
  %%    _8
  _16 = put_list _8, _7

  %% Argument types:
  %%    _16 => nonempty_list(number())
  %%    _6 => number()
  %% Unique:
  %%    _6, 
  %%    _16
  _18 = put_tuple _16, _6
  %% Result type:
  %%    {nonempty_list(number()), number()}
  %% Unique:
  %%    _18
  ret _18

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20

33:
  %% Argument types:
  %%    _1 => number()
  %% Unique:
  %%    _1
  _17 = put_tuple `[]`, _1
  %% Result type:
  %%    {nil(), number()}
  %% Unique:
  %%    _17
  ret _17
}

%% beam_ssa_SUITE.erl:897
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _) -> {any(), any()})
%%    _2 =>
%%     list(any())
function `beam_ssa_SUITE`:`fast_mapfoldl`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _2
  _31 = is_nonempty_list _2
  br _31, ^31, ^34

31:
  %% Argument types:
  %%    _2 => nonempty_list(any())
  %% Aliased:
  %%    _2
  _15 = get_hd _2

  %% Argument types:
  %%    _2 => nonempty_list(any())
  %% Aliased:
  %%    _2
  _14 = get_tl _2

  %% beam_ssa_SUITE.erl:898
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    _0 => fun((_, _) -> {any(), any()})
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _15
  Res1 = call _0, _15, _1

  %% Aliased:
  %%    Res1
  _25 = succeeded:body Res1
  br _25, ^25, ^1

25:
  %% beam_ssa_SUITE.erl:899
  %% Argument types:
  %%    Res1 => {any(), any()}
  %% Aliased:
  %%    Res1
  R = get_tuple_element Res1, `0`

  %% beam_ssa_SUITE.erl:900
  %% Argument types:
  %%    Res1 => {any(), any()}
  %% Aliased:
  %%    Res1
  _5 = get_tuple_element Res1, `1`

  %% beam_ssa_SUITE.erl:900
  %% Result type:
  %%    {list(any()), any()}
  %% Aliased:
  %%    _0, 
  %%    _5, 
  %%    _14
  Res2 = call (`fast_mapfoldl`/3), _0, _5, _14

  %% Unique:
  %%    Res2
  _28 = succeeded:body Res2
  br _28, ^30, ^1

30:
  %% beam_ssa_SUITE.erl:901
  %% Argument types:
  %%    Res2 => {list(any()), any()}
  %% Unique:
  %%    Res2
  _8 = get_tuple_element Res2, `0`

  %% beam_ssa_SUITE.erl:901
  %% Argument types:
  %%    Res2 => {list(any()), any()}
  %% Unique:
  %%    Res2
  _7 = get_tuple_element Res2, `1`

  %% Argument types:
  %%    _8 => list(any())
  %% Aliased:
  %%    R
  %% Unique:
  %%    _8
  _16 = put_list R, _8

  %% Argument types:
  %%    _16 => nonempty_list(any())
  %% Aliased:
  %%    _7
  %% Unique:
  %%    _16
  _19 = put_tuple _16, _7
  %% Result type:
  %%    {nonempty_list(any()), any()}
  %% Unique:
  %%    _19
  ret _19

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _18 = put_tuple `[]`, _1
  %% Result type:
  %%    {nil(), any()}
  %% Unique:
  %%    _18
  ret _18
}

%% beam_ssa_SUITE.erl:904
%% Counter = 829
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag`(_0) {
0:
  br ^816

816:
  _198 = new_try_tag `'catch'`
  br _198, ^196, ^197

196:
  %% beam_ssa_SUITE.erl:905
  %% Result type:
  %%    none()
  _139 = call (`grab_bag_1`/0)

  %% Aliased:
  %%    _139
  _200 = succeeded:body _139
  br ^197

197:
  %% Unique:
  %%    _198
  _203 = landingpad `'catch'`, _198

  %% Aliased:
  %%    _203
  _201 = extract _203, `0`
  br ^195

195:
  %% Aliased:
  %%    _201
  %% Unique:
  %%    _198
  _1 = catch_end _198, _201

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _603 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _603, ^804, ^206

804:
  br ^817

817:
  _210 = new_try_tag `'catch'`
  br _210, ^208, ^209

208:
  %% beam_ssa_SUITE.erl:906
  %% Result type:
  %%    none()
  _141 = call (`grab_bag_2`/0)

  %% Aliased:
  %%    _141
  _212 = succeeded:body _141
  br ^209

209:
  %% Unique:
  %%    _210
  _215 = landingpad `'catch'`, _210

  %% Aliased:
  %%    _215
  _213 = extract _215, `0`
  br ^207

207:
  %% Aliased:
  %%    _213
  %% Unique:
  %%    _210
  _3 = catch_end _210, _213

  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _596 = is_tagged_tuple _3, `2`, `'EXIT'`
  br _596, ^805, ^218

805:
  br ^818

818:
  _222 = new_try_tag `'catch'`
  br _222, ^220, ^221

220:
  %% beam_ssa_SUITE.erl:907
  %% Result type:
  %%    none()
  _143 = call (`grab_bag_3`/0)

  %% Aliased:
  %%    _143
  _224 = succeeded:body _143
  br ^221

221:
  %% Unique:
  %%    _222
  _227 = landingpad `'catch'`, _222

  %% Aliased:
  %%    _227
  _225 = extract _227, `0`
  br ^219

219:
  %% Aliased:
  %%    _225
  %% Unique:
  %%    _222
  _5 = catch_end _222, _225

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5
  _589 = is_tagged_tuple _5, `2`, `'EXIT'`
  br _589, ^806, ^230

806:
  br ^819

819:
  _234 = new_try_tag `'catch'`
  br _234, ^232, ^233

232:
  %% beam_ssa_SUITE.erl:908
  %% Result type:
  %%    none()
  _145 = call (`grab_bag_4`/0)

  %% Aliased:
  %%    _145
  _236 = succeeded:body _145
  br ^233

233:
  %% Unique:
  %%    _234
  _239 = landingpad `'catch'`, _234

  %% Aliased:
  %%    _239
  _237 = extract _239, `0`
  br ^231

231:
  %% Aliased:
  %%    _237
  %% Unique:
  %%    _234
  _7 = catch_end _234, _237

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _582 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _582, ^807, ^242

807:
  br ^820

820:
  _246 = new_try_tag `'catch'`
  br _246, ^244, ^245

244:
  %% beam_ssa_SUITE.erl:910
  %% Result type:
  %%    none()
  _147 = call (`grab_bag_5`/2), `a`, `17`

  %% Aliased:
  %%    _147
  _248 = succeeded:body _147
  br ^245

245:
  %% Unique:
  %%    _246
  _251 = landingpad `'catch'`, _246

  %% Aliased:
  %%    _251
  _249 = extract _251, `0`
  br ^243

243:
  %% Aliased:
  %%    _249
  %% Unique:
  %%    _246
  _9 = catch_end _246, _249

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _575 = is_tagged_tuple _9, `2`, `'EXIT'`
  br _575, ^572, ^254

572:
  %% Argument types:
  %%    _9 => {''EXIT'', any()}
  %% Aliased:
  %%    _9
  _72 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _569 = is_tagged_tuple _72, `2`, `function_clause`
  br _569, ^566, ^254

566:
  %% Argument types:
  %%    _72 => {'function_clause', any()}
  %% Aliased:
  %%    _72
  _74 = get_tuple_element _72, `1`

  %% Aliased:
  %%    _74
  _565 = is_nonempty_list _74
  br _565, ^565, ^254

565:
  %% Argument types:
  %%    _74 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _74
  _77 = get_hd _74

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _562 = is_tagged_tuple _77, `4`, `beam_ssa_SUITE`
  br _562, ^559, ^254

559:
  %% Argument types:
  %%    _77 => {'beam_ssa_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _77
  _80 = get_tuple_element _77, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _558 = bif:'=:=' _80, `grab_bag_5`
  br _558, ^557, ^254

557:
  %% Argument types:
  %%    _77 => {'beam_ssa_SUITE', 'grab_bag_5', any(), any()}
  %% Aliased:
  %%    _77
  _79 = get_tuple_element _77, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _556 = bif:'=:=' _79, `[a,17]`
  br _556, ^556, ^254

556:
  %% beam_ssa_SUITE.erl:911
  %% Result type:
  %%    'way'
  _82 = call (`grab_bag_6`/1), `face`

  %% Unique:
  %%    _82
  _255 = succeeded:body _82
  br _255, ^553, ^1

553:
  %% beam_ssa_SUITE.erl:912
  %% Result type:
  %%    'no_match'
  _83 = call (`grab_bag_6`/1), `"ABC"`

  %% Unique:
  %%    _83
  _258 = succeeded:body _83
  br _258, ^550, ^1

550:
  %% beam_ssa_SUITE.erl:913
  %% Result type:
  %%    'no_match'
  _84 = call (`grab_bag_6`/1), `any`

  %% Unique:
  %%    _84
  _261 = succeeded:body _84
  br _261, ^547, ^1

547:
  %% beam_ssa_SUITE.erl:914
  %% Result type:
  %%    'ok'
  _85 = call (`grab_bag_7`/0)

  %% Unique:
  %%    _85
  _264 = succeeded:body _85
  br _264, ^544, ^1

544:
  %% beam_ssa_SUITE.erl:915
  %% Result type:
  %%    nil()
  _86 = call (`grab_bag_8`/0)

  %% Unique:
  %%    _86
  _267 = succeeded:body _86
  br _267, ^542, ^1

542:
  %% beam_ssa_SUITE.erl:916
  %% Result type:
  %%    'ok'
  _87 = call (`grab_bag_9`/0)

  %% Unique:
  %%    _87
  _270 = succeeded:body _87
  br _270, ^539, ^1

539:
  %% beam_ssa_SUITE.erl:917
  %% Result type:
  %%    'whatever'
  _88 = call (`grab_bag_10`/2), `ignore`, `whatever`

  %% Unique:
  %%    _88
  _273 = succeeded:body _88
  br _273, ^536, ^1

536:
  %% beam_ssa_SUITE.erl:918
  %% Result type:
  %%    'other'
  _89 = call (`grab_bag_11`/0)

  %% Unique:
  %%    _89
  _276 = succeeded:body _89
  br _276, ^808, ^1

808:
  br ^821

821:
  _282 = new_try_tag `'catch'`
  br _282, ^280, ^281

280:
  %% beam_ssa_SUITE.erl:919
  %% Result type:
  %%    'ok'
  _149 = call (`grab_bag_12`/0)

  %% Unique:
  %%    _149
  _284 = succeeded:body _149
  br _284, ^284, ^281

284:
  br ^279

281:
  %% Unique:
  %%    _282
  _287 = landingpad `'catch'`, _282

  %% Aliased:
  %%    _287
  _285 = extract _287, `0`
  br ^279

279:
  _288 = phi { _285, ^281 }, { `ok`, ^284 }

  %% Aliased:
  %%    _288
  %% Unique:
  %%    _282
  _19 = catch_end _282, _288

  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _529 = is_tagged_tuple _19, `2`, `'EXIT'`
  br _529, ^809, ^290

809:
  br ^822

822:
  _294 = new_try_tag `'catch'`
  br _294, ^292, ^293

292:
  %% beam_ssa_SUITE.erl:920
  %% Result type:
  %%    none()
  _151 = call (`grab_bag_13`/0)

  %% Aliased:
  %%    _151
  _296 = succeeded:body _151
  br ^293

293:
  %% Unique:
  %%    _294
  _299 = landingpad `'catch'`, _294

  %% Aliased:
  %%    _299
  _297 = extract _299, `0`
  br ^291

291:
  %% Aliased:
  %%    _297
  %% Unique:
  %%    _294
  _21 = catch_end _294, _297

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _522 = is_tagged_tuple _21, `2`, `'EXIT'`
  br _522, ^519, ^302

519:
  %% Argument types:
  %%    _21 => {''EXIT'', any()}
  %% Aliased:
  %%    _21
  _92 = get_tuple_element _21, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _516 = bif:is_tuple _92
  br _516, ^516, ^302

516:
  %% Argument types:
  %%    _92 => {...}
  %% Aliased:
  %%    _92
  _517 = bif:tuple_size _92

  %% Argument types:
  %%    _517 => 0..16777215
  %% Unique:
  %%    _517
  _518 = bif:'=:=' _517, `2`
  br _518, ^515, ^302

515:
  %% Argument types:
  %%    _92 => {any(), any()}
  %% Aliased:
  %%    _92
  _95 = get_tuple_element _92, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _95
  _514 = bif:'=:=' _95, `{badmatch,[]}`
  br _514, ^514, ^302

514:
  %% beam_ssa_SUITE.erl:921
  %% Result type:
  %%    'timeout'
  _96 = call (`grab_bag_14`/0)

  %% Unique:
  %%    _96
  _303 = succeeded:body _96
  br _303, ^511, ^1

511:
  %% beam_ssa_SUITE.erl:922
  %% Result type:
  %%    'beam_ssa_SUITE'
  _97 = call (`grab_bag_15`/1), `beam_ssa_SUITE`

  %% Unique:
  %%    _97
  _306 = succeeded:body _97
  br _306, ^508, ^1

508:
  %% beam_ssa_SUITE.erl:924
  %% Result type:
  %%    'error' | 'not_reached'
  _98 = call (`grab_bag_16a`/1), `timeout_value`

  %% Unique:
  %%    _98
  _309 = succeeded:body _98
  br _309, ^309, ^1

309:
  %% Argument types:
  %%    _98 => 'error' | 'not_reached'
  %% Unique:
  %%    _98
  _506 = bif:'=:=' _98, `error`
  br _506, ^810, ^311

810:
  br ^823

823:
  _315 = new_try_tag `'catch'`
  br _315, ^313, ^314

313:
  %% beam_ssa_SUITE.erl:925
  %% Result type:
  %%    'error' | 'not_reached'
  _153 = call (`grab_bag_16a`/1), `whatever`

  %% Unique:
  %%    _153
  _317 = succeeded:body _153
  br _317, ^317, ^314

317:
  br ^312

314:
  %% Unique:
  %%    _315
  _320 = landingpad `'catch'`, _315

  %% Aliased:
  %%    _320
  _318 = extract _320, `0`
  br ^312

312:
  _321 = phi { _318, ^314 }, { _153, ^317 }

  %% Aliased:
  %%    _321
  %% Unique:
  %%    _315
  _26 = catch_end _315, _321

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _501 = is_tagged_tuple _26, `2`, `'EXIT'`
  br _501, ^498, ^323

498:
  %% Argument types:
  %%    _26 => {''EXIT'', any()}
  %% Aliased:
  %%    _26
  _99 = get_tuple_element _26, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _99
  _495 = is_tagged_tuple _99, `2`, `timeout_value`
  br _495, ^811, ^323

811:
  br ^824

824:
  _327 = new_try_tag `'catch'`
  br _327, ^325, ^326

325:
  %% beam_ssa_SUITE.erl:926
  %% Result type:
  %%    'ok'
  _155 = call (`grab_bag_16b`/1), `whatever`

  %% Aliased:
  %%    _155
  _329 = succeeded:body _155
  br _329, ^329, ^326

329:
  br ^324

326:
  %% Unique:
  %%    _327
  _332 = landingpad `'catch'`, _327

  %% Aliased:
  %%    _332
  _330 = extract _332, `0`
  br ^324

324:
  _333 = phi { _330, ^326 }, { `ok`, ^329 }

  %% Aliased:
  %%    _333
  %% Unique:
  %%    _327
  _28 = catch_end _327, _333

  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _488 = is_tagged_tuple _28, `2`, `'EXIT'`
  br _488, ^485, ^335

485:
  %% Argument types:
  %%    _28 => {''EXIT'', any()}
  %% Aliased:
  %%    _28
  _103 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _103
  _482 = is_tagged_tuple _103, `2`, `timeout_value`
  br _482, ^479, ^335

479:
  %% beam_ssa_SUITE.erl:927
  _107 = call (`grab_bag_16b`/1), `error`

  %% Aliased:
  %%    _107
  _336 = succeeded:body _107
  br _336, ^336, ^1

336:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _477 = bif:'=:=' _107, `timeout_value`
  br _477, ^476, ^338

476:
  %% beam_ssa_SUITE.erl:929
  %% Result type:
  %%    'fact'
  _108 = call (`grab_bag_17`/0)

  %% Unique:
  %%    _108
  _339 = succeeded:body _108
  br _339, ^812, ^1

812:
  br ^825

825:
  _345 = new_try_tag `'catch'`
  br _345, ^343, ^344

343:
  %% beam_ssa_SUITE.erl:931
  %% Result type:
  %%    none()
  _157 = call (`grab_bag_18`/0)

  %% Aliased:
  %%    _157
  _347 = succeeded:body _157
  br ^344

344:
  %% Unique:
  %%    _345
  _350 = landingpad `'catch'`, _345

  %% Aliased:
  %%    _350
  _348 = extract _350, `0`
  br ^342

342:
  %% Aliased:
  %%    _348
  %% Unique:
  %%    _345
  _32 = catch_end _345, _348

  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _469 = is_tagged_tuple _32, `2`, `'EXIT'`
  br _469, ^466, ^353

466:
  %% Argument types:
  %%    _32 => {''EXIT'', any()}
  %% Aliased:
  %%    _32
  _109 = get_tuple_element _32, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _109
  _463 = bif:is_tuple _109
  br _463, ^463, ^353

463:
  %% Argument types:
  %%    _109 => {...}
  %% Aliased:
  %%    _109
  _464 = bif:tuple_size _109

  %% Argument types:
  %%    _464 => 0..16777215
  %% Unique:
  %%    _464
  _465 = bif:'=:=' _464, `2`
  br _465, ^462, ^353

462:
  %% Argument types:
  %%    _109 => {any(), any()}
  %% Aliased:
  %%    _109
  _112 = get_tuple_element _109, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _461 = bif:'=:=' _112, `{try_clause,[]}`
  br _461, ^461, ^353

461:
  %% Argument types:
  %%    _109 => {{'try_clause', nil()}, any()}
  %% Aliased:
  %%    _109
  _111 = get_tuple_element _109, `1`

  %% Aliased:
  %%    _111
  _460 = is_nonempty_list _111
  br _460, ^813, ^353

813:
  br ^826

826:
  _357 = new_try_tag `'catch'`
  br _357, ^355, ^356

355:
  %% beam_ssa_SUITE.erl:933
  %% Result type:
  %%    none()
  _159 = call (`grab_bag_19`/0)

  %% Aliased:
  %%    _159
  _359 = succeeded:body _159
  br ^356

356:
  %% Unique:
  %%    _357
  _362 = landingpad `'catch'`, _357

  %% Aliased:
  %%    _362
  _360 = extract _362, `0`
  br ^354

354:
  %% Aliased:
  %%    _360
  %% Unique:
  %%    _357
  _34 = catch_end _357, _360

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _456 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _456, ^453, ^365

453:
  %% Argument types:
  %%    _34 => {''EXIT'', any()}
  %% Aliased:
  %%    _34
  _115 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _115
  _450 = bif:is_tuple _115
  br _450, ^450, ^365

450:
  %% Argument types:
  %%    _115 => {...}
  %% Aliased:
  %%    _115
  _451 = bif:tuple_size _115

  %% Argument types:
  %%    _451 => 0..16777215
  %% Unique:
  %%    _451
  _452 = bif:'=:=' _451, `2`
  br _452, ^449, ^365

449:
  %% Argument types:
  %%    _115 => {any(), any()}
  %% Aliased:
  %%    _115
  _118 = get_tuple_element _115, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _118
  _448 = bif:'=:=' _118, `{badmatch,[whatever]}`
  br _448, ^448, ^365

448:
  %% Argument types:
  %%    _115 => {{'badmatch', nonempty_list('whatever')}, any()}
  %% Aliased:
  %%    _115
  _117 = get_tuple_element _115, `1`

  %% Aliased:
  %%    _117
  _447 = is_nonempty_list _117
  br _447, ^814, ^365

814:
  br ^827

827:
  _369 = new_try_tag `'catch'`
  br _369, ^367, ^368

367:
  %% beam_ssa_SUITE.erl:935
  %% Result type:
  %%    {nonempty_list(105..116), 'ok'}
  _161 = call (`grab_bag_20`/0)

  %% Unique:
  %%    _161
  _371 = succeeded:body _161
  br _371, ^371, ^368

371:
  br ^366

368:
  %% Unique:
  %%    _369
  _374 = landingpad `'catch'`, _369

  %% Aliased:
  %%    _374
  _372 = extract _374, `0`
  br ^366

366:
  _375 = phi { _372, ^368 }, { _161, ^371 }

  %% Aliased:
  %%    _375
  %% Unique:
  %%    _369
  _36 = catch_end _369, _375

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _443 = is_tagged_tuple _36, `2`, `'EXIT'`
  br _443, ^440, ^377

440:
  %% Argument types:
  %%    _36 => {''EXIT'', any()}
  %% Aliased:
  %%    _36
  _121 = get_tuple_element _36, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _437 = is_tagged_tuple _121, `2`, `if_clause`
  br _437, ^434, ^377

434:
  %% Argument types:
  %%    _121 => {'if_clause', any()}
  %% Aliased:
  %%    _121
  _123 = get_tuple_element _121, `1`

  %% Aliased:
  %%    _123
  _433 = is_nonempty_list _123
  br _433, ^607, ^377

607:
  %% beam_ssa_SUITE.erl:937
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _38 = call (`id`/1), `64`

  %% Aliased:
  %%    _38
  _378 = succeeded:body _38
  br _378, ^378, ^1

378:
  %% beam_ssa_SUITE.erl:937
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _38
  _127 = call (`grab_bag_21`/1), _38

  %% Unique:
  %%    _127
  _379 = succeeded:body _127
  br _379, ^379, ^1

379:
  %% Argument types:
  %%    _127 => integer()
  %% Unique:
  %%    _127
  _431 = bif:'=:=' _127, `6`
  br _431, ^815, ^381

815:
  br ^828

828:
  _385 = new_try_tag `'catch'`
  br _385, ^383, ^384

383:
  %% beam_ssa_SUITE.erl:938
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _40 = call (`id`/1), `a`

  %% Aliased:
  %%    _40
  _387 = succeeded:body _40
  br _387, ^387, ^384

387:
  %% beam_ssa_SUITE.erl:938
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _40
  _163 = call (`grab_bag_21`/1), _40

  %% Unique:
  %%    _163
  _388 = succeeded:body _163
  br _388, ^388, ^384

388:
  br ^382

384:
  %% Unique:
  %%    _385
  _391 = landingpad `'catch'`, _385

  %% Aliased:
  %%    _391
  _389 = extract _391, `0`
  br ^382

382:
  _392 = phi { _389, ^384 }, { _163, ^388 }

  %% Aliased:
  %%    _392
  %% Unique:
  %%    _385
  _41 = catch_end _385, _392

  %% Argument types:
  %%    
  %% Aliased:
  %%    _41
  _426 = is_tagged_tuple _41, `2`, `'EXIT'`
  br _426, ^423, ^394

423:
  %% Argument types:
  %%    _41 => {''EXIT'', any()}
  %% Aliased:
  %%    _41
  _128 = get_tuple_element _41, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _128
  _420 = is_tagged_tuple _128, `2`, `badarith`
  br _420, ^417, ^394

417:
  %% beam_ssa_SUITE.erl:940
  %% Result type:
  %%    'false'
  _132 = call (`grab_bag_22`/0)

  %% Unique:
  %%    _132
  _395 = succeeded:body _132
  br _395, ^414, ^1

414:
  %% beam_ssa_SUITE.erl:943
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _44 = call (`id`/1), `#{page_title => unset}`

  %% Aliased:
  %%    _44
  _398 = succeeded:body _44
  br _398, ^398, ^1

398:
  %% beam_ssa_SUITE.erl:943
  %% Result type:
  %%    {'reply', {'ok', 'foo_bar'}, map()}
  %% Aliased:
  %%    _44
  _133 = call (`grab_bag_23`/1), _44

  %% Unique:
  %%    _133
  _399 = succeeded:body _133
  br _399, ^405, ^1

405:
  %% Argument types:
  %%    _133 => {'reply', {'ok', 'foo_bar'}, map()}
  %% Unique:
  %%    _133
  _134 = get_tuple_element _133, `2`

  %% Argument types:
  %%    _134 => map()
  %% Aliased:
  %%    _134
  _137 = get_map_element _134, `page_title`

  %% Aliased:
  %%    _137
  _402 = succeeded:guard _137
  br _402, ^402, ^401

402:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _137
  _404 = bif:'=:=' _137, `foo_bar`
  br _404, ^403, ^401

403:
  %% Result type:
  %%    'ok'
  ret `ok`

401:
  %% beam_ssa_SUITE.erl:942
  %% Unique:
  %%    _133
  _164 = match_fail `badmatch`, _133

  %% Unique:
  %%    _164
  _413 = succeeded:body _164
  br ^1

394:
  %% beam_ssa_SUITE.erl:938
  %% Aliased:
  %%    _41
  _166 = match_fail `badmatch`, _41

  %% Unique:
  %%    _166
  _429 = succeeded:body _166
  br ^1

381:
  %% beam_ssa_SUITE.erl:937
  %% Unique:
  %%    _127
  _167 = match_fail `badmatch`, _127

  %% Unique:
  %%    _167
  _432 = succeeded:body _167
  br ^1

377:
  %% beam_ssa_SUITE.erl:935
  %% Aliased:
  %%    _36
  _168 = match_fail `badmatch`, _36

  %% Unique:
  %%    _168
  _446 = succeeded:body _168
  br ^1

365:
  %% beam_ssa_SUITE.erl:933
  %% Aliased:
  %%    _34
  _169 = match_fail `badmatch`, _34

  %% Unique:
  %%    _169
  _459 = succeeded:body _169
  br ^1

353:
  %% beam_ssa_SUITE.erl:931
  %% Aliased:
  %%    _32
  _170 = match_fail `badmatch`, _32

  %% Unique:
  %%    _170
  _472 = succeeded:body _170
  br ^1

338:
  %% beam_ssa_SUITE.erl:927
  %% Aliased:
  %%    _107
  _172 = match_fail `badmatch`, _107

  %% Unique:
  %%    _172
  _478 = succeeded:body _172
  br ^1

335:
  %% beam_ssa_SUITE.erl:926
  %% Aliased:
  %%    _28
  _173 = match_fail `badmatch`, _28

  %% Unique:
  %%    _173
  _491 = succeeded:body _173
  br ^1

323:
  %% beam_ssa_SUITE.erl:925
  %% Aliased:
  %%    _26
  _174 = match_fail `badmatch`, _26

  %% Unique:
  %%    _174
  _504 = succeeded:body _174
  br ^1

311:
  %% beam_ssa_SUITE.erl:924
  _175 = match_fail `badmatch`, `not_reached`

  %% Unique:
  %%    _175
  _507 = succeeded:body _175
  br ^1

302:
  %% beam_ssa_SUITE.erl:920
  %% Aliased:
  %%    _21
  _178 = match_fail `badmatch`, _21

  %% Unique:
  %%    _178
  _525 = succeeded:body _178
  br ^1

290:
  %% beam_ssa_SUITE.erl:919
  %% Aliased:
  %%    _19
  _179 = match_fail `badmatch`, _19

  %% Unique:
  %%    _179
  _532 = succeeded:body _179
  br ^1

254:
  %% beam_ssa_SUITE.erl:909
  %% Aliased:
  %%    _9
  _188 = match_fail `badmatch`, _9

  %% Unique:
  %%    _188
  _578 = succeeded:body _188
  br ^1

242:
  %% beam_ssa_SUITE.erl:908
  %% Aliased:
  %%    _7
  _189 = match_fail `badmatch`, _7

  %% Unique:
  %%    _189
  _585 = succeeded:body _189
  br ^1

230:
  %% beam_ssa_SUITE.erl:907
  %% Aliased:
  %%    _5
  _190 = match_fail `badmatch`, _5

  %% Unique:
  %%    _190
  _592 = succeeded:body _190
  br ^1

218:
  %% beam_ssa_SUITE.erl:906
  %% Aliased:
  %%    _3
  _191 = match_fail `badmatch`, _3

  %% Unique:
  %%    _191
  _599 = succeeded:body _191
  br ^1

206:
  %% beam_ssa_SUITE.erl:905
  %% Aliased:
  %%    _1
  _192 = match_fail `badmatch`, _1

  %% Unique:
  %%    _192
  _606 = succeeded:body _192
  br ^1

1:
  _193 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _193
}

%% beam_ssa_SUITE.erl:947
%% Counter = 10
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_1`() {
0:
  %% beam_ssa_SUITE.erl:950
  _4 = match_fail `badmap`, `true`

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br ^1

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% beam_ssa_SUITE.erl:952
%% Counter = 33
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_2`() {
0:
  %% beam_ssa_SUITE.erl:956
  %% Argument types:
  %%    
  _16 = bif:'or' `[]`, `27`

  %% Unique:
  %%    _16
  _31 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% beam_ssa_SUITE.erl:968
%% Counter = 14
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_3`() {
0:
  %% Result type:
  %%    none()
  _5 = make_fun (`'-grab_bag_3/0-fun-0-'`/1)

  %% beam_ssa_SUITE.erl:969
  %% Aliased:
  %%    _5
  _7 = match_fail `case_clause`, _5

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% beam_ssa_SUITE.erl:985
%% Counter = 120
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_4`() {
0:
  br ^118

118:
  _58 = new_try_tag `'try'`
  br _58, ^117, ^55

117:
  br ^119

119:
  _63 = new_try_tag `'try'`
  br _63, ^62, ^60

62:
  %% beam_ssa_SUITE.erl:991
  _44 = match_fail `try_clause`, `fy`

  %% Unique:
  %%    _44
  _64 = succeeded:body _44
  br ^60

60:
  %% Unique:
  %%    _63
  _79 = landingpad `'try'`, _63

  %% Aliased:
  %%    _79
  _7 = extract _79, `1`

  %% Aliased:
  %%    _79
  _6 = extract _79, `2`

  %% Unique:
  %%    _63
  _80 = kill_try_tag _63
  br ^39

39:
  %% Aliased:
  %%    _6, 
  %%    _7
  _50 = resume _6, _7

  %% Unique:
  %%    _50
  _78 = succeeded:body _50
  br ^55

55:
  %% Unique:
  %%    _58
  _83 = landingpad `'try'`, _58

  %% Aliased:
  %%    _83
  _13 = extract _83, `1`

  %% Aliased:
  %%    _83
  _12 = extract _83, `2`

  %% Unique:
  %%    _58
  _84 = kill_try_tag _58

  %% Aliased:
  %%    _12, 
  %%    _13
  _51 = resume _12, _13

  %% Unique:
  %%    _51
  _82 = succeeded:body _51
  br ^1

1:
  _52 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _52
}

%% beam_ssa_SUITE.erl:1006
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
%%    _1 =>
%%     17
function `beam_ssa_SUITE`:`grab_bag_5`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:1006
  %% Anno: #{inlined => {'-inlined-grab_bag_5/2-',2}}
  _8 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _8
  _15 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% beam_ssa_SUITE.erl:1009
%% Counter = 23
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'any' | 'face' | nonempty_list(65..67)
function `beam_ssa_SUITE`:`grab_bag_6`(_0) {
0:
  %% Argument types:
  %%    _0 => 'any' | 'face' | nonempty_list(65..67)
  %% Unique:
  %%    _0
  _20 = bif:'=:=' _0, `"ABC"`
  br _20, ^10, ^11

11:
  %% Argument types:
  %%    _0 => 'any' | 'face' | nonempty_list(65..67)
  %% Unique:
  %%    _0
  _22 = bif:'=:=' _0, `face`
  br _22, ^21, ^10

21:
  %% Result type:
  %%    'way'
  ret `way`

10:
  %% Result type:
  %%    'no_match'
  ret `no_match`
}

%% beam_ssa_SUITE.erl:1016
%% Counter = 12
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_7`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% beam_ssa_SUITE.erl:1035
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_8`() {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% beam_ssa_SUITE.erl:1053
%% Counter = 16
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_9`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% beam_ssa_SUITE.erl:1058
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'ignore'
%%    _1 =>
%%     'whatever'
function `beam_ssa_SUITE`:`grab_bag_10`(_0, _1) {
0:
  %% Result type:
  %%    'whatever'
  %% Unique:
  %%    _1
  ret _1
}

%% beam_ssa_SUITE.erl:1063
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_11`() {
0:
  %% Result type:
  %%    'other'
  ret `other`
}

%% beam_ssa_SUITE.erl:1073
%% Counter = 7
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_12`() {
0:
  %% beam_ssa_SUITE.erl:1076
  _0 = put_map `exact`, `#{}`, `key`, `teacher`

  %% Unique:
  %%    _0
  _5 = succeeded:body _0
  br _5, ^5, ^1

5:
  %% beam_ssa_SUITE.erl:1076
  %% Unique:
  %%    _0
  _2 = call (`erlang`:`check_process_code`/2), `1`, _0

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:1079
%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_13`() {
0:
  %% beam_ssa_SUITE.erl:1082
  _2 = match_fail `badmatch`, `[]`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:1094
%% Counter = 50
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_14`() {
0:
  br ^16

16:
  %% beam_ssa_SUITE.erl:1098
  _2 = peek_message `none`

  %% Aliased:
  %%    _2
  _49 = succeeded:guard _2
  br _49, ^17, ^47

17:
  _23 = recv_next
  br ^16

47:
  _28 = wait_timeout `0`

  %% Unique:
  %%    _28
  _29 = succeeded:body _28
  br _29, ^29, ^1

29:
  br _28, ^31, ^32

31:
  %% Result type:
  %%    'timeout'
  ret `timeout`

32:
  br ^16

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% beam_ssa_SUITE.erl:1105
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'beam_ssa_SUITE'
function `beam_ssa_SUITE`:`grab_bag_15`(_0) {
0:
  %% beam_ssa_SUITE.erl:1115
  _2 = call (`beam_ssa_SUITE`:`all`/0)

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Result type:
  %%    'beam_ssa_SUITE'
  %% Unique:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:1120
%% Counter = 55
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'timeout_value' | 'whatever'
function `beam_ssa_SUITE`:`grab_bag_16a`(_0) {
0:
  br ^54

54:
  _24 = new_try_tag `'try'`
  br _24, ^23, ^21

23:
  br ^13

13:
  _26 = wait_timeout `bad`

  %% Unique:
  %%    _26
  _27 = succeeded:body _26
  br _27, ^27, ^21

27:
  br _26, ^20, ^30

20:
  %% Unique:
  %%    _24
  _37 = kill_try_tag _24
  %% Result type:
  %%    'not_reached'
  ret `not_reached`

30:
  br ^13

21:
  %% Unique:
  %%    _24
  _35 = landingpad `'try'`, _24

  %% Aliased:
  %%    _35
  _3 = extract _35, `1`

  %% Aliased:
  %%    _35
  _2 = extract _35, `2`

  %% Unique:
  %%    _24
  _36 = kill_try_tag _24

  %% Argument types:
  %%    _0 => 'timeout_value' | 'whatever'
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _0
  _33 = bif:'=:=' _3, _0
  br _33, ^33, ^32

33:
  %% Result type:
  %%    'error'
  ret `error`

32:
  %% Aliased:
  %%    _2, 
  %%    _3
  _17 = resume _2, _3

  %% Unique:
  %%    _17
  _34 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% beam_ssa_SUITE.erl:1132
%% Counter = 55
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'error' | 'whatever'
function `beam_ssa_SUITE`:`grab_bag_16b`(_0) {
0:
  %% beam_ssa_SUITE.erl:1135
  _8 = call (`erlang`:`get`/0)
  _24 = new_try_tag `'try'`
  br _24, ^25, ^21

25:
  br ^13

13:
  %% Aliased:
  %%    _8
  _27 = wait_timeout _8

  %% Unique:
  %%    _27
  _28 = succeeded:body _27
  br _28, ^28, ^21

28:
  br _27, ^20, ^31

20:
  %% Unique:
  %%    _24
  _38 = kill_try_tag _24
  %% Result type:
  %%    'ok'
  ret `ok`

31:
  br ^13

21:
  %% Unique:
  %%    _24
  _36 = landingpad `'try'`, _24

  %% Aliased:
  %%    _36
  _4 = extract _36, `0`

  %% Aliased:
  %%    _36
  _3 = extract _36, `1`

  %% Aliased:
  %%    _36
  _2 = extract _36, `2`

  %% Unique:
  %%    _24
  _37 = kill_try_tag _24

  %% Argument types:
  %%    _4 => 'error' | 'exit' | 'throw'
  %%    _0 => 'error' | 'whatever'
  %% Unique:
  %%    _0, 
  %%    _4
  _34 = bif:'=:=' _4, _0
  br _34, ^34, ^33

34:
  %% Aliased:
  %%    _3
  ret _3

33:
  %% Aliased:
  %%    _2, 
  %%    _3
  _17 = resume _2, _3

  %% Unique:
  %%    _17
  _35 = succeeded:body _17
  br ^1

1:
  _18 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _18
}

%% beam_ssa_SUITE.erl:1143
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_17`() {
0:
  %% Result type:
  %%    'fact'
  ret `fact`
}

%% beam_ssa_SUITE.erl:1157
%% Counter = 34
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_18`() {
0:
  %% beam_ssa_SUITE.erl:1162
  _19 = match_fail `try_clause`, `[]`

  %% Unique:
  %%    _19
  _29 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% beam_ssa_SUITE.erl:1171
%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_19`() {
0:
  %% beam_ssa_SUITE.erl:1172
  _2 = match_fail `badmatch`, `[whatever]`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:1184
%% Counter = 46
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_20`() {
0:
  br ^14

14:
  %% beam_ssa_SUITE.erl:1189
  _11 = peek_message `none`

  %% Aliased:
  %%    _11
  _41 = succeeded:guard _11
  br _41, ^40, ^39

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _38 = bif:'=:=' _11, `list`
  br _38, ^37, ^36

37:
  _19 = remove_message
  %% Result type:
  %%    {nonempty_list(105..116), 'ok'}
  ret `{"list",ok}`

36:
  _20 = recv_next
  br ^14

39:
  _29 = wait_timeout `0`

  %% Unique:
  %%    _29
  _30 = succeeded:body _29
  br _30, ^30, ^1

30:
  br _29, ^34, ^33

34:
  %% beam_ssa_SUITE.erl:1196
  _22 = match_fail `if_clause`

  %% Unique:
  %%    _22
  _32 = succeeded:body _22
  br ^1

33:
  br ^14

1:
  _25 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _25
}

%% beam_ssa_SUITE.erl:1214
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`grab_bag_21`(_0) {
0:
  %% beam_ssa_SUITE.erl:1215
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _5 = call (`id`/1), `0`

  %% Aliased:
  %%    _5
  _9 = succeeded:body _5
  br _9, ^9, ^1

9:
  %% beam_ssa_SUITE.erl:1216
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _4 = bif:'div' _0, `10`

  %% Unique:
  %%    _4
  _10 = succeeded:body _4
  br _10, ^10, ^1

10:
  %% beam_ssa_SUITE.erl:1216
  %% Argument types:
  %%    
  _3 = bif:node

  %% beam_ssa_SUITE.erl:1216
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _3, 
  %%    _4
  _6 = call (`grab_bag_21`/4), `ok`, _4, _3, `[-1]`

  %% Unique:
  %%    _6
  _11 = succeeded:body _6
  br _11, ^11, ^1

11:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _6
  ret _6

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_ssa_SUITE.erl:1218
%% Counter = 6
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'ok'
%%    _1 =>
%%     integer()
%%    _2 =>
%%     atom()
%%    _3 =>
%%     nonempty_list(-1)
function `beam_ssa_SUITE`:`grab_bag_21`(_0, _1, _2, _3) {
0:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1
  ret _1
}

%% beam_ssa_SUITE.erl:1227
%% Counter = 9
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`grab_bag_22`() {
0:
  %% Result type:
  %%    'false'
  ret `false`
}

%% beam_ssa_SUITE.erl:1236
%% Counter = 35
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`grab_bag_23`(_0) {
0:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _32 = bif:is_map _0
  br _32, ^32, ^18

32:
  %% Argument types:
  %%    _0 => map()
  %% Aliased:
  %%    _0
  _7 = get_map_element _0, `page_title`

  %% Aliased:
  %%    _7
  _19 = succeeded:guard _7
  br _19, ^19, ^18

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _31 = bif:'=:=' _7, `unset`
  br _31, ^22, ^18

22:
  %% beam_ssa_SUITE.erl:1237
  %% Aliased:
  %%    _0
  _11 = put_map `exact`, _0, `page_title`, `foo_bar`

  %% Aliased:
  %%    _11
  _23 = succeeded:body _11
  br _23, ^25, ^1

25:
  %% Argument types:
  %%    _11 => map()
  %% Aliased:
  %%    _11
  _14 = put_tuple `reply`, `{ok,foo_bar}`, _11
  %% Result type:
  %%    {'reply', {'ok', 'foo_bar'}, map()}
  %% Unique:
  %%    _14
  ret _14

18:
  %% beam_ssa_SUITE.erl:1236
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-grab_bag_23/1-',1}}
  _15 = match_fail `function_clause`, _0

  %% Unique:
  %%    _15
  _33 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% beam_ssa_SUITE.erl:1246
%% Counter = 23
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`redundant_br`(_0) {
0:
  %% beam_ssa_SUITE.erl:1247
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _1 = call (`id`/1), `{x,y,z}`

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_ssa_SUITE.erl:1247
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  _5 = call (`redundant_br_1`/1), _1

  %% Aliased:
  %%    _5
  _12 = succeeded:body _5
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    _5 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _5
  _21 = bif:'=:=' _5, `{false,{x,y,z}}`
  br _21, ^21, ^14

21:
  %% beam_ssa_SUITE.erl:1248
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _3 = call (`id`/1), `[[[a,b,c]]]`

  %% Aliased:
  %%    _3
  _15 = succeeded:body _3
  br _15, ^15, ^1

15:
  %% beam_ssa_SUITE.erl:1248
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _3
  _6 = call (`redundant_br_1`/1), _3

  %% Aliased:
  %%    _6
  _16 = succeeded:body _6
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    _6 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _6
  _19 = bif:'=:=' _6, `{true,[[a,b,c]]}`
  br _19, ^19, ^18

19:
  %% Result type:
  %%    'ok'
  ret `ok`

18:
  %% beam_ssa_SUITE.erl:1248
  %% Aliased:
  %%    _6
  _7 = match_fail `badmatch`, _6

  %% Unique:
  %%    _7
  _20 = succeeded:body _7
  br ^1

14:
  %% beam_ssa_SUITE.erl:1247
  %% Aliased:
  %%    _5
  _8 = match_fail `badmatch`, _5

  %% Unique:
  %%    _8
  _22 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% beam_ssa_SUITE.erl:1251
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`redundant_br_1`(_0) {
0:
  %% beam_ssa_SUITE.erl:1254
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _1 = bif:hd _0

  %% Aliased:
  %%    _1
  _16 = succeeded:guard _1
  br _16, ^16, ^14

16:
  %% beam_ssa_SUITE.erl:1254
  %% Argument types:
  %%    _1 => 'a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))
  %% Aliased:
  %%    _1
  _2 = bif:hd _1

  %% Aliased:
  %%    _2
  _17 = succeeded:guard _2
  br _17, ^19, ^14

19:
  br ^13

14:
  br ^13

13:
  %% Anno: #{boolean_phi => true}
  _7 = phi { `false`, ^14 }, { `true`, ^19 }
  _8 = phi { _0, ^14 }, { _1, ^19 }

  %% Argument types:
  %%    _7 => 'false' | 'true'
  %%    _8 => atom() | list('a' | nonempty_list('a' | 'b' | 'c' | nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _8
  %% Unique:
  %%    _7
  _9 = put_tuple _7, _8

  %% beam_ssa_SUITE.erl:1257
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Unique:
  %%    _9
  _10 = call (`id`/1), _9

  %% Aliased:
  %%    _10
  _20 = succeeded:body _10
  br _20, ^20, ^1

20:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _10
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% beam_ssa_SUITE.erl:1261
%% Counter = 141
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`coverage`(_0) {
0:
  br ^139

139:
  _45 = new_try_tag `'catch'`
  br _45, ^43, ^44

43:
  %% beam_ssa_SUITE.erl:1273
  %% Result type:
  %%    none()
  _32 = call (`coverage_1`/0)

  %% Aliased:
  %%    _32
  _47 = succeeded:body _32
  br ^44

44:
  %% Unique:
  %%    _45
  _50 = landingpad `'catch'`, _45

  %% Aliased:
  %%    _50
  _48 = extract _50, `0`
  br ^42

42:
  %% Aliased:
  %%    _48
  %% Unique:
  %%    _45
  _7 = catch_end _45, _48

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _103 = is_tagged_tuple _7, `2`, `'EXIT'`
  br _103, ^100, ^53

100:
  %% Argument types:
  %%    _7 => {''EXIT'', any()}
  %% Aliased:
  %%    _7
  _20 = get_tuple_element _7, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _97 = bif:is_tuple _20
  br _97, ^97, ^53

97:
  %% Argument types:
  %%    _20 => {...}
  %% Aliased:
  %%    _20
  _98 = bif:tuple_size _20

  %% Argument types:
  %%    _98 => 0..16777215
  %% Unique:
  %%    _98
  _99 = bif:'=:=' _98, `2`
  br _99, ^96, ^53

96:
  %% Argument types:
  %%    _20 => {any(), any()}
  %% Aliased:
  %%    _20
  _23 = get_tuple_element _20, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _95 = bif:'=:=' _23, `{badmatch,84}`
  br _95, ^95, ^53

95:
  %% beam_ssa_SUITE.erl:1275
  %% Result type:
  %%    'error'
  _24 = call (`coverage_2`/0)

  %% Unique:
  %%    _24
  _54 = succeeded:body _24
  br _54, ^92, ^1

92:
  %% beam_ssa_SUITE.erl:1276
  %% Result type:
  %%    'ok'
  _25 = call (`coverage_3`/0)

  %% Unique:
  %%    _25
  _57 = succeeded:body _25
  br _57, ^89, ^1

89:
  %% beam_ssa_SUITE.erl:1277
  %% Result type:
  %%    {'coverage', 'whatever'}
  _26 = call (`coverage_4`/0)

  %% Unique:
  %%    _26
  _60 = succeeded:body _26
  br _60, ^138, ^1

138:
  br ^140

140:
  _66 = new_try_tag `'catch'`
  br _66, ^64, ^65

64:
  %% beam_ssa_SUITE.erl:1278
  %% Result type:
  %%    none()
  _34 = call (`coverage_5`/0)

  %% Aliased:
  %%    _34
  _68 = succeeded:body _34
  br ^65

65:
  %% Unique:
  %%    _66
  _71 = landingpad `'catch'`, _66

  %% Aliased:
  %%    _71
  _69 = extract _71, `0`
  br ^63

63:
  %% Aliased:
  %%    _69
  %% Unique:
  %%    _66
  _12 = catch_end _66, _69

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _83 = is_tagged_tuple _12, `2`, `'EXIT'`
  br _83, ^80, ^74

80:
  %% Argument types:
  %%    _12 => {''EXIT'', any()}
  %% Aliased:
  %%    _12
  _27 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _77 = bif:is_tuple _27
  br _77, ^77, ^74

77:
  %% Argument types:
  %%    _27 => {...}
  %% Aliased:
  %%    _27
  _78 = bif:tuple_size _27

  %% Argument types:
  %%    _78 => 0..16777215
  %% Unique:
  %%    _78
  _79 = bif:'=:=' _78, `2`
  br _79, ^76, ^74

76:
  %% Argument types:
  %%    _27 => {any(), any()}
  %% Aliased:
  %%    _27
  _30 = get_tuple_element _27, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _75 = bif:'=:=' _30, `{badrecord,ok}`
  br _75, ^75, ^74

75:
  %% Result type:
  %%    'ok'
  ret `ok`

74:
  %% beam_ssa_SUITE.erl:1278
  %% Aliased:
  %%    _12
  _35 = match_fail `badmatch`, _12

  %% Unique:
  %%    _35
  _86 = succeeded:body _35
  br ^1

53:
  %% beam_ssa_SUITE.erl:1273
  %% Aliased:
  %%    _7
  _39 = match_fail `badmatch`, _7

  %% Unique:
  %%    _39
  _106 = succeeded:body _39
  br ^1

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40
}

%% beam_ssa_SUITE.erl:1282
%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`coverage_1`() {
0:
  %% beam_ssa_SUITE.erl:1283
  _2 = match_fail `badmatch`, `84`

  %% Unique:
  %%    _2
  _5 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:1285
%% Counter = 10
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`coverage_2`() {
0:
  %% Result type:
  %%    'error'
  ret `error`
}

%% beam_ssa_SUITE.erl:1288
%% Counter = 4
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`coverage_3`() {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% beam_ssa_SUITE.erl:1293
%% Counter = 40
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`coverage_4`() {
0:
  %% Result type:
  %%    {'coverage', 'whatever'}
  ret `{coverage,whatever}`
}

%% beam_ssa_SUITE.erl:1302
%% Counter = 40
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`coverage_5`() {
0:
  %% beam_ssa_SUITE.erl:1309
  _18 = match_fail `badrecord`, `ok`

  %% Unique:
  %%    _18
  _38 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% beam_ssa_SUITE.erl:1313
%% Counter = 11
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`normalize`(_0) {
0:
  %% beam_ssa_SUITE.erl:1314
  %% Result type:
  %%    'ok'
  _2 = call (`normalize_commutative`/1), `{bif,'band'}`

  %% Unique:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  %% beam_ssa_SUITE.erl:1315
  %% Result type:
  %%    'ok'
  _3 = call (`normalize_commutative`/1), `{bif,'+'}`

  %% Unique:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  %% beam_ssa_SUITE.erl:1317
  %% Result type:
  %%    'ok'
  _4 = call (`normalize_noncommutative`/1), `{bif,'div'}`

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^10, ^1

10:
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% beam_ssa_SUITE.erl:1324
%% Counter = 11
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'bif', ''+'' | ''band''}
function `beam_ssa_SUITE`:`normalize_commutative`(_0) {
0:
  %% beam_ssa_SUITE.erl:1329
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`normalize_same`/2), _0, `[{b_var,a},{b_var,b}]`

  %% Unique:
  %%    _2
  _7 = succeeded:body _2
  br _7, ^7, ^1

7:
  %% beam_ssa_SUITE.erl:1330
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _3 = call (`normalize_same`/2), _0, `[{b_var,a},{b_literal,42}]`

  %% Unique:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  %% beam_ssa_SUITE.erl:1332
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _4 = call (`normalize_swapped`/2), _0, `[{b_literal,42},{b_var,a}]`

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^10, ^1

10:
  ret _4

1:
  _5 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _5
}

%% beam_ssa_SUITE.erl:1336
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'bif', ''div''}
function `beam_ssa_SUITE`:`normalize_noncommutative`(_0) {
0:
  %% beam_ssa_SUITE.erl:1341
  %% Result type:
  %%    'ok'
  _12 = call (`normalize_same`/2), _0, `[{b_var,a},{b_var,b}]`

  %% Unique:
  %%    _12
  _17 = succeeded:body _12
  br _17, ^17, ^1

17:
  %% beam_ssa_SUITE.erl:1342
  %% Result type:
  %%    'ok'
  _13 = call (`normalize_same`/2), `{bif,'div'}`, `[{b_var,a},{b_literal,42}]`

  %% Unique:
  %%    _13
  _18 = succeeded:body _13
  br _18, ^18, ^1

18:
  %% beam_ssa_SUITE.erl:1344
  _4 = call (`beam_types`:`make_integer`/2), `0`, `1023`

  %% Aliased:
  %%    _4
  _19 = succeeded:body _4
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _10 = put_tuple `1`, _4

  %% Argument types:
  %%    _10 => {1, any()}
  %% Unique:
  %%    _10
  ArgTypes0 = put_list _10, `[]`

  %% beam_ssa_SUITE.erl:1345
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Unique:
  %%    ArgTypes0
  I1 = call (`make_bset`/3), ArgTypes0, `{bif,'div'}`, `[{b_literal,42},{b_var,a}]`

  %% Aliased:
  %%    I1
  _20 = succeeded:body I1
  br _20, ^20, ^1

20:
  %% beam_ssa_SUITE.erl:1346
  %% Aliased:
  %%    I1
  _11 = call (`beam_ssa`:`normalize`/1), I1

  %% Aliased:
  %%    _11
  _21 = succeeded:body _11
  br _21, ^21, ^1

21:
  %% Argument types:
  %%    I1 => {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _11, 
  %%    I1
  _24 = bif:'=:=' _11, I1
  br _24, ^24, ^23

24:
  %% Result type:
  %%    'ok'
  ret `ok`

23:
  %% beam_ssa_SUITE.erl:1346
  %% Aliased:
  %%    _11
  _14 = match_fail `badmatch`, _11

  %% Unique:
  %%    _14
  _25 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% beam_ssa_SUITE.erl:1350
%% Counter = 90
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'bif', ''+'' | ''band'' | ''div''}
%%    _1 =>
%%     nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
function `beam_ssa_SUITE`:`normalize_same`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:1351
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1
  I0 = call (`make_bset`/3), `#{}`, _0, _1

  %% Aliased:
  %%    I0
  _46 = succeeded:body I0
  br _46, ^46, ^1

46:
  %% beam_ssa_SUITE.erl:1352
  %% Aliased:
  %%    I0
  _24 = call (`beam_ssa`:`normalize`/1), I0

  %% Aliased:
  %%    _24
  _47 = succeeded:body _24
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    I0 => {'b_set', #{'arg_types'=>#{}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _24, 
  %%    I0
  _50 = bif:'=:=' _24, I0
  br _50, ^50, ^49

50:
  %% beam_ssa_SUITE.erl:1354
  _4 = call (`beam_types`:`make_integer`/2), `0`, `1023`

  %% Aliased:
  %%    _4
  _51 = succeeded:body _4
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _25 = put_tuple `0`, _4

  %% Argument types:
  %%    _25 => {0, any()}
  %% Unique:
  %%    _25
  ArgTypes0 = put_list _25, `[]`

  %% beam_ssa_SUITE.erl:1355
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Unique:
  %%    ArgTypes0
  I1 = call (`make_bset`/3), ArgTypes0, _0, _1

  %% Aliased:
  %%    I1
  _52 = succeeded:body I1
  br _52, ^52, ^1

52:
  %% beam_ssa_SUITE.erl:1356
  %% Aliased:
  %%    I1
  _26 = call (`beam_ssa`:`normalize`/1), I1

  %% Aliased:
  %%    _26
  _53 = succeeded:body _26
  br _53, ^53, ^1

53:
  %% Argument types:
  %%    I1 => {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _26, 
  %%    I1
  _56 = bif:'=:=' _26, I1
  br _56, ^84, ^55

84:
  %% Argument types:
  %%    _1 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _1
  _28 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _1
  _27 = get_tl _1

  %% Argument types:
  %%    _28 => {'b_literal', 42} | {'b_var', 'a' | 'b'}
  %% Aliased:
  %%    _28
  _79 = is_tagged_tuple _28, `2`, `b_var`
  br _79, ^76, ^59

76:
  %% Aliased:
  %%    _27
  _75 = is_nonempty_list _27
  br _75, ^75, ^58

75:
  %% Argument types:
  %%    _27 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _27
  _34 = get_hd _27

  %% Argument types:
  %%    _27 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _27
  _33 = get_tl _27

  %% Argument types:
  %%    _34 => {'b_literal', 42} | {'b_var', 'a' | 'b'}
  %% Aliased:
  %%    _34
  _72 = is_tagged_tuple _34, `2`, `b_var`
  br _72, ^69, ^59

69:
  %% Argument types:
  %%    _33 => list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _33
  _68 = bif:'=:=' _33, `[]`
  br _68, ^68, ^59

68:
  %% beam_ssa_SUITE.erl:1360
  _9 = call (`beam_types`:`make_integer`/2), `0`, `1023`

  %% Aliased:
  %%    _9
  _60 = succeeded:body _9
  br _60, ^60, ^1

60:
  %% beam_ssa_SUITE.erl:1361
  _8 = call (`beam_types`:`make_integer`/1), `42`

  %% Aliased:
  %%    _8
  _61 = succeeded:body _8
  br _61, ^61, ^1

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _37 = put_tuple `1`, _8

  %% Argument types:
  %%    _37 => {1, any()}
  %% Unique:
  %%    _37
  _38 = put_list _37, `[]`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _39 = put_tuple `0`, _9

  %% Argument types:
  %%    _39 => {0, any()}
  %%    _38 => nonempty_list({1, any()})
  %% Unique:
  %%    _38, 
  %%    _39
  ArgTypes1 = put_list _39, _38

  %% beam_ssa_SUITE.erl:1362
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Unique:
  %%    ArgTypes1
  I2 = call (`make_bset`/3), ArgTypes1, _0, _1

  %% Aliased:
  %%    I2
  _62 = succeeded:body I2
  br _62, ^62, ^1

62:
  %% beam_ssa_SUITE.erl:1363
  %% Aliased:
  %%    I2
  _20 = call (`beam_ssa`:`normalize`/1), I2

  %% Aliased:
  %%    _20
  _63 = succeeded:body _20
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    I2 => {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _20, 
  %%    I2
  _66 = bif:'=:=' _20, I2
  br _66, ^57, ^65

65:
  %% beam_ssa_SUITE.erl:1363
  %% Aliased:
  %%    _20
  _40 = match_fail `badmatch`, _20

  %% Unique:
  %%    _40
  _67 = succeeded:body _40
  br ^1

59:
  %% Aliased:
  %%    _27
  _83 = is_nonempty_list _27
  br _83, ^83, ^58

83:
  %% Argument types:
  %%    _27 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _27
  _29 = get_tl _27

  %% Argument types:
  %%    _29 => list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _29
  _82 = bif:'=:=' _29, `[]`
  br _82, ^57, ^58

57:
  %% Result type:
  %%    'ok'
  ret `ok`

58:
  %% beam_ssa_SUITE.erl:1358
  %% Aliased:
  %%    _1
  _41 = match_fail `case_clause`, _1

  %% Unique:
  %%    _41
  _85 = succeeded:body _41
  br ^1

55:
  %% beam_ssa_SUITE.erl:1356
  %% Aliased:
  %%    _26
  _42 = match_fail `badmatch`, _26

  %% Unique:
  %%    _42
  _86 = succeeded:body _42
  br ^1

49:
  %% beam_ssa_SUITE.erl:1352
  %% Aliased:
  %%    _24
  _43 = match_fail `badmatch`, _24

  %% Unique:
  %%    _43
  _87 = succeeded:body _43
  br ^1

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44
}

%% beam_ssa_SUITE.erl:1370
%% Counter = 295
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'bif', ''+'' | ''band''}
%%    _1 =>
%%     nonempty_list({'b_literal', 42} | {'b_var', 'a'})
function `beam_ssa_SUITE`:`normalize_swapped`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => nonempty_list({'b_literal', 42} | {'b_var', 'a'})
  %% Aliased:
  %%    _1
  _71 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_list({'b_literal', 42} | {'b_var', 'a'})
  %% Aliased:
  %%    _1
  _70 = get_tl _1

  %% Argument types:
  %%    _71 => {'b_literal', 42} | {'b_var', 'a'}
  %% Aliased:
  %%    _71
  _252 = is_tagged_tuple _71, `2`, `b_literal`
  br _252, ^249, ^141

249:
  %% Aliased:
  %%    _70
  _248 = is_nonempty_list _70
  br _248, ^248, ^141

248:
  %% Argument types:
  %%    _70 => nonempty_list({'b_literal', 42} | {'b_var', 'a'})
  %% Aliased:
  %%    _70
  _75 = get_hd _70

  %% Argument types:
  %%    _70 => nonempty_list({'b_literal', 42} | {'b_var', 'a'})
  %% Aliased:
  %%    _70
  _74 = get_tl _70

  %% Argument types:
  %%    _75 => {'b_literal', 42} | {'b_var', 'a'}
  %% Aliased:
  %%    _75
  _245 = is_tagged_tuple _75, `2`, `b_var`
  br _245, ^242, ^141

242:
  %% Argument types:
  %%    _74 => list({'b_literal', 42} | {'b_var', 'a'})
  %% Aliased:
  %%    _74
  _241 = bif:'=:=' _74, `[]`
  br _241, ^241, ^141

241:
  %% beam_ssa_SUITE.erl:1372
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1
  I0 = call (`make_bset`/3), `#{}`, _0, _1

  %% Unique:
  %%    I0
  _142 = succeeded:body I0
  br _142, ^142, ^1

142:
  %% beam_ssa_SUITE.erl:1373
  %% Unique:
  %%    I0
  _78 = call (`beam_ssa`:`normalize`/1), I0

  %% Aliased:
  %%    _78
  _143 = succeeded:body _78
  br _143, ^143, ^1

143:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _78
  _237 = is_tagged_tuple _78, `5`, `b_set`
  br _237, ^234, ^145

234:
  %% Argument types:
  %%    _78 => {'b_set', any(), any(), any(), any()}
  %% Aliased:
  %%    _78
  _81 = get_tuple_element _78, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _81
  _233 = bif:'=:=' _81, `{b_var,1000}`
  br _233, ^233, ^145

233:
  %% Argument types:
  %%    _78 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _78
  _79 = get_tuple_element _78, `4`

  %% Aliased:
  %%    _79
  _232 = is_nonempty_list _79
  br _232, ^232, ^145

232:
  %% Argument types:
  %%    _79 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _79
  _85 = get_hd _79

  %% Argument types:
  %%    _79 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _79
  _84 = get_tl _79

  %% Aliased:
  %%    _84
  _231 = is_nonempty_list _84
  br _231, ^231, ^145

231:
  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _87 = get_hd _84

  %% Argument types:
  %%    _84 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _84
  _86 = get_tl _84

  %% Argument types:
  %%    
  %% Aliased:
  %%    _86
  _230 = bif:'=:=' _86, `[]`
  br _230, ^230, ^145

230:
  %% Argument types:
  %%    _78 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _78
  _82 = get_tuple_element _78, `1`

  %% beam_ssa_SUITE.erl:1373
  %% Argument types:
  %%    
  %% Aliased:
  %%    _82
  _34 = bif:'=:=' _82, `#{}`
  br _34, ^289, ^145

289:
  %% Argument types:
  %%    _78 => {'b_set', #{}, {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _78
  _80 = get_tuple_element _78, `3`

  %% beam_ssa_SUITE.erl:1373
  %% Argument types:
  %%    _0 => {'bif', ''+'' | ''band''}
  %% Aliased:
  %%    _0, 
  %%    _80
  _32 = bif:'=:=' _80, _0
  br _32, ^290, ^145

290:
  %% beam_ssa_SUITE.erl:1373
  %% Argument types:
  %%    
  %% Aliased:
  %%    _85
  _30 = bif:'=:=' _85, `{b_var,a}`
  br _30, ^291, ^145

291:
  %% beam_ssa_SUITE.erl:1373
  %% Argument types:
  %%    
  %% Aliased:
  %%    _87
  _31 = bif:'=:=' _87, `{b_literal,42}`
  br _31, ^149, ^145

149:
  %% beam_ssa_SUITE.erl:1376
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1
  I1 = call (`make_bset`/3), `#{arg_types => #{}}`, _0, _1

  %% Unique:
  %%    I1
  _150 = succeeded:body I1
  br _150, ^150, ^1

150:
  %% beam_ssa_SUITE.erl:1377
  %% Unique:
  %%    I1
  _89 = call (`beam_ssa`:`normalize`/1), I1

  %% Aliased:
  %%    _89
  _151 = succeeded:body _89
  br _151, ^151, ^1

151:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _226 = is_tagged_tuple _89, `5`, `b_set`
  br _226, ^223, ^153

223:
  %% Argument types:
  %%    _89 => {'b_set', any(), any(), any(), any()}
  %% Aliased:
  %%    _89
  _92 = get_tuple_element _89, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  _222 = bif:'=:=' _92, `{b_var,1000}`
  br _222, ^222, ^153

222:
  %% Argument types:
  %%    _89 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _89
  _90 = get_tuple_element _89, `4`

  %% Aliased:
  %%    _90
  _221 = is_nonempty_list _90
  br _221, ^221, ^153

221:
  %% Argument types:
  %%    _90 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _90
  _96 = get_hd _90

  %% Argument types:
  %%    _90 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _90
  _95 = get_tl _90

  %% Aliased:
  %%    _95
  _220 = is_nonempty_list _95
  br _220, ^220, ^153

220:
  %% Argument types:
  %%    _95 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _95
  _98 = get_hd _95

  %% Argument types:
  %%    _95 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _95
  _97 = get_tl _95

  %% Argument types:
  %%    
  %% Aliased:
  %%    _97
  _219 = bif:'=:=' _97, `[]`
  br _219, ^219, ^153

219:
  %% Argument types:
  %%    _89 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _89
  _93 = get_tuple_element _89, `1`

  %% beam_ssa_SUITE.erl:1377
  %% Argument types:
  %%    
  %% Aliased:
  %%    _93
  _44 = bif:'=:=' _93, `#{arg_types => #{}}`
  br _44, ^281, ^153

281:
  %% Argument types:
  %%    _89 => {'b_set', #{'arg_types'=>#{}}, {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _89
  _91 = get_tuple_element _89, `3`

  %% beam_ssa_SUITE.erl:1377
  %% Argument types:
  %%    _0 => {'bif', ''+'' | ''band''}
  %% Aliased:
  %%    _0, 
  %%    _91
  _42 = bif:'=:=' _91, _0
  br _42, ^282, ^153

282:
  %% beam_ssa_SUITE.erl:1377
  %% Argument types:
  %%    
  %% Aliased:
  %%    _96
  _40 = bif:'=:=' _96, `{b_var,a}`
  br _40, ^283, ^153

283:
  %% beam_ssa_SUITE.erl:1377
  %% Argument types:
  %%    
  %% Aliased:
  %%    _98
  _41 = bif:'=:=' _98, `{b_literal,42}`
  br _41, ^157, ^153

157:
  %% beam_ssa_SUITE.erl:1379
  IntRange = call (`beam_types`:`make_integer`/2), `0`, `1023`

  %% Aliased:
  %%    IntRange
  _158 = succeeded:body IntRange
  br _158, ^158, ^1

158:
  %% Argument types:
  %%    
  %% Aliased:
  %%    IntRange
  _100 = put_tuple `1`, IntRange

  %% Argument types:
  %%    _100 => {1, any()}
  %% Unique:
  %%    _100
  ArgTypes0 = put_list _100, `[]`

  %% beam_ssa_SUITE.erl:1381
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Unique:
  %%    ArgTypes0
  I2 = call (`make_bset`/3), ArgTypes0, _0, _1

  %% Unique:
  %%    I2
  _159 = succeeded:body I2
  br _159, ^159, ^1

159:
  %% beam_ssa_SUITE.erl:1382
  %% Unique:
  %%    I2
  _11 = call (`beam_ssa`:`normalize`/1), I2

  %% Aliased:
  %%    _11
  _160 = succeeded:body _11
  br _160, ^160, ^1

160:
  %% beam_ssa_SUITE.erl:1382
  %% Result type:
  %%    {list({any(), any()}), any(), any()}
  %% Aliased:
  %%    _11
  _101 = call (`unpack_bset`/1), _11

  %% Unique:
  %%    _101
  _161 = succeeded:body _101
  br _161, ^214, ^1

214:
  %% Argument types:
  %%    _101 => {list({any(), any()}), any(), any()}
  %% Unique:
  %%    _101
  _104 = get_tuple_element _101, `0`

  %% Aliased:
  %%    _104
  _213 = is_nonempty_list _104
  br _213, ^213, ^163

213:
  %% Argument types:
  %%    _104 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _104
  _106 = get_hd _104

  %% Argument types:
  %%    _104 => nonempty_list({any(), any()})
  %% Aliased:
  %%    _104
  _105 = get_tl _104

  %% Argument types:
  %%    _106 => {any(), any()}
  %% Aliased:
  %%    _106
  _108 = get_tuple_element _106, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _108
  _208 = bif:'=:=' _108, `0`
  br _208, ^207, ^163

207:
  %% Argument types:
  %%    _105 => list({any(), any()})
  %% Aliased:
  %%    _105
  _206 = bif:'=:=' _105, `[]`
  br _206, ^206, ^163

206:
  %% Argument types:
  %%    _101 => {list({any(), any()}), any(), any()}
  %% Unique:
  %%    _101
  _102 = get_tuple_element _101, `2`

  %% Aliased:
  %%    _102
  _205 = is_nonempty_list _102
  br _205, ^205, ^163

205:
  %% Argument types:
  %%    _102 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _102
  _110 = get_hd _102

  %% Argument types:
  %%    _102 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _102
  _109 = get_tl _102

  %% Aliased:
  %%    _109
  _204 = is_nonempty_list _109
  br _204, ^204, ^163

204:
  %% Argument types:
  %%    _109 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _109
  _112 = get_hd _109

  %% Argument types:
  %%    _109 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _109
  _111 = get_tl _109

  %% Argument types:
  %%    
  %% Aliased:
  %%    _111
  _203 = bif:'=:=' _111, `[]`
  br _203, ^203, ^163

203:
  %% Argument types:
  %%    _106 => {0, any()}
  %% Aliased:
  %%    _106
  _107 = get_tuple_element _106, `1`

  %% beam_ssa_SUITE.erl:1382
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107, 
  %%    IntRange
  _54 = bif:'=:=' _107, IntRange
  br _54, ^273, ^163

273:
  %% Argument types:
  %%    _101 => {list({any(), any()}), any(), any()}
  %% Unique:
  %%    _101
  _103 = get_tuple_element _101, `1`

  %% beam_ssa_SUITE.erl:1382
  %% Argument types:
  %%    _0 => {'bif', ''+'' | ''band''}
  %% Aliased:
  %%    _0, 
  %%    _103
  _52 = bif:'=:=' _103, _0
  br _52, ^274, ^163

274:
  %% beam_ssa_SUITE.erl:1382
  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  _50 = bif:'=:=' _110, `{b_var,a}`
  br _50, ^275, ^163

275:
  %% beam_ssa_SUITE.erl:1382
  %% Argument types:
  %%    
  %% Aliased:
  %%    _112
  _51 = bif:'=:=' _112, `{b_literal,42}`
  br _51, ^167, ^163

167:
  %% beam_ssa_SUITE.erl:1384
  LitType = call (`beam_types`:`make_type_from_value`/1), `{b_literal,42}`

  %% Aliased:
  %%    LitType
  _168 = succeeded:body LitType
  br _168, ^168, ^1

168:
  %% Argument types:
  %%    
  %% Aliased:
  %%    LitType
  _114 = put_tuple `0`, LitType

  %% Argument types:
  %%    _114 => {0, any()}
  %% Aliased:
  %%    _114
  ArgTypes1 = put_list _114, `[]`

  %% beam_ssa_SUITE.erl:1387
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    ArgTypes1
  I3 = call (`make_bset`/3), ArgTypes1, _0, _1

  %% Unique:
  %%    I3
  _169 = succeeded:body I3
  br _169, ^169, ^1

169:
  %% beam_ssa_SUITE.erl:1388
  %% Unique:
  %%    I3
  _16 = call (`beam_ssa`:`normalize`/1), I3

  %% Aliased:
  %%    _16
  _170 = succeeded:body _16
  br _170, ^170, ^1

170:
  %% beam_ssa_SUITE.erl:1388
  %% Result type:
  %%    {list({any(), any()}), any(), any()}
  %% Aliased:
  %%    _16
  _115 = call (`unpack_bset`/1), _16

  %% Unique:
  %%    _115
  _171 = succeeded:body _115
  br _171, ^198, ^1

198:
  %% Argument types:
  %%    _115 => {list({any(), any()}), any(), any()}
  %% Unique:
  %%    _115
  _118 = get_tuple_element _115, `0`

  %% Argument types:
  %%    _118 => list({any(), any()})
  %% Aliased:
  %%    _118
  _197 = bif:'=:=' _118, `[]`
  br _197, ^197, ^173

197:
  %% Argument types:
  %%    _115 => {nil(), any(), any()}
  %% Unique:
  %%    _115
  _116 = get_tuple_element _115, `2`

  %% Aliased:
  %%    _116
  _196 = is_nonempty_list _116
  br _196, ^196, ^173

196:
  %% Argument types:
  %%    _116 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _116
  _120 = get_hd _116

  %% Argument types:
  %%    _116 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _116
  _119 = get_tl _116

  %% Aliased:
  %%    _119
  _195 = is_nonempty_list _119
  br _195, ^195, ^173

195:
  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _122 = get_hd _119

  %% Argument types:
  %%    _119 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _119
  _121 = get_tl _119

  %% Argument types:
  %%    
  %% Aliased:
  %%    _121
  _194 = bif:'=:=' _121, `[]`
  br _194, ^194, ^173

194:
  %% Argument types:
  %%    _115 => {nil(), any(), any()}
  %% Unique:
  %%    _115
  _117 = get_tuple_element _115, `1`

  %% beam_ssa_SUITE.erl:1388
  %% Argument types:
  %%    _0 => {'bif', ''+'' | ''band''}
  %% Aliased:
  %%    _0, 
  %%    _117
  _61 = bif:'=:=' _117, _0
  br _61, ^266, ^173

266:
  %% beam_ssa_SUITE.erl:1388
  %% Argument types:
  %%    
  %% Aliased:
  %%    _120
  _59 = bif:'=:=' _120, `{b_var,a}`
  br _59, ^267, ^173

267:
  %% beam_ssa_SUITE.erl:1388
  %% Argument types:
  %%    
  %% Aliased:
  %%    _122
  _60 = bif:'=:=' _122, `{b_literal,42}`
  br _60, ^176, ^173

176:
  %% beam_ssa_SUITE.erl:1391
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    ArgTypes1
  I4 = call (`make_bset`/3), ArgTypes1, _0, _1

  %% Unique:
  %%    I4
  _177 = succeeded:body I4
  br _177, ^177, ^1

177:
  %% beam_ssa_SUITE.erl:1392
  %% Unique:
  %%    I4
  _20 = call (`beam_ssa`:`normalize`/1), I4

  %% Aliased:
  %%    _20
  _178 = succeeded:body _20
  br _178, ^178, ^1

178:
  %% beam_ssa_SUITE.erl:1392
  %% Result type:
  %%    {list({any(), any()}), any(), any()}
  %% Aliased:
  %%    _20
  _124 = call (`unpack_bset`/1), _20

  %% Unique:
  %%    _124
  _179 = succeeded:body _124
  br _179, ^189, ^1

189:
  %% Argument types:
  %%    _124 => {list({any(), any()}), any(), any()}
  %% Unique:
  %%    _124
  _127 = get_tuple_element _124, `0`

  %% Argument types:
  %%    _127 => list({any(), any()})
  %% Aliased:
  %%    _127
  _188 = bif:'=:=' _127, `[]`
  br _188, ^188, ^181

188:
  %% Argument types:
  %%    _124 => {nil(), any(), any()}
  %% Unique:
  %%    _124
  _125 = get_tuple_element _124, `2`

  %% Aliased:
  %%    _125
  _187 = is_nonempty_list _125
  br _187, ^187, ^181

187:
  %% Argument types:
  %%    _125 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _125
  _129 = get_hd _125

  %% Argument types:
  %%    _125 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _125
  _128 = get_tl _125

  %% Aliased:
  %%    _128
  _186 = is_nonempty_list _128
  br _186, ^186, ^181

186:
  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _131 = get_hd _128

  %% Argument types:
  %%    _128 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _128
  _130 = get_tl _128

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  _185 = bif:'=:=' _130, `[]`
  br _185, ^185, ^181

185:
  %% Argument types:
  %%    _124 => {nil(), any(), any()}
  %% Unique:
  %%    _124
  _126 = get_tuple_element _124, `1`

  %% beam_ssa_SUITE.erl:1392
  %% Argument types:
  %%    _0 => {'bif', ''+'' | ''band''}
  %% Aliased:
  %%    _0, 
  %%    _126
  _68 = bif:'=:=' _126, _0
  br _68, ^260, ^181

260:
  %% beam_ssa_SUITE.erl:1392
  %% Argument types:
  %%    
  %% Aliased:
  %%    _129
  _66 = bif:'=:=' _129, `{b_var,a}`
  br _66, ^261, ^181

261:
  %% beam_ssa_SUITE.erl:1392
  %% Argument types:
  %%    
  %% Aliased:
  %%    _131
  _67 = bif:'=:=' _131, `{b_literal,42}`
  br _67, ^184, ^181

184:
  %% Result type:
  %%    'ok'
  ret `ok`

181:
  %% beam_ssa_SUITE.erl:1392
  %% Unique:
  %%    _124
  _133 = match_fail `badmatch`, _124

  %% Unique:
  %%    _133
  _193 = succeeded:body _133
  br ^1

173:
  %% beam_ssa_SUITE.erl:1388
  %% Unique:
  %%    _115
  _134 = match_fail `badmatch`, _115

  %% Unique:
  %%    _134
  _202 = succeeded:body _134
  br ^1

163:
  %% beam_ssa_SUITE.erl:1382
  %% Unique:
  %%    _101
  _135 = match_fail `badmatch`, _101

  %% Unique:
  %%    _135
  _218 = succeeded:body _135
  br ^1

153:
  %% beam_ssa_SUITE.erl:1377
  %% Aliased:
  %%    _89
  _136 = match_fail `badmatch`, _89

  %% Unique:
  %%    _136
  _229 = succeeded:body _136
  br ^1

145:
  %% beam_ssa_SUITE.erl:1373
  %% Aliased:
  %%    _78
  _137 = match_fail `badmatch`, _78

  %% Unique:
  %%    _137
  _240 = succeeded:body _137
  br ^1

141:
  %% beam_ssa_SUITE.erl:1370
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _1
  %% Anno: #{inlined => {'-inlined-normalize_swapped/2-',2}}
  _138 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _138
  _256 = succeeded:body _138
  br ^1

1:
  _139 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _139
}

%% beam_ssa_SUITE.erl:1396
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list({0, any()} | {1, any()}) | #{'arg_types'=>#{}}
%%    _1 =>
%%     {'bif', ''+'' | ''band'' | ''div''}
%%    _2 =>
%%     nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
function `beam_ssa_SUITE`:`make_bset`(_0, _1, _2) {
0:
  %% Aliased:
  %%    _0
  %% Anno: #{was_bif_is_list => true}
  _18 = is_nonempty_list _0
  br _18, ^18, ^20

18:
  %% beam_ssa_SUITE.erl:1397
  %% Aliased:
  %%    _0
  _3 = call (`maps`:`from_list`/1), _0

  %% Aliased:
  %%    _3
  _19 = succeeded:body _3
  br _19, ^19, ^1

19:
  %% beam_ssa_SUITE.erl:1397
  %% Aliased:
  %%    _3
  _10 = put_map `assoc`, `#{}`, `arg_types`, _3

  %% Argument types:
  %%    _10 => #{'arg_types'=>#{0..1=>any()}}
  %%    _1 => {'bif', ''+'' | ''band'' | ''div''}
  %%    _2 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _1, 
  %%    _2, 
  %%    _10
  _12 = put_tuple `b_set`, _10, `{b_var,1000}`, _1, _2
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{0..1=>any()}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Unique:
  %%    _12
  ret _12

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14

20:
  %% Argument types:
  %%    _0 => #{'arg_types'=>#{}}
  %%    _1 => {'bif', ''+'' | ''band'' | ''div''}
  %%    _2 => nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  _11 = put_tuple `b_set`, _0, `{b_var,1000}`, _1, _2
  %% Result type:
  %%    {'b_set', #{'arg_types'=>#{}}, {'b_var', 1000}, {'bif', ''+'' | ''band'' | ''div''}, nonempty_list({'b_literal', 42} | {'b_var', 'a' | 'b'})}
  %% Unique:
  %%    _11
  ret _11
}

%% beam_ssa_SUITE.erl:1402
%% Counter = 37
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`unpack_bset`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _32 = is_tagged_tuple _0, `5`, `b_set`
  br _32, ^29, ^19

29:
  %% Argument types:
  %%    _0 => {'b_set', any(), any(), any(), any()}
  %% Aliased:
  %%    _0
  _10 = get_tuple_element _0, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _28 = bif:'=:=' _10, `{b_var,1000}`
  br _28, ^28, ^19

28:
  %% Argument types:
  %%    _0 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _0
  _11 = get_tuple_element _0, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _24 = bif:is_map _11
  br _24, ^24, ^21

24:
  %% Argument types:
  %%    _11 => map()
  %% Aliased:
  %%    _11
  _13 = get_map_element _11, `arg_types`

  %% Aliased:
  %%    _13
  _23 = succeeded:guard _13
  br _23, ^23, ^22

23:
  br ^20

22:
  br ^20

20:
  ArgTypes = phi { `#{}`, ^22 }, { _13, ^23 }

  %% beam_ssa_SUITE.erl:1404
  %% Aliased:
  %%    ArgTypes
  _2 = call (`maps`:`to_list`/1), ArgTypes

  %% Aliased:
  %%    _2
  _26 = succeeded:body _2
  br _26, ^26, ^1

26:
  %% beam_ssa_SUITE.erl:1404
  %% Aliased:
  %%    _2
  _3 = call (`lists`:`sort`/1), _2

  %% Aliased:
  %%    _3
  _27 = succeeded:body _3
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    _0 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _0
  _9 = get_tuple_element _0, `3`

  %% Argument types:
  %%    _0 => {'b_set', any(), {'b_var', 1000}, any(), any()}
  %% Aliased:
  %%    _0
  _8 = get_tuple_element _0, `4`

  %% Argument types:
  %%    _3 => list({any(), any()})
  %% Aliased:
  %%    _3, 
  %%    _8, 
  %%    _9
  _15 = put_tuple _3, _9, _8
  %% Result type:
  %%    {list({any(), any()}), any(), any()}
  %% Unique:
  %%    _15
  ret _15

21:
  %% Aliased:
  %%    _11
  _14 = match_fail `badmap`, _11

  %% Unique:
  %%    _14
  _25 = succeeded:body _14
  br ^1

19:
  %% beam_ssa_SUITE.erl:1402
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-unpack_bset/1-',1}}
  _16 = match_fail `function_clause`, _0

  %% Unique:
  %%    _16
  _35 = succeeded:body _16
  br ^1

1:
  _17 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _17
}

%% beam_ssa_SUITE.erl:1406
%% Counter = 45
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`trycatch`(_0) {
0:
  %% beam_ssa_SUITE.erl:1407
  %% Result type:
  %%    0..288230376151711743
  _8 = call (`trycatch_1`/0)

  %% Unique:
  %%    _8
  _18 = succeeded:body _8
  br _18, ^18, ^1

18:
  %% Argument types:
  %%    _8 => 0..288230376151711743
  %% Unique:
  %%    _8
  _43 = bif:'=:=' _8, `8`
  br _43, ^42, ^20

42:
  %% beam_ssa_SUITE.erl:1409
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _2 = call (`id`/1), `ok`

  %% Aliased:
  %%    _2
  _21 = succeeded:body _2
  br _21, ^21, ^1

21:
  %% beam_ssa_SUITE.erl:1409
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2
  _9 = call (`trycatch_2`/1), _2

  %% Unique:
  %%    _9
  _22 = succeeded:body _9
  br _22, ^39, ^1

39:
  %% beam_ssa_SUITE.erl:1410
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _4 = call (`id`/1), `z`

  %% Aliased:
  %%    _4
  _25 = succeeded:body _4
  br _25, ^25, ^1

25:
  %% beam_ssa_SUITE.erl:1410
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _4
  _10 = call (`trycatch_2`/1), _4

  %% Unique:
  %%    _10
  _26 = succeeded:body _10
  br _26, ^36, ^1

36:
  %% beam_ssa_SUITE.erl:1412
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _6 = call (`id`/1), `42`

  %% Aliased:
  %%    _6
  _29 = succeeded:body _6
  br _29, ^29, ^1

29:
  %% beam_ssa_SUITE.erl:1412
  %% Result type:
  %%    'false' | 'ok'
  %% Aliased:
  %%    _6
  _11 = call (`trycatch_3`/1), _6

  %% Unique:
  %%    _11
  _30 = succeeded:body _11
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _11 => 'false' | 'ok'
  %% Unique:
  %%    _11
  _34 = bif:'=:=' _11, `false`
  br _34, ^33, ^32

33:
  %% Result type:
  %%    'ok'
  ret `ok`

32:
  %% beam_ssa_SUITE.erl:1412
  _12 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _12
  _35 = succeeded:body _12
  br ^1

20:
  %% beam_ssa_SUITE.erl:1407
  %% Unique:
  %%    _8
  _15 = match_fail `badmatch`, _8

  %% Unique:
  %%    _15
  _44 = succeeded:body _15
  br ^1

1:
  _16 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _16
}

%% beam_ssa_SUITE.erl:1416
%% Counter = 79
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`trycatch_1`() {
0:
  br ^77

77:
  _28 = new_try_tag `'try'`
  br _28, ^76, ^25

76:
  br ^78

78:
  _33 = new_try_tag `'try'`
  br _33, ^32, ^30

32:
  %% beam_ssa_SUITE.erl:1417
  _0 = call (`erlang`:`iolist_to_binary`/1), `"a"`

  %% Aliased:
  %%    _0
  _34 = succeeded:body _0
  br _34, ^34, ^30

34:
  %% Unique:
  %%    _33
  _40 = kill_try_tag _33

  %% beam_ssa_SUITE.erl:1417
  %% Argument types:
  %%    _0 => bitstring(8)
  %% Aliased:
  %%    _0
  _2 = bif:bit_size _0

  %% Unique:
  %%    _28
  _44 = kill_try_tag _28
  %% Result type:
  %%    0..288230376151711743
  %% Unique:
  %%    _2
  ret _2

30:
  %% Unique:
  %%    _33
  _38 = landingpad `'try'`, _33

  %% Aliased:
  %%    _38
  _7 = extract _38, `1`

  %% Aliased:
  %%    _38
  _6 = extract _38, `2`

  %% Unique:
  %%    _33
  _39 = kill_try_tag _33

  %% Aliased:
  %%    _6, 
  %%    _7
  _20 = resume _6, _7

  %% Unique:
  %%    _20
  _37 = succeeded:body _20
  br ^25

25:
  %% Unique:
  %%    _28
  _42 = landingpad `'try'`, _28

  %% Aliased:
  %%    _42
  _12 = extract _42, `1`

  %% Aliased:
  %%    _42
  _11 = extract _42, `2`

  %% Unique:
  %%    _28
  _43 = kill_try_tag _28

  %% Aliased:
  %%    _11, 
  %%    _12
  _21 = resume _11, _12

  %% Unique:
  %%    _21
  _41 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% beam_ssa_SUITE.erl:1426
%% Counter = 89
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`trycatch_2`(_0) {
0:
  %% beam_ssa_SUITE.erl:1427
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _2 = bif:'>=' `ok`, _0

  %% beam_ssa_SUITE.erl:1427
  %% Argument types:
  %%    _2 => 'false' | 'true'
  %% Unique:
  %%    _2
  _24 = bif:'not' _2
  _44 = new_try_tag `'try'`
  br _44, ^48, ^41

48:
  %% Argument types:
  %%    _24 => 'false' | 'true'
  %%    _2 => 'false' | 'true'
  %% Unique:
  %%    _2, 
  %%    _24
  _53 = bif:'=:=' _24, _2
  br _53, ^71, ^47

71:
  %% beam_ssa_SUITE.erl:1429
  %% Unique:
  %%    _2
  _35 = call (`erlang`:`iolist_size`/1), _2

  %% Aliased:
  %%    _35
  _62 = succeeded:body _35
  br ^41

47:
  %% Unique:
  %%    _44
  _70 = kill_try_tag _44
  %% Result type:
  %%    'ok'
  ret `ok`

41:
  %% Unique:
  %%    _44
  _68 = landingpad `'try'`, _44

  %% Aliased:
  %%    _68
  _19 = extract _68, `1`

  %% Aliased:
  %%    _68
  _18 = extract _68, `2`

  %% Unique:
  %%    _44
  _69 = kill_try_tag _44

  %% Aliased:
  %%    _18, 
  %%    _19
  _37 = resume _18, _19

  %% Unique:
  %%    _37
  _67 = succeeded:body _37
  br ^1

1:
  _38 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _38
}

%% beam_ssa_SUITE.erl:1439
%% Counter = 125
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`trycatch_3`(_0) {
0:
  br ^123

123:
  _52 = new_try_tag `'try'`
  br _52, ^121, ^49

121:
  br ^124

124:
  _57 = new_try_tag `'try'`
  br _57, ^56, ^54

56:
  %% beam_ssa_SUITE.erl:1440
  %% Aliased:
  %%    _0
  _35 = call (`erlang`:`bump_reductions`/1), _0

  %% Aliased:
  %%    _35
  _58 = succeeded:body _35
  br _58, ^58, ^54

58:
  %% Unique:
  %%    _57
  _84 = kill_try_tag _57
  _63 = new_try_tag `'try'`
  br _63, ^62, ^60

62:
  %% Aliased:
  %%    _35
  _122 = bif:is_boolean _35
  br _122, ^68, ^65

68:
  %% Unique:
  %%    _63
  _80 = kill_try_tag _63
  br ^55

65:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _30 = put_tuple `badarg`, _35

  %% beam_ssa_SUITE.erl:1442
  %% Unique:
  %%    _30
  _39 = call (`erlang`:`error`/1), _30

  %% Aliased:
  %%    _39
  _67 = succeeded:body _39
  br ^60

60:
  %% Unique:
  %%    _63
  _78 = landingpad `'try'`, _63

  %% Aliased:
  %%    _78
  _12 = extract _78, `0`

  %% Aliased:
  %%    _78
  _11 = extract _78, `1`

  %% Aliased:
  %%    _78
  _10 = extract _78, `2`

  %% Unique:
  %%    _63
  _79 = kill_try_tag _63

  %% Argument types:
  %%    _12 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _12
  _76 = bif:'=:=' _12, `throw`
  br _76, ^73, ^74

73:
  br ^55

55:
  _33 = phi { `false`, ^68 }, { `ok`, ^73 }

  %% Unique:
  %%    _52
  _88 = kill_try_tag _52
  %% Result type:
  %%    'false' | 'ok'
  %% Unique:
  %%    _33
  ret _33

74:
  %% Aliased:
  %%    _10, 
  %%    _11
  _43 = resume _10, _11

  %% Unique:
  %%    _43
  _77 = succeeded:body _43
  br ^49

54:
  %% Unique:
  %%    _57
  _82 = landingpad `'try'`, _57

  %% Aliased:
  %%    _82
  _15 = extract _82, `1`

  %% Aliased:
  %%    _82
  _14 = extract _82, `2`

  %% Unique:
  %%    _57
  _83 = kill_try_tag _57

  %% Aliased:
  %%    _14, 
  %%    _15
  _44 = resume _14, _15

  %% Unique:
  %%    _44
  _81 = succeeded:body _44
  br ^49

49:
  %% Unique:
  %%    _52
  _86 = landingpad `'try'`, _52

  %% Aliased:
  %%    _86
  _20 = extract _86, `1`

  %% Aliased:
  %%    _86
  _19 = extract _86, `2`

  %% Unique:
  %%    _52
  _87 = kill_try_tag _52

  %% Aliased:
  %%    _19, 
  %%    _20
  _45 = resume _19, _20

  %% Unique:
  %%    _45
  _85 = succeeded:body _45
  br ^1

1:
  _46 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _46
}

%% beam_ssa_SUITE.erl:1456
%% Counter = 418
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`gh_6599`(_0) {
0:
  %% beam_ssa_SUITE.erl:1457
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _2 = call (`id`/1), `42`

  %% Aliased:
  %%    _2
  _106 = succeeded:body _2
  br _106, ^106, ^1

106:
  %% beam_ssa_SUITE.erl:1457
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _1 = call (`id`/1), `42`

  %% Aliased:
  %%    _1
  _107 = succeeded:body _1
  br _107, ^107, ^1

107:
  %% beam_ssa_SUITE.erl:1457
  %% Result type:
  %%    'ok' | map()
  %% Aliased:
  %%    _1, 
  %%    _2
  _47 = call (`gh_6599_1`/2), _2, _1

  %% Aliased:
  %%    _47
  _108 = succeeded:body _47
  br _108, ^108, ^1

108:
  %% Argument types:
  %%    _47 => 'ok' | map()
  %% Aliased:
  %%    _47
  _314 = bif:'=:=' _47, `ok`
  br _314, ^313, ^110

313:
  %% beam_ssa_SUITE.erl:1458
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _5 = call (`id`/1), `#{ok => 0}`

  %% Aliased:
  %%    _5
  _111 = succeeded:body _5
  br _111, ^111, ^1

111:
  %% beam_ssa_SUITE.erl:1458
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _4 = call (`id`/1), `#{ok => 0}`

  %% Aliased:
  %%    _4
  _112 = succeeded:body _4
  br _112, ^112, ^1

112:
  %% beam_ssa_SUITE.erl:1458
  %% Result type:
  %%    'ok' | map()
  %% Aliased:
  %%    _4, 
  %%    _5
  _48 = call (`gh_6599_1`/2), _5, _4

  %% Aliased:
  %%    _48
  _113 = succeeded:body _48
  br _113, ^113, ^1

113:
  %% Argument types:
  %%    _48 => 'ok' | map()
  %% Aliased:
  %%    _48
  _311 = bif:is_map _48
  br _311, ^311, ^115

311:
  %% Argument types:
  %%    _48 => map()
  %% Aliased:
  %%    _48
  _49 = get_map_element _48, `ok`

  %% Aliased:
  %%    _49
  _116 = succeeded:guard _49
  br _116, ^116, ^115

116:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _310 = bif:'=:=' _49, `ok`
  br _310, ^406, ^115

406:
  br ^412

412:
  _120 = new_try_tag `'catch'`
  br _120, ^118, ^119

118:
  %% beam_ssa_SUITE.erl:1461
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _8 = call (`id`/1), `whatever`

  %% Aliased:
  %%    _8
  _122 = succeeded:body _8
  br _122, ^122, ^119

122:
  %% beam_ssa_SUITE.erl:1461
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _7 = call (`id`/1), `#{0 => whatever}`

  %% Aliased:
  %%    _7
  _123 = succeeded:body _7
  br _123, ^123, ^119

123:
  %% beam_ssa_SUITE.erl:1461
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _7, 
  %%    _8
  _82 = call (`gh_6599_2`/2), _8, _7

  %% Aliased:
  %%    _82
  _124 = succeeded:body _82
  br ^119

119:
  %% Unique:
  %%    _120
  _127 = landingpad `'catch'`, _120

  %% Aliased:
  %%    _127
  _125 = extract _127, `0`
  br ^117

117:
  %% Aliased:
  %%    _125
  %% Unique:
  %%    _120
  _9 = catch_end _120, _125

  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _305 = is_tagged_tuple _9, `2`, `'EXIT'`
  br _305, ^302, ^130

302:
  %% Argument types:
  %%    _9 => {''EXIT'', any()}
  %% Aliased:
  %%    _9
  _50 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _50
  _299 = bif:is_tuple _50
  br _299, ^299, ^130

299:
  %% Argument types:
  %%    _50 => {...}
  %% Aliased:
  %%    _50
  _300 = bif:tuple_size _50

  %% Argument types:
  %%    _300 => 0..16777215
  %% Unique:
  %%    _300
  _301 = bif:'=:=' _300, `2`
  br _301, ^298, ^130

298:
  %% Argument types:
  %%    _50 => {any(), any()}
  %% Aliased:
  %%    _50
  _53 = get_tuple_element _50, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _295 = is_tagged_tuple _53, `2`, `try_clause`
  br _295, ^292, ^130

292:
  %% Argument types:
  %%    _53 => {'try_clause', any()}
  %% Aliased:
  %%    _53
  _54 = get_tuple_element _53, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _291 = bif:is_map _54
  br _291, ^291, ^130

291:
  %% Argument types:
  %%    _54 => map()
  %% Aliased:
  %%    _54
  _56 = get_map_element _54, `ok`

  %% Aliased:
  %%    _56
  _131 = succeeded:guard _56
  br _131, ^131, ^130

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _56
  _290 = bif:'=:=' _56, `ok`
  br _290, ^289, ^130

289:
  %% beam_ssa_SUITE.erl:1463
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _12 = call (`id`/1), `true`

  %% Aliased:
  %%    _12
  _132 = succeeded:body _12
  br _132, ^132, ^1

132:
  %% beam_ssa_SUITE.erl:1463
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _11 = call (`id`/1), `true`

  %% Aliased:
  %%    _11
  _133 = succeeded:body _11
  br _133, ^133, ^1

133:
  %% beam_ssa_SUITE.erl:1463
  %% Result type:
  %%    'ok' | 0.0
  %% Aliased:
  %%    _11, 
  %%    _12
  _57 = call (`gh_6599_3`/2), _12, _11

  %% Unique:
  %%    _57
  _134 = succeeded:body _57
  br _134, ^134, ^1

134:
  %% Argument types:
  %%    _57 => 'ok' | 0.0
  %% Unique:
  %%    _57
  _287 = bif:'=:=' _57, `ok`
  br _287, ^407, ^136

407:
  br ^413

413:
  _140 = new_try_tag `'catch'`
  br _140, ^138, ^139

138:
  %% beam_ssa_SUITE.erl:1464
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _15 = call (`id`/1), `false`

  %% Aliased:
  %%    _15
  _142 = succeeded:body _15
  br _142, ^142, ^139

142:
  %% beam_ssa_SUITE.erl:1464
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _14 = call (`id`/1), `false`

  %% Aliased:
  %%    _14
  _143 = succeeded:body _14
  br _143, ^143, ^139

143:
  %% beam_ssa_SUITE.erl:1464
  %% Result type:
  %%    'ok' | 0.0
  %% Aliased:
  %%    _14, 
  %%    _15
  _84 = call (`gh_6599_3`/2), _15, _14

  %% Unique:
  %%    _84
  _144 = succeeded:body _84
  br _144, ^144, ^139

144:
  br ^137

139:
  %% Unique:
  %%    _140
  _147 = landingpad `'catch'`, _140

  %% Aliased:
  %%    _147
  _145 = extract _147, `0`
  br ^137

137:
  _148 = phi { _145, ^139 }, { _84, ^144 }

  %% Aliased:
  %%    _148
  %% Unique:
  %%    _140
  _16 = catch_end _140, _148

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _282 = is_tagged_tuple _16, `2`, `'EXIT'`
  br _282, ^279, ^150

279:
  %% Argument types:
  %%    _16 => {''EXIT'', any()}
  %% Aliased:
  %%    _16
  _58 = get_tuple_element _16, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _58
  _276 = is_tagged_tuple _58, `2`, `function_clause`
  br _276, ^273, ^150

273:
  %% beam_ssa_SUITE.erl:1465
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _19 = call (`id`/1), `0.0`

  %% Aliased:
  %%    _19
  _151 = succeeded:body _19
  br _151, ^151, ^1

151:
  %% beam_ssa_SUITE.erl:1465
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _18 = call (`id`/1), `0.0`

  %% Aliased:
  %%    _18
  _152 = succeeded:body _18
  br _152, ^152, ^1

152:
  %% beam_ssa_SUITE.erl:1465
  %% Result type:
  %%    'ok' | 0.0
  %% Aliased:
  %%    _18, 
  %%    _19
  _62 = call (`gh_6599_3`/2), _19, _18

  %% Unique:
  %%    _62
  _153 = succeeded:body _62
  br _153, ^153, ^1

153:
  %% Argument types:
  %%    _62 => 'ok' | 0.0
  %% Unique:
  %%    _62
  _271 = bif:'=:=' _62, `0.0`
  br _271, ^408, ^155

408:
  br ^414

414:
  _159 = new_try_tag `'catch'`
  br _159, ^157, ^158

157:
  %% beam_ssa_SUITE.erl:1467
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _21 = call (`id`/1), `false`

  %% Aliased:
  %%    _21
  _161 = succeeded:body _21
  br _161, ^161, ^158

161:
  %% beam_ssa_SUITE.erl:1467
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _21
  _86 = call (`gh_6599_4`/1), _21

  %% Aliased:
  %%    _86
  _162 = succeeded:body _86
  br ^158

158:
  %% Unique:
  %%    _159
  _165 = landingpad `'catch'`, _159

  %% Aliased:
  %%    _165
  _163 = extract _165, `0`
  br ^156

156:
  %% Aliased:
  %%    _163
  %% Unique:
  %%    _159
  _22 = catch_end _159, _163

  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _266 = is_tagged_tuple _22, `2`, `'EXIT'`
  br _266, ^263, ^168

263:
  %% Argument types:
  %%    _22 => {''EXIT'', any()}
  %% Aliased:
  %%    _22
  _63 = get_tuple_element _22, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _63
  _260 = bif:is_tuple _63
  br _260, ^260, ^168

260:
  %% Argument types:
  %%    _63 => {...}
  %% Aliased:
  %%    _63
  _261 = bif:tuple_size _63

  %% Argument types:
  %%    _261 => 0..16777215
  %% Unique:
  %%    _261
  _262 = bif:'=:=' _261, `2`
  br _262, ^259, ^168

259:
  %% Argument types:
  %%    _63 => {any(), any()}
  %% Aliased:
  %%    _63
  _66 = get_tuple_element _63, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _66
  _258 = bif:'=:=' _66, `{badmatch,true}`
  br _258, ^409, ^168

409:
  br ^415

415:
  _172 = new_try_tag `'catch'`
  br _172, ^170, ^171

170:
  %% beam_ssa_SUITE.erl:1469
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _26 = call (`id`/1), `[a]`

  %% Aliased:
  %%    _26
  _174 = succeeded:body _26
  br _174, ^174, ^171

174:
  %% beam_ssa_SUITE.erl:1469
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _25 = call (`id`/1), `#{0 => [a]}`

  %% Aliased:
  %%    _25
  _175 = succeeded:body _25
  br _175, ^175, ^171

175:
  %% beam_ssa_SUITE.erl:1469
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _24 = call (`id`/1), `[a]`

  %% Aliased:
  %%    _24
  _176 = succeeded:body _24
  br _176, ^176, ^171

176:
  %% beam_ssa_SUITE.erl:1469
  %% Result type:
  %%    nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %% Aliased:
  %%    _24, 
  %%    _25, 
  %%    _26
  _88 = call (`gh_6599_5`/3), _26, _25, _24

  %% Aliased:
  %%    _88
  _177 = succeeded:body _88
  br _177, ^177, ^171

177:
  br ^169

171:
  %% Unique:
  %%    _172
  _180 = landingpad `'catch'`, _172

  %% Aliased:
  %%    _180
  _178 = extract _180, `0`
  br ^169

169:
  _181 = phi { _178, ^171 }, { _88, ^177 }

  %% Aliased:
  %%    _181
  %% Unique:
  %%    _172
  _27 = catch_end _172, _181

  %% Argument types:
  %%    
  %% Aliased:
  %%    _27
  _254 = is_tagged_tuple _27, `2`, `'EXIT'`
  br _254, ^251, ^183

251:
  %% Argument types:
  %%    _27 => {''EXIT'', any()}
  %% Aliased:
  %%    _27
  _67 = get_tuple_element _27, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _67
  _248 = bif:is_tuple _67
  br _248, ^248, ^183

248:
  %% Argument types:
  %%    _67 => {...}
  %% Aliased:
  %%    _67
  _249 = bif:tuple_size _67

  %% Argument types:
  %%    _249 => 0..16777215
  %% Unique:
  %%    _249
  _250 = bif:'=:=' _249, `2`
  br _250, ^247, ^183

247:
  %% Argument types:
  %%    _67 => {any(), any()}
  %% Aliased:
  %%    _67
  _70 = get_tuple_element _67, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _70
  _246 = bif:'=:=' _70, `{badmatch,ok}`
  br _246, ^246, ^183

246:
  %% beam_ssa_SUITE.erl:1471
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _30 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _30
  _184 = succeeded:body _30
  br _184, ^184, ^1

184:
  %% beam_ssa_SUITE.erl:1471
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _29 = call (`id`/1), `#{}`

  %% Aliased:
  %%    _29
  _185 = succeeded:body _29
  br _185, ^185, ^1

185:
  %% beam_ssa_SUITE.erl:1471
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _29, 
  %%    _30
  _71 = call (`gh_6599_6`/2), _30, _29

  %% Aliased:
  %%    _71
  _186 = succeeded:body _71
  br _186, ^244, ^1

244:
  %% Argument types:
  %%    _71 => map()
  %% Aliased:
  %%    _71
  _72 = get_map_element _71, `ok`

  %% Aliased:
  %%    _72
  _189 = succeeded:guard _72
  br _189, ^189, ^188

189:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _72
  _243 = bif:'=:=' _72, `ok`
  br _243, ^410, ^188

410:
  br ^416

416:
  _193 = new_try_tag `'catch'`
  br _193, ^191, ^192

191:
  %% beam_ssa_SUITE.erl:1472
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _33 = call (`id`/1), `a`

  %% Aliased:
  %%    _33
  _195 = succeeded:body _33
  br _195, ^195, ^192

195:
  %% beam_ssa_SUITE.erl:1472
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _32 = call (`id`/1), `a`

  %% Aliased:
  %%    _32
  _196 = succeeded:body _32
  br _196, ^196, ^192

196:
  %% beam_ssa_SUITE.erl:1472
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _32, 
  %%    _33
  _90 = call (`gh_6599_6`/2), _33, _32

  %% Aliased:
  %%    _90
  _197 = succeeded:body _90
  br _197, ^197, ^192

197:
  br ^190

192:
  %% Unique:
  %%    _193
  _200 = landingpad `'catch'`, _193

  %% Aliased:
  %%    _200
  _198 = extract _200, `0`
  br ^190

190:
  _201 = phi { _198, ^192 }, { _90, ^197 }

  %% Aliased:
  %%    _201
  %% Unique:
  %%    _193
  _34 = catch_end _193, _201

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _238 = is_tagged_tuple _34, `2`, `'EXIT'`
  br _238, ^235, ^203

235:
  %% Argument types:
  %%    _34 => {''EXIT'', any()}
  %% Aliased:
  %%    _34
  _73 = get_tuple_element _34, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _73
  _232 = bif:is_tuple _73
  br _232, ^232, ^203

232:
  %% Argument types:
  %%    _73 => {...}
  %% Aliased:
  %%    _73
  _233 = bif:tuple_size _73

  %% Argument types:
  %%    _233 => 0..16777215
  %% Unique:
  %%    _233
  _234 = bif:'=:=' _233, `2`
  br _234, ^231, ^203

231:
  %% Argument types:
  %%    _73 => {any(), any()}
  %% Aliased:
  %%    _73
  _76 = get_tuple_element _73, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76
  _230 = bif:'=:=' _76, `{badmap,a}`
  br _230, ^411, ^203

411:
  br ^417

417:
  _207 = new_try_tag `'catch'`
  br _207, ^205, ^206

205:
  %% beam_ssa_SUITE.erl:1474
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _37 = call (`id`/1), `[a]`

  %% Aliased:
  %%    _37
  _209 = succeeded:body _37
  br _209, ^209, ^206

209:
  %% beam_ssa_SUITE.erl:1474
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _36 = call (`id`/1), `[a]`

  %% Aliased:
  %%    _36
  _210 = succeeded:body _36
  br _210, ^210, ^206

210:
  %% beam_ssa_SUITE.erl:1474
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _36, 
  %%    _37
  _92 = call (`gh_6599_7`/2), _37, _36

  %% Aliased:
  %%    _92
  _211 = succeeded:body _92
  br ^206

206:
  %% Unique:
  %%    _207
  _214 = landingpad `'catch'`, _207

  %% Aliased:
  %%    _214
  _212 = extract _214, `0`
  br ^204

204:
  %% Aliased:
  %%    _212
  %% Unique:
  %%    _207
  _38 = catch_end _207, _212

  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _226 = is_tagged_tuple _38, `2`, `'EXIT'`
  br _226, ^223, ^217

223:
  %% Argument types:
  %%    _38 => {''EXIT'', any()}
  %% Aliased:
  %%    _38
  _77 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _77
  _220 = bif:is_tuple _77
  br _220, ^220, ^217

220:
  %% Argument types:
  %%    _77 => {...}
  %% Aliased:
  %%    _77
  _221 = bif:tuple_size _77

  %% Argument types:
  %%    _221 => 0..16777215
  %% Unique:
  %%    _221
  _222 = bif:'=:=' _221, `2`
  br _222, ^219, ^217

219:
  %% Argument types:
  %%    _77 => {any(), any()}
  %% Aliased:
  %%    _77
  _80 = get_tuple_element _77, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _218 = bif:'=:=' _80, `{badarg,ok}`
  br _218, ^218, ^217

218:
  %% Result type:
  %%    'ok'
  ret `ok`

217:
  %% beam_ssa_SUITE.erl:1474
  %% Aliased:
  %%    _38
  _93 = match_fail `badmatch`, _38

  %% Unique:
  %%    _93
  _229 = succeeded:body _93
  br ^1

203:
  %% beam_ssa_SUITE.erl:1472
  %% Aliased:
  %%    _34
  _94 = match_fail `badmatch`, _34

  %% Unique:
  %%    _94
  _241 = succeeded:body _94
  br ^1

188:
  %% beam_ssa_SUITE.erl:1471
  %% Aliased:
  %%    _71
  _95 = match_fail `badmatch`, _71

  %% Unique:
  %%    _95
  _245 = succeeded:body _95
  br ^1

183:
  %% beam_ssa_SUITE.erl:1469
  %% Aliased:
  %%    _27
  _96 = match_fail `badmatch`, _27

  %% Unique:
  %%    _96
  _257 = succeeded:body _96
  br ^1

168:
  %% beam_ssa_SUITE.erl:1467
  %% Aliased:
  %%    _22
  _97 = match_fail `badmatch`, _22

  %% Unique:
  %%    _97
  _269 = succeeded:body _97
  br ^1

155:
  %% beam_ssa_SUITE.erl:1465
  _98 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _98
  _272 = succeeded:body _98
  br ^1

150:
  %% beam_ssa_SUITE.erl:1464
  %% Aliased:
  %%    _16
  _99 = match_fail `badmatch`, _16

  %% Unique:
  %%    _99
  _285 = succeeded:body _99
  br ^1

136:
  %% beam_ssa_SUITE.erl:1463
  _100 = match_fail `badmatch`, `0.0`

  %% Unique:
  %%    _100
  _288 = succeeded:body _100
  br ^1

130:
  %% beam_ssa_SUITE.erl:1460
  %% Aliased:
  %%    _9
  _101 = match_fail `badmatch`, _9

  %% Unique:
  %%    _101
  _308 = succeeded:body _101
  br ^1

115:
  %% beam_ssa_SUITE.erl:1458
  %% Aliased:
  %%    _48
  _102 = match_fail `badmatch`, _48

  %% Unique:
  %%    _102
  _312 = succeeded:body _102
  br ^1

110:
  %% beam_ssa_SUITE.erl:1457
  %% Aliased:
  %%    _47
  _103 = match_fail `badmatch`, _47

  %% Unique:
  %%    _103
  _315 = succeeded:body _103
  br ^1

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% beam_ssa_SUITE.erl:1478
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_1`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:1478
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _5 = bif:'=:=' _1, _0
  br _5, ^28, ^17

28:
  %% beam_ssa_SUITE.erl:1478
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _6 = bif:is_integer _0
  br _6, ^16, ^14

16:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  _24 = bif:is_map _1
  br _24, ^24, ^17

24:
  %% Argument types:
  %%    _1 => map()
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | float() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _18 = bif:'=:=' _1, _0
  br _18, ^21, ^17

21:
  %% beam_ssa_SUITE.erl:1481
  %% Aliased:
  %%    _0
  _9 = put_map `exact`, _0, `ok`, `ok`

  %% Aliased:
  %%    _9
  _22 = succeeded:body _9
  br _22, ^22, ^1

22:
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _9
  ret _9

17:
  %% beam_ssa_SUITE.erl:1478
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-gh_6599_1/2-',2}}
  _11 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _11
  _25 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% beam_ssa_SUITE.erl:1483
%% Counter = 69
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_2`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  _50 = bif:is_map _1
  br _50, ^50, ^29

50:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _18 = get_map_element _1, `0`

  %% Aliased:
  %%    _18
  _30 = succeeded:guard _18
  br _30, ^30, ^29

30:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _18
  _31 = bif:'=:=' _18, _0
  br _31, ^67, ^29

67:
  br ^68

68:
  _36 = new_try_tag `'try'`
  br _36, ^35, ^33

35:
  %% Argument types:
  %%    _18 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _18
  _39 = bif:'=:=' _18, `#{ok => ok}`
  br _39, ^39, ^38

39:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _18 => #{'ok'=>'ok'}
  %% Aliased:
  %%    _0, 
  %%    _18
  _42 = bif:'=:=' _0, _18
  br _42, ^42, ^41

42:
  %% beam_ssa_SUITE.erl:1486
  %% Argument types:
  %%    _0 => #{'ok'=>'ok'}
  %% Aliased:
  %%    _0
  _22 = bif:'bnot' _0

  %% Unique:
  %%    _22
  _43 = succeeded:body _22
  br ^33

41:
  %% beam_ssa_SUITE.erl:1486
  %% Aliased:
  %%    _0
  _23 = match_fail `badmatch`, _0

  %% Unique:
  %%    _23
  _44 = succeeded:body _23
  br ^33

38:
  %% beam_ssa_SUITE.erl:1484
  _24 = match_fail `try_clause`, `#{ok => ok}`

  %% Unique:
  %%    _24
  _45 = succeeded:body _24
  br ^33

33:
  %% Unique:
  %%    _36
  _47 = landingpad `'try'`, _36

  %% Aliased:
  %%    _47
  _11 = extract _47, `1`

  %% Aliased:
  %%    _47
  _10 = extract _47, `2`

  %% Unique:
  %%    _36
  _48 = kill_try_tag _36

  %% Aliased:
  %%    _10, 
  %%    _11
  _25 = resume _10, _11

  %% Unique:
  %%    _25
  _46 = succeeded:body _25
  br ^1

29:
  %% beam_ssa_SUITE.erl:1483
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-gh_6599_2/2-',2}}
  _26 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _26
  _51 = succeeded:body _26
  br ^1

1:
  _27 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _27
}

%% beam_ssa_SUITE.erl:1491
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_3`(_0, _1) {
0:
  %% beam_ssa_SUITE.erl:1491
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _5 = bif:'=:=' _1, _0
  br _5, ^25, ^14

25:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _6 = bif:'=:=' _0, `true`
  br _6, ^16, ^14

16:
  %% Result type:
  %%    'ok'
  ret `ok`

14:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  _21 = bif:'=:=' _1, `0.0`
  br _21, ^20, ^17

20:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _18 = bif:'=:=' _0, `0.0`
  br _18, ^19, ^17

19:
  %% Result type:
  %%    0.0
  ret `0.0`

17:
  %% beam_ssa_SUITE.erl:1491
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-gh_6599_3/2-',2}}
  _11 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _11
  _22 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% beam_ssa_SUITE.erl:1496
%% Counter = 73
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_4`(_0) {
0:
  br ^72

72:
  _32 = new_try_tag `'try'`
  br _32, ^31, ^29

31:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _36 = bif:'=:=' _0, `false`
  br _36, ^33, ^34

33:
  %% Unique:
  %%    _32
  _45 = kill_try_tag _32
  br ^30

34:
  %% beam_ssa_SUITE.erl:1499
  %% Aliased:
  %%    _0
  _20 = match_fail `badmatch`, _0

  %% Unique:
  %%    _20
  _37 = succeeded:body _20
  br ^29

29:
  %% Unique:
  %%    _32
  _43 = landingpad `'try'`, _32

  %% Aliased:
  %%    _43
  _5 = extract _43, `0`

  %% Aliased:
  %%    _43
  _4 = extract _43, `1`

  %% Aliased:
  %%    _43
  _3 = extract _43, `2`

  %% Unique:
  %%    _32
  _44 = kill_try_tag _32

  %% Argument types:
  %%    _5 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _5
  _41 = bif:'=:=' _5, `throw`
  br _41, ^40, ^39

40:
  br ^30

30:
  _6 = phi { `false`, ^33 }, { `ok`, ^40 }

  %% beam_ssa_SUITE.erl:1503
  %% Argument types:
  %%    _6 => 'false' | 'ok'
  %% Unique:
  %%    _6
  Y = bif:'=/=' _6, `ok`

  %% Argument types:
  %%    Y => 'false' | 'true'
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  %% Unique:
  %%    Y
  _48 = bif:'=:=' Y, _0
  br _48, ^48, ^47

48:
  br Y, ^50, ^52

50:
  %% beam_ssa_SUITE.erl:1505
  _24 = match_fail `badmatch`, `true`

  %% Unique:
  %%    _24
  _54 = succeeded:body _24
  br ^1

52:
  %% beam_ssa_SUITE.erl:1506
  _23 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _23
  _51 = succeeded:body _23
  br ^1

47:
  %% beam_ssa_SUITE.erl:1504
  %% Unique:
  %%    Y
  _25 = match_fail `badmatch`, Y

  %% Unique:
  %%    _25
  _55 = succeeded:body _25
  br ^1

39:
  %% Aliased:
  %%    _3, 
  %%    _4
  _22 = resume _3, _4

  %% Unique:
  %%    _22
  _42 = succeeded:body _22
  br ^1

1:
  _26 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _26
}

%% beam_ssa_SUITE.erl:1509
%% Counter = 96
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _2 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_5`(_0, _1, _2) {
0:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _1
  _73 = bif:is_map _1
  br _73, ^73, ^42

73:
  %% Argument types:
  %%    _1 => map()
  %% Aliased:
  %%    _1
  _27 = get_map_element _1, `0`

  %% Aliased:
  %%    _27
  _43 = succeeded:guard _27
  br _43, ^43, ^42

43:
  %% Aliased:
  %%    _2
  _72 = is_nonempty_list _2
  br _72, ^72, ^42

72:
  %% beam_ssa_SUITE.erl:1509
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _27
  _17 = bif:'=:=' _27, _0
  br _17, ^77, ^42

77:
  %% beam_ssa_SUITE.erl:1509
  %% Argument types:
  %%    _2 => nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %%    _27 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _2, 
  %%    _27
  _18 = bif:'=:=' _2, _27
  br _18, ^94, ^42

94:
  br ^95

95:
  _50 = new_try_tag `'try'`
  br _50, ^52, ^47

52:
  %% beam_ssa_SUITE.erl:1511
  _35 = match_fail `badmatch`, `ok`

  %% Unique:
  %%    _35
  _54 = succeeded:body _35
  br ^47

47:
  %% Unique:
  %%    _50
  _69 = landingpad `'try'`, _50

  %% Aliased:
  %%    _69
  _7 = extract _69, `0`

  %% Aliased:
  %%    _69
  _6 = extract _69, `1`

  %% Aliased:
  %%    _69
  _5 = extract _69, `2`

  %% Unique:
  %%    _50
  _70 = kill_try_tag _50

  %% Argument types:
  %%    _7 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _7
  _67 = bif:'=:=' _7, `throw`
  br _67, ^66, ^56

66:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _27 => nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %% Aliased:
  %%    _0, 
  %%    _27
  _59 = bif:'=:=' _0, _27
  br _59, ^63, ^58

63:
  %% Argument types:
  %%    _0 => nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %% Aliased:
  %%    _0
  _31 = get_tl _0

  %% Argument types:
  %%    _31 => list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %% Aliased:
  %%    _31
  _62 = bif:'=:=' _31, `[]`
  br _62, ^62, ^61

62:
  %% Result type:
  %%    nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %% Aliased:
  %%    _0
  ret _0

61:
  %% beam_ssa_SUITE.erl:1514
  %% Aliased:
  %%    _0
  _36 = match_fail `badmatch`, _0

  %% Unique:
  %%    _36
  _64 = succeeded:body _36
  br ^1

58:
  %% beam_ssa_SUITE.erl:1514
  %% Aliased:
  %%    _0
  _37 = match_fail `badmatch`, _0

  %% Unique:
  %%    _37
  _65 = succeeded:body _37
  br ^1

56:
  %% Aliased:
  %%    _5, 
  %%    _6
  _38 = resume _5, _6

  %% Unique:
  %%    _38
  _68 = succeeded:body _38
  br ^1

42:
  %% beam_ssa_SUITE.erl:1509
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  %% Anno: #{inlined => {'-inlined-gh_6599_5/3-',3}}
  _39 = match_fail `function_clause`, _0, _1, _2

  %% Unique:
  %%    _39
  _74 = succeeded:body _39
  br ^1

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40
}

%% beam_ssa_SUITE.erl:1517
%% Counter = 30
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_6`(_0, _1) {
0:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _16 = bif:'=:=' _1, _0
  br _16, ^16, ^15

16:
  %% Argument types:
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  _19 = bif:is_map _0
  br _19, ^17, ^18

17:
  %% Argument types:
  %%    _0 => map()
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _23 = bif:'=:=' _0, _1
  br _23, ^27, ^22

27:
  %% beam_ssa_SUITE.erl:1519
  %% Aliased:
  %%    _1
  _10 = put_map `assoc`, _1, `ok`, `ok`
  %% Result type:
  %%    map()
  %% Aliased:
  %%    _10
  ret _10

22:
  %% beam_ssa_SUITE.erl:1519
  %% Aliased:
  %%    _0
  _9 = match_fail `case_clause`, _0

  %% Unique:
  %%    _9
  _24 = succeeded:body _9
  br ^1

18:
  %% beam_ssa_SUITE.erl:1518
  %% Aliased:
  %%    _0
  _8 = match_fail `badmap`, _0

  %% Unique:
  %%    _8
  _20 = succeeded:body _8
  br ^1

15:
  %% beam_ssa_SUITE.erl:1517
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-gh_6599_6/2-',2}}
  _12 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _12
  _29 = succeeded:body _12
  br ^1

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% beam_ssa_SUITE.erl:1521
%% Counter = 153
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
%%    _1 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`gh_6599_7`(_0, _1) {
0:
  br ^150

150:
  _58 = new_try_tag `'try'`
  br _58, ^57, ^55

57:
  %% Argument types:
  %%    _1 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _61 = bif:'=:=' _1, _0
  br _61, ^148, ^60

148:
  br ^151

151:
  _66 = new_try_tag `'try'`
  br _66, ^149, ^63

149:
  br ^152

152:
  _71 = new_try_tag `'try'`
  br _71, ^70, ^68

70:
  %% Aliased:
  %%    _1
  _74 = is_nonempty_list _1
  br _74, ^72, ^73

72:
  %% Unique:
  %%    _71
  _83 = kill_try_tag _71

  %% Argument types:
  %%    _1 => nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %%    _0 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0, 
  %%    _1
  _78 = bif:'=:=' _1, _0
  br _78, ^69, ^77

69:
  %% Unique:
  %%    _66
  _87 = kill_try_tag _66

  %% beam_ssa_SUITE.erl:1524
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  _35 = call (`id`/1), `ok`

  %% Aliased:
  %%    _35
  _88 = succeeded:body _35
  br _88, ^88, ^55

88:
  %% Argument types:
  %%    
  switch _35, ^90, [
    { `false`, ^92 },
    { `true`, ^91 }
  ]

91:
  br ^89

92:
  br ^89

89:
  _17 = phi { `true`, ^91 }, { _0, ^92 }

  %% beam_ssa_SUITE.erl:1531
  %% Argument types:
  %%    _17 => 'true' | nonempty_list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c')))
  %% Aliased:
  %%    _17
  _49 = bif:'bsl' _17, `0`

  %% Unique:
  %%    _49
  _94 = succeeded:body _49
  br ^55

90:
  %% Argument types:
  %%    _35 => atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _35
  _36 = put_tuple `badarg`, _35

  %% beam_ssa_SUITE.erl:1531
  %% Unique:
  %%    _36
  _48 = call (`erlang`:`error`/1), _36

  %% Aliased:
  %%    _48
  _93 = succeeded:body _48
  br ^55

77:
  %% beam_ssa_SUITE.erl:1525
  %% Aliased:
  %%    _1
  _45 = match_fail `try_clause`, _1

  %% Unique:
  %%    _45
  _79 = succeeded:body _45
  br ^63

73:
  %% beam_ssa_SUITE.erl:1525
  %% Aliased:
  %%    _1
  _43 = match_fail `badmatch`, _1

  %% Unique:
  %%    _43
  _75 = succeeded:body _43
  br ^68

68:
  %% Unique:
  %%    _71
  _81 = landingpad `'try'`, _71

  %% Aliased:
  %%    _81
  _8 = extract _81, `1`

  %% Aliased:
  %%    _81
  _7 = extract _81, `2`

  %% Unique:
  %%    _71
  _82 = kill_try_tag _71

  %% Aliased:
  %%    _7, 
  %%    _8
  _46 = resume _7, _8

  %% Unique:
  %%    _46
  _80 = succeeded:body _46
  br ^63

63:
  %% Unique:
  %%    _66
  _85 = landingpad `'try'`, _66

  %% Aliased:
  %%    _85
  _13 = extract _85, `1`

  %% Aliased:
  %%    _85
  _12 = extract _85, `2`

  %% Unique:
  %%    _66
  _86 = kill_try_tag _66

  %% Aliased:
  %%    _12, 
  %%    _13
  _47 = resume _12, _13

  %% Unique:
  %%    _47
  _84 = succeeded:body _47
  br ^55

60:
  %% beam_ssa_SUITE.erl:1522
  %% Aliased:
  %%    _1
  _50 = match_fail `try_clause`, _1

  %% Unique:
  %%    _50
  _95 = succeeded:body _50
  br ^55

55:
  %% Unique:
  %%    _58
  _97 = landingpad `'try'`, _58

  %% Aliased:
  %%    _97
  _25 = extract _97, `1`

  %% Aliased:
  %%    _97
  _24 = extract _97, `2`

  %% Unique:
  %%    _58
  _98 = kill_try_tag _58

  %% Aliased:
  %%    _24, 
  %%    _25
  _51 = resume _24, _25

  %% Unique:
  %%    _51
  _96 = succeeded:body _51
  br ^1

1:
  _52 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _52
}

%% beam_ssa_SUITE.erl:1538
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
function `beam_ssa_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    atom() | list('a' | nonempty_list(nonempty_list('a' | 'b' | 'c'))) | number() | {any(), any(), ...} | other()
  %% Aliased:
  %%    _0
  ret _0
}

%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `beam_ssa_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `beam_ssa_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_ssa_SUITE.erl:970
%% Counter = 15
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-grab_bag_3/0-fun-0-'`(_2) {
0:
  %% beam_ssa_SUITE.erl:970
  %% Aliased:
  %%    _2
  %% Anno: #{inlined => {'-grab_bag_3/0-inlined-0-',1}}
  _6 = match_fail `function_clause`, _2

  %% Unique:
  %%    _6
  _14 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_ssa_SUITE.erl:868
%% Counter = 26
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-test_mapfoldl_implementations/0-fun-0-'`(_3, _2) {
0:
  %% beam_ssa_SUITE.erl:868
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _1 = bif:'+' _2, _3

  %% Unique:
  %%    _1
  _25 = succeeded:body _1
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    _3 => number()
  %%    _1 => number()
  %% Unique:
  %%    _1, 
  %%    _3
  _22 = put_tuple _3, _1
  %% Result type:
  %%    {number(), number()}
  %% Unique:
  %%    _22
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% beam_ssa_SUITE.erl:852
%% Counter = 38
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-mapfoldl/1-fun-0-'`(_3, _2) {
0:
  %% beam_ssa_SUITE.erl:853
  _32 = call (`erlang`:`garbage_collect`/0)

  %% Aliased:
  %%    _32
  _36 = succeeded:body _32
  br _36, ^36, ^1

36:
  %% beam_ssa_SUITE.erl:854
  %% Aliased:
  %%    _3
  _1 = call (`erlang`:`make_tuple`/2), _3, `a`

  %% Aliased:
  %%    _1
  _37 = succeeded:body _1
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _3
  _33 = put_tuple _3, _1
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _33
  ret _33

1:
  _34 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _34
}

%% beam_ssa_SUITE.erl:840
%% Counter = 33
%% bs_ensure_opt: true
%% Parameters
%%    _17 =>
%%     100000
function `beam_ssa_SUITE`:`'-mapfoldl/0-fun-1-'`(_17) {
0:
  %% Result type:
  %%    {any(), any()}
  _6 = make_fun (`'-mapfoldl/0-fun-0-'`/2)

  %% beam_ssa_SUITE.erl:841
  %% Result type:
  %%    {nonempty_list(any()), any()}
  %% Aliased:
  %%    _6
  _28 = call (`mapfoldl`/3), _6, `[]`, `[100000]`

  %% Unique:
  %%    _28
  _31 = succeeded:body _28
  br _31, ^31, ^1

31:
  %% Result type:
  %%    {nonempty_list(any()), any()}
  %% Unique:
  %%    _28
  ret _28

1:
  _29 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _29
}

%% beam_ssa_SUITE.erl:841
%% Counter = 32
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-mapfoldl/0-fun-0-'`(_3, _2) {
0:
  %% beam_ssa_SUITE.erl:842
  _26 = call (`erlang`:`garbage_collect`/0)

  %% Aliased:
  %%    _26
  _30 = succeeded:body _26
  br _30, ^30, ^1

30:
  %% beam_ssa_SUITE.erl:843
  %% Aliased:
  %%    _3
  _1 = call (`erlang`:`make_tuple`/2), _3, `a`

  %% Aliased:
  %%    _1
  _31 = succeeded:body _1
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _3
  _27 = put_tuple _3, _1
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _27
  ret _27

1:
  _28 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _28
}

%% beam_ssa_SUITE.erl:824
%% Counter = 14
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-stack_init/2-fun-0-'`(_3, _2) {
0:
  %% beam_ssa_SUITE.erl:825
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _10 = bif:'+' _2, _3

  %% Unique:
  %%    _10
  _13 = succeeded:body _10
  br _13, ^13, ^1

13:
  %% Result type:
  %%    number()
  %% Unique:
  %%    _10
  ret _10

1:
  _11 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _11
}

%% beam_ssa_SUITE.erl:613
%% Counter = 152
%% bs_ensure_opt: true
%% Parameters
%%    _47 =>
%%     bitstring(256,appendable)
%%    _48 =>
%%     nil()
function `beam_ssa_SUITE`:`'-cover_ssa_dead/1-lbc$^0/2-0-'`(_48, _47) {
0:
  %% Result type:
  %%    bitstring(256,appendable)
  %% Unique:
  %%    _47
  ret _47
}

%% beam_ssa_SUITE.erl:278
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     pid()
function `beam_ssa_SUITE`:`'-my_spawn/1-fun-0-'`(_0) {
0:
  %% beam_ssa_SUITE.erl:279
  %% Argument types:
  %%    
  _1 = bif:self

  %% Argument types:
  %%    _1 => pid()
  %% Unique:
  %%    _1
  _9 = put_tuple `ok`, _1

  %% beam_ssa_SUITE.erl:279
  %% Aliased:
  %%    _0
  %% Unique:
  %%    _9
  _11 = call (`erlang`:`'!'`/2), _0, _9

  %% Aliased:
  %%    _11
  _15 = succeeded:body _11
  br _15, ^15, ^1

15:
  br ^10

10:
  %% beam_ssa_SUITE.erl:280
  _6 = peek_message `none`

  %% Aliased:
  %%    _6
  _25 = succeeded:guard _6
  br _25, ^23, ^24

23:
  _12 = remove_message
  %% Result type:
  %%    'ok'
  ret `ok`

24:
  _18 = wait_timeout `infinity`

  %% Unique:
  %%    _18
  _19 = succeeded:body _18
  br _19, ^22, ^1

22:
  br ^10

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% beam_ssa_SUITE.erl:182
%% Counter = 127
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-recv/1-fun-4-'`() {
0:
  br ^69

69:
  %% beam_ssa_SUITE.erl:182
  _61 = peek_message `none`

  %% Aliased:
  %%    _61
  _126 = succeeded:guard _61
  br _126, ^124, ^125

124:
  _114 = remove_message
  %% Result type:
  %%    'ok'
  ret `ok`

125:
  _119 = wait_timeout `infinity`

  %% Unique:
  %%    _119
  _120 = succeeded:body _119
  br _120, ^123, ^1

123:
  br ^69

1:
  _115 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _115
}

%% beam_ssa_SUITE.erl:175
%% Counter = 129
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-recv/1-fun-3-'`() {
0:
  %% beam_ssa_SUITE.erl:176
  %% Argument types:
  %%    
  Self = bif:self

  %% Aliased:
  %%    Self
  _10 = make_fun (`'-recv/1-fun-2-'`/1), Self

  %% beam_ssa_SUITE.erl:177
  %% Aliased:
  %%    _10
  _112 = call (`erlang`:`spawn`/1), _10

  %% Aliased:
  %%    _112
  _116 = succeeded:body _112
  br _116, ^116, ^1

116:
  br ^67

67:
  %% beam_ssa_SUITE.erl:178
  _58 = peek_message `none`

  %% Aliased:
  %%    _58
  _126 = succeeded:guard _58
  br _126, ^124, ^125

124:
  _113 = remove_message
  %% Result type:
  %%    'ok'
  ret `ok`

125:
  _119 = wait_timeout `infinity`

  %% Unique:
  %%    _119
  _120 = succeeded:body _119
  br _120, ^123, ^1

123:
  br ^67

1:
  _114 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _114
}

%% beam_ssa_SUITE.erl:177
%% Counter = 115
%% bs_ensure_opt: true
%% Parameters
%%    Self =>
%%     pid()
function `beam_ssa_SUITE`:`'-recv/1-fun-2-'`(Self) {
0:
  %% beam_ssa_SUITE.erl:177
  %% Aliased:
  %%    Self
  _111 = call (`erlang`:`exit`/2), Self, `kill_me`

  %% Aliased:
  %%    _111
  _114 = succeeded:body _111
  br _114, ^114, ^1

114:
  %% Aliased:
  %%    _111
  ret _111

1:
  _112 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _112
}

%% beam_ssa_SUITE.erl:172
%% Counter = 114
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-recv/1-fun-1-'`() {
0:
  %% beam_ssa_SUITE.erl:172
  _110 = call (`erlang`:`exit`/1), `down`

  %% Unique:
  %%    _110
  _113 = succeeded:body _110
  br ^1

1:
  _111 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _111
}

%% beam_ssa_SUITE.erl:169
%% Counter = 114
%% bs_ensure_opt: true
%% Parameters
%%    Parent =>
%%     pid()
function `beam_ssa_SUITE`:`'-recv/1-fun-0-'`(Parent) {
0:
  %% beam_ssa_SUITE.erl:169
  %% Argument types:
  %%    
  _2 = bif:self

  %% Argument types:
  %%    _2 => pid()
  %% Unique:
  %%    _2
  _64 = put_tuple `ack`, _2, `{result,42}`

  %% beam_ssa_SUITE.erl:169
  %% Aliased:
  %%    Parent
  %% Unique:
  %%    _64
  _109 = call (`erlang`:`'!'`/2), Parent, _64

  %% Aliased:
  %%    _109
  _112 = succeeded:body _109
  br _112, ^112, ^1

112:
  %% Aliased:
  %%    _109
  ret _109

1:
  _110 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _110
}

%% beam_ssa_SUITE.erl:73
%% Counter = 66
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-calls/1-fun-1-'`(_7, _6) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _64 = bif:'=:=' _7, `a`
  br _64, ^63, ^60

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _62 = bif:'=:=' _6, `b`
  br _62, ^61, ^60

61:
  %% Result type:
  %%    'ok'
  ret `ok`

60:
  %% beam_ssa_SUITE.erl:73
  %% Aliased:
  %%    _6, 
  %%    _7
  %% Anno: #{inlined => {'-calls/1-inlined-1-',2}}
  _57 = match_fail `function_clause`, _7, _6

  %% Unique:
  %%    _57
  _65 = succeeded:body _57
  br ^1

1:
  _58 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _58
}

%% beam_ssa_SUITE.erl:72
%% Counter = 63
%% bs_ensure_opt: true
function `beam_ssa_SUITE`:`'-calls/1-fun-0-'`(_2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _61 = bif:'=:=' _2, `42`
  br _61, ^60, ^59

60:
  %% Result type:
  %%    'ok'
  ret `ok`

59:
  %% beam_ssa_SUITE.erl:72
  %% Aliased:
  %%    _2
  %% Anno: #{inlined => {'-calls/1-inlined-0-',1}}
  _56 = match_fail `function_clause`, _2

  %% Unique:
  %%    _56
  _62 = succeeded:body _56
  br ^1

1:
  _57 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _57
}
