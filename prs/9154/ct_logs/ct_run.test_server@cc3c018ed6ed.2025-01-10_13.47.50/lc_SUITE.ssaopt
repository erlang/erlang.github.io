module lc_SUITE.
exports [{all,0},
         {basic,1},
         {deeply_nested,1},
         {effect,1},
         {empty_generator,1},
         {end_per_group,2},
         {end_per_suite,1},
         {end_per_testcase,2},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {init_per_testcase,2},
         {module_info,0},
         {module_info,1},
         {no_export,1},
         {no_generator,1},
         {shadow,1},
         {suite,0}].
attributes [].

%% lc_SUITE.erl:31
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')} | {'timetrap', {'minutes', 1}})
  ret `[{ct_hooks,[ts_install_cth]},{timetrap,{minutes,1}}]`
}

%% lc_SUITE.erl:35
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% lc_SUITE.erl:38
%% Counter = 7
%% bs_ensure_opt: true
function `lc_SUITE`:`groups`() {
0:
  %% lc_SUITE.erl:39
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[basic,deeply_nested,no_generator,empty_generator,no_export,shadow,effect]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list(atom())}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list(atom())})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% lc_SUITE.erl:49
%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`init_per_suite`(_0) {
0:
  %% lc_SUITE.erl:50
  _2 = call (`test_lib`:`recompile`/1), `lc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% lc_SUITE.erl:53
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% lc_SUITE.erl:56
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% lc_SUITE.erl:59
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% lc_SUITE.erl:63
%% Counter = 18
%% bs_ensure_opt: true
function `lc_SUITE`:`init_per_testcase`(_0, _1) {
0:
  %% lc_SUITE.erl:63
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% lc_SUITE.erl:63
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    maybe_improper_list(any(), any())
  %% Aliased:
  %%    _1
  ret _1

10:
  %% lc_SUITE.erl:63
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-init_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% lc_SUITE.erl:66
%% Counter = 18
%% bs_ensure_opt: true
function `lc_SUITE`:`end_per_testcase`(_0, _1) {
0:
  %% lc_SUITE.erl:66
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% lc_SUITE.erl:66
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% lc_SUITE.erl:66
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-end_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% lc_SUITE.erl:69
%% Counter = 1421
%% bs_ensure_opt: true
function `lc_SUITE`:`basic`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _787 = bif:is_list _0
  br _787, ^787, ^786

787:
  %% lc_SUITE.erl:70
  L0 = call (`lists`:`seq`/2), `1`, `10`

  %% Aliased:
  %%    L0
  _788 = succeeded:body L0
  br _788, ^788, ^1

788:
  %% Result type:
  %%    {'x', any()}
  _4 = make_fun (`'-basic/1-fun-0-'`/1)

  %% lc_SUITE.erl:71
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _4, 
  %%    L0
  L1 = call (`my_map`/2), _4, L0

  %% Aliased:
  %%    L1
  _789 = succeeded:body L1
  br _789, ^789, ^1

789:
  %% lc_SUITE.erl:72
  %% Result type:
  %%    list({'x', any()})
  %% Aliased:
  %%    L0
  _11 = call (`'-basic/1-lc$^1/1-0-'`/1), L0

  %% Unique:
  %%    _11
  _790 = succeeded:body _11
  br _790, ^790, ^1

790:
  %% Argument types:
  %%    _11 => list({'x', any()})
  %%    L1 => list(any())
  %% Aliased:
  %%    L1
  %% Unique:
  %%    _11
  _793 = bif:'=:=' _11, L1
  br _793, ^793, ^792

793:
  _15 = make_fun (`'-basic/1-fun-2-'`/1)

  %% lc_SUITE.erl:73
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _15, 
  %%    L1
  _316 = call (`my_map`/2), _15, L1

  %% Unique:
  %%    _316
  _794 = succeeded:body _316
  br _794, ^794, ^1

794:
  %% Argument types:
  %%    _316 => list(any())
  %% Aliased:
  %%    L0
  %% Unique:
  %%    _316
  _797 = bif:'=:=' _316, L0
  br _797, ^797, ^796

797:
  %% lc_SUITE.erl:74
  %% Result type:
  %%    list(number('-inf', 6))
  %% Aliased:
  %%    L0
  _22 = call (`'-basic/1-lc$^3/1-2-'`/1), L0

  %% Unique:
  %%    _22
  _798 = succeeded:body _22
  br _798, ^798, ^1

798:
  %% Argument types:
  %%    _22 => list(number('-inf', 6))
  %% Unique:
  %%    _22
  _1224 = bif:'=:=' _22, `[1,2,3,4,5]`
  br _1224, ^1224, ^800

1224:
  %% lc_SUITE.erl:75
  %% Result type:
  %%    list(number(3, 7))
  %% Aliased:
  %%    L0
  _31 = call (`'-basic/1-lc$^4/1-3-'`/1), L0

  %% Unique:
  %%    _31
  _801 = succeeded:body _31
  br _801, ^801, ^1

801:
  %% Argument types:
  %%    _31 => list(number(3, 7))
  %% Unique:
  %%    _31
  _1222 = bif:'=:=' _31, `[4,5,6]`
  br _1222, ^1222, ^803

1222:
  %% lc_SUITE.erl:76
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L0
  _40 = call (`'-basic/1-lc$^5/1-4-'`/1), L0

  %% Unique:
  %%    _40
  _804 = succeeded:body _40
  br _804, ^1220, ^1

1220:
  %% lc_SUITE.erl:77
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _48 = call (`'-basic/1-lc$^6/1-5-'`/1), L0

  %% Unique:
  %%    _48
  _807 = succeeded:body _48
  br _807, ^807, ^1

807:
  %% Argument types:
  %%    _48 => list(any())
  %% Unique:
  %%    _48
  _1218 = bif:'=:=' _48, `[1,3,5,7,9]`
  br _1218, ^1218, ^809

1218:
  %% lc_SUITE.erl:78
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _57 = call (`'-basic/1-lc$^7/1-6-'`/1), L0

  %% Unique:
  %%    _57
  _810 = succeeded:body _57
  br _810, ^810, ^1

810:
  %% Argument types:
  %%    _57 => list(any())
  %% Unique:
  %%    _57
  _1216 = bif:'=:=' _57, `[2,4,6,8,10]`
  br _1216, ^1216, ^812

1216:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _65 = call (`'-basic/1-lc$^8/1-7-'`/1), L0

  %% Unique:
  %%    _65
  _813 = succeeded:body _65
  br _813, ^813, ^1

813:
  %% Argument types:
  %%    _65 => list(any())
  %% Unique:
  %%    _65
  _1214 = bif:'=:=' _65, `[1,3,5,9]`
  br _1214, ^1214, ^815

1214:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _74 = call (`'-basic/1-lc$^9/1-8-'`/1), L0

  %% Unique:
  %%    _74
  _816 = succeeded:body _74
  br _816, ^816, ^1

816:
  %% Argument types:
  %%    _74 => list(any())
  %% Unique:
  %%    _74
  _1212 = bif:'=:=' _74, `[2,4,8,10]`
  br _1212, ^1212, ^818

1212:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _83 = call (`'-basic/1-lc$^10/1-9-'`/1), L0

  %% Unique:
  %%    _83
  _819 = succeeded:body _83
  br _819, ^819, ^1

819:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  %% Unique:
  %%    _83
  _90 = call (`'-basic/1-lc$^11/1-10-'`/2), L0, _83

  %% Unique:
  %%    _90
  _820 = succeeded:body _90
  br _820, ^820, ^1

820:
  %% Argument types:
  %%    _90 => list(any())
  %% Unique:
  %%    _90
  _1210 = bif:'=:=' _90, `[1,3,5,9,2,4,8,10]`
  br _1210, ^1210, ^822

1210:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  _95 = call (`tuple_list`/0)

  %% Unique:
  %%    _95
  _823 = succeeded:body _95
  br _823, ^823, ^1

823:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _95
  _99 = call (`'-basic/1-lc$^12/1-11-'`/1), _95

  %% Unique:
  %%    _99
  _824 = succeeded:body _99
  br _824, ^824, ^1

824:
  %% Argument types:
  %%    _99 => list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _99
  _1208 = bif:'=:=' _99, `[{a,b,true},{x,y,true,true}]`
  br _1208, ^1208, ^826

1208:
  %% lc_SUITE.erl:90
  %% Result type:
  %%    list(46..99)
  _377 = call (`alphanum`/1), `"?abc123.;"`

  %% Unique:
  %%    _377
  _827 = succeeded:body _377
  br _827, ^827, ^1

827:
  %% Argument types:
  %%    _377 => list(46..99)
  %% Unique:
  %%    _377
  _1206 = bif:'=:=' _377, `"abc123"`
  br _1206, ^1206, ^829

1206:
  %% lc_SUITE.erl:93
  %% Result type:
  %%    nil()
  _107 = call (`'-basic/1-lc$^13/1-12-'`/1), `[]`

  %% Unique:
  %%    _107
  _830 = succeeded:body _107
  br _830, ^1204, ^1

1204:
  %% lc_SUITE.erl:94
  %% Result type:
  %%    nil()
  _114 = call (`'-basic/1-lc$^14/1-13-'`/1), `[]`

  %% Unique:
  %%    _114
  _833 = succeeded:body _114
  br _833, ^1202, ^1

1202:
  %% lc_SUITE.erl:95
  %% Result type:
  %%    list('t')
  _121 = call (`'-basic/1-lc$^15/1-14-'`/1), `["ab"]`

  %% Unique:
  %%    _121
  _836 = succeeded:body _121
  br _836, ^836, ^1

836:
  %% Argument types:
  %%    _121 => list('t')
  %% Unique:
  %%    _121
  _1200 = bif:'=:=' _121, `[t]`
  br _1200, ^1200, ^838

1200:
  %% lc_SUITE.erl:98
  %% Result type:
  %%    nil()
  _130 = call (`'-basic/1-lc$^16/1-15-'`/1), `[]`

  %% Unique:
  %%    _130
  _839 = succeeded:body _130
  br _839, ^1198, ^1

1198:
  %% lc_SUITE.erl:99
  %% Result type:
  %%    nonempty_list({'a', 'a'})
  _139 = call (`'-basic/1-lc$^17/1-16-'`/1), `[{a}]`

  %% Unique:
  %%    _139
  _842 = succeeded:body _139
  br _842, ^842, ^1

842:
  %% Argument types:
  %%    _139 => nonempty_list({'a', 'a'})
  %% Unique:
  %%    _139
  _1196 = bif:'=:=' _139, `[{a,a}]`
  br _1196, ^1196, ^844

1196:
  %% lc_SUITE.erl:102
  %% Result type:
  %%    nil()
  _146 = call (`'-basic/1-lc$^18/1-17-'`/1), `[]`

  %% Unique:
  %%    _146
  _845 = succeeded:body _146
  br _845, ^1194, ^1

1194:
  %% lc_SUITE.erl:105
  %% Result type:
  %%    nonempty_list(2..'+inf')
  _154 = call (`'-basic/1-lc$^19/1-18-'`/1), `[1,2,3]`

  %% Unique:
  %%    _154
  _848 = succeeded:body _154
  br _848, ^848, ^1

848:
  %% Argument types:
  %%    _154 => nonempty_list(2..'+inf')
  %% Unique:
  %%    _154
  _1192 = bif:'=:=' _154, `[2,3,4]`
  br _1192, ^1192, ^850

1192:
  %% lc_SUITE.erl:106
  %% Result type:
  %%    list(1..'+inf')
  _161 = call (`'-basic/1-lc$^20/1-19-'`/1), `<<1,2,3>>`

  %% Unique:
  %%    _161
  _851 = succeeded:body _161
  br _851, ^851, ^1

851:
  %% Argument types:
  %%    _161 => list(1..'+inf')
  %% Unique:
  %%    _161
  _1190 = bif:'=:=' _161, `[2,3,4]`
  br _1190, ^1190, ^853

1190:
  %% lc_SUITE.erl:107
  _434 = call (`erts_internal`:`mc_iterator`/1), `#{1 => 2,3 => 4}`

  %% Aliased:
  %%    _434
  _854 = succeeded:body _434
  br _854, ^854, ^1

854:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _434
  _858 = bif:'=:=' _434, `[]`
  br _858, ^858, ^1231

858:
  %% lc_SUITE.erl:107
  _681 = call (`erlang`:`error`/1), `{bad_generator,#{1 => 2,3 => 4}}`

  %% Aliased:
  %%    _681
  _857 = succeeded:body _681
  br ^1

1231:
  %% lc_SUITE.erl:107
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _434
  _172 = call (`'-basic/1-lc$^21/1-20-'`/1), _434

  %% Unique:
  %%    _172
  _859 = succeeded:body _172
  br _859, ^859, ^1

859:
  %% Argument types:
  %%    _172 => list(number())
  %% Unique:
  %%    _172
  _1188 = bif:'=:=' _172, `[2,12]`
  br _1188, ^1188, ^861

1188:
  %% lc_SUITE.erl:110
  %% Result type:
  %%    list(3..'+inf')
  _180 = call (`'-basic/1-lc$^22/1-21-'`/1), `[1,2,3]`

  %% Unique:
  %%    _180
  _862 = succeeded:body _180
  br _862, ^862, ^1

862:
  %% Argument types:
  %%    _180 => list(3..'+inf')
  %% Unique:
  %%    _180
  _1186 = bif:'=:=' _180, `[3,4]`
  br _1186, ^1186, ^864

1186:
  %% lc_SUITE.erl:111
  %% Result type:
  %%    list(3..'+inf')
  _187 = call (`'-basic/1-lc$^23/1-22-'`/1), `<<1,2,3>>`

  %% Unique:
  %%    _187
  _865 = succeeded:body _187
  br _865, ^865, ^1

865:
  %% Argument types:
  %%    _187 => list(3..'+inf')
  %% Unique:
  %%    _187
  _1184 = bif:'=:=' _187, `[3,4]`
  br _1184, ^1184, ^867

1184:
  %% lc_SUITE.erl:112
  _471 = call (`erts_internal`:`mc_iterator`/1), `#{1 => 2,3 => 4}`

  %% Aliased:
  %%    _471
  _868 = succeeded:body _471
  br _868, ^868, ^1

868:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _471
  _872 = bif:'=:=' _471, `[]`
  br _872, ^872, ^1232

872:
  %% lc_SUITE.erl:112
  _693 = call (`erlang`:`error`/1), `{bad_generator,#{1 => 2,3 => 4}}`

  %% Aliased:
  %%    _693
  _871 = succeeded:body _693
  br ^1

1232:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _471
  _198 = call (`'-basic/1-lc$^24/1-23-'`/1), _471

  %% Unique:
  %%    _198
  _873 = succeeded:body _198
  br _873, ^873, ^1

873:
  %% Argument types:
  %%    _198 => list(number())
  %% Unique:
  %%    _198
  _1182 = bif:'=:=' _198, `"\f"`
  br _1182, ^1182, ^875

1182:
  %% lc_SUITE.erl:115
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Aliased:
  %%    L0
  _206 = call (`'-basic/1-lc$^25/1-24-'`/1), L0

  %% Unique:
  %%    _206
  _876 = succeeded:body _206
  br _876, ^876, ^1

876:
  %% Argument types:
  %%    _206 => list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _206
  _1180 = bif:'=:=' _206, `[]`
  br _1180, ^1399, ^878

1399:
  br ^1410

1410:
  _882 = new_try_tag `'catch'`
  br _882, ^880, ^881

880:
  %% lc_SUITE.erl:116
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L1
  _701 = call (`'-basic/1-lc$^26/1-25-'`/1), L1

  %% Unique:
  %%    _701
  _884 = succeeded:body _701
  br _884, ^884, ^881

884:
  br ^879

881:
  %% Unique:
  %%    _882
  _887 = landingpad `'catch'`, _882

  %% Aliased:
  %%    _887
  _885 = extract _887, `0`
  br ^879

879:
  _888 = phi { _885, ^881 }, { `[]`, ^884 }

  %% Aliased:
  %%    _888
  %% Unique:
  %%    _882
  _215 = catch_end _882, _888

  %% Argument types:
  %%    
  %% Aliased:
  %%    _215
  _1176 = is_tagged_tuple _215, `2`, `'EXIT'`
  br _1176, ^1173, ^890

1173:
  %% lc_SUITE.erl:117
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L1
  _223 = call (`'-basic/1-lc$^27/1-26-'`/1), L1

  %% Unique:
  %%    _223
  _891 = succeeded:body _223
  br _891, ^1400, ^1

1400:
  br ^1411

1411:
  _897 = new_try_tag `'catch'`
  br _897, ^895, ^896

895:
  %% lc_SUITE.erl:118
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L1
  _710 = call (`'-basic/1-lc$^28/1-27-'`/1), L1

  %% Unique:
  %%    _710
  _899 = succeeded:body _710
  br _899, ^899, ^896

899:
  br ^894

896:
  %% Unique:
  %%    _897
  _902 = landingpad `'catch'`, _897

  %% Aliased:
  %%    _902
  _900 = extract _902, `0`
  br ^894

894:
  _903 = phi { _900, ^896 }, { `[]`, ^899 }

  %% Aliased:
  %%    _903
  %% Unique:
  %%    _897
  _231 = catch_end _897, _903

  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _1167 = is_tagged_tuple _231, `2`, `'EXIT'`
  br _1167, ^1401, ^905

1401:
  br ^1412

1412:
  _909 = new_try_tag `'catch'`
  br _909, ^907, ^908

907:
  %% lc_SUITE.erl:119
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _235 = call (`id`/1), `x`

  %% Aliased:
  %%    _235
  _911 = succeeded:body _235
  br _911, ^911, ^908

911:
  %% lc_SUITE.erl:119
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _235
  _714 = call (`'-basic/1-lc$^29/1-28-'`/1), _235

  %% Unique:
  %%    _714
  _912 = succeeded:body _714
  br _912, ^912, ^908

912:
  br ^906

908:
  %% Unique:
  %%    _909
  _915 = landingpad `'catch'`, _909

  %% Aliased:
  %%    _915
  _913 = extract _915, `0`
  br ^906

906:
  _916 = phi { _913, ^908 }, { _714, ^912 }

  %% Aliased:
  %%    _916
  %% Unique:
  %%    _909
  _239 = catch_end _909, _916

  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _1160 = is_tagged_tuple _239, `2`, `'EXIT'`
  br _1160, ^1157, ^918

1157:
  %% Argument types:
  %%    _239 => {''EXIT'', any()}
  %% Aliased:
  %%    _239
  _510 = get_tuple_element _239, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _510
  _1154 = bif:is_tuple _510
  br _1154, ^1154, ^918

1154:
  %% Argument types:
  %%    _510 => {...}
  %% Aliased:
  %%    _510
  _1155 = bif:tuple_size _510

  %% Argument types:
  %%    _1155 => 0..16777215
  %% Unique:
  %%    _1155
  _1156 = bif:'=:=' _1155, `2`
  br _1156, ^1153, ^918

1153:
  %% Argument types:
  %%    _510 => {any(), any()}
  %% Aliased:
  %%    _510
  _513 = get_tuple_element _510, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _513
  _1152 = bif:'=:=' _513, `{bad_generator,x}`
  br _1152, ^1402, ^918

1402:
  br ^1413

1413:
  _922 = new_try_tag `'catch'`
  br _922, ^920, ^921

920:
  %% lc_SUITE.erl:120
  %% Result type:
  %%    none()
  _720 = call (`'-basic/1-lc$^30/1-29-'`/1), `[1,2]`

  %% Aliased:
  %%    _720
  _924 = succeeded:body _720
  br ^921

921:
  %% Unique:
  %%    _922
  _927 = landingpad `'catch'`, _922

  %% Aliased:
  %%    _927
  _925 = extract _927, `0`
  br ^919

919:
  %% Aliased:
  %%    _925
  %% Unique:
  %%    _922
  _247 = catch_end _922, _925

  %% Argument types:
  %%    
  %% Aliased:
  %%    _247
  _1148 = is_tagged_tuple _247, `2`, `'EXIT'`
  br _1148, ^1145, ^930

1145:
  %% Argument types:
  %%    _247 => {''EXIT'', any()}
  %% Aliased:
  %%    _247
  _520 = get_tuple_element _247, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _520
  _1142 = bif:is_tuple _520
  br _1142, ^1142, ^930

1142:
  %% Argument types:
  %%    _520 => {...}
  %% Aliased:
  %%    _520
  _1143 = bif:tuple_size _520

  %% Argument types:
  %%    _1143 => 0..16777215
  %% Unique:
  %%    _1143
  _1144 = bif:'=:=' _1143, `2`
  br _1144, ^1141, ^930

1141:
  %% Argument types:
  %%    _520 => {any(), any()}
  %% Aliased:
  %%    _520
  _523 = get_tuple_element _520, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _523
  _1140 = bif:'=:=' _523, `{bad_filter,not_bool}`
  br _1140, ^1403, ^930

1403:
  br ^1414

1414:
  _934 = new_try_tag `'catch'`
  br _934, ^932, ^933

932:
  %% lc_SUITE.erl:123
  %% Result type:
  %%    nonempty_list(1..3)
  _725 = call (`'-basic/1-lc$^31/1-30-'`/1), `[{ok,1},2,{ok,3}]`

  %% Unique:
  %%    _725
  _936 = succeeded:body _725
  br _936, ^936, ^933

936:
  br ^931

933:
  %% Unique:
  %%    _934
  _939 = landingpad `'catch'`, _934

  %% Aliased:
  %%    _939
  _937 = extract _939, `0`
  br ^931

931:
  _940 = phi { _937, ^933 }, { _725, ^936 }

  %% Aliased:
  %%    _940
  %% Unique:
  %%    _934
  _254 = catch_end _934, _940

  %% Argument types:
  %%    
  %% Aliased:
  %%    _254
  _1136 = is_tagged_tuple _254, `2`, `'EXIT'`
  br _1136, ^1133, ^942

1133:
  %% Argument types:
  %%    _254 => {''EXIT'', any()}
  %% Aliased:
  %%    _254
  _532 = get_tuple_element _254, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _532
  _1130 = bif:is_tuple _532
  br _1130, ^1130, ^942

1130:
  %% Argument types:
  %%    _532 => {...}
  %% Aliased:
  %%    _532
  _1131 = bif:tuple_size _532

  %% Argument types:
  %%    _1131 => 0..16777215
  %% Unique:
  %%    _1131
  _1132 = bif:'=:=' _1131, `2`
  br _1132, ^1129, ^942

1129:
  %% Argument types:
  %%    _532 => {any(), any()}
  %% Aliased:
  %%    _532
  _535 = get_tuple_element _532, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _535
  _1128 = bif:'=:=' _535, `{badmatch,2}`
  br _1128, ^1404, ^942

1404:
  br ^1415

1415:
  _946 = new_try_tag `'catch'`
  br _946, ^944, ^945

944:
  %% lc_SUITE.erl:124
  %% Result type:
  %%    list(0..127)
  _730 = call (`'-basic/1-lc$^32/1-31-'`/1), `<<1,128,2>>`

  %% Unique:
  %%    _730
  _948 = succeeded:body _730
  br _948, ^948, ^945

948:
  br ^943

945:
  %% Unique:
  %%    _946
  _951 = landingpad `'catch'`, _946

  %% Aliased:
  %%    _951
  _949 = extract _951, `0`
  br ^943

943:
  _952 = phi { _949, ^945 }, { _730, ^948 }

  %% Aliased:
  %%    _952
  %% Unique:
  %%    _946
  _260 = catch_end _946, _952

  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _1124 = is_tagged_tuple _260, `2`, `'EXIT'`
  br _1124, ^1121, ^954

1121:
  %% Argument types:
  %%    _260 => {''EXIT'', any()}
  %% Aliased:
  %%    _260
  _549 = get_tuple_element _260, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _549
  _1118 = bif:is_tuple _549
  br _1118, ^1118, ^954

1118:
  %% Argument types:
  %%    _549 => {...}
  %% Aliased:
  %%    _549
  _1119 = bif:tuple_size _549

  %% Argument types:
  %%    _1119 => 0..16777215
  %% Unique:
  %%    _1119
  _1120 = bif:'=:=' _1119, `2`
  br _1120, ^1117, ^954

1117:
  %% Argument types:
  %%    _549 => {any(), any()}
  %% Aliased:
  %%    _549
  _552 = get_tuple_element _549, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _552
  _1116 = bif:'=:=' _552, `{badmatch,<<128,2>>}`
  br _1116, ^1405, ^954

1405:
  br ^1416

1416:
  _958 = new_try_tag `'catch'`
  br _958, ^956, ^957

956:
  %% lc_SUITE.erl:125
  _566 = call (`erts_internal`:`mc_iterator`/1), `#{1 => ok,2 => error,3 => ok}`

  %% Aliased:
  %%    _566
  _960 = succeeded:body _566
  br _960, ^960, ^957

960:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _566
  _964 = bif:'=:=' _566, `[]`
  br _964, ^964, ^1233

964:
  %% lc_SUITE.erl:125
  _736 = call (`erlang`:`error`/1), `{bad_generator,#{1 => ok,2 => error,3 => ok}}`

  %% Aliased:
  %%    _736
  _963 = succeeded:body _736
  br ^957

1233:
  %% lc_SUITE.erl:125
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _566
  _737 = call (`'-basic/1-lc$^33/1-32-'`/1), _566

  %% Unique:
  %%    _737
  _965 = succeeded:body _737
  br _965, ^965, ^957

965:
  br ^955

957:
  %% Unique:
  %%    _958
  _968 = landingpad `'catch'`, _958

  %% Aliased:
  %%    _968
  _966 = extract _968, `0`
  br ^955

955:
  _969 = phi { _966, ^957 }, { _737, ^965 }

  %% Aliased:
  %%    _969
  %% Unique:
  %%    _958
  _270 = catch_end _958, _969

  %% Argument types:
  %%    
  %% Aliased:
  %%    _270
  _1112 = is_tagged_tuple _270, `2`, `'EXIT'`
  br _1112, ^1109, ^971

1109:
  %% Argument types:
  %%    _270 => {''EXIT'', any()}
  %% Aliased:
  %%    _270
  _568 = get_tuple_element _270, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _568
  _1106 = bif:is_tuple _568
  br _1106, ^1106, ^971

1106:
  %% Argument types:
  %%    _568 => {...}
  %% Aliased:
  %%    _568
  _1107 = bif:tuple_size _568

  %% Argument types:
  %%    _1107 => 0..16777215
  %% Unique:
  %%    _1107
  _1108 = bif:'=:=' _1107, `2`
  br _1108, ^1105, ^971

1105:
  %% Argument types:
  %%    _568 => {any(), any()}
  %% Aliased:
  %%    _568
  _571 = get_tuple_element _568, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _571
  _1104 = bif:'=:=' _571, `{badmatch,{2,error}}`
  br _1104, ^1406, ^971

1406:
  br ^1417

1417:
  _975 = new_try_tag `'catch'`
  br _975, ^973, ^974

973:
  %% lc_SUITE.erl:135
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  _272 = call (`bad_generator`/1), `a`

  %% Unique:
  %%    _272
  _977 = succeeded:body _272
  br _977, ^977, ^974

977:
  %% lc_SUITE.erl:135
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Unique:
  %%    _272
  _739 = call (`id`/1), _272

  %% Aliased:
  %%    _739
  _978 = succeeded:body _739
  br _978, ^978, ^974

978:
  br ^972

974:
  %% Unique:
  %%    _975
  _981 = landingpad `'catch'`, _975

  %% Aliased:
  %%    _981
  _979 = extract _981, `0`
  br ^972

972:
  _982 = phi { _979, ^974 }, { _739, ^978 }

  %% Aliased:
  %%    _982
  %% Unique:
  %%    _975
  _273 = catch_end _975, _982

  %% Argument types:
  %%    
  %% Aliased:
  %%    _273
  _1100 = is_tagged_tuple _273, `2`, `'EXIT'`
  br _1100, ^1097, ^984

1097:
  %% Argument types:
  %%    _273 => {''EXIT'', any()}
  %% Aliased:
  %%    _273
  _572 = get_tuple_element _273, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _572
  _1094 = bif:is_tuple _572
  br _1094, ^1094, ^984

1094:
  %% Argument types:
  %%    _572 => {...}
  %% Aliased:
  %%    _572
  _1095 = bif:tuple_size _572

  %% Argument types:
  %%    _1095 => 0..16777215
  %% Unique:
  %%    _1095
  _1096 = bif:'=:=' _1095, `2`
  br _1096, ^1093, ^984

1093:
  %% Argument types:
  %%    _572 => {any(), any()}
  %% Aliased:
  %%    _572
  _575 = get_tuple_element _572, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _575
  _1092 = bif:'=:=' _575, `{bad_generator,a}`
  br _1092, ^1092, ^984

1092:
  %% Argument types:
  %%    _572 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _572
  _574 = get_tuple_element _572, `1`

  %% Aliased:
  %%    _574
  _1091 = is_nonempty_list _574
  br _1091, ^1091, ^984

1091:
  %% Argument types:
  %%    _574 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _574
  _577 = get_hd _574

  %% Argument types:
  %%    
  %% Aliased:
  %%    _577
  _1088 = is_tagged_tuple _577, `4`, `lc_SUITE`
  br _1088, ^1085, ^984

1085:
  %% Argument types:
  %%    _577 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _577
  _578 = get_tuple_element _577, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _578
  _1084 = bif:'=:=' _578, `[{file,"bad_lc.erl"},{line,4}]`
  br _1084, ^1407, ^984

1407:
  br ^1418

1418:
  _988 = new_try_tag `'catch'`
  br _988, ^986, ^987

986:
  %% lc_SUITE.erl:140
  %% Result type:
  %%    none()
  _275 = call (`bad_generator_bc`/1), `a`

  %% Aliased:
  %%    _275
  _990 = succeeded:body _275
  br ^987

987:
  %% Unique:
  %%    _988
  _994 = landingpad `'catch'`, _988

  %% Aliased:
  %%    _994
  _992 = extract _994, `0`
  br ^985

985:
  %% Aliased:
  %%    _992
  %% Unique:
  %%    _988
  _276 = catch_end _988, _992

  %% Argument types:
  %%    
  %% Aliased:
  %%    _276
  _1080 = is_tagged_tuple _276, `2`, `'EXIT'`
  br _1080, ^1077, ^997

1077:
  %% Argument types:
  %%    _276 => {''EXIT'', any()}
  %% Aliased:
  %%    _276
  _582 = get_tuple_element _276, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _582
  _1074 = bif:is_tuple _582
  br _1074, ^1074, ^997

1074:
  %% Argument types:
  %%    _582 => {...}
  %% Aliased:
  %%    _582
  _1075 = bif:tuple_size _582

  %% Argument types:
  %%    _1075 => 0..16777215
  %% Unique:
  %%    _1075
  _1076 = bif:'=:=' _1075, `2`
  br _1076, ^1073, ^997

1073:
  %% Argument types:
  %%    _582 => {any(), any()}
  %% Aliased:
  %%    _582
  _585 = get_tuple_element _582, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _585
  _1072 = bif:'=:=' _585, `{bad_generator,a}`
  br _1072, ^1072, ^997

1072:
  %% Argument types:
  %%    _582 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _582
  _584 = get_tuple_element _582, `1`

  %% Aliased:
  %%    _584
  _1071 = is_nonempty_list _584
  br _1071, ^1071, ^997

1071:
  %% Argument types:
  %%    _584 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _584
  _587 = get_hd _584

  %% Argument types:
  %%    
  %% Aliased:
  %%    _587
  _1068 = is_tagged_tuple _587, `4`, `lc_SUITE`
  br _1068, ^1065, ^997

1065:
  %% Argument types:
  %%    _587 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _587
  _588 = get_tuple_element _587, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _588
  _1064 = bif:'=:=' _588, `[{file,"bad_lc.erl"},{line,7}]`
  br _1064, ^1408, ^997

1408:
  br ^1419

1419:
  _1001 = new_try_tag `'catch'`
  br _1001, ^999, ^1000

999:
  %% lc_SUITE.erl:145
  %% Result type:
  %%    none()
  _278 = call (`bad_generator_mc`/1), `a`

  %% Aliased:
  %%    _278
  _1003 = succeeded:body _278
  br ^1000

1000:
  %% Unique:
  %%    _1001
  _1007 = landingpad `'catch'`, _1001

  %% Aliased:
  %%    _1007
  _1005 = extract _1007, `0`
  br ^998

998:
  %% Aliased:
  %%    _1005
  %% Unique:
  %%    _1001
  _279 = catch_end _1001, _1005

  %% Argument types:
  %%    
  %% Aliased:
  %%    _279
  _1060 = is_tagged_tuple _279, `2`, `'EXIT'`
  br _1060, ^1057, ^1010

1057:
  %% Argument types:
  %%    _279 => {''EXIT'', any()}
  %% Aliased:
  %%    _279
  _592 = get_tuple_element _279, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _592
  _1054 = bif:is_tuple _592
  br _1054, ^1054, ^1010

1054:
  %% Argument types:
  %%    _592 => {...}
  %% Aliased:
  %%    _592
  _1055 = bif:tuple_size _592

  %% Argument types:
  %%    _1055 => 0..16777215
  %% Unique:
  %%    _1055
  _1056 = bif:'=:=' _1055, `2`
  br _1056, ^1053, ^1010

1053:
  %% Argument types:
  %%    _592 => {any(), any()}
  %% Aliased:
  %%    _592
  _595 = get_tuple_element _592, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _595
  _1052 = bif:'=:=' _595, `{bad_generator,a}`
  br _1052, ^1052, ^1010

1052:
  %% Argument types:
  %%    _592 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _592
  _594 = get_tuple_element _592, `1`

  %% Aliased:
  %%    _594
  _1051 = is_nonempty_list _594
  br _1051, ^1051, ^1010

1051:
  %% Argument types:
  %%    _594 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _594
  _597 = get_hd _594

  %% Argument types:
  %%    
  %% Aliased:
  %%    _597
  _1048 = is_tagged_tuple _597, `4`, `lc_SUITE`
  br _1048, ^1045, ^1010

1045:
  %% Argument types:
  %%    _597 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _597
  _598 = get_tuple_element _597, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _598
  _1044 = bif:'=:=' _598, `[{file,"bad_lc.erl"},{line,10}]`
  br _1044, ^1409, ^1010

1409:
  br ^1420

1420:
  _1014 = new_try_tag `'catch'`
  br _1014, ^1012, ^1013

1012:
  %% lc_SUITE.erl:151
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _281 = call (`id`/1), `[a,b,c|d]`

  %% Aliased:
  %%    _281
  _1016 = succeeded:body _281
  br _1016, ^1016, ^1013

1016:
  %% lc_SUITE.erl:151
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _281
  _745 = call (`bad_generator`/1), _281

  %% Unique:
  %%    _745
  _1017 = succeeded:body _745
  br _1017, ^1017, ^1013

1017:
  br ^1011

1013:
  %% Unique:
  %%    _1014
  _1020 = landingpad `'catch'`, _1014

  %% Aliased:
  %%    _1020
  _1018 = extract _1020, `0`
  br ^1011

1011:
  _1021 = phi { _1018, ^1013 }, { _745, ^1017 }

  %% Aliased:
  %%    _1021
  %% Unique:
  %%    _1014
  _282 = catch_end _1014, _1021

  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  _1040 = is_tagged_tuple _282, `2`, `'EXIT'`
  br _1040, ^1037, ^1023

1037:
  %% Argument types:
  %%    _282 => {''EXIT'', any()}
  %% Aliased:
  %%    _282
  _602 = get_tuple_element _282, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _602
  _1034 = bif:is_tuple _602
  br _1034, ^1034, ^1023

1034:
  %% Argument types:
  %%    _602 => {...}
  %% Aliased:
  %%    _602
  _1035 = bif:tuple_size _602

  %% Argument types:
  %%    _1035 => 0..16777215
  %% Unique:
  %%    _1035
  _1036 = bif:'=:=' _1035, `2`
  br _1036, ^1033, ^1023

1033:
  %% Argument types:
  %%    _602 => {any(), any()}
  %% Aliased:
  %%    _602
  _605 = get_tuple_element _602, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _605
  _1032 = bif:'=:=' _605, `{bad_generator,d}`
  br _1032, ^1032, ^1023

1032:
  %% Argument types:
  %%    _602 => {{'bad_generator', 'd'}, any()}
  %% Aliased:
  %%    _602
  _604 = get_tuple_element _602, `1`

  %% Aliased:
  %%    _604
  _1031 = is_nonempty_list _604
  br _1031, ^1031, ^1023

1031:
  %% Argument types:
  %%    _604 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _604
  _607 = get_hd _604

  %% Argument types:
  %%    
  %% Aliased:
  %%    _607
  _1028 = is_tagged_tuple _607, `4`, `lc_SUITE`
  br _1028, ^1025, ^1023

1025:
  %% Argument types:
  %%    _607 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _607
  _608 = get_tuple_element _607, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _608
  _1024 = bif:'=:=' _608, `[{file,"bad_lc.erl"},{line,4}]`
  br _1024, ^983, ^1023

983:
  %% Result type:
  %%    'ok'
  ret `ok`

1023:
  %% lc_SUITE.erl:148
  %% Aliased:
  %%    _282
  _746 = match_fail `badmatch`, _282

  %% Unique:
  %%    _746
  _1043 = succeeded:body _746
  br ^1

1010:
  %% lc_SUITE.erl:142
  %% Aliased:
  %%    _279
  _747 = match_fail `badmatch`, _279

  %% Unique:
  %%    _747
  _1063 = succeeded:body _747
  br ^1

997:
  %% lc_SUITE.erl:137
  %% Aliased:
  %%    _276
  _748 = match_fail `badmatch`, _276

  %% Unique:
  %%    _748
  _1083 = succeeded:body _748
  br ^1

984:
  %% lc_SUITE.erl:132
  %% Aliased:
  %%    _273
  _749 = match_fail `badmatch`, _273

  %% Unique:
  %%    _749
  _1103 = succeeded:body _749
  br ^1

971:
  %% lc_SUITE.erl:125
  %% Aliased:
  %%    _270
  _750 = match_fail `badmatch`, _270

  %% Unique:
  %%    _750
  _1115 = succeeded:body _750
  br ^1

954:
  %% lc_SUITE.erl:124
  %% Aliased:
  %%    _260
  _751 = match_fail `badmatch`, _260

  %% Unique:
  %%    _751
  _1127 = succeeded:body _751
  br ^1

942:
  %% lc_SUITE.erl:123
  %% Aliased:
  %%    _254
  _752 = match_fail `badmatch`, _254

  %% Unique:
  %%    _752
  _1139 = succeeded:body _752
  br ^1

930:
  %% lc_SUITE.erl:120
  %% Aliased:
  %%    _247
  _753 = match_fail `badmatch`, _247

  %% Unique:
  %%    _753
  _1151 = succeeded:body _753
  br ^1

918:
  %% lc_SUITE.erl:119
  %% Aliased:
  %%    _239
  _754 = match_fail `badmatch`, _239

  %% Unique:
  %%    _754
  _1163 = succeeded:body _754
  br ^1

905:
  %% lc_SUITE.erl:118
  %% Aliased:
  %%    _231
  _755 = match_fail `badmatch`, _231

  %% Unique:
  %%    _755
  _1170 = succeeded:body _755
  br ^1

890:
  %% lc_SUITE.erl:116
  %% Aliased:
  %%    _215
  _757 = match_fail `badmatch`, _215

  %% Unique:
  %%    _757
  _1179 = succeeded:body _757
  br ^1

878:
  %% lc_SUITE.erl:115
  %% Unique:
  %%    _206
  _758 = match_fail `badmatch`, _206

  %% Unique:
  %%    _758
  _1181 = succeeded:body _758
  br ^1

875:
  %% lc_SUITE.erl:112
  %% Unique:
  %%    _198
  _759 = match_fail `badmatch`, _198

  %% Unique:
  %%    _759
  _1183 = succeeded:body _759
  br ^1

867:
  %% lc_SUITE.erl:111
  %% Unique:
  %%    _187
  _760 = match_fail `badmatch`, _187

  %% Unique:
  %%    _760
  _1185 = succeeded:body _760
  br ^1

864:
  %% lc_SUITE.erl:110
  %% Unique:
  %%    _180
  _761 = match_fail `badmatch`, _180

  %% Unique:
  %%    _761
  _1187 = succeeded:body _761
  br ^1

861:
  %% lc_SUITE.erl:107
  %% Unique:
  %%    _172
  _762 = match_fail `badmatch`, _172

  %% Unique:
  %%    _762
  _1189 = succeeded:body _762
  br ^1

853:
  %% lc_SUITE.erl:106
  %% Unique:
  %%    _161
  _763 = match_fail `badmatch`, _161

  %% Unique:
  %%    _763
  _1191 = succeeded:body _763
  br ^1

850:
  %% lc_SUITE.erl:105
  %% Unique:
  %%    _154
  _764 = match_fail `badmatch`, _154

  %% Unique:
  %%    _764
  _1193 = succeeded:body _764
  br ^1

844:
  %% lc_SUITE.erl:99
  %% Unique:
  %%    _139
  _766 = match_fail `badmatch`, _139

  %% Unique:
  %%    _766
  _1197 = succeeded:body _766
  br ^1

838:
  %% lc_SUITE.erl:95
  %% Unique:
  %%    _121
  _768 = match_fail `badmatch`, _121

  %% Unique:
  %%    _768
  _1201 = succeeded:body _768
  br ^1

829:
  %% lc_SUITE.erl:90
  %% Unique:
  %%    _377
  _771 = match_fail `badmatch`, _377

  %% Unique:
  %%    _771
  _1207 = succeeded:body _771
  br ^1

826:
  %% lc_SUITE.erl:87
  %% Unique:
  %%    _99
  _772 = match_fail `badmatch`, _99

  %% Unique:
  %%    _772
  _1209 = succeeded:body _772
  br ^1

822:
  %% lc_SUITE.erl:83
  %% Unique:
  %%    _90
  _773 = match_fail `badmatch`, _90

  %% Unique:
  %%    _773
  _1211 = succeeded:body _773
  br ^1

818:
  %% lc_SUITE.erl:80
  %% Unique:
  %%    _74
  _774 = match_fail `badmatch`, _74

  %% Unique:
  %%    _774
  _1213 = succeeded:body _774
  br ^1

815:
  %% lc_SUITE.erl:79
  %% Unique:
  %%    _65
  _775 = match_fail `badmatch`, _65

  %% Unique:
  %%    _775
  _1215 = succeeded:body _775
  br ^1

812:
  %% lc_SUITE.erl:78
  %% Unique:
  %%    _57
  _776 = match_fail `badmatch`, _57

  %% Unique:
  %%    _776
  _1217 = succeeded:body _776
  br ^1

809:
  %% lc_SUITE.erl:77
  %% Unique:
  %%    _48
  _777 = match_fail `badmatch`, _48

  %% Unique:
  %%    _777
  _1219 = succeeded:body _777
  br ^1

803:
  %% lc_SUITE.erl:75
  %% Unique:
  %%    _31
  _779 = match_fail `badmatch`, _31

  %% Unique:
  %%    _779
  _1223 = succeeded:body _779
  br ^1

800:
  %% lc_SUITE.erl:74
  %% Unique:
  %%    _22
  _780 = match_fail `badmatch`, _22

  %% Unique:
  %%    _780
  _1225 = succeeded:body _780
  br ^1

796:
  %% lc_SUITE.erl:73
  %% Unique:
  %%    _316
  _781 = match_fail `badmatch`, _316

  %% Unique:
  %%    _781
  _1226 = succeeded:body _781
  br ^1

792:
  %% lc_SUITE.erl:72
  %% Unique:
  %%    _11
  _782 = match_fail `badmatch`, _11

  %% Unique:
  %%    _782
  _1227 = succeeded:body _782
  br ^1

786:
  %% lc_SUITE.erl:69
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-basic/1-',1}}
  _783 = match_fail `function_clause`, _0

  %% Unique:
  %%    _783
  _1228 = succeeded:body _783
  br ^1

1:
  _784 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _784
}

%% lc_SUITE.erl:156
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`tuple_list`() {
0:
  %% Result type:
  %%    nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  ret `[{a,b,true},[a,b,c],glurf,{a,b,false,xx},{a,b},{x,y,true,true},{a,b,d,ddd}]`
}

%% lc_SUITE.erl:159
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_))
function `lc_SUITE`:`my_map`(_0, _1) {
0:
  %% lc_SUITE.erl:160
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`'-my_map/2-lc$^0/1-0-'`/2), _1, _0

  %% Unique:
  %%    _14
  _17 = succeeded:body _14
  br _17, ^17, ^1

17:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _14
  ret _14

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% lc_SUITE.erl:162
%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`odd`(_0) {
0:
  %% lc_SUITE.erl:163
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _1 = bif:'rem' _0, `2`

  %% Unique:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^5, ^1

5:
  %% lc_SUITE.erl:163
  %% Argument types:
  %%    _1 => -1..1
  %% Unique:
  %%    _1
  _2 = bif:'=:=' _1, `1`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% lc_SUITE.erl:165
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(46..99)
function `lc_SUITE`:`alphanum`(_0) {
0:
  %% lc_SUITE.erl:166
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _0
  _44 = call (`'-alphanum/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _44
  _47 = succeeded:body _44
  br _47, ^47, ^1

47:
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _44
  ret _44

1:
  _45 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _45
}

%% lc_SUITE.erl:170
%% Counter = 16
%% bs_ensure_opt: true
function `lc_SUITE`:`deeply_nested`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% lc_SUITE.erl:171
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _3 = call (`deeply_nested_1`/0)

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _3
  _13 = bif:'=:=' _3, `[[99,98,97,96,42,17,1764,12,11,10,9,8,7,6,5,4,3,7,2,1]]`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% lc_SUITE.erl:171
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% lc_SUITE.erl:170
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-deeply_nested/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% lc_SUITE.erl:174
%% Counter = 252
%% bs_ensure_opt: true
function `lc_SUITE`:`deeply_nested_1`() {
0:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _248 = call (`'-deeply_nested_1/0-lc$^2/1-0-'`/1), `"c"`

  %% Unique:
  %%    _248
  _251 = succeeded:body _248
  br _251, ^251, ^1

251:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _248
  ret _248

1:
  _249 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _249
}

%% lc_SUITE.erl:182
%% Counter = 42
%% bs_ensure_opt: true
function `lc_SUITE`:`no_generator`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _38 = bif:is_list _0
  br _38, ^38, ^37

38:
  %% lc_SUITE.erl:183
  Seq = call (`lists`:`seq`/2), `-10`, `17`

  %% Aliased:
  %%    Seq
  _39 = succeeded:body Seq
  br _39, ^39, ^1

39:
  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    Seq
  _33 = call (`'-no_generator/1-lc$^0/1-0-'`/2), Seq, Seq

  %% Unique:
  %%    _33
  _40 = succeeded:body _33
  br _40, ^40, ^1

40:
  %% Result type:
  %%    'ok'
  ret `ok`

37:
  %% lc_SUITE.erl:182
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-no_generator/1-',1}}
  _34 = match_fail `function_clause`, _0

  %% Unique:
  %%    _34
  _41 = succeeded:body _34
  br ^1

1:
  _35 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _35
}

%% lc_SUITE.erl:191
%% Counter = 145
%% bs_ensure_opt: true
function `lc_SUITE`:`no_gen`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _68 = bif:'=:=' _1, `9`
  br _68, ^68, ^67

68:
  br ^66

67:
  br ^66

66:
  _2 = phi { `[]`, ^67 }, { `"\t"`, ^68 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _71 = bif:'=:=' _1, `8`
  br _71, ^71, ^70

71:
  %% Argument types:
  %%    _2 => list(9)
  %% Unique:
  %%    _2
  _41 = put_list `8`, _2
  br ^69

70:
  br ^69

69:
  _3 = phi { _2, ^70 }, { _41, ^71 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _74 = bif:'=:=' _1, `7`
  br _74, ^74, ^73

74:
  %% Argument types:
  %%    _3 => list(8..9)
  %% Unique:
  %%    _3
  _42 = put_list `7`, _3
  br ^72

73:
  br ^72

72:
  _4 = phi { _3, ^73 }, { _42, ^74 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _77 = bif:'=:=' _1, `6`
  br _77, ^77, ^76

77:
  %% Argument types:
  %%    _4 => list(7..9)
  %% Unique:
  %%    _4
  _43 = put_list `6`, _4
  br ^75

76:
  br ^75

75:
  _5 = phi { _4, ^76 }, { _43, ^77 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _80 = bif:'=:=' _1, `5`
  br _80, ^80, ^79

80:
  %% Argument types:
  %%    _5 => list(6..9)
  %% Unique:
  %%    _5
  _44 = put_list `5`, _5
  br ^78

79:
  br ^78

78:
  _6 = phi { _5, ^79 }, { _44, ^80 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _83 = bif:'=:=' _1, `4`
  br _83, ^83, ^82

83:
  %% Argument types:
  %%    _6 => list(5..9)
  %% Unique:
  %%    _6
  _45 = put_list `4`, _6
  br ^81

82:
  br ^81

81:
  _7 = phi { _6, ^82 }, { _45, ^83 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _86 = bif:'=:=' _1, `3`
  br _86, ^86, ^85

86:
  %% Argument types:
  %%    _7 => list(4..9)
  %% Unique:
  %%    _7
  _46 = put_list `3`, _7
  br ^84

85:
  br ^84

84:
  _8 = phi { _7, ^85 }, { _46, ^86 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _89 = bif:'=:=' _1, `2`
  br _89, ^89, ^88

89:
  %% Argument types:
  %%    _8 => list(3..9)
  %% Unique:
  %%    _8
  _47 = put_list `2`, _8
  br ^87

88:
  br ^87

87:
  _9 = phi { _8, ^88 }, { _47, ^89 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _92 = bif:'=:=' _1, `1`
  br _92, ^92, ^91

92:
  %% Argument types:
  %%    _9 => list(2..9)
  %% Unique:
  %%    _9
  _48 = put_list `1`, _9
  br ^90

91:
  br ^90

90:
  _10 = phi { _9, ^91 }, { _48, ^92 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _95 = bif:'=:=' _0, `9`
  br _95, ^95, ^94

95:
  %% Argument types:
  %%    _10 => list(1..9)
  %% Unique:
  %%    _10
  _49 = put_list `9`, _10
  br ^93

94:
  br ^93

93:
  _11 = phi { _10, ^94 }, { _49, ^95 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _98 = bif:'=:=' _0, `8`
  br _98, ^98, ^97

98:
  %% Argument types:
  %%    _11 => list(1..9)
  %% Unique:
  %%    _11
  _50 = put_list `8`, _11
  br ^96

97:
  br ^96

96:
  _12 = phi { _11, ^97 }, { _50, ^98 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _101 = bif:'=:=' _0, `7`
  br _101, ^101, ^100

101:
  %% Argument types:
  %%    _12 => list(1..9)
  %% Unique:
  %%    _12
  _51 = put_list `7`, _12
  br ^99

100:
  br ^99

99:
  _13 = phi { _12, ^100 }, { _51, ^101 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _104 = bif:'=:=' _0, `6`
  br _104, ^104, ^103

104:
  %% Argument types:
  %%    _13 => list(1..9)
  %% Unique:
  %%    _13
  _52 = put_list `6`, _13
  br ^102

103:
  br ^102

102:
  _14 = phi { _13, ^103 }, { _52, ^104 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _107 = bif:'=:=' _0, `5`
  br _107, ^107, ^106

107:
  %% Argument types:
  %%    _14 => list(1..9)
  %% Unique:
  %%    _14
  _53 = put_list `5`, _14
  br ^105

106:
  br ^105

105:
  _15 = phi { _14, ^106 }, { _53, ^107 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _110 = bif:'=:=' _0, `4`
  br _110, ^110, ^109

110:
  %% Argument types:
  %%    _15 => list(1..9)
  %% Unique:
  %%    _15
  _54 = put_list `4`, _15
  br ^108

109:
  br ^108

108:
  _16 = phi { _15, ^109 }, { _54, ^110 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _113 = bif:'=:=' _0, `3`
  br _113, ^113, ^112

113:
  %% Argument types:
  %%    _16 => list(1..9)
  %% Unique:
  %%    _16
  _55 = put_list `3`, _16
  br ^111

112:
  br ^111

111:
  _17 = phi { _16, ^112 }, { _55, ^113 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _116 = bif:'=:=' _0, `2`
  br _116, ^116, ^115

116:
  %% Argument types:
  %%    _17 => list(1..9)
  %% Unique:
  %%    _17
  _56 = put_list `2`, _17
  br ^114

115:
  br ^114

114:
  _18 = phi { _17, ^115 }, { _56, ^116 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _119 = bif:'=:=' _0, `1`
  br _119, ^119, ^118

119:
  %% Argument types:
  %%    _18 => list(1..9)
  %% Unique:
  %%    _18
  _57 = put_list `1`, _18
  br ^117

118:
  br ^117

117:
  _19 = phi { _18, ^118 }, { _57, ^119 }

  %% lc_SUITE.erl:196
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1
  _28 = call (`no_gen_one_more`/2), _0, _1

  %% Unique:
  %%    _28
  _120 = succeeded:body _28
  br _120, ^120, ^1

120:
  br _28, ^124, ^123

124:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _29 = put_tuple `one_more`, _0, _1

  %% Argument types:
  %%    _29 => {'one_more', any(), any()}
  %%    _19 => list(1..9)
  %% Unique:
  %%    _19, 
  %%    _29
  _58 = put_list _29, _19
  br ^121

123:
  br ^121

121:
  _21 = phi { _19, ^123 }, { _58, ^124 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _128 = bif:'=:=' _0, _1
  br _128, ^128, ^127

128:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _30 = put_tuple _0, _1

  %% Argument types:
  %%    _30 => {any(), any()}
  %%    _21 => list(1..9 | {'one_more', any(), any()})
  %% Unique:
  %%    _21, 
  %%    _30
  _60 = put_list _30, _21
  br ^126

127:
  br ^126

126:
  _22 = phi { _21, ^127 }, { _60, ^128 }

  %% lc_SUITE.erl:194
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _23 = bif:'rem' _0, _1

  %% Unique:
  %%    _23
  _132 = succeeded:guard _23
  br _132, ^132, ^130

132:
  %% Argument types:
  %%    _23 => integer()
  %% Unique:
  %%    _23
  _133 = bif:'=:=' _23, `3`
  br _133, ^133, ^130

133:
  %% Argument types:
  %%    _0 => integer()
  %%    _1 => integer()
  %% Unique:
  %%    _0, 
  %%    _1
  _31 = put_tuple _0, _1

  %% Argument types:
  %%    _31 => {integer(), integer()}
  %%    _22 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _22, 
  %%    _31
  _61 = put_list _31, _22
  br ^129

130:
  br ^129

129:
  _24 = phi { _22, ^130 }, { _61, ^133 }

  %% lc_SUITE.erl:193
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _25 = bif:'*' _0, _1

  %% Unique:
  %%    _25
  _137 = succeeded:guard _25
  br _137, ^137, ^135

137:
  %% Argument types:
  %%    _25 => number()
  %% Unique:
  %%    _25
  _138 = bif:'=:=' _25, `0`
  br _138, ^138, ^135

138:
  %% Argument types:
  %%    _0 => number()
  %%    _1 => number()
  %% Unique:
  %%    _0, 
  %%    _1
  _35 = put_tuple _0, _1

  %% Argument types:
  %%    _35 => {number(), number()}
  %%    _24 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _24, 
  %%    _35
  _62 = put_list _35, _24
  br ^134

135:
  br ^134

134:
  _26 = phi { _24, ^135 }, { _62, ^138 }

  %% lc_SUITE.erl:192
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _27 = bif:'+' _0, _1

  %% Unique:
  %%    _27
  _142 = succeeded:guard _27
  br _142, ^142, ^140

142:
  %% Argument types:
  %%    _27 => number()
  %% Unique:
  %%    _27
  _143 = bif:'=:=' _27, `0`
  br _143, ^143, ^140

143:
  %% Argument types:
  %%    _0 => number()
  %%    _1 => number()
  %% Unique:
  %%    _0, 
  %%    _1
  _39 = put_tuple _0, _1

  %% Argument types:
  %%    _39 => {number(), number()}
  %%    _26 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _26, 
  %%    _39
  _63 = put_list _39, _26
  %% Result type:
  %%    nonempty_list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _63
  ret _63

140:
  %% Result type:
  %%    list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _26
  ret _26

1:
  _64 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _64
}

%% lc_SUITE.erl:216
%% Counter = 86
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(1..9 | {any(), any(), ...})
function `lc_SUITE`:`no_gen_verify`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  Pair = put_tuple _1, _2

  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _31 = make_fun (`'-no_gen_verify/3-fun-6-'`/2), _1, _2

  %% lc_SUITE.erl:218
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _31, 
  %%    Pair
  _32 = call (`no_gen_eval`/2), _31, Pair

  %% Unique:
  %%    _32
  _59 = succeeded:body _32
  br _59, ^59, ^1

59:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _27 = make_fun (`'-no_gen_verify/3-fun-5-'`/2), _1, _2

  %% lc_SUITE.erl:219
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _27, 
  %%    Pair
  _28 = call (`no_gen_eval`/2), _27, Pair

  %% Unique:
  %%    _28
  _60 = succeeded:body _28
  br _60, ^60, ^1

60:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _23 = make_fun (`'-no_gen_verify/3-fun-4-'`/2), _1, _2

  %% lc_SUITE.erl:220
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _23, 
  %%    Pair
  _24 = call (`no_gen_eval`/2), _23, Pair

  %% Unique:
  %%    _24
  _61 = succeeded:body _24
  br _61, ^61, ^1

61:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _17 = make_fun (`'-no_gen_verify/3-fun-3-'`/2), _1, _2

  %% lc_SUITE.erl:221
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _17, 
  %%    Pair
  _18 = call (`no_gen_eval`/2), _17, Pair

  %% Unique:
  %%    _18
  _62 = succeeded:body _18
  br _62, ^62, ^1

62:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _14 = make_fun (`'-no_gen_verify/3-fun-2-'`/2), _1, _2

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _41 = put_tuple `one_more`, _1, _2

  %% lc_SUITE.erl:222
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _41
  _15 = call (`no_gen_eval`/2), _14, _41

  %% Unique:
  %%    _15
  _63 = succeeded:body _15
  br _63, ^63, ^1

63:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1
  _10 = make_fun (`'-no_gen_verify/3-fun-1-'`/1), _1

  %% lc_SUITE.erl:223
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _1, 
  %%    _10
  _11 = call (`no_gen_eval`/2), _10, _1

  %% Unique:
  %%    _11
  _64 = succeeded:body _11
  br _64, ^64, ^1

64:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _2
  _6 = make_fun (`'-no_gen_verify/3-fun-0-'`/1), _2

  %% lc_SUITE.erl:224
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _2, 
  %%    _6
  _7 = call (`no_gen_eval`/2), _6, _2

  %% Unique:
  %%    _7
  _65 = succeeded:body _7
  br _65, ^65, ^1

65:
  %% lc_SUITE.erl:223
  %% Unique:
  %%    _7, 
  %%    _11
  _12 = call (`erlang`:`'++'`/2), _11, _7

  %% lc_SUITE.erl:222
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _15
  _16 = call (`erlang`:`'++'`/2), _15, _12

  %% lc_SUITE.erl:221
  %% Aliased:
  %%    _16
  %% Unique:
  %%    _18
  _19 = call (`erlang`:`'++'`/2), _18, _16

  %% lc_SUITE.erl:220
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _24
  _25 = call (`erlang`:`'++'`/2), _24, _19

  %% lc_SUITE.erl:219
  %% Aliased:
  %%    _25
  %% Unique:
  %%    _28
  _29 = call (`erlang`:`'++'`/2), _28, _25

  %% lc_SUITE.erl:218
  %% Aliased:
  %%    _29
  %% Unique:
  %%    _32
  ShouldBe = call (`erlang`:`'++'`/2), _32, _29

  %% Argument types:
  %%    _0 => list(1..9 | {any(), any(), ...})
  %%    ShouldBe => list(any())
  %% Aliased:
  %%    ShouldBe
  %% Unique:
  %%    _0
  _74 = bif:'=:=' _0, ShouldBe
  br _74, ^74, ^73

74:
  %% Result type:
  %%    'ok'
  ret `ok`

73:
  %% Argument types:
  %%    _0 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _0
  _44 = put_list _0, `[]`

  %% Argument types:
  %%    ShouldBe => list(any())
  %%    _44 => nonempty_list(list(1..9 | {any(), any(), ...}))
  %% Aliased:
  %%    ShouldBe
  %% Unique:
  %%    _44
  _45 = put_list ShouldBe, _44

  %% Argument types:
  %%    _45 => nonempty_list(list(any()))
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _45
  _46 = put_list _2, _45

  %% Argument types:
  %%    _46 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _46
  _47 = put_list _1, _46

  %% lc_SUITE.erl:228
  %% Unique:
  %%    _47
  _55 = call (`io`:`format`/2), `"A = ~p; B = ~p; Expected = ~p, actual = ~p"`, _47

  %% Aliased:
  %%    _55
  _75 = succeeded:body _55
  br _75, ^75, ^1

75:
  %% lc_SUITE.erl:229
  _56 = call (`ct`:`fail`/1), `failed`

  %% Aliased:
  %%    _56
  _76 = succeeded:body _56
  br _76, ^76, ^1

76:
  %% Aliased:
  %%    _56
  ret _56

1:
  _57 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _57
}

%% lc_SUITE.erl:232
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun(() -> 'false' | 'true')
function `lc_SUITE`:`no_gen_eval`(_0, _1) {
0:
  %% lc_SUITE.erl:233
  %% Result type:
  %%    'false' | 'true'
  %% Argument types:
  %%    _0 => fun(() -> 'false' | 'true')
  %% Aliased:
  %%    _0
  _3 = call _0

  %% Aliased:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  br _3, ^12, ^11

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _4 = put_list _1, `[]`
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _4
  ret _4

11:
  %% Result type:
  %%    nil()
  ret `[]`

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% lc_SUITE.erl:238
%% Counter = 7
%% bs_ensure_opt: true
function `lc_SUITE`:`no_gen_one_more`(_0, _1) {
0:
  %% lc_SUITE.erl:238
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:'+' _0, `1`

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% lc_SUITE.erl:238
  %% Argument types:
  %%    _2 => number()
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _2
  _3 = bif:'=:=' _2, _1
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% lc_SUITE.erl:240
%% Counter = 32
%% bs_ensure_opt: true
function `lc_SUITE`:`empty_generator`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _25 = bif:is_list _0
  br _25, ^25, ^24

25:
  %% lc_SUITE.erl:241
  %% Result type:
  %%    nil()
  _8 = call (`'-empty_generator/1-lc$^0/1-0-'`/1), `[]`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br _26, ^29, ^1

29:
  %% Result type:
  %%    'ok'
  ret `ok`

24:
  %% lc_SUITE.erl:240
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-empty_generator/1-',1}}
  _21 = match_fail `function_clause`, _0

  %% Unique:
  %%    _21
  _31 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% lc_SUITE.erl:244
%% Counter = 15
%% bs_ensure_opt: true
function `lc_SUITE`:`no_export`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:is_list _0
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% lc_SUITE.erl:244
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-no_export/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _14 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% lc_SUITE.erl:251
%% Counter = 67
%% bs_ensure_opt: true
function `lc_SUITE`:`shadow`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _50 = bif:is_list _0
  br _50, ^50, ^49

50:
  %% lc_SUITE.erl:253
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _38 = call (`id`/1), `nomatch`

  %% Aliased:
  %%    _38
  _51 = succeeded:body _38
  br _51, ^51, ^1

51:
  %% lc_SUITE.erl:254
  _5 = call (`lists`:`seq`/2), `7`, `9`

  %% Aliased:
  %%    _5
  _52 = succeeded:body _5
  br _52, ^52, ^1

52:
  %% lc_SUITE.erl:254
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _5
  _10 = call (`'-shadow/1-lc$^0/1-0-'`/1), _5

  %% Aliased:
  %%    _10
  _53 = succeeded:body _10
  br _53, ^53, ^1

53:
  %% lc_SUITE.erl:255
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _10
  _30 = call (`id`/1), _10

  %% Aliased:
  %%    _30
  _54 = succeeded:body _30
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _30 => 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _30
  _64 = bif:'=:=' _30, `[{7,8},{8,9},{9,10}]`
  br _64, ^64, ^56

64:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _10
  _15 = call (`id`/1), _10

  %% Aliased:
  %%    _15
  _57 = succeeded:body _15
  br _57, ^57, ^1

57:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _15
  _19 = call (`'-shadow/1-lc$^1/1-1-'`/1), _15

  %% Unique:
  %%    _19
  _58 = succeeded:body _19
  br _58, ^58, ^1

58:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Unique:
  %%    _19
  _37 = call (`id`/1), _19

  %% Aliased:
  %%    _37
  _59 = succeeded:body _37
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    _37 => 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _37
  _62 = bif:'=:=' _37, `"\b\t"`
  br _62, ^62, ^61

62:
  %% Result type:
  %%    'ok'
  ret `ok`

61:
  %% lc_SUITE.erl:256
  %% Aliased:
  %%    _37
  _44 = match_fail `badmatch`, _37

  %% Unique:
  %%    _44
  _63 = succeeded:body _44
  br ^1

56:
  %% lc_SUITE.erl:255
  %% Aliased:
  %%    _30
  _45 = match_fail `badmatch`, _30

  %% Unique:
  %%    _45
  _65 = succeeded:body _45
  br ^1

49:
  %% lc_SUITE.erl:251
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-shadow/1-',1}}
  _46 = match_fail `function_clause`, _0

  %% Unique:
  %%    _46
  _66 = succeeded:body _46
  br ^1

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _47
}

%% lc_SUITE.erl:260
%% Counter = 119
%% bs_ensure_opt: true
function `lc_SUITE`:`effect`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _105 = bif:is_list _0
  br _105, ^105, ^104

105:
  %% lc_SUITE.erl:261
  _84 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _84
  _106 = succeeded:body _84
  br _106, ^106, ^1

106:
  %% Result type:
  %%    'ok'
  _15 = make_fun (`'-effect/1-fun-1-'`/2)

  %% lc_SUITE.erl:267
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _1 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `492`, `binary`, `[1]`, `<<1>>`, `all`

  %% Aliased:
  %%    _1
  _107 = succeeded:body _1
  br _107, ^107, ^1

107:
  %% lc_SUITE.erl:267
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _2 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _2
  _108 = succeeded:body _2
  br _108, ^108, ^1

108:
  %% lc_SUITE.erl:267
  %% Aliased:
  %%    _1
  _71 = put_map `assoc`, `#{}`, _1, `42`

  %% lc_SUITE.erl:267
  %% Aliased:
  %%    _2, 
  %%    _71
  _3 = put_map `assoc`, _71, _2, `{a,b,c}`

  %% Argument types:
  %%    _3 => #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %% Aliased:
  %%    _3
  _72 = put_list _3, `[]`

  %% Argument types:
  %%    _72 => nonempty_list(#{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _72
  _73 = put_list `x`, _72

  %% Argument types:
  %%    _73 => nonempty_list('x' | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _73
  _74 = put_list `#{}`, _73

  %% lc_SUITE.erl:267
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Unique:
  %%    _74
  _4 = call (`id`/1), _74

  %% Aliased:
  %%    _4
  _109 = succeeded:body _4
  br _109, ^109, ^1

109:
  %% lc_SUITE.erl:263
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _4, 
  %%    _15
  _75 = call (`do_effect`/2), _15, _4

  %% Aliased:
  %%    _75
  _110 = succeeded:body _75
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    _75 => list(any())
  %% Aliased:
  %%    _75
  _115 = bif:'=:=' _75, `[{42,{a,b,c}}]`
  br _115, ^115, ^112

115:
  %% lc_SUITE.erl:274
  _19 = call (`lists`:`seq`/2), `267452416`, `268435455`

  %% Aliased:
  %%    _19
  _113 = succeeded:body _19
  br _113, ^113, ^1

113:
  %% lc_SUITE.erl:274
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _19
  _99 = call (`'-effect/1-lc$^2/1-1-'`/1), _19

  %% Unique:
  %%    _99
  _114 = succeeded:body _99
  br _114, ^114, ^1

114:
  %% Result type:
  %%    'ok'
  ret `ok`

112:
  %% lc_SUITE.erl:262
  %% Aliased:
  %%    _75
  _100 = match_fail `badmatch`, _75

  %% Unique:
  %%    _100
  _116 = succeeded:body _100
  br ^1

104:
  %% lc_SUITE.erl:260
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-effect/1-',1}}
  _101 = match_fail `function_clause`, _0

  %% Unique:
  %%    _101
  _117 = succeeded:body _101
  br ^1

1:
  _102 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _102
}

%% lc_SUITE.erl:281
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _) -> 'ok')
%%    _1 =>
%%     'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`do_effect`(_0, _1) {
0:
  %% lc_SUITE.erl:282
  _10 = call (`erlang`:`put`/2), `lc_SUITE`, `[]`

  %% Aliased:
  %%    _10
  _16 = succeeded:body _10
  br _16, ^16, ^1

16:
  F = make_fun (`'-do_effect/2-fun-0-'`/1)

  %% lc_SUITE.erl:284
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-effect/1-fun-1-'`/2) => fun((_, _) -> 'ok')
  %%    F => fun((_))
  %%    _1 => 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _1, 
  %%    F
  _9 = call (`'-effect/1-fun-1-'`/2), F, _1

  %% Unique:
  %%    _9
  _17 = succeeded:body _9
  br _17, ^22, ^1

22:
  %% lc_SUITE.erl:285
  _7 = call (`erlang`:`erase`/1), `lc_SUITE`

  %% Aliased:
  %%    _7
  _20 = succeeded:body _7
  br _20, ^20, ^1

20:
  %% lc_SUITE.erl:285
  %% Aliased:
  %%    _7
  _12 = call (`lists`:`reverse`/1), _7

  %% Aliased:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _12
  ret _12

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% lc_SUITE.erl:287
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _0
  ret _0
}

%% bad_lc.erl:2
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`bad_generator`(_0) {
0:
  %% bad_lc.erl:4
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _0
  _12 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _12
  _15 = succeeded:body _12
  br _15, ^15, ^1

15:
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% bad_lc.erl:5
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
function `lc_SUITE`:`bad_generator_bc`(_0) {
0:
  %% bad_lc.erl:6
  _1 = bs_init_writable `256`

  %% bad_lc.erl:6
  %% Result type:
  %%    none()
  %% Unique:
  %%    _1
  _19 = call (`'-bad_generator_bc/1-lbc$^0/2-0-'`/2), `a`, _1
  _22 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% bad_lc.erl:8
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
function `lc_SUITE`:`bad_generator_mc`(_0) {
0:
  %% bad_lc.erl:10
  %% Result type:
  %%    none()
  _6 = call (`'-bad_generator_mc/1-lc$^0/1-0-'`/1), _0
  _17 = succeeded:body _6
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `lc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `lc_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bad_lc.erl:10
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     'a'
function `lc_SUITE`:`'-bad_generator_mc/1-lc$^0/1-0-'`(_3) {
0:
  %% bad_lc.erl:10
  _13 = call (`erlang`:`error`/1), `{bad_generator,a}`

  %% Aliased:
  %%    _13
  _21 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% bad_lc.erl:6
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _4 =>
%%     bitstring(256,appendable)
%%    _5 =>
%%     'a'
function `lc_SUITE`:`'-bad_generator_bc/1-lbc$^0/2-0-'`(_5, _4) {
0:
  %% bad_lc.erl:7
  _18 = call (`erlang`:`error`/1), `{bad_generator,a}`

  %% Aliased:
  %%    _18
  _27 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% bad_lc.erl:4
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     'a' | 'd' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`'-bad_generator/1-lc$^0/1-0-'`(_3) {
0:
  %% Aliased:
  %%    _3
  _17 = is_nonempty_list _3
  br _17, ^17, ^15

17:
  %% Argument types:
  %%    _3 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _3
  _9 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _3
  _8 = get_tl _3

  %% bad_lc.erl:4
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _8
  _5 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _8

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    _9 => 'a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %%    _5 => list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _5
  _10 = put_list _9, _5
  %% Result type:
  %%    nonempty_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _10
  ret _10

15:
  %% Argument types:
  %%    _3 => 'a' | 'd' | 'nomatch' | 'not_bool' | 'x' | nil()
  %% Aliased:
  %%    _3
  _18 = bif:'=:=' _3, `[]`
  br _18, ^18, ^14

18:
  %% Result type:
  %%    nil()
  ret `[]`

14:
  %% Argument types:
  %%    _3 => 'a' | 'd' | 'nomatch' | 'not_bool' | 'x'
  %% Unique:
  %%    _3
  _7 = put_tuple `bad_generator`, _3

  %% bad_lc.erl:4
  %% Unique:
  %%    _7
  _11 = call (`erlang`:`error`/1), _7

  %% Aliased:
  %%    _11
  _19 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% lc_SUITE.erl:283
%% Counter = 16
%% bs_ensure_opt: true
function `lc_SUITE`:`'-do_effect/2-fun-0-'`(_3) {
0:
  %% lc_SUITE.erl:283
  %% Argument types:
  %%    
  _2 = bif:get `lc_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _8 = put_list _3, _2

  %% lc_SUITE.erl:283
  %% Unique:
  %%    _8
  _11 = call (`erlang`:`put`/2), `lc_SUITE`, _8

  %% Aliased:
  %%    _11
  _14 = succeeded:body _11
  br _14, ^14, ^1

14:
  %% Aliased:
  %%    _11
  ret _11

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% lc_SUITE.erl:274
%% Counter = 134
%% bs_ensure_opt: true
function `lc_SUITE`:`'-effect/1-lc$^2/1-1-'`(_20) {
0:
  %% Aliased:
  %%    _20
  _130 = is_nonempty_list _20
  br _130, ^130, ^102

130:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _79 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _78 = get_tl _20
  _106 = new_try_tag `'catch'`
  br _106, ^104, ^105

104:
  %% lc_SUITE.erl:273
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  %% Anno: #{unit => 8}
  _22 = bs_create_bin `utf8`, `[0,{segment,1}]`, _79, `undefined`

  %% Aliased:
  %%    _22
  _108 = succeeded:body _22
  br _108, ^108, ^105

108:
  %% lc_SUITE.erl:273
  %% Aliased:
  %%    _22
  _95 = call (`erlang`:`binary_to_atom`/2), _22, `utf8`

  %% Aliased:
  %%    _95
  _109 = succeeded:body _95
  br _109, ^109, ^105

109:
  br ^103

105:
  %% Unique:
  %%    _106
  _112 = landingpad `'catch'`, _106

  %% Aliased:
  %%    _112
  _110 = extract _112, `0`
  br ^103

103:
  _113 = phi { _110, ^105 }, { _95, ^109 }

  %% Aliased:
  %%    _113
  %% Unique:
  %%    _106
  _23 = catch_end _106, _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _126 = is_tagged_tuple _23, `2`, `'EXIT'`
  br _126, ^123, ^115

123:
  %% Argument types:
  %%    _23 => {''EXIT'', any()}
  %% Aliased:
  %%    _23
  _80 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _120 = is_tagged_tuple _80, `2`, `badarg`
  br _120, ^117, ^115

117:
  %% lc_SUITE.erl:274
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _78
  _96 = call (`'-effect/1-lc$^2/1-1-'`/1), _78

  %% Unique:
  %%    _96
  _116 = succeeded:body _96
  br _116, ^116, ^1

116:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _96
  ret _96

115:
  %% lc_SUITE.erl:272
  %% Aliased:
  %%    _23
  _97 = match_fail `badmatch`, _23

  %% Unique:
  %%    _97
  _129 = succeeded:body _97
  br ^1

102:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _131 = bif:'=:=' _20, `[]`
  br _131, ^131, ^101

131:
  %% Result type:
  %%    nil()
  ret `[]`

101:
  %% Argument types:
  %%    _20 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _20
  _77 = put_tuple `bad_generator`, _20

  %% lc_SUITE.erl:274
  %% Unique:
  %%    _77
  _98 = call (`erlang`:`error`/1), _77

  %% Aliased:
  %%    _98
  _132 = succeeded:body _98
  br ^1

1:
  _99 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _99
}

%% lc_SUITE.erl:263
%% Counter = 97
%% bs_ensure_opt: true
function `lc_SUITE`:`'-effect/1-fun-1-'`(_12, _11) {
0:
  %% lc_SUITE.erl:265
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _11, 
  %%    _12
  _93 = call (`'-effect/1-lc$^0/1-0-'`/2), _11, _12

  %% Unique:
  %%    _93
  _96 = succeeded:body _93
  br _96, ^96, ^1

96:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _94 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _94
}

%% lc_SUITE.erl:265
%% Counter = 139
%% bs_ensure_opt: true
function `lc_SUITE`:`'-effect/1-lc$^0/1-0-'`(_7, _12) {
0:
  %% Aliased:
  %%    _7
  _128 = is_nonempty_list _7
  br _128, ^128, ^131

128:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _60 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _59 = get_tl _7

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _127 = bif:is_map _60
  br _127, ^127, ^137

127:
  %% lc_SUITE.erl:265
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _86 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `492`, `binary`, `[1]`, `<<1>>`, `all`

  %% Aliased:
  %%    _86
  _102 = succeeded:guard _86
  br _102, ^124, ^137

124:
  %% Argument types:
  %%    _60 => map()
  %%    _86 => bitstring(4)
  %% Aliased:
  %%    _60, 
  %%    _86
  _63 = get_map_element _60, _86

  %% Aliased:
  %%    _63
  _110 = succeeded:guard _63
  br _110, ^110, ^137

110:
  %% lc_SUITE.erl:265
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _88 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _88
  _113 = succeeded:guard _88
  br _113, ^121, ^137

121:
  %% Argument types:
  %%    _60 => map()
  %%    _88 => bitstring(1)
  %% Aliased:
  %%    _60, 
  %%    _88
  _65 = get_map_element _60, _88

  %% Aliased:
  %%    _65
  _118 = succeeded:guard _65
  br _118, ^118, ^137

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63, 
  %%    _65
  _66 = put_tuple _63, _65

  %% lc_SUITE.erl:264
  %% Argument types:
  %%    _66 => {any(), any()}
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _66
  _89 = call _12, _66

  %% Aliased:
  %%    _89
  _119 = succeeded:body _89
  br _119, ^119, ^1

119:
  %% lc_SUITE.erl:265
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _12, 
  %%    _59
  _90 = call (`'-effect/1-lc$^0/1-0-'`/2), _59, _12

  %% Unique:
  %%    _90
  _120 = succeeded:body _90
  br _120, ^120, ^1

120:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _90
  ret _90

137:
  %% lc_SUITE.erl:265
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _12, 
  %%    _59
  _91 = call (`'-effect/1-lc$^0/1-0-'`/2), _59, _12

  %% Unique:
  %%    _91
  _132 = succeeded:body _91
  br _132, ^132, ^1

132:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _91
  ret _91

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _134 = bif:'=:=' _7, `[]`
  br _134, ^134, ^130

134:
  %% Result type:
  %%    nil()
  ret `[]`

130:
  %% Argument types:
  %%    _7 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _68 = put_tuple `bad_generator`, _7

  %% lc_SUITE.erl:265
  %% Unique:
  %%    _68
  _92 = call (`erlang`:`error`/1), _68

  %% Aliased:
  %%    _92
  _135 = succeeded:body _92
  br ^1

1:
  _93 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _93
}

%% lc_SUITE.erl:256
%% Counter = 60
%% bs_ensure_opt: true
%% Parameters
%%    _16 =>
%%     'd' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`'-shadow/1-lc$^1/1-1-'`(_16) {
0:
  %% Aliased:
  %%    _16
  _56 = is_nonempty_list _16
  br _56, ^56, ^47

56:
  %% Argument types:
  %%    _16 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _16
  _34 = get_hd _16

  %% Argument types:
  %%    _16 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _16
  _33 = get_tl _16

  %% Argument types:
  %%    _34 => 'a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %% Aliased:
  %%    _34
  _52 = bif:is_tuple _34
  br _52, ^51, ^48

51:
  %% Argument types:
  %%    _34 => {number(), number()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `1`

  %% Argument types:
  %%    _35 => number()
  %% Unique:
  %%    _35
  _49 = bif:'<' _35, `10`
  br _49, ^49, ^48

49:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _33
  _18 = call (`'-shadow/1-lc$^1/1-1-'`/1), _33

  %% Unique:
  %%    _18
  _50 = succeeded:body _18
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    _35 => number('-inf', 10)
  %%    _18 => list(number('-inf', 10))
  %% Unique:
  %%    _18, 
  %%    _35
  _41 = put_list _35, _18
  %% Result type:
  %%    nonempty_list(number('-inf', 10))
  %% Unique:
  %%    _41
  ret _41

48:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _33
  _42 = call (`'-shadow/1-lc$^1/1-1-'`/1), _33

  %% Unique:
  %%    _42
  _55 = succeeded:body _42
  br _55, ^55, ^1

55:
  %% Result type:
  %%    list(number('-inf', 10))
  %% Unique:
  %%    _42
  ret _42

47:
  %% Argument types:
  %%    _16 => 'd' | 'nomatch' | 'not_bool' | 'x' | nil()
  %% Aliased:
  %%    _16
  _57 = bif:'=:=' _16, `[]`
  br _57, ^57, ^46

57:
  %% Result type:
  %%    nil()
  ret `[]`

46:
  %% Argument types:
  %%    _16 => 'd' | 'nomatch' | 'not_bool' | 'x'
  %% Unique:
  %%    _16
  _32 = put_tuple `bad_generator`, _16

  %% lc_SUITE.erl:256
  %% Unique:
  %%    _32
  _43 = call (`erlang`:`error`/1), _32

  %% Aliased:
  %%    _43
  _58 = succeeded:body _43
  br ^1

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44
}

%% lc_SUITE.erl:254
%% Counter = 51
%% bs_ensure_opt: true
function `lc_SUITE`:`'-shadow/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _47 = is_nonempty_list _6
  br _47, ^47, ^44

47:
  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _28 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _27 = get_tl _6

  %% lc_SUITE.erl:254
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _8 = bif:'+' _28, `1`

  %% Unique:
  %%    _8
  _45 = succeeded:body _8
  br _45, ^45, ^1

45:
  %% lc_SUITE.erl:254
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _27
  _9 = call (`'-shadow/1-lc$^0/1-0-'`/1), _27

  %% Unique:
  %%    _9
  _46 = succeeded:body _9
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _28 => number()
  %%    _8 => number()
  %% Unique:
  %%    _8, 
  %%    _28
  _29 = put_tuple _28, _8

  %% Argument types:
  %%    _29 => {number(), number()}
  %%    _9 => list({number(), number()})
  %% Unique:
  %%    _9, 
  %%    _29
  _39 = put_list _29, _9
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _39
  ret _39

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _48 = bif:'=:=' _6, `[]`
  br _48, ^48, ^43

48:
  %% Result type:
  %%    nil()
  ret `[]`

43:
  %% Argument types:
  %%    _6 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _6
  _26 = put_tuple `bad_generator`, _6

  %% lc_SUITE.erl:254
  %% Unique:
  %%    _26
  _40 = call (`erlang`:`error`/1), _26

  %% Aliased:
  %%    _40
  _49 = succeeded:body _40
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% lc_SUITE.erl:241
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _5 =>
%%     nil()
function `lc_SUITE`:`'-empty_generator/1-lc$^0/1-0-'`(_5) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:224
%% Counter = 60
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-0-'`(_2) {
0:
  %% lc_SUITE.erl:224
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _43 = bif:'=<' `1`, _2
  br _43, ^59, ^58

59:
  %% lc_SUITE.erl:224
  %% Argument types:
  %%    _2 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _2
  _54 = bif:'=<' _2, `9`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _54
  ret _54

58:
  %% Result type:
  %%    'false'
  ret `false`
}

%% lc_SUITE.erl:223
%% Counter = 59
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-1-'`(_1) {
0:
  %% lc_SUITE.erl:223
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _42 = bif:'=<' `1`, _1
  br _42, ^58, ^57

58:
  %% lc_SUITE.erl:223
  %% Argument types:
  %%    _1 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _1
  _53 = bif:'=<' _1, `9`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _53
  ret _53

57:
  %% Result type:
  %%    'false'
  ret `false`
}

%% lc_SUITE.erl:222
%% Counter = 56
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-2-'`(_1, _2) {
0:
  %% lc_SUITE.erl:222
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _13 = bif:'+' _1, `1`

  %% Unique:
  %%    _13
  _55 = succeeded:body _13
  br _55, ^55, ^1

55:
  %% lc_SUITE.erl:222
  %% Argument types:
  %%    _13 => number()
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _13
  _52 = bif:'=:=' _13, _2
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _52
  ret _52

1:
  _53 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _53
}

%% lc_SUITE.erl:221
%% Counter = 54
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-3-'`(_1, _2) {
0:
  %% lc_SUITE.erl:221
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _51 = bif:'=:=' _1, _2
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _51
  ret _51
}

%% lc_SUITE.erl:220
%% Counter = 57
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-4-'`(_1, _2) {
0:
  %% lc_SUITE.erl:220
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _40 = bif:'=:=' _2, `0`
  br _40, ^55, ^56

55:
  %% Result type:
  %%    'false'
  ret `false`

56:
  %% lc_SUITE.erl:220
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _21 = bif:'rem' _1, _2

  %% Unique:
  %%    _21
  _54 = succeeded:body _21
  br _54, ^54, ^1

54:
  %% lc_SUITE.erl:220
  %% Argument types:
  %%    _21 => integer()
  %% Unique:
  %%    _21
  _50 = bif:'=:=' _21, `3`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _50
  ret _50

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% lc_SUITE.erl:219
%% Counter = 53
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-5-'`(_1, _2) {
0:
  %% lc_SUITE.erl:219
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _26 = bif:'*' _1, _2

  %% Unique:
  %%    _26
  _52 = succeeded:body _26
  br _52, ^52, ^1

52:
  %% lc_SUITE.erl:219
  %% Argument types:
  %%    _26 => number()
  %% Unique:
  %%    _26
  _49 = bif:'=:=' _26, `0`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _49
  ret _49

1:
  _50 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _50
}

%% lc_SUITE.erl:218
%% Counter = 52
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-6-'`(_1, _2) {
0:
  %% lc_SUITE.erl:218
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _30 = bif:'+' _1, _2

  %% Unique:
  %%    _30
  _51 = succeeded:body _30
  br _51, ^51, ^1

51:
  %% lc_SUITE.erl:218
  %% Argument types:
  %%    _30 => number()
  %% Unique:
  %%    _30
  _48 = bif:'=:=' _30, `0`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _48
  ret _48

1:
  _49 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _49
}

%% lc_SUITE.erl:184
%% Counter = 43
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_generator/1-lc$^0/1-0-'`(_7, Seq) {
0:
  %% Aliased:
  %%    _7
  _38 = is_nonempty_list _7
  br _38, ^38, ^36

38:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _22 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _21 = get_tl _7

  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _21, 
  %%    _22, 
  %%    Seq
  _31 = call (`'-no_generator/1-lc$^1/1-1-'`/4), Seq, _21, _22, Seq

  %% Unique:
  %%    _31
  _37 = succeeded:body _31
  br _37, ^37, ^1

37:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _31
  ret _31

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _39 = bif:'=:=' _7, `[]`
  br _39, ^39, ^35

39:
  %% Result type:
  %%    nil()
  ret `[]`

35:
  %% Argument types:
  %%    _7 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _20 = put_tuple `bad_generator`, _7

  %% lc_SUITE.erl:184
  %% Unique:
  %%    _20
  _32 = call (`erlang`:`error`/1), _20

  %% Aliased:
  %%    _32
  _40 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% lc_SUITE.erl:184
%% Counter = 44
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_generator/1-lc$^1/1-1-'`(_9, _21, _22, Seq) {
0:
  %% Aliased:
  %%    _9
  _38 = is_nonempty_list _9
  br _38, ^38, ^34

38:
  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _26 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _25 = get_tl _9

  %% lc_SUITE.erl:184
  %% Result type:
  %%    list(1..9 | {any(), any(), ...})
  %% Aliased:
  %%    _22, 
  %%    _26
  _11 = call (`no_gen`/2), _22, _26

  %% Unique:
  %%    _11
  _35 = succeeded:body _11
  br _35, ^35, ^1

35:
  %% lc_SUITE.erl:184
  %% Aliased:
  %%    _22, 
  %%    _26
  %% Unique:
  %%    _11
  _28 = call (`no_gen_verify`/3), _11, _22, _26

  %% Aliased:
  %%    _28
  _36 = succeeded:body _28
  br _36, ^36, ^1

36:
  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _21, 
  %%    _22, 
  %%    _25, 
  %%    Seq
  _29 = call (`'-no_generator/1-lc$^1/1-1-'`/4), _25, _21, _22, Seq

  %% Unique:
  %%    _29
  _37 = succeeded:body _29
  br _37, ^37, ^1

37:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _29
  ret _29

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _40 = bif:'=:=' _9, `[]`
  br _40, ^40, ^33

40:
  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _21, 
  %%    Seq
  _27 = call (`'-no_generator/1-lc$^0/1-0-'`/2), _21, Seq

  %% Unique:
  %%    _27
  _39 = succeeded:body _27
  br _39, ^39, ^1

39:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _27
  ret _27

33:
  %% Argument types:
  %%    _9 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _9
  _24 = put_tuple `bad_generator`, _9

  %% lc_SUITE.erl:184
  %% Unique:
  %%    _24
  _30 = call (`erlang`:`error`/1), _24

  %% Aliased:
  %%    _30
  _41 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% lc_SUITE.erl:177
%% Counter = 258
%% bs_ensure_opt: true
%% Parameters
%%    _42 =>
%%     list(99)
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^2/1-0-'`(_42) {
0:
  %% Unique:
  %%    _42
  _253 = is_nonempty_list _42
  br _253, ^253, ^254

253:
  %% Argument types:
  %%    _42 => nonempty_list(99)
  %% Unique:
  %%    _42
  _87 = get_tl _42

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _246 = call (`'-deeply_nested_1/0-lc$^3/1-1-'`/3), `"b"`, _87, `99`

  %% Unique:
  %%    _246
  _252 = succeeded:body _246
  br _252, ^252, ^1

252:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _246
  ret _246

1:
  _248 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _248

254:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:177
%% Counter = 257
%% bs_ensure_opt: true
%% Parameters
%%    _44 =>
%%     list(98)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^3/1-1-'`(_44, _87, _88) {
0:
  %% Unique:
  %%    _44
  _251 = is_nonempty_list _44
  br _251, ^251, ^253

251:
  %% Argument types:
  %%    _44 => nonempty_list(98)
  %% Unique:
  %%    _44
  _91 = get_tl _44

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _244 = call (`'-deeply_nested_1/0-lc$^4/1-2-'`/5), `"a"`, _87, _88, _91, `98`

  %% Unique:
  %%    _244
  _250 = succeeded:body _244
  br _250, ^250, ^1

250:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _244
  ret _244

253:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _187 = call (`'-deeply_nested_1/0-lc$^2/1-0-'`/1), _87

  %% Unique:
  %%    _187
  _252 = succeeded:body _187
  br _252, ^252, ^1

252:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _187
  ret _187

1:
  _246 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _246
}

%% lc_SUITE.erl:177
%% Counter = 255
%% bs_ensure_opt: true
%% Parameters
%%    _46 =>
%%     list(97)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^4/1-2-'`(_46, _87, _88, _91, _92) {
0:
  %% Unique:
  %%    _46
  _249 = is_nonempty_list _46
  br _249, ^249, ^251

249:
  %% Argument types:
  %%    _46 => nonempty_list(97)
  %% Unique:
  %%    _46
  _95 = get_tl _46

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _242 = call (`'-deeply_nested_1/0-lc$^5/1-3-'`/7), `"`"`, _87, _88, _91, _92, _95, `97`

  %% Unique:
  %%    _242
  _248 = succeeded:body _242
  br _248, ^248, ^1

248:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _242
  ret _242

251:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _188 = call (`'-deeply_nested_1/0-lc$^3/1-1-'`/3), _91, _87, _88

  %% Unique:
  %%    _188
  _250 = succeeded:body _188
  br _250, ^250, ^1

250:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _188
  ret _188

1:
  _244 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _244
}

%% lc_SUITE.erl:177
%% Counter = 253
%% bs_ensure_opt: true
%% Parameters
%%    _48 =>
%%     list(96)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^5/1-3-'`(_48, _87, _88, _91, _92, _95, _96) {
0:
  %% Unique:
  %%    _48
  _247 = is_nonempty_list _48
  br _247, ^247, ^249

247:
  %% Argument types:
  %%    _48 => nonempty_list(96)
  %% Unique:
  %%    _48
  _99 = get_tl _48

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _240 = call (`'-deeply_nested_1/0-lc$^6/1-4-'`/9), `"*"`, _87, _88, _91, _92, _95, _96, _99, `96`

  %% Unique:
  %%    _240
  _246 = succeeded:body _240
  br _246, ^246, ^1

246:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _240
  ret _240

249:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _189 = call (`'-deeply_nested_1/0-lc$^4/1-2-'`/5), _95, _87, _88, _91, _92

  %% Unique:
  %%    _189
  _248 = succeeded:body _189
  br _248, ^248, ^1

248:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _189
  ret _189

1:
  _242 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _242
}

%% lc_SUITE.erl:177
%% Counter = 251
%% bs_ensure_opt: true
%% Parameters
%%    _50 =>
%%     list(42)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^6/1-4-'`(_50, _87, _88, _91, _92, _95, _96, _99, _100) {
0:
  %% Unique:
  %%    _50
  _245 = is_nonempty_list _50
  br _245, ^245, ^247

245:
  %% Argument types:
  %%    _50 => nonempty_list(42)
  %% Unique:
  %%    _50
  _103 = get_tl _50

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _238 = call (`'-deeply_nested_1/0-lc$^7/1-5-'`/11), `[17]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, `42`

  %% Unique:
  %%    _238
  _244 = succeeded:body _238
  br _244, ^244, ^1

244:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _238
  ret _238

247:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _190 = call (`'-deeply_nested_1/0-lc$^5/1-3-'`/7), _99, _87, _88, _91, _92, _95, _96

  %% Unique:
  %%    _190
  _246 = succeeded:body _190
  br _246, ^246, ^1

246:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _190
  ret _190

1:
  _240 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _240
}

%% lc_SUITE.erl:177
%% Counter = 250
%% bs_ensure_opt: true
%% Parameters
%%    _52 =>
%%     list(17)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^7/1-5-'`(_52, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104) {
0:
  %% Unique:
  %%    _52
  _243 = is_nonempty_list _52
  br _243, ^243, ^245

243:
  %% Argument types:
  %%    _52 => nonempty_list(17)
  %% Unique:
  %%    _52
  _107 = get_tl _52

  %% Result type:
  %%    1764
  _14 = make_fun (`'-deeply_nested_1/0-fun-0-'`/1), `42`

  %% Argument types:
  %%    _14 => fun(() -> 1764)
  %% Aliased:
  %%    _14
  _186 = put_list _14, `[]`

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _186
  _236 = call (`'-deeply_nested_1/0-lc$^8/1-6-'`/13), _186, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, `17`

  %% Unique:
  %%    _236
  _242 = succeeded:body _236
  br _242, ^242, ^1

242:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _236
  ret _236

245:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _191 = call (`'-deeply_nested_1/0-lc$^6/1-4-'`/9), _103, _87, _88, _91, _92, _95, _96, _99, _100

  %% Unique:
  %%    _191
  _244 = succeeded:body _191
  br _244, ^244, ^1

244:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _191
  ret _191

1:
  _238 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _238
}

%% lc_SUITE.erl:178
%% Counter = 239
%% bs_ensure_opt: true
%% Parameters
%%    _104 =>
%%     42
function `lc_SUITE`:`'-deeply_nested_1/0-fun-0-'`(_104) {
0:
  %% Result type:
  %%    1764
  ret `1764`
}

%% lc_SUITE.erl:178
%% Counter = 246
%% bs_ensure_opt: true
%% Parameters
%%    _54 =>
%%     list(fun(() -> 1764))
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^8/1-6-'`(_54, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108) {
0:
  %% Unique:
  %%    _54
  _240 = is_nonempty_list _54
  br _240, ^240, ^242

240:
  %% Argument types:
  %%    _54 => nonempty_list(fun(() -> 1764))
  %% Unique:
  %%    _54
  _112 = get_hd _54

  %% Argument types:
  %%    _54 => nonempty_list(fun(() -> 1764))
  %% Unique:
  %%    _54
  _111 = get_tl _54

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _233 = call (`'-deeply_nested_1/0-lc$^9/1-7-'`/15), `"\f"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112

  %% Unique:
  %%    _233
  _239 = succeeded:body _233
  br _239, ^239, ^1

239:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _233
  ret _233

242:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _192 = call (`'-deeply_nested_1/0-lc$^7/1-5-'`/11), _107, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104

  %% Unique:
  %%    _192
  _241 = succeeded:body _192
  br _241, ^241, ^1

241:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _192
  ret _192

1:
  _235 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _235
}

%% lc_SUITE.erl:178
%% Counter = 244
%% bs_ensure_opt: true
%% Parameters
%%    _56 =>
%%     list(12)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^9/1-7-'`(_56, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112) {
0:
  %% Unique:
  %%    _56
  _238 = is_nonempty_list _56
  br _238, ^238, ^240

238:
  %% Argument types:
  %%    _56 => nonempty_list(12)
  %% Unique:
  %%    _56
  _115 = get_tl _56

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _231 = call (`'-deeply_nested_1/0-lc$^10/1-8-'`/17), `"\v"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, `12`

  %% Unique:
  %%    _231
  _237 = succeeded:body _231
  br _237, ^237, ^1

237:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _231
  ret _231

240:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _111
  _193 = call (`'-deeply_nested_1/0-lc$^8/1-6-'`/13), _111, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108

  %% Unique:
  %%    _193
  _239 = succeeded:body _193
  br _239, ^239, ^1

239:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _193
  ret _193

1:
  _233 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _233
}

%% lc_SUITE.erl:178
%% Counter = 242
%% bs_ensure_opt: true
%% Parameters
%%    _58 =>
%%     list(11)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^10/1-8-'`(_58, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116) {
0:
  %% Unique:
  %%    _58
  _236 = is_nonempty_list _58
  br _236, ^236, ^238

236:
  %% Argument types:
  %%    _58 => nonempty_list(11)
  %% Unique:
  %%    _58
  _119 = get_tl _58

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _229 = call (`'-deeply_nested_1/0-lc$^11/1-9-'`/19), `"\n"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, `11`

  %% Unique:
  %%    _229
  _235 = succeeded:body _229
  br _235, ^235, ^1

235:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _229
  ret _229

238:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _194 = call (`'-deeply_nested_1/0-lc$^9/1-7-'`/15), _115, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112

  %% Unique:
  %%    _194
  _237 = succeeded:body _194
  br _237, ^237, ^1

237:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _194
  ret _194

1:
  _231 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _231
}

%% lc_SUITE.erl:178
%% Counter = 240
%% bs_ensure_opt: true
%% Parameters
%%    _60 =>
%%     list(10)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^11/1-9-'`(_60, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120) {
0:
  %% Unique:
  %%    _60
  _234 = is_nonempty_list _60
  br _234, ^234, ^236

234:
  %% Argument types:
  %%    _60 => nonempty_list(10)
  %% Unique:
  %%    _60
  _123 = get_tl _60

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _227 = call (`'-deeply_nested_1/0-lc$^12/1-10-'`/21), `"\t"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, `10`

  %% Unique:
  %%    _227
  _233 = succeeded:body _227
  br _233, ^233, ^1

233:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _227
  ret _227

236:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _195 = call (`'-deeply_nested_1/0-lc$^10/1-8-'`/17), _119, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116

  %% Unique:
  %%    _195
  _235 = succeeded:body _195
  br _235, ^235, ^1

235:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _195
  ret _195

1:
  _229 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _229
}

%% lc_SUITE.erl:179
%% Counter = 238
%% bs_ensure_opt: true
%% Parameters
%%    _62 =>
%%     list(9)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^12/1-10-'`(_62, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124) {
0:
  %% Unique:
  %%    _62
  _232 = is_nonempty_list _62
  br _232, ^232, ^234

232:
  %% Argument types:
  %%    _62 => nonempty_list(9)
  %% Unique:
  %%    _62
  _127 = get_tl _62

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _225 = call (`'-deeply_nested_1/0-lc$^13/1-11-'`/23), `"\b"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, `9`

  %% Unique:
  %%    _225
  _231 = succeeded:body _225
  br _231, ^231, ^1

231:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _225
  ret _225

234:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _196 = call (`'-deeply_nested_1/0-lc$^11/1-9-'`/19), _123, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120

  %% Unique:
  %%    _196
  _233 = succeeded:body _196
  br _233, ^233, ^1

233:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _196
  ret _196

1:
  _227 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _227
}

%% lc_SUITE.erl:179
%% Counter = 236
%% bs_ensure_opt: true
%% Parameters
%%    _64 =>
%%     list(8)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^13/1-11-'`(_64, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128) {
0:
  %% Unique:
  %%    _64
  _230 = is_nonempty_list _64
  br _230, ^230, ^232

230:
  %% Argument types:
  %%    _64 => nonempty_list(8)
  %% Unique:
  %%    _64
  _131 = get_tl _64

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _223 = call (`'-deeply_nested_1/0-lc$^14/1-12-'`/25), `[7]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, `8`

  %% Unique:
  %%    _223
  _229 = succeeded:body _223
  br _229, ^229, ^1

229:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _223
  ret _223

232:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _197 = call (`'-deeply_nested_1/0-lc$^12/1-10-'`/21), _127, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124

  %% Unique:
  %%    _197
  _231 = succeeded:body _197
  br _231, ^231, ^1

231:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _197
  ret _197

1:
  _225 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _225
}

%% lc_SUITE.erl:179
%% Counter = 234
%% bs_ensure_opt: true
%% Parameters
%%    _66 =>
%%     list(7)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^14/1-12-'`(_66, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132) {
0:
  %% Unique:
  %%    _66
  _228 = is_nonempty_list _66
  br _228, ^228, ^230

228:
  %% Argument types:
  %%    _66 => nonempty_list(7)
  %% Unique:
  %%    _66
  _135 = get_tl _66

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _221 = call (`'-deeply_nested_1/0-lc$^15/1-13-'`/27), `[6]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, `7`

  %% Unique:
  %%    _221
  _227 = succeeded:body _221
  br _227, ^227, ^1

227:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _221
  ret _221

230:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _198 = call (`'-deeply_nested_1/0-lc$^13/1-11-'`/23), _131, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128

  %% Unique:
  %%    _198
  _229 = succeeded:body _198
  br _229, ^229, ^1

229:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _198
  ret _198

1:
  _223 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _223
}

%% lc_SUITE.erl:179
%% Counter = 232
%% bs_ensure_opt: true
%% Parameters
%%    _68 =>
%%     list(6)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^15/1-13-'`(_68, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136) {
0:
  %% Unique:
  %%    _68
  _226 = is_nonempty_list _68
  br _226, ^226, ^228

226:
  %% Argument types:
  %%    _68 => nonempty_list(6)
  %% Unique:
  %%    _68
  _139 = get_tl _68

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _219 = call (`'-deeply_nested_1/0-lc$^16/1-14-'`/29), `[5]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, `6`

  %% Unique:
  %%    _219
  _225 = succeeded:body _219
  br _225, ^225, ^1

225:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _219
  ret _219

228:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _199 = call (`'-deeply_nested_1/0-lc$^14/1-12-'`/25), _135, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132

  %% Unique:
  %%    _199
  _227 = succeeded:body _199
  br _227, ^227, ^1

227:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _199
  ret _199

1:
  _221 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _221
}

%% lc_SUITE.erl:179
%% Counter = 230
%% bs_ensure_opt: true
%% Parameters
%%    _70 =>
%%     list(5)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^16/1-14-'`(_70, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140) {
0:
  %% Unique:
  %%    _70
  _224 = is_nonempty_list _70
  br _224, ^224, ^226

224:
  %% Argument types:
  %%    _70 => nonempty_list(5)
  %% Unique:
  %%    _70
  _143 = get_tl _70

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _217 = call (`'-deeply_nested_1/0-lc$^17/1-15-'`/31), `[4]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, `5`

  %% Unique:
  %%    _217
  _223 = succeeded:body _217
  br _223, ^223, ^1

223:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _217
  ret _217

226:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _200 = call (`'-deeply_nested_1/0-lc$^15/1-13-'`/27), _139, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136

  %% Unique:
  %%    _200
  _225 = succeeded:body _200
  br _225, ^225, ^1

225:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _200
  ret _200

1:
  _219 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _219
}

%% lc_SUITE.erl:180
%% Counter = 228
%% bs_ensure_opt: true
%% Parameters
%%    _72 =>
%%     list(4)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^17/1-15-'`(_72, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144) {
0:
  %% Unique:
  %%    _72
  _222 = is_nonempty_list _72
  br _222, ^222, ^224

222:
  %% Argument types:
  %%    _72 => nonempty_list(4)
  %% Unique:
  %%    _72
  _147 = get_tl _72

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _215 = call (`'-deeply_nested_1/0-lc$^18/1-16-'`/33), `[3]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, `4`

  %% Unique:
  %%    _215
  _221 = succeeded:body _215
  br _221, ^221, ^1

221:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _215
  ret _215

224:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _201 = call (`'-deeply_nested_1/0-lc$^16/1-14-'`/29), _143, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140

  %% Unique:
  %%    _201
  _223 = succeeded:body _201
  br _223, ^223, ^1

223:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _201
  ret _201

1:
  _217 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _217
}

%% lc_SUITE.erl:180
%% Counter = 227
%% bs_ensure_opt: true
%% Parameters
%%    _74 =>
%%     list(3)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^18/1-16-'`(_74, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148) {
0:
  %% Unique:
  %%    _74
  _220 = is_nonempty_list _74
  br _220, ^220, ^222

220:
  %% Argument types:
  %%    _74 => nonempty_list(3)
  %% Unique:
  %%    _74
  _151 = get_tl _74

  %% Result type:
  %%    7
  _37 = make_fun (`'-deeply_nested_1/0-fun-1-'`/2), `4`, `3`

  %% Argument types:
  %%    _37 => fun(() -> 7)
  %% Aliased:
  %%    _37
  _185 = put_list _37, `[]`

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111, 
  %%    _185
  _213 = call (`'-deeply_nested_1/0-lc$^19/1-17-'`/35), _185, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, `3`

  %% Unique:
  %%    _213
  _219 = succeeded:body _213
  br _219, ^219, ^1

219:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _213
  ret _213

222:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _202 = call (`'-deeply_nested_1/0-lc$^17/1-15-'`/31), _147, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144

  %% Unique:
  %%    _202
  _221 = succeeded:body _202
  br _221, ^221, ^1

221:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _202
  ret _202

1:
  _215 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _215
}

%% lc_SUITE.erl:180
%% Counter = 216
%% bs_ensure_opt: true
%% Parameters
%%    _148 =>
%%     4
%%    _152 =>
%%     3
function `lc_SUITE`:`'-deeply_nested_1/0-fun-1-'`(_148, _152) {
0:
  %% Result type:
  %%    7
  ret `7`
}

%% lc_SUITE.erl:180
%% Counter = 223
%% bs_ensure_opt: true
%% Parameters
%%    _76 =>
%%     list(fun(() -> 7))
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
%%    _151 =>
%%     list(3)
%%    _152 =>
%%     3
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^19/1-17-'`(_76, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152) {
0:
  %% Unique:
  %%    _76
  _217 = is_nonempty_list _76
  br _217, ^217, ^219

217:
  %% Argument types:
  %%    _76 => nonempty_list(fun(() -> 7))
  %% Unique:
  %%    _76
  _156 = get_hd _76

  %% Argument types:
  %%    _76 => nonempty_list(fun(() -> 7))
  %% Unique:
  %%    _76
  _155 = get_tl _76

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _210 = call (`'-deeply_nested_1/0-lc$^20/1-18-'`/37), `[2]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156

  %% Unique:
  %%    _210
  _216 = succeeded:body _210
  br _216, ^216, ^1

216:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _210
  ret _210

219:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _203 = call (`'-deeply_nested_1/0-lc$^18/1-16-'`/33), _151, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148

  %% Unique:
  %%    _203
  _218 = succeeded:body _203
  br _218, ^218, ^1

218:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _203
  ret _203

1:
  _212 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _212
}

%% lc_SUITE.erl:180
%% Counter = 221
%% bs_ensure_opt: true
%% Parameters
%%    _78 =>
%%     list(2)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
%%    _151 =>
%%     list(3)
%%    _152 =>
%%     3
%%    _155 =>
%%     list(fun(() -> 7))
%%    _156 =>
%%     fun(() -> 7)
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^20/1-18-'`(_78, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156) {
0:
  %% Unique:
  %%    _78
  _215 = is_nonempty_list _78
  br _215, ^215, ^217

215:
  %% Argument types:
  %%    _78 => nonempty_list(2)
  %% Unique:
  %%    _78
  _159 = get_tl _78

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _208 = call (`'-deeply_nested_1/0-lc$^21/1-19-'`/39), `[1]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156, _159, `2`

  %% Unique:
  %%    _208
  _214 = succeeded:body _208
  br _214, ^214, ^1

214:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _208
  ret _208

217:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111, 
  %%    _155
  _204 = call (`'-deeply_nested_1/0-lc$^19/1-17-'`/35), _155, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152

  %% Unique:
  %%    _204
  _216 = succeeded:body _204
  br _216, ^216, ^1

216:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _204
  ret _204

1:
  _210 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _210
}

%% lc_SUITE.erl:180
%% Counter = 221
%% bs_ensure_opt: true
%% Parameters
%%    _80 =>
%%     list(1)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
%%    _151 =>
%%     list(3)
%%    _152 =>
%%     3
%%    _155 =>
%%     list(fun(() -> 7))
%%    _156 =>
%%     fun(() -> 7)
%%    _159 =>
%%     list(2)
%%    _160 =>
%%     2
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^21/1-19-'`(_80, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156, _159, _160) {
0:
  %% Unique:
  %%    _80
  _215 = is_nonempty_list _80
  br _215, ^215, ^217

215:
  %% Argument types:
  %%    _80 => nonempty_list(1)
  %% Unique:
  %%    _80
  _163 = get_tl _80

  %% lc_SUITE.erl:176
  %% Result type:
  %%    1764
  %% Argument types:
  %%    _112 => fun(() -> 1764)
  %% Aliased:
  %%    _112
  _83 = call _112

  %% Aliased:
  %%    _83
  _212 = succeeded:body _83
  br _212, ^212, ^1

212:
  %% lc_SUITE.erl:176
  %% Result type:
  %%    7
  %% Argument types:
  %%    _156 => fun(() -> 7)
  %% Aliased:
  %%    _156
  _82 = call _156

  %% Aliased:
  %%    _82
  _213 = succeeded:body _82
  br _213, ^213, ^1

213:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _84 = call (`'-deeply_nested_1/0-lc$^21/1-19-'`/39), _163, _87, `99`, _91, `98`, _95, `97`, _99, `96`, _103, `42`, _107, `17`, _111, _112, _115, `12`, _119, `11`, _123, `10`, _127, `9`, _131, `8`, _135, `7`, _139, `6`, _143, `5`, _147, `4`, _151, `3`, _155, _156, _159, `2`

  %% Unique:
  %%    _84
  _214 = succeeded:body _84
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _84 => list(nonempty_list(1..1764))
  %% Unique:
  %%    _84
  _206 = put_list `[99,98,97,96,42,17,1764,12,11,10,9,8,7,6,5,4,3,7,2,1]`, _84
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _206
  ret _206

217:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _205 = call (`'-deeply_nested_1/0-lc$^20/1-18-'`/37), _159, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156

  %% Unique:
  %%    _205
  _216 = succeeded:body _205
  br _216, ^216, ^1

216:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _205
  ret _205

1:
  _208 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _208
}

%% lc_SUITE.erl:166
%% Counter = 91
%% bs_ensure_opt: true
%% Parameters
%%    _16 =>
%%     list(46..99)
function `lc_SUITE`:`'-alphanum/1-lc$^0/1-0-'`(_16) {
0:
  %% Unique:
  %%    _16
  _73 = is_nonempty_list _16
  br _73, ^73, ^74

73:
  %% Argument types:
  %%    _16 => nonempty_list(46..99)
  %% Unique:
  %%    _16
  _22 = get_hd _16

  %% Argument types:
  %%    _16 => nonempty_list(46..99)
  %% Unique:
  %%    _16
  _21 = get_tl _16

  %% lc_SUITE.erl:166
  %% Argument types:
  %%    _22 => 46..99
  %% Unique:
  %%    _22
  _23 = bif:'>=' _22, `48`
  br _23, ^53, ^48

53:
  %% lc_SUITE.erl:166
  %% Argument types:
  %%    _22 => 48..99
  %% Unique:
  %%    _22
  _31 = bif:'=<' _22, `57`
  br _31, ^70, ^85

85:
  %% lc_SUITE.erl:167
  %% Argument types:
  %%    _22 => 58..99
  %% Unique:
  %%    _22
  _26 = bif:'>=' _22, `97`
  br _26, ^70, ^79

79:
  %% lc_SUITE.erl:168
  %% Argument types:
  %%    _22 => 58..96
  %% Unique:
  %%    _22
  _29 = bif:'>=' _22, `65`
  br _29, ^76, ^48

76:
  %% lc_SUITE.erl:168
  %% Argument types:
  %%    _22 => 65..96
  %% Unique:
  %%    _22
  _37 = bif:'=<' _22, `90`
  br _37, ^70, ^48

70:
  %% lc_SUITE.erl:166
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _21
  _18 = call (`'-alphanum/1-lc$^0/1-0-'`/1), _21

  %% Unique:
  %%    _18
  _71 = succeeded:body _18
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _22 => 48..99
  %%    _18 => list(46..99)
  %% Unique:
  %%    _18, 
  %%    _22
  _41 = put_list _22, _18
  %% Result type:
  %%    nonempty_list(46..99)
  %% Unique:
  %%    _41
  ret _41

48:
  %% lc_SUITE.erl:166
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _21
  _42 = call (`'-alphanum/1-lc$^0/1-0-'`/1), _21

  %% Unique:
  %%    _42
  _72 = succeeded:body _42
  br _72, ^72, ^1

72:
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _42
  ret _42

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44

74:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:160
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_))
function `lc_SUITE`:`'-my_map/2-lc$^0/1-0-'`(_4, _0) {
0:
  %% Aliased:
  %%    _4
  _20 = is_nonempty_list _4
  br _20, ^20, ^17

20:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _11 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _10 = get_tl _4

  %% lc_SUITE.erl:160
  %% Argument types:
  %%    _0 => fun((_))
  %% Aliased:
  %%    _0, 
  %%    _11
  _6 = call _0, _11

  %% Aliased:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^18, ^1

18:
  %% lc_SUITE.erl:160
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _10
  _7 = call (`'-my_map/2-lc$^0/1-0-'`/2), _10, _0

  %% Unique:
  %%    _7
  _19 = succeeded:body _7
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    _7 => list(any())
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _7
  _12 = put_list _6, _7
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _12
  ret _12

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _21 = bif:'=:=' _4, `[]`
  br _21, ^21, ^16

21:
  %% Result type:
  %%    nil()
  ret `[]`

16:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _9 = put_tuple `bad_generator`, _4

  %% lc_SUITE.erl:160
  %% Unique:
  %%    _9
  _13 = call (`erlang`:`error`/1), _9

  %% Aliased:
  %%    _13
  _22 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% lc_SUITE.erl:125
%% Counter = 759
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^33/1-32-'`(_267) {
0:
  %% Aliased:
  %%    _267
  _742 = is_nonempty_list _267
  br _742, ^756, ^739

756:
  %% lc_SUITE.erl:125
  %% Aliased:
  %%    _267
  _560 = call (`erts_internal`:`mc_refill`/1), _267

  %% Aliased:
  %%    _560
  _740 = succeeded:body _560
  br _740, ^740, ^1

740:
  %% lc_SUITE.erl:125
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _560
  _734 = call (`'-basic/1-lc$^33/1-32-'`/1), _560

  %% Unique:
  %%    _734
  _741 = succeeded:body _734
  br _741, ^741, ^1

741:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _734
  ret _734

739:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _750 = bif:is_tuple _267
  br _750, ^750, ^743

750:
  %% Argument types:
  %%    _267 => {...}
  %% Aliased:
  %%    _267
  _751 = bif:tuple_size _267

  %% Argument types:
  %%    _751 => 0..16777215
  %% Unique:
  %%    _751
  _752 = bif:'=:=' _751, `3`
  br _752, ^749, ^738

749:
  %% Argument types:
  %%    _267 => {any(), any(), any()}
  %% Aliased:
  %%    _267
  _563 = get_tuple_element _267, `0`

  %% Argument types:
  %%    _267 => {any(), any(), any()}
  %% Aliased:
  %%    _267
  _562 = get_tuple_element _267, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _562
  _747 = bif:'=:=' _562, `ok`
  br _747, ^746, ^744

746:
  %% Argument types:
  %%    _267 => {any(), 'ok', any()}
  %% Aliased:
  %%    _267
  _561 = get_tuple_element _267, `2`

  %% lc_SUITE.erl:125
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _561
  _269 = call (`'-basic/1-lc$^33/1-32-'`/1), _561

  %% Unique:
  %%    _269
  _745 = succeeded:body _269
  br _745, ^745, ^1

745:
  %% Argument types:
  %%    _269 => list(any())
  %% Aliased:
  %%    _563
  %% Unique:
  %%    _269
  _732 = put_list _563, _269
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _732
  ret _732

744:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _562, 
  %%    _563
  _564 = put_tuple _563, _562

  %% Argument types:
  %%    _564 => {any(), any()}
  %% Unique:
  %%    _564
  _565 = put_tuple `badmatch`, _564

  %% lc_SUITE.erl:125
  %% Unique:
  %%    _565
  _733 = call (`erlang`:`error`/1), _565

  %% Aliased:
  %%    _733
  _748 = succeeded:body _733
  br ^1

743:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _754 = bif:'=:=' _267, `none`
  br _754, ^753, ^738

753:
  %% Result type:
  %%    nil()
  ret `[]`

738:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _557 = put_tuple `bad_generator`, _267

  %% Unique:
  %%    _557
  _735 = call (`erlang`:`error`/1), _557

  %% Aliased:
  %%    _735
  _755 = succeeded:body _735
  br ^1

1:
  _736 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _736
}

%% lc_SUITE.erl:124
%% Counter = 763
%% bs_ensure_opt: true
%% Parameters
%%    _257 =>
%%     bs_matchable(1)
%%     accepts_match_context
function `lc_SUITE`:`'-basic/1-lc$^32/1-31-'`(_257) {
0:
  %% Argument types:
  %%    _257 => bs_matchable(1)
  %% Aliased:
  %%    _257
  %% Anno: #{accepts_match_contexts => true}
  _539 = bs_start_match `new`, _257
  _758 = bs_ensure _539, `1`, `1`
  _759 = succeeded:guard _758
  br _759, ^757, ^733

757:
  %% lc_SUITE.erl:124
  %% Argument types:
  %%    _758 => bs_context(1)
  %% Aliased:
  %%    _539
  %% Anno: #{ensured => true}
  _540 = bs_match `integer`, _758, `[unsigned,big]`, `1`, `1`

  %% Aliased:
  %%    _540
  _734 = succeeded:guard _540
  br _734, ^734, ^733

734:
  %% Aliased:
  %%    _540
  _541 = bs_extract _540

  %% Argument types:
  %%    _541 => 0..1
  %% Unique:
  %%    _541
  _739 = bif:'=:=' _541, `0`
  br _739, ^738, ^733

738:
  _761 = bs_ensure _540, `7`, `1`
  _762 = succeeded:guard _761
  br _762, ^760, ^740

760:
  %% lc_SUITE.erl:124
  %% Argument types:
  %%    _761 => bs_context(1)
  %% Aliased:
  %%    _540
  %% Anno: #{ensured => true}
  _542 = bs_match `integer`, _761, `[unsigned,big]`, `7`, `1`

  %% Aliased:
  %%    _542
  _735 = succeeded:guard _542
  br _735, ^735, ^740

735:
  %% Aliased:
  %%    _542
  _543 = bs_extract _542

  %% lc_SUITE.erl:124
  %% Result type:
  %%    list(0..127)
  %% Aliased:
  %%    _542
  %% Anno: #{bsm_info => context_reused}
  _259 = call (`'-basic/1-lc$^32/1-31-'`/1), _542

  %% Unique:
  %%    _259
  _737 = succeeded:body _259
  br _737, ^737, ^1

737:
  %% Argument types:
  %%    _543 => 0..127
  %%    _259 => list(0..127)
  %% Unique:
  %%    _259, 
  %%    _543
  _728 = put_list _543, _259
  %% Result type:
  %%    nonempty_list(0..127)
  %% Unique:
  %%    _728
  ret _728

733:
  %% Aliased:
  %%    _539
  _741 = bs_test_tail _539, `0`
  br _741, ^741, ^740

741:
  %% Result type:
  %%    nil()
  ret `[]`

740:
  %% lc_SUITE.erl:124
  %% Aliased:
  %%    _539
  _546 = bs_get_tail _539

  %% Argument types:
  %%    _546 => bitstring(1)
  %% Aliased:
  %%    _546
  _548 = put_tuple `badmatch`, _546

  %% lc_SUITE.erl:124
  %% Unique:
  %%    _548
  _727 = call (`erlang`:`error`/1), _548

  %% Aliased:
  %%    _727
  _743 = succeeded:body _727
  br ^1

1:
  _751 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _751
}

%% lc_SUITE.erl:123
%% Counter = 743
%% bs_ensure_opt: true
%% Parameters
%%    _251 =>
%%     list(2 | {'ok', 1..3})
function `lc_SUITE`:`'-basic/1-lc$^31/1-30-'`(_251) {
0:
  %% Unique:
  %%    _251
  _738 = is_nonempty_list _251
  br _738, ^738, ^739

738:
  %% Argument types:
  %%    _251 => nonempty_list(2 | {'ok', 1..3})
  %% Unique:
  %%    _251
  _528 = get_hd _251

  %% Argument types:
  %%    _251 => nonempty_list(2 | {'ok', 1..3})
  %% Unique:
  %%    _251
  _527 = get_tl _251

  %% Argument types:
  %%    _528 => 2 | {'ok', 1..3}
  %% Unique:
  %%    _528
  _734 = bif:is_tuple _528
  br _734, ^731, ^741

731:
  %% lc_SUITE.erl:123
  %% Result type:
  %%    list(1..3)
  %% Unique:
  %%    _527
  _253 = call (`'-basic/1-lc$^31/1-30-'`/1), _527

  %% Unique:
  %%    _253
  _730 = succeeded:body _253
  br _730, ^730, ^1

730:
  %% Argument types:
  %%    _528 => {'ok', 1..3}
  %% Unique:
  %%    _528
  _530 = get_tuple_element _528, `1`

  %% Argument types:
  %%    _530 => 1..3
  %%    _253 => list(1..3)
  %% Unique:
  %%    _253, 
  %%    _530
  _722 = put_list _530, _253
  %% Result type:
  %%    nonempty_list(1..3)
  %% Unique:
  %%    _722
  ret _722

741:
  %% lc_SUITE.erl:123
  _723 = call (`erlang`:`error`/1), `{badmatch,2}`

  %% Aliased:
  %%    _723
  _737 = succeeded:body _723
  br ^1

1:
  _725 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _725

739:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:120
%% Counter = 737
%% bs_ensure_opt: true
%% Parameters
%%    _243 =>
%%     nonempty_list(1..2)
function `lc_SUITE`:`'-basic/1-lc$^30/1-29-'`(_243) {
0:
  %% lc_SUITE.erl:120
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _519 = call (`id`/1), `not_bool`

  %% Aliased:
  %%    _519
  _724 = succeeded:body _519
  br _724, ^726, ^1

726:
  %% lc_SUITE.erl:120
  %% Aliased:
  %%    _519
  _718 = match_fail `bad_filter`, _519

  %% Unique:
  %%    _718
  _731 = succeeded:body _718
  br ^1

1:
  _720 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _720
}

%% lc_SUITE.erl:119
%% Counter = 724
%% bs_ensure_opt: true
%% Parameters
%%    _236 =>
%%     'd' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`'-basic/1-lc$^29/1-28-'`(_236) {
0:
  %% Aliased:
  %%    _236
  _719 = is_nonempty_list _236
  br _719, ^719, ^717

719:
  %% Argument types:
  %%    _236 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _236
  _509 = get_hd _236

  %% Argument types:
  %%    _236 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _236
  _508 = get_tl _236

  %% lc_SUITE.erl:119
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _508
  _238 = call (`'-basic/1-lc$^29/1-28-'`/1), _508

  %% Unique:
  %%    _238
  _718 = succeeded:body _238
  br _718, ^718, ^1

718:
  %% Argument types:
  %%    _509 => 'a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %%    _238 => list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _509
  %% Unique:
  %%    _238
  _712 = put_list _509, _238
  %% Result type:
  %%    nonempty_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _712
  ret _712

717:
  %% Argument types:
  %%    _236 => 'd' | 'nomatch' | 'not_bool' | 'x' | nil()
  %% Aliased:
  %%    _236
  _720 = bif:'=:=' _236, `[]`
  br _720, ^720, ^716

720:
  %% Result type:
  %%    nil()
  ret `[]`

716:
  %% Argument types:
  %%    _236 => 'd' | 'nomatch' | 'not_bool' | 'x'
  %% Unique:
  %%    _236
  _507 = put_tuple `bad_generator`, _236

  %% lc_SUITE.erl:119
  %% Unique:
  %%    _507
  _713 = call (`erlang`:`error`/1), _507

  %% Aliased:
  %%    _713
  _721 = succeeded:body _713
  br ^1

1:
  _714 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _714
}

%% lc_SUITE.erl:118
%% Counter = 727
%% bs_ensure_opt: true
%% Parameters
%%    _227 =>
%%     list({'x', any()})
function `lc_SUITE`:`'-basic/1-lc$^28/1-27-'`(_227) {
0:
  %% Aliased:
  %%    _227
  _722 = is_nonempty_list _227
  br _722, ^722, ^723

722:
  %% Argument types:
  %%    _227 => nonempty_list({'x', any()})
  %% Aliased:
  %%    _227
  _502 = get_hd _227

  %% lc_SUITE.erl:118
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _502
  _503 = call (`odd`/1), _502

  %% Aliased:
  %%    _503
  _714 = succeeded:body _503
  br ^1

1:
  _710 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _710

723:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:117
%% Counter = 719
%% bs_ensure_opt: true
%% Parameters
%%    _220 =>
%%     list({'x', any()})
function `lc_SUITE`:`'-basic/1-lc$^27/1-26-'`(_220) {
0:
  %% Aliased:
  %%    _220
  _715 = is_nonempty_list _220
  br _715, ^715, ^716

715:
  %% Argument types:
  %%    _220 => nonempty_list({'x', any()})
  %% Aliased:
  %%    _220
  _493 = get_tl _220

  %% lc_SUITE.erl:117
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _493
  _703 = call (`'-basic/1-lc$^27/1-26-'`/1), _493

  %% Unique:
  %%    _703
  _714 = succeeded:body _703
  br _714, ^714, ^1

714:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _703
  ret _703

1:
  _705 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _705

716:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:116
%% Counter = 716
%% bs_ensure_opt: true
%% Parameters
%%    _211 =>
%%     list({'x', any()})
function `lc_SUITE`:`'-basic/1-lc$^26/1-25-'`(_211) {
0:
  %% Aliased:
  %%    _211
  _711 = is_nonempty_list _211
  br _711, ^711, ^712

711:
  %% Argument types:
  %%    _211 => nonempty_list({'x', any()})
  %% Aliased:
  %%    _211
  _486 = get_hd _211

  %% lc_SUITE.erl:116
  %% Aliased:
  %%    _486
  _210 = call (`erlang`:`list_to_atom`/1), _486

  %% Aliased:
  %%    _210
  _705 = succeeded:body _210
  br ^1

1:
  _701 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _701

712:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:115
%% Counter = 712
%% bs_ensure_opt: true
%% Parameters
%%    _203 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^25/1-24-'`(_203) {
0:
  %% Aliased:
  %%    _203
  _707 = is_nonempty_list _203
  br _707, ^707, ^708

707:
  %% Argument types:
  %%    _203 => nonempty_list(any())
  %% Aliased:
  %%    _203
  _477 = get_hd _203

  %% Argument types:
  %%    _203 => nonempty_list(any())
  %% Aliased:
  %%    _203
  _476 = get_tl _203

  %% lc_SUITE.erl:115
  %% Argument types:
  %%    
  %% Aliased:
  %%    _477
  _202 = bif:element `2`, _477

  %% Aliased:
  %%    _202
  _703 = succeeded:guard _202
  br _703, ^703, ^701

703:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _202
  _704 = bif:'=:=' _202, `no_no_no`
  br _704, ^704, ^701

704:
  %% lc_SUITE.erl:115
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Aliased:
  %%    _476
  _205 = call (`'-basic/1-lc$^25/1-24-'`/1), _476

  %% Unique:
  %%    _205
  _705 = succeeded:body _205
  br _705, ^705, ^1

705:
  %% Argument types:
  %%    _477 => {any(), any(), ...}
  %% Aliased:
  %%    _477
  _481 = put_tuple `xx`, _477

  %% Argument types:
  %%    _481 => {'xx', {any(), any(), ...}}
  %%    _205 => list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _205, 
  %%    _481
  _694 = put_list _481, _205
  %% Result type:
  %%    nonempty_list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _694
  ret _694

701:
  %% lc_SUITE.erl:115
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Aliased:
  %%    _476
  _695 = call (`'-basic/1-lc$^25/1-24-'`/1), _476

  %% Unique:
  %%    _695
  _706 = succeeded:body _695
  br _706, ^706, ^1

706:
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _695
  ret _695

1:
  _697 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _697

708:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:112
%% Counter = 715
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^24/1-23-'`(_194) {
0:
  %% Aliased:
  %%    _194
  _699 = is_nonempty_list _194
  br _699, ^713, ^696

713:
  %% lc_SUITE.erl:112
  %% Aliased:
  %%    _194
  _467 = call (`erts_internal`:`mc_refill`/1), _194

  %% Aliased:
  %%    _467
  _697 = succeeded:body _467
  br _697, ^697, ^1

697:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _467
  _691 = call (`'-basic/1-lc$^24/1-23-'`/1), _467

  %% Unique:
  %%    _691
  _698 = succeeded:body _691
  br _698, ^698, ^1

698:
  %% Result type:
  %%    list(number())
  %% Unique:
  %%    _691
  ret _691

696:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _707 = bif:is_tuple _194
  br _707, ^707, ^700

707:
  %% Argument types:
  %%    _194 => {...}
  %% Aliased:
  %%    _194
  _708 = bif:tuple_size _194

  %% Argument types:
  %%    _708 => 0..16777215
  %% Unique:
  %%    _708
  _709 = bif:'=:=' _708, `3`
  br _709, ^706, ^695

706:
  %% Argument types:
  %%    _194 => {any(), any(), any()}
  %% Aliased:
  %%    _194
  _470 = get_tuple_element _194, `0`

  %% Argument types:
  %%    _194 => {any(), any(), any()}
  %% Aliased:
  %%    _194
  _468 = get_tuple_element _194, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _470
  _702 = bif:'>' _470, `1`
  br _702, ^702, ^701

702:
  %% Argument types:
  %%    _194 => {any(), any(), any()}
  %% Aliased:
  %%    _194
  _469 = get_tuple_element _194, `1`

  %% lc_SUITE.erl:112
  %% Argument types:
  %%    _470 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _469, 
  %%    _470
  _196 = bif:'*' _470, _469

  %% Unique:
  %%    _196
  _703 = succeeded:body _196
  br _703, ^703, ^1

703:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _468
  _197 = call (`'-basic/1-lc$^24/1-23-'`/1), _468

  %% Unique:
  %%    _197
  _704 = succeeded:body _197
  br _704, ^704, ^1

704:
  %% Argument types:
  %%    _196 => number()
  %%    _197 => list(number())
  %% Unique:
  %%    _196, 
  %%    _197
  _689 = put_list _196, _197
  %% Result type:
  %%    nonempty_list(number())
  %% Unique:
  %%    _689
  ret _689

701:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _468
  _690 = call (`'-basic/1-lc$^24/1-23-'`/1), _468

  %% Unique:
  %%    _690
  _705 = succeeded:body _690
  br _705, ^705, ^1

705:
  %% Result type:
  %%    list(number())
  %% Unique:
  %%    _690
  ret _690

700:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _711 = bif:'=:=' _194, `none`
  br _711, ^710, ^695

710:
  %% Result type:
  %%    nil()
  ret `[]`

695:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _464 = put_tuple `bad_generator`, _194

  %% Unique:
  %%    _464
  _692 = call (`erlang`:`error`/1), _464

  %% Aliased:
  %%    _692
  _712 = succeeded:body _692
  br ^1

1:
  _693 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _693
}

%% lc_SUITE.erl:111
%% Counter = 719
%% bs_ensure_opt: true
%% Parameters
%%    _183 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `lc_SUITE`:`'-basic/1-lc$^23/1-22-'`(_183) {
0:
  %% Argument types:
  %%    _183 => bs_matchable(8)
  %% Aliased:
  %%    _183
  %% Anno: #{accepts_match_contexts => true}
  _448 = bs_start_match `new`, _183
  _717 = bs_ensure _448, `8`, `1`
  _718 = succeeded:guard _717
  br _718, ^716, ^701

716:
  %% lc_SUITE.erl:111
  %% Argument types:
  %%    _717 => bs_context(8)
  %% Aliased:
  %%    _448
  %% Anno: #{ensured => true}
  _449 = bs_match `integer`, _717, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _449
  _693 = succeeded:guard _449
  br _693, ^693, ^701

693:
  %% Aliased:
  %%    _449
  _450 = bs_extract _449

  %% Argument types:
  %%    _450 => 0..255
  %% Unique:
  %%    _450
  _696 = bif:'>' _450, `1`
  br _696, ^696, ^695

696:
  %% lc_SUITE.erl:111
  %% Argument types:
  %%    _450 => 2..255
  %% Unique:
  %%    _450
  _185 = bif:'+' _450, `1`

  %% lc_SUITE.erl:111
  %% Result type:
  %%    list(3..'+inf')
  %% Aliased:
  %%    _449
  %% Anno: #{bsm_info => context_reused}
  _186 = call (`'-basic/1-lc$^23/1-22-'`/1), _449

  %% Unique:
  %%    _186
  _698 = succeeded:body _186
  br _698, ^698, ^1

698:
  %% Argument types:
  %%    _185 => 3..256
  %%    _186 => list(3..'+inf')
  %% Unique:
  %%    _185, 
  %%    _186
  _686 = put_list _185, _186
  %% Result type:
  %%    nonempty_list(3..'+inf')
  %% Unique:
  %%    _686
  ret _686

695:
  %% lc_SUITE.erl:111
  %% Result type:
  %%    list(3..'+inf')
  %% Aliased:
  %%    _449
  %% Anno: #{bsm_info => context_reused}
  _687 = call (`'-basic/1-lc$^23/1-22-'`/1), _449

  %% Unique:
  %%    _687
  _699 = succeeded:body _687
  br _699, ^699, ^1

699:
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _687
  ret _687

1:
  _711 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _711

701:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:110
%% Counter = 698
%% bs_ensure_opt: true
%% Parameters
%%    _176 =>
%%     list(1..3)
function `lc_SUITE`:`'-basic/1-lc$^22/1-21-'`(_176) {
0:
  %% Unique:
  %%    _176
  _694 = is_nonempty_list _176
  br _694, ^694, ^695

694:
  %% Argument types:
  %%    _176 => nonempty_list(1..3)
  %% Unique:
  %%    _176
  _442 = get_hd _176

  %% Argument types:
  %%    _176 => nonempty_list(1..3)
  %% Unique:
  %%    _176
  _441 = get_tl _176

  %% Argument types:
  %%    _442 => 1..3
  %% Unique:
  %%    _442
  _690 = bif:'>' _442, `1`
  br _690, ^690, ^689

690:
  %% lc_SUITE.erl:110
  %% Argument types:
  %%    _442 => 2..3
  %% Unique:
  %%    _442
  _178 = bif:'+' _442, `1`

  %% lc_SUITE.erl:110
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _441
  _179 = call (`'-basic/1-lc$^22/1-21-'`/1), _441

  %% Unique:
  %%    _179
  _692 = succeeded:body _179
  br _692, ^692, ^1

692:
  %% Argument types:
  %%    _178 => 3..4
  %%    _179 => list(3..'+inf')
  %% Unique:
  %%    _178, 
  %%    _179
  _682 = put_list _178, _179
  %% Result type:
  %%    nonempty_list(3..'+inf')
  %% Unique:
  %%    _682
  ret _682

689:
  %% lc_SUITE.erl:110
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _441
  _683 = call (`'-basic/1-lc$^22/1-21-'`/1), _441

  %% Unique:
  %%    _683
  _693 = succeeded:body _683
  br _693, ^693, ^1

693:
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _683
  ret _683

1:
  _685 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _685

695:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:107
%% Counter = 700
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^21/1-20-'`(_168) {
0:
  %% Aliased:
  %%    _168
  _687 = is_nonempty_list _168
  br _687, ^698, ^684

698:
  %% lc_SUITE.erl:107
  %% Aliased:
  %%    _168
  _430 = call (`erts_internal`:`mc_refill`/1), _168

  %% Aliased:
  %%    _430
  _685 = succeeded:body _430
  br _685, ^685, ^1

685:
  %% lc_SUITE.erl:107
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _430
  _679 = call (`'-basic/1-lc$^21/1-20-'`/1), _430

  %% Unique:
  %%    _679
  _686 = succeeded:body _679
  br _686, ^686, ^1

686:
  %% Result type:
  %%    list(number())
  %% Unique:
  %%    _679
  ret _679

684:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _692 = bif:is_tuple _168
  br _692, ^692, ^688

692:
  %% Argument types:
  %%    _168 => {...}
  %% Aliased:
  %%    _168
  _693 = bif:tuple_size _168

  %% Argument types:
  %%    _693 => 0..16777215
  %% Unique:
  %%    _693
  _694 = bif:'=:=' _693, `3`
  br _694, ^691, ^683

691:
  %% Argument types:
  %%    _168 => {any(), any(), any()}
  %% Aliased:
  %%    _168
  _433 = get_tuple_element _168, `0`

  %% Argument types:
  %%    _168 => {any(), any(), any()}
  %% Aliased:
  %%    _168
  _432 = get_tuple_element _168, `1`

  %% lc_SUITE.erl:107
  %% Argument types:
  %%    
  %% Aliased:
  %%    _432, 
  %%    _433
  _170 = bif:'*' _433, _432

  %% Unique:
  %%    _170
  _689 = succeeded:body _170
  br _689, ^689, ^1

689:
  %% Argument types:
  %%    _168 => {any(), any(), any()}
  %% Aliased:
  %%    _168
  _431 = get_tuple_element _168, `2`

  %% lc_SUITE.erl:107
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _431
  _171 = call (`'-basic/1-lc$^21/1-20-'`/1), _431

  %% Unique:
  %%    _171
  _690 = succeeded:body _171
  br _690, ^690, ^1

690:
  %% Argument types:
  %%    _170 => number()
  %%    _171 => list(number())
  %% Unique:
  %%    _170, 
  %%    _171
  _678 = put_list _170, _171
  %% Result type:
  %%    nonempty_list(number())
  %% Unique:
  %%    _678
  ret _678

688:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _696 = bif:'=:=' _168, `none`
  br _696, ^695, ^683

695:
  %% Result type:
  %%    nil()
  ret `[]`

683:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _427 = put_tuple `bad_generator`, _168

  %% Unique:
  %%    _427
  _680 = call (`erlang`:`error`/1), _427

  %% Aliased:
  %%    _680
  _697 = succeeded:body _680
  br ^1

1:
  _681 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _681
}

%% lc_SUITE.erl:106
%% Counter = 705
%% bs_ensure_opt: true
%% Parameters
%%    _157 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `lc_SUITE`:`'-basic/1-lc$^20/1-19-'`(_157) {
0:
  %% Argument types:
  %%    _157 => bs_matchable(8)
  %% Aliased:
  %%    _157
  %% Anno: #{accepts_match_contexts => true}
  _415 = bs_start_match `new`, _157
  _703 = bs_ensure _415, `8`, `1`
  _704 = succeeded:guard _703
  br _704, ^702, ^687

702:
  %% lc_SUITE.erl:106
  %% Argument types:
  %%    _703 => bs_context(8)
  %% Aliased:
  %%    _415
  %% Anno: #{ensured => true}
  _416 = bs_match `integer`, _703, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _416
  _682 = succeeded:guard _416
  br _682, ^682, ^687

682:
  %% Aliased:
  %%    _416
  _417 = bs_extract _416

  %% lc_SUITE.erl:106
  %% Argument types:
  %%    _417 => 0..255
  %% Unique:
  %%    _417
  _159 = bif:'+' _417, `1`

  %% lc_SUITE.erl:106
  %% Result type:
  %%    list(1..'+inf')
  %% Aliased:
  %%    _416
  %% Anno: #{bsm_info => context_reused}
  _160 = call (`'-basic/1-lc$^20/1-19-'`/1), _416

  %% Unique:
  %%    _160
  _685 = succeeded:body _160
  br _685, ^685, ^1

685:
  %% Argument types:
  %%    _159 => 1..256
  %%    _160 => list(1..'+inf')
  %% Unique:
  %%    _159, 
  %%    _160
  _676 = put_list _159, _160
  %% Result type:
  %%    nonempty_list(1..'+inf')
  %% Unique:
  %%    _676
  ret _676

1:
  _697 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _697

687:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:105
%% Counter = 685
%% bs_ensure_opt: true
%% Parameters
%%    _150 =>
%%     list(1..3)
function `lc_SUITE`:`'-basic/1-lc$^19/1-18-'`(_150) {
0:
  %% Unique:
  %%    _150
  _681 = is_nonempty_list _150
  br _681, ^681, ^682

681:
  %% Argument types:
  %%    _150 => nonempty_list(1..3)
  %% Unique:
  %%    _150
  _411 = get_hd _150

  %% Argument types:
  %%    _150 => nonempty_list(1..3)
  %% Unique:
  %%    _150
  _410 = get_tl _150

  %% lc_SUITE.erl:105
  %% Argument types:
  %%    _411 => 1..3
  %% Unique:
  %%    _411
  _152 = bif:'+' _411, `1`

  %% lc_SUITE.erl:105
  %% Result type:
  %%    list(2..'+inf')
  %% Unique:
  %%    _410
  _153 = call (`'-basic/1-lc$^19/1-18-'`/1), _410

  %% Unique:
  %%    _153
  _680 = succeeded:body _153
  br _680, ^680, ^1

680:
  %% Argument types:
  %%    _152 => 2..4
  %%    _153 => list(2..'+inf')
  %% Unique:
  %%    _152, 
  %%    _153
  _673 = put_list _152, _153
  %% Result type:
  %%    nonempty_list(2..'+inf')
  %% Unique:
  %%    _673
  ret _673

1:
  _675 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _675

682:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:102
%% Counter = 683
%% bs_ensure_opt: true
%% Parameters
%%    _143 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^18/1-17-'`(_143) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:99
%% Counter = 690
%% bs_ensure_opt: true
%% Parameters
%%    _135 =>
%%     list({'a'})
function `lc_SUITE`:`'-basic/1-lc$^17/1-16-'`(_135) {
0:
  %% Unique:
  %%    _135
  _686 = is_nonempty_list _135
  br _686, ^686, ^687

686:
  %% Argument types:
  %%    _135 => nonempty_list({'a'})
  %% Unique:
  %%    _135
  _399 = get_tl _135

  %% lc_SUITE.erl:99
  %% Result type:
  %%    list({'a', 'a'})
  _137 = call (`'-basic/1-lc$^17/1-16-'`/1), _399

  %% Unique:
  %%    _137
  _678 = succeeded:body _137
  br _678, ^678, ^1

678:
  %% Argument types:
  %%    _137 => list({'a', 'a'})
  %% Unique:
  %%    _137
  _667 = put_list `{a,a}`, _137
  %% Result type:
  %%    nonempty_list({'a', 'a'})
  %% Unique:
  %%    _667
  ret _667

1:
  _671 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _671

687:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:98
%% Counter = 686
%% bs_ensure_opt: true
%% Parameters
%%    _126 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^16/1-15-'`(_126) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:95
%% Counter = 675
%% bs_ensure_opt: true
%% Parameters
%%    _118 =>
%%     list(nonempty_list(97..98))
function `lc_SUITE`:`'-basic/1-lc$^15/1-14-'`(_118) {
0:
  %% Unique:
  %%    _118
  _671 = is_nonempty_list _118
  br _671, ^671, ^672

671:
  %% Argument types:
  %%    _118 => nonempty_list(nonempty_list(97..98))
  %% Unique:
  %%    _118
  _387 = get_hd _118

  %% Argument types:
  %%    _118 => nonempty_list(nonempty_list(97..98))
  %% Unique:
  %%    _118
  _386 = get_tl _118

  %% Argument types:
  %%    _387 => nonempty_list(97..98)
  %% Unique:
  %%    _387
  _669 = bif:'=:=' _387, `"ab"`
  br _669, ^669, ^667

669:
  %% lc_SUITE.erl:95
  %% Result type:
  %%    list('t')
  _120 = call (`'-basic/1-lc$^15/1-14-'`/1), _386

  %% Unique:
  %%    _120
  _668 = succeeded:body _120
  br _668, ^668, ^1

668:
  %% Argument types:
  %%    _120 => list('t')
  %% Unique:
  %%    _120
  _660 = put_list `t`, _120
  %% Result type:
  %%    nonempty_list('t')
  %% Unique:
  %%    _660
  ret _660

667:
  %% lc_SUITE.erl:95
  %% Result type:
  %%    list('t')
  _661 = call (`'-basic/1-lc$^15/1-14-'`/1), _386

  %% Unique:
  %%    _661
  _670 = succeeded:body _661
  br _670, ^670, ^1

670:
  %% Result type:
  %%    list('t')
  %% Unique:
  %%    _661
  ret _661

1:
  _663 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _663

672:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:94
%% Counter = 670
%% bs_ensure_opt: true
%% Parameters
%%    _111 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^14/1-13-'`(_111) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:93
%% Counter = 668
%% bs_ensure_opt: true
%% Parameters
%%    _104 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^13/1-12-'`(_104) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:87
%% Counter = 671
%% bs_ensure_opt: true
%% Parameters
%%    _96 =>
%%     list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
function `lc_SUITE`:`'-basic/1-lc$^12/1-11-'`(_96) {
0:
  %% Unique:
  %%    _96
  _666 = is_nonempty_list _96
  br _666, ^666, ^667

666:
  %% Argument types:
  %%    _96 => nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _96
  _376 = get_hd _96

  %% Argument types:
  %%    _96 => nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _96
  _375 = get_tl _96

  %% lc_SUITE.erl:87
  %% Argument types:
  %%    _376 => 'glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'}
  %% Unique:
  %%    _376
  _94 = bif:element `3`, _376

  %% Unique:
  %%    _94
  _662 = succeeded:guard _94
  br _662, ^662, ^660

662:
  %% Argument types:
  %%    _94 => 'd' | 'false' | 'true'
  %% Unique:
  %%    _94
  _663 = bif:'=:=' _94, `true`
  br _663, ^663, ^660

663:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _375
  _98 = call (`'-basic/1-lc$^12/1-11-'`/1), _375

  %% Unique:
  %%    _98
  _664 = succeeded:body _98
  br _664, ^664, ^1

664:
  %% Argument types:
  %%    _376 => {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'}
  %%    _98 => list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _98, 
  %%    _376
  _653 = put_list _376, _98
  %% Result type:
  %%    nonempty_list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _653
  ret _653

660:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _375
  _654 = call (`'-basic/1-lc$^12/1-11-'`/1), _375

  %% Unique:
  %%    _654
  _665 = succeeded:body _654
  br _665, ^665, ^1

665:
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _654
  ret _654

1:
  _656 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _656

667:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:83
%% Counter = 674
%% bs_ensure_opt: true
%% Parameters
%%    _83 =>
%%     list(any())
%%    _86 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^11/1-10-'`(_86, _83) {
0:
  %% Aliased:
  %%    _86
  _669 = is_nonempty_list _86
  br _669, ^669, ^670

669:
  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Aliased:
  %%    _86
  _370 = get_hd _86

  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Aliased:
  %%    _86
  _369 = get_tl _86

  %% lc_SUITE.erl:83
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _370
  _371 = call (`odd`/1), _370

  %% Unique:
  %%    _371
  _657 = succeeded:body _371
  br _657, ^657, ^1

657:
  br _371, ^666, ^667

666:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _370
  _663 = bif:'=:=' _370, `7`
  br _663, ^662, ^663

662:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  %% Unique:
  %%    _83
  _649 = call (`'-basic/1-lc$^11/1-10-'`/2), _369, _83

  %% Unique:
  %%    _649
  _665 = succeeded:body _649
  br _665, ^665, ^1

665:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _649
  ret _649

663:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  %% Unique:
  %%    _83
  _88 = call (`'-basic/1-lc$^11/1-10-'`/2), _369, _83

  %% Unique:
  %%    _88
  _664 = succeeded:body _88
  br _664, ^664, ^1

664:
  %% Argument types:
  %%    _88 => list(any())
  %% Aliased:
  %%    _370
  %% Unique:
  %%    _88
  _648 = put_list _370, _88
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _648
  ret _648

667:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  %% Unique:
  %%    _83
  _650 = call (`'-basic/1-lc$^11/1-10-'`/2), _369, _83

  %% Unique:
  %%    _650
  _660 = succeeded:body _650
  br _660, ^660, ^1

660:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _650
  ret _650

1:
  _653 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _653

670:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _83
  ret _83
}

%% lc_SUITE.erl:84
%% Counter = 669
%% bs_ensure_opt: true
%% Parameters
%%    _79 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^10/1-9-'`(_79) {
0:
  %% Aliased:
  %%    _79
  _664 = is_nonempty_list _79
  br _664, ^664, ^665

664:
  %% Argument types:
  %%    _79 => nonempty_list(any())
  %% Aliased:
  %%    _79
  _363 = get_hd _79

  %% Argument types:
  %%    _79 => nonempty_list(any())
  %% Aliased:
  %%    _79
  _362 = get_tl _79

  %% lc_SUITE.erl:84
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _363
  _364 = call (`odd`/1), _363

  %% Unique:
  %%    _364
  _652 = succeeded:body _364
  br _652, ^652, ^1

652:
  br _364, ^662, ^661

662:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _362
  _645 = call (`'-basic/1-lc$^10/1-9-'`/1), _362

  %% Unique:
  %%    _645
  _655 = succeeded:body _645
  br _655, ^655, ^1

655:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _645
  ret _645

661:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _363
  _658 = bif:'=:=' _363, `6`
  br _658, ^657, ^658

657:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _362
  _644 = call (`'-basic/1-lc$^10/1-9-'`/1), _362

  %% Unique:
  %%    _644
  _660 = succeeded:body _644
  br _660, ^660, ^1

660:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _644
  ret _644

658:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _362
  _81 = call (`'-basic/1-lc$^10/1-9-'`/1), _362

  %% Unique:
  %%    _81
  _659 = succeeded:body _81
  br _659, ^659, ^1

659:
  %% Argument types:
  %%    _81 => list(any())
  %% Aliased:
  %%    _363
  %% Unique:
  %%    _81
  _643 = put_list _363, _81
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _643
  ret _643

1:
  _648 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _648

665:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:80
%% Counter = 664
%% bs_ensure_opt: true
%% Parameters
%%    _70 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^9/1-8-'`(_70) {
0:
  %% Aliased:
  %%    _70
  _659 = is_nonempty_list _70
  br _659, ^659, ^660

659:
  %% Argument types:
  %%    _70 => nonempty_list(any())
  %% Aliased:
  %%    _70
  _356 = get_hd _70

  %% Argument types:
  %%    _70 => nonempty_list(any())
  %% Aliased:
  %%    _70
  _355 = get_tl _70

  %% lc_SUITE.erl:80
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _356
  _357 = call (`odd`/1), _356

  %% Unique:
  %%    _357
  _647 = succeeded:body _357
  br _647, ^647, ^1

647:
  br _357, ^657, ^656

657:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _355
  _640 = call (`'-basic/1-lc$^9/1-8-'`/1), _355

  %% Unique:
  %%    _640
  _650 = succeeded:body _640
  br _650, ^650, ^1

650:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _640
  ret _640

656:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _356
  _653 = bif:'=:=' _356, `6`
  br _653, ^652, ^653

652:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _355
  _639 = call (`'-basic/1-lc$^9/1-8-'`/1), _355

  %% Unique:
  %%    _639
  _655 = succeeded:body _639
  br _655, ^655, ^1

655:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _639
  ret _639

653:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _355
  _72 = call (`'-basic/1-lc$^9/1-8-'`/1), _355

  %% Unique:
  %%    _72
  _654 = succeeded:body _72
  br _654, ^654, ^1

654:
  %% Argument types:
  %%    _72 => list(any())
  %% Aliased:
  %%    _356
  %% Unique:
  %%    _72
  _638 = put_list _356, _72
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _638
  ret _638

1:
  _643 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _643

660:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:79
%% Counter = 659
%% bs_ensure_opt: true
%% Parameters
%%    _61 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^8/1-7-'`(_61) {
0:
  %% Aliased:
  %%    _61
  _654 = is_nonempty_list _61
  br _654, ^654, ^655

654:
  %% Argument types:
  %%    _61 => nonempty_list(any())
  %% Aliased:
  %%    _61
  _350 = get_hd _61

  %% Argument types:
  %%    _61 => nonempty_list(any())
  %% Aliased:
  %%    _61
  _349 = get_tl _61

  %% lc_SUITE.erl:79
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _350
  _351 = call (`odd`/1), _350

  %% Unique:
  %%    _351
  _642 = succeeded:body _351
  br _642, ^642, ^1

642:
  br _351, ^651, ^652

651:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _350
  _648 = bif:'=:=' _350, `7`
  br _648, ^647, ^648

647:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _349
  _634 = call (`'-basic/1-lc$^8/1-7-'`/1), _349

  %% Unique:
  %%    _634
  _650 = succeeded:body _634
  br _650, ^650, ^1

650:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _634
  ret _634

648:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _349
  _63 = call (`'-basic/1-lc$^8/1-7-'`/1), _349

  %% Unique:
  %%    _63
  _649 = succeeded:body _63
  br _649, ^649, ^1

649:
  %% Argument types:
  %%    _63 => list(any())
  %% Aliased:
  %%    _350
  %% Unique:
  %%    _63
  _633 = put_list _350, _63
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _633
  ret _633

652:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _349
  _635 = call (`'-basic/1-lc$^8/1-7-'`/1), _349

  %% Unique:
  %%    _635
  _645 = succeeded:body _635
  br _645, ^645, ^1

645:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _635
  ret _635

1:
  _638 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _638

655:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:78
%% Counter = 650
%% bs_ensure_opt: true
%% Parameters
%%    _53 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^7/1-6-'`(_53) {
0:
  %% Aliased:
  %%    _53
  _645 = is_nonempty_list _53
  br _645, ^645, ^646

645:
  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _53
  _344 = get_hd _53

  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _53
  _343 = get_tl _53

  %% lc_SUITE.erl:78
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _344
  _345 = call (`odd`/1), _344

  %% Unique:
  %%    _345
  _637 = succeeded:body _345
  br _637, ^637, ^1

637:
  br _345, ^643, ^642

643:
  %% lc_SUITE.erl:78
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _343
  _630 = call (`'-basic/1-lc$^7/1-6-'`/1), _343

  %% Unique:
  %%    _630
  _640 = succeeded:body _630
  br _640, ^640, ^1

640:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _630
  ret _630

642:
  %% lc_SUITE.erl:78
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _343
  _55 = call (`'-basic/1-lc$^7/1-6-'`/1), _343

  %% Unique:
  %%    _55
  _641 = succeeded:body _55
  br _641, ^641, ^1

641:
  %% Argument types:
  %%    _55 => list(any())
  %% Aliased:
  %%    _344
  %% Unique:
  %%    _55
  _629 = put_list _344, _55
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _629
  ret _629

1:
  _633 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _633

646:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:77
%% Counter = 646
%% bs_ensure_opt: true
%% Parameters
%%    _44 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^6/1-5-'`(_44) {
0:
  %% Aliased:
  %%    _44
  _641 = is_nonempty_list _44
  br _641, ^641, ^642

641:
  %% Argument types:
  %%    _44 => nonempty_list(any())
  %% Aliased:
  %%    _44
  _338 = get_hd _44

  %% Argument types:
  %%    _44 => nonempty_list(any())
  %% Aliased:
  %%    _44
  _337 = get_tl _44

  %% lc_SUITE.erl:77
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _338
  _339 = call (`odd`/1), _338

  %% Unique:
  %%    _339
  _633 = succeeded:body _339
  br _633, ^633, ^1

633:
  br _339, ^638, ^639

638:
  %% lc_SUITE.erl:77
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _337
  _46 = call (`'-basic/1-lc$^6/1-5-'`/1), _337

  %% Unique:
  %%    _46
  _637 = succeeded:body _46
  br _637, ^637, ^1

637:
  %% Argument types:
  %%    _46 => list(any())
  %% Aliased:
  %%    _338
  %% Unique:
  %%    _46
  _625 = put_list _338, _46
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _625
  ret _625

639:
  %% lc_SUITE.erl:77
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _337
  _626 = call (`'-basic/1-lc$^6/1-5-'`/1), _337

  %% Unique:
  %%    _626
  _636 = succeeded:body _626
  br _636, ^636, ^1

636:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _626
  ret _626

1:
  _629 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _629

642:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:76
%% Counter = 642
%% bs_ensure_opt: true
%% Parameters
%%    _37 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^5/1-4-'`(_37) {
0:
  %% Aliased:
  %%    _37
  _634 = is_nonempty_list _37
  br _634, ^634, ^635

634:
  %% Argument types:
  %%    _37 => nonempty_list(any())
  %% Aliased:
  %%    _37
  _331 = get_tl _37

  %% lc_SUITE.erl:76
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _331
  _623 = call (`'-basic/1-lc$^5/1-4-'`/1), _331

  %% Unique:
  %%    _623
  _633 = succeeded:body _623
  br _633, ^633, ^1

633:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _623
  ret _623

1:
  _625 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _625

635:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:75
%% Counter = 639
%% bs_ensure_opt: true
%% Parameters
%%    _28 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^4/1-3-'`(_28) {
0:
  %% Aliased:
  %%    _28
  _631 = is_nonempty_list _28
  br _631, ^631, ^632

631:
  %% Argument types:
  %%    _28 => nonempty_list(any())
  %% Aliased:
  %%    _28
  _326 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_list(any())
  %% Aliased:
  %%    _28
  _325 = get_tl _28

  %% lc_SUITE.erl:75
  %% Argument types:
  %%    
  %% Aliased:
  %%    _326
  _26 = bif:'>' _326, `3`
  br _26, ^636, ^626

636:
  %% lc_SUITE.erl:75
  %% Argument types:
  %%    _326 => atom() | maybe_improper_list(any(), any()) | number(3, '+inf') | {...} | other()
  %% Aliased:
  %%    _326
  _27 = bif:'<' _326, `7`
  br _27, ^628, ^626

628:
  %% lc_SUITE.erl:75
  %% Result type:
  %%    list(number(3, 7))
  %% Aliased:
  %%    _325
  _30 = call (`'-basic/1-lc$^4/1-3-'`/1), _325

  %% Unique:
  %%    _30
  _629 = succeeded:body _30
  br _629, ^629, ^1

629:
  %% Argument types:
  %%    _326 => number(3, 7)
  %%    _30 => list(number(3, 7))
  %% Unique:
  %%    _30, 
  %%    _326
  _619 = put_list _326, _30
  %% Result type:
  %%    nonempty_list(number(3, 7))
  %% Unique:
  %%    _619
  ret _619

626:
  %% lc_SUITE.erl:75
  %% Result type:
  %%    list(number(3, 7))
  %% Aliased:
  %%    _325
  _620 = call (`'-basic/1-lc$^4/1-3-'`/1), _325

  %% Unique:
  %%    _620
  _630 = succeeded:body _620
  br _630, ^630, ^1

630:
  %% Result type:
  %%    list(number(3, 7))
  %% Unique:
  %%    _620
  ret _620

1:
  _622 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _622

632:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:74
%% Counter = 631
%% bs_ensure_opt: true
%% Parameters
%%    _19 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^3/1-2-'`(_19) {
0:
  %% Aliased:
  %%    _19
  _627 = is_nonempty_list _19
  br _627, ^627, ^628

627:
  %% Argument types:
  %%    _19 => nonempty_list(any())
  %% Aliased:
  %%    _19
  _321 = get_hd _19

  %% Argument types:
  %%    _19 => nonempty_list(any())
  %% Aliased:
  %%    _19
  _320 = get_tl _19

  %% Argument types:
  %%    
  %% Aliased:
  %%    _321
  _624 = bif:'<' _321, `6`
  br _624, ^624, ^623

624:
  %% lc_SUITE.erl:74
  %% Result type:
  %%    list(number('-inf', 6))
  %% Aliased:
  %%    _320
  _21 = call (`'-basic/1-lc$^3/1-2-'`/1), _320

  %% Unique:
  %%    _21
  _625 = succeeded:body _21
  br _625, ^625, ^1

625:
  %% Argument types:
  %%    _321 => number('-inf', 6)
  %%    _21 => list(number('-inf', 6))
  %% Unique:
  %%    _21, 
  %%    _321
  _616 = put_list _321, _21
  %% Result type:
  %%    nonempty_list(number('-inf', 6))
  %% Unique:
  %%    _616
  ret _616

623:
  %% lc_SUITE.erl:74
  %% Result type:
  %%    list(number('-inf', 6))
  %% Aliased:
  %%    _320
  _617 = call (`'-basic/1-lc$^3/1-2-'`/1), _320

  %% Unique:
  %%    _617
  _626 = succeeded:body _617
  br _626, ^626, ^1

626:
  %% Result type:
  %%    list(number('-inf', 6))
  %% Unique:
  %%    _617
  ret _617

1:
  _619 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _619

628:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:73
%% Counter = 626
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-fun-2-'`(_13) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _622 = is_tagged_tuple _13, `2`, `x`
  br _622, ^619, ^618

619:
  %% Argument types:
  %%    _13 => {'x', any()}
  %% Aliased:
  %%    _13
  _314 = get_tuple_element _13, `1`
  %% Aliased:
  %%    _314
  ret _314

618:
  %% lc_SUITE.erl:73
  %% Aliased:
  %%    _13
  %% Anno: #{inlined => {'-basic/1-inlined-1-',1}}
  _615 = match_fail `function_clause`, _13

  %% Unique:
  %%    _615
  _625 = succeeded:body _615
  br ^1

1:
  _616 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _616
}

%% lc_SUITE.erl:72
%% Counter = 625
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^1/1-0-'`(_8) {
0:
  %% Aliased:
  %%    _8
  _620 = is_nonempty_list _8
  br _620, ^620, ^618

620:
  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _311 = get_hd _8

  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _310 = get_tl _8

  %% lc_SUITE.erl:72
  %% Result type:
  %%    list({'x', any()})
  %% Aliased:
  %%    _310
  _10 = call (`'-basic/1-lc$^1/1-0-'`/1), _310

  %% Unique:
  %%    _10
  _619 = succeeded:body _10
  br _619, ^619, ^1

619:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _311
  _312 = put_tuple `x`, _311

  %% Argument types:
  %%    _312 => {'x', any()}
  %%    _10 => list({'x', any()})
  %% Unique:
  %%    _10, 
  %%    _312
  _613 = put_list _312, _10
  %% Result type:
  %%    nonempty_list({'x', any()})
  %% Unique:
  %%    _613
  ret _613

618:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _621 = bif:'=:=' _8, `[]`
  br _621, ^621, ^617

621:
  %% Result type:
  %%    nil()
  ret `[]`

617:
  %% Argument types:
  %%    _8 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _8
  _309 = put_tuple `bad_generator`, _8

  %% lc_SUITE.erl:72
  %% Unique:
  %%    _309
  _614 = call (`erlang`:`error`/1), _309

  %% Aliased:
  %%    _614
  _622 = succeeded:body _614
  br ^1

1:
  _615 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _615
}

%% lc_SUITE.erl:71
%% Counter = 615
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-fun-0-'`(_2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _612 = put_tuple `x`, _2
  %% Result type:
  %%    {'x', any()}
  %% Unique:
  %%    _612
  ret _612
}
