module misc_SUITE.
exports [{all,0},
         {behaviour_info,1},
         {confused_literals,1},
         {empty_string,1},
         {end_per_group,2},
         {end_per_suite,1},
         {end_per_testcase,2},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {init_per_testcase,2},
         {integer_encoding,0},
         {integer_encoding,1},
         {md5,1},
         {module_info,0},
         {module_info,1},
         {override_bif,1},
         {silly_coverage,1},
         {suite,0},
         {tobias,1}].
attributes [].

%% misc_SUITE.erl:55
%% Counter = 18
%% bs_ensure_opt: true
function `misc_SUITE`:`init_per_testcase`(_0, _1) {
0:
  %% misc_SUITE.erl:55
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% misc_SUITE.erl:55
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    maybe_improper_list(any(), any())
  %% Aliased:
  %%    _1
  ret _1

10:
  %% misc_SUITE.erl:55
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-init_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% misc_SUITE.erl:58
%% Counter = 18
%% bs_ensure_opt: true
function `misc_SUITE`:`end_per_testcase`(_0, _1) {
0:
  %% misc_SUITE.erl:58
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% misc_SUITE.erl:58
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% misc_SUITE.erl:58
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-end_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% misc_SUITE.erl:61
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')} | {'timetrap', {'minutes', 10}})
  ret `[{ct_hooks,[ts_install_cth]},{timetrap,{minutes,10}}]`
}

%% misc_SUITE.erl:66
%% Counter = 9
%% bs_ensure_opt: true
function `misc_SUITE`:`all`() {
0:
  _2 = nif_start

  %% misc_SUITE.erl:67
  %% Result type:
  %%    nonempty_list({'group', 'slow'})
  _0 = call (`slow_group`/0)

  %% Unique:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% misc_SUITE.erl:67
  %% Unique:
  %%    _0
  _3 = call (`erlang`:`'++'`/2), _0, `[{group,p}]`
  %% Result type:
  %%    nonempty_list({'group', 'p' | 'slow'})
  %% Aliased:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% misc_SUITE.erl:69
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nonempty_list({'p', nonempty_list('parallel'), nonempty_list('confused_literals' | 'empty_string' | 'override_bif' | 'silly_coverage' | 'tobias')} | {'slow', nonempty_list('parallel'), nonempty_list('integer_encoding' | 'md5')})
  ret `[{p,[parallel],
     [tobias,empty_string,silly_coverage,confused_literals,override_bif]},
  {slow,[parallel],[integer_encoding,md5]}]`
}

%% misc_SUITE.erl:75
%% Counter = 11
%% bs_ensure_opt: true
function `misc_SUITE`:`init_per_suite`(_0) {
0:
  %% misc_SUITE.erl:76
  _2 = call (`test_lib`:`recompile`/1), `misc_SUITE`

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_atom _0
  br _9, ^9, ^7

9:
  %% misc_SUITE.erl:80
  _3 = call (`erlang`:`load_nif`/2), `"no_real_nif"`, `42`

  %% Aliased:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^7, ^1

7:
  %% Aliased:
  %%    _0
  ret _0

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% misc_SUITE.erl:86
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% misc_SUITE.erl:89
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% misc_SUITE.erl:92
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% misc_SUITE.erl:95
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`slow_group`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'slow'})
  ret `[{group,slow}]`
}

%% misc_SUITE.erl:108
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1
function `misc_SUITE`:`abs`(_0) {
0:
  %% Result type:
  %%    'dummy_abs'
  ret `dummy_abs`
}

%% misc_SUITE.erl:111
%% Counter = 5
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     bitstring(8)
%%    _1 =>
%%     1
%%    _2 =>
%%     1
function `misc_SUITE`:`binary_part`(_0, _1, _2) {
0:
  %% Result type:
  %%    'dummy_bp'
  ret `dummy_bp`
}

%% misc_SUITE.erl:115
%% Counter = 75
%% bs_ensure_opt: true
function `misc_SUITE`:`override_bif`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _34 = bif:is_list _0
  br _34, ^34, ^33

34:
  %% misc_SUITE.erl:116
  %% Result type:
  %%    'dummy_abs'
  _14 = call (`abs`/1), `1`

  %% Unique:
  %%    _14
  _35 = succeeded:body _14
  br _35, ^70, ^1

70:
  %% misc_SUITE.erl:117
  %% Result type:
  %%    'dummy_bp'
  _15 = call (`binary_part`/3), `<<"hello">>`, `1`, `1`

  %% Unique:
  %%    _15
  _38 = succeeded:body _15
  br _38, ^67, ^1

67:
  %% misc_SUITE.erl:118
  _16 = call (`test_lib`:`binary_part`/2), `<<"hello">>`, `{1,1}`

  %% Aliased:
  %%    _16
  _41 = succeeded:body _16
  br _41, ^41, ^1

41:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _65 = bif:'=:=' _16, `dummy`
  br _65, ^74, ^43

74:
  %% misc_SUITE.erl:127
  %% Result type:
  %%    'four' | 0..288230376151711743
  %% Argument types:
  %%    (`'-override_bif/1-fun-0-'`/1) => fun((_) -> 'four' | 0..288230376151711743)
  _20 = call (`'-override_bif/1-fun-0-'`/1), `<<1,2,3,4>>`

  %% Unique:
  %%    _20
  _48 = succeeded:body _20
  br _48, ^48, ^1

48:
  %% Argument types:
  %%    _20 => 'four' | 0..288230376151711743
  %% Unique:
  %%    _20
  _58 = bif:'=:=' _20, `four`
  br _58, ^57, ^50

57:
  %% misc_SUITE.erl:128
  %% Result type:
  %%    'four' | 0..288230376151711743
  %% Argument types:
  %%    (`'-override_bif/1-fun-0-'`/1) => fun((_) -> 'four' | 0..288230376151711743)
  _21 = call (`'-override_bif/1-fun-0-'`/1), `<<1,2,3,4,5>>`

  %% Unique:
  %%    _21
  _51 = succeeded:body _21
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    _21 => 'four' | 0..288230376151711743
  %% Unique:
  %%    _21
  _55 = bif:'=:=' _21, `5`
  br _55, ^54, ^53

54:
  %% Result type:
  %%    'ok'
  ret `ok`

53:
  %% misc_SUITE.erl:128
  %% Unique:
  %%    _21
  _23 = match_fail `badmatch`, _21

  %% Unique:
  %%    _23
  _56 = succeeded:body _23
  br ^1

50:
  %% misc_SUITE.erl:127
  %% Unique:
  %%    _20
  _24 = match_fail `badmatch`, _20

  %% Unique:
  %%    _24
  _59 = succeeded:body _24
  br ^1

43:
  %% misc_SUITE.erl:118
  %% Aliased:
  %%    _16
  _27 = match_fail `badmatch`, _16

  %% Unique:
  %%    _27
  _66 = succeeded:body _27
  br ^1

33:
  %% misc_SUITE.erl:115
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-override_bif/1-',1}}
  _30 = match_fail `function_clause`, _0

  %% Unique:
  %%    _30
  _73 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% misc_SUITE.erl:133
%% Counter = 17
%% bs_ensure_opt: true
function `misc_SUITE`:`tobias`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% misc_SUITE.erl:134
  %% Result type:
  %%    1..3
  _3 = call (`tobias_1`/1), `[1,2,3]`

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => 1..3
  %% Unique:
  %%    _3
  _14 = bif:'=:=' _3, `1`
  br _14, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% misc_SUITE.erl:134
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _15 = succeeded:body _4
  br ^1

8:
  %% misc_SUITE.erl:133
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tobias/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% misc_SUITE.erl:137
%% Counter = 13
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(1..3)
function `misc_SUITE`:`tobias_1`(_0) {
0:
  %% Argument types:
  %%    _0 => nonempty_list(1..3)
  %% Unique:
  %%    _0
  _3 = get_hd _0

  %% misc_SUITE.erl:140
  %% Result type:
  %%    2
  _4 = call (`tobias_2`/2), `0`, `0`

  %% Unique:
  %%    _4
  _9 = succeeded:body _4
  br _9, ^9, ^1

9:
  %% Result type:
  %%    1..3
  %% Unique:
  %%    _3
  ret _3

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% misc_SUITE.erl:143
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     0
%%    _1 =>
%%     0
function `misc_SUITE`:`tobias_2`(_0, _1) {
0:
  %% Result type:
  %%    2
  ret `2`
}

%% misc_SUITE.erl:154
%% Counter = 16
%% bs_ensure_opt: true
function `misc_SUITE`:`empty_string`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% misc_SUITE.erl:155
  %% Result type:
  %%    {'r', nonempty_list(120)}
  _3 = call (`empty_string_1`/1), `{r,[]}`

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => {'r', nonempty_list(120)}
  %% Unique:
  %%    _3
  _13 = bif:'=:=' _3, `{r,"x"}`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% misc_SUITE.erl:155
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% misc_SUITE.erl:154
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-empty_string/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% misc_SUITE.erl:158
%% Counter = 27
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     {'r', nil()}
function `misc_SUITE`:`empty_string_1`(_0) {
0:
  %% Result type:
  %%    {'r', nonempty_list(120)}
  ret `{r,"x"}`
}

%% misc_SUITE.erl:163
%% Counter = 26
%% bs_ensure_opt: true
function `misc_SUITE`:`md5`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _15 = bif:is_list _0
  br _15, ^15, ^14

15:
  %% misc_SUITE.erl:164
  _1 = call (`code`:`which`/1), `misc_SUITE`

  %% Aliased:
  %%    _1
  _16 = succeeded:body _1
  br _16, ^16, ^1

16:
  %% misc_SUITE.erl:164
  %% Aliased:
  %%    _1
  Dir = call (`filename`:`dirname`/1), _1

  %% Aliased:
  %%    Dir
  _17 = succeeded:body Dir
  br _17, ^17, ^1

17:
  %% misc_SUITE.erl:165
  %% Aliased:
  %%    Dir
  _3 = call (`filename`:`join`/2), Dir, `"*.beam"`

  %% Aliased:
  %%    _3
  _18 = succeeded:body _3
  br _18, ^18, ^1

18:
  %% misc_SUITE.erl:165
  %% Aliased:
  %%    _3
  Beams = call (`filelib`:`wildcard`/1), _3

  %% Aliased:
  %%    Beams
  _19 = succeeded:body Beams
  br _19, ^19, ^1

19:
  %% misc_SUITE.erl:166
  %% Argument types:
  %%    
  %% Aliased:
  %%    Beams
  _5 = bif:length Beams

  %% Unique:
  %%    _5
  _20 = succeeded:body _5
  br _20, ^20, ^1

20:
  %% Argument types:
  %%    _5 => 0..288230376151711743
  %% Unique:
  %%    _5
  _8 = put_list _5, `[]`

  %% misc_SUITE.erl:166
  %% Unique:
  %%    _8
  _9 = call (`io`:`format`/2), `"Found ~w beam files"`, _8

  %% Aliased:
  %%    _9
  _21 = succeeded:body _9
  br _21, ^21, ^1

21:
  %% Result type:
  %%    {any(), bs_matchable(1)}
  _6 = make_fun (`md5_1`/1)

  %% misc_SUITE.erl:167
  %% Aliased:
  %%    _6, 
  %%    Beams
  _10 = call (`lists`:`foreach`/2), _6, Beams

  %% Aliased:
  %%    _10
  _22 = succeeded:body _10
  br _22, ^22, ^1

22:
  %% Aliased:
  %%    _10
  ret _10

14:
  %% misc_SUITE.erl:163
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-md5/1-',1}}
  _11 = match_fail `function_clause`, _0

  %% Unique:
  %%    _11
  _23 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% misc_SUITE.erl:169
%% Counter = 74
%% bs_ensure_opt: true
function `misc_SUITE`:`md5_1`(_0) {
0:
  %% misc_SUITE.erl:170
  %% Aliased:
  %%    _0
  _12 = call (`beam_lib`:`version`/1), _0

  %% Aliased:
  %%    _12
  _32 = succeeded:body _12
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _63 = is_tagged_tuple _12, `2`, `ok`
  br _63, ^60, ^34

60:
  %% Argument types:
  %%    _12 => {'ok', any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _57 = bif:is_tuple _13
  br _57, ^57, ^34

57:
  %% Argument types:
  %%    _13 => {...}
  %% Aliased:
  %%    _13
  _58 = bif:tuple_size _13

  %% Argument types:
  %%    _58 => 0..16777215
  %% Unique:
  %%    _58
  _59 = bif:'=:=' _58, `2`
  br _59, ^56, ^34

56:
  %% Argument types:
  %%    _13 => {any(), any()}
  %% Aliased:
  %%    _13
  _16 = get_tuple_element _13, `0`

  %% Argument types:
  %%    _13 => {any(), any()}
  %% Aliased:
  %%    _13
  _15 = get_tuple_element _13, `1`

  %% Aliased:
  %%    _15
  _55 = is_nonempty_list _15
  br _55, ^55, ^34

55:
  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _18 = get_hd _15

  %% Argument types:
  %%    _15 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _15
  _17 = get_tl _15

  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _54 = bif:'=:=' _17, `[]`
  br _54, ^54, ^34

54:
  %% misc_SUITE.erl:171
  %% Aliased:
  %%    _0
  _19 = call (`file`:`read_file`/1), _0

  %% Aliased:
  %%    _19
  _35 = succeeded:body _19
  br _35, ^35, ^1

35:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _19
  _50 = is_tagged_tuple _19, `2`, `ok`
  br _50, ^47, ^37

47:
  %% Argument types:
  %%    _19 => {'ok', any()}
  %% Aliased:
  %%    _19
  _20 = get_tuple_element _19, `1`

  %% misc_SUITE.erl:172
  %% Aliased:
  %%    _20
  _3 = call (`code`:`module_md5`/1), _20

  %% Aliased:
  %%    _3
  _38 = succeeded:body _3
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3
  _22 = bs_start_match `new`, _3

  %% Aliased:
  %%    _22
  _45 = succeeded:guard _22
  br _45, ^45, ^40

45:
  _72 = bs_ensure _22, `128`, `1`
  _73 = succeeded:guard _72
  br _73, ^71, ^40

71:
  %% misc_SUITE.erl:172
  %% Argument types:
  %%    _72 => bs_context(1)
  %% Aliased:
  %%    _22
  %% Anno: #{ensured => true}
  _23 = bs_match `integer`, _72, `[unsigned,big]`, `128`, `1`

  %% Aliased:
  %%    _23
  _41 = succeeded:guard _23
  br _41, ^41, ^40

41:
  %% Aliased:
  %%    _23
  _24 = bs_extract _23

  %% Aliased:
  %%    _23
  _44 = bs_test_tail _23, `0`
  br _44, ^69, ^40

69:
  %% misc_SUITE.erl:172
  %% Argument types:
  %%    _24 => 0..'+inf'
  %% Aliased:
  %%    _18
  %% Unique:
  %%    _24
  _9 = bif:'=:=' _24, _18
  br _9, ^43, ^40

43:
  %% Argument types:
  %%    _3 => bs_matchable(1)
  %% Aliased:
  %%    _3, 
  %%    _16
  _26 = put_tuple _16, _3
  %% Result type:
  %%    {any(), bs_matchable(1)}
  %% Unique:
  %%    _26
  ret _26

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _3, 
  %%    _16
  _4 = put_tuple _16, _3

  %% misc_SUITE.erl:172
  %% Unique:
  %%    _4
  _27 = match_fail `badmatch`, _4

  %% Unique:
  %%    _27
  _46 = succeeded:body _27
  br ^1

37:
  %% misc_SUITE.erl:171
  %% Aliased:
  %%    _19
  _28 = match_fail `badmatch`, _19

  %% Unique:
  %%    _28
  _53 = succeeded:body _28
  br ^1

34:
  %% misc_SUITE.erl:170
  %% Aliased:
  %%    _12
  _29 = match_fail `badmatch`, _12

  %% Unique:
  %%    _29
  _66 = succeeded:body _29
  br ^1

1:
  _30 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _30
}

%% misc_SUITE.erl:176
%% Counter = 173
%% bs_ensure_opt: true
function `misc_SUITE`:`silly_coverage`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _112 = bif:is_list _0
  br _112, ^112, ^111

112:
  _2 = make_fun (`'-silly_coverage/1-fun-0-'`/0)

  %% misc_SUITE.erl:180
  %% Aliased:
  %%    _2
  _63 = call (`expect_error`/1), _2

  %% Aliased:
  %%    _63
  _113 = succeeded:body _63
  br _113, ^113, ^1

113:
  _4 = make_fun (`'-silly_coverage/1-fun-1-'`/0)

  %% misc_SUITE.erl:186
  %% Aliased:
  %%    _4
  _65 = call (`expect_error`/1), _4

  %% Aliased:
  %%    _65
  _114 = succeeded:body _65
  br _114, ^114, ^1

114:
  _5 = make_fun (`'-silly_coverage/1-fun-2-'`/0)

  %% misc_SUITE.erl:187
  %% Aliased:
  %%    _5
  _67 = call (`expect_error`/1), _5

  %% Aliased:
  %%    _67
  _115 = succeeded:body _67
  br _115, ^115, ^1

115:
  _6 = make_fun (`'-silly_coverage/1-fun-3-'`/0)

  %% misc_SUITE.erl:188
  %% Aliased:
  %%    _6
  _69 = call (`expect_error`/1), _6

  %% Aliased:
  %%    _69
  _116 = succeeded:body _69
  br _116, ^116, ^1

116:
  _7 = make_fun (`'-silly_coverage/1-fun-4-'`/0)

  %% misc_SUITE.erl:189
  %% Aliased:
  %%    _7
  _71 = call (`expect_error`/1), _7

  %% Aliased:
  %%    _71
  _117 = succeeded:body _71
  br _117, ^117, ^1

117:
  _9 = make_fun (`'-silly_coverage/1-fun-5-'`/0)

  %% misc_SUITE.erl:199
  %% Aliased:
  %%    _9
  _73 = call (`expect_error`/1), _9

  %% Aliased:
  %%    _73
  _118 = succeeded:body _73
  br _118, ^118, ^1

118:
  _10 = make_fun (`'-silly_coverage/1-fun-6-'`/0)

  %% misc_SUITE.erl:200
  %% Aliased:
  %%    _10
  _75 = call (`expect_error`/1), _10

  %% Aliased:
  %%    _75
  _119 = succeeded:body _75
  br _119, ^119, ^1

119:
  _11 = make_fun (`'-silly_coverage/1-fun-7-'`/0)

  %% misc_SUITE.erl:201
  %% Aliased:
  %%    _11
  _77 = call (`expect_error`/1), _11

  %% Aliased:
  %%    _77
  _120 = succeeded:body _77
  br _120, ^120, ^1

120:
  _12 = make_fun (`'-silly_coverage/1-fun-8-'`/0)

  %% misc_SUITE.erl:202
  %% Aliased:
  %%    _12
  _79 = call (`expect_error`/1), _12

  %% Aliased:
  %%    _79
  _121 = succeeded:body _79
  br _121, ^121, ^1

121:
  _13 = make_fun (`'-silly_coverage/1-fun-9-'`/0)

  %% misc_SUITE.erl:203
  %% Aliased:
  %%    _13
  _81 = call (`expect_error`/1), _13

  %% Aliased:
  %%    _81
  _122 = succeeded:body _81
  br _122, ^122, ^1

122:
  _14 = make_fun (`'-silly_coverage/1-fun-10-'`/0)

  %% misc_SUITE.erl:204
  %% Aliased:
  %%    _14
  _83 = call (`expect_error`/1), _14

  %% Aliased:
  %%    _83
  _123 = succeeded:body _83
  br _123, ^123, ^1

123:
  _17 = make_fun (`'-silly_coverage/1-fun-11-'`/0)

  %% misc_SUITE.erl:211
  %% Aliased:
  %%    _17
  _85 = call (`expect_error`/1), _17

  %% Aliased:
  %%    _85
  _124 = succeeded:body _85
  br _124, ^124, ^1

124:
  %% misc_SUITE.erl:214
  %% Result type:
  %%    'ok'
  _86 = call (`cover_beam_ssa_bc_size`/1), `1`

  %% Unique:
  %%    _86
  _125 = succeeded:body _86
  br _125, ^125, ^1

125:
  %% misc_SUITE.erl:217
  %% Result type:
  %%    {'b_module', #{}, 't', nonempty_list({'a', 1} | {'b', 1} | {'c', 1} | {'module_info', 0..1}), nil(), nonempty_list({'b_function', #{'func_info' | 'location'=>{...}}, list({...}), #{0=>{...}}, 3..4})}
  _18 = call (`bad_ssa_lint_input`/0)

  %% Unique:
  %%    _18
  _126 = succeeded:body _18
  br _126, ^126, ^1

126:
  %% misc_SUITE.erl:217
  %% Unique:
  %%    _18
  _49 = call (`beam_ssa_lint`:`module`/2), _18, `[]`

  %% Aliased:
  %%    _49
  _127 = succeeded:body _49
  br _127, ^127, ^1

127:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _149 = is_tagged_tuple _49, `2`, `error`
  br _149, ^146, ^129

146:
  %% Argument types:
  %%    _49 => {'error', any()}
  %% Aliased:
  %%    _49
  _50 = get_tuple_element _49, `1`

  %% Aliased:
  %%    _50
  _145 = is_nonempty_list _50
  br _145, ^145, ^129

145:
  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _53 = get_hd _50

  %% Argument types:
  %%    _50 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _50
  _52 = get_tl _50

  %% Argument types:
  %%    
  %% Aliased:
  %%    _53
  _142 = bif:is_tuple _53
  br _142, ^142, ^129

142:
  %% Argument types:
  %%    _53 => {...}
  %% Aliased:
  %%    _53
  _143 = bif:tuple_size _53

  %% Argument types:
  %%    _143 => 0..16777215
  %% Unique:
  %%    _143
  _144 = bif:'=:=' _143, `2`
  br _144, ^141, ^129

141:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _140 = bif:'=:=' _52, `[]`
  br _140, ^140, ^129

140:
  %% Argument types:
  %%    _53 => {any(), any()}
  %% Aliased:
  %%    _53
  _54 = get_tuple_element _53, `1`

  %% misc_SUITE.erl:219
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _54
  _91 = call (`'-silly_coverage/1-lc$^12/1-0-'`/1), _54

  %% Unique:
  %%    _91
  _130 = succeeded:body _91
  br _130, ^130, ^1

130:
  %% misc_SUITE.erl:225
  _32 = call (`beam_ssa_pp`:`format_function`/1), `{b_function,#{func_info => {mod,foo,0},
               map_anno => #{k => v},
               other_anno => value},
             [],
             #{0 => {b_blk,#{},[],{b_ret,#{},{b_literal,42}}}},
             0}`

  %% Aliased:
  %%    _32
  _131 = succeeded:body _32
  br _131, ^131, ^1

131:
  %% misc_SUITE.erl:225
  %% Aliased:
  %%    _32
  _92 = call (`io`:`put_chars`/1), _32

  %% Aliased:
  %%    _92
  _132 = succeeded:body _92
  br _132, ^132, ^1

132:
  _34 = make_fun (`'-silly_coverage/1-fun-13-'`/0)

  %% misc_SUITE.erl:233
  %% Aliased:
  %%    _34
  _94 = call (`expect_error`/1), _34

  %% Aliased:
  %%    _94
  _133 = succeeded:body _94
  br _133, ^133, ^1

133:
  _36 = make_fun (`'-silly_coverage/1-fun-14-'`/0)

  %% misc_SUITE.erl:241
  %% Aliased:
  %%    _36
  _96 = call (`expect_error`/1), _36

  %% Aliased:
  %%    _96
  _134 = succeeded:body _96
  br _134, ^134, ^1

134:
  _38 = make_fun (`'-silly_coverage/1-fun-15-'`/0)

  %% misc_SUITE.erl:245
  %% Aliased:
  %%    _38
  _98 = call (`expect_error`/1), _38

  %% Aliased:
  %%    _98
  _135 = succeeded:body _98
  br _135, ^135, ^1

135:
  _40 = make_fun (`'-silly_coverage/1-fun-16-'`/0)

  %% misc_SUITE.erl:254
  %% Aliased:
  %%    _40
  _100 = call (`expect_error`/1), _40

  %% Aliased:
  %%    _100
  _136 = succeeded:body _100
  br _136, ^136, ^1

136:
  _42 = make_fun (`'-silly_coverage/1-fun-17-'`/0)

  %% misc_SUITE.erl:258
  %% Aliased:
  %%    _42
  _102 = call (`expect_error`/1), _42

  %% Aliased:
  %%    _102
  _137 = succeeded:body _102
  br _137, ^137, ^1

137:
  _44 = make_fun (`'-silly_coverage/1-fun-18-'`/0)

  %% misc_SUITE.erl:265
  %% Aliased:
  %%    _44
  _104 = call (`expect_error`/1), _44

  %% Aliased:
  %%    _104
  _138 = succeeded:body _104
  br _138, ^138, ^1

138:
  _46 = make_fun (`'-silly_coverage/1-fun-19-'`/0)

  %% misc_SUITE.erl:273
  %% Aliased:
  %%    _46
  _106 = call (`expect_error`/1), _46

  %% Aliased:
  %%    _106
  _139 = succeeded:body _106
  br _139, ^139, ^1

139:
  %% Result type:
  %%    'ok'
  ret `ok`

129:
  %% misc_SUITE.erl:217
  %% Aliased:
  %%    _49
  _107 = match_fail `badmatch`, _49

  %% Unique:
  %%    _107
  _152 = succeeded:body _107
  br ^1

111:
  %% misc_SUITE.erl:176
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-silly_coverage/1-',1}}
  _108 = match_fail `function_clause`, _0

  %% Unique:
  %%    _108
  _153 = succeeded:body _108
  br ^1

1:
  _109 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _109
}

%% misc_SUITE.erl:277
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     1..'+inf'
function `misc_SUITE`:`cover_beam_ssa_bc_size`(_0) {
0:
  %% Argument types:
  %%    _0 => 1..'+inf'
  %% Unique:
  %%    _0
  _13 = bif:'=:=' _0, `20`
  br _13, ^12, ^11

12:
  %% Result type:
  %%    'ok'
  ret `ok`

11:
  %% misc_SUITE.erl:282
  %% Aliased:
  %%    _0
  OptSt = call (`erlang`:`make_tuple`/3), _0, `#{}`, `[{1,opt_st}]`

  %% Aliased:
  %%    OptSt
  _14 = succeeded:body OptSt
  br _14, ^14, ^1

14:
  %% Aliased:
  %%    OptSt
  _4 = make_fun (`'-cover_beam_ssa_bc_size/1-fun-0-'`/1), OptSt

  %% misc_SUITE.erl:283
  %% Aliased:
  %%    _4
  _7 = call (`expect_error`/1), _4

  %% Aliased:
  %%    _7
  _15 = succeeded:body _7
  br _15, ^15, ^1

15:
  %% misc_SUITE.erl:284
  %% Argument types:
  %%    _0 => 1..'+inf'
  %% Unique:
  %%    _0
  _5 = bif:'+' _0, `1`

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br _16, ^16, ^1

16:
  %% misc_SUITE.erl:284
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _5
  _8 = call (`cover_beam_ssa_bc_size`/1), _5

  %% Unique:
  %%    _8
  _17 = succeeded:body _8
  br _17, ^17, ^1

17:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _8
  ret _8

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% misc_SUITE.erl:286
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`bad_ssa_lint_input`() {
0:
  %% Result type:
  %%    {'b_module', #{}, 't', nonempty_list({'a', 1} | {'b', 1} | {'c', 1} | {'module_info', 0..1}), nil(), nonempty_list({'b_function', #{'func_info' | 'location'=>{'t' | nonempty_list(46..116), 'a' | 'b' | 'c' | 'module_info' | 4..6, ...}}, list({'b_var', 0}), #{0=>{'b_blk', #{}, list({'b_set', #{}, {'b_var', ''@first_var'' | ''@ret'' | ''@second_var'' | 100}, 'call' | 'first_op' | 'second_op' | 'succeeded', list({'b_var', ''@first_var'' | ''@unknown_variable''} | {'b_remote', {'b_literal', 'erlang'}, {'b_literal', 'get_module_info'}, 1})}), {'b_ret', #{}, {'b_var', ''@ret'' | ''@undefined_var'' | 100}}}}, 3..4})}
  ret `{b_module,#{},t,
     [{a,1},{b,1},{c,1},{module_info,0},{module_info,1}],
     [],
     [{b_function,
          #{func_info => {t,a,1},location => {"t.erl",4}},
          [{b_var,0}],
          #{0 => {b_blk,#{},[],{b_ret,#{},{b_var,'@undefined_var'}}}},
          3},
      {b_function,
          #{func_info => {t,b,1},location => {"t.erl",5}},
          [{b_var,0}],
          #{0 =>
                {b_blk,#{},
                    [{b_set,#{},{b_var,'@first_var'},first_op,[]},
                     {b_set,#{},{b_var,'@second_var'},second_op,[]},
                     {b_set,#{},
                         {b_var,'@ret'},
                         succeeded,
                         [{b_var,'@first_var'}]}],
                    {b_ret,#{},{b_var,'@ret'}}}},
          3},
      {b_function,
          #{func_info => {t,c,1},location => {"t.erl",6}},
          [{b_var,0}],
          #{0 =>
                {b_blk,#{},
                    [{b_set,#{},{b_var,'@first_var'},first_op,[]},
                     {b_set,#{},
                         {b_var,'@ret'},
                         succeeded,
                         [{b_var,'@first_var'}]},
                     {b_set,#{},{b_var,'@second_var'},second_op,[]}],
                    {b_ret,#{},{b_var,'@ret'}}}},
          3},
      {b_function,
          #{func_info => {t,module_info,0}},
          [],
          #{0 =>
                {b_blk,#{},
                    [{b_set,#{},
                         {b_var,100},
                         call,
                         [{b_remote,
                              {b_literal,erlang},
                              {b_literal,get_module_info},
                              1},
                          {b_var,'@unknown_variable'}]}],
                    {b_ret,#{},{b_var,100}}}},
          4}]}`
}

%% misc_SUITE.erl:332
%% Counter = 60
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun(())
function `misc_SUITE`:`expect_error`(_0) {
0:
  br ^59

59:
  _26 = new_try_tag `'try'`
  br _26, ^25, ^23

25:
  %% misc_SUITE.erl:333
  %% Argument types:
  %%    _0 => fun(())
  %% Aliased:
  %%    _0
  _15 = call _0

  %% Aliased:
  %%    _15
  _27 = succeeded:body _15
  br _27, ^27, ^23

27:
  %% Unique:
  %%    _26
  _40 = kill_try_tag _26

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _10 = put_list _15, `[]`

  %% misc_SUITE.erl:335
  %% Unique:
  %%    _10
  _16 = call (`io`:`format`/2), `"~p"`, _10

  %% Aliased:
  %%    _16
  _28 = succeeded:body _16
  br _28, ^28, ^1

28:
  %% misc_SUITE.erl:336
  _17 = call (`ct`:`fail`/1), `call_was_supposed_to_fail`

  %% Aliased:
  %%    _17
  _29 = succeeded:body _17
  br _29, ^29, ^1

29:
  %% Aliased:
  %%    _17
  ret _17

23:
  %% Unique:
  %%    _26
  _38 = landingpad `'try'`, _26

  %% Aliased:
  %%    _38
  _5 = extract _38, `0`

  %% Aliased:
  %%    _38
  _4 = extract _38, `1`

  %% Aliased:
  %%    _38
  _3 = extract _38, `2`

  %% Unique:
  %%    _26
  _39 = kill_try_tag _26

  %% Aliased:
  %%    _3
  Stk = build_stacktrace _3

  %% Argument types:
  %%    
  %% Aliased:
  %%    Stk
  _11 = put_list Stk, `[]`

  %% Argument types:
  %%    _11 => nonempty_list(any())
  %% Aliased:
  %%    _4
  %% Unique:
  %%    _11
  _12 = put_list _4, _11

  %% Argument types:
  %%    _5 => 'error' | 'exit' | 'throw'
  %%    _12 => nonempty_list(any())
  %% Unique:
  %%    _5, 
  %%    _12
  _13 = put_list _5, _12
  br ^42

42:
  %% misc_SUITE.erl:339
  %% Unique:
  %%    _13
  _18 = call (`io`:`format`/2), `"~p:~p\n~p\n"`, _13

  %% Aliased:
  %%    _18
  _30 = succeeded:body _18
  br _30, ^30, ^1

30:
  %% Argument types:
  %%    _5 => 'error' | 'exit' | 'throw'
  %% Unique:
  %%    _5
  _37 = bif:'=:=' _5, `error`
  br _37, ^36, ^32

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _35 = bif:'=:=' _4, `undef`
  br _35, ^34, ^32

34:
  %% misc_SUITE.erl:342
  _19 = call (`ct`:`fail`/1), `not_supposed_to_fail_with_undef`

  %% Aliased:
  %%    _19
  _33 = succeeded:body _19
  br _33, ^33, ^1

33:
  %% Aliased:
  %%    _19
  ret _19

32:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% misc_SUITE.erl:348
%% Counter = 24
%% bs_ensure_opt: true
function `misc_SUITE`:`confused_literals`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _12 = bif:is_list _0
  br _12, ^12, ^11

12:
  %% misc_SUITE.erl:349
  %% Result type:
  %%    {0, 'infinity'}
  _4 = call (`confused_literals_1`/1), `int`

  %% Unique:
  %%    _4
  _13 = succeeded:body _4
  br _13, ^21, ^1

21:
  %% misc_SUITE.erl:350
  %% Result type:
  %%    {0.0, 'infinity'}
  _5 = call (`confused_literals_1`/1), `float`

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br _16, ^19, ^1

19:
  %% Result type:
  %%    'ok'
  ret `ok`

11:
  %% misc_SUITE.erl:348
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-confused_literals/1-',1}}
  _8 = match_fail `function_clause`, _0

  %% Unique:
  %%    _8
  _23 = succeeded:body _8
  br ^1

1:
  _9 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _9
}

%% misc_SUITE.erl:353
%% Counter = 10
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'float' | 'int'
function `misc_SUITE`:`confused_literals_1`(_0) {
0:
  %% Unique:
  %%    _0
  _9 = bif:'=:=' _0, `int`
  br _9, ^7, ^6

7:
  %% Result type:
  %%    {0, 'infinity'}
  ret `{0,infinity}`

6:
  %% Result type:
  %%    {0.0, 'infinity'}
  ret `{0.0,infinity}`
}

%% misc_SUITE.erl:356
%% Counter = 4
%% bs_ensure_opt: true
function `misc_SUITE`:`integer_encoding`() {
0:
  %% Result type:
  %%    nonempty_list({'timetrap', {'minutes', 4}})
  ret `[{timetrap,{minutes,4}}]`
}

%% misc_SUITE.erl:359
%% Counter = 173
%% bs_ensure_opt: true
function `misc_SUITE`:`integer_encoding`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _88 = bif:is_list _0
  br _88, ^88, ^87

88:
  %% misc_SUITE.erl:360
  %% Aliased:
  %%    _0
  PrivDir = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    PrivDir
  _89 = succeeded:body PrivDir
  br _89, ^89, ^1

89:
  %% misc_SUITE.erl:361
  %% Aliased:
  %%    PrivDir
  SrcFile = call (`filename`:`join`/2), PrivDir, `"misc_SUITE_integer_encoding.erl"`

  %% Aliased:
  %%    SrcFile
  _90 = succeeded:body SrcFile
  br _90, ^90, ^1

90:
  %% misc_SUITE.erl:362
  %% Aliased:
  %%    PrivDir
  DataFile = call (`filename`:`join`/2), PrivDir, `"integer_encoding.data"`

  %% Aliased:
  %%    DataFile
  _91 = succeeded:body DataFile
  br _91, ^91, ^1

91:
  %% misc_SUITE.erl:366
  %% Aliased:
  %%    SrcFile
  _35 = call (`file`:`open`/2), SrcFile, `[write]`

  %% Aliased:
  %%    _35
  _92 = succeeded:body _35
  br _92, ^92, ^1

92:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _168 = is_tagged_tuple _35, `2`, `ok`
  br _168, ^165, ^94

165:
  %% misc_SUITE.erl:367
  %% Aliased:
  %%    DataFile
  _38 = call (`file`:`open`/2), DataFile, `[write]`

  %% Aliased:
  %%    _38
  _95 = succeeded:body _38
  br _95, ^95, ^1

95:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _161 = is_tagged_tuple _38, `2`, `ok`
  br _161, ^158, ^97

158:
  %% Argument types:
  %%    _35 => {'ok', any()}
  %% Aliased:
  %%    _35
  _36 = get_tuple_element _35, `1`

  %% misc_SUITE.erl:368
  %% Aliased:
  %%    _36
  _59 = call (`io`:`format`/3), _36, `"-module(~s).\n"`, `[misc_SUITE_integer_encoding]`

  %% Aliased:
  %%    _59
  _98 = succeeded:body _59
  br _98, ^98, ^1

98:
  %% misc_SUITE.erl:369
  %% Aliased:
  %%    _36
  _60 = call (`io`:`put_chars`/2), _36, `"-export([t/1]).\n"`

  %% Aliased:
  %%    _60
  _99 = succeeded:body _60
  br _99, ^99, ^1

99:
  %% misc_SUITE.erl:370
  %% Aliased:
  %%    _36
  _61 = call (`io`:`put_chars`/2), _36, `"t(Last) ->[\n"`

  %% Aliased:
  %%    _61
  _100 = succeeded:body _61
  br _100, ^100, ^1

100:
  %% Argument types:
  %%    _38 => {'ok', any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `1`

  %% misc_SUITE.erl:371
  %% Aliased:
  %%    _39
  _62 = call (`io`:`put_chars`/2), _39, `"[\n"`

  %% Aliased:
  %%    _62
  _101 = succeeded:body _62
  br _101, ^101, ^1

101:
  %% misc_SUITE.erl:373
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _36, 
  %%    _39
  _63 = call (`do_integer_encoding`/4), `137`, `0`, _36, _39

  %% Unique:
  %%    _63
  _102 = succeeded:body _63
  br _102, ^102, ^1

102:
  %% misc_SUITE.erl:382
  _9 = call (`lists`:`seq`/2), `1`, `130`

  %% Aliased:
  %%    _9
  _103 = succeeded:body _9
  br _103, ^103, ^1

103:
  %% misc_SUITE.erl:382
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _9, 
  %%    _36, 
  %%    _39
  _72 = call (`'-integer_encoding/1-lc$^0/1-0-'`/3), _9, _36, _39

  %% Unique:
  %%    _72
  _104 = succeeded:body _72
  br _104, ^104, ^1

104:
  %% misc_SUITE.erl:383
  %% Aliased:
  %%    _36
  _73 = call (`io`:`put_chars`/2), _36, `"Last].\n\n"`

  %% Aliased:
  %%    _73
  _105 = succeeded:body _73
  br _105, ^105, ^1

105:
  %% misc_SUITE.erl:384
  %% Aliased:
  %%    _36
  _45 = call (`file`:`close`/1), _36

  %% Aliased:
  %%    _45
  _106 = succeeded:body _45
  br _106, ^106, ^1

106:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _45
  _156 = bif:'=:=' _45, `ok`
  br _156, ^155, ^108

155:
  %% misc_SUITE.erl:385
  %% Aliased:
  %%    _39
  _74 = call (`io`:`put_chars`/2), _39, `"0].\n\n"`

  %% Aliased:
  %%    _74
  _109 = succeeded:body _74
  br _109, ^109, ^1

109:
  %% misc_SUITE.erl:386
  %% Aliased:
  %%    _39
  _46 = call (`file`:`close`/1), _39

  %% Aliased:
  %%    _46
  _110 = succeeded:body _46
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _46
  _153 = bif:'=:=' _46, `ok`
  br _153, ^152, ^112

152:
  %% misc_SUITE.erl:389
  %% Aliased:
  %%    SrcFile
  SrcRoot = call (`filename`:`rootname`/1), SrcFile

  %% Aliased:
  %%    SrcRoot
  _113 = succeeded:body SrcRoot
  br _113, ^113, ^1

113:
  %% misc_SUITE.erl:390
  %% Aliased:
  %%    SrcRoot
  _47 = call (`compile`:`file`/2), SrcRoot, `[binary,report]`

  %% Aliased:
  %%    _47
  _114 = succeeded:body _47
  br _114, ^114, ^1

114:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _148 = is_tagged_tuple _47, `3`, `ok`
  br _148, ^145, ^116

145:
  %% Argument types:
  %%    _47 => {'ok', any(), any()}
  %% Aliased:
  %%    _47
  _49 = get_tuple_element _47, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _49
  _117 = bif:'=:=' _49, `misc_SUITE_integer_encoding`
  br _117, ^117, ^116

117:
  %% Argument types:
  %%    _47 => {'ok', 'misc_SUITE_integer_encoding', any()}
  %% Aliased:
  %%    _47
  _48 = get_tuple_element _47, `2`

  %% misc_SUITE.erl:391
  %% Aliased:
  %%    _48, 
  %%    SrcRoot
  _51 = call (`code`:`load_binary`/3), `misc_SUITE_integer_encoding`, SrcRoot, _48

  %% Aliased:
  %%    _51
  _118 = succeeded:body _51
  br _118, ^118, ^1

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  _141 = is_tagged_tuple _51, `2`, `module`
  br _141, ^138, ^120

138:
  %% Argument types:
  %%    _51 => {'module', any()}
  %% Aliased:
  %%    _51
  _52 = get_tuple_element _51, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _52
  _121 = bif:'=:=' _52, `misc_SUITE_integer_encoding`
  br _121, ^121, ^120

121:
  %% misc_SUITE.erl:394
  List = call (`misc_SUITE_integer_encoding`:`t`/1), `0`

  %% Aliased:
  %%    List
  _122 = succeeded:body List
  br _122, ^122, ^1

122:
  %% misc_SUITE.erl:395
  %% Aliased:
  %%    DataFile
  _54 = call (`file`:`consult`/1), DataFile

  %% Aliased:
  %%    _54
  _123 = succeeded:body _54
  br _123, ^123, ^1

123:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _54
  _134 = is_tagged_tuple _54, `2`, `ok`
  br _134, ^131, ^125

131:
  %% Argument types:
  %%    _54 => {'ok', any()}
  %% Aliased:
  %%    _54
  _55 = get_tuple_element _54, `1`

  %% Aliased:
  %%    _55
  _130 = is_nonempty_list _55
  br _130, ^130, ^125

130:
  %% Argument types:
  %%    _55 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _55
  _58 = get_hd _55

  %% Argument types:
  %%    _55 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _55
  _57 = get_tl _55

  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _129 = bif:'=:=' _57, `[]`
  br _129, ^129, ^125

129:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _58, 
  %%    List
  _126 = bif:'=:=' _58, List
  br _126, ^126, ^125

126:
  %% misc_SUITE.erl:398
  %% Aliased:
  %%    SrcFile
  _75 = call (`file`:`delete`/1), SrcFile

  %% Aliased:
  %%    _75
  _127 = succeeded:body _75
  br _127, ^127, ^1

127:
  %% misc_SUITE.erl:399
  %% Aliased:
  %%    DataFile
  _76 = call (`file`:`delete`/1), DataFile

  %% Aliased:
  %%    _76
  _128 = succeeded:body _76
  br _128, ^128, ^1

128:
  %% Result type:
  %%    'ok'
  ret `ok`

125:
  %% misc_SUITE.erl:395
  %% Aliased:
  %%    _54
  _77 = match_fail `badmatch`, _54

  %% Unique:
  %%    _77
  _137 = succeeded:body _77
  br ^1

120:
  %% misc_SUITE.erl:391
  %% Aliased:
  %%    _51
  _78 = match_fail `badmatch`, _51

  %% Unique:
  %%    _78
  _144 = succeeded:body _78
  br ^1

116:
  %% misc_SUITE.erl:390
  %% Aliased:
  %%    _47
  _79 = match_fail `badmatch`, _47

  %% Unique:
  %%    _79
  _151 = succeeded:body _79
  br ^1

112:
  %% misc_SUITE.erl:386
  %% Aliased:
  %%    _46
  _80 = match_fail `badmatch`, _46

  %% Unique:
  %%    _80
  _154 = succeeded:body _80
  br ^1

108:
  %% misc_SUITE.erl:384
  %% Aliased:
  %%    _45
  _81 = match_fail `badmatch`, _45

  %% Unique:
  %%    _81
  _157 = succeeded:body _81
  br ^1

97:
  %% misc_SUITE.erl:367
  %% Aliased:
  %%    _38
  _82 = match_fail `badmatch`, _38

  %% Unique:
  %%    _82
  _164 = succeeded:body _82
  br ^1

94:
  %% misc_SUITE.erl:366
  %% Aliased:
  %%    _35
  _83 = match_fail `badmatch`, _35

  %% Unique:
  %%    _83
  _171 = succeeded:body _83
  br ^1

87:
  %% misc_SUITE.erl:359
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-integer_encoding/1-',1}}
  _84 = match_fail `function_clause`, _0

  %% Unique:
  %%    _84
  _172 = succeeded:body _84
  br ^1

1:
  _85 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _85
}

%% misc_SUITE.erl:402
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     '-inf'..137
%%    _1 =>
%%     integer()
function `misc_SUITE`:`do_integer_encoding`(_0, _1, _2, _3) {
0:
  %% Argument types:
  %%    _0 => '-inf'..137
  %% Unique:
  %%    _0
  _27 = bif:'=:=' _0, `0`
  br _27, ^26, ^25

26:
  %% Result type:
  %%    'ok'
  ret `ok`

25:
  %% misc_SUITE.erl:404
  %% Argument types:
  %%    _1 => integer()
  %% Unique:
  %%    _1
  _6 = bif:'bsl' _1, `5`

  %% Unique:
  %%    _6
  _28 = succeeded:body _6
  br _28, ^28, ^1

28:
  %% misc_SUITE.erl:404
  _4 = call (`rand`:`uniform`/1), `32`

  %% Aliased:
  %%    _4
  _29 = succeeded:body _4
  br _29, ^29, ^1

29:
  %% misc_SUITE.erl:404
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _5 = bif:'-' _4, `1`

  %% Unique:
  %%    _5
  _30 = succeeded:body _5
  br _30, ^30, ^1

30:
  %% misc_SUITE.erl:404
  %% Argument types:
  %%    _6 => integer()
  %%    _5 => number()
  %% Unique:
  %%    _5, 
  %%    _6
  I1 = bif:'bor' _6, _5

  %% Unique:
  %%    I1
  _31 = succeeded:body I1
  br _31, ^31, ^1

31:
  %% misc_SUITE.erl:405
  %% Aliased:
  %%    _2, 
  %%    _3, 
  %%    I1
  _20 = call (`do_integer_encoding`/3), I1, _2, _3

  %% Aliased:
  %%    _20
  _32 = succeeded:body _20
  br _32, ^32, ^1

32:
  %% misc_SUITE.erl:406
  _8 = call (`rand`:`uniform`/1), `32`

  %% Aliased:
  %%    _8
  _33 = succeeded:body _8
  br _33, ^33, ^1

33:
  %% misc_SUITE.erl:406
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _9 = bif:'-' _8, `1`

  %% Unique:
  %%    _9
  _34 = succeeded:body _9
  br _34, ^34, ^1

34:
  %% misc_SUITE.erl:406
  %% Argument types:
  %%    I1 => integer()
  %%    _9 => number()
  %% Unique:
  %%    _9, 
  %%    I1
  _10 = bif:'bxor' I1, _9

  %% Unique:
  %%    _10
  _35 = succeeded:body _10
  br _35, ^35, ^1

35:
  %% misc_SUITE.erl:406
  %% Argument types:
  %%    _10 => integer()
  %% Unique:
  %%    _10
  I2 = bif:'-' _10

  %% Unique:
  %%    I2
  _36 = succeeded:body I2
  br _36, ^36, ^1

36:
  %% misc_SUITE.erl:407
  %% Aliased:
  %%    _2, 
  %%    _3
  %% Unique:
  %%    I2
  _21 = call (`do_integer_encoding`/3), I2, _2, _3

  %% Aliased:
  %%    _21
  _37 = succeeded:body _21
  br _37, ^37, ^1

37:
  %% misc_SUITE.erl:408
  %% Argument types:
  %%    _0 => '-inf'..137
  %% Unique:
  %%    _0
  _12 = bif:'-' _0, `1`

  %% Unique:
  %%    _12
  _38 = succeeded:body _12
  br _38, ^38, ^1

38:
  %% misc_SUITE.erl:408
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _2, 
  %%    _3, 
  %%    I1
  %% Unique:
  %%    _12
  _22 = call (`do_integer_encoding`/4), _12, I1, _2, _3

  %% Unique:
  %%    _22
  _39 = succeeded:body _22
  br _39, ^39, ^1

39:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _22
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}

%% misc_SUITE.erl:410
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     integer()
function `misc_SUITE`:`do_integer_encoding`(_0, _1, _2) {
0:
  %% misc_SUITE.erl:411
  %% Aliased:
  %%    _0
  Str = call (`erlang`:`integer_to_list`/1), _0

  %% Aliased:
  %%    Str
  _9 = succeeded:body Str
  br _9, ^9, ^1

9:
  %% Argument types:
  %%    Str => nonempty_list(any())
  %% Aliased:
  %%    Str
  _3 = put_list Str, `[",\n"]`

  %% misc_SUITE.erl:412
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _3
  _5 = call (`io`:`put_chars`/2), _1, _3

  %% Aliased:
  %%    _5
  _10 = succeeded:body _5
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    Str => nonempty_list(any())
  %% Aliased:
  %%    Str
  _4 = put_list Str, `[",\n"]`

  %% misc_SUITE.erl:413
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _4
  _6 = call (`io`:`put_chars`/2), _2, _4

  %% Aliased:
  %%    _6
  _11 = succeeded:body _6
  br _11, ^11, ^1

11:
  %% Aliased:
  %%    _6
  ret _6

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% Counter = 9
%% bs_ensure_opt: true
function `misc_SUITE`:`behaviour_info`(_0) {
0:
  switch _0, ^5, [
    { `callbacks`, ^7 },
    { `optional_callbacks`, ^6 }
  ]

6:
  %% Result type:
  %%    nonempty_list({'do_something_strange', 1})
  ret `[{do_something_strange,1}]`

7:
  %% Result type:
  %%    nonempty_list({'do_something_strange', 1} | {'must_define_this_one', 0})
  ret `[{must_define_this_one,0},{do_something_strange,1}]`

5:
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-behaviour_info/1-',1}}
  _2 = match_fail `function_clause`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `misc_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `misc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `misc_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `misc_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% misc_SUITE.erl:382
%% Counter = 95
%% bs_ensure_opt: true
function `misc_SUITE`:`'-integer_encoding/1-lc$^0/1-0-'`(_10, _36, _39) {
0:
  %% Aliased:
  %%    _10
  _91 = is_nonempty_list _10
  br _91, ^91, ^75

91:
  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _44 = get_hd _10

  %% Argument types:
  %%    _10 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _10
  _43 = get_tl _10

  %% misc_SUITE.erl:375
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  B = bif:'bsl' `1`, _44

  %% Unique:
  %%    B
  _76 = succeeded:body B
  br _76, ^76, ^1

76:
  %% misc_SUITE.erl:376
  %% Argument types:
  %%    B => integer()
  %% Unique:
  %%    B
  _13 = bif:'-' B

  %% Unique:
  %%    _13
  _77 = succeeded:body _13
  br _77, ^77, ^1

77:
  %% misc_SUITE.erl:376
  %% Argument types:
  %%    _13 => integer()
  %% Unique:
  %%    _13
  _14 = bif:'-' _13, `1`

  %% Unique:
  %%    _14
  _78 = succeeded:body _14
  br _78, ^78, ^1

78:
  %% misc_SUITE.erl:376
  %% Aliased:
  %%    _36, 
  %%    _39
  %% Unique:
  %%    _14
  _64 = call (`do_integer_encoding`/3), _14, _36, _39

  %% Aliased:
  %%    _64
  _79 = succeeded:body _64
  br _79, ^79, ^1

79:
  %% misc_SUITE.erl:377
  %% Argument types:
  %%    B => integer()
  %% Unique:
  %%    B
  _15 = bif:'-' B

  %% Unique:
  %%    _15
  _80 = succeeded:body _15
  br _80, ^80, ^1

80:
  %% misc_SUITE.erl:377
  %% Aliased:
  %%    _36, 
  %%    _39
  %% Unique:
  %%    _15
  _65 = call (`do_integer_encoding`/3), _15, _36, _39

  %% Aliased:
  %%    _65
  _81 = succeeded:body _65
  br _81, ^81, ^1

81:
  %% misc_SUITE.erl:378
  %% Argument types:
  %%    B => integer()
  %% Unique:
  %%    B
  _16 = bif:'-' B

  %% Unique:
  %%    _16
  _82 = succeeded:body _16
  br _82, ^82, ^1

82:
  %% misc_SUITE.erl:378
  %% Argument types:
  %%    _16 => integer()
  %% Unique:
  %%    _16
  _17 = bif:'+' _16, `1`

  %% Unique:
  %%    _17
  _83 = succeeded:body _17
  br _83, ^83, ^1

83:
  %% misc_SUITE.erl:378
  %% Aliased:
  %%    _36, 
  %%    _39
  %% Unique:
  %%    _17
  _66 = call (`do_integer_encoding`/3), _17, _36, _39

  %% Aliased:
  %%    _66
  _84 = succeeded:body _66
  br _84, ^84, ^1

84:
  %% misc_SUITE.erl:379
  %% Argument types:
  %%    B => integer()
  %% Unique:
  %%    B
  _18 = bif:'-' B, `1`

  %% Unique:
  %%    _18
  _85 = succeeded:body _18
  br _85, ^85, ^1

85:
  %% misc_SUITE.erl:379
  %% Aliased:
  %%    _36, 
  %%    _39
  %% Unique:
  %%    _18
  _67 = call (`do_integer_encoding`/3), _18, _36, _39

  %% Aliased:
  %%    _67
  _86 = succeeded:body _67
  br _86, ^86, ^1

86:
  %% misc_SUITE.erl:380
  %% Aliased:
  %%    _36, 
  %%    _39, 
  %%    B
  _68 = call (`do_integer_encoding`/3), B, _36, _39

  %% Aliased:
  %%    _68
  _87 = succeeded:body _68
  br _87, ^87, ^1

87:
  %% misc_SUITE.erl:381
  %% Argument types:
  %%    B => integer()
  %% Unique:
  %%    B
  _19 = bif:'+' B, `1`

  %% Unique:
  %%    _19
  _88 = succeeded:body _19
  br _88, ^88, ^1

88:
  %% misc_SUITE.erl:381
  %% Aliased:
  %%    _36, 
  %%    _39
  %% Unique:
  %%    _19
  _69 = call (`do_integer_encoding`/3), _19, _36, _39

  %% Aliased:
  %%    _69
  _89 = succeeded:body _69
  br _89, ^89, ^1

89:
  %% misc_SUITE.erl:382
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _36, 
  %%    _39, 
  %%    _43
  _70 = call (`'-integer_encoding/1-lc$^0/1-0-'`/3), _43, _36, _39

  %% Unique:
  %%    _70
  _90 = succeeded:body _70
  br _90, ^90, ^1

90:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _70
  ret _70

75:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _92 = bif:'=:=' _10, `[]`
  br _92, ^92, ^74

92:
  %% Result type:
  %%    nil()
  ret `[]`

74:
  %% Argument types:
  %%    _10 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _10
  _42 = put_tuple `bad_generator`, _10

  %% misc_SUITE.erl:382
  %% Unique:
  %%    _42
  _71 = call (`erlang`:`error`/1), _42

  %% Aliased:
  %%    _71
  _93 = succeeded:body _71
  br ^1

1:
  _72 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _72
}

%% misc_SUITE.erl:283
%% Counter = 11
%% bs_ensure_opt: true
function `misc_SUITE`:`'-cover_beam_ssa_bc_size/1-fun-0-'`(OptSt) {
0:
  %% misc_SUITE.erl:283
  %% Aliased:
  %%    OptSt
  _3 = put_map `assoc`, `#{}`, `{b_local,{b_literal,name},1}`, OptSt

  %% misc_SUITE.erl:283
  %% Aliased:
  %%    _3
  _6 = call (`beam_ssa_bc_size`:`opt`/1), _3

  %% Aliased:
  %%    _6
  _9 = succeeded:body _6
  br _9, ^9, ^1

9:
  %% Aliased:
  %%    _6
  ret _6

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% misc_SUITE.erl:273
%% Counter = 109
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-19-'`() {
0:
  %% misc_SUITE.erl:273
  _105 = call (`beam_validator`:`validate`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2}|
                         non_proper_list]}],
             99}`, `strong`

  %% Aliased:
  %%    _105
  _108 = succeeded:body _105
  br _108, ^108, ^1

108:
  %% Aliased:
  %%    _105
  ret _105

1:
  _106 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _106
}

%% misc_SUITE.erl:265
%% Counter = 107
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-18-'`() {
0:
  %% misc_SUITE.erl:265
  _103 = call (`beam_z`:`module`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2}|
                         non_proper_list]}],
             99}`, `[]`

  %% Aliased:
  %%    _103
  _106 = succeeded:body _103
  br _106, ^106, ^1

106:
  %% Aliased:
  %%    _103
  ret _103

1:
  _104 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _104
}

%% misc_SUITE.erl:258
%% Counter = 105
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-17-'`() {
0:
  %% misc_SUITE.erl:258
  _101 = call (`beam_trim`:`module`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2}|
                         non_proper_list]}],
             99}`, `[]`

  %% Aliased:
  %%    _101
  _104 = succeeded:body _101
  br _104, ^104, ^1

104:
  %% Aliased:
  %%    _101
  ret _101

1:
  _102 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _102
}

%% misc_SUITE.erl:254
%% Counter = 103
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-16-'`() {
0:
  %% misc_SUITE.erl:254
  _99 = call (`beam_clean`:`module`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2},
                         {jump,{f,42}}]}],
             99}`, `[]`

  %% Aliased:
  %%    _99
  _102 = succeeded:body _99
  br _102, ^102, ^1

102:
  %% Aliased:
  %%    _99
  ret _99

1:
  _100 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _100
}

%% misc_SUITE.erl:245
%% Counter = 101
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-15-'`() {
0:
  %% misc_SUITE.erl:245
  _97 = call (`beam_jump`:`module`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2}|
                         non_proper_list]}],
             99}`, `[]`

  %% Aliased:
  %%    _97
  _100 = succeeded:body _97
  br _100, ^100, ^1

100:
  %% Aliased:
  %%    _97
  ret _97

1:
  _98 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _98
}

%% misc_SUITE.erl:241
%% Counter = 99
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-14-'`() {
0:
  %% misc_SUITE.erl:241
  _95 = call (`beam_block`:`module`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2}|
                         non_proper_list]}],
             99}`, `[]`

  %% Aliased:
  %%    _95
  _98 = succeeded:body _95
  br _98, ^98, ^1

98:
  %% Aliased:
  %%    _95
  ret _95

1:
  _96 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _96
}

%% misc_SUITE.erl:233
%% Counter = 97
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-13-'`() {
0:
  %% misc_SUITE.erl:233
  _93 = call (`beam_a`:`module`/2), `{misc_SUITE,[{foo,0}],
             [],
             [{function,foo,0,2,
                        [{label,1},
                         {func_info,{atom,misc_SUITE},{atom,foo},0},
                         {label,2}|
                         non_proper_list]}],
             99}`, `[]`

  %% Aliased:
  %%    _93
  _96 = succeeded:body _93
  br _96, ^96, ^1

96:
  %% Aliased:
  %%    _93
  ret _93

1:
  _94 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _94
}

%% misc_SUITE.erl:219
%% Counter = 109
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-lc$^12/1-0-'`(_22) {
0:
  %% Aliased:
  %%    _22
  _104 = is_nonempty_list _22
  br _104, ^104, ^94

104:
  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _59 = get_hd _22

  %% Argument types:
  %%    _22 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _22
  _58 = get_tl _22

  %% Argument types:
  %%    
  %% Aliased:
  %%    _59
  _100 = bif:is_tuple _59
  br _100, ^100, ^95

100:
  %% Argument types:
  %%    _59 => {...}
  %% Aliased:
  %%    _59
  _101 = bif:tuple_size _59

  %% Argument types:
  %%    _101 => 0..16777215
  %% Unique:
  %%    _101
  _102 = bif:'=:=' _101, `2`
  br _102, ^107, ^95

107:
  %% Argument types:
  %%    _59 => {any(), any()}
  %% Aliased:
  %%    _59
  _61 = get_tuple_element _59, `0`

  %% Argument types:
  %%    _59 => {any(), any()}
  %% Aliased:
  %%    _59
  _60 = get_tuple_element _59, `1`

  %% misc_SUITE.erl:218
  %% Aliased:
  %%    _60
  _24 = call (_61:`format_error`/1), _60

  %% Aliased:
  %%    _24
  _96 = succeeded:body _24
  br _96, ^96, ^1

96:
  %% misc_SUITE.erl:218
  %% Aliased:
  %%    _24
  _87 = call (`io`:`put_chars`/1), _24

  %% Aliased:
  %%    _87
  _97 = succeeded:body _87
  br _97, ^97, ^1

97:
  %% misc_SUITE.erl:219
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _58
  _88 = call (`'-silly_coverage/1-lc$^12/1-0-'`/1), _58

  %% Unique:
  %%    _88
  _98 = succeeded:body _88
  br _98, ^98, ^1

98:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _88
  ret _88

95:
  %% misc_SUITE.erl:219
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _58
  _89 = call (`'-silly_coverage/1-lc$^12/1-0-'`/1), _58

  %% Unique:
  %%    _89
  _103 = succeeded:body _89
  br _103, ^103, ^1

103:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _89
  ret _89

94:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _105 = bif:'=:=' _22, `[]`
  br _105, ^105, ^93

105:
  %% Result type:
  %%    nil()
  ret `[]`

93:
  %% Argument types:
  %%    _22 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _22
  _57 = put_tuple `bad_generator`, _22

  %% misc_SUITE.erl:219
  %% Unique:
  %%    _57
  _90 = call (`erlang`:`error`/1), _57

  %% Aliased:
  %%    _90
  _106 = succeeded:body _90
  br ^1

1:
  _91 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _91
}

%% misc_SUITE.erl:211
%% Counter = 88
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-11-'`() {
0:
  %% misc_SUITE.erl:211
  _84 = call (`beam_ssa_opt`:`module`/2), `{b_module,#{},a,[],[],
           [{b_function,#{func_info => {mod,foo,0}},
                        [],
                        #{0 => {b_blk,#{},[bad_code],{b_ret,#{},arg}}},
                        0}]}`, `[]`

  %% Aliased:
  %%    _84
  _87 = succeeded:body _84
  br _87, ^87, ^1

87:
  %% Aliased:
  %%    _84
  ret _84

1:
  _85 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _85
}

%% misc_SUITE.erl:204
%% Counter = 86
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-10-'`() {
0:
  %% misc_SUITE.erl:204
  _82 = call (`beam_ssa_codegen`:`module`/2), `{b_module,#{},a,b,c,
           [{b_function,#{func_info => {mod,foo,0}},args,bad_blocks,0}]}`, `[]`

  %% Aliased:
  %%    _82
  _85 = succeeded:body _82
  br _85, ^85, ^1

85:
  %% Aliased:
  %%    _82
  ret _82

1:
  _83 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _83
}

%% misc_SUITE.erl:203
%% Counter = 84
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-9-'`() {
0:
  %% misc_SUITE.erl:203
  _80 = call (`beam_ssa_pre_codegen`:`module`/2), `{b_module,#{},a,b,c,
           [{b_function,#{func_info => {mod,foo,0}},args,bad_blocks,0}]}`, `[]`

  %% Aliased:
  %%    _80
  _83 = succeeded:body _80
  br _83, ^83, ^1

83:
  %% Aliased:
  %%    _80
  ret _80

1:
  _81 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _81
}

%% misc_SUITE.erl:202
%% Counter = 82
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-8-'`() {
0:
  %% misc_SUITE.erl:202
  _78 = call (`beam_ssa_share`:`module`/2), `{b_module,#{},a,b,c,
           [{b_function,#{func_info => {mod,foo,0}},args,bad_blocks,0}]}`, `[]`

  %% Aliased:
  %%    _78
  _81 = succeeded:body _78
  br _81, ^81, ^1

81:
  %% Aliased:
  %%    _78
  ret _78

1:
  _79 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _79
}

%% misc_SUITE.erl:201
%% Counter = 80
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-7-'`() {
0:
  %% misc_SUITE.erl:201
  _76 = call (`beam_ssa_recv`:`module`/2), `{b_module,#{},a,b,c,
           [{b_function,#{func_info => {mod,foo,0}},args,bad_blocks,0}]}`, `[]`

  %% Aliased:
  %%    _76
  _79 = succeeded:body _76
  br _79, ^79, ^1

79:
  %% Aliased:
  %%    _76
  ret _76

1:
  _77 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _77
}

%% misc_SUITE.erl:200
%% Counter = 78
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-6-'`() {
0:
  %% misc_SUITE.erl:200
  _74 = call (`beam_ssa_bool`:`module`/2), `{b_module,#{},a,b,c,
           [{b_function,#{func_info => {mod,foo,0}},args,bad_blocks,0}]}`, `[]`

  %% Aliased:
  %%    _74
  _77 = succeeded:body _74
  br _77, ^77, ^1

77:
  %% Aliased:
  %%    _74
  ret _74

1:
  _75 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _75
}

%% misc_SUITE.erl:199
%% Counter = 76
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-5-'`() {
0:
  %% misc_SUITE.erl:199
  _72 = call (`beam_ssa_lint`:`module`/2), `{b_module,#{},a,b,c,
           [{b_function,#{func_info => {mod,foo,0}},args,bad_blocks,0}]}`, `[]`

  %% Aliased:
  %%    _72
  _75 = succeeded:body _72
  br _75, ^75, ^1

75:
  %% Aliased:
  %%    _72
  ret _72

1:
  _73 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _73
}

%% misc_SUITE.erl:189
%% Counter = 74
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-4-'`() {
0:
  %% misc_SUITE.erl:189
  _70 = call (`beam_core_to_ssa`:`module`/2), `{c_module,[],
           {c_literal,[],name},
           [],[],
           [{{c_var,[],{foo,2}},seriously_bad_body}]}`, `[]`

  %% Aliased:
  %%    _70
  _73 = succeeded:body _70
  br _73, ^73, ^1

73:
  %% Aliased:
  %%    _70
  ret _70

1:
  _71 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _71
}

%% misc_SUITE.erl:188
%% Counter = 72
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-3-'`() {
0:
  %% misc_SUITE.erl:188
  _68 = call (`sys_core_bsm`:`module`/2), `{c_module,[],
           {c_literal,[],name},
           [],[],
           [{{c_var,[],{foo,2}},seriously_bad_body}]}`, `[]`

  %% Aliased:
  %%    _68
  _71 = succeeded:body _68
  br _71, ^71, ^1

71:
  %% Aliased:
  %%    _68
  ret _68

1:
  _69 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _69
}

%% misc_SUITE.erl:187
%% Counter = 70
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-2-'`() {
0:
  %% misc_SUITE.erl:187
  _66 = call (`sys_core_alias`:`module`/2), `{c_module,[],
           {c_literal,[],name},
           [],[],
           [{{c_var,[],{foo,2}},seriously_bad_body}]}`, `[]`

  %% Aliased:
  %%    _66
  _69 = succeeded:body _66
  br _69, ^69, ^1

69:
  %% Aliased:
  %%    _66
  ret _66

1:
  _67 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _67
}

%% misc_SUITE.erl:186
%% Counter = 68
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-1-'`() {
0:
  %% misc_SUITE.erl:186
  _64 = call (`sys_core_fold`:`module`/2), `{c_module,[],
           {c_literal,[],name},
           [],[],
           [{{c_var,[],{foo,2}},seriously_bad_body}]}`, `[]`

  %% Aliased:
  %%    _64
  _67 = succeeded:body _64
  br _67, ^67, ^1

67:
  %% Aliased:
  %%    _64
  ret _64

1:
  _65 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _65
}

%% misc_SUITE.erl:180
%% Counter = 66
%% bs_ensure_opt: true
function `misc_SUITE`:`'-silly_coverage/1-fun-0-'`() {
0:
  %% misc_SUITE.erl:180
  _62 = call (`v3_core`:`module`/2), `[{attribute,0,module,bad_module},{function,0,foo,2,[bad_clauses]}]`, `[]`

  %% Aliased:
  %%    _62
  _65 = succeeded:body _62
  br _65, ^65, ^1

65:
  %% Aliased:
  %%    _62
  ret _62

1:
  _63 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _63
}

%% misc_SUITE.erl:122
%% Counter = 30
%% bs_ensure_opt: true
function `misc_SUITE`:`'-override_bif/1-fun-0-'`(_8) {
0:
  %% misc_SUITE.erl:122
  %% Argument types:
  %%    
  %% Unique:
  %%    _8
  _7 = bif:byte_size _8

  %% Unique:
  %%    _7
  _27 = succeeded:guard _7
  br _27, ^27, ^25

27:
  %% Argument types:
  %%    _7 => 0..288230376151711743
  %% Unique:
  %%    _7
  _28 = bif:'=:=' _7, `4`
  br _28, ^26, ^25

26:
  %% Result type:
  %%    'four'
  ret `four`

25:
  %% misc_SUITE.erl:125
  %% Argument types:
  %%    
  %% Unique:
  %%    _8
  _22 = bif:byte_size _8

  %% Unique:
  %%    _22
  _29 = succeeded:body _22
  br _29, ^29, ^1

29:
  %% Result type:
  %%    0..288230376151711743
  %% Unique:
  %%    _22
  ret _22

1:
  _23 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _23
}
