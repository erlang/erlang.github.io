module lc_SUITE.
exports [{all,0},
         {basic,1},
         {deeply_nested,1},
         {effect,1},
         {empty_generator,1},
         {end_per_group,2},
         {end_per_suite,1},
         {end_per_testcase,2},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {init_per_testcase,2},
         {module_info,0},
         {module_info,1},
         {no_export,1},
         {no_generator,1},
         {shadow,1},
         {suite,0}].
attributes [].

%% lc_SUITE.erl:31
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')} | {'timetrap', {'minutes', 1}})
  ret `[{ct_hooks,[ts_install_cth]},{timetrap,{minutes,1}}]`
}

%% lc_SUITE.erl:35
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% lc_SUITE.erl:38
%% Counter = 7
%% bs_ensure_opt: true
function `lc_SUITE`:`groups`() {
0:
  %% lc_SUITE.erl:39
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[basic,deeply_nested,no_generator,empty_generator,no_export,shadow,effect]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list(atom())}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list(atom())})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% lc_SUITE.erl:49
%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`init_per_suite`(_0) {
0:
  %% lc_SUITE.erl:50
  _2 = call (`test_lib`:`recompile`/1), `lc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% lc_SUITE.erl:53
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% lc_SUITE.erl:56
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% lc_SUITE.erl:59
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% lc_SUITE.erl:63
%% Counter = 18
%% bs_ensure_opt: true
function `lc_SUITE`:`init_per_testcase`(_0, _1) {
0:
  %% lc_SUITE.erl:63
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% lc_SUITE.erl:63
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    maybe_improper_list(any(), any())
  %% Aliased:
  %%    _1
  ret _1

10:
  %% lc_SUITE.erl:63
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-init_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% lc_SUITE.erl:66
%% Counter = 18
%% bs_ensure_opt: true
function `lc_SUITE`:`end_per_testcase`(_0, _1) {
0:
  %% lc_SUITE.erl:66
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:is_atom _0
  br _2, ^16, ^10

16:
  %% lc_SUITE.erl:66
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _3 = bif:is_list _1
  br _3, ^12, ^10

12:
  %% Result type:
  %%    'ok'
  ret `ok`

10:
  %% lc_SUITE.erl:66
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-end_per_testcase/2-',2}}
  _7 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _7
  _13 = succeeded:body _7
  br ^1

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% lc_SUITE.erl:69
%% Counter = 1406
%% bs_ensure_opt: true
function `lc_SUITE`:`basic`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _772 = bif:is_list _0
  br _772, ^772, ^771

772:
  %% lc_SUITE.erl:70
  L0 = call (`lists`:`seq`/2), `1`, `10`

  %% Aliased:
  %%    L0
  _773 = succeeded:body L0
  br _773, ^773, ^1

773:
  %% Result type:
  %%    {'x', any()}
  _4 = make_fun (`'-basic/1-fun-0-'`/1)

  %% lc_SUITE.erl:71
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _4, 
  %%    L0
  L1 = call (`my_map`/2), _4, L0

  %% Aliased:
  %%    L1
  _774 = succeeded:body L1
  br _774, ^774, ^1

774:
  %% lc_SUITE.erl:72
  %% Result type:
  %%    list({'x', any()})
  %% Aliased:
  %%    L0
  _11 = call (`'-basic/1-lc$^1/1-0-'`/1), L0

  %% Unique:
  %%    _11
  _775 = succeeded:body _11
  br _775, ^775, ^1

775:
  %% Argument types:
  %%    _11 => list({'x', any()})
  %%    L1 => list(any())
  %% Aliased:
  %%    L1
  %% Unique:
  %%    _11
  _778 = bif:'=:=' _11, L1
  br _778, ^778, ^777

778:
  _15 = make_fun (`'-basic/1-fun-2-'`/1)

  %% lc_SUITE.erl:73
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _15, 
  %%    L1
  _316 = call (`my_map`/2), _15, L1

  %% Unique:
  %%    _316
  _779 = succeeded:body _316
  br _779, ^779, ^1

779:
  %% Argument types:
  %%    _316 => list(any())
  %% Aliased:
  %%    L0
  %% Unique:
  %%    _316
  _782 = bif:'=:=' _316, L0
  br _782, ^782, ^781

782:
  %% lc_SUITE.erl:74
  %% Result type:
  %%    list(number('-inf', 6))
  %% Aliased:
  %%    L0
  _22 = call (`'-basic/1-lc$^3/1-2-'`/1), L0

  %% Unique:
  %%    _22
  _783 = succeeded:body _22
  br _783, ^783, ^1

783:
  %% Argument types:
  %%    _22 => list(number('-inf', 6))
  %% Unique:
  %%    _22
  _1209 = bif:'=:=' _22, `[1,2,3,4,5]`
  br _1209, ^1209, ^785

1209:
  %% lc_SUITE.erl:75
  %% Result type:
  %%    list(number(3, 7))
  %% Aliased:
  %%    L0
  _31 = call (`'-basic/1-lc$^4/1-3-'`/1), L0

  %% Unique:
  %%    _31
  _786 = succeeded:body _31
  br _786, ^786, ^1

786:
  %% Argument types:
  %%    _31 => list(number(3, 7))
  %% Unique:
  %%    _31
  _1207 = bif:'=:=' _31, `[4,5,6]`
  br _1207, ^1207, ^788

1207:
  %% lc_SUITE.erl:76
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L0
  _40 = call (`'-basic/1-lc$^5/1-4-'`/1), L0

  %% Unique:
  %%    _40
  _789 = succeeded:body _40
  br _789, ^1205, ^1

1205:
  %% lc_SUITE.erl:77
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _48 = call (`'-basic/1-lc$^6/1-5-'`/1), L0

  %% Unique:
  %%    _48
  _792 = succeeded:body _48
  br _792, ^792, ^1

792:
  %% Argument types:
  %%    _48 => list(any())
  %% Unique:
  %%    _48
  _1203 = bif:'=:=' _48, `[1,3,5,7,9]`
  br _1203, ^1203, ^794

1203:
  %% lc_SUITE.erl:78
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _57 = call (`'-basic/1-lc$^7/1-6-'`/1), L0

  %% Unique:
  %%    _57
  _795 = succeeded:body _57
  br _795, ^795, ^1

795:
  %% Argument types:
  %%    _57 => list(any())
  %% Unique:
  %%    _57
  _1201 = bif:'=:=' _57, `[2,4,6,8,10]`
  br _1201, ^1201, ^797

1201:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _65 = call (`'-basic/1-lc$^8/1-7-'`/1), L0

  %% Unique:
  %%    _65
  _798 = succeeded:body _65
  br _798, ^798, ^1

798:
  %% Argument types:
  %%    _65 => list(any())
  %% Unique:
  %%    _65
  _1199 = bif:'=:=' _65, `[1,3,5,9]`
  br _1199, ^1199, ^800

1199:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _74 = call (`'-basic/1-lc$^9/1-8-'`/1), L0

  %% Unique:
  %%    _74
  _801 = succeeded:body _74
  br _801, ^801, ^1

801:
  %% Argument types:
  %%    _74 => list(any())
  %% Unique:
  %%    _74
  _1197 = bif:'=:=' _74, `[2,4,8,10]`
  br _1197, ^1197, ^803

1197:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  _83 = call (`'-basic/1-lc$^10/1-9-'`/1), L0

  %% Unique:
  %%    _83
  _804 = succeeded:body _83
  br _804, ^804, ^1

804:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    L0
  %% Unique:
  %%    _83
  _90 = call (`'-basic/1-lc$^11/1-10-'`/2), L0, _83

  %% Unique:
  %%    _90
  _805 = succeeded:body _90
  br _805, ^805, ^1

805:
  %% Argument types:
  %%    _90 => list(any())
  %% Unique:
  %%    _90
  _1195 = bif:'=:=' _90, `[1,3,5,9,2,4,8,10]`
  br _1195, ^1195, ^807

1195:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  _95 = call (`tuple_list`/0)

  %% Unique:
  %%    _95
  _808 = succeeded:body _95
  br _808, ^808, ^1

808:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _95
  _99 = call (`'-basic/1-lc$^12/1-11-'`/1), _95

  %% Unique:
  %%    _99
  _809 = succeeded:body _99
  br _809, ^809, ^1

809:
  %% Argument types:
  %%    _99 => list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _99
  _1193 = bif:'=:=' _99, `[{a,b,true},{x,y,true,true}]`
  br _1193, ^1193, ^811

1193:
  %% lc_SUITE.erl:90
  %% Result type:
  %%    list(46..99)
  _377 = call (`alphanum`/1), `"?abc123.;"`

  %% Unique:
  %%    _377
  _812 = succeeded:body _377
  br _812, ^812, ^1

812:
  %% Argument types:
  %%    _377 => list(46..99)
  %% Unique:
  %%    _377
  _1191 = bif:'=:=' _377, `"abc123"`
  br _1191, ^1191, ^814

1191:
  %% lc_SUITE.erl:93
  %% Result type:
  %%    nil()
  _107 = call (`'-basic/1-lc$^13/1-12-'`/1), `[]`

  %% Unique:
  %%    _107
  _815 = succeeded:body _107
  br _815, ^1189, ^1

1189:
  %% lc_SUITE.erl:94
  %% Result type:
  %%    nil()
  _114 = call (`'-basic/1-lc$^14/1-13-'`/1), `[]`

  %% Unique:
  %%    _114
  _818 = succeeded:body _114
  br _818, ^1187, ^1

1187:
  %% lc_SUITE.erl:95
  %% Result type:
  %%    list('t')
  _121 = call (`'-basic/1-lc$^15/1-14-'`/1), `["ab"]`

  %% Unique:
  %%    _121
  _821 = succeeded:body _121
  br _821, ^821, ^1

821:
  %% Argument types:
  %%    _121 => list('t')
  %% Unique:
  %%    _121
  _1185 = bif:'=:=' _121, `[t]`
  br _1185, ^1185, ^823

1185:
  %% lc_SUITE.erl:98
  %% Result type:
  %%    nil()
  _130 = call (`'-basic/1-lc$^16/1-15-'`/1), `[]`

  %% Unique:
  %%    _130
  _824 = succeeded:body _130
  br _824, ^1183, ^1

1183:
  %% lc_SUITE.erl:99
  %% Result type:
  %%    nonempty_list({'a', 'a'})
  _139 = call (`'-basic/1-lc$^17/1-16-'`/1), `[{a}]`

  %% Unique:
  %%    _139
  _827 = succeeded:body _139
  br _827, ^827, ^1

827:
  %% Argument types:
  %%    _139 => nonempty_list({'a', 'a'})
  %% Unique:
  %%    _139
  _1181 = bif:'=:=' _139, `[{a,a}]`
  br _1181, ^1181, ^829

1181:
  %% lc_SUITE.erl:102
  %% Result type:
  %%    nil()
  _146 = call (`'-basic/1-lc$^18/1-17-'`/1), `[]`

  %% Unique:
  %%    _146
  _830 = succeeded:body _146
  br _830, ^1179, ^1

1179:
  %% lc_SUITE.erl:105
  %% Result type:
  %%    nonempty_list(2..'+inf')
  _154 = call (`'-basic/1-lc$^19/1-18-'`/1), `[1,2,3]`

  %% Unique:
  %%    _154
  _833 = succeeded:body _154
  br _833, ^833, ^1

833:
  %% Argument types:
  %%    _154 => nonempty_list(2..'+inf')
  %% Unique:
  %%    _154
  _1177 = bif:'=:=' _154, `[2,3,4]`
  br _1177, ^1177, ^835

1177:
  %% lc_SUITE.erl:106
  %% Result type:
  %%    list(1..'+inf')
  _161 = call (`'-basic/1-lc$^20/1-19-'`/1), `<<1,2,3>>`

  %% Unique:
  %%    _161
  _836 = succeeded:body _161
  br _836, ^836, ^1

836:
  %% Argument types:
  %%    _161 => list(1..'+inf')
  %% Unique:
  %%    _161
  _1175 = bif:'=:=' _161, `[2,3,4]`
  br _1175, ^1175, ^838

1175:
  %% lc_SUITE.erl:107
  _430 = call (`erts_internal`:`mc_iterator`/1), `#{1 => 2,3 => 4}`

  %% Aliased:
  %%    _430
  _839 = succeeded:body _430
  br _839, ^839, ^1

839:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _430
  _843 = bif:'=:=' _430, `[]`
  br _843, ^843, ^1216

843:
  %% lc_SUITE.erl:107
  _668 = call (`erlang`:`error`/1), `{bad_generator,#{1 => 2,3 => 4}}`

  %% Aliased:
  %%    _668
  _842 = succeeded:body _668
  br ^1

1216:
  %% lc_SUITE.erl:107
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _430
  _172 = call (`'-basic/1-lc$^21/1-20-'`/1), _430

  %% Unique:
  %%    _172
  _844 = succeeded:body _172
  br _844, ^844, ^1

844:
  %% Argument types:
  %%    _172 => list(number())
  %% Unique:
  %%    _172
  _1173 = bif:'=:=' _172, `[2,12]`
  br _1173, ^1173, ^846

1173:
  %% lc_SUITE.erl:110
  %% Result type:
  %%    list(3..'+inf')
  _180 = call (`'-basic/1-lc$^22/1-21-'`/1), `[1,2,3]`

  %% Unique:
  %%    _180
  _847 = succeeded:body _180
  br _847, ^847, ^1

847:
  %% Argument types:
  %%    _180 => list(3..'+inf')
  %% Unique:
  %%    _180
  _1171 = bif:'=:=' _180, `[3,4]`
  br _1171, ^1171, ^849

1171:
  %% lc_SUITE.erl:111
  %% Result type:
  %%    list(3..'+inf')
  _187 = call (`'-basic/1-lc$^23/1-22-'`/1), `<<1,2,3>>`

  %% Unique:
  %%    _187
  _850 = succeeded:body _187
  br _850, ^850, ^1

850:
  %% Argument types:
  %%    _187 => list(3..'+inf')
  %% Unique:
  %%    _187
  _1169 = bif:'=:=' _187, `[3,4]`
  br _1169, ^1169, ^852

1169:
  %% lc_SUITE.erl:112
  _463 = call (`erts_internal`:`mc_iterator`/1), `#{1 => 2,3 => 4}`

  %% Aliased:
  %%    _463
  _853 = succeeded:body _463
  br _853, ^853, ^1

853:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _463
  _857 = bif:'=:=' _463, `[]`
  br _857, ^857, ^1217

857:
  %% lc_SUITE.erl:112
  _679 = call (`erlang`:`error`/1), `{bad_generator,#{1 => 2,3 => 4}}`

  %% Aliased:
  %%    _679
  _856 = succeeded:body _679
  br ^1

1217:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _463
  _198 = call (`'-basic/1-lc$^24/1-23-'`/1), _463

  %% Unique:
  %%    _198
  _858 = succeeded:body _198
  br _858, ^858, ^1

858:
  %% Argument types:
  %%    _198 => list(number())
  %% Unique:
  %%    _198
  _1167 = bif:'=:=' _198, `"\f"`
  br _1167, ^1167, ^860

1167:
  %% lc_SUITE.erl:115
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Aliased:
  %%    L0
  _206 = call (`'-basic/1-lc$^25/1-24-'`/1), L0

  %% Unique:
  %%    _206
  _861 = succeeded:body _206
  br _861, ^861, ^1

861:
  %% Argument types:
  %%    _206 => list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _206
  _1165 = bif:'=:=' _206, `[]`
  br _1165, ^1384, ^863

1384:
  br ^1395

1395:
  _867 = new_try_tag `'catch'`
  br _867, ^865, ^866

865:
  %% lc_SUITE.erl:116
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L1
  _687 = call (`'-basic/1-lc$^26/1-25-'`/1), L1

  %% Unique:
  %%    _687
  _869 = succeeded:body _687
  br _869, ^869, ^866

869:
  br ^864

866:
  %% Unique:
  %%    _867
  _872 = landingpad `'catch'`, _867

  %% Aliased:
  %%    _872
  _870 = extract _872, `0`
  br ^864

864:
  _873 = phi { _870, ^866 }, { `[]`, ^869 }

  %% Aliased:
  %%    _873
  %% Unique:
  %%    _867
  _215 = catch_end _867, _873

  %% Argument types:
  %%    
  %% Aliased:
  %%    _215
  _1161 = is_tagged_tuple _215, `2`, `'EXIT'`
  br _1161, ^1158, ^875

1158:
  %% lc_SUITE.erl:117
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L1
  _223 = call (`'-basic/1-lc$^27/1-26-'`/1), L1

  %% Unique:
  %%    _223
  _876 = succeeded:body _223
  br _876, ^1385, ^1

1385:
  br ^1396

1396:
  _882 = new_try_tag `'catch'`
  br _882, ^880, ^881

880:
  %% lc_SUITE.erl:118
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    L1
  _696 = call (`'-basic/1-lc$^28/1-27-'`/1), L1

  %% Unique:
  %%    _696
  _884 = succeeded:body _696
  br _884, ^884, ^881

884:
  br ^879

881:
  %% Unique:
  %%    _882
  _887 = landingpad `'catch'`, _882

  %% Aliased:
  %%    _887
  _885 = extract _887, `0`
  br ^879

879:
  _888 = phi { _885, ^881 }, { `[]`, ^884 }

  %% Aliased:
  %%    _888
  %% Unique:
  %%    _882
  _231 = catch_end _882, _888

  %% Argument types:
  %%    
  %% Aliased:
  %%    _231
  _1152 = is_tagged_tuple _231, `2`, `'EXIT'`
  br _1152, ^1386, ^890

1386:
  br ^1397

1397:
  _894 = new_try_tag `'catch'`
  br _894, ^892, ^893

892:
  %% lc_SUITE.erl:119
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _235 = call (`id`/1), `x`

  %% Aliased:
  %%    _235
  _896 = succeeded:body _235
  br _896, ^896, ^893

896:
  %% lc_SUITE.erl:119
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _235
  _700 = call (`'-basic/1-lc$^29/1-28-'`/1), _235

  %% Unique:
  %%    _700
  _897 = succeeded:body _700
  br _897, ^897, ^893

897:
  br ^891

893:
  %% Unique:
  %%    _894
  _900 = landingpad `'catch'`, _894

  %% Aliased:
  %%    _900
  _898 = extract _900, `0`
  br ^891

891:
  _901 = phi { _898, ^893 }, { _700, ^897 }

  %% Aliased:
  %%    _901
  %% Unique:
  %%    _894
  _239 = catch_end _894, _901

  %% Argument types:
  %%    
  %% Aliased:
  %%    _239
  _1145 = is_tagged_tuple _239, `2`, `'EXIT'`
  br _1145, ^1142, ^903

1142:
  %% Argument types:
  %%    _239 => {''EXIT'', any()}
  %% Aliased:
  %%    _239
  _502 = get_tuple_element _239, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _502
  _1139 = bif:is_tuple _502
  br _1139, ^1139, ^903

1139:
  %% Argument types:
  %%    _502 => {...}
  %% Aliased:
  %%    _502
  _1140 = bif:tuple_size _502

  %% Argument types:
  %%    _1140 => 0..16777215
  %% Unique:
  %%    _1140
  _1141 = bif:'=:=' _1140, `2`
  br _1141, ^1138, ^903

1138:
  %% Argument types:
  %%    _502 => {any(), any()}
  %% Aliased:
  %%    _502
  _505 = get_tuple_element _502, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _505
  _1137 = bif:'=:=' _505, `{bad_generator,x}`
  br _1137, ^1387, ^903

1387:
  br ^1398

1398:
  _907 = new_try_tag `'catch'`
  br _907, ^905, ^906

905:
  %% lc_SUITE.erl:120
  %% Result type:
  %%    none()
  _706 = call (`'-basic/1-lc$^30/1-29-'`/1), `[1,2]`

  %% Aliased:
  %%    _706
  _909 = succeeded:body _706
  br ^906

906:
  %% Unique:
  %%    _907
  _912 = landingpad `'catch'`, _907

  %% Aliased:
  %%    _912
  _910 = extract _912, `0`
  br ^904

904:
  %% Aliased:
  %%    _910
  %% Unique:
  %%    _907
  _247 = catch_end _907, _910

  %% Argument types:
  %%    
  %% Aliased:
  %%    _247
  _1133 = is_tagged_tuple _247, `2`, `'EXIT'`
  br _1133, ^1130, ^915

1130:
  %% Argument types:
  %%    _247 => {''EXIT'', any()}
  %% Aliased:
  %%    _247
  _512 = get_tuple_element _247, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _512
  _1127 = bif:is_tuple _512
  br _1127, ^1127, ^915

1127:
  %% Argument types:
  %%    _512 => {...}
  %% Aliased:
  %%    _512
  _1128 = bif:tuple_size _512

  %% Argument types:
  %%    _1128 => 0..16777215
  %% Unique:
  %%    _1128
  _1129 = bif:'=:=' _1128, `2`
  br _1129, ^1126, ^915

1126:
  %% Argument types:
  %%    _512 => {any(), any()}
  %% Aliased:
  %%    _512
  _515 = get_tuple_element _512, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _515
  _1125 = bif:'=:=' _515, `{bad_filter,not_bool}`
  br _1125, ^1388, ^915

1388:
  br ^1399

1399:
  _919 = new_try_tag `'catch'`
  br _919, ^917, ^918

917:
  %% lc_SUITE.erl:123
  %% Result type:
  %%    nonempty_list(1..3)
  _711 = call (`'-basic/1-lc$^31/1-30-'`/1), `[{ok,1},2,{ok,3}]`

  %% Unique:
  %%    _711
  _921 = succeeded:body _711
  br _921, ^921, ^918

921:
  br ^916

918:
  %% Unique:
  %%    _919
  _924 = landingpad `'catch'`, _919

  %% Aliased:
  %%    _924
  _922 = extract _924, `0`
  br ^916

916:
  _925 = phi { _922, ^918 }, { _711, ^921 }

  %% Aliased:
  %%    _925
  %% Unique:
  %%    _919
  _254 = catch_end _919, _925

  %% Argument types:
  %%    
  %% Aliased:
  %%    _254
  _1121 = is_tagged_tuple _254, `2`, `'EXIT'`
  br _1121, ^1118, ^927

1118:
  %% Argument types:
  %%    _254 => {''EXIT'', any()}
  %% Aliased:
  %%    _254
  _524 = get_tuple_element _254, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _524
  _1115 = bif:is_tuple _524
  br _1115, ^1115, ^927

1115:
  %% Argument types:
  %%    _524 => {...}
  %% Aliased:
  %%    _524
  _1116 = bif:tuple_size _524

  %% Argument types:
  %%    _1116 => 0..16777215
  %% Unique:
  %%    _1116
  _1117 = bif:'=:=' _1116, `2`
  br _1117, ^1114, ^927

1114:
  %% Argument types:
  %%    _524 => {any(), any()}
  %% Aliased:
  %%    _524
  _527 = get_tuple_element _524, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _527
  _1113 = bif:'=:=' _527, `{badmatch,2}`
  br _1113, ^1389, ^927

1389:
  br ^1400

1400:
  _931 = new_try_tag `'catch'`
  br _931, ^929, ^930

929:
  %% lc_SUITE.erl:124
  %% Result type:
  %%    list(0..127)
  _716 = call (`'-basic/1-lc$^32/1-31-'`/1), `<<1,128,2>>`

  %% Unique:
  %%    _716
  _933 = succeeded:body _716
  br _933, ^933, ^930

933:
  br ^928

930:
  %% Unique:
  %%    _931
  _936 = landingpad `'catch'`, _931

  %% Aliased:
  %%    _936
  _934 = extract _936, `0`
  br ^928

928:
  _937 = phi { _934, ^930 }, { _716, ^933 }

  %% Aliased:
  %%    _937
  %% Unique:
  %%    _931
  _260 = catch_end _931, _937

  %% Argument types:
  %%    
  %% Aliased:
  %%    _260
  _1109 = is_tagged_tuple _260, `2`, `'EXIT'`
  br _1109, ^1106, ^939

1106:
  %% Argument types:
  %%    _260 => {''EXIT'', any()}
  %% Aliased:
  %%    _260
  _541 = get_tuple_element _260, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _541
  _1103 = bif:is_tuple _541
  br _1103, ^1103, ^939

1103:
  %% Argument types:
  %%    _541 => {...}
  %% Aliased:
  %%    _541
  _1104 = bif:tuple_size _541

  %% Argument types:
  %%    _1104 => 0..16777215
  %% Unique:
  %%    _1104
  _1105 = bif:'=:=' _1104, `2`
  br _1105, ^1102, ^939

1102:
  %% Argument types:
  %%    _541 => {any(), any()}
  %% Aliased:
  %%    _541
  _544 = get_tuple_element _541, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _544
  _1101 = bif:'=:=' _544, `{badmatch,<<128,2>>}`
  br _1101, ^1390, ^939

1390:
  br ^1401

1401:
  _943 = new_try_tag `'catch'`
  br _943, ^941, ^942

941:
  %% lc_SUITE.erl:125
  _554 = call (`erts_internal`:`mc_iterator`/1), `#{1 => ok,2 => error,3 => ok}`

  %% Aliased:
  %%    _554
  _945 = succeeded:body _554
  br _945, ^945, ^942

945:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _554
  _949 = bif:'=:=' _554, `[]`
  br _949, ^949, ^1218

949:
  %% lc_SUITE.erl:125
  _721 = call (`erlang`:`error`/1), `{bad_generator,#{1 => ok,2 => error,3 => ok}}`

  %% Aliased:
  %%    _721
  _948 = succeeded:body _721
  br ^942

1218:
  %% lc_SUITE.erl:125
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _554
  _722 = call (`'-basic/1-lc$^33/1-32-'`/1), _554

  %% Unique:
  %%    _722
  _950 = succeeded:body _722
  br _950, ^950, ^942

950:
  br ^940

942:
  %% Unique:
  %%    _943
  _953 = landingpad `'catch'`, _943

  %% Aliased:
  %%    _953
  _951 = extract _953, `0`
  br ^940

940:
  _954 = phi { _951, ^942 }, { _722, ^950 }

  %% Aliased:
  %%    _954
  %% Unique:
  %%    _943
  _270 = catch_end _943, _954

  %% Argument types:
  %%    
  %% Aliased:
  %%    _270
  _1097 = is_tagged_tuple _270, `2`, `'EXIT'`
  br _1097, ^1094, ^956

1094:
  %% Argument types:
  %%    _270 => {''EXIT'', any()}
  %% Aliased:
  %%    _270
  _556 = get_tuple_element _270, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _556
  _1091 = bif:is_tuple _556
  br _1091, ^1091, ^956

1091:
  %% Argument types:
  %%    _556 => {...}
  %% Aliased:
  %%    _556
  _1092 = bif:tuple_size _556

  %% Argument types:
  %%    _1092 => 0..16777215
  %% Unique:
  %%    _1092
  _1093 = bif:'=:=' _1092, `2`
  br _1093, ^1090, ^956

1090:
  %% Argument types:
  %%    _556 => {any(), any()}
  %% Aliased:
  %%    _556
  _559 = get_tuple_element _556, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _559
  _1089 = bif:'=:=' _559, `{badmatch,{2,error}}`
  br _1089, ^1391, ^956

1391:
  br ^1402

1402:
  _960 = new_try_tag `'catch'`
  br _960, ^958, ^959

958:
  %% lc_SUITE.erl:135
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  _272 = call (`bad_generator`/1), `a`

  %% Unique:
  %%    _272
  _962 = succeeded:body _272
  br _962, ^962, ^959

962:
  %% lc_SUITE.erl:135
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Unique:
  %%    _272
  _724 = call (`id`/1), _272

  %% Aliased:
  %%    _724
  _963 = succeeded:body _724
  br _963, ^963, ^959

963:
  br ^957

959:
  %% Unique:
  %%    _960
  _966 = landingpad `'catch'`, _960

  %% Aliased:
  %%    _966
  _964 = extract _966, `0`
  br ^957

957:
  _967 = phi { _964, ^959 }, { _724, ^963 }

  %% Aliased:
  %%    _967
  %% Unique:
  %%    _960
  _273 = catch_end _960, _967

  %% Argument types:
  %%    
  %% Aliased:
  %%    _273
  _1085 = is_tagged_tuple _273, `2`, `'EXIT'`
  br _1085, ^1082, ^969

1082:
  %% Argument types:
  %%    _273 => {''EXIT'', any()}
  %% Aliased:
  %%    _273
  _560 = get_tuple_element _273, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _560
  _1079 = bif:is_tuple _560
  br _1079, ^1079, ^969

1079:
  %% Argument types:
  %%    _560 => {...}
  %% Aliased:
  %%    _560
  _1080 = bif:tuple_size _560

  %% Argument types:
  %%    _1080 => 0..16777215
  %% Unique:
  %%    _1080
  _1081 = bif:'=:=' _1080, `2`
  br _1081, ^1078, ^969

1078:
  %% Argument types:
  %%    _560 => {any(), any()}
  %% Aliased:
  %%    _560
  _563 = get_tuple_element _560, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _563
  _1077 = bif:'=:=' _563, `{bad_generator,a}`
  br _1077, ^1077, ^969

1077:
  %% Argument types:
  %%    _560 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _560
  _562 = get_tuple_element _560, `1`

  %% Aliased:
  %%    _562
  _1076 = is_nonempty_list _562
  br _1076, ^1076, ^969

1076:
  %% Argument types:
  %%    _562 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _562
  _565 = get_hd _562

  %% Argument types:
  %%    
  %% Aliased:
  %%    _565
  _1073 = is_tagged_tuple _565, `4`, `lc_SUITE`
  br _1073, ^1070, ^969

1070:
  %% Argument types:
  %%    _565 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _565
  _566 = get_tuple_element _565, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _566
  _1069 = bif:'=:=' _566, `[{file,"bad_lc.erl"},{line,4}]`
  br _1069, ^1392, ^969

1392:
  br ^1403

1403:
  _973 = new_try_tag `'catch'`
  br _973, ^971, ^972

971:
  %% lc_SUITE.erl:140
  %% Result type:
  %%    none()
  _275 = call (`bad_generator_bc`/1), `a`

  %% Aliased:
  %%    _275
  _975 = succeeded:body _275
  br ^972

972:
  %% Unique:
  %%    _973
  _979 = landingpad `'catch'`, _973

  %% Aliased:
  %%    _979
  _977 = extract _979, `0`
  br ^970

970:
  %% Aliased:
  %%    _977
  %% Unique:
  %%    _973
  _276 = catch_end _973, _977

  %% Argument types:
  %%    
  %% Aliased:
  %%    _276
  _1065 = is_tagged_tuple _276, `2`, `'EXIT'`
  br _1065, ^1062, ^982

1062:
  %% Argument types:
  %%    _276 => {''EXIT'', any()}
  %% Aliased:
  %%    _276
  _570 = get_tuple_element _276, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _570
  _1059 = bif:is_tuple _570
  br _1059, ^1059, ^982

1059:
  %% Argument types:
  %%    _570 => {...}
  %% Aliased:
  %%    _570
  _1060 = bif:tuple_size _570

  %% Argument types:
  %%    _1060 => 0..16777215
  %% Unique:
  %%    _1060
  _1061 = bif:'=:=' _1060, `2`
  br _1061, ^1058, ^982

1058:
  %% Argument types:
  %%    _570 => {any(), any()}
  %% Aliased:
  %%    _570
  _573 = get_tuple_element _570, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _573
  _1057 = bif:'=:=' _573, `{bad_generator,a}`
  br _1057, ^1057, ^982

1057:
  %% Argument types:
  %%    _570 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _570
  _572 = get_tuple_element _570, `1`

  %% Aliased:
  %%    _572
  _1056 = is_nonempty_list _572
  br _1056, ^1056, ^982

1056:
  %% Argument types:
  %%    _572 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _572
  _575 = get_hd _572

  %% Argument types:
  %%    
  %% Aliased:
  %%    _575
  _1053 = is_tagged_tuple _575, `4`, `lc_SUITE`
  br _1053, ^1050, ^982

1050:
  %% Argument types:
  %%    _575 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _575
  _576 = get_tuple_element _575, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _576
  _1049 = bif:'=:=' _576, `[{file,"bad_lc.erl"},{line,7}]`
  br _1049, ^1393, ^982

1393:
  br ^1404

1404:
  _986 = new_try_tag `'catch'`
  br _986, ^984, ^985

984:
  %% lc_SUITE.erl:145
  %% Result type:
  %%    none()
  _278 = call (`bad_generator_mc`/1), `a`

  %% Aliased:
  %%    _278
  _988 = succeeded:body _278
  br ^985

985:
  %% Unique:
  %%    _986
  _992 = landingpad `'catch'`, _986

  %% Aliased:
  %%    _992
  _990 = extract _992, `0`
  br ^983

983:
  %% Aliased:
  %%    _990
  %% Unique:
  %%    _986
  _279 = catch_end _986, _990

  %% Argument types:
  %%    
  %% Aliased:
  %%    _279
  _1045 = is_tagged_tuple _279, `2`, `'EXIT'`
  br _1045, ^1042, ^995

1042:
  %% Argument types:
  %%    _279 => {''EXIT'', any()}
  %% Aliased:
  %%    _279
  _580 = get_tuple_element _279, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _580
  _1039 = bif:is_tuple _580
  br _1039, ^1039, ^995

1039:
  %% Argument types:
  %%    _580 => {...}
  %% Aliased:
  %%    _580
  _1040 = bif:tuple_size _580

  %% Argument types:
  %%    _1040 => 0..16777215
  %% Unique:
  %%    _1040
  _1041 = bif:'=:=' _1040, `2`
  br _1041, ^1038, ^995

1038:
  %% Argument types:
  %%    _580 => {any(), any()}
  %% Aliased:
  %%    _580
  _583 = get_tuple_element _580, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _583
  _1037 = bif:'=:=' _583, `{bad_generator,a}`
  br _1037, ^1037, ^995

1037:
  %% Argument types:
  %%    _580 => {{'bad_generator', 'a'}, any()}
  %% Aliased:
  %%    _580
  _582 = get_tuple_element _580, `1`

  %% Aliased:
  %%    _582
  _1036 = is_nonempty_list _582
  br _1036, ^1036, ^995

1036:
  %% Argument types:
  %%    _582 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _582
  _585 = get_hd _582

  %% Argument types:
  %%    
  %% Aliased:
  %%    _585
  _1033 = is_tagged_tuple _585, `4`, `lc_SUITE`
  br _1033, ^1030, ^995

1030:
  %% Argument types:
  %%    _585 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _585
  _586 = get_tuple_element _585, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _586
  _1029 = bif:'=:=' _586, `[{file,"bad_lc.erl"},{line,10}]`
  br _1029, ^1394, ^995

1394:
  br ^1405

1405:
  _999 = new_try_tag `'catch'`
  br _999, ^997, ^998

997:
  %% lc_SUITE.erl:151
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _281 = call (`id`/1), `[a,b,c|d]`

  %% Aliased:
  %%    _281
  _1001 = succeeded:body _281
  br _1001, ^1001, ^998

1001:
  %% lc_SUITE.erl:151
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _281
  _730 = call (`bad_generator`/1), _281

  %% Unique:
  %%    _730
  _1002 = succeeded:body _730
  br _1002, ^1002, ^998

1002:
  br ^996

998:
  %% Unique:
  %%    _999
  _1005 = landingpad `'catch'`, _999

  %% Aliased:
  %%    _1005
  _1003 = extract _1005, `0`
  br ^996

996:
  _1006 = phi { _1003, ^998 }, { _730, ^1002 }

  %% Aliased:
  %%    _1006
  %% Unique:
  %%    _999
  _282 = catch_end _999, _1006

  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  _1025 = is_tagged_tuple _282, `2`, `'EXIT'`
  br _1025, ^1022, ^1008

1022:
  %% Argument types:
  %%    _282 => {''EXIT'', any()}
  %% Aliased:
  %%    _282
  _590 = get_tuple_element _282, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _590
  _1019 = bif:is_tuple _590
  br _1019, ^1019, ^1008

1019:
  %% Argument types:
  %%    _590 => {...}
  %% Aliased:
  %%    _590
  _1020 = bif:tuple_size _590

  %% Argument types:
  %%    _1020 => 0..16777215
  %% Unique:
  %%    _1020
  _1021 = bif:'=:=' _1020, `2`
  br _1021, ^1018, ^1008

1018:
  %% Argument types:
  %%    _590 => {any(), any()}
  %% Aliased:
  %%    _590
  _593 = get_tuple_element _590, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _593
  _1017 = bif:'=:=' _593, `{bad_generator,d}`
  br _1017, ^1017, ^1008

1017:
  %% Argument types:
  %%    _590 => {{'bad_generator', 'd'}, any()}
  %% Aliased:
  %%    _590
  _592 = get_tuple_element _590, `1`

  %% Aliased:
  %%    _592
  _1016 = is_nonempty_list _592
  br _1016, ^1016, ^1008

1016:
  %% Argument types:
  %%    _592 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _592
  _595 = get_hd _592

  %% Argument types:
  %%    
  %% Aliased:
  %%    _595
  _1013 = is_tagged_tuple _595, `4`, `lc_SUITE`
  br _1013, ^1010, ^1008

1010:
  %% Argument types:
  %%    _595 => {'lc_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _595
  _596 = get_tuple_element _595, `3`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _596
  _1009 = bif:'=:=' _596, `[{file,"bad_lc.erl"},{line,4}]`
  br _1009, ^968, ^1008

968:
  %% Result type:
  %%    'ok'
  ret `ok`

1008:
  %% lc_SUITE.erl:148
  %% Aliased:
  %%    _282
  _731 = match_fail `badmatch`, _282

  %% Unique:
  %%    _731
  _1028 = succeeded:body _731
  br ^1

995:
  %% lc_SUITE.erl:142
  %% Aliased:
  %%    _279
  _732 = match_fail `badmatch`, _279

  %% Unique:
  %%    _732
  _1048 = succeeded:body _732
  br ^1

982:
  %% lc_SUITE.erl:137
  %% Aliased:
  %%    _276
  _733 = match_fail `badmatch`, _276

  %% Unique:
  %%    _733
  _1068 = succeeded:body _733
  br ^1

969:
  %% lc_SUITE.erl:132
  %% Aliased:
  %%    _273
  _734 = match_fail `badmatch`, _273

  %% Unique:
  %%    _734
  _1088 = succeeded:body _734
  br ^1

956:
  %% lc_SUITE.erl:125
  %% Aliased:
  %%    _270
  _735 = match_fail `badmatch`, _270

  %% Unique:
  %%    _735
  _1100 = succeeded:body _735
  br ^1

939:
  %% lc_SUITE.erl:124
  %% Aliased:
  %%    _260
  _736 = match_fail `badmatch`, _260

  %% Unique:
  %%    _736
  _1112 = succeeded:body _736
  br ^1

927:
  %% lc_SUITE.erl:123
  %% Aliased:
  %%    _254
  _737 = match_fail `badmatch`, _254

  %% Unique:
  %%    _737
  _1124 = succeeded:body _737
  br ^1

915:
  %% lc_SUITE.erl:120
  %% Aliased:
  %%    _247
  _738 = match_fail `badmatch`, _247

  %% Unique:
  %%    _738
  _1136 = succeeded:body _738
  br ^1

903:
  %% lc_SUITE.erl:119
  %% Aliased:
  %%    _239
  _739 = match_fail `badmatch`, _239

  %% Unique:
  %%    _739
  _1148 = succeeded:body _739
  br ^1

890:
  %% lc_SUITE.erl:118
  %% Aliased:
  %%    _231
  _740 = match_fail `badmatch`, _231

  %% Unique:
  %%    _740
  _1155 = succeeded:body _740
  br ^1

875:
  %% lc_SUITE.erl:116
  %% Aliased:
  %%    _215
  _742 = match_fail `badmatch`, _215

  %% Unique:
  %%    _742
  _1164 = succeeded:body _742
  br ^1

863:
  %% lc_SUITE.erl:115
  %% Unique:
  %%    _206
  _743 = match_fail `badmatch`, _206

  %% Unique:
  %%    _743
  _1166 = succeeded:body _743
  br ^1

860:
  %% lc_SUITE.erl:112
  %% Unique:
  %%    _198
  _744 = match_fail `badmatch`, _198

  %% Unique:
  %%    _744
  _1168 = succeeded:body _744
  br ^1

852:
  %% lc_SUITE.erl:111
  %% Unique:
  %%    _187
  _745 = match_fail `badmatch`, _187

  %% Unique:
  %%    _745
  _1170 = succeeded:body _745
  br ^1

849:
  %% lc_SUITE.erl:110
  %% Unique:
  %%    _180
  _746 = match_fail `badmatch`, _180

  %% Unique:
  %%    _746
  _1172 = succeeded:body _746
  br ^1

846:
  %% lc_SUITE.erl:107
  %% Unique:
  %%    _172
  _747 = match_fail `badmatch`, _172

  %% Unique:
  %%    _747
  _1174 = succeeded:body _747
  br ^1

838:
  %% lc_SUITE.erl:106
  %% Unique:
  %%    _161
  _748 = match_fail `badmatch`, _161

  %% Unique:
  %%    _748
  _1176 = succeeded:body _748
  br ^1

835:
  %% lc_SUITE.erl:105
  %% Unique:
  %%    _154
  _749 = match_fail `badmatch`, _154

  %% Unique:
  %%    _749
  _1178 = succeeded:body _749
  br ^1

829:
  %% lc_SUITE.erl:99
  %% Unique:
  %%    _139
  _751 = match_fail `badmatch`, _139

  %% Unique:
  %%    _751
  _1182 = succeeded:body _751
  br ^1

823:
  %% lc_SUITE.erl:95
  %% Unique:
  %%    _121
  _753 = match_fail `badmatch`, _121

  %% Unique:
  %%    _753
  _1186 = succeeded:body _753
  br ^1

814:
  %% lc_SUITE.erl:90
  %% Unique:
  %%    _377
  _756 = match_fail `badmatch`, _377

  %% Unique:
  %%    _756
  _1192 = succeeded:body _756
  br ^1

811:
  %% lc_SUITE.erl:87
  %% Unique:
  %%    _99
  _757 = match_fail `badmatch`, _99

  %% Unique:
  %%    _757
  _1194 = succeeded:body _757
  br ^1

807:
  %% lc_SUITE.erl:83
  %% Unique:
  %%    _90
  _758 = match_fail `badmatch`, _90

  %% Unique:
  %%    _758
  _1196 = succeeded:body _758
  br ^1

803:
  %% lc_SUITE.erl:80
  %% Unique:
  %%    _74
  _759 = match_fail `badmatch`, _74

  %% Unique:
  %%    _759
  _1198 = succeeded:body _759
  br ^1

800:
  %% lc_SUITE.erl:79
  %% Unique:
  %%    _65
  _760 = match_fail `badmatch`, _65

  %% Unique:
  %%    _760
  _1200 = succeeded:body _760
  br ^1

797:
  %% lc_SUITE.erl:78
  %% Unique:
  %%    _57
  _761 = match_fail `badmatch`, _57

  %% Unique:
  %%    _761
  _1202 = succeeded:body _761
  br ^1

794:
  %% lc_SUITE.erl:77
  %% Unique:
  %%    _48
  _762 = match_fail `badmatch`, _48

  %% Unique:
  %%    _762
  _1204 = succeeded:body _762
  br ^1

788:
  %% lc_SUITE.erl:75
  %% Unique:
  %%    _31
  _764 = match_fail `badmatch`, _31

  %% Unique:
  %%    _764
  _1208 = succeeded:body _764
  br ^1

785:
  %% lc_SUITE.erl:74
  %% Unique:
  %%    _22
  _765 = match_fail `badmatch`, _22

  %% Unique:
  %%    _765
  _1210 = succeeded:body _765
  br ^1

781:
  %% lc_SUITE.erl:73
  %% Unique:
  %%    _316
  _766 = match_fail `badmatch`, _316

  %% Unique:
  %%    _766
  _1211 = succeeded:body _766
  br ^1

777:
  %% lc_SUITE.erl:72
  %% Unique:
  %%    _11
  _767 = match_fail `badmatch`, _11

  %% Unique:
  %%    _767
  _1212 = succeeded:body _767
  br ^1

771:
  %% lc_SUITE.erl:69
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-basic/1-',1}}
  _768 = match_fail `function_clause`, _0

  %% Unique:
  %%    _768
  _1213 = succeeded:body _768
  br ^1

1:
  _769 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _769
}

%% lc_SUITE.erl:156
%% Counter = 4
%% bs_ensure_opt: true
function `lc_SUITE`:`tuple_list`() {
0:
  %% Result type:
  %%    nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  ret `[{a,b,true},[a,b,c],glurf,{a,b,false,xx},{a,b},{x,y,true,true},{a,b,d,ddd}]`
}

%% lc_SUITE.erl:159
%% Counter = 18
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_))
function `lc_SUITE`:`my_map`(_0, _1) {
0:
  %% lc_SUITE.erl:160
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _1
  _14 = call (`'-my_map/2-lc$^0/1-0-'`/2), _1, _0

  %% Unique:
  %%    _14
  _17 = succeeded:body _14
  br _17, ^17, ^1

17:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _14
  ret _14

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% lc_SUITE.erl:162
%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`odd`(_0) {
0:
  %% lc_SUITE.erl:163
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _1 = bif:'rem' _0, `2`

  %% Unique:
  %%    _1
  _5 = succeeded:body _1
  br _5, ^5, ^1

5:
  %% lc_SUITE.erl:163
  %% Argument types:
  %%    _1 => -1..1
  %% Unique:
  %%    _1
  _2 = bif:'=:=' _1, `1`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% lc_SUITE.erl:165
%% Counter = 48
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     nonempty_list(46..99)
function `lc_SUITE`:`alphanum`(_0) {
0:
  %% lc_SUITE.erl:166
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _0
  _44 = call (`'-alphanum/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _44
  _47 = succeeded:body _44
  br _47, ^47, ^1

47:
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _44
  ret _44

1:
  _45 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _45
}

%% lc_SUITE.erl:170
%% Counter = 16
%% bs_ensure_opt: true
function `lc_SUITE`:`deeply_nested`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _9 = bif:is_list _0
  br _9, ^9, ^8

9:
  %% lc_SUITE.erl:171
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _3 = call (`deeply_nested_1`/0)

  %% Unique:
  %%    _3
  _10 = succeeded:body _3
  br _10, ^10, ^1

10:
  %% Argument types:
  %%    _3 => nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _3
  _13 = bif:'=:=' _3, `[[99,98,97,96,42,17,1764,12,11,10,9,8,7,6,5,4,3,7,2,1]]`
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% lc_SUITE.erl:171
  %% Unique:
  %%    _3
  _4 = match_fail `badmatch`, _3

  %% Unique:
  %%    _4
  _14 = succeeded:body _4
  br ^1

8:
  %% lc_SUITE.erl:170
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-deeply_nested/1-',1}}
  _5 = match_fail `function_clause`, _0

  %% Unique:
  %%    _5
  _15 = succeeded:body _5
  br ^1

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% lc_SUITE.erl:174
%% Counter = 252
%% bs_ensure_opt: true
function `lc_SUITE`:`deeply_nested_1`() {
0:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _248 = call (`'-deeply_nested_1/0-lc$^2/1-0-'`/1), `"c"`

  %% Unique:
  %%    _248
  _251 = succeeded:body _248
  br _251, ^251, ^1

251:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _248
  ret _248

1:
  _249 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _249
}

%% lc_SUITE.erl:182
%% Counter = 42
%% bs_ensure_opt: true
function `lc_SUITE`:`no_generator`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _38 = bif:is_list _0
  br _38, ^38, ^37

38:
  %% lc_SUITE.erl:183
  Seq = call (`lists`:`seq`/2), `-10`, `17`

  %% Aliased:
  %%    Seq
  _39 = succeeded:body Seq
  br _39, ^39, ^1

39:
  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    Seq
  _33 = call (`'-no_generator/1-lc$^0/1-0-'`/2), Seq, Seq

  %% Unique:
  %%    _33
  _40 = succeeded:body _33
  br _40, ^40, ^1

40:
  %% Result type:
  %%    'ok'
  ret `ok`

37:
  %% lc_SUITE.erl:182
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-no_generator/1-',1}}
  _34 = match_fail `function_clause`, _0

  %% Unique:
  %%    _34
  _41 = succeeded:body _34
  br ^1

1:
  _35 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _35
}

%% lc_SUITE.erl:191
%% Counter = 145
%% bs_ensure_opt: true
function `lc_SUITE`:`no_gen`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _68 = bif:'=:=' _1, `9`
  br _68, ^68, ^67

68:
  br ^66

67:
  br ^66

66:
  _2 = phi { `[]`, ^67 }, { `"\t"`, ^68 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _71 = bif:'=:=' _1, `8`
  br _71, ^71, ^70

71:
  %% Argument types:
  %%    _2 => list(9)
  %% Unique:
  %%    _2
  _41 = put_list `8`, _2
  br ^69

70:
  br ^69

69:
  _3 = phi { _2, ^70 }, { _41, ^71 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _74 = bif:'=:=' _1, `7`
  br _74, ^74, ^73

74:
  %% Argument types:
  %%    _3 => list(8..9)
  %% Unique:
  %%    _3
  _42 = put_list `7`, _3
  br ^72

73:
  br ^72

72:
  _4 = phi { _3, ^73 }, { _42, ^74 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _77 = bif:'=:=' _1, `6`
  br _77, ^77, ^76

77:
  %% Argument types:
  %%    _4 => list(7..9)
  %% Unique:
  %%    _4
  _43 = put_list `6`, _4
  br ^75

76:
  br ^75

75:
  _5 = phi { _4, ^76 }, { _43, ^77 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _80 = bif:'=:=' _1, `5`
  br _80, ^80, ^79

80:
  %% Argument types:
  %%    _5 => list(6..9)
  %% Unique:
  %%    _5
  _44 = put_list `5`, _5
  br ^78

79:
  br ^78

78:
  _6 = phi { _5, ^79 }, { _44, ^80 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _83 = bif:'=:=' _1, `4`
  br _83, ^83, ^82

83:
  %% Argument types:
  %%    _6 => list(5..9)
  %% Unique:
  %%    _6
  _45 = put_list `4`, _6
  br ^81

82:
  br ^81

81:
  _7 = phi { _6, ^82 }, { _45, ^83 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _86 = bif:'=:=' _1, `3`
  br _86, ^86, ^85

86:
  %% Argument types:
  %%    _7 => list(4..9)
  %% Unique:
  %%    _7
  _46 = put_list `3`, _7
  br ^84

85:
  br ^84

84:
  _8 = phi { _7, ^85 }, { _46, ^86 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _89 = bif:'=:=' _1, `2`
  br _89, ^89, ^88

89:
  %% Argument types:
  %%    _8 => list(3..9)
  %% Unique:
  %%    _8
  _47 = put_list `2`, _8
  br ^87

88:
  br ^87

87:
  _9 = phi { _8, ^88 }, { _47, ^89 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _92 = bif:'=:=' _1, `1`
  br _92, ^92, ^91

92:
  %% Argument types:
  %%    _9 => list(2..9)
  %% Unique:
  %%    _9
  _48 = put_list `1`, _9
  br ^90

91:
  br ^90

90:
  _10 = phi { _9, ^91 }, { _48, ^92 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _95 = bif:'=:=' _0, `9`
  br _95, ^95, ^94

95:
  %% Argument types:
  %%    _10 => list(1..9)
  %% Unique:
  %%    _10
  _49 = put_list `9`, _10
  br ^93

94:
  br ^93

93:
  _11 = phi { _10, ^94 }, { _49, ^95 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _98 = bif:'=:=' _0, `8`
  br _98, ^98, ^97

98:
  %% Argument types:
  %%    _11 => list(1..9)
  %% Unique:
  %%    _11
  _50 = put_list `8`, _11
  br ^96

97:
  br ^96

96:
  _12 = phi { _11, ^97 }, { _50, ^98 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _101 = bif:'=:=' _0, `7`
  br _101, ^101, ^100

101:
  %% Argument types:
  %%    _12 => list(1..9)
  %% Unique:
  %%    _12
  _51 = put_list `7`, _12
  br ^99

100:
  br ^99

99:
  _13 = phi { _12, ^100 }, { _51, ^101 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _104 = bif:'=:=' _0, `6`
  br _104, ^104, ^103

104:
  %% Argument types:
  %%    _13 => list(1..9)
  %% Unique:
  %%    _13
  _52 = put_list `6`, _13
  br ^102

103:
  br ^102

102:
  _14 = phi { _13, ^103 }, { _52, ^104 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _107 = bif:'=:=' _0, `5`
  br _107, ^107, ^106

107:
  %% Argument types:
  %%    _14 => list(1..9)
  %% Unique:
  %%    _14
  _53 = put_list `5`, _14
  br ^105

106:
  br ^105

105:
  _15 = phi { _14, ^106 }, { _53, ^107 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _110 = bif:'=:=' _0, `4`
  br _110, ^110, ^109

110:
  %% Argument types:
  %%    _15 => list(1..9)
  %% Unique:
  %%    _15
  _54 = put_list `4`, _15
  br ^108

109:
  br ^108

108:
  _16 = phi { _15, ^109 }, { _54, ^110 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _113 = bif:'=:=' _0, `3`
  br _113, ^113, ^112

113:
  %% Argument types:
  %%    _16 => list(1..9)
  %% Unique:
  %%    _16
  _55 = put_list `3`, _16
  br ^111

112:
  br ^111

111:
  _17 = phi { _16, ^112 }, { _55, ^113 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _116 = bif:'=:=' _0, `2`
  br _116, ^116, ^115

116:
  %% Argument types:
  %%    _17 => list(1..9)
  %% Unique:
  %%    _17
  _56 = put_list `2`, _17
  br ^114

115:
  br ^114

114:
  _18 = phi { _17, ^115 }, { _56, ^116 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _119 = bif:'=:=' _0, `1`
  br _119, ^119, ^118

119:
  %% Argument types:
  %%    _18 => list(1..9)
  %% Unique:
  %%    _18
  _57 = put_list `1`, _18
  br ^117

118:
  br ^117

117:
  _19 = phi { _18, ^118 }, { _57, ^119 }

  %% lc_SUITE.erl:196
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _0, 
  %%    _1
  _28 = call (`no_gen_one_more`/2), _0, _1

  %% Unique:
  %%    _28
  _120 = succeeded:body _28
  br _120, ^120, ^1

120:
  br _28, ^124, ^123

124:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _29 = put_tuple `one_more`, _0, _1

  %% Argument types:
  %%    _29 => {'one_more', any(), any()}
  %%    _19 => list(1..9)
  %% Unique:
  %%    _19, 
  %%    _29
  _58 = put_list _29, _19
  br ^121

123:
  br ^121

121:
  _21 = phi { _19, ^123 }, { _58, ^124 }

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _128 = bif:'=:=' _0, _1
  br _128, ^128, ^127

128:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _30 = put_tuple _0, _1

  %% Argument types:
  %%    _30 => {any(), any()}
  %%    _21 => list(1..9 | {'one_more', any(), any()})
  %% Unique:
  %%    _21, 
  %%    _30
  _60 = put_list _30, _21
  br ^126

127:
  br ^126

126:
  _22 = phi { _21, ^127 }, { _60, ^128 }

  %% lc_SUITE.erl:194
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _23 = bif:'rem' _0, _1

  %% Unique:
  %%    _23
  _132 = succeeded:guard _23
  br _132, ^132, ^130

132:
  %% Argument types:
  %%    _23 => integer()
  %% Unique:
  %%    _23
  _133 = bif:'=:=' _23, `3`
  br _133, ^133, ^130

133:
  %% Argument types:
  %%    _0 => integer()
  %%    _1 => integer()
  %% Unique:
  %%    _0, 
  %%    _1
  _31 = put_tuple _0, _1

  %% Argument types:
  %%    _31 => {integer(), integer()}
  %%    _22 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _22, 
  %%    _31
  _61 = put_list _31, _22
  br ^129

130:
  br ^129

129:
  _24 = phi { _22, ^130 }, { _61, ^133 }

  %% lc_SUITE.erl:193
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _25 = bif:'*' _0, _1

  %% Unique:
  %%    _25
  _137 = succeeded:guard _25
  br _137, ^137, ^135

137:
  %% Argument types:
  %%    _25 => number()
  %% Unique:
  %%    _25
  _138 = bif:'=:=' _25, `0`
  br _138, ^138, ^135

138:
  %% Argument types:
  %%    _0 => number()
  %%    _1 => number()
  %% Unique:
  %%    _0, 
  %%    _1
  _35 = put_tuple _0, _1

  %% Argument types:
  %%    _35 => {number(), number()}
  %%    _24 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _24, 
  %%    _35
  _62 = put_list _35, _24
  br ^134

135:
  br ^134

134:
  _26 = phi { _24, ^135 }, { _62, ^138 }

  %% lc_SUITE.erl:192
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _27 = bif:'+' _0, _1

  %% Unique:
  %%    _27
  _142 = succeeded:guard _27
  br _142, ^142, ^140

142:
  %% Argument types:
  %%    _27 => number()
  %% Unique:
  %%    _27
  _143 = bif:'=:=' _27, `0`
  br _143, ^143, ^140

143:
  %% Argument types:
  %%    _0 => number()
  %%    _1 => number()
  %% Unique:
  %%    _0, 
  %%    _1
  _39 = put_tuple _0, _1

  %% Argument types:
  %%    _39 => {number(), number()}
  %%    _26 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _26, 
  %%    _39
  _63 = put_list _39, _26
  %% Result type:
  %%    nonempty_list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _63
  ret _63

140:
  %% Result type:
  %%    list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _26
  ret _26

1:
  _64 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _64
}

%% lc_SUITE.erl:216
%% Counter = 86
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     list(1..9 | {any(), any(), ...})
function `lc_SUITE`:`no_gen_verify`(_0, _1, _2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  Pair = put_tuple _1, _2

  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _31 = make_fun (`'-no_gen_verify/3-fun-6-'`/2), _1, _2

  %% lc_SUITE.erl:218
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _31, 
  %%    Pair
  _32 = call (`no_gen_eval`/2), _31, Pair

  %% Unique:
  %%    _32
  _59 = succeeded:body _32
  br _59, ^59, ^1

59:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _27 = make_fun (`'-no_gen_verify/3-fun-5-'`/2), _1, _2

  %% lc_SUITE.erl:219
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _27, 
  %%    Pair
  _28 = call (`no_gen_eval`/2), _27, Pair

  %% Unique:
  %%    _28
  _60 = succeeded:body _28
  br _60, ^60, ^1

60:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _23 = make_fun (`'-no_gen_verify/3-fun-4-'`/2), _1, _2

  %% lc_SUITE.erl:220
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _23, 
  %%    Pair
  _24 = call (`no_gen_eval`/2), _23, Pair

  %% Unique:
  %%    _24
  _61 = succeeded:body _24
  br _61, ^61, ^1

61:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _17 = make_fun (`'-no_gen_verify/3-fun-3-'`/2), _1, _2

  %% lc_SUITE.erl:221
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _17, 
  %%    Pair
  _18 = call (`no_gen_eval`/2), _17, Pair

  %% Unique:
  %%    _18
  _62 = succeeded:body _18
  br _62, ^62, ^1

62:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1, 
  %%    _2
  _14 = make_fun (`'-no_gen_verify/3-fun-2-'`/2), _1, _2

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _41 = put_tuple `one_more`, _1, _2

  %% lc_SUITE.erl:222
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _14
  %% Unique:
  %%    _41
  _15 = call (`no_gen_eval`/2), _14, _41

  %% Unique:
  %%    _15
  _63 = succeeded:body _15
  br _63, ^63, ^1

63:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _1
  _10 = make_fun (`'-no_gen_verify/3-fun-1-'`/1), _1

  %% lc_SUITE.erl:223
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _1, 
  %%    _10
  _11 = call (`no_gen_eval`/2), _10, _1

  %% Unique:
  %%    _11
  _64 = succeeded:body _11
  br _64, ^64, ^1

64:
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _2
  _6 = make_fun (`'-no_gen_verify/3-fun-0-'`/1), _2

  %% lc_SUITE.erl:224
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _2, 
  %%    _6
  _7 = call (`no_gen_eval`/2), _6, _2

  %% Unique:
  %%    _7
  _65 = succeeded:body _7
  br _65, ^65, ^1

65:
  %% lc_SUITE.erl:223
  %% Unique:
  %%    _7, 
  %%    _11
  _12 = call (`erlang`:`'++'`/2), _11, _7

  %% lc_SUITE.erl:222
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _15
  _16 = call (`erlang`:`'++'`/2), _15, _12

  %% lc_SUITE.erl:221
  %% Aliased:
  %%    _16
  %% Unique:
  %%    _18
  _19 = call (`erlang`:`'++'`/2), _18, _16

  %% lc_SUITE.erl:220
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _24
  _25 = call (`erlang`:`'++'`/2), _24, _19

  %% lc_SUITE.erl:219
  %% Aliased:
  %%    _25
  %% Unique:
  %%    _28
  _29 = call (`erlang`:`'++'`/2), _28, _25

  %% lc_SUITE.erl:218
  %% Aliased:
  %%    _29
  %% Unique:
  %%    _32
  ShouldBe = call (`erlang`:`'++'`/2), _32, _29

  %% Argument types:
  %%    _0 => list(1..9 | {any(), any(), ...})
  %%    ShouldBe => list(any())
  %% Aliased:
  %%    ShouldBe
  %% Unique:
  %%    _0
  _74 = bif:'=:=' _0, ShouldBe
  br _74, ^74, ^73

74:
  %% Result type:
  %%    'ok'
  ret `ok`

73:
  %% Argument types:
  %%    _0 => list(1..9 | {any(), any(), ...})
  %% Unique:
  %%    _0
  _44 = put_list _0, `[]`

  %% Argument types:
  %%    ShouldBe => list(any())
  %%    _44 => nonempty_list(list(1..9 | {any(), any(), ...}))
  %% Aliased:
  %%    ShouldBe
  %% Unique:
  %%    _44
  _45 = put_list ShouldBe, _44

  %% Argument types:
  %%    _45 => nonempty_list(list(any()))
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _45
  _46 = put_list _2, _45

  %% Argument types:
  %%    _46 => nonempty_list(any())
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _46
  _47 = put_list _1, _46

  %% lc_SUITE.erl:228
  %% Unique:
  %%    _47
  _55 = call (`io`:`format`/2), `"A = ~p; B = ~p; Expected = ~p, actual = ~p"`, _47

  %% Aliased:
  %%    _55
  _75 = succeeded:body _55
  br _75, ^75, ^1

75:
  %% lc_SUITE.erl:229
  _56 = call (`ct`:`fail`/1), `failed`

  %% Aliased:
  %%    _56
  _76 = succeeded:body _56
  br _76, ^76, ^1

76:
  %% Aliased:
  %%    _56
  ret _56

1:
  _57 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _57
}

%% lc_SUITE.erl:232
%% Counter = 14
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun(() -> 'false' | 'true')
function `lc_SUITE`:`no_gen_eval`(_0, _1) {
0:
  %% lc_SUITE.erl:233
  %% Result type:
  %%    'false' | 'true'
  %% Argument types:
  %%    _0 => fun(() -> 'false' | 'true')
  %% Aliased:
  %%    _0
  _3 = call _0

  %% Aliased:
  %%    _3
  _8 = succeeded:body _3
  br _8, ^8, ^1

8:
  br _3, ^12, ^11

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _4 = put_list _1, `[]`
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _4
  ret _4

11:
  %% Result type:
  %%    nil()
  ret `[]`

1:
  _6 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _6
}

%% lc_SUITE.erl:238
%% Counter = 7
%% bs_ensure_opt: true
function `lc_SUITE`:`no_gen_one_more`(_0, _1) {
0:
  %% lc_SUITE.erl:238
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = bif:'+' _0, `1`

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^6, ^1

6:
  %% lc_SUITE.erl:238
  %% Argument types:
  %%    _2 => number()
  %% Aliased:
  %%    _1
  %% Unique:
  %%    _2
  _3 = bif:'=:=' _2, _1
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% lc_SUITE.erl:240
%% Counter = 32
%% bs_ensure_opt: true
function `lc_SUITE`:`empty_generator`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _25 = bif:is_list _0
  br _25, ^25, ^24

25:
  %% lc_SUITE.erl:241
  %% Result type:
  %%    nil()
  _8 = call (`'-empty_generator/1-lc$^0/1-0-'`/1), `[]`

  %% Unique:
  %%    _8
  _26 = succeeded:body _8
  br _26, ^29, ^1

29:
  %% Result type:
  %%    'ok'
  ret `ok`

24:
  %% lc_SUITE.erl:240
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-empty_generator/1-',1}}
  _21 = match_fail `function_clause`, _0

  %% Unique:
  %%    _21
  _31 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% lc_SUITE.erl:244
%% Counter = 15
%% bs_ensure_opt: true
function `lc_SUITE`:`no_export`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _13 = bif:is_list _0
  br _13, ^13, ^12

13:
  %% Result type:
  %%    'ok'
  ret `ok`

12:
  %% lc_SUITE.erl:244
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-no_export/1-',1}}
  _9 = match_fail `function_clause`, _0

  %% Unique:
  %%    _9
  _14 = succeeded:body _9
  br ^1

1:
  _10 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _10
}

%% lc_SUITE.erl:251
%% Counter = 67
%% bs_ensure_opt: true
function `lc_SUITE`:`shadow`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _50 = bif:is_list _0
  br _50, ^50, ^49

50:
  %% lc_SUITE.erl:253
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _38 = call (`id`/1), `nomatch`

  %% Aliased:
  %%    _38
  _51 = succeeded:body _38
  br _51, ^51, ^1

51:
  %% lc_SUITE.erl:254
  _5 = call (`lists`:`seq`/2), `7`, `9`

  %% Aliased:
  %%    _5
  _52 = succeeded:body _5
  br _52, ^52, ^1

52:
  %% lc_SUITE.erl:254
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _5
  _10 = call (`'-shadow/1-lc$^0/1-0-'`/1), _5

  %% Aliased:
  %%    _10
  _53 = succeeded:body _10
  br _53, ^53, ^1

53:
  %% lc_SUITE.erl:255
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _10
  _30 = call (`id`/1), _10

  %% Aliased:
  %%    _30
  _54 = succeeded:body _30
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    _30 => 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _30
  _64 = bif:'=:=' _30, `[{7,8},{8,9},{9,10}]`
  br _64, ^64, ^56

64:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _10
  _15 = call (`id`/1), _10

  %% Aliased:
  %%    _15
  _57 = succeeded:body _15
  br _57, ^57, ^1

57:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _15
  _19 = call (`'-shadow/1-lc$^1/1-1-'`/1), _15

  %% Unique:
  %%    _19
  _58 = succeeded:body _19
  br _58, ^58, ^1

58:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Unique:
  %%    _19
  _37 = call (`id`/1), _19

  %% Aliased:
  %%    _37
  _59 = succeeded:body _37
  br _59, ^59, ^1

59:
  %% Argument types:
  %%    _37 => 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _37
  _62 = bif:'=:=' _37, `"\b\t"`
  br _62, ^62, ^61

62:
  %% Result type:
  %%    'ok'
  ret `ok`

61:
  %% lc_SUITE.erl:256
  %% Aliased:
  %%    _37
  _44 = match_fail `badmatch`, _37

  %% Unique:
  %%    _44
  _63 = succeeded:body _44
  br ^1

56:
  %% lc_SUITE.erl:255
  %% Aliased:
  %%    _30
  _45 = match_fail `badmatch`, _30

  %% Unique:
  %%    _45
  _65 = succeeded:body _45
  br ^1

49:
  %% lc_SUITE.erl:251
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-shadow/1-',1}}
  _46 = match_fail `function_clause`, _0

  %% Unique:
  %%    _46
  _66 = succeeded:body _46
  br ^1

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _47
}

%% lc_SUITE.erl:260
%% Counter = 119
%% bs_ensure_opt: true
function `lc_SUITE`:`effect`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _105 = bif:is_list _0
  br _105, ^105, ^104

105:
  %% lc_SUITE.erl:261
  _84 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _84
  _106 = succeeded:body _84
  br _106, ^106, ^1

106:
  %% Result type:
  %%    'ok'
  _15 = make_fun (`'-effect/1-fun-1-'`/2)

  %% lc_SUITE.erl:267
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _1 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `492`, `binary`, `[1]`, `<<1>>`, `all`

  %% Aliased:
  %%    _1
  _107 = succeeded:body _1
  br _107, ^107, ^1

107:
  %% lc_SUITE.erl:267
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _2 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _2
  _108 = succeeded:body _2
  br _108, ^108, ^1

108:
  %% lc_SUITE.erl:267
  %% Aliased:
  %%    _1
  _71 = put_map `assoc`, `#{}`, _1, `42`

  %% lc_SUITE.erl:267
  %% Aliased:
  %%    _2, 
  %%    _71
  _3 = put_map `assoc`, _71, _2, `{a,b,c}`

  %% Argument types:
  %%    _3 => #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %% Aliased:
  %%    _3
  _72 = put_list _3, `[]`

  %% Argument types:
  %%    _72 => nonempty_list(#{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _72
  _73 = put_list `x`, _72

  %% Argument types:
  %%    _73 => nonempty_list('x' | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _73
  _74 = put_list `#{}`, _73

  %% lc_SUITE.erl:267
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Unique:
  %%    _74
  _4 = call (`id`/1), _74

  %% Aliased:
  %%    _4
  _109 = succeeded:body _4
  br _109, ^109, ^1

109:
  %% lc_SUITE.erl:263
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _4, 
  %%    _15
  _75 = call (`do_effect`/2), _15, _4

  %% Aliased:
  %%    _75
  _110 = succeeded:body _75
  br _110, ^110, ^1

110:
  %% Argument types:
  %%    _75 => list(any())
  %% Aliased:
  %%    _75
  _115 = bif:'=:=' _75, `[{42,{a,b,c}}]`
  br _115, ^115, ^112

115:
  %% lc_SUITE.erl:274
  _19 = call (`lists`:`seq`/2), `267452416`, `268435455`

  %% Aliased:
  %%    _19
  _113 = succeeded:body _19
  br _113, ^113, ^1

113:
  %% lc_SUITE.erl:274
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _19
  _99 = call (`'-effect/1-lc$^2/1-1-'`/1), _19

  %% Unique:
  %%    _99
  _114 = succeeded:body _99
  br _114, ^114, ^1

114:
  %% Result type:
  %%    'ok'
  ret `ok`

112:
  %% lc_SUITE.erl:262
  %% Aliased:
  %%    _75
  _100 = match_fail `badmatch`, _75

  %% Unique:
  %%    _100
  _116 = succeeded:body _100
  br ^1

104:
  %% lc_SUITE.erl:260
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-effect/1-',1}}
  _101 = match_fail `function_clause`, _0

  %% Unique:
  %%    _101
  _117 = succeeded:body _101
  br ^1

1:
  _102 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _102
}

%% lc_SUITE.erl:281
%% Counter = 26
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_, _) -> 'ok')
%%    _1 =>
%%     'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`do_effect`(_0, _1) {
0:
  %% lc_SUITE.erl:282
  _10 = call (`erlang`:`put`/2), `lc_SUITE`, `[]`

  %% Aliased:
  %%    _10
  _16 = succeeded:body _10
  br _16, ^16, ^1

16:
  F = make_fun (`'-do_effect/2-fun-0-'`/1)

  %% lc_SUITE.erl:284
  %% Result type:
  %%    'ok'
  %% Argument types:
  %%    (`'-effect/1-fun-1-'`/2) => fun((_, _) -> 'ok')
  %%    F => fun((_))
  %%    _1 => 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _1, 
  %%    F
  _9 = call (`'-effect/1-fun-1-'`/2), F, _1

  %% Unique:
  %%    _9
  _17 = succeeded:body _9
  br _17, ^22, ^1

22:
  %% lc_SUITE.erl:285
  _7 = call (`erlang`:`erase`/1), `lc_SUITE`

  %% Aliased:
  %%    _7
  _20 = succeeded:body _7
  br _20, ^20, ^1

20:
  %% lc_SUITE.erl:285
  %% Aliased:
  %%    _7
  _12 = call (`lists`:`reverse`/1), _7

  %% Aliased:
  %%    _12
  _21 = succeeded:body _12
  br _21, ^21, ^1

21:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _12
  ret _12

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% lc_SUITE.erl:287
%% Counter = 4
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`id`(_0) {
0:
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _0
  ret _0
}

%% bad_lc.erl:2
%% Counter = 16
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`bad_generator`(_0) {
0:
  %% bad_lc.erl:4
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _0
  _12 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _0

  %% Unique:
  %%    _12
  _15 = succeeded:body _12
  br _15, ^15, ^1

15:
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _12
  ret _12

1:
  _13 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _13
}

%% bad_lc.erl:5
%% Counter = 40
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
function `lc_SUITE`:`bad_generator_bc`(_0) {
0:
  %% bad_lc.erl:6
  _1 = bs_init_writable `256`

  %% bad_lc.erl:6
  %% Result type:
  %%    none()
  %% Unique:
  %%    _1
  _19 = call (`'-bad_generator_bc/1-lbc$^0/2-0-'`/2), `a`, _1
  _22 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% bad_lc.erl:8
%% Counter = 19
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     'a'
function `lc_SUITE`:`bad_generator_mc`(_0) {
0:
  %% bad_lc.erl:10
  %% Result type:
  %%    none()
  _6 = call (`'-bad_generator_mc/1-lc$^0/1-0-'`/1), _0
  _17 = succeeded:body _6
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `lc_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `lc_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `lc_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% bad_lc.erl:10
%% Counter = 24
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     'a'
function `lc_SUITE`:`'-bad_generator_mc/1-lc$^0/1-0-'`(_3) {
0:
  %% bad_lc.erl:10
  _13 = call (`erlang`:`error`/1), `{bad_generator,a}`

  %% Aliased:
  %%    _13
  _21 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% bad_lc.erl:6
%% Counter = 29
%% bs_ensure_opt: true
%% Parameters
%%    _4 =>
%%     bitstring(256,appendable)
%%    _5 =>
%%     'a'
function `lc_SUITE`:`'-bad_generator_bc/1-lbc$^0/2-0-'`(_5, _4) {
0:
  %% bad_lc.erl:7
  _18 = call (`erlang`:`error`/1), `{bad_generator,a}`

  %% Aliased:
  %%    _18
  _27 = succeeded:body _18
  br ^1

1:
  _19 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _19
}

%% bad_lc.erl:4
%% Counter = 22
%% bs_ensure_opt: true
%% Parameters
%%    _3 =>
%%     'a' | 'd' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`'-bad_generator/1-lc$^0/1-0-'`(_3) {
0:
  %% Aliased:
  %%    _3
  _17 = is_nonempty_list _3
  br _17, ^17, ^15

17:
  %% Argument types:
  %%    _3 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _3
  _9 = get_hd _3

  %% Argument types:
  %%    _3 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _3
  _8 = get_tl _3

  %% bad_lc.erl:4
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _8
  _5 = call (`'-bad_generator/1-lc$^0/1-0-'`/1), _8

  %% Unique:
  %%    _5
  _16 = succeeded:body _5
  br _16, ^16, ^1

16:
  %% Argument types:
  %%    _9 => 'a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %%    _5 => list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _9
  %% Unique:
  %%    _5
  _10 = put_list _9, _5
  %% Result type:
  %%    nonempty_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _10
  ret _10

15:
  %% Argument types:
  %%    _3 => 'a' | 'd' | 'nomatch' | 'not_bool' | 'x' | nil()
  %% Aliased:
  %%    _3
  _18 = bif:'=:=' _3, `[]`
  br _18, ^18, ^14

18:
  %% Result type:
  %%    nil()
  ret `[]`

14:
  %% Argument types:
  %%    _3 => 'a' | 'd' | 'nomatch' | 'not_bool' | 'x'
  %% Unique:
  %%    _3
  _7 = put_tuple `bad_generator`, _3

  %% bad_lc.erl:4
  %% Unique:
  %%    _7
  _11 = call (`erlang`:`error`/1), _7

  %% Aliased:
  %%    _11
  _19 = succeeded:body _11
  br ^1

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% lc_SUITE.erl:283
%% Counter = 16
%% bs_ensure_opt: true
function `lc_SUITE`:`'-do_effect/2-fun-0-'`(_3) {
0:
  %% lc_SUITE.erl:283
  %% Argument types:
  %%    
  _2 = bif:get `lc_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _2, 
  %%    _3
  _8 = put_list _3, _2

  %% lc_SUITE.erl:283
  %% Unique:
  %%    _8
  _11 = call (`erlang`:`put`/2), `lc_SUITE`, _8

  %% Aliased:
  %%    _11
  _14 = succeeded:body _11
  br _14, ^14, ^1

14:
  %% Aliased:
  %%    _11
  ret _11

1:
  _12 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _12
}

%% lc_SUITE.erl:274
%% Counter = 134
%% bs_ensure_opt: true
function `lc_SUITE`:`'-effect/1-lc$^2/1-1-'`(_20) {
0:
  %% Aliased:
  %%    _20
  _130 = is_nonempty_list _20
  br _130, ^130, ^102

130:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _79 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _78 = get_tl _20
  _106 = new_try_tag `'catch'`
  br _106, ^104, ^105

104:
  %% lc_SUITE.erl:273
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  %% Anno: #{unit => 8}
  _22 = bs_create_bin `utf8`, `[0,{segment,1}]`, _79, `undefined`

  %% Aliased:
  %%    _22
  _108 = succeeded:body _22
  br _108, ^108, ^105

108:
  %% lc_SUITE.erl:273
  %% Aliased:
  %%    _22
  _95 = call (`erlang`:`binary_to_atom`/2), _22, `utf8`

  %% Aliased:
  %%    _95
  _109 = succeeded:body _95
  br _109, ^109, ^105

109:
  br ^103

105:
  %% Unique:
  %%    _106
  _112 = landingpad `'catch'`, _106

  %% Aliased:
  %%    _112
  _110 = extract _112, `0`
  br ^103

103:
  _113 = phi { _110, ^105 }, { _95, ^109 }

  %% Aliased:
  %%    _113
  %% Unique:
  %%    _106
  _23 = catch_end _106, _113

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _126 = is_tagged_tuple _23, `2`, `'EXIT'`
  br _126, ^123, ^115

123:
  %% Argument types:
  %%    _23 => {''EXIT'', any()}
  %% Aliased:
  %%    _23
  _80 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _80
  _120 = is_tagged_tuple _80, `2`, `badarg`
  br _120, ^117, ^115

117:
  %% lc_SUITE.erl:274
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _78
  _96 = call (`'-effect/1-lc$^2/1-1-'`/1), _78

  %% Unique:
  %%    _96
  _116 = succeeded:body _96
  br _116, ^116, ^1

116:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _96
  ret _96

115:
  %% lc_SUITE.erl:272
  %% Aliased:
  %%    _23
  _97 = match_fail `badmatch`, _23

  %% Unique:
  %%    _97
  _129 = succeeded:body _97
  br ^1

102:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _20
  _131 = bif:'=:=' _20, `[]`
  br _131, ^131, ^101

131:
  %% Result type:
  %%    nil()
  ret `[]`

101:
  %% Argument types:
  %%    _20 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _20
  _77 = put_tuple `bad_generator`, _20

  %% lc_SUITE.erl:274
  %% Unique:
  %%    _77
  _98 = call (`erlang`:`error`/1), _77

  %% Aliased:
  %%    _98
  _132 = succeeded:body _98
  br ^1

1:
  _99 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _99
}

%% lc_SUITE.erl:263
%% Counter = 97
%% bs_ensure_opt: true
function `lc_SUITE`:`'-effect/1-fun-1-'`(_12, _11) {
0:
  %% lc_SUITE.erl:265
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _11, 
  %%    _12
  _93 = call (`'-effect/1-lc$^0/1-0-'`/2), _11, _12

  %% Unique:
  %%    _93
  _96 = succeeded:body _93
  br _96, ^96, ^1

96:
  %% Result type:
  %%    'ok'
  ret `ok`

1:
  _94 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _94
}

%% lc_SUITE.erl:265
%% Counter = 139
%% bs_ensure_opt: true
function `lc_SUITE`:`'-effect/1-lc$^0/1-0-'`(_7, _12) {
0:
  %% Aliased:
  %%    _7
  _128 = is_nonempty_list _7
  br _128, ^128, ^131

128:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _60 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _59 = get_tl _7

  %% Argument types:
  %%    
  %% Aliased:
  %%    _60
  _127 = bif:is_map _60
  br _127, ^127, ^137

127:
  %% lc_SUITE.erl:265
  %% Argument types:
  %%    
  %% Anno: #{unit => 4}
  _86 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `492`, `binary`, `[1]`, `<<1>>`, `all`

  %% Aliased:
  %%    _86
  _102 = succeeded:guard _86
  br _102, ^124, ^137

124:
  %% Argument types:
  %%    _60 => map()
  %%    _86 => bitstring(4)
  %% Aliased:
  %%    _60, 
  %%    _86
  _63 = get_map_element _60, _86

  %% Aliased:
  %%    _63
  _110 = succeeded:guard _63
  br _110, ^110, ^137

110:
  %% lc_SUITE.erl:265
  %% Argument types:
  %%    
  %% Anno: #{unit => 1}
  _88 = bs_create_bin `integer`, `[1,{segment,1}]`, `0`, `293`, `binary`, `[1]`, `<<2>>`, `all`

  %% Aliased:
  %%    _88
  _113 = succeeded:guard _88
  br _113, ^121, ^137

121:
  %% Argument types:
  %%    _60 => map()
  %%    _88 => bitstring(1)
  %% Aliased:
  %%    _60, 
  %%    _88
  _65 = get_map_element _60, _88

  %% Aliased:
  %%    _65
  _118 = succeeded:guard _65
  br _118, ^118, ^137

118:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _63, 
  %%    _65
  _66 = put_tuple _63, _65

  %% lc_SUITE.erl:264
  %% Argument types:
  %%    _66 => {any(), any()}
  %% Aliased:
  %%    _12
  %% Unique:
  %%    _66
  _89 = call _12, _66

  %% Aliased:
  %%    _89
  _119 = succeeded:body _89
  br _119, ^119, ^1

119:
  %% lc_SUITE.erl:265
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _12, 
  %%    _59
  _90 = call (`'-effect/1-lc$^0/1-0-'`/2), _59, _12

  %% Unique:
  %%    _90
  _120 = succeeded:body _90
  br _120, ^120, ^1

120:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _90
  ret _90

137:
  %% lc_SUITE.erl:265
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _12, 
  %%    _59
  _91 = call (`'-effect/1-lc$^0/1-0-'`/2), _59, _12

  %% Unique:
  %%    _91
  _132 = succeeded:body _91
  br _132, ^132, ^1

132:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _91
  ret _91

131:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _134 = bif:'=:=' _7, `[]`
  br _134, ^134, ^130

134:
  %% Result type:
  %%    nil()
  ret `[]`

130:
  %% Argument types:
  %%    _7 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _68 = put_tuple `bad_generator`, _7

  %% lc_SUITE.erl:265
  %% Unique:
  %%    _68
  _92 = call (`erlang`:`error`/1), _68

  %% Aliased:
  %%    _92
  _135 = succeeded:body _92
  br ^1

1:
  _93 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _93
}

%% lc_SUITE.erl:256
%% Counter = 60
%% bs_ensure_opt: true
%% Parameters
%%    _16 =>
%%     'd' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`'-shadow/1-lc$^1/1-1-'`(_16) {
0:
  %% Aliased:
  %%    _16
  _56 = is_nonempty_list _16
  br _56, ^56, ^47

56:
  %% Argument types:
  %%    _16 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _16
  _34 = get_hd _16

  %% Argument types:
  %%    _16 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _16
  _33 = get_tl _16

  %% Argument types:
  %%    _34 => 'a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %% Aliased:
  %%    _34
  _52 = bif:is_tuple _34
  br _52, ^51, ^48

51:
  %% Argument types:
  %%    _34 => {number(), number()}
  %% Aliased:
  %%    _34
  _35 = get_tuple_element _34, `1`

  %% Argument types:
  %%    _35 => number()
  %% Unique:
  %%    _35
  _49 = bif:'<' _35, `10`
  br _49, ^49, ^48

49:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _33
  _18 = call (`'-shadow/1-lc$^1/1-1-'`/1), _33

  %% Unique:
  %%    _18
  _50 = succeeded:body _18
  br _50, ^50, ^1

50:
  %% Argument types:
  %%    _35 => number('-inf', 10)
  %%    _18 => list(number('-inf', 10))
  %% Unique:
  %%    _18, 
  %%    _35
  _41 = put_list _35, _18
  %% Result type:
  %%    nonempty_list(number('-inf', 10))
  %% Unique:
  %%    _41
  ret _41

48:
  %% lc_SUITE.erl:256
  %% Result type:
  %%    list(number('-inf', 10))
  %% Aliased:
  %%    _33
  _42 = call (`'-shadow/1-lc$^1/1-1-'`/1), _33

  %% Unique:
  %%    _42
  _55 = succeeded:body _42
  br _55, ^55, ^1

55:
  %% Result type:
  %%    list(number('-inf', 10))
  %% Unique:
  %%    _42
  ret _42

47:
  %% Argument types:
  %%    _16 => 'd' | 'nomatch' | 'not_bool' | 'x' | nil()
  %% Aliased:
  %%    _16
  _57 = bif:'=:=' _16, `[]`
  br _57, ^57, ^46

57:
  %% Result type:
  %%    nil()
  ret `[]`

46:
  %% Argument types:
  %%    _16 => 'd' | 'nomatch' | 'not_bool' | 'x'
  %% Unique:
  %%    _16
  _32 = put_tuple `bad_generator`, _16

  %% lc_SUITE.erl:256
  %% Unique:
  %%    _32
  _43 = call (`erlang`:`error`/1), _32

  %% Aliased:
  %%    _43
  _58 = succeeded:body _43
  br ^1

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44
}

%% lc_SUITE.erl:254
%% Counter = 51
%% bs_ensure_opt: true
function `lc_SUITE`:`'-shadow/1-lc$^0/1-0-'`(_6) {
0:
  %% Aliased:
  %%    _6
  _47 = is_nonempty_list _6
  br _47, ^47, ^44

47:
  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _28 = get_hd _6

  %% Argument types:
  %%    _6 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _6
  _27 = get_tl _6

  %% lc_SUITE.erl:254
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _8 = bif:'+' _28, `1`

  %% Unique:
  %%    _8
  _45 = succeeded:body _8
  br _45, ^45, ^1

45:
  %% lc_SUITE.erl:254
  %% Result type:
  %%    list({number(), number()})
  %% Aliased:
  %%    _27
  _9 = call (`'-shadow/1-lc$^0/1-0-'`/1), _27

  %% Unique:
  %%    _9
  _46 = succeeded:body _9
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _28 => number()
  %%    _8 => number()
  %% Unique:
  %%    _8, 
  %%    _28
  _29 = put_tuple _28, _8

  %% Argument types:
  %%    _29 => {number(), number()}
  %%    _9 => list({number(), number()})
  %% Unique:
  %%    _9, 
  %%    _29
  _39 = put_list _29, _9
  %% Result type:
  %%    nonempty_list({number(), number()})
  %% Unique:
  %%    _39
  ret _39

44:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _48 = bif:'=:=' _6, `[]`
  br _48, ^48, ^43

48:
  %% Result type:
  %%    nil()
  ret `[]`

43:
  %% Argument types:
  %%    _6 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _6
  _26 = put_tuple `bad_generator`, _6

  %% lc_SUITE.erl:254
  %% Unique:
  %%    _26
  _40 = call (`erlang`:`error`/1), _26

  %% Aliased:
  %%    _40
  _49 = succeeded:body _40
  br ^1

1:
  _41 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _41
}

%% lc_SUITE.erl:241
%% Counter = 41
%% bs_ensure_opt: true
%% Parameters
%%    _5 =>
%%     nil()
function `lc_SUITE`:`'-empty_generator/1-lc$^0/1-0-'`(_5) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:224
%% Counter = 60
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-0-'`(_2) {
0:
  %% lc_SUITE.erl:224
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _43 = bif:'=<' `1`, _2
  br _43, ^59, ^58

59:
  %% lc_SUITE.erl:224
  %% Argument types:
  %%    _2 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _2
  _54 = bif:'=<' _2, `9`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _54
  ret _54

58:
  %% Result type:
  %%    'false'
  ret `false`
}

%% lc_SUITE.erl:223
%% Counter = 59
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-1-'`(_1) {
0:
  %% lc_SUITE.erl:223
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _42 = bif:'=<' `1`, _1
  br _42, ^58, ^57

58:
  %% lc_SUITE.erl:223
  %% Argument types:
  %%    _1 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _1
  _53 = bif:'=<' _1, `9`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _53
  ret _53

57:
  %% Result type:
  %%    'false'
  ret `false`
}

%% lc_SUITE.erl:222
%% Counter = 56
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-2-'`(_1, _2) {
0:
  %% lc_SUITE.erl:222
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _13 = bif:'+' _1, `1`

  %% Unique:
  %%    _13
  _55 = succeeded:body _13
  br _55, ^55, ^1

55:
  %% lc_SUITE.erl:222
  %% Argument types:
  %%    _13 => number()
  %% Aliased:
  %%    _2
  %% Unique:
  %%    _13
  _52 = bif:'=:=' _13, _2
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _52
  ret _52

1:
  _53 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _53
}

%% lc_SUITE.erl:221
%% Counter = 54
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-3-'`(_1, _2) {
0:
  %% lc_SUITE.erl:221
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _51 = bif:'=:=' _1, _2
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _51
  ret _51
}

%% lc_SUITE.erl:220
%% Counter = 57
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-4-'`(_1, _2) {
0:
  %% lc_SUITE.erl:220
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _40 = bif:'=:=' _2, `0`
  br _40, ^55, ^56

55:
  %% Result type:
  %%    'false'
  ret `false`

56:
  %% lc_SUITE.erl:220
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _21 = bif:'rem' _1, _2

  %% Unique:
  %%    _21
  _54 = succeeded:body _21
  br _54, ^54, ^1

54:
  %% lc_SUITE.erl:220
  %% Argument types:
  %%    _21 => integer()
  %% Unique:
  %%    _21
  _50 = bif:'=:=' _21, `3`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _50
  ret _50

1:
  _51 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _51
}

%% lc_SUITE.erl:219
%% Counter = 53
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-5-'`(_1, _2) {
0:
  %% lc_SUITE.erl:219
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _26 = bif:'*' _1, _2

  %% Unique:
  %%    _26
  _52 = succeeded:body _26
  br _52, ^52, ^1

52:
  %% lc_SUITE.erl:219
  %% Argument types:
  %%    _26 => number()
  %% Unique:
  %%    _26
  _49 = bif:'=:=' _26, `0`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _49
  ret _49

1:
  _50 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _50
}

%% lc_SUITE.erl:218
%% Counter = 52
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_gen_verify/3-fun-6-'`(_1, _2) {
0:
  %% lc_SUITE.erl:218
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _2
  _30 = bif:'+' _1, _2

  %% Unique:
  %%    _30
  _51 = succeeded:body _30
  br _51, ^51, ^1

51:
  %% lc_SUITE.erl:218
  %% Argument types:
  %%    _30 => number()
  %% Unique:
  %%    _30
  _48 = bif:'=:=' _30, `0`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _48
  ret _48

1:
  _49 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _49
}

%% lc_SUITE.erl:184
%% Counter = 43
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_generator/1-lc$^0/1-0-'`(_7, Seq) {
0:
  %% Aliased:
  %%    _7
  _38 = is_nonempty_list _7
  br _38, ^38, ^36

38:
  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _22 = get_hd _7

  %% Argument types:
  %%    _7 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _7
  _21 = get_tl _7

  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _21, 
  %%    _22, 
  %%    Seq
  _31 = call (`'-no_generator/1-lc$^1/1-1-'`/4), Seq, _21, _22, Seq

  %% Unique:
  %%    _31
  _37 = succeeded:body _31
  br _37, ^37, ^1

37:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _31
  ret _31

36:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _39 = bif:'=:=' _7, `[]`
  br _39, ^39, ^35

39:
  %% Result type:
  %%    nil()
  ret `[]`

35:
  %% Argument types:
  %%    _7 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _7
  _20 = put_tuple `bad_generator`, _7

  %% lc_SUITE.erl:184
  %% Unique:
  %%    _20
  _32 = call (`erlang`:`error`/1), _20

  %% Aliased:
  %%    _32
  _40 = succeeded:body _32
  br ^1

1:
  _33 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _33
}

%% lc_SUITE.erl:184
%% Counter = 44
%% bs_ensure_opt: true
function `lc_SUITE`:`'-no_generator/1-lc$^1/1-1-'`(_9, _21, _22, Seq) {
0:
  %% Aliased:
  %%    _9
  _38 = is_nonempty_list _9
  br _38, ^38, ^34

38:
  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _26 = get_hd _9

  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _25 = get_tl _9

  %% lc_SUITE.erl:184
  %% Result type:
  %%    list(1..9 | {any(), any(), ...})
  %% Aliased:
  %%    _22, 
  %%    _26
  _11 = call (`no_gen`/2), _22, _26

  %% Unique:
  %%    _11
  _35 = succeeded:body _11
  br _35, ^35, ^1

35:
  %% lc_SUITE.erl:184
  %% Aliased:
  %%    _22, 
  %%    _26
  %% Unique:
  %%    _11
  _28 = call (`no_gen_verify`/3), _11, _22, _26

  %% Aliased:
  %%    _28
  _36 = succeeded:body _28
  br _36, ^36, ^1

36:
  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _21, 
  %%    _22, 
  %%    _25, 
  %%    Seq
  _29 = call (`'-no_generator/1-lc$^1/1-1-'`/4), _25, _21, _22, Seq

  %% Unique:
  %%    _29
  _37 = succeeded:body _29
  br _37, ^37, ^1

37:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _29
  ret _29

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _40 = bif:'=:=' _9, `[]`
  br _40, ^40, ^33

40:
  %% lc_SUITE.erl:184
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _21, 
  %%    Seq
  _27 = call (`'-no_generator/1-lc$^0/1-0-'`/2), _21, Seq

  %% Unique:
  %%    _27
  _39 = succeeded:body _27
  br _39, ^39, ^1

39:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _27
  ret _27

33:
  %% Argument types:
  %%    _9 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _9
  _24 = put_tuple `bad_generator`, _9

  %% lc_SUITE.erl:184
  %% Unique:
  %%    _24
  _30 = call (`erlang`:`error`/1), _24

  %% Aliased:
  %%    _30
  _41 = succeeded:body _30
  br ^1

1:
  _31 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _31
}

%% lc_SUITE.erl:177
%% Counter = 258
%% bs_ensure_opt: true
%% Parameters
%%    _42 =>
%%     list(99)
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^2/1-0-'`(_42) {
0:
  %% Unique:
  %%    _42
  _253 = is_nonempty_list _42
  br _253, ^253, ^254

253:
  %% Argument types:
  %%    _42 => nonempty_list(99)
  %% Unique:
  %%    _42
  _87 = get_tl _42

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _246 = call (`'-deeply_nested_1/0-lc$^3/1-1-'`/3), `"b"`, _87, `99`

  %% Unique:
  %%    _246
  _252 = succeeded:body _246
  br _252, ^252, ^1

252:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _246
  ret _246

1:
  _248 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _248

254:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:177
%% Counter = 257
%% bs_ensure_opt: true
%% Parameters
%%    _44 =>
%%     list(98)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^3/1-1-'`(_44, _87, _88) {
0:
  %% Unique:
  %%    _44
  _251 = is_nonempty_list _44
  br _251, ^251, ^253

251:
  %% Argument types:
  %%    _44 => nonempty_list(98)
  %% Unique:
  %%    _44
  _91 = get_tl _44

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _244 = call (`'-deeply_nested_1/0-lc$^4/1-2-'`/5), `"a"`, _87, _88, _91, `98`

  %% Unique:
  %%    _244
  _250 = succeeded:body _244
  br _250, ^250, ^1

250:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _244
  ret _244

253:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _187 = call (`'-deeply_nested_1/0-lc$^2/1-0-'`/1), _87

  %% Unique:
  %%    _187
  _252 = succeeded:body _187
  br _252, ^252, ^1

252:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _187
  ret _187

1:
  _246 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _246
}

%% lc_SUITE.erl:177
%% Counter = 255
%% bs_ensure_opt: true
%% Parameters
%%    _46 =>
%%     list(97)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^4/1-2-'`(_46, _87, _88, _91, _92) {
0:
  %% Unique:
  %%    _46
  _249 = is_nonempty_list _46
  br _249, ^249, ^251

249:
  %% Argument types:
  %%    _46 => nonempty_list(97)
  %% Unique:
  %%    _46
  _95 = get_tl _46

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _242 = call (`'-deeply_nested_1/0-lc$^5/1-3-'`/7), `"`"`, _87, _88, _91, _92, _95, `97`

  %% Unique:
  %%    _242
  _248 = succeeded:body _242
  br _248, ^248, ^1

248:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _242
  ret _242

251:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _188 = call (`'-deeply_nested_1/0-lc$^3/1-1-'`/3), _91, _87, _88

  %% Unique:
  %%    _188
  _250 = succeeded:body _188
  br _250, ^250, ^1

250:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _188
  ret _188

1:
  _244 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _244
}

%% lc_SUITE.erl:177
%% Counter = 253
%% bs_ensure_opt: true
%% Parameters
%%    _48 =>
%%     list(96)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^5/1-3-'`(_48, _87, _88, _91, _92, _95, _96) {
0:
  %% Unique:
  %%    _48
  _247 = is_nonempty_list _48
  br _247, ^247, ^249

247:
  %% Argument types:
  %%    _48 => nonempty_list(96)
  %% Unique:
  %%    _48
  _99 = get_tl _48

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _240 = call (`'-deeply_nested_1/0-lc$^6/1-4-'`/9), `"*"`, _87, _88, _91, _92, _95, _96, _99, `96`

  %% Unique:
  %%    _240
  _246 = succeeded:body _240
  br _246, ^246, ^1

246:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _240
  ret _240

249:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _189 = call (`'-deeply_nested_1/0-lc$^4/1-2-'`/5), _95, _87, _88, _91, _92

  %% Unique:
  %%    _189
  _248 = succeeded:body _189
  br _248, ^248, ^1

248:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _189
  ret _189

1:
  _242 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _242
}

%% lc_SUITE.erl:177
%% Counter = 251
%% bs_ensure_opt: true
%% Parameters
%%    _50 =>
%%     list(42)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^6/1-4-'`(_50, _87, _88, _91, _92, _95, _96, _99, _100) {
0:
  %% Unique:
  %%    _50
  _245 = is_nonempty_list _50
  br _245, ^245, ^247

245:
  %% Argument types:
  %%    _50 => nonempty_list(42)
  %% Unique:
  %%    _50
  _103 = get_tl _50

  %% lc_SUITE.erl:177
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  _238 = call (`'-deeply_nested_1/0-lc$^7/1-5-'`/11), `[17]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, `42`

  %% Unique:
  %%    _238
  _244 = succeeded:body _238
  br _244, ^244, ^1

244:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _238
  ret _238

247:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _190 = call (`'-deeply_nested_1/0-lc$^5/1-3-'`/7), _99, _87, _88, _91, _92, _95, _96

  %% Unique:
  %%    _190
  _246 = succeeded:body _190
  br _246, ^246, ^1

246:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _190
  ret _190

1:
  _240 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _240
}

%% lc_SUITE.erl:177
%% Counter = 250
%% bs_ensure_opt: true
%% Parameters
%%    _52 =>
%%     list(17)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^7/1-5-'`(_52, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104) {
0:
  %% Unique:
  %%    _52
  _243 = is_nonempty_list _52
  br _243, ^243, ^245

243:
  %% Argument types:
  %%    _52 => nonempty_list(17)
  %% Unique:
  %%    _52
  _107 = get_tl _52

  %% Result type:
  %%    1764
  _14 = make_fun (`'-deeply_nested_1/0-fun-0-'`/1), `42`

  %% Argument types:
  %%    _14 => fun(() -> 1764)
  %% Aliased:
  %%    _14
  _186 = put_list _14, `[]`

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _186
  _236 = call (`'-deeply_nested_1/0-lc$^8/1-6-'`/13), _186, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, `17`

  %% Unique:
  %%    _236
  _242 = succeeded:body _236
  br _242, ^242, ^1

242:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _236
  ret _236

245:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _191 = call (`'-deeply_nested_1/0-lc$^6/1-4-'`/9), _103, _87, _88, _91, _92, _95, _96, _99, _100

  %% Unique:
  %%    _191
  _244 = succeeded:body _191
  br _244, ^244, ^1

244:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _191
  ret _191

1:
  _238 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _238
}

%% lc_SUITE.erl:178
%% Counter = 239
%% bs_ensure_opt: true
%% Parameters
%%    _104 =>
%%     42
function `lc_SUITE`:`'-deeply_nested_1/0-fun-0-'`(_104) {
0:
  %% Result type:
  %%    1764
  ret `1764`
}

%% lc_SUITE.erl:178
%% Counter = 246
%% bs_ensure_opt: true
%% Parameters
%%    _54 =>
%%     list(fun(() -> 1764))
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^8/1-6-'`(_54, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108) {
0:
  %% Unique:
  %%    _54
  _240 = is_nonempty_list _54
  br _240, ^240, ^242

240:
  %% Argument types:
  %%    _54 => nonempty_list(fun(() -> 1764))
  %% Unique:
  %%    _54
  _112 = get_hd _54

  %% Argument types:
  %%    _54 => nonempty_list(fun(() -> 1764))
  %% Unique:
  %%    _54
  _111 = get_tl _54

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _233 = call (`'-deeply_nested_1/0-lc$^9/1-7-'`/15), `"\f"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112

  %% Unique:
  %%    _233
  _239 = succeeded:body _233
  br _239, ^239, ^1

239:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _233
  ret _233

242:
  %% lc_SUITE.erl:177
  %% Result type:
  %%    list(nonempty_list(1..1764))
  _192 = call (`'-deeply_nested_1/0-lc$^7/1-5-'`/11), _107, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104

  %% Unique:
  %%    _192
  _241 = succeeded:body _192
  br _241, ^241, ^1

241:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _192
  ret _192

1:
  _235 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _235
}

%% lc_SUITE.erl:178
%% Counter = 244
%% bs_ensure_opt: true
%% Parameters
%%    _56 =>
%%     list(12)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^9/1-7-'`(_56, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112) {
0:
  %% Unique:
  %%    _56
  _238 = is_nonempty_list _56
  br _238, ^238, ^240

238:
  %% Argument types:
  %%    _56 => nonempty_list(12)
  %% Unique:
  %%    _56
  _115 = get_tl _56

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _231 = call (`'-deeply_nested_1/0-lc$^10/1-8-'`/17), `"\v"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, `12`

  %% Unique:
  %%    _231
  _237 = succeeded:body _231
  br _237, ^237, ^1

237:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _231
  ret _231

240:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _111
  _193 = call (`'-deeply_nested_1/0-lc$^8/1-6-'`/13), _111, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108

  %% Unique:
  %%    _193
  _239 = succeeded:body _193
  br _239, ^239, ^1

239:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _193
  ret _193

1:
  _233 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _233
}

%% lc_SUITE.erl:178
%% Counter = 242
%% bs_ensure_opt: true
%% Parameters
%%    _58 =>
%%     list(11)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^10/1-8-'`(_58, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116) {
0:
  %% Unique:
  %%    _58
  _236 = is_nonempty_list _58
  br _236, ^236, ^238

236:
  %% Argument types:
  %%    _58 => nonempty_list(11)
  %% Unique:
  %%    _58
  _119 = get_tl _58

  %% lc_SUITE.erl:178
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _229 = call (`'-deeply_nested_1/0-lc$^11/1-9-'`/19), `"\n"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, `11`

  %% Unique:
  %%    _229
  _235 = succeeded:body _229
  br _235, ^235, ^1

235:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _229
  ret _229

238:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _194 = call (`'-deeply_nested_1/0-lc$^9/1-7-'`/15), _115, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112

  %% Unique:
  %%    _194
  _237 = succeeded:body _194
  br _237, ^237, ^1

237:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _194
  ret _194

1:
  _231 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _231
}

%% lc_SUITE.erl:178
%% Counter = 240
%% bs_ensure_opt: true
%% Parameters
%%    _60 =>
%%     list(10)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^11/1-9-'`(_60, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120) {
0:
  %% Unique:
  %%    _60
  _234 = is_nonempty_list _60
  br _234, ^234, ^236

234:
  %% Argument types:
  %%    _60 => nonempty_list(10)
  %% Unique:
  %%    _60
  _123 = get_tl _60

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _227 = call (`'-deeply_nested_1/0-lc$^12/1-10-'`/21), `"\t"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, `10`

  %% Unique:
  %%    _227
  _233 = succeeded:body _227
  br _233, ^233, ^1

233:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _227
  ret _227

236:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _195 = call (`'-deeply_nested_1/0-lc$^10/1-8-'`/17), _119, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116

  %% Unique:
  %%    _195
  _235 = succeeded:body _195
  br _235, ^235, ^1

235:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _195
  ret _195

1:
  _229 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _229
}

%% lc_SUITE.erl:179
%% Counter = 238
%% bs_ensure_opt: true
%% Parameters
%%    _62 =>
%%     list(9)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^12/1-10-'`(_62, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124) {
0:
  %% Unique:
  %%    _62
  _232 = is_nonempty_list _62
  br _232, ^232, ^234

232:
  %% Argument types:
  %%    _62 => nonempty_list(9)
  %% Unique:
  %%    _62
  _127 = get_tl _62

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _225 = call (`'-deeply_nested_1/0-lc$^13/1-11-'`/23), `"\b"`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, `9`

  %% Unique:
  %%    _225
  _231 = succeeded:body _225
  br _231, ^231, ^1

231:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _225
  ret _225

234:
  %% lc_SUITE.erl:178
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _196 = call (`'-deeply_nested_1/0-lc$^11/1-9-'`/19), _123, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120

  %% Unique:
  %%    _196
  _233 = succeeded:body _196
  br _233, ^233, ^1

233:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _196
  ret _196

1:
  _227 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _227
}

%% lc_SUITE.erl:179
%% Counter = 236
%% bs_ensure_opt: true
%% Parameters
%%    _64 =>
%%     list(8)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^13/1-11-'`(_64, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128) {
0:
  %% Unique:
  %%    _64
  _230 = is_nonempty_list _64
  br _230, ^230, ^232

230:
  %% Argument types:
  %%    _64 => nonempty_list(8)
  %% Unique:
  %%    _64
  _131 = get_tl _64

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _223 = call (`'-deeply_nested_1/0-lc$^14/1-12-'`/25), `[7]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, `8`

  %% Unique:
  %%    _223
  _229 = succeeded:body _223
  br _229, ^229, ^1

229:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _223
  ret _223

232:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _197 = call (`'-deeply_nested_1/0-lc$^12/1-10-'`/21), _127, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124

  %% Unique:
  %%    _197
  _231 = succeeded:body _197
  br _231, ^231, ^1

231:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _197
  ret _197

1:
  _225 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _225
}

%% lc_SUITE.erl:179
%% Counter = 234
%% bs_ensure_opt: true
%% Parameters
%%    _66 =>
%%     list(7)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^14/1-12-'`(_66, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132) {
0:
  %% Unique:
  %%    _66
  _228 = is_nonempty_list _66
  br _228, ^228, ^230

228:
  %% Argument types:
  %%    _66 => nonempty_list(7)
  %% Unique:
  %%    _66
  _135 = get_tl _66

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _221 = call (`'-deeply_nested_1/0-lc$^15/1-13-'`/27), `[6]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, `7`

  %% Unique:
  %%    _221
  _227 = succeeded:body _221
  br _227, ^227, ^1

227:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _221
  ret _221

230:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _198 = call (`'-deeply_nested_1/0-lc$^13/1-11-'`/23), _131, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128

  %% Unique:
  %%    _198
  _229 = succeeded:body _198
  br _229, ^229, ^1

229:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _198
  ret _198

1:
  _223 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _223
}

%% lc_SUITE.erl:179
%% Counter = 232
%% bs_ensure_opt: true
%% Parameters
%%    _68 =>
%%     list(6)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^15/1-13-'`(_68, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136) {
0:
  %% Unique:
  %%    _68
  _226 = is_nonempty_list _68
  br _226, ^226, ^228

226:
  %% Argument types:
  %%    _68 => nonempty_list(6)
  %% Unique:
  %%    _68
  _139 = get_tl _68

  %% lc_SUITE.erl:179
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _219 = call (`'-deeply_nested_1/0-lc$^16/1-14-'`/29), `[5]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, `6`

  %% Unique:
  %%    _219
  _225 = succeeded:body _219
  br _225, ^225, ^1

225:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _219
  ret _219

228:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _199 = call (`'-deeply_nested_1/0-lc$^14/1-12-'`/25), _135, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132

  %% Unique:
  %%    _199
  _227 = succeeded:body _199
  br _227, ^227, ^1

227:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _199
  ret _199

1:
  _221 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _221
}

%% lc_SUITE.erl:179
%% Counter = 230
%% bs_ensure_opt: true
%% Parameters
%%    _70 =>
%%     list(5)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^16/1-14-'`(_70, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140) {
0:
  %% Unique:
  %%    _70
  _224 = is_nonempty_list _70
  br _224, ^224, ^226

224:
  %% Argument types:
  %%    _70 => nonempty_list(5)
  %% Unique:
  %%    _70
  _143 = get_tl _70

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _217 = call (`'-deeply_nested_1/0-lc$^17/1-15-'`/31), `[4]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, `5`

  %% Unique:
  %%    _217
  _223 = succeeded:body _217
  br _223, ^223, ^1

223:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _217
  ret _217

226:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _200 = call (`'-deeply_nested_1/0-lc$^15/1-13-'`/27), _139, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136

  %% Unique:
  %%    _200
  _225 = succeeded:body _200
  br _225, ^225, ^1

225:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _200
  ret _200

1:
  _219 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _219
}

%% lc_SUITE.erl:180
%% Counter = 228
%% bs_ensure_opt: true
%% Parameters
%%    _72 =>
%%     list(4)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^17/1-15-'`(_72, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144) {
0:
  %% Unique:
  %%    _72
  _222 = is_nonempty_list _72
  br _222, ^222, ^224

222:
  %% Argument types:
  %%    _72 => nonempty_list(4)
  %% Unique:
  %%    _72
  _147 = get_tl _72

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _215 = call (`'-deeply_nested_1/0-lc$^18/1-16-'`/33), `[3]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, `4`

  %% Unique:
  %%    _215
  _221 = succeeded:body _215
  br _221, ^221, ^1

221:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _215
  ret _215

224:
  %% lc_SUITE.erl:179
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _201 = call (`'-deeply_nested_1/0-lc$^16/1-14-'`/29), _143, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140

  %% Unique:
  %%    _201
  _223 = succeeded:body _201
  br _223, ^223, ^1

223:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _201
  ret _201

1:
  _217 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _217
}

%% lc_SUITE.erl:180
%% Counter = 227
%% bs_ensure_opt: true
%% Parameters
%%    _74 =>
%%     list(3)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^18/1-16-'`(_74, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148) {
0:
  %% Unique:
  %%    _74
  _220 = is_nonempty_list _74
  br _220, ^220, ^222

220:
  %% Argument types:
  %%    _74 => nonempty_list(3)
  %% Unique:
  %%    _74
  _151 = get_tl _74

  %% Result type:
  %%    7
  _37 = make_fun (`'-deeply_nested_1/0-fun-1-'`/2), `4`, `3`

  %% Argument types:
  %%    _37 => fun(() -> 7)
  %% Aliased:
  %%    _37
  _185 = put_list _37, `[]`

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111, 
  %%    _185
  _213 = call (`'-deeply_nested_1/0-lc$^19/1-17-'`/35), _185, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, `3`

  %% Unique:
  %%    _213
  _219 = succeeded:body _213
  br _219, ^219, ^1

219:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _213
  ret _213

222:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _202 = call (`'-deeply_nested_1/0-lc$^17/1-15-'`/31), _147, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144

  %% Unique:
  %%    _202
  _221 = succeeded:body _202
  br _221, ^221, ^1

221:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _202
  ret _202

1:
  _215 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _215
}

%% lc_SUITE.erl:180
%% Counter = 216
%% bs_ensure_opt: true
%% Parameters
%%    _148 =>
%%     4
%%    _152 =>
%%     3
function `lc_SUITE`:`'-deeply_nested_1/0-fun-1-'`(_148, _152) {
0:
  %% Result type:
  %%    7
  ret `7`
}

%% lc_SUITE.erl:180
%% Counter = 223
%% bs_ensure_opt: true
%% Parameters
%%    _76 =>
%%     list(fun(() -> 7))
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
%%    _151 =>
%%     list(3)
%%    _152 =>
%%     3
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^19/1-17-'`(_76, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152) {
0:
  %% Unique:
  %%    _76
  _217 = is_nonempty_list _76
  br _217, ^217, ^219

217:
  %% Argument types:
  %%    _76 => nonempty_list(fun(() -> 7))
  %% Unique:
  %%    _76
  _156 = get_hd _76

  %% Argument types:
  %%    _76 => nonempty_list(fun(() -> 7))
  %% Unique:
  %%    _76
  _155 = get_tl _76

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _210 = call (`'-deeply_nested_1/0-lc$^20/1-18-'`/37), `[2]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156

  %% Unique:
  %%    _210
  _216 = succeeded:body _210
  br _216, ^216, ^1

216:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _210
  ret _210

219:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111
  _203 = call (`'-deeply_nested_1/0-lc$^18/1-16-'`/33), _151, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148

  %% Unique:
  %%    _203
  _218 = succeeded:body _203
  br _218, ^218, ^1

218:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _203
  ret _203

1:
  _212 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _212
}

%% lc_SUITE.erl:180
%% Counter = 221
%% bs_ensure_opt: true
%% Parameters
%%    _78 =>
%%     list(2)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
%%    _151 =>
%%     list(3)
%%    _152 =>
%%     3
%%    _155 =>
%%     list(fun(() -> 7))
%%    _156 =>
%%     fun(() -> 7)
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^20/1-18-'`(_78, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156) {
0:
  %% Unique:
  %%    _78
  _215 = is_nonempty_list _78
  br _215, ^215, ^217

215:
  %% Argument types:
  %%    _78 => nonempty_list(2)
  %% Unique:
  %%    _78
  _159 = get_tl _78

  %% lc_SUITE.erl:180
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _208 = call (`'-deeply_nested_1/0-lc$^21/1-19-'`/39), `[1]`, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156, _159, `2`

  %% Unique:
  %%    _208
  _214 = succeeded:body _208
  br _214, ^214, ^1

214:
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _208
  ret _208

217:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112
  %% Unique:
  %%    _111, 
  %%    _155
  _204 = call (`'-deeply_nested_1/0-lc$^19/1-17-'`/35), _155, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152

  %% Unique:
  %%    _204
  _216 = succeeded:body _204
  br _216, ^216, ^1

216:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _204
  ret _204

1:
  _210 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _210
}

%% lc_SUITE.erl:180
%% Counter = 221
%% bs_ensure_opt: true
%% Parameters
%%    _80 =>
%%     list(1)
%%    _87 =>
%%     list(99)
%%    _88 =>
%%     99
%%    _91 =>
%%     list(98)
%%    _92 =>
%%     98
%%    _95 =>
%%     list(97)
%%    _96 =>
%%     97
%%    _99 =>
%%     list(96)
%%    _100 =>
%%     96
%%    _103 =>
%%     list(42)
%%    _104 =>
%%     42
%%    _107 =>
%%     list(17)
%%    _108 =>
%%     17
%%    _111 =>
%%     list(fun(() -> 1764))
%%    _112 =>
%%     fun(() -> 1764)
%%    _115 =>
%%     list(12)
%%    _116 =>
%%     12
%%    _119 =>
%%     list(11)
%%    _120 =>
%%     11
%%    _123 =>
%%     list(10)
%%    _124 =>
%%     10
%%    _127 =>
%%     list(9)
%%    _128 =>
%%     9
%%    _131 =>
%%     list(8)
%%    _132 =>
%%     8
%%    _135 =>
%%     list(7)
%%    _136 =>
%%     7
%%    _139 =>
%%     list(6)
%%    _140 =>
%%     6
%%    _143 =>
%%     list(5)
%%    _144 =>
%%     5
%%    _147 =>
%%     list(4)
%%    _148 =>
%%     4
%%    _151 =>
%%     list(3)
%%    _152 =>
%%     3
%%    _155 =>
%%     list(fun(() -> 7))
%%    _156 =>
%%     fun(() -> 7)
%%    _159 =>
%%     list(2)
%%    _160 =>
%%     2
function `lc_SUITE`:`'-deeply_nested_1/0-lc$^21/1-19-'`(_80, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156, _159, _160) {
0:
  %% Unique:
  %%    _80
  _215 = is_nonempty_list _80
  br _215, ^215, ^217

215:
  %% Argument types:
  %%    _80 => nonempty_list(1)
  %% Unique:
  %%    _80
  _163 = get_tl _80

  %% lc_SUITE.erl:176
  %% Result type:
  %%    1764
  %% Argument types:
  %%    _112 => fun(() -> 1764)
  %% Aliased:
  %%    _112
  _83 = call _112

  %% Aliased:
  %%    _83
  _212 = succeeded:body _83
  br _212, ^212, ^1

212:
  %% lc_SUITE.erl:176
  %% Result type:
  %%    7
  %% Argument types:
  %%    _156 => fun(() -> 7)
  %% Aliased:
  %%    _156
  _82 = call _156

  %% Aliased:
  %%    _82
  _213 = succeeded:body _82
  br _213, ^213, ^1

213:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _84 = call (`'-deeply_nested_1/0-lc$^21/1-19-'`/39), _163, _87, `99`, _91, `98`, _95, `97`, _99, `96`, _103, `42`, _107, `17`, _111, _112, _115, `12`, _119, `11`, _123, `10`, _127, `9`, _131, `8`, _135, `7`, _139, `6`, _143, `5`, _147, `4`, _151, `3`, _155, _156, _159, `2`

  %% Unique:
  %%    _84
  _214 = succeeded:body _84
  br _214, ^214, ^1

214:
  %% Argument types:
  %%    _84 => list(nonempty_list(1..1764))
  %% Unique:
  %%    _84
  _206 = put_list `[99,98,97,96,42,17,1764,12,11,10,9,8,7,6,5,4,3,7,2,1]`, _84
  %% Result type:
  %%    nonempty_list(nonempty_list(1..1764))
  %% Unique:
  %%    _206
  ret _206

217:
  %% lc_SUITE.erl:180
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Aliased:
  %%    _112, 
  %%    _156
  %% Unique:
  %%    _111, 
  %%    _155
  _205 = call (`'-deeply_nested_1/0-lc$^20/1-18-'`/37), _159, _87, _88, _91, _92, _95, _96, _99, _100, _103, _104, _107, _108, _111, _112, _115, _116, _119, _120, _123, _124, _127, _128, _131, _132, _135, _136, _139, _140, _143, _144, _147, _148, _151, _152, _155, _156

  %% Unique:
  %%    _205
  _216 = succeeded:body _205
  br _216, ^216, ^1

216:
  %% Result type:
  %%    list(nonempty_list(1..1764))
  %% Unique:
  %%    _205
  ret _205

1:
  _208 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _208
}

%% lc_SUITE.erl:166
%% Counter = 91
%% bs_ensure_opt: true
%% Parameters
%%    _16 =>
%%     list(46..99)
function `lc_SUITE`:`'-alphanum/1-lc$^0/1-0-'`(_16) {
0:
  %% Unique:
  %%    _16
  _73 = is_nonempty_list _16
  br _73, ^73, ^74

73:
  %% Argument types:
  %%    _16 => nonempty_list(46..99)
  %% Unique:
  %%    _16
  _22 = get_hd _16

  %% Argument types:
  %%    _16 => nonempty_list(46..99)
  %% Unique:
  %%    _16
  _21 = get_tl _16

  %% lc_SUITE.erl:166
  %% Argument types:
  %%    _22 => 46..99
  %% Unique:
  %%    _22
  _23 = bif:'>=' _22, `48`
  br _23, ^53, ^48

53:
  %% lc_SUITE.erl:166
  %% Argument types:
  %%    _22 => 48..99
  %% Unique:
  %%    _22
  _31 = bif:'=<' _22, `57`
  br _31, ^70, ^85

85:
  %% lc_SUITE.erl:167
  %% Argument types:
  %%    _22 => 58..99
  %% Unique:
  %%    _22
  _26 = bif:'>=' _22, `97`
  br _26, ^70, ^79

79:
  %% lc_SUITE.erl:168
  %% Argument types:
  %%    _22 => 58..96
  %% Unique:
  %%    _22
  _29 = bif:'>=' _22, `65`
  br _29, ^76, ^48

76:
  %% lc_SUITE.erl:168
  %% Argument types:
  %%    _22 => 65..96
  %% Unique:
  %%    _22
  _37 = bif:'=<' _22, `90`
  br _37, ^70, ^48

70:
  %% lc_SUITE.erl:166
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _21
  _18 = call (`'-alphanum/1-lc$^0/1-0-'`/1), _21

  %% Unique:
  %%    _18
  _71 = succeeded:body _18
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    _22 => 48..99
  %%    _18 => list(46..99)
  %% Unique:
  %%    _18, 
  %%    _22
  _41 = put_list _22, _18
  %% Result type:
  %%    nonempty_list(46..99)
  %% Unique:
  %%    _41
  ret _41

48:
  %% lc_SUITE.erl:166
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _21
  _42 = call (`'-alphanum/1-lc$^0/1-0-'`/1), _21

  %% Unique:
  %%    _42
  _72 = succeeded:body _42
  br _72, ^72, ^1

72:
  %% Result type:
  %%    list(46..99)
  %% Unique:
  %%    _42
  ret _42

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44

74:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:160
%% Counter = 25
%% bs_ensure_opt: true
%% Parameters
%%    _0 =>
%%     fun((_))
function `lc_SUITE`:`'-my_map/2-lc$^0/1-0-'`(_4, _0) {
0:
  %% Aliased:
  %%    _4
  _20 = is_nonempty_list _4
  br _20, ^20, ^17

20:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _11 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _10 = get_tl _4

  %% lc_SUITE.erl:160
  %% Argument types:
  %%    _0 => fun((_))
  %% Aliased:
  %%    _0, 
  %%    _11
  _6 = call _0, _11

  %% Aliased:
  %%    _6
  _18 = succeeded:body _6
  br _18, ^18, ^1

18:
  %% lc_SUITE.erl:160
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _0, 
  %%    _10
  _7 = call (`'-my_map/2-lc$^0/1-0-'`/2), _10, _0

  %% Unique:
  %%    _7
  _19 = succeeded:body _7
  br _19, ^19, ^1

19:
  %% Argument types:
  %%    _7 => list(any())
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _7
  _12 = put_list _6, _7
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _12
  ret _12

17:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _21 = bif:'=:=' _4, `[]`
  br _21, ^21, ^16

21:
  %% Result type:
  %%    nil()
  ret `[]`

16:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _9 = put_tuple `bad_generator`, _4

  %% lc_SUITE.erl:160
  %% Unique:
  %%    _9
  _13 = call (`erlang`:`error`/1), _9

  %% Aliased:
  %%    _13
  _22 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% lc_SUITE.erl:125
%% Counter = 739
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^33/1-32-'`(_267) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _731 = bif:is_tuple _267
  br _731, ^731, ^724

731:
  %% Argument types:
  %%    _267 => {...}
  %% Aliased:
  %%    _267
  _732 = bif:tuple_size _267

  %% Argument types:
  %%    _732 => 0..16777215
  %% Unique:
  %%    _732
  _733 = bif:'=:=' _732, `3`
  br _733, ^730, ^723

730:
  %% Argument types:
  %%    _267 => {any(), any(), any()}
  %% Aliased:
  %%    _267
  _551 = get_tuple_element _267, `0`

  %% Argument types:
  %%    _267 => {any(), any(), any()}
  %% Aliased:
  %%    _267
  _550 = get_tuple_element _267, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _550
  _728 = bif:'=:=' _550, `ok`
  br _728, ^727, ^725

727:
  %% Argument types:
  %%    _267 => {any(), 'ok', any()}
  %% Aliased:
  %%    _267
  _549 = get_tuple_element _267, `2`

  %% lc_SUITE.erl:125
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _549
  _269 = call (`'-basic/1-lc$^33/1-32-'`/1), _549

  %% Unique:
  %%    _269
  _726 = succeeded:body _269
  br _726, ^726, ^1

726:
  %% Argument types:
  %%    _269 => list(any())
  %% Aliased:
  %%    _551
  %% Unique:
  %%    _269
  _718 = put_list _551, _269
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _718
  ret _718

725:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _550, 
  %%    _551
  _552 = put_tuple _551, _550

  %% Argument types:
  %%    _552 => {any(), any()}
  %% Unique:
  %%    _552
  _553 = put_tuple `badmatch`, _552

  %% lc_SUITE.erl:125
  %% Unique:
  %%    _553
  _719 = call (`erlang`:`error`/1), _553

  %% Aliased:
  %%    _719
  _729 = succeeded:body _719
  br ^1

724:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _267
  _735 = bif:'=:=' _267, `none`
  br _735, ^734, ^723

734:
  %% Result type:
  %%    nil()
  ret `[]`

723:
  %% lc_SUITE.erl:125
  %% Aliased:
  %%    _267
  _548 = call (`erts_internal`:`mc_refill`/1), _267

  %% Aliased:
  %%    _548
  _736 = succeeded:body _548
  br _736, ^736, ^1

736:
  %% lc_SUITE.erl:125
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _548
  _720 = call (`'-basic/1-lc$^33/1-32-'`/1), _548

  %% Unique:
  %%    _720
  _737 = succeeded:body _720
  br _737, ^737, ^1

737:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _720
  ret _720

1:
  _721 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _721
}

%% lc_SUITE.erl:124
%% Counter = 749
%% bs_ensure_opt: true
%% Parameters
%%    _257 =>
%%     bs_matchable(1)
%%     accepts_match_context
function `lc_SUITE`:`'-basic/1-lc$^32/1-31-'`(_257) {
0:
  %% Argument types:
  %%    _257 => bs_matchable(1)
  %% Aliased:
  %%    _257
  %% Anno: #{accepts_match_contexts => true}
  _531 = bs_start_match `new`, _257
  _744 = bs_ensure _531, `1`, `1`
  _745 = succeeded:guard _744
  br _745, ^743, ^719

743:
  %% lc_SUITE.erl:124
  %% Argument types:
  %%    _744 => bs_context(1)
  %% Aliased:
  %%    _531
  %% Anno: #{ensured => true}
  _532 = bs_match `integer`, _744, `[unsigned,big]`, `1`, `1`

  %% Aliased:
  %%    _532
  _720 = succeeded:guard _532
  br _720, ^720, ^719

720:
  %% Aliased:
  %%    _532
  _533 = bs_extract _532

  %% Argument types:
  %%    _533 => 0..1
  %% Unique:
  %%    _533
  _725 = bif:'=:=' _533, `0`
  br _725, ^724, ^719

724:
  _747 = bs_ensure _532, `7`, `1`
  _748 = succeeded:guard _747
  br _748, ^746, ^726

746:
  %% lc_SUITE.erl:124
  %% Argument types:
  %%    _747 => bs_context(1)
  %% Aliased:
  %%    _532
  %% Anno: #{ensured => true}
  _534 = bs_match `integer`, _747, `[unsigned,big]`, `7`, `1`

  %% Aliased:
  %%    _534
  _721 = succeeded:guard _534
  br _721, ^721, ^726

721:
  %% Aliased:
  %%    _534
  _535 = bs_extract _534

  %% lc_SUITE.erl:124
  %% Result type:
  %%    list(0..127)
  %% Aliased:
  %%    _534
  %% Anno: #{bsm_info => context_reused}
  _259 = call (`'-basic/1-lc$^32/1-31-'`/1), _534

  %% Unique:
  %%    _259
  _723 = succeeded:body _259
  br _723, ^723, ^1

723:
  %% Argument types:
  %%    _535 => 0..127
  %%    _259 => list(0..127)
  %% Unique:
  %%    _259, 
  %%    _535
  _714 = put_list _535, _259
  %% Result type:
  %%    nonempty_list(0..127)
  %% Unique:
  %%    _714
  ret _714

719:
  %% Aliased:
  %%    _531
  _727 = bs_test_tail _531, `0`
  br _727, ^727, ^726

727:
  %% Result type:
  %%    nil()
  ret `[]`

726:
  %% lc_SUITE.erl:124
  %% Aliased:
  %%    _531
  _538 = bs_get_tail _531

  %% Argument types:
  %%    _538 => bitstring(1)
  %% Aliased:
  %%    _538
  _540 = put_tuple `badmatch`, _538

  %% lc_SUITE.erl:124
  %% Unique:
  %%    _540
  _713 = call (`erlang`:`error`/1), _540

  %% Aliased:
  %%    _713
  _729 = succeeded:body _713
  br ^1

1:
  _737 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _737
}

%% lc_SUITE.erl:123
%% Counter = 729
%% bs_ensure_opt: true
%% Parameters
%%    _251 =>
%%     list(2 | {'ok', 1..3})
function `lc_SUITE`:`'-basic/1-lc$^31/1-30-'`(_251) {
0:
  %% Unique:
  %%    _251
  _724 = is_nonempty_list _251
  br _724, ^724, ^725

724:
  %% Argument types:
  %%    _251 => nonempty_list(2 | {'ok', 1..3})
  %% Unique:
  %%    _251
  _520 = get_hd _251

  %% Argument types:
  %%    _251 => nonempty_list(2 | {'ok', 1..3})
  %% Unique:
  %%    _251
  _519 = get_tl _251

  %% Argument types:
  %%    _520 => 2 | {'ok', 1..3}
  %% Unique:
  %%    _520
  _720 = bif:is_tuple _520
  br _720, ^717, ^727

717:
  %% lc_SUITE.erl:123
  %% Result type:
  %%    list(1..3)
  %% Unique:
  %%    _519
  _253 = call (`'-basic/1-lc$^31/1-30-'`/1), _519

  %% Unique:
  %%    _253
  _716 = succeeded:body _253
  br _716, ^716, ^1

716:
  %% Argument types:
  %%    _520 => {'ok', 1..3}
  %% Unique:
  %%    _520
  _522 = get_tuple_element _520, `1`

  %% Argument types:
  %%    _522 => 1..3
  %%    _253 => list(1..3)
  %% Unique:
  %%    _253, 
  %%    _522
  _708 = put_list _522, _253
  %% Result type:
  %%    nonempty_list(1..3)
  %% Unique:
  %%    _708
  ret _708

727:
  %% lc_SUITE.erl:123
  _709 = call (`erlang`:`error`/1), `{badmatch,2}`

  %% Aliased:
  %%    _709
  _723 = succeeded:body _709
  br ^1

1:
  _711 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _711

725:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:120
%% Counter = 723
%% bs_ensure_opt: true
%% Parameters
%%    _243 =>
%%     nonempty_list(1..2)
function `lc_SUITE`:`'-basic/1-lc$^30/1-29-'`(_243) {
0:
  %% lc_SUITE.erl:120
  %% Result type:
  %%    'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  _511 = call (`id`/1), `not_bool`

  %% Aliased:
  %%    _511
  _710 = succeeded:body _511
  br _710, ^712, ^1

712:
  %% lc_SUITE.erl:120
  %% Aliased:
  %%    _511
  _704 = match_fail `bad_filter`, _511

  %% Unique:
  %%    _704
  _717 = succeeded:body _704
  br ^1

1:
  _706 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _706
}

%% lc_SUITE.erl:119
%% Counter = 710
%% bs_ensure_opt: true
%% Parameters
%%    _236 =>
%%     'd' | 'nomatch' | 'not_bool' | 'x' | maybe_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
function `lc_SUITE`:`'-basic/1-lc$^29/1-28-'`(_236) {
0:
  %% Aliased:
  %%    _236
  _705 = is_nonempty_list _236
  br _705, ^705, ^703

705:
  %% Argument types:
  %%    _236 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _236
  _501 = get_hd _236

  %% Argument types:
  %%    _236 => nonempty_improper_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}, 'd' | nil())
  %% Aliased:
  %%    _236
  _500 = get_tl _236

  %% lc_SUITE.erl:119
  %% Result type:
  %%    list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _500
  _238 = call (`'-basic/1-lc$^29/1-28-'`/1), _500

  %% Unique:
  %%    _238
  _704 = succeeded:body _238
  br _704, ^704, ^1

704:
  %% Argument types:
  %%    _501 => 'a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}}
  %%    _238 => list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Aliased:
  %%    _501
  %% Unique:
  %%    _238
  _698 = put_list _501, _238
  %% Result type:
  %%    nonempty_list('a' | 'b' | 'c' | 'x' | number('-inf', 10) | {number(), number()} | #{bitstring(1)=>42 | {'a', 'b', 'c'}})
  %% Unique:
  %%    _698
  ret _698

703:
  %% Argument types:
  %%    _236 => 'd' | 'nomatch' | 'not_bool' | 'x' | nil()
  %% Aliased:
  %%    _236
  _706 = bif:'=:=' _236, `[]`
  br _706, ^706, ^702

706:
  %% Result type:
  %%    nil()
  ret `[]`

702:
  %% Argument types:
  %%    _236 => 'd' | 'nomatch' | 'not_bool' | 'x'
  %% Unique:
  %%    _236
  _499 = put_tuple `bad_generator`, _236

  %% lc_SUITE.erl:119
  %% Unique:
  %%    _499
  _699 = call (`erlang`:`error`/1), _499

  %% Aliased:
  %%    _699
  _707 = succeeded:body _699
  br ^1

1:
  _700 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _700
}

%% lc_SUITE.erl:118
%% Counter = 713
%% bs_ensure_opt: true
%% Parameters
%%    _227 =>
%%     list({'x', any()})
function `lc_SUITE`:`'-basic/1-lc$^28/1-27-'`(_227) {
0:
  %% Aliased:
  %%    _227
  _708 = is_nonempty_list _227
  br _708, ^708, ^709

708:
  %% Argument types:
  %%    _227 => nonempty_list({'x', any()})
  %% Aliased:
  %%    _227
  _494 = get_hd _227

  %% lc_SUITE.erl:118
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _494
  _495 = call (`odd`/1), _494

  %% Aliased:
  %%    _495
  _700 = succeeded:body _495
  br ^1

1:
  _696 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _696

709:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:117
%% Counter = 705
%% bs_ensure_opt: true
%% Parameters
%%    _220 =>
%%     list({'x', any()})
function `lc_SUITE`:`'-basic/1-lc$^27/1-26-'`(_220) {
0:
  %% Aliased:
  %%    _220
  _701 = is_nonempty_list _220
  br _701, ^701, ^702

701:
  %% Argument types:
  %%    _220 => nonempty_list({'x', any()})
  %% Aliased:
  %%    _220
  _485 = get_tl _220

  %% lc_SUITE.erl:117
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _485
  _689 = call (`'-basic/1-lc$^27/1-26-'`/1), _485

  %% Unique:
  %%    _689
  _700 = succeeded:body _689
  br _700, ^700, ^1

700:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _689
  ret _689

1:
  _691 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _691

702:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:116
%% Counter = 702
%% bs_ensure_opt: true
%% Parameters
%%    _211 =>
%%     list({'x', any()})
function `lc_SUITE`:`'-basic/1-lc$^26/1-25-'`(_211) {
0:
  %% Aliased:
  %%    _211
  _697 = is_nonempty_list _211
  br _697, ^697, ^698

697:
  %% Argument types:
  %%    _211 => nonempty_list({'x', any()})
  %% Aliased:
  %%    _211
  _478 = get_hd _211

  %% lc_SUITE.erl:116
  %% Aliased:
  %%    _478
  _210 = call (`erlang`:`list_to_atom`/1), _478

  %% Aliased:
  %%    _210
  _691 = succeeded:body _210
  br ^1

1:
  _687 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _687

698:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:115
%% Counter = 698
%% bs_ensure_opt: true
%% Parameters
%%    _203 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^25/1-24-'`(_203) {
0:
  %% Aliased:
  %%    _203
  _693 = is_nonempty_list _203
  br _693, ^693, ^694

693:
  %% Argument types:
  %%    _203 => nonempty_list(any())
  %% Aliased:
  %%    _203
  _469 = get_hd _203

  %% Argument types:
  %%    _203 => nonempty_list(any())
  %% Aliased:
  %%    _203
  _468 = get_tl _203

  %% lc_SUITE.erl:115
  %% Argument types:
  %%    
  %% Aliased:
  %%    _469
  _202 = bif:element `2`, _469

  %% Aliased:
  %%    _202
  _689 = succeeded:guard _202
  br _689, ^689, ^687

689:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _202
  _690 = bif:'=:=' _202, `no_no_no`
  br _690, ^690, ^687

690:
  %% lc_SUITE.erl:115
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Aliased:
  %%    _468
  _205 = call (`'-basic/1-lc$^25/1-24-'`/1), _468

  %% Unique:
  %%    _205
  _691 = succeeded:body _205
  br _691, ^691, ^1

691:
  %% Argument types:
  %%    _469 => {any(), any(), ...}
  %% Aliased:
  %%    _469
  _473 = put_tuple `xx`, _469

  %% Argument types:
  %%    _473 => {'xx', {any(), any(), ...}}
  %%    _205 => list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _205, 
  %%    _473
  _680 = put_list _473, _205
  %% Result type:
  %%    nonempty_list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _680
  ret _680

687:
  %% lc_SUITE.erl:115
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Aliased:
  %%    _468
  _681 = call (`'-basic/1-lc$^25/1-24-'`/1), _468

  %% Unique:
  %%    _681
  _692 = succeeded:body _681
  br _692, ^692, ^1

692:
  %% Result type:
  %%    list({'xx', {any(), any(), ...}})
  %% Unique:
  %%    _681
  ret _681

1:
  _683 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _683

694:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:112
%% Counter = 696
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^24/1-23-'`(_194) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _689 = bif:is_tuple _194
  br _689, ^689, ^682

689:
  %% Argument types:
  %%    _194 => {...}
  %% Aliased:
  %%    _194
  _690 = bif:tuple_size _194

  %% Argument types:
  %%    _690 => 0..16777215
  %% Unique:
  %%    _690
  _691 = bif:'=:=' _690, `3`
  br _691, ^688, ^681

688:
  %% Argument types:
  %%    _194 => {any(), any(), any()}
  %% Aliased:
  %%    _194
  _462 = get_tuple_element _194, `0`

  %% Argument types:
  %%    _194 => {any(), any(), any()}
  %% Aliased:
  %%    _194
  _460 = get_tuple_element _194, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _462
  _684 = bif:'>' _462, `1`
  br _684, ^684, ^683

684:
  %% Argument types:
  %%    _194 => {any(), any(), any()}
  %% Aliased:
  %%    _194
  _461 = get_tuple_element _194, `1`

  %% lc_SUITE.erl:112
  %% Argument types:
  %%    _462 => atom() | maybe_improper_list(any(), any()) | number(1, '+inf') | {...} | other()
  %% Aliased:
  %%    _461, 
  %%    _462
  _196 = bif:'*' _462, _461

  %% Unique:
  %%    _196
  _685 = succeeded:body _196
  br _685, ^685, ^1

685:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _460
  _197 = call (`'-basic/1-lc$^24/1-23-'`/1), _460

  %% Unique:
  %%    _197
  _686 = succeeded:body _197
  br _686, ^686, ^1

686:
  %% Argument types:
  %%    _196 => number()
  %%    _197 => list(number())
  %% Unique:
  %%    _196, 
  %%    _197
  _676 = put_list _196, _197
  %% Result type:
  %%    nonempty_list(number())
  %% Unique:
  %%    _676
  ret _676

683:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _460
  _677 = call (`'-basic/1-lc$^24/1-23-'`/1), _460

  %% Unique:
  %%    _677
  _687 = succeeded:body _677
  br _687, ^687, ^1

687:
  %% Result type:
  %%    list(number())
  %% Unique:
  %%    _677
  ret _677

682:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _194
  _693 = bif:'=:=' _194, `none`
  br _693, ^692, ^681

692:
  %% Result type:
  %%    nil()
  ret `[]`

681:
  %% lc_SUITE.erl:112
  %% Aliased:
  %%    _194
  _459 = call (`erts_internal`:`mc_refill`/1), _194

  %% Aliased:
  %%    _459
  _694 = succeeded:body _459
  br _694, ^694, ^1

694:
  %% lc_SUITE.erl:112
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _459
  _678 = call (`'-basic/1-lc$^24/1-23-'`/1), _459

  %% Unique:
  %%    _678
  _695 = succeeded:body _678
  br _695, ^695, ^1

695:
  %% Result type:
  %%    list(number())
  %% Unique:
  %%    _678
  ret _678

1:
  _679 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _679
}

%% lc_SUITE.erl:111
%% Counter = 706
%% bs_ensure_opt: true
%% Parameters
%%    _183 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `lc_SUITE`:`'-basic/1-lc$^23/1-22-'`(_183) {
0:
  %% Argument types:
  %%    _183 => bs_matchable(8)
  %% Aliased:
  %%    _183
  %% Anno: #{accepts_match_contexts => true}
  _444 = bs_start_match `new`, _183
  _704 = bs_ensure _444, `8`, `1`
  _705 = succeeded:guard _704
  br _705, ^703, ^688

703:
  %% lc_SUITE.erl:111
  %% Argument types:
  %%    _704 => bs_context(8)
  %% Aliased:
  %%    _444
  %% Anno: #{ensured => true}
  _445 = bs_match `integer`, _704, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _445
  _680 = succeeded:guard _445
  br _680, ^680, ^688

680:
  %% Aliased:
  %%    _445
  _446 = bs_extract _445

  %% Argument types:
  %%    _446 => 0..255
  %% Unique:
  %%    _446
  _683 = bif:'>' _446, `1`
  br _683, ^683, ^682

683:
  %% lc_SUITE.erl:111
  %% Argument types:
  %%    _446 => 2..255
  %% Unique:
  %%    _446
  _185 = bif:'+' _446, `1`

  %% lc_SUITE.erl:111
  %% Result type:
  %%    list(3..'+inf')
  %% Aliased:
  %%    _445
  %% Anno: #{bsm_info => context_reused}
  _186 = call (`'-basic/1-lc$^23/1-22-'`/1), _445

  %% Unique:
  %%    _186
  _685 = succeeded:body _186
  br _685, ^685, ^1

685:
  %% Argument types:
  %%    _185 => 3..256
  %%    _186 => list(3..'+inf')
  %% Unique:
  %%    _185, 
  %%    _186
  _673 = put_list _185, _186
  %% Result type:
  %%    nonempty_list(3..'+inf')
  %% Unique:
  %%    _673
  ret _673

682:
  %% lc_SUITE.erl:111
  %% Result type:
  %%    list(3..'+inf')
  %% Aliased:
  %%    _445
  %% Anno: #{bsm_info => context_reused}
  _674 = call (`'-basic/1-lc$^23/1-22-'`/1), _445

  %% Unique:
  %%    _674
  _686 = succeeded:body _674
  br _686, ^686, ^1

686:
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _674
  ret _674

1:
  _698 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _698

688:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:110
%% Counter = 685
%% bs_ensure_opt: true
%% Parameters
%%    _176 =>
%%     list(1..3)
function `lc_SUITE`:`'-basic/1-lc$^22/1-21-'`(_176) {
0:
  %% Unique:
  %%    _176
  _681 = is_nonempty_list _176
  br _681, ^681, ^682

681:
  %% Argument types:
  %%    _176 => nonempty_list(1..3)
  %% Unique:
  %%    _176
  _438 = get_hd _176

  %% Argument types:
  %%    _176 => nonempty_list(1..3)
  %% Unique:
  %%    _176
  _437 = get_tl _176

  %% Argument types:
  %%    _438 => 1..3
  %% Unique:
  %%    _438
  _677 = bif:'>' _438, `1`
  br _677, ^677, ^676

677:
  %% lc_SUITE.erl:110
  %% Argument types:
  %%    _438 => 2..3
  %% Unique:
  %%    _438
  _178 = bif:'+' _438, `1`

  %% lc_SUITE.erl:110
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _437
  _179 = call (`'-basic/1-lc$^22/1-21-'`/1), _437

  %% Unique:
  %%    _179
  _679 = succeeded:body _179
  br _679, ^679, ^1

679:
  %% Argument types:
  %%    _178 => 3..4
  %%    _179 => list(3..'+inf')
  %% Unique:
  %%    _178, 
  %%    _179
  _669 = put_list _178, _179
  %% Result type:
  %%    nonempty_list(3..'+inf')
  %% Unique:
  %%    _669
  ret _669

676:
  %% lc_SUITE.erl:110
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _437
  _670 = call (`'-basic/1-lc$^22/1-21-'`/1), _437

  %% Unique:
  %%    _670
  _680 = succeeded:body _670
  br _680, ^680, ^1

680:
  %% Result type:
  %%    list(3..'+inf')
  %% Unique:
  %%    _670
  ret _670

1:
  _672 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _672

682:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:107
%% Counter = 682
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^21/1-20-'`(_168) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _675 = bif:is_tuple _168
  br _675, ^675, ^671

675:
  %% Argument types:
  %%    _168 => {...}
  %% Aliased:
  %%    _168
  _676 = bif:tuple_size _168

  %% Argument types:
  %%    _676 => 0..16777215
  %% Unique:
  %%    _676
  _677 = bif:'=:=' _676, `3`
  br _677, ^674, ^670

674:
  %% Argument types:
  %%    _168 => {any(), any(), any()}
  %% Aliased:
  %%    _168
  _429 = get_tuple_element _168, `0`

  %% Argument types:
  %%    _168 => {any(), any(), any()}
  %% Aliased:
  %%    _168
  _428 = get_tuple_element _168, `1`

  %% lc_SUITE.erl:107
  %% Argument types:
  %%    
  %% Aliased:
  %%    _428, 
  %%    _429
  _170 = bif:'*' _429, _428

  %% Unique:
  %%    _170
  _672 = succeeded:body _170
  br _672, ^672, ^1

672:
  %% Argument types:
  %%    _168 => {any(), any(), any()}
  %% Aliased:
  %%    _168
  _427 = get_tuple_element _168, `2`

  %% lc_SUITE.erl:107
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _427
  _171 = call (`'-basic/1-lc$^21/1-20-'`/1), _427

  %% Unique:
  %%    _171
  _673 = succeeded:body _171
  br _673, ^673, ^1

673:
  %% Argument types:
  %%    _170 => number()
  %%    _171 => list(number())
  %% Unique:
  %%    _170, 
  %%    _171
  _666 = put_list _170, _171
  %% Result type:
  %%    nonempty_list(number())
  %% Unique:
  %%    _666
  ret _666

671:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _168
  _679 = bif:'=:=' _168, `none`
  br _679, ^678, ^670

678:
  %% Result type:
  %%    nil()
  ret `[]`

670:
  %% lc_SUITE.erl:107
  %% Aliased:
  %%    _168
  _426 = call (`erts_internal`:`mc_refill`/1), _168

  %% Aliased:
  %%    _426
  _680 = succeeded:body _426
  br _680, ^680, ^1

680:
  %% lc_SUITE.erl:107
  %% Result type:
  %%    list(number())
  %% Aliased:
  %%    _426
  _667 = call (`'-basic/1-lc$^21/1-20-'`/1), _426

  %% Unique:
  %%    _667
  _681 = succeeded:body _667
  br _681, ^681, ^1

681:
  %% Result type:
  %%    list(number())
  %% Unique:
  %%    _667
  ret _667

1:
  _668 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _668
}

%% lc_SUITE.erl:106
%% Counter = 693
%% bs_ensure_opt: true
%% Parameters
%%    _157 =>
%%     bs_matchable(8)
%%     accepts_match_context
function `lc_SUITE`:`'-basic/1-lc$^20/1-19-'`(_157) {
0:
  %% Argument types:
  %%    _157 => bs_matchable(8)
  %% Aliased:
  %%    _157
  %% Anno: #{accepts_match_contexts => true}
  _415 = bs_start_match `new`, _157
  _691 = bs_ensure _415, `8`, `1`
  _692 = succeeded:guard _691
  br _692, ^690, ^675

690:
  %% lc_SUITE.erl:106
  %% Argument types:
  %%    _691 => bs_context(8)
  %% Aliased:
  %%    _415
  %% Anno: #{ensured => true}
  _416 = bs_match `integer`, _691, `[unsigned,big]`, `8`, `1`

  %% Aliased:
  %%    _416
  _670 = succeeded:guard _416
  br _670, ^670, ^675

670:
  %% Aliased:
  %%    _416
  _417 = bs_extract _416

  %% lc_SUITE.erl:106
  %% Argument types:
  %%    _417 => 0..255
  %% Unique:
  %%    _417
  _159 = bif:'+' _417, `1`

  %% lc_SUITE.erl:106
  %% Result type:
  %%    list(1..'+inf')
  %% Aliased:
  %%    _416
  %% Anno: #{bsm_info => context_reused}
  _160 = call (`'-basic/1-lc$^20/1-19-'`/1), _416

  %% Unique:
  %%    _160
  _673 = succeeded:body _160
  br _673, ^673, ^1

673:
  %% Argument types:
  %%    _159 => 1..256
  %%    _160 => list(1..'+inf')
  %% Unique:
  %%    _159, 
  %%    _160
  _664 = put_list _159, _160
  %% Result type:
  %%    nonempty_list(1..'+inf')
  %% Unique:
  %%    _664
  ret _664

1:
  _685 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _685

675:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:105
%% Counter = 673
%% bs_ensure_opt: true
%% Parameters
%%    _150 =>
%%     list(1..3)
function `lc_SUITE`:`'-basic/1-lc$^19/1-18-'`(_150) {
0:
  %% Unique:
  %%    _150
  _669 = is_nonempty_list _150
  br _669, ^669, ^670

669:
  %% Argument types:
  %%    _150 => nonempty_list(1..3)
  %% Unique:
  %%    _150
  _411 = get_hd _150

  %% Argument types:
  %%    _150 => nonempty_list(1..3)
  %% Unique:
  %%    _150
  _410 = get_tl _150

  %% lc_SUITE.erl:105
  %% Argument types:
  %%    _411 => 1..3
  %% Unique:
  %%    _411
  _152 = bif:'+' _411, `1`

  %% lc_SUITE.erl:105
  %% Result type:
  %%    list(2..'+inf')
  %% Unique:
  %%    _410
  _153 = call (`'-basic/1-lc$^19/1-18-'`/1), _410

  %% Unique:
  %%    _153
  _668 = succeeded:body _153
  br _668, ^668, ^1

668:
  %% Argument types:
  %%    _152 => 2..4
  %%    _153 => list(2..'+inf')
  %% Unique:
  %%    _152, 
  %%    _153
  _661 = put_list _152, _153
  %% Result type:
  %%    nonempty_list(2..'+inf')
  %% Unique:
  %%    _661
  ret _661

1:
  _663 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _663

670:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:102
%% Counter = 671
%% bs_ensure_opt: true
%% Parameters
%%    _143 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^18/1-17-'`(_143) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:99
%% Counter = 678
%% bs_ensure_opt: true
%% Parameters
%%    _135 =>
%%     list({'a'})
function `lc_SUITE`:`'-basic/1-lc$^17/1-16-'`(_135) {
0:
  %% Unique:
  %%    _135
  _674 = is_nonempty_list _135
  br _674, ^674, ^675

674:
  %% Argument types:
  %%    _135 => nonempty_list({'a'})
  %% Unique:
  %%    _135
  _399 = get_tl _135

  %% lc_SUITE.erl:99
  %% Result type:
  %%    list({'a', 'a'})
  _137 = call (`'-basic/1-lc$^17/1-16-'`/1), _399

  %% Unique:
  %%    _137
  _666 = succeeded:body _137
  br _666, ^666, ^1

666:
  %% Argument types:
  %%    _137 => list({'a', 'a'})
  %% Unique:
  %%    _137
  _655 = put_list `{a,a}`, _137
  %% Result type:
  %%    nonempty_list({'a', 'a'})
  %% Unique:
  %%    _655
  ret _655

1:
  _659 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _659

675:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:98
%% Counter = 674
%% bs_ensure_opt: true
%% Parameters
%%    _126 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^16/1-15-'`(_126) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:95
%% Counter = 663
%% bs_ensure_opt: true
%% Parameters
%%    _118 =>
%%     list(nonempty_list(97..98))
function `lc_SUITE`:`'-basic/1-lc$^15/1-14-'`(_118) {
0:
  %% Unique:
  %%    _118
  _659 = is_nonempty_list _118
  br _659, ^659, ^660

659:
  %% Argument types:
  %%    _118 => nonempty_list(nonempty_list(97..98))
  %% Unique:
  %%    _118
  _387 = get_hd _118

  %% Argument types:
  %%    _118 => nonempty_list(nonempty_list(97..98))
  %% Unique:
  %%    _118
  _386 = get_tl _118

  %% Argument types:
  %%    _387 => nonempty_list(97..98)
  %% Unique:
  %%    _387
  _657 = bif:'=:=' _387, `"ab"`
  br _657, ^657, ^655

657:
  %% lc_SUITE.erl:95
  %% Result type:
  %%    list('t')
  _120 = call (`'-basic/1-lc$^15/1-14-'`/1), _386

  %% Unique:
  %%    _120
  _656 = succeeded:body _120
  br _656, ^656, ^1

656:
  %% Argument types:
  %%    _120 => list('t')
  %% Unique:
  %%    _120
  _648 = put_list `t`, _120
  %% Result type:
  %%    nonempty_list('t')
  %% Unique:
  %%    _648
  ret _648

655:
  %% lc_SUITE.erl:95
  %% Result type:
  %%    list('t')
  _649 = call (`'-basic/1-lc$^15/1-14-'`/1), _386

  %% Unique:
  %%    _649
  _658 = succeeded:body _649
  br _658, ^658, ^1

658:
  %% Result type:
  %%    list('t')
  %% Unique:
  %%    _649
  ret _649

1:
  _651 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _651

660:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:94
%% Counter = 658
%% bs_ensure_opt: true
%% Parameters
%%    _111 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^14/1-13-'`(_111) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:93
%% Counter = 656
%% bs_ensure_opt: true
%% Parameters
%%    _104 =>
%%     nil()
function `lc_SUITE`:`'-basic/1-lc$^13/1-12-'`(_104) {
0:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:87
%% Counter = 659
%% bs_ensure_opt: true
%% Parameters
%%    _96 =>
%%     list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
function `lc_SUITE`:`'-basic/1-lc$^12/1-11-'`(_96) {
0:
  %% Unique:
  %%    _96
  _654 = is_nonempty_list _96
  br _654, ^654, ^655

654:
  %% Argument types:
  %%    _96 => nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _96
  _376 = get_hd _96

  %% Argument types:
  %%    _96 => nonempty_list('glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _96
  _375 = get_tl _96

  %% lc_SUITE.erl:87
  %% Argument types:
  %%    _376 => 'glurf' | nonempty_list('a' | 'b' | 'c') | {'a', 'b'} | {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'}
  %% Unique:
  %%    _376
  _94 = bif:element `3`, _376

  %% Unique:
  %%    _94
  _650 = succeeded:guard _94
  br _650, ^650, ^648

650:
  %% Argument types:
  %%    _94 => 'd' | 'false' | 'true'
  %% Unique:
  %%    _94
  _651 = bif:'=:=' _94, `true`
  br _651, ^651, ^648

651:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _375
  _98 = call (`'-basic/1-lc$^12/1-11-'`/1), _375

  %% Unique:
  %%    _98
  _652 = succeeded:body _98
  br _652, ^652, ^1

652:
  %% Argument types:
  %%    _376 => {'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'}
  %%    _98 => list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _98, 
  %%    _376
  _641 = put_list _376, _98
  %% Result type:
  %%    nonempty_list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _641
  ret _641

648:
  %% lc_SUITE.erl:87
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _375
  _642 = call (`'-basic/1-lc$^12/1-11-'`/1), _375

  %% Unique:
  %%    _642
  _653 = succeeded:body _642
  br _653, ^653, ^1

653:
  %% Result type:
  %%    list({'a', 'b', 'true'} | {'a', 'b', 'd' | 'false', 'ddd' | 'xx'} | {'x', 'y', 'true', 'true'})
  %% Unique:
  %%    _642
  ret _642

1:
  _644 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _644

655:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:83
%% Counter = 662
%% bs_ensure_opt: true
%% Parameters
%%    _83 =>
%%     list(any())
%%    _86 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^11/1-10-'`(_86, _83) {
0:
  %% Aliased:
  %%    _86
  _657 = is_nonempty_list _86
  br _657, ^657, ^658

657:
  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Aliased:
  %%    _86
  _370 = get_hd _86

  %% Argument types:
  %%    _86 => nonempty_list(any())
  %% Aliased:
  %%    _86
  _369 = get_tl _86

  %% lc_SUITE.erl:83
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _370
  _371 = call (`odd`/1), _370

  %% Unique:
  %%    _371
  _645 = succeeded:body _371
  br _645, ^645, ^1

645:
  br _371, ^654, ^655

654:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _370
  _651 = bif:'=:=' _370, `7`
  br _651, ^650, ^651

650:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  %% Unique:
  %%    _83
  _637 = call (`'-basic/1-lc$^11/1-10-'`/2), _369, _83

  %% Unique:
  %%    _637
  _653 = succeeded:body _637
  br _653, ^653, ^1

653:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _637
  ret _637

651:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  %% Unique:
  %%    _83
  _88 = call (`'-basic/1-lc$^11/1-10-'`/2), _369, _83

  %% Unique:
  %%    _88
  _652 = succeeded:body _88
  br _652, ^652, ^1

652:
  %% Argument types:
  %%    _88 => list(any())
  %% Aliased:
  %%    _370
  %% Unique:
  %%    _88
  _636 = put_list _370, _88
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _636
  ret _636

655:
  %% lc_SUITE.erl:83
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _369
  %% Unique:
  %%    _83
  _638 = call (`'-basic/1-lc$^11/1-10-'`/2), _369, _83

  %% Unique:
  %%    _638
  _648 = succeeded:body _638
  br _648, ^648, ^1

648:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _638
  ret _638

1:
  _641 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _641

658:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _83
  ret _83
}

%% lc_SUITE.erl:84
%% Counter = 657
%% bs_ensure_opt: true
%% Parameters
%%    _79 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^10/1-9-'`(_79) {
0:
  %% Aliased:
  %%    _79
  _652 = is_nonempty_list _79
  br _652, ^652, ^653

652:
  %% Argument types:
  %%    _79 => nonempty_list(any())
  %% Aliased:
  %%    _79
  _363 = get_hd _79

  %% Argument types:
  %%    _79 => nonempty_list(any())
  %% Aliased:
  %%    _79
  _362 = get_tl _79

  %% lc_SUITE.erl:84
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _363
  _364 = call (`odd`/1), _363

  %% Unique:
  %%    _364
  _640 = succeeded:body _364
  br _640, ^640, ^1

640:
  br _364, ^650, ^649

650:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _362
  _633 = call (`'-basic/1-lc$^10/1-9-'`/1), _362

  %% Unique:
  %%    _633
  _643 = succeeded:body _633
  br _643, ^643, ^1

643:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _633
  ret _633

649:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _363
  _646 = bif:'=:=' _363, `6`
  br _646, ^645, ^646

645:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _362
  _632 = call (`'-basic/1-lc$^10/1-9-'`/1), _362

  %% Unique:
  %%    _632
  _648 = succeeded:body _632
  br _648, ^648, ^1

648:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _632
  ret _632

646:
  %% lc_SUITE.erl:84
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _362
  _81 = call (`'-basic/1-lc$^10/1-9-'`/1), _362

  %% Unique:
  %%    _81
  _647 = succeeded:body _81
  br _647, ^647, ^1

647:
  %% Argument types:
  %%    _81 => list(any())
  %% Aliased:
  %%    _363
  %% Unique:
  %%    _81
  _631 = put_list _363, _81
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _631
  ret _631

1:
  _636 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _636

653:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:80
%% Counter = 652
%% bs_ensure_opt: true
%% Parameters
%%    _70 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^9/1-8-'`(_70) {
0:
  %% Aliased:
  %%    _70
  _647 = is_nonempty_list _70
  br _647, ^647, ^648

647:
  %% Argument types:
  %%    _70 => nonempty_list(any())
  %% Aliased:
  %%    _70
  _356 = get_hd _70

  %% Argument types:
  %%    _70 => nonempty_list(any())
  %% Aliased:
  %%    _70
  _355 = get_tl _70

  %% lc_SUITE.erl:80
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _356
  _357 = call (`odd`/1), _356

  %% Unique:
  %%    _357
  _635 = succeeded:body _357
  br _635, ^635, ^1

635:
  br _357, ^645, ^644

645:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _355
  _628 = call (`'-basic/1-lc$^9/1-8-'`/1), _355

  %% Unique:
  %%    _628
  _638 = succeeded:body _628
  br _638, ^638, ^1

638:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _628
  ret _628

644:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _356
  _641 = bif:'=:=' _356, `6`
  br _641, ^640, ^641

640:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _355
  _627 = call (`'-basic/1-lc$^9/1-8-'`/1), _355

  %% Unique:
  %%    _627
  _643 = succeeded:body _627
  br _643, ^643, ^1

643:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _627
  ret _627

641:
  %% lc_SUITE.erl:80
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _355
  _72 = call (`'-basic/1-lc$^9/1-8-'`/1), _355

  %% Unique:
  %%    _72
  _642 = succeeded:body _72
  br _642, ^642, ^1

642:
  %% Argument types:
  %%    _72 => list(any())
  %% Aliased:
  %%    _356
  %% Unique:
  %%    _72
  _626 = put_list _356, _72
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _626
  ret _626

1:
  _631 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _631

648:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:79
%% Counter = 647
%% bs_ensure_opt: true
%% Parameters
%%    _61 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^8/1-7-'`(_61) {
0:
  %% Aliased:
  %%    _61
  _642 = is_nonempty_list _61
  br _642, ^642, ^643

642:
  %% Argument types:
  %%    _61 => nonempty_list(any())
  %% Aliased:
  %%    _61
  _350 = get_hd _61

  %% Argument types:
  %%    _61 => nonempty_list(any())
  %% Aliased:
  %%    _61
  _349 = get_tl _61

  %% lc_SUITE.erl:79
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _350
  _351 = call (`odd`/1), _350

  %% Unique:
  %%    _351
  _630 = succeeded:body _351
  br _630, ^630, ^1

630:
  br _351, ^639, ^640

639:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _350
  _636 = bif:'=:=' _350, `7`
  br _636, ^635, ^636

635:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _349
  _622 = call (`'-basic/1-lc$^8/1-7-'`/1), _349

  %% Unique:
  %%    _622
  _638 = succeeded:body _622
  br _638, ^638, ^1

638:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _622
  ret _622

636:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _349
  _63 = call (`'-basic/1-lc$^8/1-7-'`/1), _349

  %% Unique:
  %%    _63
  _637 = succeeded:body _63
  br _637, ^637, ^1

637:
  %% Argument types:
  %%    _63 => list(any())
  %% Aliased:
  %%    _350
  %% Unique:
  %%    _63
  _621 = put_list _350, _63
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _621
  ret _621

640:
  %% lc_SUITE.erl:79
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _349
  _623 = call (`'-basic/1-lc$^8/1-7-'`/1), _349

  %% Unique:
  %%    _623
  _633 = succeeded:body _623
  br _633, ^633, ^1

633:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _623
  ret _623

1:
  _626 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _626

643:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:78
%% Counter = 638
%% bs_ensure_opt: true
%% Parameters
%%    _53 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^7/1-6-'`(_53) {
0:
  %% Aliased:
  %%    _53
  _633 = is_nonempty_list _53
  br _633, ^633, ^634

633:
  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _53
  _344 = get_hd _53

  %% Argument types:
  %%    _53 => nonempty_list(any())
  %% Aliased:
  %%    _53
  _343 = get_tl _53

  %% lc_SUITE.erl:78
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _344
  _345 = call (`odd`/1), _344

  %% Unique:
  %%    _345
  _625 = succeeded:body _345
  br _625, ^625, ^1

625:
  br _345, ^631, ^630

631:
  %% lc_SUITE.erl:78
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _343
  _618 = call (`'-basic/1-lc$^7/1-6-'`/1), _343

  %% Unique:
  %%    _618
  _628 = succeeded:body _618
  br _628, ^628, ^1

628:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _618
  ret _618

630:
  %% lc_SUITE.erl:78
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _343
  _55 = call (`'-basic/1-lc$^7/1-6-'`/1), _343

  %% Unique:
  %%    _55
  _629 = succeeded:body _55
  br _629, ^629, ^1

629:
  %% Argument types:
  %%    _55 => list(any())
  %% Aliased:
  %%    _344
  %% Unique:
  %%    _55
  _617 = put_list _344, _55
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _617
  ret _617

1:
  _621 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _621

634:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:77
%% Counter = 634
%% bs_ensure_opt: true
%% Parameters
%%    _44 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^6/1-5-'`(_44) {
0:
  %% Aliased:
  %%    _44
  _629 = is_nonempty_list _44
  br _629, ^629, ^630

629:
  %% Argument types:
  %%    _44 => nonempty_list(any())
  %% Aliased:
  %%    _44
  _338 = get_hd _44

  %% Argument types:
  %%    _44 => nonempty_list(any())
  %% Aliased:
  %%    _44
  _337 = get_tl _44

  %% lc_SUITE.erl:77
  %% Result type:
  %%    'false' | 'true'
  %% Aliased:
  %%    _338
  _339 = call (`odd`/1), _338

  %% Unique:
  %%    _339
  _621 = succeeded:body _339
  br _621, ^621, ^1

621:
  br _339, ^626, ^627

626:
  %% lc_SUITE.erl:77
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _337
  _46 = call (`'-basic/1-lc$^6/1-5-'`/1), _337

  %% Unique:
  %%    _46
  _625 = succeeded:body _46
  br _625, ^625, ^1

625:
  %% Argument types:
  %%    _46 => list(any())
  %% Aliased:
  %%    _338
  %% Unique:
  %%    _46
  _613 = put_list _338, _46
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _613
  ret _613

627:
  %% lc_SUITE.erl:77
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _337
  _614 = call (`'-basic/1-lc$^6/1-5-'`/1), _337

  %% Unique:
  %%    _614
  _624 = succeeded:body _614
  br _624, ^624, ^1

624:
  %% Result type:
  %%    list(any())
  %% Unique:
  %%    _614
  ret _614

1:
  _617 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _617

630:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:76
%% Counter = 630
%% bs_ensure_opt: true
%% Parameters
%%    _37 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^5/1-4-'`(_37) {
0:
  %% Aliased:
  %%    _37
  _622 = is_nonempty_list _37
  br _622, ^622, ^623

622:
  %% Argument types:
  %%    _37 => nonempty_list(any())
  %% Aliased:
  %%    _37
  _331 = get_tl _37

  %% lc_SUITE.erl:76
  %% Result type:
  %%    nil()
  %% Aliased:
  %%    _331
  _611 = call (`'-basic/1-lc$^5/1-4-'`/1), _331

  %% Unique:
  %%    _611
  _621 = succeeded:body _611
  br _621, ^621, ^1

621:
  %% Result type:
  %%    nil()
  %% Unique:
  %%    _611
  ret _611

1:
  _613 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _613

623:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:75
%% Counter = 627
%% bs_ensure_opt: true
%% Parameters
%%    _28 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^4/1-3-'`(_28) {
0:
  %% Aliased:
  %%    _28
  _619 = is_nonempty_list _28
  br _619, ^619, ^620

619:
  %% Argument types:
  %%    _28 => nonempty_list(any())
  %% Aliased:
  %%    _28
  _326 = get_hd _28

  %% Argument types:
  %%    _28 => nonempty_list(any())
  %% Aliased:
  %%    _28
  _325 = get_tl _28

  %% lc_SUITE.erl:75
  %% Argument types:
  %%    
  %% Aliased:
  %%    _326
  _26 = bif:'>' _326, `3`
  br _26, ^624, ^614

624:
  %% lc_SUITE.erl:75
  %% Argument types:
  %%    _326 => atom() | maybe_improper_list(any(), any()) | number(3, '+inf') | {...} | other()
  %% Aliased:
  %%    _326
  _27 = bif:'<' _326, `7`
  br _27, ^616, ^614

616:
  %% lc_SUITE.erl:75
  %% Result type:
  %%    list(number(3, 7))
  %% Aliased:
  %%    _325
  _30 = call (`'-basic/1-lc$^4/1-3-'`/1), _325

  %% Unique:
  %%    _30
  _617 = succeeded:body _30
  br _617, ^617, ^1

617:
  %% Argument types:
  %%    _326 => number(3, 7)
  %%    _30 => list(number(3, 7))
  %% Unique:
  %%    _30, 
  %%    _326
  _607 = put_list _326, _30
  %% Result type:
  %%    nonempty_list(number(3, 7))
  %% Unique:
  %%    _607
  ret _607

614:
  %% lc_SUITE.erl:75
  %% Result type:
  %%    list(number(3, 7))
  %% Aliased:
  %%    _325
  _608 = call (`'-basic/1-lc$^4/1-3-'`/1), _325

  %% Unique:
  %%    _608
  _618 = succeeded:body _608
  br _618, ^618, ^1

618:
  %% Result type:
  %%    list(number(3, 7))
  %% Unique:
  %%    _608
  ret _608

1:
  _610 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _610

620:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:74
%% Counter = 619
%% bs_ensure_opt: true
%% Parameters
%%    _19 =>
%%     list(any())
function `lc_SUITE`:`'-basic/1-lc$^3/1-2-'`(_19) {
0:
  %% Aliased:
  %%    _19
  _615 = is_nonempty_list _19
  br _615, ^615, ^616

615:
  %% Argument types:
  %%    _19 => nonempty_list(any())
  %% Aliased:
  %%    _19
  _321 = get_hd _19

  %% Argument types:
  %%    _19 => nonempty_list(any())
  %% Aliased:
  %%    _19
  _320 = get_tl _19

  %% Argument types:
  %%    
  %% Aliased:
  %%    _321
  _612 = bif:'<' _321, `6`
  br _612, ^612, ^611

612:
  %% lc_SUITE.erl:74
  %% Result type:
  %%    list(number('-inf', 6))
  %% Aliased:
  %%    _320
  _21 = call (`'-basic/1-lc$^3/1-2-'`/1), _320

  %% Unique:
  %%    _21
  _613 = succeeded:body _21
  br _613, ^613, ^1

613:
  %% Argument types:
  %%    _321 => number('-inf', 6)
  %%    _21 => list(number('-inf', 6))
  %% Unique:
  %%    _21, 
  %%    _321
  _604 = put_list _321, _21
  %% Result type:
  %%    nonempty_list(number('-inf', 6))
  %% Unique:
  %%    _604
  ret _604

611:
  %% lc_SUITE.erl:74
  %% Result type:
  %%    list(number('-inf', 6))
  %% Aliased:
  %%    _320
  _605 = call (`'-basic/1-lc$^3/1-2-'`/1), _320

  %% Unique:
  %%    _605
  _614 = succeeded:body _605
  br _614, ^614, ^1

614:
  %% Result type:
  %%    list(number('-inf', 6))
  %% Unique:
  %%    _605
  ret _605

1:
  _607 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _607

616:
  %% Result type:
  %%    nil()
  ret `[]`
}

%% lc_SUITE.erl:73
%% Counter = 614
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-fun-2-'`(_13) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _610 = is_tagged_tuple _13, `2`, `x`
  br _610, ^607, ^606

607:
  %% Argument types:
  %%    _13 => {'x', any()}
  %% Aliased:
  %%    _13
  _314 = get_tuple_element _13, `1`
  %% Aliased:
  %%    _314
  ret _314

606:
  %% lc_SUITE.erl:73
  %% Aliased:
  %%    _13
  %% Anno: #{inlined => {'-basic/1-inlined-1-',1}}
  _603 = match_fail `function_clause`, _13

  %% Unique:
  %%    _603
  _613 = succeeded:body _603
  br ^1

1:
  _604 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _604
}

%% lc_SUITE.erl:72
%% Counter = 613
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-lc$^1/1-0-'`(_8) {
0:
  %% Aliased:
  %%    _8
  _608 = is_nonempty_list _8
  br _608, ^608, ^606

608:
  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _311 = get_hd _8

  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _310 = get_tl _8

  %% lc_SUITE.erl:72
  %% Result type:
  %%    list({'x', any()})
  %% Aliased:
  %%    _310
  _10 = call (`'-basic/1-lc$^1/1-0-'`/1), _310

  %% Unique:
  %%    _10
  _607 = succeeded:body _10
  br _607, ^607, ^1

607:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _311
  _312 = put_tuple `x`, _311

  %% Argument types:
  %%    _312 => {'x', any()}
  %%    _10 => list({'x', any()})
  %% Unique:
  %%    _10, 
  %%    _312
  _601 = put_list _312, _10
  %% Result type:
  %%    nonempty_list({'x', any()})
  %% Unique:
  %%    _601
  ret _601

606:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _609 = bif:'=:=' _8, `[]`
  br _609, ^609, ^605

609:
  %% Result type:
  %%    nil()
  ret `[]`

605:
  %% Argument types:
  %%    _8 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _8
  _309 = put_tuple `bad_generator`, _8

  %% lc_SUITE.erl:72
  %% Unique:
  %%    _309
  _602 = call (`erlang`:`error`/1), _309

  %% Aliased:
  %%    _602
  _610 = succeeded:body _602
  br ^1

1:
  _603 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _603
}

%% lc_SUITE.erl:71
%% Counter = 603
%% bs_ensure_opt: true
function `lc_SUITE`:`'-basic/1-fun-0-'`(_2) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _2
  _600 = put_tuple `x`, _2
  %% Result type:
  %%    {'x', any()}
  %% Unique:
  %%    _600
  ret _600
}
