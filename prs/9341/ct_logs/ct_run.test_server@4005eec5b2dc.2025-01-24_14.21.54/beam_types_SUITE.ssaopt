module beam_types_SUITE.
exports [{absorption,1},
         {all,0},
         {associativity,1},
         {binary_absorption,1},
         {commutativity,1},
         {end_per_suite,1},
         {groups,0},
         {idempotence,1},
         {identity,1},
         {init_per_suite,1},
         {integer_absorption,1},
         {integer_associativity,1},
         {module_info,0},
         {module_info,1},
         {subtraction,1},
         {suite,0},
         {tuple_absorption,1},
         {tuple_set_limit,1}].
attributes [].

%% beam_types_SUITE.erl:42
%% Counter = 4
%% bs_ensure_opt: true
function `beam_types_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% beam_types_SUITE.erl:45
%% Counter = 4
%% bs_ensure_opt: true
function `beam_types_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list('binary_absorption' | 'integer_absorption' | 'integer_associativity' | 'tuple_absorption' | 'tuple_set_limit' | {'group', 'property_tests'})
  ret `[{group,property_tests},
  binary_absorption,integer_absorption,integer_associativity,tuple_absorption,
  tuple_set_limit]`
}

%% beam_types_SUITE.erl:53
%% Counter = 4
%% bs_ensure_opt: true
function `beam_types_SUITE`:`groups`() {
0:
  %% Result type:
  %%    nonempty_list({'property_tests', nonempty_list('parallel'), nonempty_list(atom())})
  ret `[{property_tests,[parallel],
                  [absorption,associativity,commutativity,idempotence,
                   identity,subtraction]}]`
}

%% beam_types_SUITE.erl:62
%% Counter = 6
%% bs_ensure_opt: true
function `beam_types_SUITE`:`init_per_suite`(_0) {
0:
  %% beam_types_SUITE.erl:63
  %% Aliased:
  %%    _0
  _2 = call (`ct_property_test`:`init_per_suite`/1), _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_types_SUITE.erl:65
%% Counter = 4
%% bs_ensure_opt: true
function `beam_types_SUITE`:`end_per_suite`(_0) {
0:
  %% Aliased:
  %%    _0
  ret _0
}

%% beam_types_SUITE.erl:68
%% Counter = 19
%% bs_ensure_opt: true
function `beam_types_SUITE`:`absorption`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^10, ^9

10:
  %% beam_types_SUITE.erl:70
  _1 = call (`beam_types_prop`:`absorption`/0)

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_types_SUITE.erl:70
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`ct_property_test`:`quickcheck`/2), _1, _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _4
  ret _4

14:
  %% beam_types_SUITE.erl:70
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

9:
  %% beam_types_SUITE.erl:68
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-absorption/1-',1}}
  _6 = match_fail `function_clause`, _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_types_SUITE.erl:72
%% Counter = 19
%% bs_ensure_opt: true
function `beam_types_SUITE`:`associativity`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^10, ^9

10:
  %% beam_types_SUITE.erl:74
  _1 = call (`beam_types_prop`:`associativity`/0)

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_types_SUITE.erl:74
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`ct_property_test`:`quickcheck`/2), _1, _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _4
  ret _4

14:
  %% beam_types_SUITE.erl:74
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

9:
  %% beam_types_SUITE.erl:72
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-associativity/1-',1}}
  _6 = match_fail `function_clause`, _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_types_SUITE.erl:76
%% Counter = 19
%% bs_ensure_opt: true
function `beam_types_SUITE`:`commutativity`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^10, ^9

10:
  %% beam_types_SUITE.erl:78
  _1 = call (`beam_types_prop`:`commutativity`/0)

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_types_SUITE.erl:78
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`ct_property_test`:`quickcheck`/2), _1, _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _4
  ret _4

14:
  %% beam_types_SUITE.erl:78
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

9:
  %% beam_types_SUITE.erl:76
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-commutativity/1-',1}}
  _6 = match_fail `function_clause`, _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_types_SUITE.erl:80
%% Counter = 19
%% bs_ensure_opt: true
function `beam_types_SUITE`:`idempotence`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^10, ^9

10:
  %% beam_types_SUITE.erl:82
  _1 = call (`beam_types_prop`:`idempotence`/0)

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_types_SUITE.erl:82
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`ct_property_test`:`quickcheck`/2), _1, _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _4
  ret _4

14:
  %% beam_types_SUITE.erl:82
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

9:
  %% beam_types_SUITE.erl:80
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-idempotence/1-',1}}
  _6 = match_fail `function_clause`, _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_types_SUITE.erl:84
%% Counter = 19
%% bs_ensure_opt: true
function `beam_types_SUITE`:`identity`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^10, ^9

10:
  %% beam_types_SUITE.erl:86
  _1 = call (`beam_types_prop`:`identity`/0)

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_types_SUITE.erl:86
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`ct_property_test`:`quickcheck`/2), _1, _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _4
  ret _4

14:
  %% beam_types_SUITE.erl:86
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

9:
  %% beam_types_SUITE.erl:84
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-identity/1-',1}}
  _6 = match_fail `function_clause`, _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_types_SUITE.erl:88
%% Counter = 19
%% bs_ensure_opt: true
function `beam_types_SUITE`:`subtraction`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _10 = bif:is_list _0
  br _10, ^10, ^9

10:
  %% beam_types_SUITE.erl:90
  _1 = call (`beam_types_prop`:`subtraction`/0)

  %% Aliased:
  %%    _1
  _11 = succeeded:body _1
  br _11, ^11, ^1

11:
  %% beam_types_SUITE.erl:90
  %% Aliased:
  %%    _0, 
  %%    _1
  _4 = call (`ct_property_test`:`quickcheck`/2), _1, _0

  %% Aliased:
  %%    _4
  _12 = succeeded:body _4
  br _12, ^12, ^1

12:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _16 = bif:'=:=' _4, `true`
  br _16, ^15, ^14

15:
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _4
  ret _4

14:
  %% beam_types_SUITE.erl:90
  %% Aliased:
  %%    _4
  _5 = match_fail `badmatch`, _4

  %% Unique:
  %%    _5
  _17 = succeeded:body _5
  br ^1

9:
  %% beam_types_SUITE.erl:88
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-subtraction/1-',1}}
  _6 = match_fail `function_clause`, _0

  %% Unique:
  %%    _6
  _18 = succeeded:body _6
  br ^1

1:
  _7 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _7
}

%% beam_types_SUITE.erl:92
%% Counter = 110
%% bs_ensure_opt: true
function `beam_types_SUITE`:`binary_absorption`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _50 = bif:is_list _0
  br _50, ^50, ^49

50:
  %% beam_types_SUITE.erl:98
  _24 = call (`beam_types`:`meet`/2), `{t_bitstring,4,false}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _24
  _51 = succeeded:body _24
  br _51, ^51, ^1

51:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _105 = is_tagged_tuple _24, `3`, `t_bitstring`
  br _105, ^102, ^53

102:
  %% Argument types:
  %%    _24 => {'t_bitstring', any(), any()}
  %% Aliased:
  %%    _24
  _26 = get_tuple_element _24, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _101 = bif:'=:=' _26, `12`
  br _101, ^100, ^53

100:
  %% beam_types_SUITE.erl:99
  _28 = call (`beam_types`:`join`/2), `{t_bitstring,4,false}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _28
  _54 = succeeded:body _28
  br _54, ^54, ^1

54:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _96 = is_tagged_tuple _28, `3`, `t_bitstring`
  br _96, ^93, ^56

93:
  %% Argument types:
  %%    _28 => {'t_bitstring', any(), any()}
  %% Aliased:
  %%    _28
  _30 = get_tuple_element _28, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _30
  _92 = bif:'=:=' _30, `2`
  br _92, ^91, ^56

91:
  %% beam_types_SUITE.erl:101
  _5 = call (`beam_types`:`join`/2), `{t_bitstring,4,false}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _5
  _57 = succeeded:body _5
  br _57, ^57, ^1

57:
  %% beam_types_SUITE.erl:101
  %% Aliased:
  %%    _5
  _32 = call (`beam_types`:`meet`/2), `{t_bitstring,4,false}`, _5

  %% Aliased:
  %%    _32
  _58 = succeeded:body _32
  br _58, ^58, ^1

58:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _61 = bif:'=:=' _32, `{t_bitstring,4,false}`
  br _61, ^61, ^60

61:
  %% beam_types_SUITE.erl:102
  _7 = call (`beam_types`:`meet`/2), `{t_bitstring,4,false}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _7
  _62 = succeeded:body _7
  br _62, ^62, ^1

62:
  %% beam_types_SUITE.erl:102
  %% Aliased:
  %%    _7
  _33 = call (`beam_types`:`join`/2), `{t_bitstring,4,false}`, _7

  %% Aliased:
  %%    _33
  _63 = succeeded:body _33
  br _63, ^63, ^1

63:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _33
  _66 = bif:'=:=' _33, `{t_bitstring,4,false}`
  br _66, ^66, ^65

66:
  %% beam_types_SUITE.erl:108
  _34 = call (`beam_types`:`meet`/2), `{t_bitstring,4,true}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _34
  _67 = succeeded:body _34
  br _67, ^67, ^1

67:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _87 = bif:'=:=' _34, `{t_bitstring,12,true}`
  br _87, ^87, ^69

87:
  %% beam_types_SUITE.erl:109
  _35 = call (`beam_types`:`join`/2), `{t_bitstring,4,true}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _35
  _70 = succeeded:body _35
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _85 = bif:'=:=' _35, `{t_bitstring,2,false}`
  br _85, ^85, ^72

85:
  %% beam_types_SUITE.erl:111
  _13 = call (`beam_types`:`join`/2), `{t_bitstring,4,true}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _13
  _73 = succeeded:body _13
  br _73, ^73, ^1

73:
  %% beam_types_SUITE.erl:111
  %% Aliased:
  %%    _13
  _36 = call (`beam_types`:`meet`/2), `{t_bitstring,4,true}`, _13

  %% Aliased:
  %%    _36
  _74 = succeeded:body _36
  br _74, ^74, ^1

74:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _36
  _77 = bif:'=:=' _36, `{t_bitstring,4,true}`
  br _77, ^77, ^76

77:
  %% beam_types_SUITE.erl:112
  _15 = call (`beam_types`:`meet`/2), `{t_bitstring,4,true}`, `{t_bitstring,6,false}`

  %% Aliased:
  %%    _15
  _78 = succeeded:body _15
  br _78, ^78, ^1

78:
  %% beam_types_SUITE.erl:112
  %% Aliased:
  %%    _15
  _37 = call (`beam_types`:`join`/2), `{t_bitstring,4,true}`, _15

  %% Aliased:
  %%    _37
  _79 = succeeded:body _37
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _37
  _82 = bif:'=:=' _37, `{t_bitstring,4,true}`
  br _82, ^82, ^81

82:
  %% Result type:
  %%    'ok'
  ret `ok`

81:
  %% beam_types_SUITE.erl:112
  %% Aliased:
  %%    _37
  _38 = match_fail `badmatch`, _37

  %% Unique:
  %%    _38
  _83 = succeeded:body _38
  br ^1

76:
  %% beam_types_SUITE.erl:111
  %% Aliased:
  %%    _36
  _39 = match_fail `badmatch`, _36

  %% Unique:
  %%    _39
  _84 = succeeded:body _39
  br ^1

72:
  %% beam_types_SUITE.erl:109
  %% Aliased:
  %%    _35
  _40 = match_fail `badmatch`, _35

  %% Unique:
  %%    _40
  _86 = succeeded:body _40
  br ^1

69:
  %% beam_types_SUITE.erl:108
  %% Aliased:
  %%    _34
  _41 = match_fail `badmatch`, _34

  %% Unique:
  %%    _41
  _88 = succeeded:body _41
  br ^1

65:
  %% beam_types_SUITE.erl:102
  %% Aliased:
  %%    _33
  _42 = match_fail `badmatch`, _33

  %% Unique:
  %%    _42
  _89 = succeeded:body _42
  br ^1

60:
  %% beam_types_SUITE.erl:101
  %% Aliased:
  %%    _32
  _43 = match_fail `badmatch`, _32

  %% Unique:
  %%    _43
  _90 = succeeded:body _43
  br ^1

56:
  %% beam_types_SUITE.erl:99
  %% Aliased:
  %%    _28
  _44 = match_fail `badmatch`, _28

  %% Unique:
  %%    _44
  _99 = succeeded:body _44
  br ^1

53:
  %% beam_types_SUITE.erl:98
  %% Aliased:
  %%    _24
  _45 = match_fail `badmatch`, _24

  %% Unique:
  %%    _45
  _108 = succeeded:body _45
  br ^1

49:
  %% beam_types_SUITE.erl:92
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-binary_absorption/1-',1}}
  _46 = match_fail `function_clause`, _0

  %% Unique:
  %%    _46
  _109 = succeeded:body _46
  br ^1

1:
  _47 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _47
}

%% beam_types_SUITE.erl:116
%% Counter = 49
%% bs_ensure_opt: true
function `beam_types_SUITE`:`integer_absorption`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _24 = bif:is_list _0
  br _24, ^24, ^23

24:
  %% beam_types_SUITE.erl:121
  _12 = call (`beam_types`:`meet`/2), `{t_integer,{2,3}}`, `{t_integer,{4,5}}`

  %% Aliased:
  %%    _12
  _25 = succeeded:body _12
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _46 = bif:'=:=' _12, `none`
  br _46, ^45, ^27

45:
  %% beam_types_SUITE.erl:122
  _13 = call (`beam_types`:`join`/2), `{t_integer,{2,3}}`, `{t_integer,{4,5}}`

  %% Aliased:
  %%    _13
  _28 = succeeded:body _13
  br _28, ^28, ^1

28:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _43 = bif:'=:=' _13, `{t_integer,{2,5}}`
  br _43, ^43, ^30

43:
  %% beam_types_SUITE.erl:124
  _5 = call (`beam_types`:`join`/2), `{t_integer,{2,3}}`, `{t_integer,{4,5}}`

  %% Aliased:
  %%    _5
  _31 = succeeded:body _5
  br _31, ^31, ^1

31:
  %% beam_types_SUITE.erl:124
  %% Aliased:
  %%    _5
  _14 = call (`beam_types`:`meet`/2), `{t_integer,{2,3}}`, _5

  %% Aliased:
  %%    _14
  _32 = succeeded:body _14
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _35 = bif:'=:=' _14, `{t_integer,{2,3}}`
  br _35, ^35, ^34

35:
  %% beam_types_SUITE.erl:125
  _7 = call (`beam_types`:`meet`/2), `{t_integer,{2,3}}`, `{t_integer,{4,5}}`

  %% Aliased:
  %%    _7
  _36 = succeeded:body _7
  br _36, ^36, ^1

36:
  %% beam_types_SUITE.erl:125
  %% Aliased:
  %%    _7
  _15 = call (`beam_types`:`join`/2), `{t_integer,{2,3}}`, _7

  %% Aliased:
  %%    _15
  _37 = succeeded:body _15
  br _37, ^37, ^1

37:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _40 = bif:'=:=' _15, `{t_integer,{2,3}}`
  br _40, ^40, ^39

40:
  %% Result type:
  %%    'ok'
  ret `ok`

39:
  %% beam_types_SUITE.erl:125
  %% Aliased:
  %%    _15
  _16 = match_fail `badmatch`, _15

  %% Unique:
  %%    _16
  _41 = succeeded:body _16
  br ^1

34:
  %% beam_types_SUITE.erl:124
  %% Aliased:
  %%    _14
  _17 = match_fail `badmatch`, _14

  %% Unique:
  %%    _17
  _42 = succeeded:body _17
  br ^1

30:
  %% beam_types_SUITE.erl:122
  %% Aliased:
  %%    _13
  _18 = match_fail `badmatch`, _13

  %% Unique:
  %%    _18
  _44 = succeeded:body _18
  br ^1

27:
  %% beam_types_SUITE.erl:121
  %% Aliased:
  %%    _12
  _19 = match_fail `badmatch`, _12

  %% Unique:
  %%    _19
  _47 = succeeded:body _19
  br ^1

23:
  %% beam_types_SUITE.erl:116
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-integer_absorption/1-',1}}
  _20 = match_fail `function_clause`, _0

  %% Unique:
  %%    _20
  _48 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% beam_types_SUITE.erl:129
%% Counter = 53
%% bs_ensure_opt: true
function `beam_types_SUITE`:`integer_associativity`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _27 = bif:is_list _0
  br _27, ^27, ^26

27:
  %% beam_types_SUITE.erl:135
  _4 = call (`beam_types`:`join`/2), `{t_integer,{4,6}}`, `{t_integer,{5,5}}`

  %% Aliased:
  %%    _4
  _28 = succeeded:body _4
  br _28, ^28, ^1

28:
  %% beam_types_SUITE.erl:135
  %% Aliased:
  %%    _4
  LHS_Join = call (`beam_types`:`join`/2), `{t_integer,{3,5}}`, _4

  %% Aliased:
  %%    LHS_Join
  _29 = succeeded:body LHS_Join
  br _29, ^29, ^1

29:
  %% beam_types_SUITE.erl:136
  _6 = call (`beam_types`:`join`/2), `{t_integer,{3,5}}`, `{t_integer,{4,6}}`

  %% Aliased:
  %%    _6
  _30 = succeeded:body _6
  br _30, ^30, ^1

30:
  %% beam_types_SUITE.erl:136
  %% Aliased:
  %%    _6
  RHS_Join = call (`beam_types`:`join`/2), _6, `{t_integer,{5,5}}`

  %% Aliased:
  %%    RHS_Join
  _31 = succeeded:body RHS_Join
  br _31, ^31, ^1

31:
  %% Argument types:
  %%    
  %% Aliased:
  %%    LHS_Join, 
  %%    RHS_Join
  _34 = bif:'=:=' RHS_Join, LHS_Join
  br _34, ^34, ^33

34:
  %% Argument types:
  %%    
  %% Aliased:
  %%    RHS_Join
  _49 = bif:'=:=' RHS_Join, `{t_integer,{3,6}}`
  br _49, ^49, ^36

49:
  %% beam_types_SUITE.erl:140
  _10 = call (`beam_types`:`meet`/2), `{t_integer,{4,6}}`, `{t_integer,{5,5}}`

  %% Aliased:
  %%    _10
  _37 = succeeded:body _10
  br _37, ^37, ^1

37:
  %% beam_types_SUITE.erl:140
  %% Aliased:
  %%    _10
  LHS_Meet = call (`beam_types`:`meet`/2), `{t_integer,{3,5}}`, _10

  %% Aliased:
  %%    LHS_Meet
  _38 = succeeded:body LHS_Meet
  br _38, ^38, ^1

38:
  %% beam_types_SUITE.erl:141
  _12 = call (`beam_types`:`meet`/2), `{t_integer,{3,5}}`, `{t_integer,{4,6}}`

  %% Aliased:
  %%    _12
  _39 = succeeded:body _12
  br _39, ^39, ^1

39:
  %% beam_types_SUITE.erl:141
  %% Aliased:
  %%    _12
  RHS_Meet = call (`beam_types`:`meet`/2), _12, `{t_integer,{5,5}}`

  %% Aliased:
  %%    RHS_Meet
  _40 = succeeded:body RHS_Meet
  br _40, ^40, ^1

40:
  %% Argument types:
  %%    
  %% Aliased:
  %%    LHS_Meet, 
  %%    RHS_Meet
  _43 = bif:'=:=' RHS_Meet, LHS_Meet
  br _43, ^43, ^42

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    RHS_Meet
  _46 = bif:'=:=' RHS_Meet, `{t_integer,{5,5}}`
  br _46, ^46, ^45

46:
  %% Result type:
  %%    'ok'
  ret `ok`

45:
  %% beam_types_SUITE.erl:142
  %% Aliased:
  %%    RHS_Meet
  _19 = match_fail `badmatch`, RHS_Meet

  %% Unique:
  %%    _19
  _47 = succeeded:body _19
  br ^1

42:
  %% beam_types_SUITE.erl:142
  %% Aliased:
  %%    RHS_Meet
  _20 = match_fail `badmatch`, RHS_Meet

  %% Unique:
  %%    _20
  _48 = succeeded:body _20
  br ^1

36:
  %% beam_types_SUITE.erl:137
  %% Aliased:
  %%    RHS_Join
  _21 = match_fail `badmatch`, RHS_Join

  %% Unique:
  %%    _21
  _50 = succeeded:body _21
  br ^1

33:
  %% beam_types_SUITE.erl:137
  %% Aliased:
  %%    RHS_Join
  _22 = match_fail `badmatch`, RHS_Join

  %% Unique:
  %%    _22
  _51 = succeeded:body _22
  br ^1

26:
  %% beam_types_SUITE.erl:129
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-integer_associativity/1-',1}}
  _23 = match_fail `function_clause`, _0

  %% Unique:
  %%    _23
  _52 = succeeded:body _23
  br ^1

1:
  _24 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _24
}

%% beam_types_SUITE.erl:146
%% Counter = 32
%% bs_ensure_opt: true
function `beam_types_SUITE`:`tuple_absorption`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _18 = bif:is_list _0
  br _18, ^18, ^17

18:
  %% beam_types_SUITE.erl:154
  _3 = call (`beam_types`:`join`/2), `{t_tuple,3,true,#{1 => {t_atom,[gurka]}}}`, `{t_tuple,5,false,#{3 => {t_atom,[gaffel]}}}`

  %% Aliased:
  %%    _3
  _19 = succeeded:body _3
  br _19, ^19, ^1

19:
  %% beam_types_SUITE.erl:154
  %% Aliased:
  %%    _3
  _10 = call (`beam_types`:`meet`/2), `{t_tuple,3,true,#{1 => {t_atom,[gurka]}}}`, _3

  %% Aliased:
  %%    _10
  _20 = succeeded:body _10
  br _20, ^20, ^1

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _23 = bif:'=:=' _10, `{t_tuple,3,true,#{1 => {t_atom,[gurka]}}}`
  br _23, ^23, ^22

23:
  %% beam_types_SUITE.erl:155
  _5 = call (`beam_types`:`meet`/2), `{t_tuple,3,true,#{1 => {t_atom,[gurka]}}}`, `{t_tuple,5,false,#{3 => {t_atom,[gaffel]}}}`

  %% Aliased:
  %%    _5
  _24 = succeeded:body _5
  br _24, ^24, ^1

24:
  %% beam_types_SUITE.erl:155
  %% Aliased:
  %%    _5
  _11 = call (`beam_types`:`join`/2), `{t_tuple,3,true,#{1 => {t_atom,[gurka]}}}`, _5

  %% Aliased:
  %%    _11
  _25 = succeeded:body _11
  br _25, ^25, ^1

25:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _28 = bif:'=:=' _11, `{t_tuple,3,true,#{1 => {t_atom,[gurka]}}}`
  br _28, ^28, ^27

28:
  %% Result type:
  %%    'ok'
  ret `ok`

27:
  %% beam_types_SUITE.erl:155
  %% Aliased:
  %%    _11
  _12 = match_fail `badmatch`, _11

  %% Unique:
  %%    _12
  _29 = succeeded:body _12
  br ^1

22:
  %% beam_types_SUITE.erl:154
  %% Aliased:
  %%    _10
  _13 = match_fail `badmatch`, _10

  %% Unique:
  %%    _13
  _30 = succeeded:body _13
  br ^1

17:
  %% beam_types_SUITE.erl:146
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tuple_absorption/1-',1}}
  _14 = match_fail `function_clause`, _0

  %% Unique:
  %%    _14
  _31 = succeeded:body _14
  br ^1

1:
  _15 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _15
}

%% beam_types_SUITE.erl:159
%% Counter = 57
%% bs_ensure_opt: true
function `beam_types_SUITE`:`tuple_set_limit`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _47 = bif:is_list _0
  br _47, ^47, ^46

47:
  %% beam_types_SUITE.erl:165
  _3 = call (`lists`:`seq`/2), `1`, `12`

  %% Aliased:
  %%    _3
  _48 = succeeded:body _3
  br _48, ^48, ^1

48:
  %% beam_types_SUITE.erl:165
  %% Result type:
  %%    list({'t_tuple', any(), 'true', #{1=>{'t_integer', {...}}}})
  %% Aliased:
  %%    _3
  _8 = call (`'-tuple_set_limit/1-lc$^0/1-0-'`/1), _3

  %% Unique:
  %%    _8
  _49 = succeeded:body _8
  br _49, ^49, ^1

49:
  %% beam_types_SUITE.erl:169
  _12 = call (`lists`:`seq`/2), `1`, `12`

  %% Aliased:
  %%    _12
  _50 = succeeded:body _12
  br _50, ^50, ^1

50:
  %% beam_types_SUITE.erl:169
  %% Result type:
  %%    list({'t_tuple', 1, 'true', #{1=>{'t_integer', {...}}}})
  %% Aliased:
  %%    _12
  _17 = call (`'-tuple_set_limit/1-lc$^1/1-1-'`/1), _12

  %% Unique:
  %%    _17
  _51 = succeeded:body _17
  br _51, ^51, ^1

51:
  %% beam_types_SUITE.erl:171
  %% Unique:
  %%    _8
  A = call (`beam_types`:`join`/1), _8

  %% Aliased:
  %%    A
  _52 = succeeded:body A
  br _52, ^52, ^1

52:
  %% beam_types_SUITE.erl:172
  %% Unique:
  %%    _17
  B = call (`beam_types`:`join`/1), _17

  %% Aliased:
  %%    B
  _53 = succeeded:body B
  br _53, ^53, ^1

53:
  %% beam_types_SUITE.erl:174
  %% Aliased:
  %%    A, 
  %%    B
  _21 = call (`beam_types`:`join`/2), A, B

  %% Aliased:
  %%    _21
  _54 = succeeded:body _21
  br _54, ^54, ^1

54:
  %% beam_types_SUITE.erl:174
  %% Aliased:
  %%    _21
  _42 = call (`beam_types`:`verified_type`/1), _21

  %% Aliased:
  %%    _42
  _55 = succeeded:body _42
  br _55, ^55, ^1

55:
  %% Result type:
  %%    'ok'
  ret `ok`

46:
  %% beam_types_SUITE.erl:159
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-tuple_set_limit/1-',1}}
  _43 = match_fail `function_clause`, _0

  %% Unique:
  %%    _43
  _56 = succeeded:body _43
  br ^1

1:
  _44 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _44
}

%% Counter = 6
%% bs_ensure_opt: true
function `beam_types_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `beam_types_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `beam_types_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `beam_types_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% beam_types_SUITE.erl:169
%% Counter = 52
%% bs_ensure_opt: true
function `beam_types_SUITE`:`'-tuple_set_limit/1-lc$^1/1-1-'`(_13) {
0:
  %% Aliased:
  %%    _13
  _47 = is_nonempty_list _13
  br _47, ^47, ^45

47:
  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _34 = get_hd _13

  %% Argument types:
  %%    _13 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _13
  _33 = get_tl _13

  %% Argument types:
  %%    
  %% Aliased:
  %%    _34
  _35 = put_tuple _34, _34

  %% Argument types:
  %%    _35 => {any(), any()}
  %% Unique:
  %%    _35
  _36 = put_tuple `t_integer`, _35

  %% beam_types_SUITE.erl:168
  %% Unique:
  %%    _36
  _15 = put_map `assoc`, `#{}`, `1`, _36

  %% beam_types_SUITE.erl:169
  %% Result type:
  %%    list({'t_tuple', 1, 'true', #{1=>{'t_integer', {...}}}})
  %% Aliased:
  %%    _33
  _16 = call (`'-tuple_set_limit/1-lc$^1/1-1-'`/1), _33

  %% Unique:
  %%    _16
  _46 = succeeded:body _16
  br _46, ^46, ^1

46:
  %% Argument types:
  %%    _15 => #{1=>{'t_integer', {any(), any()}}}
  %% Aliased:
  %%    _15
  _37 = put_tuple `t_tuple`, `1`, `true`, _15

  %% Argument types:
  %%    _37 => {'t_tuple', 1, 'true', #{1=>{'t_integer', {any(), any()}}}}
  %%    _16 => list({'t_tuple', 1, 'true', #{1=>{'t_integer', {...}}}})
  %% Unique:
  %%    _16, 
  %%    _37
  _40 = put_list _37, _16
  %% Result type:
  %%    nonempty_list({'t_tuple', 1, 'true', #{1=>{'t_integer', {...}}}})
  %% Unique:
  %%    _40
  ret _40

45:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _48 = bif:'=:=' _13, `[]`
  br _48, ^48, ^44

48:
  %% Result type:
  %%    nil()
  ret `[]`

44:
  %% Argument types:
  %%    _13 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _13
  _32 = put_tuple `bad_generator`, _13

  %% beam_types_SUITE.erl:169
  %% Unique:
  %%    _32
  _41 = call (`erlang`:`error`/1), _32

  %% Aliased:
  %%    _41
  _49 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% beam_types_SUITE.erl:165
%% Counter = 50
%% bs_ensure_opt: true
function `beam_types_SUITE`:`'-tuple_set_limit/1-lc$^0/1-0-'`(_4) {
0:
  %% Aliased:
  %%    _4
  _45 = is_nonempty_list _4
  br _45, ^45, ^43

45:
  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _26 = get_hd _4

  %% Argument types:
  %%    _4 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _4
  _25 = get_tl _4

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _27 = put_tuple _26, _26

  %% Argument types:
  %%    _27 => {any(), any()}
  %% Unique:
  %%    _27
  _28 = put_tuple `t_integer`, _27

  %% beam_types_SUITE.erl:164
  %% Unique:
  %%    _28
  _6 = put_map `assoc`, `#{}`, `1`, _28

  %% beam_types_SUITE.erl:165
  %% Result type:
  %%    list({'t_tuple', any(), 'true', #{1=>{'t_integer', {...}}}})
  %% Aliased:
  %%    _25
  _7 = call (`'-tuple_set_limit/1-lc$^0/1-0-'`/1), _25

  %% Unique:
  %%    _7
  _44 = succeeded:body _7
  br _44, ^44, ^1

44:
  %% Argument types:
  %%    _6 => #{1=>{'t_integer', {any(), any()}}}
  %% Aliased:
  %%    _6, 
  %%    _26
  _29 = put_tuple `t_tuple`, _26, `true`, _6

  %% Argument types:
  %%    _29 => {'t_tuple', any(), 'true', #{1=>{'t_integer', {any(), any()}}}}
  %%    _7 => list({'t_tuple', any(), 'true', #{1=>{'t_integer', {...}}}})
  %% Unique:
  %%    _7, 
  %%    _29
  _38 = put_list _29, _7
  %% Result type:
  %%    nonempty_list({'t_tuple', any(), 'true', #{1=>{'t_integer', {...}}}})
  %% Unique:
  %%    _38
  ret _38

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  _46 = bif:'=:=' _4, `[]`
  br _46, ^46, ^42

46:
  %% Result type:
  %%    nil()
  ret `[]`

42:
  %% Argument types:
  %%    _4 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _4
  _24 = put_tuple `bad_generator`, _4

  %% beam_types_SUITE.erl:165
  %% Unique:
  %%    _24
  _39 = call (`erlang`:`error`/1), _24

  %% Aliased:
  %%    _39
  _47 = succeeded:body _39
  br ^1

1:
  _40 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _40
}
