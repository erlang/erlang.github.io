module inline_SUITE.
exports [{all,0},
         {attribute,1},
         {badarg,2},
         {barnes2,1},
         {bsdecode,1},
         {bsdes,1},
         {comma_splitter,1},
         {compare,2},
         {coverage,1},
         {decode1,1},
         {end_per_group,2},
         {end_per_suite,1},
         {fail_me_now,0},
         {fname,1},
         {foo,1},
         {groups,0},
         {init_per_group,2},
         {init_per_suite,1},
         {itracer,1},
         {lists,1},
         {load_and_call,2},
         {maps_inline_test,1},
         {module_info,0},
         {module_info,1},
         {my_apply,4},
         {otp_7223,1},
         {otp_7223_1,1},
         {otp_7223_2,1},
         {pseudoknot,1},
         {really_inlined,1},
         {smith,1},
         {suite,0},
         {try_inline,2}].
attributes [].

%% inline_SUITE.erl:32
%% Counter = 4
%% bs_ensure_opt: true
function `inline_SUITE`:`suite`() {
0:
  %% Result type:
  %%    nonempty_list({'ct_hooks', nonempty_list('ts_install_cth')})
  ret `[{ct_hooks,[ts_install_cth]}]`
}

%% inline_SUITE.erl:34
%% Counter = 4
%% bs_ensure_opt: true
function `inline_SUITE`:`all`() {
0:
  %% Result type:
  %%    nonempty_list({'group', 'p'})
  ret `[{group,p}]`
}

%% inline_SUITE.erl:37
%% Counter = 7
%% bs_ensure_opt: true
function `inline_SUITE`:`groups`() {
0:
  %% inline_SUITE.erl:38
  _0 = call (`test_lib`:`parallel`/0)

  %% Aliased:
  %%    _0
  _6 = succeeded:body _0
  br _6, ^6, ^1

6:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _2 = put_tuple `p`, _0, `[attribute,bsdecode,bsdes,barnes2,decode1,smith,fname,itracer,pseudoknot,
  maps_inline_test,comma_splitter,lists,really_inlined,otp_7223,coverage]`

  %% Argument types:
  %%    _2 => {'p', any(), nonempty_list(atom())}
  %% Unique:
  %%    _2
  _3 = put_list _2, `[]`
  %% Result type:
  %%    nonempty_list({'p', any(), nonempty_list(atom())})
  %% Unique:
  %%    _3
  ret _3

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:43
%% Counter = 6
%% bs_ensure_opt: true
function `inline_SUITE`:`init_per_suite`(_0) {
0:
  %% inline_SUITE.erl:44
  _2 = call (`test_lib`:`recompile`/1), `inline_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _0
  ret _0

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% inline_SUITE.erl:47
%% Counter = 4
%% bs_ensure_opt: true
function `inline_SUITE`:`end_per_suite`(_0) {
0:
  %% Result type:
  %%    'ok'
  ret `ok`
}

%% inline_SUITE.erl:50
%% Counter = 4
%% bs_ensure_opt: true
function `inline_SUITE`:`init_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% inline_SUITE.erl:53
%% Counter = 4
%% bs_ensure_opt: true
function `inline_SUITE`:`end_per_group`(_0, _1) {
0:
  %% Aliased:
  %%    _1
  ret _1
}

%% inline_SUITE.erl:57
%% Counter = 83
%% bs_ensure_opt: true
function `inline_SUITE`:`attribute`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _35 = bif:is_list _0
  br _35, ^35, ^34

35:
  %% inline_SUITE.erl:59
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _36 = succeeded:body _2
  br _36, ^36, ^1

36:
  %% inline_SUITE.erl:59
  %% Aliased:
  %%    _2
  Src = call (`filename`:`join`/2), _2, `"attribute"`

  %% Aliased:
  %%    Src
  _37 = succeeded:body Src
  br _37, ^37, ^1

37:
  %% inline_SUITE.erl:60
  %% Aliased:
  %%    _0
  Out = call (`proplists`:`get_value`/2), `priv_dir`, _0

  %% Aliased:
  %%    Out
  _38 = succeeded:body Out
  br _38, ^38, ^1

38:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _12 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _12 => {'outdir', any()}
  %% Unique:
  %%    _12
  _13 = put_list _12, `[report,time]`

  %% inline_SUITE.erl:62
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _13
  _14 = call (`compile`:`file`/2), Src, _13

  %% Aliased:
  %%    _14
  _39 = succeeded:body _14
  br _39, ^39, ^1

39:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _76 = is_tagged_tuple _14, `2`, `ok`
  br _76, ^73, ^41

73:
  %% Argument types:
  %%    _14 => {'ok', any()}
  %% Aliased:
  %%    _14
  _15 = get_tuple_element _14, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _15
  _72 = bif:'=:=' _15, `attribute`
  br _72, ^71, ^41

71:
  %% inline_SUITE.erl:63
  %% Aliased:
  %%    Out
  Outfile = call (`filename`:`join`/2), Out, `"attribute.beam"`

  %% Aliased:
  %%    Outfile
  _42 = succeeded:body Outfile
  br _42, ^42, ^1

42:
  %% inline_SUITE.erl:64
  %% Aliased:
  %%    Outfile
  _17 = call (`beam_lib`:`chunks`/2), Outfile, `[locals]`

  %% Aliased:
  %%    _17
  _43 = succeeded:body _17
  br _43, ^43, ^1

43:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _67 = is_tagged_tuple _17, `2`, `ok`
  br _67, ^64, ^45

64:
  %% Argument types:
  %%    _17 => {'ok', any()}
  %% Aliased:
  %%    _17
  _18 = get_tuple_element _17, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _18
  _61 = bif:is_tuple _18
  br _61, ^61, ^45

61:
  %% Argument types:
  %%    _18 => {...}
  %% Aliased:
  %%    _18
  _62 = bif:tuple_size _18

  %% Argument types:
  %%    _62 => 0..16777215
  %% Unique:
  %%    _62
  _63 = bif:'=:=' _62, `2`
  br _63, ^60, ^45

60:
  %% Argument types:
  %%    _18 => {any(), any()}
  %% Aliased:
  %%    _18
  _20 = get_tuple_element _18, `1`

  %% Aliased:
  %%    _20
  _59 = is_nonempty_list _20
  br _59, ^59, ^45

59:
  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _23 = get_hd _20

  %% Argument types:
  %%    _20 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _20
  _22 = get_tl _20

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23
  _56 = is_tagged_tuple _23, `2`, `locals`
  br _56, ^53, ^45

53:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22
  _52 = bif:'=:=' _22, `[]`
  br _52, ^52, ^45

52:
  %% Argument types:
  %%    _18 => {any(), any()}
  %% Aliased:
  %%    _18
  _21 = get_tuple_element _18, `0`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _21
  _46 = bif:'=:=' _21, `attribute`
  br _46, ^46, ^45

46:
  %% Argument types:
  %%    _23 => {'locals', any()}
  %% Aliased:
  %%    _23
  _24 = get_tuple_element _23, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _26 = put_list _24, `[]`

  %% inline_SUITE.erl:65
  %% Unique:
  %%    _26
  _27 = call (`io`:`format`/2), `"locals: ~p\n"`, _26

  %% Aliased:
  %%    _27
  _47 = succeeded:body _27
  br _47, ^47, ^1

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _24
  _50 = bif:'=:=' _24, `[]`
  br _50, ^50, ^49

50:
  %% Result type:
  %%    'ok'
  ret `ok`

49:
  %% inline_SUITE.erl:68
  %% Aliased:
  %%    _24
  _28 = match_fail `badmatch`, _24

  %% Unique:
  %%    _28
  _51 = succeeded:body _28
  br ^1

45:
  %% inline_SUITE.erl:64
  %% Aliased:
  %%    _17
  _29 = match_fail `badmatch`, _17

  %% Unique:
  %%    _29
  _70 = succeeded:body _29
  br ^1

41:
  %% inline_SUITE.erl:62
  %% Aliased:
  %%    _14
  _30 = match_fail `badmatch`, _14

  %% Unique:
  %%    _30
  _79 = succeeded:body _30
  br ^1

34:
  %% inline_SUITE.erl:57
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-attribute/1-',1}}
  _31 = match_fail `function_clause`, _0

  %% Unique:
  %%    _31
  _80 = succeeded:body _31
  br ^1

1:
  _32 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _32
}

%% inline_SUITE.erl:76
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`bsdecode`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:76
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `bsdecode`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:76
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-bsdecode/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:77
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`bsdes`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:77
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `bsdes`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:77
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-bsdes/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:78
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`barnes2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:78
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `barnes2`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:78
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-barnes2/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:79
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`decode1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:79
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `decode1`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:79
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-decode1/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:80
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`smith`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:80
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `smith`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:80
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-smith/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:81
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`itracer`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:81
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `itracer`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:81
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-itracer/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:82
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`pseudoknot`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:82
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `pseudoknot`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:82
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-pseudoknot/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:83
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`comma_splitter`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:83
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `comma_splitter`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:83
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-comma_splitter/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:84
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`fname`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:84
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `fname`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:84
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-fname/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:85
%% Counter = 10
%% bs_ensure_opt: true
function `inline_SUITE`:`maps_inline_test`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _7 = bif:is_list _0
  br _7, ^7, ^6

7:
  %% inline_SUITE.erl:85
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _0
  _2 = call (`try_inline`/2), `maps_inline_test`, _0

  %% Unique:
  %%    _2
  _8 = succeeded:body _2
  br _8, ^8, ^1

8:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _2
  ret _2

6:
  %% inline_SUITE.erl:85
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-maps_inline_test/1-',1}}
  _3 = match_fail `function_clause`, _0

  %% Unique:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:87
%% Counter = 142
%% bs_ensure_opt: true
function `inline_SUITE`:`try_inline`(_0, _1) {
0:
  %% inline_SUITE.erl:88
  %% Aliased:
  %%    _1
  _3 = call (`proplists`:`get_value`/2), `data_dir`, _1

  %% Aliased:
  %%    _3
  _67 = succeeded:body _3
  br _67, ^67, ^1

67:
  %% inline_SUITE.erl:89
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _2
  _68 = succeeded:body _2
  br _68, ^68, ^1

68:
  %% inline_SUITE.erl:88
  %% Aliased:
  %%    _2, 
  %%    _3
  Src = call (`filename`:`join`/2), _3, _2

  %% Aliased:
  %%    Src
  _69 = succeeded:body Src
  br _69, ^69, ^1

69:
  %% inline_SUITE.erl:90
  %% Aliased:
  %%    _1
  Out = call (`proplists`:`get_value`/2), `priv_dir`, _1

  %% Aliased:
  %%    Out
  _70 = succeeded:body Out
  br _70, ^70, ^1

70:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _29 = put_list Src, `[]`

  %% inline_SUITE.erl:93
  %% Unique:
  %%    _29
  _48 = call (`io`:`format`/2), `"Compiling: ~s\n"`, _29

  %% Aliased:
  %%    _48
  _71 = succeeded:body _48
  br _71, ^71, ^1

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _30 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _30 => {'outdir', any()}
  %% Unique:
  %%    _30
  _31 = put_list _30, `[report,bin_opt_info,recv_opt_info,clint,ssalint]`

  %% inline_SUITE.erl:94
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _31
  _32 = call (`compile`:`file`/2), Src, _31

  %% Aliased:
  %%    _32
  _72 = succeeded:body _32
  br _72, ^72, ^1

72:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _32
  _132 = is_tagged_tuple _32, `2`, `ok`
  br _132, ^129, ^74

129:
  %% Argument types:
  %%    _32 => {'ok', any()}
  %% Aliased:
  %%    _32
  _33 = get_tuple_element _32, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _33
  _75 = bif:'=:=' _33, _0
  br _75, ^75, ^74

75:
  %% inline_SUITE.erl:97
  _49 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _49
  _76 = succeeded:body _49
  br _76, ^76, ^1

76:
  %% inline_SUITE.erl:98
  %% Aliased:
  %%    _0, 
  %%    Out
  NormalResult = call (`load_and_call`/2), Out, _0

  %% Aliased:
  %%    NormalResult
  _77 = succeeded:body NormalResult
  br _77, ^77, ^1

77:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _35 = put_list Src, `[]`

  %% inline_SUITE.erl:101
  %% Unique:
  %%    _35
  _50 = call (`io`:`format`/2), `"Compiling with old inliner: ~s\n"`, _35

  %% Aliased:
  %%    _50
  _78 = succeeded:body _50
  br _78, ^78, ^1

78:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _36 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _36 => {'outdir', any()}
  %% Unique:
  %%    _36
  _37 = put_list _36, `[report,bin_opt_info,recv_opt_info,{inline,1000},clint,ssalint]`

  %% inline_SUITE.erl:102
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _37
  _38 = call (`compile`:`file`/2), Src, _37

  %% Aliased:
  %%    _38
  _79 = succeeded:body _38
  br _79, ^79, ^1

79:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _38
  _125 = is_tagged_tuple _38, `2`, `ok`
  br _125, ^122, ^81

122:
  %% Argument types:
  %%    _38 => {'ok', any()}
  %% Aliased:
  %%    _38
  _39 = get_tuple_element _38, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _39
  _82 = bif:'=:=' _39, _0
  br _82, ^82, ^81

82:
  %% inline_SUITE.erl:106
  _51 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _51
  _83 = succeeded:body _51
  br _83, ^83, ^1

83:
  %% inline_SUITE.erl:107
  %% Aliased:
  %%    _0, 
  %%    Out
  OldInlinedResult = call (`load_and_call`/2), Out, _0

  %% Aliased:
  %%    OldInlinedResult
  _84 = succeeded:body OldInlinedResult
  br _84, ^84, ^1

84:
  %% inline_SUITE.erl:110
  %% Aliased:
  %%    NormalResult, 
  %%    OldInlinedResult
  _52 = call (`compare`/2), NormalResult, OldInlinedResult

  %% Aliased:
  %%    _52
  _85 = succeeded:body _52
  br _85, ^85, ^1

85:
  %% Argument types:
  %%    
  %% Aliased:
  %%    NormalResult, 
  %%    OldInlinedResult
  _88 = bif:'=:=' OldInlinedResult, NormalResult
  br _88, ^88, ^87

88:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Src
  _41 = put_list Src, `[]`

  %% inline_SUITE.erl:114
  %% Unique:
  %%    _41
  _53 = call (`io`:`format`/2), `"Compiling with new inliner: ~s\n"`, _41

  %% Aliased:
  %%    _53
  _89 = succeeded:body _53
  br _89, ^89, ^1

89:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Out
  _42 = put_tuple `outdir`, Out

  %% Argument types:
  %%    _42 => {'outdir', any()}
  %% Unique:
  %%    _42
  _43 = put_list _42, `[report,bin_opt_info,inline,recv_opt_info,clint,ssalint]`

  %% inline_SUITE.erl:115
  %% Aliased:
  %%    Src
  %% Unique:
  %%    _43
  _44 = call (`compile`:`file`/2), Src, _43

  %% Aliased:
  %%    _44
  _90 = succeeded:body _44
  br _90, ^90, ^1

90:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _117 = is_tagged_tuple _44, `2`, `ok`
  br _117, ^114, ^92

114:
  %% Argument types:
  %%    _44 => {'ok', any()}
  %% Aliased:
  %%    _44
  _45 = get_tuple_element _44, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _45
  _93 = bif:'=:=' _45, _0
  br _93, ^93, ^92

93:
  %% inline_SUITE.erl:119
  _54 = call (`ct`:`timetrap`/1), `{minutes,10}`

  %% Aliased:
  %%    _54
  _94 = succeeded:body _54
  br _94, ^94, ^1

94:
  %% inline_SUITE.erl:120
  %% Aliased:
  %%    _0, 
  %%    Out
  InlinedResult = call (`load_and_call`/2), Out, _0

  %% Aliased:
  %%    InlinedResult
  _95 = succeeded:body InlinedResult
  br _95, ^95, ^1

95:
  %% inline_SUITE.erl:123
  %% Aliased:
  %%    InlinedResult, 
  %%    NormalResult
  _55 = call (`compare`/2), NormalResult, InlinedResult

  %% Aliased:
  %%    _55
  _96 = succeeded:body _55
  br _96, ^96, ^1

96:
  %% Argument types:
  %%    
  %% Aliased:
  %%    InlinedResult, 
  %%    NormalResult
  _99 = bif:'=:=' InlinedResult, NormalResult
  br _99, ^99, ^98

99:
  %% inline_SUITE.erl:127
  %% Aliased:
  %%    _0
  _15 = call (`erlang`:`atom_to_list`/1), _0

  %% Aliased:
  %%    _15
  _100 = succeeded:body _15
  br _100, ^100, ^1

100:
  %% inline_SUITE.erl:127
  _14 = call (`code`:`objfile_extension`/0)

  %% Aliased:
  %%    _14
  _101 = succeeded:body _14
  br _101, ^101, ^1

101:
  %% inline_SUITE.erl:127
  %% Aliased:
  %%    _14, 
  %%    _15
  _16 = call (`erlang`:`'++'`/2), _15, _14

  %% inline_SUITE.erl:127
  %% Aliased:
  %%    _16, 
  %%    Out
  _17 = call (`filename`:`join`/2), Out, _16

  %% Aliased:
  %%    _17
  _103 = succeeded:body _17
  br _103, ^103, ^1

103:
  %% inline_SUITE.erl:127
  %% Aliased:
  %%    _17
  _47 = call (`file`:`delete`/1), _17

  %% Aliased:
  %%    _47
  _104 = succeeded:body _47
  br _104, ^104, ^1

104:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _47
  _111 = bif:'=:=' _47, `ok`
  br _111, ^110, ^106

110:
  %% inline_SUITE.erl:130
  %% Aliased:
  %%    _0
  _56 = call (`code`:`purge`/1), _0

  %% Aliased:
  %%    _56
  _107 = succeeded:body _56
  br _107, ^107, ^1

107:
  %% inline_SUITE.erl:131
  %% Aliased:
  %%    _0
  _57 = call (`code`:`delete`/1), _0

  %% Aliased:
  %%    _57
  _108 = succeeded:body _57
  br _108, ^108, ^1

108:
  %% inline_SUITE.erl:132
  %% Aliased:
  %%    _0
  _58 = call (`code`:`purge`/1), _0

  %% Aliased:
  %%    _58
  _109 = succeeded:body _58
  br _109, ^109, ^1

109:
  %% Result type:
  %%    'ok'
  ret `ok`

106:
  %% inline_SUITE.erl:127
  %% Aliased:
  %%    _47
  _59 = match_fail `badmatch`, _47

  %% Unique:
  %%    _59
  _112 = succeeded:body _59
  br ^1

98:
  %% inline_SUITE.erl:124
  %% Aliased:
  %%    InlinedResult
  _60 = match_fail `badmatch`, InlinedResult

  %% Unique:
  %%    _60
  _113 = succeeded:body _60
  br ^1

92:
  %% inline_SUITE.erl:115
  %% Aliased:
  %%    _44
  _61 = match_fail `badmatch`, _44

  %% Unique:
  %%    _61
  _120 = succeeded:body _61
  br ^1

87:
  %% inline_SUITE.erl:111
  %% Aliased:
  %%    OldInlinedResult
  _62 = match_fail `badmatch`, OldInlinedResult

  %% Unique:
  %%    _62
  _121 = succeeded:body _62
  br ^1

81:
  %% inline_SUITE.erl:102
  %% Aliased:
  %%    _38
  _63 = match_fail `badmatch`, _38

  %% Unique:
  %%    _63
  _128 = succeeded:body _63
  br ^1

74:
  %% inline_SUITE.erl:94
  %% Aliased:
  %%    _32
  _64 = match_fail `badmatch`, _32

  %% Unique:
  %%    _64
  _135 = succeeded:body _64
  br ^1

1:
  _65 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _65
}

%% inline_SUITE.erl:136
%% Counter = 79
%% bs_ensure_opt: true
function `inline_SUITE`:`compare`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0, 
  %%    _1
  _45 = bif:'=:=' _1, _0
  br _45, ^45, ^44

45:
  %% Result type:
  %%    'ok'
  ret `ok`

44:
  %% Aliased:
  %%    _0
  _69 = is_nonempty_list _0
  br _69, ^69, ^47

69:
  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _16 = get_hd _0

  %% Argument types:
  %%    _0 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _0
  _15 = get_tl _0

  %% Aliased:
  %%    _1
  _51 = is_nonempty_list _1
  br _51, ^51, ^46

51:
  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _35 = get_hd _1

  %% Argument types:
  %%    _1 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1
  _34 = get_tl _1

  %% Argument types:
  %%    
  %% Aliased:
  %%    _16, 
  %%    _35
  _49 = bif:'=:=' _35, _16
  br _49, ^49, ^48

49:
  %% inline_SUITE.erl:138
  %% Aliased:
  %%    _15, 
  %%    _34
  _36 = call (`compare`/2), _15, _34

  %% Aliased:
  %%    _36
  _50 = succeeded:body _36
  br _50, ^50, ^1

50:
  %% Aliased:
  %%    _36
  ret _36

48:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _16
  _63 = bif:is_tuple _16
  br _63, ^63, ^68

63:
  %% Argument types:
  %%    _16 => {...}
  %% Aliased:
  %%    _16
  _64 = bif:tuple_size _16

  %% Argument types:
  %%    _64 => 0..16777215
  %% Unique:
  %%    _64
  _65 = bif:'=:=' _64, `3`
  br _65, ^61, ^68

61:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _58 = bif:is_tuple _35
  br _58, ^58, ^68

58:
  %% Argument types:
  %%    _35 => {...}
  %% Aliased:
  %%    _35
  _59 = bif:tuple_size _35

  %% Argument types:
  %%    _59 => 0..16777215
  %% Unique:
  %%    _59
  _60 = bif:'=:=' _59, `3`
  br _60, ^57, ^68

57:
  %% Argument types:
  %%    _16 => {any(), any(), any()}
  %% Aliased:
  %%    _16
  _23 = get_tuple_element _16, `0`

  %% Argument types:
  %%    _35 => {any(), any(), any()}
  %% Aliased:
  %%    _35
  _28 = get_tuple_element _35, `0`

  %% inline_SUITE.erl:139
  %% Argument types:
  %%    
  %% Aliased:
  %%    _23, 
  %%    _28
  _8 = bif:'=:=' _28, _23
  br _8, ^75, ^68

75:
  %% Argument types:
  %%    _35 => {any(), any(), any()}
  %% Aliased:
  %%    _35
  _27 = get_tuple_element _35, `1`

  %% Argument types:
  %%    _16 => {any(), any(), any()}
  %% Aliased:
  %%    _16
  _22 = get_tuple_element _16, `1`

  %% inline_SUITE.erl:139
  %% Argument types:
  %%    
  %% Aliased:
  %%    _22, 
  %%    _27
  _9 = bif:'=:=' _27, _22
  br _9, ^54, ^68

54:
  %% Argument types:
  %%    _35 => {any(), any(), any()}
  %% Aliased:
  %%    _35
  _26 = get_tuple_element _35, `2`

  %% Argument types:
  %%    _16 => {any(), any(), any()}
  %% Aliased:
  %%    _16
  _21 = get_tuple_element _16, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _26
  _30 = put_list _26, `[]`

  %% Argument types:
  %%    _30 => nonempty_list(any())
  %% Aliased:
  %%    _21
  %% Unique:
  %%    _30
  _31 = put_list _21, _30

  %% Argument types:
  %%    _31 => nonempty_list(any())
  %% Aliased:
  %%    _22
  %% Unique:
  %%    _31
  _32 = put_list _22, _31

  %% Argument types:
  %%    _32 => nonempty_list(any())
  %% Aliased:
  %%    _23
  %% Unique:
  %%    _32
  _33 = put_list _23, _32

  %% inline_SUITE.erl:140
  %% Unique:
  %%    _33
  _37 = call (`io`:`format`/2), `"X = ~p, Y = ~p, RGB normal = ~p, RGB inlined ~p\n"`, _33

  %% Aliased:
  %%    _37
  _55 = succeeded:body _37
  br _55, ^55, ^1

55:
  %% inline_SUITE.erl:141
  %% Aliased:
  %%    _15, 
  %%    _34
  _38 = call (`compare`/2), _15, _34

  %% Aliased:
  %%    _38
  _56 = succeeded:body _38
  br _56, ^56, ^1

56:
  %% Aliased:
  %%    _38
  ret _38

68:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _35
  _19 = put_list _35, `[]`

  %% Argument types:
  %%    _19 => nonempty_list(any())
  %% Aliased:
  %%    _16
  %% Unique:
  %%    _19
  _20 = put_list _16, _19

  %% inline_SUITE.erl:143
  %% Unique:
  %%    _20
  _39 = call (`io`:`format`/2), `"Normal = ~p, Inlined = ~p\n"`, _20

  %% Aliased:
  %%    _39
  _66 = succeeded:body _39
  br _66, ^66, ^1

66:
  %% inline_SUITE.erl:144
  _40 = call (`ct`:`fail`/1), `different`

  %% Aliased:
  %%    _40
  _67 = succeeded:body _40
  br _67, ^67, ^1

67:
  %% Aliased:
  %%    _40
  ret _40

47:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _71 = bif:'=:=' _0, `[]`
  br _71, ^71, ^46

71:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _70 = bif:'=:=' _1, `[]`
  br _70, ^70, ^46

70:
  %% Result type:
  %%    'ok'
  ret `ok`

46:
  %% inline_SUITE.erl:136
  %% Aliased:
  %%    _0, 
  %%    _1
  %% Anno: #{inlined => {'-inlined-compare/2-',2}}
  _41 = match_fail `function_clause`, _0, _1

  %% Unique:
  %%    _41
  _72 = succeeded:body _41
  br ^1

1:
  _42 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _42
}

%% inline_SUITE.erl:147
%% Counter = 49
%% bs_ensure_opt: true
function `inline_SUITE`:`load_and_call`(_0, _1) {
0:
  %% inline_SUITE.erl:148
  _16 = call (`io`:`format`/2), `"Loading...\n"`, `[]`

  %% Aliased:
  %%    _16
  _24 = succeeded:body _16
  br _24, ^24, ^1

24:
  %% inline_SUITE.erl:149
  %% Aliased:
  %%    _1
  _17 = call (`code`:`purge`/1), _1

  %% Aliased:
  %%    _17
  _25 = succeeded:body _17
  br _25, ^25, ^1

25:
  %% inline_SUITE.erl:150
  %% Aliased:
  %%    _0, 
  %%    _1
  _2 = call (`filename`:`join`/2), _0, _1

  %% Aliased:
  %%    _2
  _26 = succeeded:body _2
  br _26, ^26, ^1

26:
  %% inline_SUITE.erl:150
  %% Aliased:
  %%    _2
  _9 = call (`code`:`load_abs`/1), _2

  %% Aliased:
  %%    _9
  _27 = succeeded:body _9
  br _27, ^27, ^1

27:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _9
  _44 = is_tagged_tuple _9, `2`, `module`
  br _44, ^41, ^29

41:
  %% Argument types:
  %%    _9 => {'module', any()}
  %% Aliased:
  %%    _9
  _10 = get_tuple_element _9, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1, 
  %%    _10
  _30 = bif:'=:=' _10, _1
  br _30, ^30, ^29

30:
  %% inline_SUITE.erl:153
  _18 = call (`io`:`format`/2), `"Calling...\n"`, `[]`

  %% Aliased:
  %%    _18
  _31 = succeeded:body _18
  br _31, ^31, ^1

31:
  %% inline_SUITE.erl:154
  %% Aliased:
  %%    _1
  _12 = call (`timer`:`tc`/3), _1, _1, `[]`

  %% Aliased:
  %%    _12
  _32 = succeeded:body _12
  br _32, ^32, ^1

32:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _37 = bif:is_tuple _12
  br _37, ^37, ^34

37:
  %% Argument types:
  %%    _12 => {...}
  %% Aliased:
  %%    _12
  _38 = bif:tuple_size _12

  %% Argument types:
  %%    _38 => 0..16777215
  %% Unique:
  %%    _38
  _39 = bif:'=:=' _38, `2`
  br _39, ^36, ^34

36:
  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `0`

  %% Argument types:
  %%    _12 => {any(), any()}
  %% Aliased:
  %%    _12
  _13 = get_tuple_element _12, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _15 = put_list _14, `[]`

  %% inline_SUITE.erl:155
  %% Unique:
  %%    _15
  _19 = call (`io`:`format`/2), `"Time: ~p\n"`, _15

  %% Aliased:
  %%    _19
  _35 = succeeded:body _19
  br _35, ^35, ^1

35:
  %% Aliased:
  %%    _13
  ret _13

34:
  %% inline_SUITE.erl:154
  %% Aliased:
  %%    _12
  _20 = match_fail `badmatch`, _12

  %% Unique:
  %%    _20
  _40 = succeeded:body _20
  br ^1

29:
  %% inline_SUITE.erl:151
  %% Aliased:
  %%    _9
  _21 = match_fail `badmatch`, _9

  %% Unique:
  %%    _21
  _47 = succeeded:body _21
  br ^1

1:
  _22 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _22
}

%% inline_SUITE.erl:190
%% Counter = 2504
%% bs_ensure_opt: true
function `inline_SUITE`:`lists`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _1420 = bif:is_list _0
  br _1420, ^1420, ^1419

1420:
  %% inline_SUITE.erl:191
  List = call (`lists`:`seq`/2), `1`, `20`

  %% Aliased:
  %%    List
  _1421 = succeeded:body List
  br _1421, ^1421, ^1

1421:
  %% inline_SUITE.erl:194
  _1189 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1189
  _1422 = succeeded:body _1189
  br _1422, ^2135, ^1

2135:
  %% Result type:
  %%    0..255
  _19 = make_fun (`'-lists/1-fun-3-'`/1)

  %% inline_SUITE.erl:194
  %% Result type:
  %%    list(0..255)
  %% Aliased:
  %%    _19, 
  %%    List
  _20 = call (`'-lists/1-lists^map/1-1-'`/2), List, _19

  %% Unique:
  %%    _20
  _1423 = succeeded:body _20
  br _1423, ^1423, ^1

1423:
  %% inline_SUITE.erl:199
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-2-'`/1) => fun((_) -> {any(), any()})
  %%    _20 => list(0..255)
  %% Unique:
  %%    _20
  _21 = call (`'-lists/1-fun-2-'`/1), _20

  %% Aliased:
  %%    _21
  _1424 = succeeded:body _21
  br _1424, ^1424, ^1

1424:
  %% inline_SUITE.erl:194
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-1-'`/2) => fun((_) -> {any(), any()})
  %%    _21 => {any(), any()}
  %% Aliased:
  %%    _21, 
  %%    List
  _1197 = call (`'-lists/1-fun-1-'`/2), _21, List

  %% Aliased:
  %%    _1197
  _1425 = succeeded:body _1197
  br _1425, ^1425, ^1

1425:
  %% inline_SUITE.erl:202
  _1198 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1198
  _1426 = succeeded:body _1198
  br _1426, ^2138, ^1

2138:
  %% Result type:
  %%    list(any())
  _39 = make_fun (`'-lists/1-fun-7-'`/1)

  %% inline_SUITE.erl:202
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _39, 
  %%    List
  _40 = call (`'-lists/1-lists^flatmap/1-3-'`/2), List, _39

  %% Aliased:
  %%    _40
  _1427 = succeeded:body _40
  br _1427, ^1427, ^1

1427:
  %% inline_SUITE.erl:207
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-6-'`/1) => fun((_) -> {any(), any()})
  %%    _40 => list(any())
  %% Aliased:
  %%    _40
  _41 = call (`'-lists/1-fun-6-'`/1), _40

  %% Aliased:
  %%    _41
  _1428 = succeeded:body _41
  br _1428, ^1428, ^1

1428:
  %% inline_SUITE.erl:202
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-5-'`/2) => fun((_) -> {any(), any()})
  %%    _41 => {any(), any()}
  %% Aliased:
  %%    _41, 
  %%    List
  _1206 = call (`'-lists/1-fun-5-'`/2), _41, List

  %% Aliased:
  %%    _1206
  _1429 = succeeded:body _1206
  br _1429, ^1429, ^1

1429:
  %% inline_SUITE.erl:210
  _1207 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1207
  _1430 = succeeded:body _1207
  br _1430, ^2141, ^1

2141:
  _59 = make_fun (`'-lists/1-fun-11-'`/1)

  %% inline_SUITE.erl:210
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _59, 
  %%    List
  _60 = call (`'-lists/1-lists^foreach/1-5-'`/2), List, _59

  %% Unique:
  %%    _60
  _1431 = succeeded:body _60
  br _1431, ^1431, ^1

1431:
  %% inline_SUITE.erl:213
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-10-'`/1) => fun((_) -> {any(), any()})
  _61 = call (`'-lists/1-fun-10-'`/1), `ok`

  %% Aliased:
  %%    _61
  _1432 = succeeded:body _61
  br _1432, ^1432, ^1

1432:
  %% inline_SUITE.erl:210
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-9-'`/2) => fun((_) -> {any(), any()})
  %%    _61 => {any(), any()}
  %% Aliased:
  %%    _61, 
  %%    List
  _1216 = call (`'-lists/1-fun-9-'`/2), _61, List

  %% Aliased:
  %%    _1216
  _1433 = succeeded:body _1216
  br _1433, ^1433, ^1

1433:
  %% inline_SUITE.erl:216
  _1217 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1217
  _1434 = succeeded:body _1217
  br _1434, ^2144, ^1

2144:
  %% Result type:
  %%    'false' | 'true'
  _81 = make_fun (`'-lists/1-fun-15-'`/1)

  %% inline_SUITE.erl:216
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _81, 
  %%    List
  _82 = call (`'-lists/1-lists^filter/1-7-'`/2), List, _81

  %% Aliased:
  %%    _82
  _1435 = succeeded:body _82
  br _1435, ^1435, ^1

1435:
  %% inline_SUITE.erl:220
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-14-'`/1) => fun((_) -> {any(), any()})
  %%    _82 => list(any())
  %% Aliased:
  %%    _82
  _83 = call (`'-lists/1-fun-14-'`/1), _82

  %% Aliased:
  %%    _83
  _1436 = succeeded:body _83
  br _1436, ^1436, ^1

1436:
  %% inline_SUITE.erl:216
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-13-'`/2) => fun((_) -> {any(), any()})
  %%    _83 => {any(), any()}
  %% Aliased:
  %%    _83, 
  %%    List
  _1228 = call (`'-lists/1-fun-13-'`/2), _83, List

  %% Aliased:
  %%    _1228
  _1437 = succeeded:body _1228
  br _1437, ^1437, ^1

1437:
  %% inline_SUITE.erl:223
  _1229 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1229
  _1438 = succeeded:body _1229
  br _1438, ^2147, ^1

2147:
  %% Result type:
  %%    'false'
  _99 = make_fun (`'-lists/1-fun-19-'`/1)

  %% inline_SUITE.erl:223
  %% Result type:
  %%    'false'
  %% Aliased:
  %%    _99, 
  %%    List
  _100 = call (`'-lists/1-lists^any/1-9-'`/2), List, _99

  %% Unique:
  %%    _100
  _1439 = succeeded:body _100
  br _1439, ^1439, ^1

1439:
  %% inline_SUITE.erl:227
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-18-'`/1) => fun((_) -> {any(), any()})
  _101 = call (`'-lists/1-fun-18-'`/1), `false`

  %% Aliased:
  %%    _101
  _1440 = succeeded:body _101
  br _1440, ^1440, ^1

1440:
  %% inline_SUITE.erl:223
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-17-'`/2) => fun((_) -> {any(), any()})
  %%    _101 => {any(), any()}
  %% Aliased:
  %%    _101, 
  %%    List
  _1238 = call (`'-lists/1-fun-17-'`/2), _101, List

  %% Aliased:
  %%    _1238
  _1441 = succeeded:body _1238
  br _1441, ^1441, ^1

1441:
  %% inline_SUITE.erl:230
  _1239 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1239
  _1442 = succeeded:body _1239
  br _1442, ^2150, ^1

2150:
  %% Result type:
  %%    'true'
  _117 = make_fun (`'-lists/1-fun-23-'`/1)

  %% inline_SUITE.erl:230
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _117, 
  %%    List
  _118 = call (`'-lists/1-lists^all/1-11-'`/2), List, _117

  %% Unique:
  %%    _118
  _1443 = succeeded:body _118
  br _1443, ^1443, ^1

1443:
  %% inline_SUITE.erl:234
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-22-'`/1) => fun((_) -> {any(), any()})
  _119 = call (`'-lists/1-fun-22-'`/1), `true`

  %% Aliased:
  %%    _119
  _1444 = succeeded:body _119
  br _1444, ^1444, ^1

1444:
  %% inline_SUITE.erl:230
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-21-'`/2) => fun((_) -> {any(), any()})
  %%    _119 => {any(), any()}
  %% Aliased:
  %%    _119, 
  %%    List
  _1248 = call (`'-lists/1-fun-21-'`/2), _119, List

  %% Aliased:
  %%    _1248
  _1445 = succeeded:body _1248
  br _1445, ^1445, ^1

1445:
  %% inline_SUITE.erl:237
  _1249 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1249
  _1446 = succeeded:body _1249
  br _1446, ^2153, ^1

2153:
  %% Result type:
  %%    integer()
  _139 = make_fun (`'-lists/1-fun-27-'`/2)

  %% inline_SUITE.erl:237
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _139, 
  %%    List
  _140 = call (`'-lists/1-lists^foldl/2-13-'`/3), List, `0`, _139

  %% Unique:
  %%    _140
  _1447 = succeeded:body _140
  br _1447, ^1447, ^1

1447:
  %% inline_SUITE.erl:241
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-26-'`/1) => fun((_) -> {any(), any()})
  %%    _140 => integer()
  %% Unique:
  %%    _140
  _141 = call (`'-lists/1-fun-26-'`/1), _140

  %% Aliased:
  %%    _141
  _1448 = succeeded:body _141
  br _1448, ^1448, ^1

1448:
  %% inline_SUITE.erl:237
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-25-'`/2) => fun((_) -> {any(), any()})
  %%    _141 => {any(), any()}
  %% Aliased:
  %%    _141, 
  %%    List
  _1259 = call (`'-lists/1-fun-25-'`/2), _141, List

  %% Aliased:
  %%    _1259
  _1449 = succeeded:body _1259
  br _1449, ^1449, ^1

1449:
  %% inline_SUITE.erl:244
  _1260 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1260
  _1450 = succeeded:body _1260
  br _1450, ^2156, ^1

2156:
  %% Result type:
  %%    integer()
  _163 = make_fun (`'-lists/1-fun-31-'`/2)

  %% inline_SUITE.erl:244
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _163, 
  %%    List
  _164 = call (`'-lists/1-lists^foldr/2-15-'`/3), List, `0`, _163

  %% Unique:
  %%    _164
  _1451 = succeeded:body _164
  br _1451, ^1451, ^1

1451:
  %% inline_SUITE.erl:248
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-30-'`/1) => fun((_) -> {any(), any()})
  %%    _164 => integer()
  %% Unique:
  %%    _164
  _165 = call (`'-lists/1-fun-30-'`/1), _164

  %% Aliased:
  %%    _165
  _1452 = succeeded:body _165
  br _1452, ^1452, ^1

1452:
  %% inline_SUITE.erl:244
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-29-'`/2) => fun((_) -> {any(), any()})
  %%    _165 => {any(), any()}
  %% Aliased:
  %%    _165, 
  %%    List
  _1270 = call (`'-lists/1-fun-29-'`/2), _165, List

  %% Aliased:
  %%    _1270
  _1453 = succeeded:body _1270
  br _1453, ^1453, ^1

1453:
  %% inline_SUITE.erl:251
  _1271 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1271
  _1454 = succeeded:body _1271
  br _1454, ^2159, ^1

2159:
  %% Result type:
  %%    {integer(), integer()}
  _191 = make_fun (`'-lists/1-fun-35-'`/2)

  %% inline_SUITE.erl:251
  %% Result type:
  %%    {list(integer()), integer()}
  %% Aliased:
  %%    _191, 
  %%    List
  _192 = call (`'-lists/1-lists^mapfoldl/2-17-'`/3), List, `0`, _191

  %% Aliased:
  %%    _192
  _1455 = succeeded:body _192
  br _1455, ^1455, ^1

1455:
  %% inline_SUITE.erl:255
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-34-'`/1) => fun((_) -> {any(), any()})
  %%    _192 => {list(integer()), integer()}
  %% Aliased:
  %%    _192
  _193 = call (`'-lists/1-fun-34-'`/1), _192

  %% Aliased:
  %%    _193
  _1456 = succeeded:body _193
  br _1456, ^1456, ^1

1456:
  %% inline_SUITE.erl:251
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-33-'`/2) => fun((_) -> {any(), any()})
  %%    _193 => {any(), any()}
  %% Aliased:
  %%    _193, 
  %%    List
  _1284 = call (`'-lists/1-fun-33-'`/2), _193, List

  %% Aliased:
  %%    _1284
  _1457 = succeeded:body _1284
  br _1457, ^1457, ^1

1457:
  %% inline_SUITE.erl:258
  _1285 = call (`erlang`:`put`/2), `inline_SUITE`, `[]`

  %% Aliased:
  %%    _1285
  _1458 = succeeded:body _1285
  br _1458, ^2162, ^1

2162:
  %% Result type:
  %%    {integer(), integer()}
  _219 = make_fun (`'-lists/1-fun-39-'`/2)

  %% inline_SUITE.erl:258
  %% Result type:
  %%    {list(integer()), integer()}
  %% Aliased:
  %%    _219, 
  %%    List
  _220 = call (`'-lists/1-lists^mapfoldr/2-19-'`/3), List, `0`, _219

  %% Aliased:
  %%    _220
  _1459 = succeeded:body _220
  br _1459, ^1459, ^1

1459:
  %% inline_SUITE.erl:262
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-38-'`/1) => fun((_) -> {any(), any()})
  %%    _220 => {list(integer()), integer()}
  %% Aliased:
  %%    _220
  _221 = call (`'-lists/1-fun-38-'`/1), _220

  %% Aliased:
  %%    _221
  _1460 = succeeded:body _221
  br _1460, ^1460, ^1

1460:
  %% inline_SUITE.erl:258
  %% Result type:
  %%    {any(), any()}
  %% Argument types:
  %%    (`'-lists/1-fun-37-'`/2) => fun((_) -> {any(), any()})
  %%    _221 => {any(), any()}
  %% Aliased:
  %%    _221, 
  %%    List
  _1298 = call (`'-lists/1-fun-37-'`/2), _221, List

  %% Aliased:
  %%    _1298
  _1461 = succeeded:body _1298
  br _1461, ^1461, ^1

1461:
  %% inline_SUITE.erl:265
  _1299 = call (`erlang`:`erase`/1), `inline_SUITE`

  %% Aliased:
  %%    _1299
  _1462 = succeeded:body _1299
  br _1462, ^1462, ^1

1462:
  _224 = make_fun (`'-lists/1-fun-40-'`/1)
  _1466 = new_try_tag `'catch'`
  br _1466, ^2164, ^1465

2164:
  %% inline_SUITE.erl:268
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _224
  _1303 = call (`'-lists/1-lists^map/1-20-'`/2), `not_a_list`, _224

  %% Aliased:
  %%    _1303
  _1468 = succeeded:body _1303
  br ^1465

1465:
  %% Unique:
  %%    _1466
  _1471 = landingpad `'catch'`, _1466

  %% Aliased:
  %%    _1471
  _1469 = extract _1471, `0`
  br ^1463

1463:
  %% Aliased:
  %%    _1469
  %% Unique:
  %%    _1466
  _225 = catch_end _1466, _1469

  %% Argument types:
  %%    
  %% Aliased:
  %%    _225
  _2129 = is_tagged_tuple _225, `2`, `'EXIT'`
  br _2129, ^2126, ^1474

2126:
  %% Argument types:
  %%    _225 => {''EXIT'', any()}
  %% Aliased:
  %%    _225
  _813 = get_tuple_element _225, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _813
  _2123 = is_tagged_tuple _813, `2`, `function_clause`
  br _2123, ^2120, ^1474

2120:
  %% Argument types:
  %%    _813 => {'function_clause', any()}
  %% Aliased:
  %%    _813
  _815 = get_tuple_element _813, `1`

  %% Aliased:
  %%    _815
  _2119 = is_nonempty_list _815
  br _2119, ^2119, ^1474

2119:
  %% Argument types:
  %%    _815 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _815
  _818 = get_hd _815

  %% Argument types:
  %%    
  %% Aliased:
  %%    _818
  _2116 = is_tagged_tuple _818, `4`, `inline_SUITE`
  br _2116, ^2113, ^1474

2113:
  %% Argument types:
  %%    _818 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _818
  _820 = get_tuple_element _818, `2`

  %% Aliased:
  %%    _820
  _2112 = is_nonempty_list _820
  br _2112, ^2112, ^1474

2112:
  %% Argument types:
  %%    _820 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _820
  _823 = get_tl _820

  %% Argument types:
  %%    
  %% Aliased:
  %%    _823
  _2111 = bif:'=:=' _823, `[not_a_list]`
  br _2111, ^2111, ^1474

2111:
  _229 = make_fun (`'-lists/1-fun-41-'`/1)
  _1478 = new_try_tag `'catch'`
  br _1478, ^2165, ^1477

2165:
  %% inline_SUITE.erl:270
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _229
  _1307 = call (`'-lists/1-lists^flatmap/1-21-'`/2), `not_a_list`, _229

  %% Aliased:
  %%    _1307
  _1480 = succeeded:body _1307
  br ^1477

1477:
  %% Unique:
  %%    _1478
  _1483 = landingpad `'catch'`, _1478

  %% Aliased:
  %%    _1483
  _1481 = extract _1483, `0`
  br ^1475

1475:
  %% Aliased:
  %%    _1481
  %% Unique:
  %%    _1478
  _230 = catch_end _1478, _1481

  %% Argument types:
  %%    
  %% Aliased:
  %%    _230
  _2107 = is_tagged_tuple _230, `2`, `'EXIT'`
  br _2107, ^2104, ^1486

2104:
  %% Argument types:
  %%    _230 => {''EXIT'', any()}
  %% Aliased:
  %%    _230
  _834 = get_tuple_element _230, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _834
  _2101 = is_tagged_tuple _834, `2`, `function_clause`
  br _2101, ^2098, ^1486

2098:
  %% Argument types:
  %%    _834 => {'function_clause', any()}
  %% Aliased:
  %%    _834
  _836 = get_tuple_element _834, `1`

  %% Aliased:
  %%    _836
  _2097 = is_nonempty_list _836
  br _2097, ^2097, ^1486

2097:
  %% Argument types:
  %%    _836 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _836
  _839 = get_hd _836

  %% Argument types:
  %%    
  %% Aliased:
  %%    _839
  _2094 = is_tagged_tuple _839, `4`, `inline_SUITE`
  br _2094, ^2091, ^1486

2091:
  %% Argument types:
  %%    _839 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _839
  _841 = get_tuple_element _839, `2`

  %% Aliased:
  %%    _841
  _2090 = is_nonempty_list _841
  br _2090, ^2090, ^1486

2090:
  %% Argument types:
  %%    _841 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _841
  _844 = get_tl _841

  %% Argument types:
  %%    
  %% Aliased:
  %%    _844
  _2089 = bif:'=:=' _844, `[not_a_list]`
  br _2089, ^2089, ^1486

2089:
  _234 = make_fun (`'-lists/1-fun-42-'`/1)
  _1490 = new_try_tag `'catch'`
  br _1490, ^2166, ^1489

2166:
  %% inline_SUITE.erl:272
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _234
  _1312 = call (`'-lists/1-lists^foreach/1-22-'`/2), `not_a_list`, _234

  %% Aliased:
  %%    _1312
  _1492 = succeeded:body _1312
  br ^1489

1489:
  %% Unique:
  %%    _1490
  _1495 = landingpad `'catch'`, _1490

  %% Aliased:
  %%    _1495
  _1493 = extract _1495, `0`
  br ^1487

1487:
  %% Aliased:
  %%    _1493
  %% Unique:
  %%    _1490
  _235 = catch_end _1490, _1493

  %% Argument types:
  %%    
  %% Aliased:
  %%    _235
  _2085 = is_tagged_tuple _235, `2`, `'EXIT'`
  br _2085, ^2082, ^1498

2082:
  %% Argument types:
  %%    _235 => {''EXIT'', any()}
  %% Aliased:
  %%    _235
  _853 = get_tuple_element _235, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _853
  _2079 = is_tagged_tuple _853, `2`, `function_clause`
  br _2079, ^2076, ^1498

2076:
  %% Argument types:
  %%    _853 => {'function_clause', any()}
  %% Aliased:
  %%    _853
  _855 = get_tuple_element _853, `1`

  %% Aliased:
  %%    _855
  _2075 = is_nonempty_list _855
  br _2075, ^2075, ^1498

2075:
  %% Argument types:
  %%    _855 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _855
  _858 = get_hd _855

  %% Argument types:
  %%    
  %% Aliased:
  %%    _858
  _2072 = is_tagged_tuple _858, `4`, `inline_SUITE`
  br _2072, ^2069, ^1498

2069:
  %% Argument types:
  %%    _858 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _858
  _860 = get_tuple_element _858, `2`

  %% Aliased:
  %%    _860
  _2068 = is_nonempty_list _860
  br _2068, ^2068, ^1498

2068:
  %% Argument types:
  %%    _860 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _860
  _863 = get_tl _860

  %% Argument types:
  %%    
  %% Aliased:
  %%    _863
  _2067 = bif:'=:=' _863, `[not_a_list]`
  br _2067, ^2067, ^1498

2067:
  %% Result type:
  %%    'true'
  _239 = make_fun (`'-lists/1-fun-43-'`/1)
  _1502 = new_try_tag `'catch'`
  br _1502, ^2167, ^1501

2167:
  %% inline_SUITE.erl:274
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _239
  _1317 = call (`'-lists/1-lists^filter/1-23-'`/2), `not_a_list`, _239

  %% Aliased:
  %%    _1317
  _1504 = succeeded:body _1317
  br ^1501

1501:
  %% Unique:
  %%    _1502
  _1507 = landingpad `'catch'`, _1502

  %% Aliased:
  %%    _1507
  _1505 = extract _1507, `0`
  br ^1499

1499:
  %% Aliased:
  %%    _1505
  %% Unique:
  %%    _1502
  _240 = catch_end _1502, _1505

  %% Argument types:
  %%    
  %% Aliased:
  %%    _240
  _2063 = is_tagged_tuple _240, `2`, `'EXIT'`
  br _2063, ^2060, ^1510

2060:
  %% Argument types:
  %%    _240 => {''EXIT'', any()}
  %% Aliased:
  %%    _240
  _873 = get_tuple_element _240, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _873
  _2057 = is_tagged_tuple _873, `2`, `function_clause`
  br _2057, ^2054, ^1510

2054:
  %% Argument types:
  %%    _873 => {'function_clause', any()}
  %% Aliased:
  %%    _873
  _875 = get_tuple_element _873, `1`

  %% Aliased:
  %%    _875
  _2053 = is_nonempty_list _875
  br _2053, ^2053, ^1510

2053:
  %% Argument types:
  %%    _875 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _875
  _878 = get_hd _875

  %% Argument types:
  %%    
  %% Aliased:
  %%    _878
  _2050 = is_tagged_tuple _878, `4`, `inline_SUITE`
  br _2050, ^2047, ^1510

2047:
  %% Argument types:
  %%    _878 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _878
  _880 = get_tuple_element _878, `2`

  %% Aliased:
  %%    _880
  _2046 = is_nonempty_list _880
  br _2046, ^2046, ^1510

2046:
  %% Argument types:
  %%    _880 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _880
  _883 = get_tl _880

  %% Argument types:
  %%    
  %% Aliased:
  %%    _883
  _2045 = bif:'=:=' _883, `[not_a_list]`
  br _2045, ^2045, ^1510

2045:
  %% Result type:
  %%    'false'
  _244 = make_fun (`'-lists/1-fun-44-'`/1)
  _1514 = new_try_tag `'catch'`
  br _1514, ^2168, ^1513

2168:
  %% inline_SUITE.erl:276
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _244
  _1322 = call (`'-lists/1-lists^any/1-24-'`/2), `not_a_list`, _244

  %% Aliased:
  %%    _1322
  _1516 = succeeded:body _1322
  br ^1513

1513:
  %% Unique:
  %%    _1514
  _1519 = landingpad `'catch'`, _1514

  %% Aliased:
  %%    _1519
  _1517 = extract _1519, `0`
  br ^1511

1511:
  %% Aliased:
  %%    _1517
  %% Unique:
  %%    _1514
  _245 = catch_end _1514, _1517

  %% Argument types:
  %%    
  %% Aliased:
  %%    _245
  _2041 = is_tagged_tuple _245, `2`, `'EXIT'`
  br _2041, ^2038, ^1522

2038:
  %% Argument types:
  %%    _245 => {''EXIT'', any()}
  %% Aliased:
  %%    _245
  _893 = get_tuple_element _245, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _893
  _2035 = is_tagged_tuple _893, `2`, `function_clause`
  br _2035, ^2032, ^1522

2032:
  %% Argument types:
  %%    _893 => {'function_clause', any()}
  %% Aliased:
  %%    _893
  _895 = get_tuple_element _893, `1`

  %% Aliased:
  %%    _895
  _2031 = is_nonempty_list _895
  br _2031, ^2031, ^1522

2031:
  %% Argument types:
  %%    _895 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _895
  _898 = get_hd _895

  %% Argument types:
  %%    
  %% Aliased:
  %%    _898
  _2028 = is_tagged_tuple _898, `4`, `inline_SUITE`
  br _2028, ^2025, ^1522

2025:
  %% Argument types:
  %%    _898 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _898
  _900 = get_tuple_element _898, `2`

  %% Aliased:
  %%    _900
  _2024 = is_nonempty_list _900
  br _2024, ^2024, ^1522

2024:
  %% Argument types:
  %%    _900 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _900
  _903 = get_tl _900

  %% Argument types:
  %%    
  %% Aliased:
  %%    _903
  _2023 = bif:'=:=' _903, `[not_a_list]`
  br _2023, ^2023, ^1522

2023:
  %% Result type:
  %%    'true'
  _249 = make_fun (`'-lists/1-fun-45-'`/1)
  _1526 = new_try_tag `'catch'`
  br _1526, ^2169, ^1525

2169:
  %% inline_SUITE.erl:278
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _249
  _1327 = call (`'-lists/1-lists^all/1-25-'`/2), `not_a_list`, _249

  %% Aliased:
  %%    _1327
  _1528 = succeeded:body _1327
  br ^1525

1525:
  %% Unique:
  %%    _1526
  _1531 = landingpad `'catch'`, _1526

  %% Aliased:
  %%    _1531
  _1529 = extract _1531, `0`
  br ^1523

1523:
  %% Aliased:
  %%    _1529
  %% Unique:
  %%    _1526
  _250 = catch_end _1526, _1529

  %% Argument types:
  %%    
  %% Aliased:
  %%    _250
  _2019 = is_tagged_tuple _250, `2`, `'EXIT'`
  br _2019, ^2016, ^1534

2016:
  %% Argument types:
  %%    _250 => {''EXIT'', any()}
  %% Aliased:
  %%    _250
  _913 = get_tuple_element _250, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _913
  _2013 = is_tagged_tuple _913, `2`, `function_clause`
  br _2013, ^2010, ^1534

2010:
  %% Argument types:
  %%    _913 => {'function_clause', any()}
  %% Aliased:
  %%    _913
  _915 = get_tuple_element _913, `1`

  %% Aliased:
  %%    _915
  _2009 = is_nonempty_list _915
  br _2009, ^2009, ^1534

2009:
  %% Argument types:
  %%    _915 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _915
  _918 = get_hd _915

  %% Argument types:
  %%    
  %% Aliased:
  %%    _918
  _2006 = is_tagged_tuple _918, `4`, `inline_SUITE`
  br _2006, ^2003, ^1534

2003:
  %% Argument types:
  %%    _918 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _918
  _920 = get_tuple_element _918, `2`

  %% Aliased:
  %%    _920
  _2002 = is_nonempty_list _920
  br _2002, ^2002, ^1534

2002:
  %% Argument types:
  %%    _920 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _920
  _923 = get_tl _920

  %% Argument types:
  %%    
  %% Aliased:
  %%    _923
  _2001 = bif:'=:=' _923, `[not_a_list]`
  br _2001, ^2001, ^1534

2001:
  %% Result type:
  %%    {any(), any()}
  _256 = make_fun (`'-lists/1-fun-46-'`/2)
  _1538 = new_try_tag `'catch'`
  br _1538, ^2170, ^1537

2170:
  %% inline_SUITE.erl:280
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _256
  _1332 = call (`'-lists/1-lists^foldl/2-26-'`/3), `not_a_list`, `acc`, _256

  %% Aliased:
  %%    _1332
  _1540 = succeeded:body _1332
  br ^1537

1537:
  %% Unique:
  %%    _1538
  _1543 = landingpad `'catch'`, _1538

  %% Aliased:
  %%    _1543
  _1541 = extract _1543, `0`
  br ^1535

1535:
  %% Aliased:
  %%    _1541
  %% Unique:
  %%    _1538
  _257 = catch_end _1538, _1541

  %% Argument types:
  %%    
  %% Aliased:
  %%    _257
  _1997 = is_tagged_tuple _257, `2`, `'EXIT'`
  br _1997, ^1994, ^1546

1994:
  %% Argument types:
  %%    _257 => {''EXIT'', any()}
  %% Aliased:
  %%    _257
  _934 = get_tuple_element _257, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _934
  _1991 = is_tagged_tuple _934, `2`, `function_clause`
  br _1991, ^1988, ^1546

1988:
  %% Argument types:
  %%    _934 => {'function_clause', any()}
  %% Aliased:
  %%    _934
  _936 = get_tuple_element _934, `1`

  %% Aliased:
  %%    _936
  _1987 = is_nonempty_list _936
  br _1987, ^1987, ^1546

1987:
  %% Argument types:
  %%    _936 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _936
  _939 = get_hd _936

  %% Argument types:
  %%    
  %% Aliased:
  %%    _939
  _1984 = is_tagged_tuple _939, `4`, `inline_SUITE`
  br _1984, ^1981, ^1546

1981:
  %% Argument types:
  %%    _939 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _939
  _941 = get_tuple_element _939, `2`

  %% Aliased:
  %%    _941
  _1980 = is_nonempty_list _941
  br _1980, ^1980, ^1546

1980:
  %% Argument types:
  %%    _941 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _941
  _944 = get_tl _941

  %% Argument types:
  %%    
  %% Aliased:
  %%    _944
  _1979 = bif:'=:=' _944, `[acc,not_a_list]`
  br _1979, ^1979, ^1546

1979:
  %% Result type:
  %%    {any(), any()}
  _263 = make_fun (`'-lists/1-fun-47-'`/2)
  _1550 = new_try_tag `'catch'`
  br _1550, ^2171, ^1549

2171:
  %% inline_SUITE.erl:282
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _263
  _1337 = call (`'-lists/1-lists^foldr/2-27-'`/3), `not_a_list`, `acc`, _263

  %% Aliased:
  %%    _1337
  _1552 = succeeded:body _1337
  br ^1549

1549:
  %% Unique:
  %%    _1550
  _1555 = landingpad `'catch'`, _1550

  %% Aliased:
  %%    _1555
  _1553 = extract _1555, `0`
  br ^1547

1547:
  %% Aliased:
  %%    _1553
  %% Unique:
  %%    _1550
  _264 = catch_end _1550, _1553

  %% Argument types:
  %%    
  %% Aliased:
  %%    _264
  _1975 = is_tagged_tuple _264, `2`, `'EXIT'`
  br _1975, ^1972, ^1558

1972:
  %% Argument types:
  %%    _264 => {''EXIT'', any()}
  %% Aliased:
  %%    _264
  _955 = get_tuple_element _264, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _955
  _1969 = is_tagged_tuple _955, `2`, `function_clause`
  br _1969, ^1966, ^1558

1966:
  %% Argument types:
  %%    _955 => {'function_clause', any()}
  %% Aliased:
  %%    _955
  _957 = get_tuple_element _955, `1`

  %% Aliased:
  %%    _957
  _1965 = is_nonempty_list _957
  br _1965, ^1965, ^1558

1965:
  %% Argument types:
  %%    _957 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _957
  _960 = get_hd _957

  %% Argument types:
  %%    
  %% Aliased:
  %%    _960
  _1962 = is_tagged_tuple _960, `4`, `inline_SUITE`
  br _1962, ^1959, ^1558

1959:
  %% Argument types:
  %%    _960 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _960
  _962 = get_tuple_element _960, `2`

  %% Aliased:
  %%    _962
  _1958 = is_nonempty_list _962
  br _1958, ^1958, ^1558

1958:
  %% Argument types:
  %%    _962 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _962
  _965 = get_tl _962

  %% Argument types:
  %%    
  %% Aliased:
  %%    _965
  _1957 = bif:'=:=' _965, `[acc,not_a_list]`
  br _1957, ^1957, ^1558

1957:
  %% Result type:
  %%    {any(), any()}
  _270 = make_fun (`'-lists/1-fun-48-'`/2)
  _1562 = new_try_tag `'catch'`
  br _1562, ^2172, ^1561

2172:
  %% inline_SUITE.erl:284
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _270
  _1345 = call (`'-lists/1-lists^mapfoldl/2-28-'`/3), `not_a_list`, `acc`, _270

  %% Aliased:
  %%    _1345
  _1564 = succeeded:body _1345
  br ^1561

1561:
  %% Unique:
  %%    _1562
  _1567 = landingpad `'catch'`, _1562

  %% Aliased:
  %%    _1567
  _1565 = extract _1567, `0`
  br ^1559

1559:
  %% Aliased:
  %%    _1565
  %% Unique:
  %%    _1562
  _271 = catch_end _1562, _1565

  %% Argument types:
  %%    
  %% Aliased:
  %%    _271
  _1953 = is_tagged_tuple _271, `2`, `'EXIT'`
  br _1953, ^1950, ^1570

1950:
  %% Argument types:
  %%    _271 => {''EXIT'', any()}
  %% Aliased:
  %%    _271
  _982 = get_tuple_element _271, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _982
  _1947 = is_tagged_tuple _982, `2`, `function_clause`
  br _1947, ^1944, ^1570

1944:
  %% Argument types:
  %%    _982 => {'function_clause', any()}
  %% Aliased:
  %%    _982
  _984 = get_tuple_element _982, `1`

  %% Aliased:
  %%    _984
  _1943 = is_nonempty_list _984
  br _1943, ^1943, ^1570

1943:
  %% Argument types:
  %%    _984 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _984
  _987 = get_hd _984

  %% Argument types:
  %%    
  %% Aliased:
  %%    _987
  _1940 = is_tagged_tuple _987, `4`, `inline_SUITE`
  br _1940, ^1937, ^1570

1937:
  %% Argument types:
  %%    _987 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _987
  _989 = get_tuple_element _987, `2`

  %% Aliased:
  %%    _989
  _1936 = is_nonempty_list _989
  br _1936, ^1936, ^1570

1936:
  %% Argument types:
  %%    _989 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _989
  _992 = get_tl _989

  %% Argument types:
  %%    
  %% Aliased:
  %%    _992
  _1935 = bif:'=:=' _992, `[acc,not_a_list]`
  br _1935, ^1935, ^1570

1935:
  %% Result type:
  %%    {any(), any()}
  _277 = make_fun (`'-lists/1-fun-49-'`/2)
  _1574 = new_try_tag `'catch'`
  br _1574, ^2173, ^1573

2173:
  %% inline_SUITE.erl:286
  %% Result type:
  %%    none()
  %% Aliased:
  %%    _277
  _1353 = call (`'-lists/1-lists^mapfoldr/2-29-'`/3), `not_a_list`, `acc`, _277

  %% Aliased:
  %%    _1353
  _1576 = succeeded:body _1353
  br ^1573

1573:
  %% Unique:
  %%    _1574
  _1579 = landingpad `'catch'`, _1574

  %% Aliased:
  %%    _1579
  _1577 = extract _1579, `0`
  br ^1571

1571:
  %% Aliased:
  %%    _1577
  %% Unique:
  %%    _1574
  _278 = catch_end _1574, _1577

  %% Argument types:
  %%    
  %% Aliased:
  %%    _278
  _1931 = is_tagged_tuple _278, `2`, `'EXIT'`
  br _1931, ^1928, ^1582

1928:
  %% Argument types:
  %%    _278 => {''EXIT'', any()}
  %% Aliased:
  %%    _278
  _1009 = get_tuple_element _278, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1009
  _1925 = is_tagged_tuple _1009, `2`, `function_clause`
  br _1925, ^1922, ^1582

1922:
  %% Argument types:
  %%    _1009 => {'function_clause', any()}
  %% Aliased:
  %%    _1009
  _1011 = get_tuple_element _1009, `1`

  %% Aliased:
  %%    _1011
  _1921 = is_nonempty_list _1011
  br _1921, ^1921, ^1582

1921:
  %% Argument types:
  %%    _1011 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1011
  _1014 = get_hd _1011

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1014
  _1918 = is_tagged_tuple _1014, `4`, `inline_SUITE`
  br _1918, ^1915, ^1582

1915:
  %% Argument types:
  %%    _1014 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1014
  _1016 = get_tuple_element _1014, `2`

  %% Aliased:
  %%    _1016
  _1914 = is_nonempty_list _1016
  br _1914, ^1914, ^1582

1914:
  %% Argument types:
  %%    _1016 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1016
  _1019 = get_tl _1016

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1019
  _1913 = bif:'=:=' _1019, `[acc,not_a_list]`
  br _1913, ^2484, ^1582

2484:
  br ^2494

2494:
  _1586 = new_try_tag `'catch'`
  br _1586, ^1584, ^1585

1584:
  %% inline_SUITE.erl:289
  %% Result type:
  %%    none()
  _1357 = call (`'-lists/1-lists^map/1-30-'`/1), `[]`

  %% Aliased:
  %%    _1357
  _1588 = succeeded:body _1357
  br ^1585

1585:
  %% Unique:
  %%    _1586
  _1591 = landingpad `'catch'`, _1586

  %% Aliased:
  %%    _1591
  _1589 = extract _1591, `0`
  br ^1583

1583:
  %% Aliased:
  %%    _1589
  %% Unique:
  %%    _1586
  _280 = catch_end _1586, _1589

  %% Argument types:
  %%    
  %% Aliased:
  %%    _280
  _1909 = is_tagged_tuple _280, `2`, `'EXIT'`
  br _1909, ^1906, ^1594

1906:
  %% Argument types:
  %%    _280 => {''EXIT'', any()}
  %% Aliased:
  %%    _280
  _1027 = get_tuple_element _280, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1027
  _1903 = is_tagged_tuple _1027, `2`, `function_clause`
  br _1903, ^1900, ^1594

1900:
  %% Argument types:
  %%    _1027 => {'function_clause', any()}
  %% Aliased:
  %%    _1027
  _1029 = get_tuple_element _1027, `1`

  %% Aliased:
  %%    _1029
  _1899 = is_nonempty_list _1029
  br _1899, ^1899, ^1594

1899:
  %% Argument types:
  %%    _1029 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1029
  _1032 = get_hd _1029

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1032
  _1896 = is_tagged_tuple _1032, `4`, `inline_SUITE`
  br _1896, ^1893, ^1594

1893:
  %% Argument types:
  %%    _1032 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1032
  _1034 = get_tuple_element _1032, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1034
  _1892 = bif:'=:=' _1034, `[not_a_function,[]]`
  br _1892, ^2485, ^1594

2485:
  br ^2495

2495:
  _1598 = new_try_tag `'catch'`
  br _1598, ^1596, ^1597

1596:
  %% inline_SUITE.erl:291
  %% Result type:
  %%    none()
  _1361 = call (`'-lists/1-lists^flatmap/1-31-'`/1), `[]`

  %% Aliased:
  %%    _1361
  _1600 = succeeded:body _1361
  br ^1597

1597:
  %% Unique:
  %%    _1598
  _1603 = landingpad `'catch'`, _1598

  %% Aliased:
  %%    _1603
  _1601 = extract _1603, `0`
  br ^1595

1595:
  %% Aliased:
  %%    _1601
  %% Unique:
  %%    _1598
  _282 = catch_end _1598, _1601

  %% Argument types:
  %%    
  %% Aliased:
  %%    _282
  _1888 = is_tagged_tuple _282, `2`, `'EXIT'`
  br _1888, ^1885, ^1606

1885:
  %% Argument types:
  %%    _282 => {''EXIT'', any()}
  %% Aliased:
  %%    _282
  _1043 = get_tuple_element _282, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1043
  _1882 = is_tagged_tuple _1043, `2`, `function_clause`
  br _1882, ^1879, ^1606

1879:
  %% Argument types:
  %%    _1043 => {'function_clause', any()}
  %% Aliased:
  %%    _1043
  _1045 = get_tuple_element _1043, `1`

  %% Aliased:
  %%    _1045
  _1878 = is_nonempty_list _1045
  br _1878, ^1878, ^1606

1878:
  %% Argument types:
  %%    _1045 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1045
  _1048 = get_hd _1045

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1048
  _1875 = is_tagged_tuple _1048, `4`, `inline_SUITE`
  br _1875, ^1872, ^1606

1872:
  %% Argument types:
  %%    _1048 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1048
  _1050 = get_tuple_element _1048, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1050
  _1871 = bif:'=:=' _1050, `[not_a_function,[]]`
  br _1871, ^2486, ^1606

2486:
  br ^2496

2496:
  _1610 = new_try_tag `'catch'`
  br _1610, ^1608, ^1609

1608:
  %% inline_SUITE.erl:293
  %% Result type:
  %%    none()
  _1365 = call (`'-lists/1-lists^foreach/1-32-'`/1), `[]`

  %% Aliased:
  %%    _1365
  _1612 = succeeded:body _1365
  br ^1609

1609:
  %% Unique:
  %%    _1610
  _1615 = landingpad `'catch'`, _1610

  %% Aliased:
  %%    _1615
  _1613 = extract _1615, `0`
  br ^1607

1607:
  %% Aliased:
  %%    _1613
  %% Unique:
  %%    _1610
  _284 = catch_end _1610, _1613

  %% Argument types:
  %%    
  %% Aliased:
  %%    _284
  _1867 = is_tagged_tuple _284, `2`, `'EXIT'`
  br _1867, ^1864, ^1618

1864:
  %% Argument types:
  %%    _284 => {''EXIT'', any()}
  %% Aliased:
  %%    _284
  _1059 = get_tuple_element _284, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1059
  _1861 = is_tagged_tuple _1059, `2`, `function_clause`
  br _1861, ^1858, ^1618

1858:
  %% Argument types:
  %%    _1059 => {'function_clause', any()}
  %% Aliased:
  %%    _1059
  _1061 = get_tuple_element _1059, `1`

  %% Aliased:
  %%    _1061
  _1857 = is_nonempty_list _1061
  br _1857, ^1857, ^1618

1857:
  %% Argument types:
  %%    _1061 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1061
  _1064 = get_hd _1061

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1064
  _1854 = is_tagged_tuple _1064, `4`, `inline_SUITE`
  br _1854, ^1851, ^1618

1851:
  %% Argument types:
  %%    _1064 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1064
  _1066 = get_tuple_element _1064, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1066
  _1850 = bif:'=:=' _1066, `[not_a_function,[]]`
  br _1850, ^2487, ^1618

2487:
  br ^2497

2497:
  _1622 = new_try_tag `'catch'`
  br _1622, ^1620, ^1621

1620:
  %% inline_SUITE.erl:295
  %% Result type:
  %%    none()
  _1369 = call (`'-lists/1-lists^filter/1-33-'`/1), `[]`

  %% Aliased:
  %%    _1369
  _1624 = succeeded:body _1369
  br ^1621

1621:
  %% Unique:
  %%    _1622
  _1627 = landingpad `'catch'`, _1622

  %% Aliased:
  %%    _1627
  _1625 = extract _1627, `0`
  br ^1619

1619:
  %% Aliased:
  %%    _1625
  %% Unique:
  %%    _1622
  _286 = catch_end _1622, _1625

  %% Argument types:
  %%    
  %% Aliased:
  %%    _286
  _1846 = is_tagged_tuple _286, `2`, `'EXIT'`
  br _1846, ^1843, ^1630

1843:
  %% Argument types:
  %%    _286 => {''EXIT'', any()}
  %% Aliased:
  %%    _286
  _1075 = get_tuple_element _286, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1075
  _1840 = is_tagged_tuple _1075, `2`, `function_clause`
  br _1840, ^1837, ^1630

1837:
  %% Argument types:
  %%    _1075 => {'function_clause', any()}
  %% Aliased:
  %%    _1075
  _1077 = get_tuple_element _1075, `1`

  %% Aliased:
  %%    _1077
  _1836 = is_nonempty_list _1077
  br _1836, ^1836, ^1630

1836:
  %% Argument types:
  %%    _1077 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1077
  _1080 = get_hd _1077

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1080
  _1833 = is_tagged_tuple _1080, `4`, `inline_SUITE`
  br _1833, ^1830, ^1630

1830:
  %% Argument types:
  %%    _1080 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1080
  _1082 = get_tuple_element _1080, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1082
  _1829 = bif:'=:=' _1082, `[not_a_function,[]]`
  br _1829, ^2488, ^1630

2488:
  br ^2498

2498:
  _1634 = new_try_tag `'catch'`
  br _1634, ^1632, ^1633

1632:
  %% inline_SUITE.erl:297
  %% Result type:
  %%    none()
  _1373 = call (`'-lists/1-lists^any/1-34-'`/1), `[]`

  %% Aliased:
  %%    _1373
  _1636 = succeeded:body _1373
  br ^1633

1633:
  %% Unique:
  %%    _1634
  _1639 = landingpad `'catch'`, _1634

  %% Aliased:
  %%    _1639
  _1637 = extract _1639, `0`
  br ^1631

1631:
  %% Aliased:
  %%    _1637
  %% Unique:
  %%    _1634
  _288 = catch_end _1634, _1637

  %% Argument types:
  %%    
  %% Aliased:
  %%    _288
  _1825 = is_tagged_tuple _288, `2`, `'EXIT'`
  br _1825, ^1822, ^1642

1822:
  %% Argument types:
  %%    _288 => {''EXIT'', any()}
  %% Aliased:
  %%    _288
  _1091 = get_tuple_element _288, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1091
  _1819 = is_tagged_tuple _1091, `2`, `function_clause`
  br _1819, ^1816, ^1642

1816:
  %% Argument types:
  %%    _1091 => {'function_clause', any()}
  %% Aliased:
  %%    _1091
  _1093 = get_tuple_element _1091, `1`

  %% Aliased:
  %%    _1093
  _1815 = is_nonempty_list _1093
  br _1815, ^1815, ^1642

1815:
  %% Argument types:
  %%    _1093 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1093
  _1096 = get_hd _1093

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1096
  _1812 = is_tagged_tuple _1096, `4`, `inline_SUITE`
  br _1812, ^1809, ^1642

1809:
  %% Argument types:
  %%    _1096 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1096
  _1098 = get_tuple_element _1096, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1098
  _1808 = bif:'=:=' _1098, `[not_a_function,[]]`
  br _1808, ^2489, ^1642

2489:
  br ^2499

2499:
  _1646 = new_try_tag `'catch'`
  br _1646, ^1644, ^1645

1644:
  %% inline_SUITE.erl:299
  %% Result type:
  %%    none()
  _1377 = call (`'-lists/1-lists^all/1-35-'`/1), `[]`

  %% Aliased:
  %%    _1377
  _1648 = succeeded:body _1377
  br ^1645

1645:
  %% Unique:
  %%    _1646
  _1651 = landingpad `'catch'`, _1646

  %% Aliased:
  %%    _1651
  _1649 = extract _1651, `0`
  br ^1643

1643:
  %% Aliased:
  %%    _1649
  %% Unique:
  %%    _1646
  _290 = catch_end _1646, _1649

  %% Argument types:
  %%    
  %% Aliased:
  %%    _290
  _1804 = is_tagged_tuple _290, `2`, `'EXIT'`
  br _1804, ^1801, ^1654

1801:
  %% Argument types:
  %%    _290 => {''EXIT'', any()}
  %% Aliased:
  %%    _290
  _1107 = get_tuple_element _290, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1107
  _1798 = is_tagged_tuple _1107, `2`, `function_clause`
  br _1798, ^1795, ^1654

1795:
  %% Argument types:
  %%    _1107 => {'function_clause', any()}
  %% Aliased:
  %%    _1107
  _1109 = get_tuple_element _1107, `1`

  %% Aliased:
  %%    _1109
  _1794 = is_nonempty_list _1109
  br _1794, ^1794, ^1654

1794:
  %% Argument types:
  %%    _1109 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1109
  _1112 = get_hd _1109

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1112
  _1791 = is_tagged_tuple _1112, `4`, `inline_SUITE`
  br _1791, ^1788, ^1654

1788:
  %% Argument types:
  %%    _1112 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1112
  _1114 = get_tuple_element _1112, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1114
  _1787 = bif:'=:=' _1114, `[not_a_function,[]]`
  br _1787, ^2490, ^1654

2490:
  br ^2500

2500:
  _1658 = new_try_tag `'catch'`
  br _1658, ^1656, ^1657

1656:
  %% inline_SUITE.erl:301
  %% Result type:
  %%    none()
  _1381 = call (`'-lists/1-lists^foldl/2-36-'`/2), `[]`, `acc`

  %% Aliased:
  %%    _1381
  _1660 = succeeded:body _1381
  br ^1657

1657:
  %% Unique:
  %%    _1658
  _1663 = landingpad `'catch'`, _1658

  %% Aliased:
  %%    _1663
  _1661 = extract _1663, `0`
  br ^1655

1655:
  %% Aliased:
  %%    _1661
  %% Unique:
  %%    _1658
  _292 = catch_end _1658, _1661

  %% Argument types:
  %%    
  %% Aliased:
  %%    _292
  _1783 = is_tagged_tuple _292, `2`, `'EXIT'`
  br _1783, ^1780, ^1666

1780:
  %% Argument types:
  %%    _292 => {''EXIT'', any()}
  %% Aliased:
  %%    _292
  _1125 = get_tuple_element _292, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1125
  _1777 = is_tagged_tuple _1125, `2`, `function_clause`
  br _1777, ^1774, ^1666

1774:
  %% Argument types:
  %%    _1125 => {'function_clause', any()}
  %% Aliased:
  %%    _1125
  _1127 = get_tuple_element _1125, `1`

  %% Aliased:
  %%    _1127
  _1773 = is_nonempty_list _1127
  br _1773, ^1773, ^1666

1773:
  %% Argument types:
  %%    _1127 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1127
  _1130 = get_hd _1127

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1130
  _1770 = is_tagged_tuple _1130, `4`, `inline_SUITE`
  br _1770, ^1767, ^1666

1767:
  %% Argument types:
  %%    _1130 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1130
  _1132 = get_tuple_element _1130, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1132
  _1766 = bif:'=:=' _1132, `[not_a_function,acc,[]]`
  br _1766, ^2491, ^1666

2491:
  br ^2501

2501:
  _1670 = new_try_tag `'catch'`
  br _1670, ^1668, ^1669

1668:
  %% inline_SUITE.erl:303
  %% Result type:
  %%    none()
  _1386 = call (`'-lists/1-lists^foldr/2-37-'`/2), `[]`, `acc`

  %% Aliased:
  %%    _1386
  _1672 = succeeded:body _1386
  br ^1669

1669:
  %% Unique:
  %%    _1670
  _1675 = landingpad `'catch'`, _1670

  %% Aliased:
  %%    _1675
  _1673 = extract _1675, `0`
  br ^1667

1667:
  %% Aliased:
  %%    _1673
  %% Unique:
  %%    _1670
  _294 = catch_end _1670, _1673

  %% Argument types:
  %%    
  %% Aliased:
  %%    _294
  _1762 = is_tagged_tuple _294, `2`, `'EXIT'`
  br _1762, ^1759, ^1678

1759:
  %% Argument types:
  %%    _294 => {''EXIT'', any()}
  %% Aliased:
  %%    _294
  _1142 = get_tuple_element _294, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1142
  _1756 = is_tagged_tuple _1142, `2`, `function_clause`
  br _1756, ^1753, ^1678

1753:
  %% Argument types:
  %%    _1142 => {'function_clause', any()}
  %% Aliased:
  %%    _1142
  _1144 = get_tuple_element _1142, `1`

  %% Aliased:
  %%    _1144
  _1752 = is_nonempty_list _1144
  br _1752, ^1752, ^1678

1752:
  %% Argument types:
  %%    _1144 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1144
  _1147 = get_hd _1144

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1147
  _1749 = is_tagged_tuple _1147, `4`, `inline_SUITE`
  br _1749, ^1746, ^1678

1746:
  %% Argument types:
  %%    _1147 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1147
  _1149 = get_tuple_element _1147, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1149
  _1745 = bif:'=:=' _1149, `[not_a_function,acc,[]]`
  br _1745, ^2492, ^1678

2492:
  br ^2502

2502:
  _1682 = new_try_tag `'catch'`
  br _1682, ^1680, ^1681

1680:
  %% inline_SUITE.erl:305
  %% Result type:
  %%    none()
  _1390 = call (`'-lists/1-lists^mapfoldl/2-38-'`/2), `[]`, `acc`

  %% Aliased:
  %%    _1390
  _1684 = succeeded:body _1390
  br ^1681

1681:
  %% Unique:
  %%    _1682
  _1687 = landingpad `'catch'`, _1682

  %% Aliased:
  %%    _1687
  _1685 = extract _1687, `0`
  br ^1679

1679:
  %% Aliased:
  %%    _1685
  %% Unique:
  %%    _1682
  _296 = catch_end _1682, _1685

  %% Argument types:
  %%    
  %% Aliased:
  %%    _296
  _1741 = is_tagged_tuple _296, `2`, `'EXIT'`
  br _1741, ^1738, ^1690

1738:
  %% Argument types:
  %%    _296 => {''EXIT'', any()}
  %% Aliased:
  %%    _296
  _1159 = get_tuple_element _296, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1159
  _1735 = is_tagged_tuple _1159, `2`, `function_clause`
  br _1735, ^1732, ^1690

1732:
  %% Argument types:
  %%    _1159 => {'function_clause', any()}
  %% Aliased:
  %%    _1159
  _1161 = get_tuple_element _1159, `1`

  %% Aliased:
  %%    _1161
  _1731 = is_nonempty_list _1161
  br _1731, ^1731, ^1690

1731:
  %% Argument types:
  %%    _1161 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1161
  _1164 = get_hd _1161

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1164
  _1728 = is_tagged_tuple _1164, `4`, `inline_SUITE`
  br _1728, ^1725, ^1690

1725:
  %% Argument types:
  %%    _1164 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1164
  _1166 = get_tuple_element _1164, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1166
  _1724 = bif:'=:=' _1166, `[not_a_function,acc,[]]`
  br _1724, ^2493, ^1690

2493:
  br ^2503

2503:
  _1694 = new_try_tag `'catch'`
  br _1694, ^1692, ^1693

1692:
  %% inline_SUITE.erl:307
  %% Result type:
  %%    none()
  _1395 = call (`'-lists/1-lists^mapfoldr/2-39-'`/2), `[]`, `acc`

  %% Aliased:
  %%    _1395
  _1696 = succeeded:body _1395
  br ^1693

1693:
  %% Unique:
  %%    _1694
  _1699 = landingpad `'catch'`, _1694

  %% Aliased:
  %%    _1699
  _1697 = extract _1699, `0`
  br ^1691

1691:
  %% Aliased:
  %%    _1697
  %% Unique:
  %%    _1694
  _298 = catch_end _1694, _1697

  %% Argument types:
  %%    
  %% Aliased:
  %%    _298
  _1720 = is_tagged_tuple _298, `2`, `'EXIT'`
  br _1720, ^1717, ^1702

1717:
  %% Argument types:
  %%    _298 => {''EXIT'', any()}
  %% Aliased:
  %%    _298
  _1179 = get_tuple_element _298, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1179
  _1714 = is_tagged_tuple _1179, `2`, `function_clause`
  br _1714, ^1711, ^1702

1711:
  %% Argument types:
  %%    _1179 => {'function_clause', any()}
  %% Aliased:
  %%    _1179
  _1181 = get_tuple_element _1179, `1`

  %% Aliased:
  %%    _1181
  _1710 = is_nonempty_list _1181
  br _1710, ^1710, ^1702

1710:
  %% Argument types:
  %%    _1181 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _1181
  _1184 = get_hd _1181

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1184
  _1707 = is_tagged_tuple _1184, `4`, `inline_SUITE`
  br _1707, ^1704, ^1702

1704:
  %% Argument types:
  %%    _1184 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _1184
  _1186 = get_tuple_element _1184, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1186
  _1703 = bif:'=:=' _1186, `[not_a_function,acc,[]]`
  br _1703, ^1703, ^1702

1703:
  %% Result type:
  %%    'ok'
  ret `ok`

1702:
  %% inline_SUITE.erl:306
  %% Aliased:
  %%    _298
  _1396 = match_fail `badmatch`, _298

  %% Unique:
  %%    _1396
  _1723 = succeeded:body _1396
  br ^1

1690:
  %% inline_SUITE.erl:304
  %% Aliased:
  %%    _296
  _1397 = match_fail `badmatch`, _296

  %% Unique:
  %%    _1397
  _1744 = succeeded:body _1397
  br ^1

1678:
  %% inline_SUITE.erl:302
  %% Aliased:
  %%    _294
  _1398 = match_fail `badmatch`, _294

  %% Unique:
  %%    _1398
  _1765 = succeeded:body _1398
  br ^1

1666:
  %% inline_SUITE.erl:300
  %% Aliased:
  %%    _292
  _1399 = match_fail `badmatch`, _292

  %% Unique:
  %%    _1399
  _1786 = succeeded:body _1399
  br ^1

1654:
  %% inline_SUITE.erl:298
  %% Aliased:
  %%    _290
  _1400 = match_fail `badmatch`, _290

  %% Unique:
  %%    _1400
  _1807 = succeeded:body _1400
  br ^1

1642:
  %% inline_SUITE.erl:296
  %% Aliased:
  %%    _288
  _1401 = match_fail `badmatch`, _288

  %% Unique:
  %%    _1401
  _1828 = succeeded:body _1401
  br ^1

1630:
  %% inline_SUITE.erl:294
  %% Aliased:
  %%    _286
  _1402 = match_fail `badmatch`, _286

  %% Unique:
  %%    _1402
  _1849 = succeeded:body _1402
  br ^1

1618:
  %% inline_SUITE.erl:292
  %% Aliased:
  %%    _284
  _1403 = match_fail `badmatch`, _284

  %% Unique:
  %%    _1403
  _1870 = succeeded:body _1403
  br ^1

1606:
  %% inline_SUITE.erl:290
  %% Aliased:
  %%    _282
  _1404 = match_fail `badmatch`, _282

  %% Unique:
  %%    _1404
  _1891 = succeeded:body _1404
  br ^1

1594:
  %% inline_SUITE.erl:288
  %% Aliased:
  %%    _280
  _1405 = match_fail `badmatch`, _280

  %% Unique:
  %%    _1405
  _1912 = succeeded:body _1405
  br ^1

1582:
  %% inline_SUITE.erl:285
  %% Aliased:
  %%    _278
  _1406 = match_fail `badmatch`, _278

  %% Unique:
  %%    _1406
  _1934 = succeeded:body _1406
  br ^1

1570:
  %% inline_SUITE.erl:283
  %% Aliased:
  %%    _271
  _1407 = match_fail `badmatch`, _271

  %% Unique:
  %%    _1407
  _1956 = succeeded:body _1407
  br ^1

1558:
  %% inline_SUITE.erl:281
  %% Aliased:
  %%    _264
  _1408 = match_fail `badmatch`, _264

  %% Unique:
  %%    _1408
  _1978 = succeeded:body _1408
  br ^1

1546:
  %% inline_SUITE.erl:279
  %% Aliased:
  %%    _257
  _1409 = match_fail `badmatch`, _257

  %% Unique:
  %%    _1409
  _2000 = succeeded:body _1409
  br ^1

1534:
  %% inline_SUITE.erl:277
  %% Aliased:
  %%    _250
  _1410 = match_fail `badmatch`, _250

  %% Unique:
  %%    _1410
  _2022 = succeeded:body _1410
  br ^1

1522:
  %% inline_SUITE.erl:275
  %% Aliased:
  %%    _245
  _1411 = match_fail `badmatch`, _245

  %% Unique:
  %%    _1411
  _2044 = succeeded:body _1411
  br ^1

1510:
  %% inline_SUITE.erl:273
  %% Aliased:
  %%    _240
  _1412 = match_fail `badmatch`, _240

  %% Unique:
  %%    _1412
  _2066 = succeeded:body _1412
  br ^1

1498:
  %% inline_SUITE.erl:271
  %% Aliased:
  %%    _235
  _1413 = match_fail `badmatch`, _235

  %% Unique:
  %%    _1413
  _2088 = succeeded:body _1413
  br ^1

1486:
  %% inline_SUITE.erl:269
  %% Aliased:
  %%    _230
  _1414 = match_fail `badmatch`, _230

  %% Unique:
  %%    _1414
  _2110 = succeeded:body _1414
  br ^1

1474:
  %% inline_SUITE.erl:267
  %% Aliased:
  %%    _225
  _1415 = match_fail `badmatch`, _225

  %% Unique:
  %%    _1415
  _2132 = succeeded:body _1415
  br ^1

1419:
  %% inline_SUITE.erl:190
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-lists/1-',1}}
  _1416 = match_fail `function_clause`, _0

  %% Unique:
  %%    _1416
  _2133 = succeeded:body _1416
  br ^1

1:
  _1417 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1417
}

%% inline_SUITE.erl:311
%% Counter = 12
%% bs_ensure_opt: true
function `inline_SUITE`:`my_apply`(_0, _1, _2, _3) {
0:
  %% inline_SUITE.erl:312
  %% Aliased:
  %%    _3
  _6 = call (`erlang`:`put`/2), `inline_SUITE`, _3

  %% Aliased:
  %%    _6
  _10 = succeeded:body _6
  br _10, ^10, ^1

10:
  %% inline_SUITE.erl:313
  %% Aliased:
  %%    _0, 
  %%    _1, 
  %%    _2
  Res = call (`erlang`:`apply`/3), _0, _1, _2

  %% Aliased:
  %%    Res
  _11 = succeeded:body Res
  br _11, ^11, ^1

11:
  %% inline_SUITE.erl:314
  %% Argument types:
  %%    
  _5 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _5, 
  %%    Res
  _7 = put_tuple Res, _5
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _7
  ret _7

1:
  _8 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _8
}

%% inline_SUITE.erl:316
%% Counter = 77
%% bs_ensure_opt: true
function `inline_SUITE`:`really_inlined`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _23 = bif:is_list _0
  br _23, ^75, ^22

75:
  br ^76

76:
  _27 = new_try_tag `'catch'`
  br _27, ^25, ^26

25:
  %% inline_SUITE.erl:319
  %% Result type:
  %%    none()
  _17 = call (`fail_me_now`/0)

  %% Aliased:
  %%    _17
  _29 = succeeded:body _17
  br ^26

26:
  %% Unique:
  %%    _27
  _32 = landingpad `'catch'`, _27

  %% Aliased:
  %%    _32
  _30 = extract _32, `0`
  br ^24

24:
  %% Aliased:
  %%    _30
  %% Unique:
  %%    _27
  _1 = catch_end _27, _30

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _55 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _55, ^52, ^35

52:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _6 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _6
  _49 = is_tagged_tuple _6, `2`, `badarg`
  br _49, ^46, ^35

46:
  %% Argument types:
  %%    _6 => {'badarg', any()}
  %% Aliased:
  %%    _6
  _8 = get_tuple_element _6, `1`

  %% Aliased:
  %%    _8
  _45 = is_nonempty_list _8
  br _45, ^45, ^35

45:
  %% Argument types:
  %%    _8 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _8
  _11 = get_hd _8

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  _42 = is_tagged_tuple _11, `4`, `inline_SUITE`
  br _42, ^39, ^35

39:
  %% Argument types:
  %%    _11 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _11
  _14 = get_tuple_element _11, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _38 = bif:'=:=' _14, `fail_me_now`
  br _38, ^37, ^35

37:
  %% Argument types:
  %%    _11 => {'inline_SUITE', 'fail_me_now', any(), any()}
  %% Aliased:
  %%    _11
  _13 = get_tuple_element _11, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _13
  _36 = bif:'=:=' _13, `[]`
  br _36, ^36, ^35

36:
  %% Result type:
  %%    'ok'
  ret `ok`

35:
  %% inline_SUITE.erl:318
  %% Aliased:
  %%    _1
  _18 = match_fail `badmatch`, _1

  %% Unique:
  %%    _18
  _58 = succeeded:body _18
  br ^1

22:
  %% inline_SUITE.erl:316
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-really_inlined/1-',1}}
  _19 = match_fail `function_clause`, _0

  %% Unique:
  %%    _19
  _59 = succeeded:body _19
  br ^1

1:
  _20 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _20
}

%% inline_SUITE.erl:322
%% Counter = 12
%% bs_ensure_opt: true
function `inline_SUITE`:`fail_me_now`() {
0:
  %% inline_SUITE.erl:323
  %% Result type:
  %%    'badarg'
  _2 = call (`foo`/1), `bar`

  %% Unique:
  %%    _2
  _6 = succeeded:body _2
  br _6, ^10, ^1

10:
  %% inline_SUITE.erl:330
  _3 = call (`erlang`:`error`/2), `badarg`, `[]`

  %% Aliased:
  %%    _3
  _9 = succeeded:body _3
  br ^1

1:
  _4 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _4
}

%% inline_SUITE.erl:325
%% Counter = 4
%% bs_ensure_opt: true
function `inline_SUITE`:`foo`(_0) {
0:
  %% Result type:
  %%    'badarg'
  ret `badarg`
}

%% inline_SUITE.erl:329
%% Counter = 9
%% bs_ensure_opt: true
function `inline_SUITE`:`badarg`(_0, _1) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _8 = bif:'=:=' _0, `badarg`
  br _8, ^7, ^5

7:
  %% inline_SUITE.erl:330
  %% Aliased:
  %%    _1
  _2 = call (`erlang`:`error`/2), `badarg`, _1

  %% Aliased:
  %%    _2
  _6 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3

5:
  %% Aliased:
  %%    _0
  ret _0
}

%% inline_SUITE.erl:334
%% Counter = 76
%% bs_ensure_opt: true
function `inline_SUITE`:`otp_7223`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _24 = bif:is_list _0
  br _24, ^74, ^23

74:
  br ^75

75:
  _28 = new_try_tag `'catch'`
  br _28, ^26, ^27

26:
  %% inline_SUITE.erl:343
  %% Anno: #{inlined => {'-inlined-otp_7223_2/1-',1}}
  _18 = match_fail `function_clause`, `1`

  %% Unique:
  %%    _18
  _30 = succeeded:body _18
  br ^27

27:
  %% Unique:
  %%    _28
  _33 = landingpad `'catch'`, _28

  %% Aliased:
  %%    _33
  _31 = extract _33, `0`
  br ^25

25:
  %% Aliased:
  %%    _31
  %% Unique:
  %%    _28
  _1 = catch_end _28, _31

  %% Argument types:
  %%    
  %% Aliased:
  %%    _1
  _54 = is_tagged_tuple _1, `2`, `'EXIT'`
  br _54, ^51, ^36

51:
  %% Argument types:
  %%    _1 => {''EXIT'', any()}
  %% Aliased:
  %%    _1
  _7 = get_tuple_element _1, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _7
  _48 = is_tagged_tuple _7, `2`, `function_clause`
  br _48, ^45, ^36

45:
  %% Argument types:
  %%    _7 => {'function_clause', any()}
  %% Aliased:
  %%    _7
  _9 = get_tuple_element _7, `1`

  %% Aliased:
  %%    _9
  _44 = is_nonempty_list _9
  br _44, ^44, ^36

44:
  %% Argument types:
  %%    _9 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _9
  _12 = get_hd _9

  %% Argument types:
  %%    
  %% Aliased:
  %%    _12
  _41 = is_tagged_tuple _12, `4`, `inline_SUITE`
  br _41, ^38, ^36

38:
  %% Argument types:
  %%    _12 => {'inline_SUITE', any(), any(), any()}
  %% Aliased:
  %%    _12
  _14 = get_tuple_element _12, `2`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _14
  _37 = bif:'=:=' _14, `[1]`
  br _37, ^37, ^36

37:
  %% Result type:
  %%    'ok'
  ret `ok`

36:
  %% inline_SUITE.erl:335
  %% Aliased:
  %%    _1
  _19 = match_fail `badmatch`, _1

  %% Unique:
  %%    _19
  _57 = succeeded:body _19
  br ^1

23:
  %% inline_SUITE.erl:334
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_7223/1-',1}}
  _20 = match_fail `function_clause`, _0

  %% Unique:
  %%    _20
  _58 = succeeded:body _20
  br ^1

1:
  _21 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _21
}

%% inline_SUITE.erl:339
%% Counter = 8
%% bs_ensure_opt: true
function `inline_SUITE`:`otp_7223_1`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _6 = bif:'=:=' _0, `{a}`
  br _6, ^6, ^5

6:
  %% Result type:
  %%    1
  ret `1`

5:
  %% inline_SUITE.erl:343
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_7223_2/1-',1}}
  _2 = match_fail `function_clause`, _0

  %% Unique:
  %%    _2
  _7 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% inline_SUITE.erl:343
%% Counter = 8
%% bs_ensure_opt: true
function `inline_SUITE`:`otp_7223_2`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _6 = bif:'=:=' _0, `{a}`
  br _6, ^6, ^5

6:
  %% Result type:
  %%    1
  ret `1`

5:
  %% inline_SUITE.erl:343
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-otp_7223_2/1-',1}}
  _2 = match_fail `function_clause`, _0

  %% Unique:
  %%    _2
  _7 = succeeded:body _2
  br ^1

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% inline_SUITE.erl:346
%% Counter = 32
%% bs_ensure_opt: true
function `inline_SUITE`:`coverage`(_0) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _0
  _17 = bif:is_list _0
  br _17, ^17, ^16

17:
  %% inline_SUITE.erl:348
  %% Aliased:
  %%    _0
  _2 = call (`proplists`:`get_value`/2), `data_dir`, _0

  %% Aliased:
  %%    _2
  _18 = succeeded:body _2
  br _18, ^18, ^1

18:
  %% inline_SUITE.erl:348
  %% Aliased:
  %%    _2
  Src = call (`filename`:`join`/2), _2, `attribute`

  %% Aliased:
  %%    Src
  _19 = succeeded:body Src
  br _19, ^19, ^1

19:
  %% inline_SUITE.erl:349
  %% Aliased:
  %%    Src
  _8 = call (`compile`:`file`/2), Src, `[binary,report,{inline,0},clint,ssalint]`

  %% Aliased:
  %%    _8
  _20 = succeeded:body _8
  br _20, ^20, ^1

20:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _27 = is_tagged_tuple _8, `3`, `ok`
  br _27, ^24, ^22

24:
  %% Argument types:
  %%    _8 => {'ok', any(), any()}
  %% Aliased:
  %%    _8
  _10 = get_tuple_element _8, `1`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _10
  _23 = bif:'=:=' _10, `attribute`
  br _23, ^23, ^22

23:
  %% Result type:
  %%    'ok'
  ret `ok`

22:
  %% inline_SUITE.erl:349
  %% Aliased:
  %%    _8
  _12 = match_fail `badmatch`, _8

  %% Unique:
  %%    _12
  _30 = succeeded:body _12
  br ^1

16:
  %% inline_SUITE.erl:346
  %% Aliased:
  %%    _0
  %% Anno: #{inlined => {'-inlined-coverage/1-',1}}
  _13 = match_fail `function_clause`, _0

  %% Unique:
  %%    _13
  _31 = succeeded:body _13
  br ^1

1:
  _14 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _14
}

%% Counter = 6
%% bs_ensure_opt: true
function `inline_SUITE`:`module_info`() {
0:
  _2 = call (`erlang`:`get_module_info`/1), `inline_SUITE`

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 6
%% bs_ensure_opt: true
function `inline_SUITE`:`module_info`(_0) {
0:
  %% Aliased:
  %%    _0
  _2 = call (`erlang`:`get_module_info`/2), `inline_SUITE`, _0

  %% Aliased:
  %%    _2
  _5 = succeeded:body _2
  br _5, ^5, ^1

5:
  %% Aliased:
  %%    _2
  ret _2

1:
  _3 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _3
}

%% Counter = 1411
%% bs_ensure_opt: true
%% Parameters
%%    _587 =>
%%     'acc'
%%    _1169 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^mapfoldr/2-39-'`(_1169, _587) {
0:
  %% inline_SUITE.erl:307
  _1394 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,acc,[]]`

  %% Aliased:
  %%    _1394
  _1408 = succeeded:body _1394
  br ^1

1:
  _1395 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1395
}

%% Counter = 1398
%% bs_ensure_opt: true
%% Parameters
%%    _578 =>
%%     'acc'
%%    _1152 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^mapfoldl/2-38-'`(_1152, _578) {
0:
  %% inline_SUITE.erl:305
  _1389 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,acc,[]]`

  %% Aliased:
  %%    _1389
  _1395 = succeeded:body _1389
  br ^1

1:
  _1390 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1390
}

%% Counter = 1395
%% bs_ensure_opt: true
%% Parameters
%%    _575 =>
%%     'acc'
%%    _1135 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^foldr/2-37-'`(_1135, _575) {
0:
  %% inline_SUITE.erl:303
  _1385 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,acc,[]]`

  %% Aliased:
  %%    _1385
  _1392 = succeeded:body _1385
  br ^1

1:
  _1386 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1386
}

%% Counter = 1390
%% bs_ensure_opt: true
%% Parameters
%%    _572 =>
%%     'acc'
%%    _1117 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^foldl/2-36-'`(_1117, _572) {
0:
  %% inline_SUITE.erl:301
  _1380 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,acc,[]]`

  %% Aliased:
  %%    _1380
  _1387 = succeeded:body _1380
  br ^1

1:
  _1381 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1381
}

%% Counter = 1385
%% bs_ensure_opt: true
%% Parameters
%%    _1101 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^all/1-35-'`(_1101) {
0:
  %% inline_SUITE.erl:299
  _1376 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,[]]`

  %% Aliased:
  %%    _1376
  _1382 = succeeded:body _1376
  br ^1

1:
  _1377 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1377
}

%% Counter = 1381
%% bs_ensure_opt: true
%% Parameters
%%    _1085 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^any/1-34-'`(_1085) {
0:
  %% inline_SUITE.erl:297
  _1372 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,[]]`

  %% Aliased:
  %%    _1372
  _1378 = succeeded:body _1372
  br ^1

1:
  _1373 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1373
}

%% Counter = 1377
%% bs_ensure_opt: true
%% Parameters
%%    _1069 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^filter/1-33-'`(_1069) {
0:
  %% inline_SUITE.erl:295
  _1368 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,[]]`

  %% Aliased:
  %%    _1368
  _1374 = succeeded:body _1368
  br ^1

1:
  _1369 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1369
}

%% Counter = 1373
%% bs_ensure_opt: true
%% Parameters
%%    _1053 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^foreach/1-32-'`(_1053) {
0:
  %% inline_SUITE.erl:293
  _1364 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,[]]`

  %% Aliased:
  %%    _1364
  _1370 = succeeded:body _1364
  br ^1

1:
  _1365 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1365
}

%% Counter = 1369
%% bs_ensure_opt: true
%% Parameters
%%    _1037 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^flatmap/1-31-'`(_1037) {
0:
  %% inline_SUITE.erl:291
  _1360 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,[]]`

  %% Aliased:
  %%    _1360
  _1366 = succeeded:body _1360
  br ^1

1:
  _1361 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1361
}

%% Counter = 1365
%% bs_ensure_opt: true
%% Parameters
%%    _1021 =>
%%     nil()
function `inline_SUITE`:`'-lists/1-lists^map/1-30-'`(_1021) {
0:
  %% inline_SUITE.erl:289
  _1356 = call (`erlang`:`error`/2), `function_clause`, `[not_a_function,[]]`

  %% Aliased:
  %%    _1356
  _1362 = succeeded:body _1356
  br ^1

1:
  _1357 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1357
}

%% Counter = 1383
%% bs_ensure_opt: true
%% Parameters
%%    _277 =>
%%     fun((_, _) -> {any(), any()})
%%    _547 =>
%%     'acc'
%%    _994 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^mapfoldr/2-29-'`(_994, _547, _277) {
0:
  %% Argument types:
  %%    _277 => fun((_, _) -> {any(), any()})
  %% Aliased:
  %%    _277
  _998 = put_list _277, `[acc,not_a_list]`

  %% inline_SUITE.erl:286
  %% Unique:
  %%    _998
  _1352 = call (`erlang`:`error`/2), `function_clause`, _998

  %% Aliased:
  %%    _1352
  _1377 = succeeded:body _1352
  br ^1

1:
  _1353 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1353
}

%% inline_SUITE.erl:286
%% Counter = 1350
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-49-'`(_274, _273) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _273, 
  %%    _274
  _1347 = put_tuple _274, _273
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1347
  ret _1347
}

%% Counter = 1375
%% bs_ensure_opt: true
%% Parameters
%%    _270 =>
%%     fun((_, _) -> {any(), any()})
%%    _536 =>
%%     'acc'
%%    _967 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^mapfoldl/2-28-'`(_967, _536, _270) {
0:
  %% Argument types:
  %%    _270 => fun((_, _) -> {any(), any()})
  %% Aliased:
  %%    _270
  _971 = put_list _270, `[acc,not_a_list]`

  %% inline_SUITE.erl:284
  %% Unique:
  %%    _971
  _1344 = call (`erlang`:`error`/2), `function_clause`, _971

  %% Aliased:
  %%    _1344
  _1369 = succeeded:body _1344
  br ^1

1:
  _1345 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1345
}

%% inline_SUITE.erl:284
%% Counter = 1342
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-48-'`(_267, _266) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _266, 
  %%    _267
  _1339 = put_tuple _267, _266
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1339
  ret _1339
}

%% Counter = 1352
%% bs_ensure_opt: true
%% Parameters
%%    _263 =>
%%     fun((_, _) -> {any(), any()})
%%    _531 =>
%%     'acc'
%%    _946 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^foldr/2-27-'`(_946, _531, _263) {
0:
  %% Argument types:
  %%    _263 => fun((_, _) -> {any(), any()})
  %% Aliased:
  %%    _263
  _950 = put_list _263, `[acc,not_a_list]`

  %% inline_SUITE.erl:282
  %% Unique:
  %%    _950
  _1336 = call (`erlang`:`error`/2), `function_clause`, _950

  %% Aliased:
  %%    _1336
  _1347 = succeeded:body _1336
  br ^1

1:
  _1337 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1337
}

%% inline_SUITE.erl:282
%% Counter = 1337
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-47-'`(_260, _259) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _259, 
  %%    _260
  _1334 = put_tuple _260, _259
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1334
  ret _1334
}

%% Counter = 1347
%% bs_ensure_opt: true
%% Parameters
%%    _256 =>
%%     fun((_, _) -> {any(), any()})
%%    _526 =>
%%     'acc'
%%    _925 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^foldl/2-26-'`(_925, _526, _256) {
0:
  %% Argument types:
  %%    _256 => fun((_, _) -> {any(), any()})
  %% Aliased:
  %%    _256
  _929 = put_list _256, `[acc,not_a_list]`

  %% inline_SUITE.erl:280
  %% Unique:
  %%    _929
  _1331 = call (`erlang`:`error`/2), `function_clause`, _929

  %% Aliased:
  %%    _1331
  _1342 = succeeded:body _1331
  br ^1

1:
  _1332 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1332
}

%% inline_SUITE.erl:280
%% Counter = 1332
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-46-'`(_253, _252) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _252, 
  %%    _253
  _1329 = put_tuple _253, _252
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1329
  ret _1329
}

%% Counter = 1347
%% bs_ensure_opt: true
%% Parameters
%%    _249 =>
%%     fun((_) -> 'true')
%%    _905 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^all/1-25-'`(_905, _249) {
0:
  %% Argument types:
  %%    _249 => fun((_) -> 'true')
  %% Aliased:
  %%    _249
  _908 = put_list _249, `[not_a_list]`

  %% inline_SUITE.erl:278
  %% Unique:
  %%    _908
  _1326 = call (`erlang`:`error`/2), `function_clause`, _908

  %% Aliased:
  %%    _1326
  _1342 = succeeded:body _1326
  br ^1

1:
  _1327 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1327
}

%% inline_SUITE.erl:278
%% Counter = 1326
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-45-'`(_247) {
0:
  %% Result type:
  %%    'true'
  ret `true`
}

%% Counter = 1342
%% bs_ensure_opt: true
%% Parameters
%%    _244 =>
%%     fun((_) -> 'false')
%%    _885 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^any/1-24-'`(_885, _244) {
0:
  %% Argument types:
  %%    _244 => fun((_) -> 'false')
  %% Aliased:
  %%    _244
  _888 = put_list _244, `[not_a_list]`

  %% inline_SUITE.erl:276
  %% Unique:
  %%    _888
  _1321 = call (`erlang`:`error`/2), `function_clause`, _888

  %% Aliased:
  %%    _1321
  _1337 = succeeded:body _1321
  br ^1

1:
  _1322 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1322
}

%% inline_SUITE.erl:276
%% Counter = 1321
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-44-'`(_242) {
0:
  %% Result type:
  %%    'false'
  ret `false`
}

%% Counter = 1337
%% bs_ensure_opt: true
%% Parameters
%%    _239 =>
%%     fun((_) -> 'true')
%%    _865 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^filter/1-23-'`(_865, _239) {
0:
  %% Argument types:
  %%    _239 => fun((_) -> 'true')
  %% Aliased:
  %%    _239
  _868 = put_list _239, `[not_a_list]`

  %% inline_SUITE.erl:274
  %% Unique:
  %%    _868
  _1316 = call (`erlang`:`error`/2), `function_clause`, _868

  %% Aliased:
  %%    _1316
  _1332 = succeeded:body _1316
  br ^1

1:
  _1317 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1317
}

%% inline_SUITE.erl:274
%% Counter = 1316
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-43-'`(_237) {
0:
  %% Result type:
  %%    'true'
  ret `true`
}

%% Counter = 1327
%% bs_ensure_opt: true
%% Parameters
%%    _234 =>
%%     fun((_))
%%    _846 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^foreach/1-22-'`(_846, _234) {
0:
  %% Argument types:
  %%    _234 => fun((_))
  %% Aliased:
  %%    _234
  _849 = put_list _234, `[not_a_list]`

  %% inline_SUITE.erl:272
  %% Unique:
  %%    _849
  _1311 = call (`erlang`:`error`/2), `function_clause`, _849

  %% Aliased:
  %%    _1311
  _1322 = succeeded:body _1311
  br ^1

1:
  _1312 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1312
}

%% inline_SUITE.erl:272
%% Counter = 1311
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-42-'`(_232) {
0:
  %% Aliased:
  %%    _232
  ret _232
}

%% Counter = 1323
%% bs_ensure_opt: true
%% Parameters
%%    _229 =>
%%     fun((_))
%%    _825 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^flatmap/1-21-'`(_825, _229) {
0:
  %% Argument types:
  %%    _229 => fun((_))
  %% Aliased:
  %%    _229
  _828 = put_list _229, `[not_a_list]`

  %% inline_SUITE.erl:270
  %% Unique:
  %%    _828
  _1306 = call (`erlang`:`error`/2), `function_clause`, _828

  %% Aliased:
  %%    _1306
  _1318 = succeeded:body _1306
  br ^1

1:
  _1307 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1307
}

%% inline_SUITE.erl:270
%% Counter = 1307
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-41-'`(_227) {
0:
  %% Aliased:
  %%    _227
  ret _227
}

%% Counter = 1318
%% bs_ensure_opt: true
%% Parameters
%%    _224 =>
%%     fun((_))
%%    _804 =>
%%     'not_a_list'
function `inline_SUITE`:`'-lists/1-lists^map/1-20-'`(_804, _224) {
0:
  %% Argument types:
  %%    _224 => fun((_))
  %% Aliased:
  %%    _224
  _807 = put_list _224, `[not_a_list]`

  %% inline_SUITE.erl:268
  %% Unique:
  %%    _807
  _1302 = call (`erlang`:`error`/2), `function_clause`, _807

  %% Aliased:
  %%    _1302
  _1313 = succeeded:body _1302
  br ^1

1:
  _1303 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1303
}

%% inline_SUITE.erl:268
%% Counter = 1303
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-40-'`(_222) {
0:
  %% Aliased:
  %%    _222
  ret _222
}

%% Counter = 1328
%% bs_ensure_opt: true
%% Parameters
%%    _219 =>
%%     fun((_, _) -> {integer(), integer()})
%%    _493 =>
%%     0
function `inline_SUITE`:`'-lists/1-lists^mapfoldr/2-19-'`(_789, _493, _219) {
0:
  %% Aliased:
  %%    _789
  _1318 = is_nonempty_list _789
  br _1318, ^1318, ^1301

1318:
  %% Argument types:
  %%    _789 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _789
  _795 = get_hd _789

  %% Argument types:
  %%    _789 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _789
  _794 = get_tl _789

  %% inline_SUITE.erl:258
  %% Result type:
  %%    {list(integer()), integer()}
  %% Aliased:
  %%    _219, 
  %%    _794
  _796 = call (`'-lists/1-lists^mapfoldr/2-19-'`/3), _794, _493, _219

  %% Aliased:
  %%    _796
  _1302 = succeeded:body _796
  br _1302, ^1313, ^1

1313:
  %% Argument types:
  %%    _796 => {list(integer()), integer()}
  %% Aliased:
  %%    _796
  _798 = get_tuple_element _796, `0`

  %% Argument types:
  %%    _796 => {list(integer()), integer()}
  %% Aliased:
  %%    _796
  _797 = get_tuple_element _796, `1`

  %% inline_SUITE.erl:258
  %% Result type:
  %%    {integer(), integer()}
  %% Argument types:
  %%    (`'-lists/1-fun-39-'`/2) => fun((_, _) -> {integer(), integer()})
  %%    _797 => integer()
  %% Aliased:
  %%    _795
  %% Unique:
  %%    _797
  _799 = call (`'-lists/1-fun-39-'`/2), _795, _797

  %% Unique:
  %%    _799
  _1305 = succeeded:body _799
  br _1305, ^1308, ^1

1308:
  %% Argument types:
  %%    _799 => {integer(), integer()}
  %% Unique:
  %%    _799
  _801 = get_tuple_element _799, `0`

  %% Argument types:
  %%    _799 => {integer(), integer()}
  %% Unique:
  %%    _799
  _800 = get_tuple_element _799, `1`

  %% Argument types:
  %%    _801 => integer()
  %%    _798 => list(integer())
  %% Aliased:
  %%    _798
  %% Unique:
  %%    _801
  _802 = put_list _801, _798

  %% Argument types:
  %%    _802 => nonempty_list(integer())
  %%    _800 => integer()
  %% Unique:
  %%    _800, 
  %%    _802
  _1294 = put_tuple _802, _800
  %% Result type:
  %%    {nonempty_list(integer()), integer()}
  %% Unique:
  %%    _1294
  ret _1294

1301:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _789
  _1321 = bif:'=:=' _789, `[]`
  br _1321, ^1320, ^1300

1320:
  %% Result type:
  %%    {nil(), 0}
  ret `{[],0}`

1300:
  %% Argument types:
  %%    _789 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _789
  _791 = put_list _789, `[]`

  %% Argument types:
  %%    _791 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Unique:
  %%    _791
  _792 = put_list `0`, _791

  %% Argument types:
  %%    _219 => fun((_, _) -> {integer(), integer()})
  %%    _792 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _219
  %% Unique:
  %%    _792
  _793 = put_list _219, _792

  %% inline_SUITE.erl:258
  %% Unique:
  %%    _793
  _1297 = call (`erlang`:`error`/2), `function_clause`, _793

  %% Aliased:
  %%    _1297
  _1322 = succeeded:body _1297
  br ^1

1:
  _1298 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1298
}

%% inline_SUITE.erl:259
%% Counter = 1300
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-39-'`(_216, _215) {
0:
  %% inline_SUITE.erl:260
  %% Argument types:
  %%    
  _211 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _211, 
  %%    _216
  _788 = put_list _216, _211

  %% inline_SUITE.erl:260
  %% Unique:
  %%    _788
  _1291 = call (`erlang`:`put`/2), `inline_SUITE`, _788

  %% Aliased:
  %%    _1291
  _1295 = succeeded:body _1291
  br _1295, ^1295, ^1

1295:
  %% inline_SUITE.erl:261
  %% Argument types:
  %%    
  %% Aliased:
  %%    _216
  _214 = bif:'bnot' _216

  %% Unique:
  %%    _214
  _1296 = succeeded:body _214
  br _1296, ^1297, ^1

1297:
  %% inline_SUITE.erl:261
  %% Argument types:
  %%    _214 => integer()
  %% Aliased:
  %%    _215
  %% Unique:
  %%    _214
  _213 = bif:'bxor' _215, _214

  %% Unique:
  %%    _213
  _1298 = succeeded:body _213
  br _1298, ^1298, ^1

1298:
  %% Argument types:
  %%    _214 => integer()
  %%    _213 => integer()
  %% Unique:
  %%    _213, 
  %%    _214
  _1292 = put_tuple _214, _213
  %% Result type:
  %%    {integer(), integer()}
  %% Unique:
  %%    _1292
  ret _1292

1:
  _1293 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1293
}

%% inline_SUITE.erl:262
%% Counter = 1293
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-38-'`(_208) {
0:
  %% inline_SUITE.erl:262
  %% Argument types:
  %%    
  _207 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _207, 
  %%    _208
  _1290 = put_tuple _208, _207
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1290
  ret _1290
}

%% inline_SUITE.erl:258
%% Counter = 1314
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-37-'`(_204, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _204
  _1304 = bif:is_tuple _204
  br _1304, ^1304, ^1292

1304:
  %% Argument types:
  %%    _204 => {...}
  %% Aliased:
  %%    _204
  _1305 = bif:tuple_size _204

  %% Argument types:
  %%    _1305 => 0..16777215
  %% Unique:
  %%    _1305
  _1306 = bif:'=:=' _1305, `2`
  br _1306, ^1312, ^1292

1312:
  %% Result type:
  %%    {integer(), integer()}
  _202 = make_fun (`'-lists/1-fun-36-'`/2)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _782 = put_list List, `[]`

  %% Argument types:
  %%    _782 => nonempty_list(any())
  %% Unique:
  %%    _782
  _783 = put_list `0`, _782

  %% Argument types:
  %%    _202 => fun((_, _) -> {integer(), integer()})
  %%    _783 => nonempty_list(any())
  %% Aliased:
  %%    _202
  %% Unique:
  %%    _783
  _784 = put_list _202, _783

  %% inline_SUITE.erl:258
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _784
  _346 = call (`my_apply`/4), `lists`, `mapfoldr`, _784, `[]`

  %% Aliased:
  %%    _346
  _1293 = succeeded:body _346
  br _1293, ^1298, ^1

1298:
  %% Argument types:
  %%    _204 => {any(), any()}
  %% Aliased:
  %%    _204
  _780 = get_tuple_element _204, `0`

  %% Argument types:
  %%    _346 => {any(), any()}
  %% Aliased:
  %%    _346
  _786 = get_tuple_element _346, `0`

  %% inline_SUITE.erl:258
  %% Argument types:
  %%    
  %% Aliased:
  %%    _780, 
  %%    _786
  _349 = bif:'=:=' _786, _780
  br _349, ^1310, ^1295

1310:
  %% Argument types:
  %%    _346 => {any(), any()}
  %% Aliased:
  %%    _346
  _785 = get_tuple_element _346, `1`

  %% Argument types:
  %%    _204 => {any(), any()}
  %% Aliased:
  %%    _204
  _779 = get_tuple_element _204, `1`

  %% inline_SUITE.erl:258
  %% Argument types:
  %%    
  %% Aliased:
  %%    _779, 
  %%    _785
  _350 = bif:'=:=' _785, _779
  br _350, ^1297, ^1295

1297:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _346
  ret _346

1295:
  %% inline_SUITE.erl:258
  %% Aliased:
  %%    _346
  _1288 = match_fail `badmatch`, _346

  %% Unique:
  %%    _1288
  _1302 = succeeded:body _1288
  br ^1

1292:
  %% inline_SUITE.erl:258
  %% Aliased:
  %%    _204
  %% Anno: #{inlined => {'-lists/1-inlined-18-',1}}
  _1289 = match_fail `function_clause`, _204

  %% Unique:
  %%    _1289
  _1307 = succeeded:body _1289
  br ^1

1:
  _1290 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1290
}

%% inline_SUITE.erl:259
%% Counter = 1295
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-36-'`(_199, _198) {
0:
  %% inline_SUITE.erl:260
  %% Argument types:
  %%    
  _194 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _194, 
  %%    _199
  _781 = put_list _199, _194

  %% inline_SUITE.erl:260
  %% Unique:
  %%    _781
  _1286 = call (`erlang`:`put`/2), `inline_SUITE`, _781

  %% Aliased:
  %%    _1286
  _1290 = succeeded:body _1286
  br _1290, ^1290, ^1

1290:
  %% inline_SUITE.erl:261
  %% Argument types:
  %%    
  %% Aliased:
  %%    _199
  _197 = bif:'bnot' _199

  %% Unique:
  %%    _197
  _1291 = succeeded:body _197
  br _1291, ^1292, ^1

1292:
  %% inline_SUITE.erl:261
  %% Argument types:
  %%    _197 => integer()
  %% Aliased:
  %%    _198
  %% Unique:
  %%    _197
  _196 = bif:'bxor' _198, _197

  %% Unique:
  %%    _196
  _1293 = succeeded:body _196
  br _1293, ^1293, ^1

1293:
  %% Argument types:
  %%    _197 => integer()
  %%    _196 => integer()
  %% Unique:
  %%    _196, 
  %%    _197
  _1287 = put_tuple _197, _196
  %% Result type:
  %%    {integer(), integer()}
  %% Unique:
  %%    _1287
  ret _1287

1:
  _1288 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1288
}

%% Counter = 1314
%% bs_ensure_opt: true
%% Parameters
%%    _191 =>
%%     fun((_, _) -> {integer(), integer()})
%%    _479 =>
%%     integer()
function `inline_SUITE`:`'-lists/1-lists^mapfoldl/2-17-'`(_762, _479, _191) {
0:
  %% Aliased:
  %%    _762
  _1304 = is_nonempty_list _762
  br _1304, ^1304, ^1287

1304:
  %% Argument types:
  %%    _762 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _762
  _768 = get_hd _762

  %% Argument types:
  %%    _762 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _762
  _767 = get_tl _762

  %% inline_SUITE.erl:251
  %% Result type:
  %%    {integer(), integer()}
  %% Argument types:
  %%    (`'-lists/1-fun-35-'`/2) => fun((_, _) -> {integer(), integer()})
  %%    _479 => integer()
  %% Aliased:
  %%    _768
  %% Unique:
  %%    _479
  _769 = call (`'-lists/1-fun-35-'`/2), _768, _479

  %% Unique:
  %%    _769
  _1288 = succeeded:body _769
  br _1288, ^1299, ^1

1299:
  %% Argument types:
  %%    _769 => {integer(), integer()}
  %% Unique:
  %%    _769
  _771 = get_tuple_element _769, `0`

  %% Argument types:
  %%    _769 => {integer(), integer()}
  %% Unique:
  %%    _769
  _770 = get_tuple_element _769, `1`

  %% inline_SUITE.erl:251
  %% Result type:
  %%    {list(integer()), integer()}
  %% Aliased:
  %%    _191, 
  %%    _767
  %% Unique:
  %%    _770
  _772 = call (`'-lists/1-lists^mapfoldl/2-17-'`/3), _767, _770, _191

  %% Aliased:
  %%    _772
  _1291 = succeeded:body _772
  br _1291, ^1294, ^1

1294:
  %% Argument types:
  %%    _772 => {list(integer()), integer()}
  %% Aliased:
  %%    _772
  _774 = get_tuple_element _772, `0`

  %% Argument types:
  %%    _772 => {list(integer()), integer()}
  %% Aliased:
  %%    _772
  _773 = get_tuple_element _772, `1`

  %% Argument types:
  %%    _771 => integer()
  %%    _774 => list(integer())
  %% Aliased:
  %%    _774
  %% Unique:
  %%    _771
  _775 = put_list _771, _774

  %% Argument types:
  %%    _775 => nonempty_list(integer())
  %%    _773 => integer()
  %% Unique:
  %%    _773, 
  %%    _775
  _1280 = put_tuple _775, _773
  %% Result type:
  %%    {nonempty_list(integer()), integer()}
  %% Unique:
  %%    _1280
  ret _1280

1287:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _762
  _1307 = bif:'=:=' _762, `[]`
  br _1307, ^1306, ^1286

1306:
  %% Argument types:
  %%    _479 => integer()
  %% Unique:
  %%    _479
  _1279 = put_tuple `[]`, _479
  %% Result type:
  %%    {nil(), integer()}
  %% Unique:
  %%    _1279
  ret _1279

1286:
  %% Argument types:
  %%    _762 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _762
  _764 = put_list _762, `[]`

  %% Argument types:
  %%    _479 => integer()
  %%    _764 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Unique:
  %%    _479, 
  %%    _764
  _765 = put_list _479, _764

  %% Argument types:
  %%    _191 => fun((_, _) -> {integer(), integer()})
  %%    _765 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _191
  %% Unique:
  %%    _765
  _766 = put_list _191, _765

  %% inline_SUITE.erl:251
  %% Unique:
  %%    _766
  _1283 = call (`erlang`:`error`/2), `function_clause`, _766

  %% Aliased:
  %%    _1283
  _1308 = succeeded:body _1283
  br ^1

1:
  _1284 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1284
}

%% inline_SUITE.erl:252
%% Counter = 1286
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-35-'`(_188, _187) {
0:
  %% inline_SUITE.erl:253
  %% Argument types:
  %%    
  _183 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _183, 
  %%    _188
  _761 = put_list _188, _183

  %% inline_SUITE.erl:253
  %% Unique:
  %%    _761
  _1277 = call (`erlang`:`put`/2), `inline_SUITE`, _761

  %% Aliased:
  %%    _1277
  _1281 = succeeded:body _1277
  br _1281, ^1281, ^1

1281:
  %% inline_SUITE.erl:254
  %% Argument types:
  %%    
  %% Aliased:
  %%    _188
  _186 = bif:'bnot' _188

  %% Unique:
  %%    _186
  _1282 = succeeded:body _186
  br _1282, ^1283, ^1

1283:
  %% inline_SUITE.erl:254
  %% Argument types:
  %%    _186 => integer()
  %% Aliased:
  %%    _187
  %% Unique:
  %%    _186
  _185 = bif:'bxor' _187, _186

  %% Unique:
  %%    _185
  _1284 = succeeded:body _185
  br _1284, ^1284, ^1

1284:
  %% Argument types:
  %%    _186 => integer()
  %%    _185 => integer()
  %% Unique:
  %%    _185, 
  %%    _186
  _1278 = put_tuple _186, _185
  %% Result type:
  %%    {integer(), integer()}
  %% Unique:
  %%    _1278
  ret _1278

1:
  _1279 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1279
}

%% inline_SUITE.erl:255
%% Counter = 1279
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-34-'`(_180) {
0:
  %% inline_SUITE.erl:255
  %% Argument types:
  %%    
  _179 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _179, 
  %%    _180
  _1276 = put_tuple _180, _179
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1276
  ret _1276
}

%% inline_SUITE.erl:251
%% Counter = 1300
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-33-'`(_176, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _176
  _1290 = bif:is_tuple _176
  br _1290, ^1290, ^1278

1290:
  %% Argument types:
  %%    _176 => {...}
  %% Aliased:
  %%    _176
  _1291 = bif:tuple_size _176

  %% Argument types:
  %%    _1291 => 0..16777215
  %% Unique:
  %%    _1291
  _1292 = bif:'=:=' _1291, `2`
  br _1292, ^1298, ^1278

1298:
  %% Result type:
  %%    {integer(), integer()}
  _174 = make_fun (`'-lists/1-fun-32-'`/2)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _755 = put_list List, `[]`

  %% Argument types:
  %%    _755 => nonempty_list(any())
  %% Unique:
  %%    _755
  _756 = put_list `0`, _755

  %% Argument types:
  %%    _174 => fun((_, _) -> {integer(), integer()})
  %%    _756 => nonempty_list(any())
  %% Aliased:
  %%    _174
  %% Unique:
  %%    _756
  _757 = put_list _174, _756

  %% inline_SUITE.erl:251
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _757
  _341 = call (`my_apply`/4), `lists`, `mapfoldl`, _757, `[]`

  %% Aliased:
  %%    _341
  _1279 = succeeded:body _341
  br _1279, ^1284, ^1

1284:
  %% Argument types:
  %%    _176 => {any(), any()}
  %% Aliased:
  %%    _176
  _753 = get_tuple_element _176, `0`

  %% Argument types:
  %%    _341 => {any(), any()}
  %% Aliased:
  %%    _341
  _759 = get_tuple_element _341, `0`

  %% inline_SUITE.erl:251
  %% Argument types:
  %%    
  %% Aliased:
  %%    _753, 
  %%    _759
  _344 = bif:'=:=' _759, _753
  br _344, ^1296, ^1281

1296:
  %% Argument types:
  %%    _341 => {any(), any()}
  %% Aliased:
  %%    _341
  _758 = get_tuple_element _341, `1`

  %% Argument types:
  %%    _176 => {any(), any()}
  %% Aliased:
  %%    _176
  _752 = get_tuple_element _176, `1`

  %% inline_SUITE.erl:251
  %% Argument types:
  %%    
  %% Aliased:
  %%    _752, 
  %%    _758
  _345 = bif:'=:=' _758, _752
  br _345, ^1283, ^1281

1283:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _341
  ret _341

1281:
  %% inline_SUITE.erl:251
  %% Aliased:
  %%    _341
  _1274 = match_fail `badmatch`, _341

  %% Unique:
  %%    _1274
  _1288 = succeeded:body _1274
  br ^1

1278:
  %% inline_SUITE.erl:251
  %% Aliased:
  %%    _176
  %% Anno: #{inlined => {'-lists/1-inlined-16-',1}}
  _1275 = match_fail `function_clause`, _176

  %% Unique:
  %%    _1275
  _1293 = succeeded:body _1275
  br ^1

1:
  _1276 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1276
}

%% inline_SUITE.erl:252
%% Counter = 1281
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-32-'`(_171, _170) {
0:
  %% inline_SUITE.erl:253
  %% Argument types:
  %%    
  _166 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _166, 
  %%    _171
  _754 = put_list _171, _166

  %% inline_SUITE.erl:253
  %% Unique:
  %%    _754
  _1272 = call (`erlang`:`put`/2), `inline_SUITE`, _754

  %% Aliased:
  %%    _1272
  _1276 = succeeded:body _1272
  br _1276, ^1276, ^1

1276:
  %% inline_SUITE.erl:254
  %% Argument types:
  %%    
  %% Aliased:
  %%    _171
  _169 = bif:'bnot' _171

  %% Unique:
  %%    _169
  _1277 = succeeded:body _169
  br _1277, ^1278, ^1

1278:
  %% inline_SUITE.erl:254
  %% Argument types:
  %%    _169 => integer()
  %% Aliased:
  %%    _170
  %% Unique:
  %%    _169
  _168 = bif:'bxor' _170, _169

  %% Unique:
  %%    _168
  _1279 = succeeded:body _168
  br _1279, ^1279, ^1

1279:
  %% Argument types:
  %%    _169 => integer()
  %%    _168 => integer()
  %% Unique:
  %%    _168, 
  %%    _169
  _1273 = put_tuple _169, _168
  %% Result type:
  %%    {integer(), integer()}
  %% Unique:
  %%    _1273
  ret _1273

1:
  _1274 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1274
}

%% Counter = 1285
%% bs_ensure_opt: true
%% Parameters
%%    _163 =>
%%     fun((_, _) -> integer())
%%    _471 =>
%%     0
function `inline_SUITE`:`'-lists/1-lists^foldr/2-15-'`(_741, _471, _163) {
0:
  %% Aliased:
  %%    _741
  _1276 = is_nonempty_list _741
  br _1276, ^1276, ^1273

1276:
  %% Argument types:
  %%    _741 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _741
  _747 = get_hd _741

  %% Argument types:
  %%    _741 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _741
  _746 = get_tl _741

  %% inline_SUITE.erl:244
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _163, 
  %%    _746
  _748 = call (`'-lists/1-lists^foldr/2-15-'`/3), _746, _471, _163

  %% Unique:
  %%    _748
  _1274 = succeeded:body _748
  br _1274, ^1274, ^1

1274:
  %% inline_SUITE.erl:244
  %% Result type:
  %%    integer()
  %% Argument types:
  %%    (`'-lists/1-fun-31-'`/2) => fun((_, _) -> integer())
  %%    _748 => integer()
  %% Aliased:
  %%    _747
  %% Unique:
  %%    _748
  _1268 = call (`'-lists/1-fun-31-'`/2), _747, _748

  %% Unique:
  %%    _1268
  _1275 = succeeded:body _1268
  br _1275, ^1275, ^1

1275:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1268
  ret _1268

1273:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _741
  _1279 = bif:'=:=' _741, `[]`
  br _1279, ^1278, ^1272

1278:
  %% Result type:
  %%    0
  %% Unique:
  %%    _471
  ret _471

1272:
  %% Argument types:
  %%    _741 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _741
  _743 = put_list _741, `[]`

  %% Argument types:
  %%    _743 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Unique:
  %%    _743
  _744 = put_list `0`, _743

  %% Argument types:
  %%    _163 => fun((_, _) -> integer())
  %%    _744 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _163
  %% Unique:
  %%    _744
  _745 = put_list _163, _744

  %% inline_SUITE.erl:244
  %% Unique:
  %%    _745
  _1269 = call (`erlang`:`error`/2), `function_clause`, _745

  %% Aliased:
  %%    _1269
  _1280 = succeeded:body _1269
  br ^1

1:
  _1270 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1270
}

%% inline_SUITE.erl:245
%% Counter = 1274
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-31-'`(_160, _159) {
0:
  %% inline_SUITE.erl:246
  %% Argument types:
  %%    
  _157 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _157, 
  %%    _160
  _740 = put_list _160, _157

  %% inline_SUITE.erl:246
  %% Unique:
  %%    _740
  _1266 = call (`erlang`:`put`/2), `inline_SUITE`, _740

  %% Aliased:
  %%    _1266
  _1270 = succeeded:body _1266
  br _1270, ^1270, ^1

1270:
  %% inline_SUITE.erl:247
  %% Argument types:
  %%    
  %% Aliased:
  %%    _160
  _158 = bif:'bnot' _160

  %% Unique:
  %%    _158
  _1271 = succeeded:body _158
  br _1271, ^1271, ^1

1271:
  %% inline_SUITE.erl:247
  %% Argument types:
  %%    _158 => integer()
  %% Aliased:
  %%    _159
  %% Unique:
  %%    _158
  _1267 = bif:'bxor' _159, _158

  %% Unique:
  %%    _1267
  _1272 = succeeded:body _1267
  br _1272, ^1272, ^1

1272:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1267
  ret _1267

1:
  _1268 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1268
}

%% inline_SUITE.erl:248
%% Counter = 1268
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-30-'`(_154) {
0:
  %% inline_SUITE.erl:248
  %% Argument types:
  %%    
  _153 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _153
  %% Unique:
  %%    _154
  _1265 = put_tuple _154, _153
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1265
  ret _1265
}

%% inline_SUITE.erl:244
%% Counter = 1289
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-29-'`(_150, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _150
  _1279 = bif:is_tuple _150
  br _1279, ^1279, ^1267

1279:
  %% Argument types:
  %%    _150 => {...}
  %% Aliased:
  %%    _150
  _1280 = bif:tuple_size _150

  %% Argument types:
  %%    _1280 => 0..16777215
  %% Unique:
  %%    _1280
  _1281 = bif:'=:=' _1280, `2`
  br _1281, ^1287, ^1267

1287:
  %% Result type:
  %%    integer()
  _148 = make_fun (`'-lists/1-fun-28-'`/2)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _734 = put_list List, `[]`

  %% Argument types:
  %%    _734 => nonempty_list(any())
  %% Unique:
  %%    _734
  _735 = put_list `0`, _734

  %% Argument types:
  %%    _148 => fun((_, _) -> integer())
  %%    _735 => nonempty_list(any())
  %% Aliased:
  %%    _148
  %% Unique:
  %%    _735
  _736 = put_list _148, _735

  %% inline_SUITE.erl:244
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _736
  _336 = call (`my_apply`/4), `lists`, `foldr`, _736, `[]`

  %% Aliased:
  %%    _336
  _1268 = succeeded:body _336
  br _1268, ^1273, ^1

1273:
  %% Argument types:
  %%    _150 => {any(), any()}
  %% Aliased:
  %%    _150
  _732 = get_tuple_element _150, `0`

  %% Argument types:
  %%    _336 => {any(), any()}
  %% Aliased:
  %%    _336
  _738 = get_tuple_element _336, `0`

  %% inline_SUITE.erl:244
  %% Argument types:
  %%    
  %% Aliased:
  %%    _732, 
  %%    _738
  _339 = bif:'=:=' _738, _732
  br _339, ^1285, ^1270

1285:
  %% Argument types:
  %%    _336 => {any(), any()}
  %% Aliased:
  %%    _336
  _737 = get_tuple_element _336, `1`

  %% Argument types:
  %%    _150 => {any(), any()}
  %% Aliased:
  %%    _150
  _731 = get_tuple_element _150, `1`

  %% inline_SUITE.erl:244
  %% Argument types:
  %%    
  %% Aliased:
  %%    _731, 
  %%    _737
  _340 = bif:'=:=' _737, _731
  br _340, ^1272, ^1270

1272:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _336
  ret _336

1270:
  %% inline_SUITE.erl:244
  %% Aliased:
  %%    _336
  _1263 = match_fail `badmatch`, _336

  %% Unique:
  %%    _1263
  _1277 = succeeded:body _1263
  br ^1

1267:
  %% inline_SUITE.erl:244
  %% Aliased:
  %%    _150
  %% Anno: #{inlined => {'-lists/1-inlined-14-',1}}
  _1264 = match_fail `function_clause`, _150

  %% Unique:
  %%    _1264
  _1282 = succeeded:body _1264
  br ^1

1:
  _1265 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1265
}

%% inline_SUITE.erl:245
%% Counter = 1269
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-28-'`(_145, _144) {
0:
  %% inline_SUITE.erl:246
  %% Argument types:
  %%    
  _142 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _142, 
  %%    _145
  _733 = put_list _145, _142

  %% inline_SUITE.erl:246
  %% Unique:
  %%    _733
  _1261 = call (`erlang`:`put`/2), `inline_SUITE`, _733

  %% Aliased:
  %%    _1261
  _1265 = succeeded:body _1261
  br _1265, ^1265, ^1

1265:
  %% inline_SUITE.erl:247
  %% Argument types:
  %%    
  %% Aliased:
  %%    _145
  _143 = bif:'bnot' _145

  %% Unique:
  %%    _143
  _1266 = succeeded:body _143
  br _1266, ^1266, ^1

1266:
  %% inline_SUITE.erl:247
  %% Argument types:
  %%    _143 => integer()
  %% Aliased:
  %%    _144
  %% Unique:
  %%    _143
  _1262 = bif:'bxor' _144, _143

  %% Unique:
  %%    _1262
  _1267 = succeeded:body _1262
  br _1267, ^1267, ^1

1267:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1262
  ret _1262

1:
  _1263 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1263
}

%% Counter = 1274
%% bs_ensure_opt: true
%% Parameters
%%    _139 =>
%%     fun((_, _) -> integer())
%%    _463 =>
%%     integer()
function `inline_SUITE`:`'-lists/1-lists^foldl/2-13-'`(_720, _463, _139) {
0:
  %% Aliased:
  %%    _720
  _1265 = is_nonempty_list _720
  br _1265, ^1265, ^1262

1265:
  %% Argument types:
  %%    _720 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _720
  _726 = get_hd _720

  %% Argument types:
  %%    _720 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _720
  _725 = get_tl _720

  %% inline_SUITE.erl:237
  %% Result type:
  %%    integer()
  %% Argument types:
  %%    (`'-lists/1-fun-27-'`/2) => fun((_, _) -> integer())
  %%    _463 => integer()
  %% Aliased:
  %%    _726
  %% Unique:
  %%    _463
  _727 = call (`'-lists/1-fun-27-'`/2), _726, _463

  %% Unique:
  %%    _727
  _1263 = succeeded:body _727
  br _1263, ^1263, ^1

1263:
  %% inline_SUITE.erl:237
  %% Result type:
  %%    integer()
  %% Aliased:
  %%    _139, 
  %%    _725
  %% Unique:
  %%    _727
  _1257 = call (`'-lists/1-lists^foldl/2-13-'`/3), _725, _727, _139

  %% Unique:
  %%    _1257
  _1264 = succeeded:body _1257
  br _1264, ^1264, ^1

1264:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1257
  ret _1257

1262:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _720
  _1268 = bif:'=:=' _720, `[]`
  br _1268, ^1267, ^1261

1267:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _463
  ret _463

1261:
  %% Argument types:
  %%    _720 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _720
  _722 = put_list _720, `[]`

  %% Argument types:
  %%    _463 => integer()
  %%    _722 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Unique:
  %%    _463, 
  %%    _722
  _723 = put_list _463, _722

  %% Argument types:
  %%    _139 => fun((_, _) -> integer())
  %%    _723 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _139
  %% Unique:
  %%    _723
  _724 = put_list _139, _723

  %% inline_SUITE.erl:237
  %% Unique:
  %%    _724
  _1258 = call (`erlang`:`error`/2), `function_clause`, _724

  %% Aliased:
  %%    _1258
  _1269 = succeeded:body _1258
  br ^1

1:
  _1259 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1259
}

%% inline_SUITE.erl:238
%% Counter = 1262
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-27-'`(_136, _135) {
0:
  %% inline_SUITE.erl:239
  %% Argument types:
  %%    
  _134 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _134, 
  %%    _136
  _719 = put_list _136, _134

  %% inline_SUITE.erl:239
  %% Unique:
  %%    _719
  _1255 = call (`erlang`:`put`/2), `inline_SUITE`, _719

  %% Aliased:
  %%    _1255
  _1259 = succeeded:body _1255
  br _1259, ^1259, ^1

1259:
  %% inline_SUITE.erl:240
  %% Argument types:
  %%    
  %% Aliased:
  %%    _135, 
  %%    _136
  _1256 = bif:'bxor' _135, _136

  %% Unique:
  %%    _1256
  _1260 = succeeded:body _1256
  br _1260, ^1260, ^1

1260:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1256
  ret _1256

1:
  _1257 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1257
}

%% inline_SUITE.erl:241
%% Counter = 1257
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-26-'`(_131) {
0:
  %% inline_SUITE.erl:241
  %% Argument types:
  %%    
  _130 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _130
  %% Unique:
  %%    _131
  _1254 = put_tuple _131, _130
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1254
  ret _1254
}

%% inline_SUITE.erl:237
%% Counter = 1278
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-25-'`(_127, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _127
  _1268 = bif:is_tuple _127
  br _1268, ^1268, ^1256

1268:
  %% Argument types:
  %%    _127 => {...}
  %% Aliased:
  %%    _127
  _1269 = bif:tuple_size _127

  %% Argument types:
  %%    _1269 => 0..16777215
  %% Unique:
  %%    _1269
  _1270 = bif:'=:=' _1269, `2`
  br _1270, ^1276, ^1256

1276:
  %% Result type:
  %%    integer()
  _125 = make_fun (`'-lists/1-fun-24-'`/2)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _713 = put_list List, `[]`

  %% Argument types:
  %%    _713 => nonempty_list(any())
  %% Unique:
  %%    _713
  _714 = put_list `0`, _713

  %% Argument types:
  %%    _125 => fun((_, _) -> integer())
  %%    _714 => nonempty_list(any())
  %% Aliased:
  %%    _125
  %% Unique:
  %%    _714
  _715 = put_list _125, _714

  %% inline_SUITE.erl:237
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _715
  _331 = call (`my_apply`/4), `lists`, `foldl`, _715, `[]`

  %% Aliased:
  %%    _331
  _1257 = succeeded:body _331
  br _1257, ^1262, ^1

1262:
  %% Argument types:
  %%    _127 => {any(), any()}
  %% Aliased:
  %%    _127
  _711 = get_tuple_element _127, `0`

  %% Argument types:
  %%    _331 => {any(), any()}
  %% Aliased:
  %%    _331
  _717 = get_tuple_element _331, `0`

  %% inline_SUITE.erl:237
  %% Argument types:
  %%    
  %% Aliased:
  %%    _711, 
  %%    _717
  _334 = bif:'=:=' _717, _711
  br _334, ^1274, ^1259

1274:
  %% Argument types:
  %%    _331 => {any(), any()}
  %% Aliased:
  %%    _331
  _716 = get_tuple_element _331, `1`

  %% Argument types:
  %%    _127 => {any(), any()}
  %% Aliased:
  %%    _127
  _710 = get_tuple_element _127, `1`

  %% inline_SUITE.erl:237
  %% Argument types:
  %%    
  %% Aliased:
  %%    _710, 
  %%    _716
  _335 = bif:'=:=' _716, _710
  br _335, ^1261, ^1259

1261:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _331
  ret _331

1259:
  %% inline_SUITE.erl:237
  %% Aliased:
  %%    _331
  _1252 = match_fail `badmatch`, _331

  %% Unique:
  %%    _1252
  _1266 = succeeded:body _1252
  br ^1

1256:
  %% inline_SUITE.erl:237
  %% Aliased:
  %%    _127
  %% Anno: #{inlined => {'-lists/1-inlined-12-',1}}
  _1253 = match_fail `function_clause`, _127

  %% Unique:
  %%    _1253
  _1271 = succeeded:body _1253
  br ^1

1:
  _1254 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1254
}

%% inline_SUITE.erl:238
%% Counter = 1257
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-24-'`(_122, _121) {
0:
  %% inline_SUITE.erl:239
  %% Argument types:
  %%    
  _120 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _120, 
  %%    _122
  _712 = put_list _122, _120

  %% inline_SUITE.erl:239
  %% Unique:
  %%    _712
  _1250 = call (`erlang`:`put`/2), `inline_SUITE`, _712

  %% Aliased:
  %%    _1250
  _1254 = succeeded:body _1250
  br _1254, ^1254, ^1

1254:
  %% inline_SUITE.erl:240
  %% Argument types:
  %%    
  %% Aliased:
  %%    _121, 
  %%    _122
  _1251 = bif:'bxor' _121, _122

  %% Unique:
  %%    _1251
  _1255 = succeeded:body _1251
  br _1255, ^1255, ^1

1255:
  %% Result type:
  %%    integer()
  %% Unique:
  %%    _1251
  ret _1251

1:
  _1252 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1252
}

%% Counter = 1268
%% bs_ensure_opt: true
%% Parameters
%%    _117 =>
%%     fun((_) -> 'true')
function `inline_SUITE`:`'-lists/1-lists^all/1-11-'`(_700, _117) {
0:
  %% Aliased:
  %%    _700
  _1259 = is_nonempty_list _700
  br _1259, ^1259, ^1251

1259:
  %% Argument types:
  %%    _700 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _700
  _705 = get_hd _700

  %% Argument types:
  %%    _700 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _700
  _704 = get_tl _700

  %% inline_SUITE.erl:230
  %% Result type:
  %%    'true'
  %% Argument types:
  %%    (`'-lists/1-fun-23-'`/1) => fun((_) -> 'true')
  %% Aliased:
  %%    _705
  _706 = call (`'-lists/1-fun-23-'`/1), _705

  %% Unique:
  %%    _706
  _1252 = succeeded:body _706
  br _1252, ^1257, ^1

1257:
  %% inline_SUITE.erl:230
  %% Result type:
  %%    'true'
  %% Aliased:
  %%    _117, 
  %%    _704
  _1245 = call (`'-lists/1-lists^all/1-11-'`/2), _704, _117

  %% Unique:
  %%    _1245
  _1255 = succeeded:body _1245
  br _1255, ^1255, ^1

1255:
  %% Result type:
  %%    'true'
  %% Unique:
  %%    _1245
  ret _1245

1251:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _700
  _1262 = bif:'=:=' _700, `[]`
  br _1262, ^1261, ^1250

1261:
  %% Result type:
  %%    'true'
  ret `true`

1250:
  %% Argument types:
  %%    _700 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _700
  _702 = put_list _700, `[]`

  %% Argument types:
  %%    _117 => fun((_) -> 'true')
  %%    _702 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _117
  %% Unique:
  %%    _702
  _703 = put_list _117, _702

  %% inline_SUITE.erl:230
  %% Unique:
  %%    _703
  _1247 = call (`erlang`:`error`/2), `function_clause`, _703

  %% Aliased:
  %%    _1247
  _1263 = succeeded:body _1247
  br ^1

1:
  _1248 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1248
}

%% inline_SUITE.erl:231
%% Counter = 1249
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-23-'`(_115) {
0:
  %% inline_SUITE.erl:232
  %% Argument types:
  %%    
  _114 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _114, 
  %%    _115
  _699 = put_list _115, _114

  %% inline_SUITE.erl:232
  %% Unique:
  %%    _699
  _1244 = call (`erlang`:`put`/2), `inline_SUITE`, _699

  %% Aliased:
  %%    _1244
  _1247 = succeeded:body _1244
  br _1247, ^1247, ^1

1247:
  %% Result type:
  %%    'true'
  ret `true`

1:
  _1245 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1245
}

%% inline_SUITE.erl:234
%% Counter = 1246
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-22-'`(_111) {
0:
  %% inline_SUITE.erl:234
  %% Argument types:
  %%    
  _110 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _110
  %% Unique:
  %%    _111
  _1243 = put_tuple _111, _110
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1243
  ret _1243
}

%% inline_SUITE.erl:230
%% Counter = 1267
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-21-'`(_107, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _107
  _1257 = bif:is_tuple _107
  br _1257, ^1257, ^1245

1257:
  %% Argument types:
  %%    _107 => {...}
  %% Aliased:
  %%    _107
  _1258 = bif:tuple_size _107

  %% Argument types:
  %%    _1258 => 0..16777215
  %% Unique:
  %%    _1258
  _1259 = bif:'=:=' _1258, `2`
  br _1259, ^1265, ^1245

1265:
  %% Result type:
  %%    'true'
  _105 = make_fun (`'-lists/1-fun-20-'`/1)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _694 = put_list List, `[]`

  %% Argument types:
  %%    _105 => fun((_) -> 'true')
  %%    _694 => nonempty_list(any())
  %% Aliased:
  %%    _105
  %% Unique:
  %%    _694
  _695 = put_list _105, _694

  %% inline_SUITE.erl:230
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _695
  _326 = call (`my_apply`/4), `lists`, `all`, _695, `[]`

  %% Aliased:
  %%    _326
  _1246 = succeeded:body _326
  br _1246, ^1251, ^1

1251:
  %% Argument types:
  %%    _107 => {any(), any()}
  %% Aliased:
  %%    _107
  _692 = get_tuple_element _107, `0`

  %% Argument types:
  %%    _326 => {any(), any()}
  %% Aliased:
  %%    _326
  _697 = get_tuple_element _326, `0`

  %% inline_SUITE.erl:230
  %% Argument types:
  %%    
  %% Aliased:
  %%    _692, 
  %%    _697
  _329 = bif:'=:=' _697, _692
  br _329, ^1263, ^1248

1263:
  %% Argument types:
  %%    _326 => {any(), any()}
  %% Aliased:
  %%    _326
  _696 = get_tuple_element _326, `1`

  %% Argument types:
  %%    _107 => {any(), any()}
  %% Aliased:
  %%    _107
  _691 = get_tuple_element _107, `1`

  %% inline_SUITE.erl:230
  %% Argument types:
  %%    
  %% Aliased:
  %%    _691, 
  %%    _696
  _330 = bif:'=:=' _696, _691
  br _330, ^1250, ^1248

1250:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _326
  ret _326

1248:
  %% inline_SUITE.erl:230
  %% Aliased:
  %%    _326
  _1241 = match_fail `badmatch`, _326

  %% Unique:
  %%    _1241
  _1255 = succeeded:body _1241
  br ^1

1245:
  %% inline_SUITE.erl:230
  %% Aliased:
  %%    _107
  %% Anno: #{inlined => {'-lists/1-inlined-10-',1}}
  _1242 = match_fail `function_clause`, _107

  %% Unique:
  %%    _1242
  _1260 = succeeded:body _1242
  br ^1

1:
  _1243 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1243
}

%% inline_SUITE.erl:231
%% Counter = 1245
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-20-'`(_103) {
0:
  %% inline_SUITE.erl:232
  %% Argument types:
  %%    
  _102 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _102, 
  %%    _103
  _693 = put_list _103, _102

  %% inline_SUITE.erl:232
  %% Unique:
  %%    _693
  _1240 = call (`erlang`:`put`/2), `inline_SUITE`, _693

  %% Aliased:
  %%    _1240
  _1243 = succeeded:body _1240
  br _1243, ^1243, ^1

1243:
  %% Result type:
  %%    'true'
  ret `true`

1:
  _1241 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1241
}

%% Counter = 1258
%% bs_ensure_opt: true
%% Parameters
%%    _99 =>
%%     fun((_) -> 'false')
function `inline_SUITE`:`'-lists/1-lists^any/1-9-'`(_681, _99) {
0:
  %% Aliased:
  %%    _681
  _1249 = is_nonempty_list _681
  br _1249, ^1249, ^1241

1249:
  %% Argument types:
  %%    _681 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _681
  _686 = get_hd _681

  %% Argument types:
  %%    _681 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _681
  _685 = get_tl _681

  %% inline_SUITE.erl:223
  %% Result type:
  %%    'false'
  %% Argument types:
  %%    (`'-lists/1-fun-19-'`/1) => fun((_) -> 'false')
  %% Aliased:
  %%    _686
  _687 = call (`'-lists/1-fun-19-'`/1), _686

  %% Unique:
  %%    _687
  _1242 = succeeded:body _687
  br _1242, ^1247, ^1

1247:
  %% inline_SUITE.erl:223
  %% Result type:
  %%    'false'
  %% Aliased:
  %%    _99, 
  %%    _685
  _1235 = call (`'-lists/1-lists^any/1-9-'`/2), _685, _99

  %% Unique:
  %%    _1235
  _1245 = succeeded:body _1235
  br _1245, ^1245, ^1

1245:
  %% Result type:
  %%    'false'
  %% Unique:
  %%    _1235
  ret _1235

1241:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _681
  _1252 = bif:'=:=' _681, `[]`
  br _1252, ^1251, ^1240

1251:
  %% Result type:
  %%    'false'
  ret `false`

1240:
  %% Argument types:
  %%    _681 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _681
  _683 = put_list _681, `[]`

  %% Argument types:
  %%    _99 => fun((_) -> 'false')
  %%    _683 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _99
  %% Unique:
  %%    _683
  _684 = put_list _99, _683

  %% inline_SUITE.erl:223
  %% Unique:
  %%    _684
  _1237 = call (`erlang`:`error`/2), `function_clause`, _684

  %% Aliased:
  %%    _1237
  _1253 = succeeded:body _1237
  br ^1

1:
  _1238 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1238
}

%% inline_SUITE.erl:224
%% Counter = 1239
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-19-'`(_97) {
0:
  %% inline_SUITE.erl:225
  %% Argument types:
  %%    
  _96 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _96, 
  %%    _97
  _680 = put_list _97, _96

  %% inline_SUITE.erl:225
  %% Unique:
  %%    _680
  _1234 = call (`erlang`:`put`/2), `inline_SUITE`, _680

  %% Aliased:
  %%    _1234
  _1237 = succeeded:body _1234
  br _1237, ^1237, ^1

1237:
  %% Result type:
  %%    'false'
  ret `false`

1:
  _1235 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1235
}

%% inline_SUITE.erl:227
%% Counter = 1236
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-18-'`(_93) {
0:
  %% inline_SUITE.erl:227
  %% Argument types:
  %%    
  _92 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _92
  %% Unique:
  %%    _93
  _1233 = put_tuple _93, _92
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1233
  ret _1233
}

%% inline_SUITE.erl:223
%% Counter = 1257
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-17-'`(_89, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _89
  _1247 = bif:is_tuple _89
  br _1247, ^1247, ^1235

1247:
  %% Argument types:
  %%    _89 => {...}
  %% Aliased:
  %%    _89
  _1248 = bif:tuple_size _89

  %% Argument types:
  %%    _1248 => 0..16777215
  %% Unique:
  %%    _1248
  _1249 = bif:'=:=' _1248, `2`
  br _1249, ^1255, ^1235

1255:
  %% Result type:
  %%    'false'
  _87 = make_fun (`'-lists/1-fun-16-'`/1)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _675 = put_list List, `[]`

  %% Argument types:
  %%    _87 => fun((_) -> 'false')
  %%    _675 => nonempty_list(any())
  %% Aliased:
  %%    _87
  %% Unique:
  %%    _675
  _676 = put_list _87, _675

  %% inline_SUITE.erl:223
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _676
  _321 = call (`my_apply`/4), `lists`, `any`, _676, `[]`

  %% Aliased:
  %%    _321
  _1236 = succeeded:body _321
  br _1236, ^1241, ^1

1241:
  %% Argument types:
  %%    _89 => {any(), any()}
  %% Aliased:
  %%    _89
  _673 = get_tuple_element _89, `0`

  %% Argument types:
  %%    _321 => {any(), any()}
  %% Aliased:
  %%    _321
  _678 = get_tuple_element _321, `0`

  %% inline_SUITE.erl:223
  %% Argument types:
  %%    
  %% Aliased:
  %%    _673, 
  %%    _678
  _324 = bif:'=:=' _678, _673
  br _324, ^1253, ^1238

1253:
  %% Argument types:
  %%    _321 => {any(), any()}
  %% Aliased:
  %%    _321
  _677 = get_tuple_element _321, `1`

  %% Argument types:
  %%    _89 => {any(), any()}
  %% Aliased:
  %%    _89
  _672 = get_tuple_element _89, `1`

  %% inline_SUITE.erl:223
  %% Argument types:
  %%    
  %% Aliased:
  %%    _672, 
  %%    _677
  _325 = bif:'=:=' _677, _672
  br _325, ^1240, ^1238

1240:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _321
  ret _321

1238:
  %% inline_SUITE.erl:223
  %% Aliased:
  %%    _321
  _1231 = match_fail `badmatch`, _321

  %% Unique:
  %%    _1231
  _1245 = succeeded:body _1231
  br ^1

1235:
  %% inline_SUITE.erl:223
  %% Aliased:
  %%    _89
  %% Anno: #{inlined => {'-lists/1-inlined-8-',1}}
  _1232 = match_fail `function_clause`, _89

  %% Unique:
  %%    _1232
  _1250 = succeeded:body _1232
  br ^1

1:
  _1233 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1233
}

%% inline_SUITE.erl:224
%% Counter = 1235
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-16-'`(_85) {
0:
  %% inline_SUITE.erl:225
  %% Argument types:
  %%    
  _84 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _84, 
  %%    _85
  _674 = put_list _85, _84

  %% inline_SUITE.erl:225
  %% Unique:
  %%    _674
  _1230 = call (`erlang`:`put`/2), `inline_SUITE`, _674

  %% Aliased:
  %%    _1230
  _1233 = succeeded:body _1230
  br _1233, ^1233, ^1

1233:
  %% Result type:
  %%    'false'
  ret `false`

1:
  _1231 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1231
}

%% Counter = 1248
%% bs_ensure_opt: true
%% Parameters
%%    _81 =>
%%     fun((_) -> 'false' | 'true')
function `inline_SUITE`:`'-lists/1-lists^filter/1-7-'`(_663, _81) {
0:
  %% Aliased:
  %%    _663
  _1239 = is_nonempty_list _663
  br _1239, ^1239, ^1231

1239:
  %% Argument types:
  %%    _663 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _663
  _668 = get_hd _663

  %% Argument types:
  %%    _663 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _663
  _667 = get_tl _663

  %% inline_SUITE.erl:216
  %% Result type:
  %%    'false' | 'true'
  %% Argument types:
  %%    (`'-lists/1-fun-15-'`/1) => fun((_) -> 'false' | 'true')
  %% Aliased:
  %%    _668
  B = call (`'-lists/1-fun-15-'`/1), _668

  %% Unique:
  %%    B
  _1232 = succeeded:body B
  br _1232, ^1232, ^1

1232:
  %% inline_SUITE.erl:216
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _81, 
  %%    _667
  _443 = call (`'-lists/1-lists^filter/1-7-'`/2), _667, _81

  %% Aliased:
  %%    _443
  _1233 = succeeded:body _443
  br _1233, ^1233, ^1

1233:
  br B, ^1237, ^1236

1237:
  %% Argument types:
  %%    _443 => list(any())
  %% Aliased:
  %%    _443, 
  %%    _668
  _1225 = put_list _668, _443
  %% Result type:
  %%    nonempty_list(any())
  %% Unique:
  %%    _1225
  ret _1225

1236:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _443
  ret _443

1231:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _663
  _1242 = bif:'=:=' _663, `[]`
  br _1242, ^1241, ^1230

1241:
  %% Result type:
  %%    nil()
  ret `[]`

1230:
  %% Argument types:
  %%    _663 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _663
  _665 = put_list _663, `[]`

  %% Argument types:
  %%    _81 => fun((_) -> 'false' | 'true')
  %%    _665 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _81
  %% Unique:
  %%    _665
  _666 = put_list _81, _665

  %% inline_SUITE.erl:216
  %% Unique:
  %%    _666
  _1227 = call (`erlang`:`error`/2), `function_clause`, _666

  %% Aliased:
  %%    _1227
  _1243 = succeeded:body _1227
  br ^1

1:
  _1228 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1228
}

%% inline_SUITE.erl:217
%% Counter = 1231
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-15-'`(_79) {
0:
  %% inline_SUITE.erl:218
  %% Argument types:
  %%    
  _76 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _76, 
  %%    _79
  _662 = put_list _79, _76

  %% inline_SUITE.erl:218
  %% Unique:
  %%    _662
  _1223 = call (`erlang`:`put`/2), `inline_SUITE`, _662

  %% Aliased:
  %%    _1223
  _1227 = succeeded:body _1223
  br _1227, ^1227, ^1

1227:
  %% inline_SUITE.erl:219
  %% Argument types:
  %%    
  %% Aliased:
  %%    _79
  _77 = bif:'bsr' _79, `1`

  %% Unique:
  %%    _77
  _1228 = succeeded:body _77
  br _1228, ^1228, ^1

1228:
  %% inline_SUITE.erl:219
  %% Argument types:
  %%    _77 => integer()
  %% Unique:
  %%    _77
  _78 = bif:'band' _77, `1`

  %% inline_SUITE.erl:219
  %% Argument types:
  %%    _78 => 0..1
  %% Unique:
  %%    _78
  _1224 = bif:'=/=' _78, `0`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _1224
  ret _1224

1:
  _1225 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1225
}

%% inline_SUITE.erl:220
%% Counter = 1225
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-14-'`(_73) {
0:
  %% inline_SUITE.erl:220
  %% Argument types:
  %%    
  _72 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _72, 
  %%    _73
  _1222 = put_tuple _73, _72
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1222
  ret _1222
}

%% inline_SUITE.erl:216
%% Counter = 1246
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-13-'`(_69, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _69
  _1236 = bif:is_tuple _69
  br _1236, ^1236, ^1224

1236:
  %% Argument types:
  %%    _69 => {...}
  %% Aliased:
  %%    _69
  _1237 = bif:tuple_size _69

  %% Argument types:
  %%    _1237 => 0..16777215
  %% Unique:
  %%    _1237
  _1238 = bif:'=:=' _1237, `2`
  br _1238, ^1244, ^1224

1244:
  %% Result type:
  %%    'false' | 'true'
  _67 = make_fun (`'-lists/1-fun-12-'`/1)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _657 = put_list List, `[]`

  %% Argument types:
  %%    _67 => fun((_) -> 'false' | 'true')
  %%    _657 => nonempty_list(any())
  %% Aliased:
  %%    _67
  %% Unique:
  %%    _657
  _658 = put_list _67, _657

  %% inline_SUITE.erl:216
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _658
  _316 = call (`my_apply`/4), `lists`, `filter`, _658, `[]`

  %% Aliased:
  %%    _316
  _1225 = succeeded:body _316
  br _1225, ^1230, ^1

1230:
  %% Argument types:
  %%    _69 => {any(), any()}
  %% Aliased:
  %%    _69
  _655 = get_tuple_element _69, `0`

  %% Argument types:
  %%    _316 => {any(), any()}
  %% Aliased:
  %%    _316
  _660 = get_tuple_element _316, `0`

  %% inline_SUITE.erl:216
  %% Argument types:
  %%    
  %% Aliased:
  %%    _655, 
  %%    _660
  _319 = bif:'=:=' _660, _655
  br _319, ^1242, ^1227

1242:
  %% Argument types:
  %%    _316 => {any(), any()}
  %% Aliased:
  %%    _316
  _659 = get_tuple_element _316, `1`

  %% Argument types:
  %%    _69 => {any(), any()}
  %% Aliased:
  %%    _69
  _654 = get_tuple_element _69, `1`

  %% inline_SUITE.erl:216
  %% Argument types:
  %%    
  %% Aliased:
  %%    _654, 
  %%    _659
  _320 = bif:'=:=' _659, _654
  br _320, ^1229, ^1227

1229:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _316
  ret _316

1227:
  %% inline_SUITE.erl:216
  %% Aliased:
  %%    _316
  _1220 = match_fail `badmatch`, _316

  %% Unique:
  %%    _1220
  _1234 = succeeded:body _1220
  br ^1

1224:
  %% inline_SUITE.erl:216
  %% Aliased:
  %%    _69
  %% Anno: #{inlined => {'-lists/1-inlined-6-',1}}
  _1221 = match_fail `function_clause`, _69

  %% Unique:
  %%    _1221
  _1239 = succeeded:body _1221
  br ^1

1:
  _1222 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1222
}

%% inline_SUITE.erl:217
%% Counter = 1226
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-12-'`(_65) {
0:
  %% inline_SUITE.erl:218
  %% Argument types:
  %%    
  _62 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _62, 
  %%    _65
  _656 = put_list _65, _62

  %% inline_SUITE.erl:218
  %% Unique:
  %%    _656
  _1218 = call (`erlang`:`put`/2), `inline_SUITE`, _656

  %% Aliased:
  %%    _1218
  _1222 = succeeded:body _1218
  br _1222, ^1222, ^1

1222:
  %% inline_SUITE.erl:219
  %% Argument types:
  %%    
  %% Aliased:
  %%    _65
  _63 = bif:'bsr' _65, `1`

  %% Unique:
  %%    _63
  _1223 = succeeded:body _63
  br _1223, ^1223, ^1

1223:
  %% inline_SUITE.erl:219
  %% Argument types:
  %%    _63 => integer()
  %% Unique:
  %%    _63
  _64 = bif:'band' _63, `1`

  %% inline_SUITE.erl:219
  %% Argument types:
  %%    _64 => 0..1
  %% Unique:
  %%    _64
  _1219 = bif:'=/=' _64, `0`
  %% Result type:
  %%    'false' | 'true'
  %% Unique:
  %%    _1219
  ret _1219

1:
  _1220 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1220
}

%% Counter = 1231
%% bs_ensure_opt: true
%% Parameters
%%    _59 =>
%%     fun((_))
function `inline_SUITE`:`'-lists/1-lists^foreach/1-5-'`(_645, _59) {
0:
  %% Aliased:
  %%    _645
  _1222 = is_nonempty_list _645
  br _1222, ^1222, ^1219

1222:
  %% Argument types:
  %%    _645 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _645
  _650 = get_hd _645

  %% Argument types:
  %%    _645 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _645
  _649 = get_tl _645

  %% inline_SUITE.erl:210
  %% Argument types:
  %%    (`'-lists/1-fun-11-'`/1) => fun((_))
  %% Aliased:
  %%    _650
  _1213 = call (`'-lists/1-fun-11-'`/1), _650

  %% Aliased:
  %%    _1213
  _1220 = succeeded:body _1213
  br _1220, ^1220, ^1

1220:
  %% inline_SUITE.erl:210
  %% Result type:
  %%    'ok'
  %% Aliased:
  %%    _59, 
  %%    _649
  _1214 = call (`'-lists/1-lists^foreach/1-5-'`/2), _649, _59

  %% Unique:
  %%    _1214
  _1221 = succeeded:body _1214
  br _1221, ^1221, ^1

1221:
  %% Result type:
  %%    'ok'
  %% Unique:
  %%    _1214
  ret _1214

1219:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _645
  _1225 = bif:'=:=' _645, `[]`
  br _1225, ^1224, ^1218

1224:
  %% Result type:
  %%    'ok'
  ret `ok`

1218:
  %% Argument types:
  %%    _645 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _645
  _647 = put_list _645, `[]`

  %% Argument types:
  %%    _59 => fun((_))
  %%    _647 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _59
  %% Unique:
  %%    _647
  _648 = put_list _59, _647

  %% inline_SUITE.erl:210
  %% Unique:
  %%    _648
  _1215 = call (`erlang`:`error`/2), `function_clause`, _648

  %% Aliased:
  %%    _1215
  _1226 = succeeded:body _1215
  br ^1

1:
  _1216 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1216
}

%% inline_SUITE.erl:211
%% Counter = 1218
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-11-'`(_57) {
0:
  %% inline_SUITE.erl:212
  %% Argument types:
  %%    
  %% Aliased:
  %%    _57
  _56 = bif:'bor' _57, `7`

  %% Unique:
  %%    _56
  _1215 = succeeded:body _56
  br _1215, ^1215, ^1

1215:
  %% inline_SUITE.erl:212
  %% Argument types:
  %%    
  _55 = bif:get `inline_SUITE`

  %% Argument types:
  %%    _56 => integer()
  %% Aliased:
  %%    _55
  %% Unique:
  %%    _56
  _644 = put_list _56, _55

  %% inline_SUITE.erl:212
  %% Unique:
  %%    _644
  _1212 = call (`erlang`:`put`/2), `inline_SUITE`, _644

  %% Aliased:
  %%    _1212
  _1216 = succeeded:body _1212
  br _1216, ^1216, ^1

1216:
  %% Aliased:
  %%    _1212
  ret _1212

1:
  _1213 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1213
}

%% inline_SUITE.erl:213
%% Counter = 1214
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-10-'`(_52) {
0:
  %% inline_SUITE.erl:213
  %% Argument types:
  %%    
  _51 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _51
  %% Unique:
  %%    _52
  _1211 = put_tuple _52, _51
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1211
  ret _1211
}

%% inline_SUITE.erl:210
%% Counter = 1235
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-9-'`(_48, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _48
  _1225 = bif:is_tuple _48
  br _1225, ^1225, ^1213

1225:
  %% Argument types:
  %%    _48 => {...}
  %% Aliased:
  %%    _48
  _1226 = bif:tuple_size _48

  %% Argument types:
  %%    _1226 => 0..16777215
  %% Unique:
  %%    _1226
  _1227 = bif:'=:=' _1226, `2`
  br _1227, ^1233, ^1213

1233:
  _46 = make_fun (`'-lists/1-fun-8-'`/1)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _639 = put_list List, `[]`

  %% Argument types:
  %%    _46 => fun((_))
  %%    _639 => nonempty_list(any())
  %% Aliased:
  %%    _46
  %% Unique:
  %%    _639
  _640 = put_list _46, _639

  %% inline_SUITE.erl:210
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _640
  _311 = call (`my_apply`/4), `lists`, `foreach`, _640, `[]`

  %% Aliased:
  %%    _311
  _1214 = succeeded:body _311
  br _1214, ^1219, ^1

1219:
  %% Argument types:
  %%    _48 => {any(), any()}
  %% Aliased:
  %%    _48
  _637 = get_tuple_element _48, `0`

  %% Argument types:
  %%    _311 => {any(), any()}
  %% Aliased:
  %%    _311
  _642 = get_tuple_element _311, `0`

  %% inline_SUITE.erl:210
  %% Argument types:
  %%    
  %% Aliased:
  %%    _637, 
  %%    _642
  _314 = bif:'=:=' _642, _637
  br _314, ^1231, ^1216

1231:
  %% Argument types:
  %%    _311 => {any(), any()}
  %% Aliased:
  %%    _311
  _641 = get_tuple_element _311, `1`

  %% Argument types:
  %%    _48 => {any(), any()}
  %% Aliased:
  %%    _48
  _636 = get_tuple_element _48, `1`

  %% inline_SUITE.erl:210
  %% Argument types:
  %%    
  %% Aliased:
  %%    _636, 
  %%    _641
  _315 = bif:'=:=' _641, _636
  br _315, ^1218, ^1216

1218:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _311
  ret _311

1216:
  %% inline_SUITE.erl:210
  %% Aliased:
  %%    _311
  _1209 = match_fail `badmatch`, _311

  %% Unique:
  %%    _1209
  _1223 = succeeded:body _1209
  br ^1

1213:
  %% inline_SUITE.erl:210
  %% Aliased:
  %%    _48
  %% Anno: #{inlined => {'-lists/1-inlined-4-',1}}
  _1210 = match_fail `function_clause`, _48

  %% Unique:
  %%    _1210
  _1228 = succeeded:body _1210
  br ^1

1:
  _1211 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1211
}

%% inline_SUITE.erl:211
%% Counter = 1214
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-8-'`(_44) {
0:
  %% inline_SUITE.erl:212
  %% Argument types:
  %%    
  %% Aliased:
  %%    _44
  _43 = bif:'bor' _44, `7`

  %% Unique:
  %%    _43
  _1211 = succeeded:body _43
  br _1211, ^1211, ^1

1211:
  %% inline_SUITE.erl:212
  %% Argument types:
  %%    
  _42 = bif:get `inline_SUITE`

  %% Argument types:
  %%    _43 => integer()
  %% Aliased:
  %%    _42
  %% Unique:
  %%    _43
  _638 = put_list _43, _42

  %% inline_SUITE.erl:212
  %% Unique:
  %%    _638
  _1208 = call (`erlang`:`put`/2), `inline_SUITE`, _638

  %% Aliased:
  %%    _1208
  _1212 = succeeded:body _1208
  br _1212, ^1212, ^1

1212:
  %% Aliased:
  %%    _1208
  ret _1208

1:
  _1209 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1209
}

%% Counter = 1222
%% bs_ensure_opt: true
%% Parameters
%%    _39 =>
%%     fun((_) -> list(any()))
function `inline_SUITE`:`'-lists/1-lists^flatmap/1-3-'`(_625, _39) {
0:
  %% Aliased:
  %%    _625
  _1213 = is_nonempty_list _625
  br _1213, ^1213, ^1209

1213:
  %% Argument types:
  %%    _625 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _625
  _630 = get_hd _625

  %% Argument types:
  %%    _625 => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    _625
  _629 = get_tl _625

  %% inline_SUITE.erl:202
  %% Result type:
  %%    list(any())
  %% Argument types:
  %%    (`'-lists/1-fun-7-'`/1) => fun((_) -> list(any()))
  %% Aliased:
  %%    _630
  _631 = call (`'-lists/1-fun-7-'`/1), _630

  %% Aliased:
  %%    _631
  _1210 = succeeded:body _631
  br _1210, ^1210, ^1

1210:
  %% inline_SUITE.erl:202
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _39, 
  %%    _629
  _632 = call (`'-lists/1-lists^flatmap/1-3-'`/2), _629, _39

  %% Aliased:
  %%    _632
  _1211 = succeeded:body _632
  br _1211, ^1211, ^1

1211:
  %% inline_SUITE.erl:202
  %% Aliased:
  %%    _631, 
  %%    _632
  _1204 = call (`erlang`:`'++'`/2), _631, _632
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _1204
  ret _1204

1209:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _625
  _1216 = bif:'=:=' _625, `[]`
  br _1216, ^1215, ^1208

1215:
  %% Result type:
  %%    nil()
  ret `[]`

1208:
  %% Argument types:
  %%    _625 => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    _625
  _627 = put_list _625, `[]`

  %% Argument types:
  %%    _39 => fun((_) -> list(any()))
  %%    _627 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _39
  %% Unique:
  %%    _627
  _628 = put_list _39, _627

  %% inline_SUITE.erl:202
  %% Unique:
  %%    _628
  _1205 = call (`erlang`:`error`/2), `function_clause`, _628

  %% Aliased:
  %%    _1205
  _1217 = succeeded:body _1205
  br ^1

1:
  _1206 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1206
}

%% inline_SUITE.erl:203
%% Counter = 1209
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-7-'`(_37) {
0:
  %% inline_SUITE.erl:204
  %% Aliased:
  %%    _37
  _623 = call (`lists`:`duplicate`/2), _37, _37

  %% Aliased:
  %%    _623
  _1206 = succeeded:body _623
  br _1206, ^1206, ^1

1206:
  %% inline_SUITE.erl:205
  %% Argument types:
  %%    
  _36 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _36, 
  %%    _37
  _624 = put_list _37, _36

  %% inline_SUITE.erl:205
  %% Unique:
  %%    _624
  _1203 = call (`erlang`:`put`/2), `inline_SUITE`, _624

  %% Aliased:
  %%    _1203
  _1207 = succeeded:body _1203
  br _1207, ^1207, ^1

1207:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _623
  ret _623

1:
  _1204 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1204
}

%% inline_SUITE.erl:207
%% Counter = 1205
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-6-'`(_32) {
0:
  %% inline_SUITE.erl:207
  %% Argument types:
  %%    
  _31 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _31, 
  %%    _32
  _1202 = put_tuple _32, _31
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1202
  ret _1202
}

%% inline_SUITE.erl:202
%% Counter = 1226
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-5-'`(_28, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _28
  _1216 = bif:is_tuple _28
  br _1216, ^1216, ^1204

1216:
  %% Argument types:
  %%    _28 => {...}
  %% Aliased:
  %%    _28
  _1217 = bif:tuple_size _28

  %% Argument types:
  %%    _1217 => 0..16777215
  %% Unique:
  %%    _1217
  _1218 = bif:'=:=' _1217, `2`
  br _1218, ^1224, ^1204

1224:
  %% Result type:
  %%    list(any())
  _26 = make_fun (`'-lists/1-fun-4-'`/1)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _618 = put_list List, `[]`

  %% Argument types:
  %%    _26 => fun((_) -> list(any()))
  %%    _618 => nonempty_list(any())
  %% Aliased:
  %%    _26
  %% Unique:
  %%    _618
  _619 = put_list _26, _618

  %% inline_SUITE.erl:202
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _619
  _306 = call (`my_apply`/4), `lists`, `flatmap`, _619, `[]`

  %% Aliased:
  %%    _306
  _1205 = succeeded:body _306
  br _1205, ^1210, ^1

1210:
  %% Argument types:
  %%    _28 => {any(), any()}
  %% Aliased:
  %%    _28
  _615 = get_tuple_element _28, `0`

  %% Argument types:
  %%    _306 => {any(), any()}
  %% Aliased:
  %%    _306
  _621 = get_tuple_element _306, `0`

  %% inline_SUITE.erl:202
  %% Argument types:
  %%    
  %% Aliased:
  %%    _615, 
  %%    _621
  _309 = bif:'=:=' _621, _615
  br _309, ^1222, ^1207

1222:
  %% Argument types:
  %%    _306 => {any(), any()}
  %% Aliased:
  %%    _306
  _620 = get_tuple_element _306, `1`

  %% Argument types:
  %%    _28 => {any(), any()}
  %% Aliased:
  %%    _28
  _614 = get_tuple_element _28, `1`

  %% inline_SUITE.erl:202
  %% Argument types:
  %%    
  %% Aliased:
  %%    _614, 
  %%    _620
  _310 = bif:'=:=' _620, _614
  br _310, ^1209, ^1207

1209:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _306
  ret _306

1207:
  %% inline_SUITE.erl:202
  %% Aliased:
  %%    _306
  _1200 = match_fail `badmatch`, _306

  %% Unique:
  %%    _1200
  _1214 = succeeded:body _1200
  br ^1

1204:
  %% inline_SUITE.erl:202
  %% Aliased:
  %%    _28
  %% Anno: #{inlined => {'-lists/1-inlined-2-',1}}
  _1201 = match_fail `function_clause`, _28

  %% Unique:
  %%    _1201
  _1219 = succeeded:body _1201
  br ^1

1:
  _1202 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1202
}

%% inline_SUITE.erl:203
%% Counter = 1205
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-4-'`(_24) {
0:
  %% inline_SUITE.erl:204
  %% Aliased:
  %%    _24
  _616 = call (`lists`:`duplicate`/2), _24, _24

  %% Aliased:
  %%    _616
  _1202 = succeeded:body _616
  br _1202, ^1202, ^1

1202:
  %% inline_SUITE.erl:205
  %% Argument types:
  %%    
  _23 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _23, 
  %%    _24
  _617 = put_list _24, _23

  %% inline_SUITE.erl:205
  %% Unique:
  %%    _617
  _1199 = call (`erlang`:`put`/2), `inline_SUITE`, _617

  %% Aliased:
  %%    _1199
  _1203 = succeeded:body _1199
  br _1203, ^1203, ^1

1203:
  %% Result type:
  %%    list(any())
  %% Aliased:
  %%    _616
  ret _616

1:
  _1200 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1200
}

%% Counter = 1212
%% bs_ensure_opt: true
%% Parameters
%%    _19 =>
%%     fun((_) -> 0..255)
function `inline_SUITE`:`'-lists/1-lists^map/1-1-'`(Xs, _19) {
0:
  %% Aliased:
  %%    Xs
  _1203 = is_nonempty_list Xs
  br _1203, ^1203, ^1200

1203:
  %% Argument types:
  %%    Xs => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    Xs
  _609 = get_hd Xs

  %% Argument types:
  %%    Xs => nonempty_improper_list(any(), any())
  %% Aliased:
  %%    Xs
  _608 = get_tl Xs

  %% inline_SUITE.erl:194
  %% Result type:
  %%    0..255
  %% Argument types:
  %%    (`'-lists/1-fun-3-'`/1) => fun((_) -> 0..255)
  %% Aliased:
  %%    _609
  H = call (`'-lists/1-fun-3-'`/1), _609

  %% Unique:
  %%    H
  _1201 = succeeded:body H
  br _1201, ^1201, ^1

1201:
  %% inline_SUITE.erl:194
  %% Result type:
  %%    list(0..255)
  %% Aliased:
  %%    _19, 
  %%    _608
  _610 = call (`'-lists/1-lists^map/1-1-'`/2), _608, _19

  %% Unique:
  %%    _610
  _1202 = succeeded:body _610
  br _1202, ^1202, ^1

1202:
  %% Argument types:
  %%    H => 0..255
  %%    _610 => list(0..255)
  %% Unique:
  %%    _610, 
  %%    H
  _1195 = put_list H, _610
  %% Result type:
  %%    nonempty_list(0..255)
  %% Unique:
  %%    _1195
  ret _1195

1200:
  %% Argument types:
  %%    
  %% Aliased:
  %%    Xs
  _1206 = bif:'=:=' Xs, `[]`
  br _1206, ^1205, ^1199

1205:
  %% Result type:
  %%    nil()
  ret `[]`

1199:
  %% Argument types:
  %%    Xs => atom() | nonempty_improper_list(any(), any()) | number() | {...} | other()
  %% Aliased:
  %%    Xs
  _606 = put_list Xs, `[]`

  %% Argument types:
  %%    _19 => fun((_) -> 0..255)
  %%    _606 => nonempty_list(atom() | nonempty_improper_list(any(), any()) | number() | {...} | other())
  %% Aliased:
  %%    _19
  %% Unique:
  %%    _606
  _607 = put_list _19, _606

  %% inline_SUITE.erl:194
  %% Unique:
  %%    _607
  _1196 = call (`erlang`:`error`/2), `function_clause`, _607

  %% Aliased:
  %%    _1196
  _1207 = succeeded:body _1196
  br ^1

1:
  _1197 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1197
}

%% inline_SUITE.erl:195
%% Counter = 1200
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-3-'`(_17) {
0:
  %% inline_SUITE.erl:196
  %% Argument types:
  %%    
  %% Aliased:
  %%    _17
  _604 = bif:'band' _17, `255`

  %% Unique:
  %%    _604
  _1197 = succeeded:body _604
  br _1197, ^1197, ^1

1197:
  %% inline_SUITE.erl:197
  %% Argument types:
  %%    
  _16 = bif:get `inline_SUITE`

  %% Argument types:
  %%    _17 => integer()
  %% Aliased:
  %%    _16
  %% Unique:
  %%    _17
  _605 = put_list _17, _16

  %% inline_SUITE.erl:197
  %% Unique:
  %%    _605
  _1194 = call (`erlang`:`put`/2), `inline_SUITE`, _605

  %% Aliased:
  %%    _1194
  _1198 = succeeded:body _1194
  br _1198, ^1198, ^1

1198:
  %% Result type:
  %%    0..255
  %% Unique:
  %%    _604
  ret _604

1:
  _1195 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1195
}

%% inline_SUITE.erl:199
%% Counter = 1196
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-2-'`(_12) {
0:
  %% inline_SUITE.erl:199
  %% Argument types:
  %%    
  _11 = bif:get `inline_SUITE`

  %% Argument types:
  %%    
  %% Aliased:
  %%    _11
  %% Unique:
  %%    _12
  _1193 = put_tuple _12, _11
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _1193
  ret _1193
}

%% inline_SUITE.erl:194
%% Counter = 1217
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-1-'`(_8, List) {
0:
  %% Argument types:
  %%    
  %% Aliased:
  %%    _8
  _1207 = bif:is_tuple _8
  br _1207, ^1207, ^1195

1207:
  %% Argument types:
  %%    _8 => {...}
  %% Aliased:
  %%    _8
  _1208 = bif:tuple_size _8

  %% Argument types:
  %%    _1208 => 0..16777215
  %% Unique:
  %%    _1208
  _1209 = bif:'=:=' _1208, `2`
  br _1209, ^1215, ^1195

1215:
  %% Result type:
  %%    0..255
  _6 = make_fun (`'-lists/1-fun-0-'`/1)

  %% Argument types:
  %%    
  %% Aliased:
  %%    List
  _599 = put_list List, `[]`

  %% Argument types:
  %%    _6 => fun((_) -> 0..255)
  %%    _599 => nonempty_list(any())
  %% Aliased:
  %%    _6
  %% Unique:
  %%    _599
  _600 = put_list _6, _599

  %% inline_SUITE.erl:194
  %% Result type:
  %%    {any(), any()}
  %% Unique:
  %%    _600
  _301 = call (`my_apply`/4), `lists`, `map`, _600, `[]`

  %% Aliased:
  %%    _301
  _1196 = succeeded:body _301
  br _1196, ^1201, ^1

1201:
  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _597 = get_tuple_element _8, `0`

  %% Argument types:
  %%    _301 => {any(), any()}
  %% Aliased:
  %%    _301
  _602 = get_tuple_element _301, `0`

  %% inline_SUITE.erl:194
  %% Argument types:
  %%    
  %% Aliased:
  %%    _597, 
  %%    _602
  _304 = bif:'=:=' _602, _597
  br _304, ^1213, ^1198

1213:
  %% Argument types:
  %%    _301 => {any(), any()}
  %% Aliased:
  %%    _301
  _601 = get_tuple_element _301, `1`

  %% Argument types:
  %%    _8 => {any(), any()}
  %% Aliased:
  %%    _8
  _596 = get_tuple_element _8, `1`

  %% inline_SUITE.erl:194
  %% Argument types:
  %%    
  %% Aliased:
  %%    _596, 
  %%    _601
  _305 = bif:'=:=' _601, _596
  br _305, ^1200, ^1198

1200:
  %% Result type:
  %%    {any(), any()}
  %% Aliased:
  %%    _301
  ret _301

1198:
  %% inline_SUITE.erl:194
  %% Aliased:
  %%    _301
  _1191 = match_fail `badmatch`, _301

  %% Unique:
  %%    _1191
  _1205 = succeeded:body _1191
  br ^1

1195:
  %% inline_SUITE.erl:194
  %% Aliased:
  %%    _8
  %% Anno: #{inlined => {'-lists/1-inlined-0-',1}}
  _1192 = match_fail `function_clause`, _8

  %% Unique:
  %%    _1192
  _1210 = succeeded:body _1192
  br ^1

1:
  _1193 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1193
}

%% inline_SUITE.erl:195
%% Counter = 1196
%% bs_ensure_opt: true
function `inline_SUITE`:`'-lists/1-fun-0-'`(_4) {
0:
  %% inline_SUITE.erl:196
  %% Argument types:
  %%    
  %% Aliased:
  %%    _4
  R = bif:'band' _4, `255`

  %% Unique:
  %%    R
  _1193 = succeeded:body R
  br _1193, ^1193, ^1

1193:
  %% inline_SUITE.erl:197
  %% Argument types:
  %%    
  _3 = bif:get `inline_SUITE`

  %% Argument types:
  %%    _4 => integer()
  %% Aliased:
  %%    _3
  %% Unique:
  %%    _4
  _598 = put_list _4, _3

  %% inline_SUITE.erl:197
  %% Unique:
  %%    _598
  _1190 = call (`erlang`:`put`/2), `inline_SUITE`, _598

  %% Aliased:
  %%    _1190
  _1194 = succeeded:body _1190
  br _1194, ^1194, ^1

1194:
  %% Result type:
  %%    0..255
  %% Unique:
  %%    R
  ret R

1:
  _1191 = call (`erlang`:`error`/1), `badarg`
  %% Result type:
  %%    none()
  ret _1191
}
